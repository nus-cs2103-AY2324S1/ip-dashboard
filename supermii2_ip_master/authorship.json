[{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"supermii2"},"content":"import java.util.Dictionary;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"supermii2"},"content":"import java.util.Hashtable;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"supermii2"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"supermii2"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"supermii2"},"content":" * Representation of a command","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"supermii2"},"content":" * that can be issued to the chatbot.","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"supermii2"},"content":" * ","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"supermii2"},"content":" * @author Alvis Ng (supermii2)","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"supermii2"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"supermii2"},"content":"public abstract class Command implements Consumer\u003cParser\u003e {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"supermii2"},"content":"    /** Code to be run when command is called. */","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"supermii2"},"content":"    public abstract void accept(Parser input);","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"supermii2"},"content":"    /** Lookup table of possible commands that can be used. */","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"supermii2"},"content":"    private static Dictionary\u003cString, Command\u003e COMMAND_LIST \u003d new Hashtable\u003cString, Command\u003e() {{","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"supermii2"},"content":"        put(\"bye\", new CommandBye());","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"supermii2"},"content":"        put(\"list\", new CommandTaskList());","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"supermii2"},"content":"        put(\"mark\", new CommandTaskMark(true));","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"supermii2"},"content":"        put(\"unmark\", new CommandTaskMark(false));","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"supermii2"},"content":"        put(\"todo\", new CommandTaskCreate(TaskTypes.TODO));","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"supermii2"},"content":"        put(\"deadline\" ,new CommandTaskCreate(TaskTypes.DEADLINE));","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"supermii2"},"content":"        put(\"event\", new CommandTaskCreate(TaskTypes.EVENT));","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"supermii2"},"content":"        put(\"delete\", new CommandTaskDelete());","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"supermii2"},"content":"    }};","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"supermii2"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"supermii2"},"content":"     * Method used to get the appropriate command from a keyword","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"supermii2"},"content":"     * @param keyword Keyword used to identify each command","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"supermii2"},"content":"     * @return Command corresponding to the keyword","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"supermii2"},"content":"     * @throws IllegalArgumentException Thrown when an unknown command is given.","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"supermii2"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"supermii2"},"content":"    public static Command getCommand(String keyword) throws IllegalArgumentException{","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"supermii2"},"content":"        Command command \u003d COMMAND_LIST.get(keyword);","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"supermii2"},"content":"        if (command \u003d\u003d null) throw new IllegalArgumentException(\"Unknown command!\");","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"supermii2"},"content":"        return command;","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"supermii2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"supermii2"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"supermii2":35}},{"path":"src/main/java/CommandBye.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"supermii2"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"supermii2"},"content":" * Representation of command","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"supermii2"},"content":" * used to terminate program.","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"supermii2"},"content":" * ","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"supermii2"},"content":" * @author Alvis Ng (supermii2)","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"supermii2"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"supermii2"},"content":"public class CommandBye extends Command{","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"supermii2"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"supermii2"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"supermii2"},"content":"     * Terminates chatbot.","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"supermii2"},"content":"     * @param input Unused.","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"supermii2"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"supermii2"},"content":"    public void accept(Parser input) {","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"supermii2"},"content":"        Rock.terminate();","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"supermii2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"supermii2"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"supermii2":16}},{"path":"src/main/java/CommandTaskCreate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"supermii2"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"supermii2"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"supermii2"},"content":" * Representation of possible types ","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"supermii2"},"content":" * of tasks that can be created.","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"supermii2"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"supermii2"},"content":"enum TaskTypes {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"supermii2"},"content":"    TODO,","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"supermii2"},"content":"    DEADLINE,","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"supermii2"},"content":"    EVENT,","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"supermii2"},"content":"}","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"supermii2"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"supermii2"},"content":" * Representation of command used","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"supermii2"},"content":" * to create a new task.","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"supermii2"},"content":" * ","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"supermii2"},"content":" * @author Alvis Ng (supermii2)","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"supermii2"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"supermii2"},"content":"public class CommandTaskCreate extends Command {","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"supermii2"},"content":"    TaskTypes taskType;","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"supermii2"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"supermii2"},"content":"     * Creates a Command object of","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"supermii2"},"content":"     * the specified task type.","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"supermii2"},"content":"     * @param taskType Type of task that the created command should create.","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"supermii2"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"supermii2"},"content":"    CommandTaskCreate(TaskTypes taskType) {","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"supermii2"},"content":"        super();","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"supermii2"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"supermii2"},"content":"    }    ","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"supermii2"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"supermii2"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"supermii2"},"content":"     * Creates task and adds it to the TaskList.","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"supermii2"},"content":"     * @param input Contains data for the Task to be created.","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"supermii2"},"content":"     * @throws IllegalArgumentException Thrown when data is missing or invalid data is given.","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"supermii2"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"supermii2"},"content":"    public void accept(Parser input) throws IllegalArgumentException{","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"supermii2"},"content":"        String taskName \u003d input.getDefaultString();","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"supermii2"},"content":"        if (taskName \u003d\u003d \"\") throw new IllegalArgumentException(\"Name of task cannot be empty!\");","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"supermii2"},"content":"        switch (this.taskType) {","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"supermii2"},"content":"            case TODO:","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"supermii2"},"content":"                Rock.taskList.add(new TaskTodo(taskName)); ","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"supermii2"},"content":"                Rock.respond(\"Todo Task added!\"); ","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"supermii2"},"content":"                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"supermii2"},"content":"            case DEADLINE:","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"supermii2"},"content":"                try {","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"supermii2"},"content":"                    String deadlineTime \u003d input.getTaggedInput(\"by\");","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"supermii2"},"content":"                    Rock.taskList.add(new TaskDeadline(taskName, deadlineTime));","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"supermii2"},"content":"                    Rock.respond(\"Deadline Task added!\");","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"supermii2"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"supermii2"},"content":"                } catch (NoSuchElementException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"supermii2"},"content":"                    throw new IllegalArgumentException(\"No deadline given. Indicate deadline with tag: /by\");","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"supermii2"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"supermii2"},"content":"            case EVENT:","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"supermii2"},"content":"                try {","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"supermii2"},"content":"                    String startTime \u003d input.getTaggedInput(\"from\");","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"supermii2"},"content":"                    String endTime \u003d input.getTaggedInput(\"to\");","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"supermii2"},"content":"                    Rock.taskList.add(new TaskEvent(taskName, startTime, endTime));","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"supermii2"},"content":"                    Rock.respond(\"Event Task added!\");","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"supermii2"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"supermii2"},"content":"                } catch (NoSuchElementException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"supermii2"},"content":"                    throw new IllegalArgumentException(\"No start or end time given. Indicate with /from and /to.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"supermii2"},"content":"                }                   ","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"supermii2"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"supermii2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"supermii2"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"supermii2":63}},{"path":"src/main/java/CommandTaskDelete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"supermii2"},"content":"import java.util.List;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"supermii2"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"supermii2"},"content":" * Representation of a command","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"supermii2"},"content":" * to delete a task from the task list.","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"supermii2"},"content":" * ","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"supermii2"},"content":" * @author Alvis Ng (supermii2)","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"supermii2"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"supermii2"},"content":"public class CommandTaskDelete extends Command {","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"supermii2"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"supermii2"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"supermii2"},"content":"     * Removes task from task list","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"supermii2"},"content":"     * @param input Contains data with index of removed task.","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"supermii2"},"content":"     * @throws IllegalArgumentException Thrown when invalid index is given.","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"supermii2"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"supermii2"},"content":"    public void accept(Parser input) {","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"supermii2"},"content":"        String inputString \u003d input.getDefaultString();","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"supermii2"},"content":"        List\u003cTask\u003e taskList \u003d Rock.taskList;","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"supermii2"},"content":"        try {","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"supermii2"},"content":"            int taskIdx \u003d Integer.parseInt(inputString);","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"supermii2"},"content":"            if (taskIdx \u003c 1 || taskIdx \u003e taskList.size()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"supermii2"},"content":"                throw new IllegalArgumentException(\"Invalid index given!\");","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"supermii2"},"content":"            } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"supermii2"},"content":"                Task removedTask \u003d Rock.taskList.remove(taskIdx - 1);","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"supermii2"},"content":"                Rock.respond(\"Task successfully removed!\\n\" + removedTask);","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"supermii2"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"supermii2"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"supermii2"},"content":"            throw new IllegalArgumentException(\"Invalid index given!\");","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"supermii2"},"content":"        }        ","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"supermii2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"supermii2"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"supermii2":30}},{"path":"src/main/java/CommandTaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"supermii2"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"supermii2"},"content":" * Representation of a command","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"supermii2"},"content":" * to list all tasks in list.","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"supermii2"},"content":" * ","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"supermii2"},"content":" * @author Alvis Ng (supermii2)","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"supermii2"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"supermii2"},"content":"public class CommandTaskList extends Command{","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"supermii2"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"supermii2"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"supermii2"},"content":"     * Removes task from task list.","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"supermii2"},"content":"     * @param input Unused","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"supermii2"},"content":"     * @throws IllegalArgumentException Thrown when invalid index is given.","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"supermii2"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"supermii2"},"content":"    public void accept(Parser input) {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"supermii2"},"content":"        if (Rock.taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"supermii2"},"content":"            Rock.respond(\"Task list is empty!\");","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"supermii2"},"content":"        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"supermii2"},"content":"            int counter \u003d 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"supermii2"},"content":"            String response \u003d \"Task List: \";","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"supermii2"},"content":"            for (Task task:Rock.taskList) {","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"supermii2"},"content":"                response +\u003d \"\\n\" + Integer.toString(counter) + \". \" + task.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"supermii2"},"content":"                counter++;","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"supermii2"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"supermii2"},"content":"            Rock.respond(response);","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"supermii2"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"supermii2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"supermii2"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"supermii2":27}},{"path":"src/main/java/CommandTaskMark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"supermii2"},"content":"import java.util.List;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"supermii2"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"supermii2"},"content":" * Representation of a command","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"supermii2"},"content":" * to mark or unmark a task","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"supermii2"},"content":" * as completed.","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"supermii2"},"content":" * ","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"supermii2"},"content":" * @author Alvis Ng (supermii2)","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"supermii2"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"supermii2"},"content":"public class CommandTaskMark extends Command {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"supermii2"},"content":"    /** Represents whether this command marks or unmarks a task. */","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"supermii2"},"content":"    boolean isMarking;","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"supermii2"},"content":"    CommandTaskMark(boolean isMarking) {","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"supermii2"},"content":"        super();","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"supermii2"},"content":"        this.isMarking \u003d isMarking;","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"supermii2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"supermii2"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"supermii2"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"supermii2"},"content":"     * Marks or unmarks task from list","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"supermii2"},"content":"     * @param input Contains index of task to be","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"supermii2"},"content":"     * @throws IllegalArgumentException Thrown when invalid index is given.","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"supermii2"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"supermii2"},"content":"    public void accept(Parser input) throws IllegalArgumentException{","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"supermii2"},"content":"        String inputString \u003d input.getDefaultString();","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"supermii2"},"content":"        List\u003cTask\u003e taskList \u003d Rock.taskList;","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"supermii2"},"content":"        try {","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"supermii2"},"content":"            int taskIdx \u003d Integer.parseInt(inputString);","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"supermii2"},"content":"            if (taskIdx \u003c 1 || taskIdx \u003e taskList.size()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"supermii2"},"content":"                throw new IllegalArgumentException(\"Invalid index given!\");","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"supermii2"},"content":"            } else if (taskList.get(taskIdx - 1).isCompleted()){","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"supermii2"},"content":"                if (this.isMarking) {","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"supermii2"},"content":"                    throw new IllegalArgumentException(\"Task already marked!\");","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"supermii2"},"content":"                } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"supermii2"},"content":"                    throw new IllegalArgumentException(\"Task already unmarked!\");","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"supermii2"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"supermii2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"supermii2"},"content":"            } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"supermii2"},"content":"                taskList.get(taskIdx - 1).setCompleted(this.isMarking);","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"supermii2"},"content":"                String response \u003d \"\";","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"supermii2"},"content":"                if (this.isMarking) {","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"supermii2"},"content":"                    response +\u003d \"Task marked successfully: \\n\";","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"supermii2"},"content":"                } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"supermii2"},"content":"                    response +\u003d \"Task unmarked successfully: \\n\";","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"supermii2"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"supermii2"},"content":"                response +\u003d taskList.get(taskIdx - 1).toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"supermii2"},"content":"                Rock.respond(response);","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"supermii2"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"supermii2"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"supermii2"},"content":"            throw new IllegalArgumentException(\"Invalid index given!\");","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"supermii2"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"supermii2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"supermii2"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"supermii2":51}},{"path":"src/main/java/Invoker.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"supermii2"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"supermii2"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"supermii2"},"content":" * Used to handle input given by chatbot","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"supermii2"},"content":" * and call the appropriate commands with","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"supermii2"},"content":" * the parsed data","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"supermii2"},"content":" * ","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"supermii2"},"content":" * @author Alvis Ng (supermii2)","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"supermii2"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"supermii2"},"content":"public class Invoker {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"supermii2"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"supermii2"},"content":"     * Helper function used to obtain the rest of a sentence sans keyword.","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"supermii2"},"content":"     * @param sentence String to be trimmed.","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"supermii2"},"content":"     * @return Same string without keyword, empty string if there is no other characters","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"supermii2"},"content":"     * besides keyword","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"supermii2"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"supermii2"},"content":"    private static String removeFirstWord(String sentence) {","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"supermii2"},"content":"        String[] words \u003d sentence.split(\" \", 2);","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"supermii2"},"content":"        return words.length \u003e 1 ? words[1] : \"\";","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"supermii2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"supermii2"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"supermii2"},"content":"     * Used to handle a given user input and call the corresponding method.","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"supermii2"},"content":"     * @param inputString User\u0027s input.","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"supermii2"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"supermii2"},"content":"    public static void handle(String inputString) {","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"supermii2"},"content":"        Parser input \u003d new Parser(removeFirstWord(inputString));","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"supermii2"},"content":"        String keyword \u003d inputString.split(\" \")[0];","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"supermii2"},"content":"        try {","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"supermii2"},"content":"            Consumer\u003cParser\u003e calledConsumer \u003d Command.getCommand(keyword);","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"supermii2"},"content":"            calledConsumer.accept(input);","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"supermii2"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"supermii2"},"content":"            Rock.respond(e.getMessage());","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"supermii2"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"supermii2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"supermii2"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"supermii2":34}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"supermii2"},"content":"import java.util.Dictionary;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"supermii2"},"content":"import java.util.Hashtable;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"supermii2"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"supermii2"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"supermii2"},"content":" * Used parse the additional data","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"supermii2"},"content":" * given in a command based on tags.","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"supermii2"},"content":" * ","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"supermii2"},"content":" * @author Alvis Ng (supermii2)","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"supermii2"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"supermii2"},"content":"public class Parser {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"supermii2"},"content":"    /**Untagged input*/","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"supermii2"},"content":"    private String defaultInput;","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"supermii2"},"content":"    /**Dictionary of tagged inputs*/","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"supermii2"},"content":"    private Dictionary\u003cString, String\u003e taggedInputs;","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"supermii2"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"supermii2"},"content":"     * Creates a parsed representation","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"supermii2"},"content":"     * of the input string given by","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"supermii2"},"content":"     * the user\u0027s input.","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"supermii2"},"content":"     * ","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"supermii2"},"content":"     * @param input","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"supermii2"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"supermii2"},"content":"    Parser(String input) {","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"supermii2"},"content":"        taggedInputs \u003d new Hashtable\u003c\u003e();","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"supermii2"},"content":"        String[] phrases \u003d input.split(\"/\");","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"supermii2"},"content":"        this.defaultInput \u003d phrases[0];","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"supermii2"},"content":"        for (int i \u003d 1; i \u003c phrases.length; i++) {","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"supermii2"},"content":"            String[] words \u003d phrases[i].split(\" \", 2);","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"supermii2"},"content":"            taggedInputs.put(words[0], words[1]);","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"supermii2"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"supermii2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"supermii2"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"supermii2"},"content":"     * Get the untagged input","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"supermii2"},"content":"     * @return Untagged input of parsed message","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"supermii2"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"supermii2"},"content":"    public String getDefaultString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"supermii2"},"content":"        return defaultInput;","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"supermii2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"supermii2"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"supermii2"},"content":"     * Get the tagged input with the","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"supermii2"},"content":"     * given tag","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"supermii2"},"content":"     * @param tag Tag used to find tagged input.","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"supermii2"},"content":"     * @return Tagged input of the given tag","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"supermii2"},"content":"     * @throws NoSuchElementException Tag not found in the inputs.","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"supermii2"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"supermii2"},"content":"    public String getTaggedInput(String tag) throws NoSuchElementException {","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"supermii2"},"content":"        String result \u003d taggedInputs.get(tag);","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"supermii2"},"content":"        if (result \u003d\u003d null) throw new NoSuchElementException(\"Invalid Tag!\");","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"supermii2"},"content":"        return result;","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"supermii2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"supermii2"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"supermii2":50}},{"path":"src/main/java/Rock.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"supermii2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"supermii2"},"content":"import java.util.List;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"supermii2"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"supermii2"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"supermii2"},"content":" * Rock is the name of and the main program used","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"supermii2"},"content":" * to run the chatbot for ip.","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"supermii2"},"content":" * ","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"supermii2"},"content":" * @author Alvis Ng (supermii2)","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"supermii2"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"supermii2"},"content":"public class Rock {","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"supermii2"},"content":"    public static List\u003cTask\u003e taskList;","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"supermii2"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"supermii2"},"content":"     * Standardised line break used for separate input and output messages.","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"supermii2"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"supermii2"},"content":"    public static String LINE_BREAK \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"supermii2"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"supermii2"},"content":"     * Logo used on startup.","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"supermii2"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"supermii2"},"content":"    private static String LOGO \u003d \"\\r\\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"supermii2"},"content":"            \"__________               __                          \\r\\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"supermii2"},"content":"            \"\\\\______   \\\\ ____   ____ |  | __ _____ _____    ____  \\r\\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"supermii2"},"content":"            \" |       _//  _ \\\\_/ ___\\\\|  |/ //     \\\\\\\\__  \\\\  /    \\\\ \\r\\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"supermii2"},"content":"            \" |    |   (  \u003c_\u003e )  \\\\___|    \u003c|  Y Y  \\\\/ __ \\\\|   |  \\\\\\r\\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"supermii2"},"content":"            \" |____|_  /\\\\____/ \\\\___  \u003e__|_ \\\\__|_|  (____  /___|  /\\r\\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"supermii2"},"content":"            \"        \\\\/            \\\\/     \\\\/     \\\\/     \\\\/     \\\\/ \\r\\n\";","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"supermii2"},"content":"            ","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"supermii2"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"supermii2"},"content":"     * Scanner object used for detecting user input.","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"supermii2"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"supermii2"},"content":"    private static Scanner scanner;","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"supermii2"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"supermii2"},"content":"     * Field used to determine when to terminate programme.","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"supermii2"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"supermii2"},"content":"    public static boolean isTerminated \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"supermii2"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"supermii2"},"content":"     * Prints input string given at an indent.","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"supermii2"},"content":"     * Used when message is not the end of","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"supermii2"},"content":"     * interaction.","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"supermii2"},"content":"     * @param words Words to be printed.","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"supermii2"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"supermii2"},"content":"    public static void say(String words) {","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"supermii2"},"content":"        System.out.println(\"\\t\" + words);","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"supermii2"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"supermii2"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"supermii2"},"content":"     * Prints input string given and creates ","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"supermii2"},"content":"     * a line break afterwards. Used to ","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"supermii2"},"content":"     * indicate the end of chatbot output and","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"supermii2"},"content":"     * that user can input again.","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"supermii2"},"content":"     * @param words Words to be printed.","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"supermii2"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"supermii2"},"content":"    public static void respond(String words) {","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"supermii2"},"content":"        String response \u003d words + \"\\n\" + LINE_BREAK;","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"supermii2"},"content":"        say(response.replaceAll(\"\\n\", \"\\n\\t\"));","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"supermii2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"supermii2"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"supermii2"},"content":"     * Subroutine called on startup of chatbot.","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"supermii2"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"supermii2"},"content":"    private static void onReady() {","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"supermii2"},"content":"        // Instantiate scanner object","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"supermii2"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-21"},{"lineNumber":61,"author":{"gitId":"supermii2"},"content":"        //Initiate Task List","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"supermii2"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"supermii2"},"content":"        // Intro Message","lastModifiedDate":"2023-08-21"},{"lineNumber":64,"author":{"gitId":"supermii2"},"content":"        say(LOGO);","lastModifiedDate":"2023-08-21"},{"lineNumber":65,"author":{"gitId":"supermii2"},"content":"        respond(\"How can I help you?\"); ","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"supermii2"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":67,"author":{"gitId":"supermii2"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":68,"author":{"gitId":"supermii2"},"content":"     * Subroutine called to terminate chatbot.","lastModifiedDate":"2023-08-21"},{"lineNumber":69,"author":{"gitId":"supermii2"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":70,"author":{"gitId":"supermii2"},"content":"    public static void terminate() {","lastModifiedDate":"2023-08-21"},{"lineNumber":71,"author":{"gitId":"supermii2"},"content":"        // Sets necessary fields to closed.","lastModifiedDate":"2023-08-21"},{"lineNumber":72,"author":{"gitId":"supermii2"},"content":"        isTerminated \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":73,"author":{"gitId":"supermii2"},"content":"        scanner.close();","lastModifiedDate":"2023-08-21"},{"lineNumber":74,"author":{"gitId":"supermii2"},"content":"        //Exit Message","lastModifiedDate":"2023-08-21"},{"lineNumber":75,"author":{"gitId":"supermii2"},"content":"        respond(\"Bye. Hope to see you again soon\");","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"supermii2"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":77,"author":{"gitId":"supermii2"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":78,"author":{"gitId":"supermii2"},"content":"     * Main Program for running chatbot.","lastModifiedDate":"2023-08-21"},{"lineNumber":79,"author":{"gitId":"supermii2"},"content":"     * @param args","lastModifiedDate":"2023-08-21"},{"lineNumber":80,"author":{"gitId":"supermii2"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":81,"author":{"gitId":"supermii2"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-21"},{"lineNumber":82,"author":{"gitId":"supermii2"},"content":"        onReady();","lastModifiedDate":"2023-08-21"},{"lineNumber":83,"author":{"gitId":"supermii2"},"content":"        while (!isTerminated) {","lastModifiedDate":"2023-08-21"},{"lineNumber":84,"author":{"gitId":"supermii2"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-08-21"},{"lineNumber":85,"author":{"gitId":"supermii2"},"content":"            say(LINE_BREAK);","lastModifiedDate":"2023-08-21"},{"lineNumber":86,"author":{"gitId":"supermii2"},"content":"            Invoker.handle(userInput);","lastModifiedDate":"2023-08-22"},{"lineNumber":87,"author":{"gitId":"supermii2"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":88,"author":{"gitId":"supermii2"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":89,"author":{"gitId":"supermii2"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"supermii2":89}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"supermii2"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"supermii2"},"content":" * Representation of a task","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"supermii2"},"content":" * recorded by the chatbot.","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"supermii2"},"content":" * ","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"supermii2"},"content":" * @author Alvis Ng (supermii2)","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"supermii2"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"supermii2"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"supermii2"},"content":"    /** Name of task */","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"supermii2"},"content":"    protected String taskName;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"supermii2"},"content":"    /** Whether the task has been completed */","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"supermii2"},"content":"    private boolean completed;","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"supermii2"},"content":"    /** One letter abbreviation for the task. */","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"supermii2"},"content":"    protected String oneLetterAbbrev;","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"supermii2"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"supermii2"},"content":"     * Creates a task with the given name","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"supermii2"},"content":"     * @param taskName Name of task","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"supermii2"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"supermii2"},"content":"    Task(String taskName) {","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"supermii2"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"supermii2"},"content":"        completed \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"supermii2"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"supermii2"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"supermii2"},"content":"     * Checks if a task is completed","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"supermii2"},"content":"     * @return State of completeness of task","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"supermii2"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"supermii2"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"supermii2"},"content":"        return this.completed;","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"supermii2"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"supermii2"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"supermii2"},"content":"     * Sets the completion state of task","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"supermii2"},"content":"     * to the given boolean","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"supermii2"},"content":"     * @param completed State to change completion state","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"supermii2"},"content":"     * of task to.","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"supermii2"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"supermii2"},"content":"    public void setCompleted(boolean completed) {","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"supermii2"},"content":"        this.completed \u003d completed;","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"supermii2"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"supermii2"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"supermii2"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"supermii2"},"content":"     * String representation of Task","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"supermii2"},"content":"     * @return String representation of task","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"supermii2"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"supermii2"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"supermii2"},"content":"        return this.isCompleted() ","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"supermii2"},"content":"        ? \"[\" + this.oneLetterAbbrev + \"][X] \" + this.taskName ","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"supermii2"},"content":"        : \"[\" + this.oneLetterAbbrev + \"][ ] \" + this.taskName;","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"supermii2"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"supermii2"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"supermii2":48}},{"path":"src/main/java/TaskDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"supermii2"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"supermii2"},"content":" * Representation of a deadline task","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"supermii2"},"content":" * recorded by the chatbot.","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"supermii2"},"content":" * ","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"supermii2"},"content":" * @author Alvis Ng (supermii2)","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"supermii2"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"supermii2"},"content":"public class TaskDeadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"supermii2"},"content":"    /** Deadline time of the task */","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"supermii2"},"content":"    private String deadlineTime;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"supermii2"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"supermii2"},"content":"     * Creates a deadline task.","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"supermii2"},"content":"     * @param taskName Name of task","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"supermii2"},"content":"     * @param deadlineTime Deadline","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"supermii2"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"supermii2"},"content":"    TaskDeadline(String taskName, String deadlineTime) {","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"supermii2"},"content":"        super(taskName);","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"supermii2"},"content":"        super.oneLetterAbbrev \u003d \"D\";","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"supermii2"},"content":"        this.deadlineTime \u003d deadlineTime;","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"supermii2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"supermii2"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"supermii2"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"supermii2"},"content":"     * String representation of Deadline","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"supermii2"},"content":"     * @return String representation of deadline","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"supermii2"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"supermii2"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"supermii2"},"content":"        return super.toString() + ","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"supermii2"},"content":"        \" (by: \" + this.deadlineTime + \")\";","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"supermii2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"supermii2"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"supermii2":29}},{"path":"src/main/java/TaskEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"supermii2"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"supermii2"},"content":" * Representation of a deadline task","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"supermii2"},"content":" * recorded by the chatbot.","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"supermii2"},"content":" * ","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"supermii2"},"content":" * @author Alvis Ng (supermii2)","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"supermii2"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"supermii2"},"content":"public class TaskEvent extends Task{","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"supermii2"},"content":"    /**Start and end times of events */","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"supermii2"},"content":"    String startTime, endTime;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"supermii2"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"supermii2"},"content":"     * Creates a deadline task.","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"supermii2"},"content":"     * @param taskName Name of task","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"supermii2"},"content":"     * @param startTime Start time of task","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"supermii2"},"content":"     * @param endTime End time of task","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"supermii2"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"supermii2"},"content":"    TaskEvent(String taskName, String startTime, String endTime) {","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"supermii2"},"content":"        super(taskName);","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"supermii2"},"content":"        super.oneLetterAbbrev \u003d \"E\";","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"supermii2"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"supermii2"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"supermii2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"supermii2"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"supermii2"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"supermii2"},"content":"     * String representation of Event","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"supermii2"},"content":"     * @return String representation of Event","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"supermii2"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"supermii2"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"supermii2"},"content":"        return super.toString() + ","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"supermii2"},"content":"        \" (from: \" + this.startTime + \" to: \" + this.endTime + \")\";","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"supermii2"},"content":"    }    ","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"supermii2"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"supermii2":31}},{"path":"src/main/java/TaskTodo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"supermii2"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"supermii2"},"content":" * Representation of a ToDo task","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"supermii2"},"content":" * recorded by the chatbot.","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"supermii2"},"content":" * ","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"supermii2"},"content":" * @author Alvis Ng (supermii2)","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"supermii2"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"supermii2"},"content":"public class TaskTodo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"supermii2"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"supermii2"},"content":"     * Creates a todo task.","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"supermii2"},"content":"     * @param taskName Name of task","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"supermii2"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"supermii2"},"content":"    TaskTodo(String taskName) {","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"supermii2"},"content":"        super(taskName);","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"supermii2"},"content":"        super.oneLetterAbbrev \u003d \"T\";","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"supermii2"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"supermii2"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"supermii2":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"supermii2"},"content":"java -classpath ..\\bin Rock \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"supermii2"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"supermii2"},"content":"pause","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"supermii2":3,"-":20}}]
