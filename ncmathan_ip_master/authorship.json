[{"path":"file.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"T,1,clean","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"E,1,ceremony,11am,12pm","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"ncmathan":2}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"ncmathan"},"content":"    private LocalDate by;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"ncmathan"},"content":"    public Deadline (String val, String by){","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"ncmathan"},"content":"        super(val);","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"ncmathan"},"content":"        this.by\u003dLocalDate.parse(by,DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"ncmathan"},"content":"    public String toString(){","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"ncmathan"},"content":"        return \"[D]\"+super.toString() +\" (by: \"+by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))+\")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"ncmathan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ncmathan":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"import java.io.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ncmathan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"ncmathan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"ncmathan"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"ncmathan"},"content":"        String name \u003d \"Mathan\";","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"ncmathan"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"ncmathan"},"content":"                \" Hello! I\u0027m \"+name+\"\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"ncmathan"},"content":"                \" What can I do for you?\");","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"ncmathan"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"ncmathan"},"content":"        String str \u003d scanner.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"ncmathan"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"ncmathan"},"content":"        File file \u003d new File(\"file.txt\");","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"ncmathan"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"ncmathan"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"ncmathan"},"content":"            String st;","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"ncmathan"},"content":"            while ((st \u003d br.readLine()) !\u003d null){","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"ncmathan"},"content":"                String[] out\u003dst.split(\",\");","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"ncmathan"},"content":"                switch (out[0]){","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"ncmathan"},"content":"                    case \"T\":","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"ncmathan"},"content":"                        Todo e \u003dnew Todo(out[2]);","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"ncmathan"},"content":"                        if(out[1].equals(\"1\"))","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"ncmathan"},"content":"                            e.setDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"ncmathan"},"content":"                        list.add(e);","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"ncmathan"},"content":"                        break;","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"ncmathan"},"content":"                    case \"E\":","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"ncmathan"},"content":"                        Event f \u003dnew Event(out[2],out[3],out[4]);","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"ncmathan"},"content":"                        if(out[1].equals(\"1\"))","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"ncmathan"},"content":"                            f.setDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"ncmathan"},"content":"                        list.add(f);","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"ncmathan"},"content":"                        break;","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"ncmathan"},"content":"                    case \"D\":","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"ncmathan"},"content":"                        Deadline g \u003dnew Deadline(out[2],out[3]);","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"ncmathan"},"content":"                        if(out[1].equals(\"1\"))","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"ncmathan"},"content":"                            g.setDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"ncmathan"},"content":"                        list.add(g);","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"ncmathan"},"content":"                        break;","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"ncmathan"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"ncmathan"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"ncmathan"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"ncmathan"},"content":"        catch (Exception e){","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"ncmathan"},"content":"            System.out.println(e);","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"ncmathan"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"ncmathan"},"content":"        while (!str.equals(\"bye\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"ncmathan"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"ncmathan"},"content":"                if (str.equals(\"list\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"ncmathan"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"ncmathan"},"content":"                    for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"ncmathan"},"content":"                        int j \u003d i + 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"ncmathan"},"content":"                        System.out.println(j + \".\" + list.get(i) + \"\");","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"ncmathan"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"ncmathan"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"ncmathan"},"content":"                } else if (str.contains(\"unmark\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"ncmathan"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"ncmathan"},"content":"                    String val \u003d str.replaceAll(\"[^0-9]\", \"\");","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"ncmathan"},"content":"                    int index \u003d Integer.parseInt(val);","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"ncmathan"},"content":"                    list.get(index-1).setUndone();","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"ncmathan"},"content":"                    updateFile(index,false);","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"ncmathan"},"content":"                    System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"ncmathan"},"content":"                    System.out.println(\"\\t\" + list.get(index-1) + \"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"ncmathan"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"ncmathan"},"content":"                } else if (str.contains(\"mark\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"ncmathan"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"ncmathan"},"content":"                    String val \u003d str.replaceAll(\"[^0-9]\", \"\");","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"ncmathan"},"content":"                    int index \u003d Integer.parseInt(val);","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"ncmathan"},"content":"                    list.get(index-1).setDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"ncmathan"},"content":"                    updateFile(index,true);","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"ncmathan"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"ncmathan"},"content":"                    System.out.println(\"\\t\" + list.get(index-1) + \"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"ncmathan"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"ncmathan"},"content":"                } else if (str.startsWith(\"todo \")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"ncmathan"},"content":"                    str \u003d str.substring(5);","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"ncmathan"},"content":"                    if (str.isEmpty())","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"ncmathan"},"content":"                        throw new DukeException(\"\\n____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"ncmathan"},"content":"                                \"☹ OOPS!!! The description of a todo cannot be empty.\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"ncmathan"},"content":"                                \"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"ncmathan"},"content":"                    list.add(new Todo(str));","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"ncmathan"},"content":"                    addToFile(\"T,0,\"+str);","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"ncmathan"},"content":"                    System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"ncmathan"},"content":"                            \"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"ncmathan"},"content":"                    System.out.println(\"\\t\" + list.get(list.size() - 1));","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"ncmathan"},"content":"                    System.out.println(\"Now you have \" + list.size() + \" tasks in your list\");","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"ncmathan"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"ncmathan"},"content":"                } else if (str.startsWith(\"deadline \")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"ncmathan"},"content":"                    str \u003d str.substring(9);","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"ncmathan"},"content":"                    if (str.isEmpty())","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"ncmathan"},"content":"                        throw new DukeException(\"\\n____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"ncmathan"},"content":"                                \"☹ OOPS!!! The description of a deadline cannot be empty.\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"ncmathan"},"content":"                                \"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"ncmathan"},"content":"                    String[] arr \u003d str.split(\" /by \");","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"ncmathan"},"content":"                    if (arr.length\u003c2)","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"ncmathan"},"content":"                        throw new DukeException(\"\\n____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"ncmathan"},"content":"                                \"☹ OOPS!!! Insufficient parameters passed to deadline.\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"ncmathan"},"content":"                                \"____________________________________________________________\");","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"ncmathan"},"content":"                    LocalDate date\u003dchangeDateFormat(arr[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"ncmathan"},"content":"                    arr[1]\u003ddate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"ncmathan"},"content":"                    list.add(new Deadline(arr[0], arr[1]));","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"ncmathan"},"content":"                    addToFile(\"D,0,\"+arr[0]+\",\"+arr[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"ncmathan"},"content":"                    System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"ncmathan"},"content":"                            \"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"ncmathan"},"content":"                    System.out.println(\"\\t\" + list.get(list.size() - 1));","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"ncmathan"},"content":"                    System.out.println(\"Now you have \" + list.size() + \" tasks in your list\");","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"ncmathan"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"ncmathan"},"content":"                } else if (str.startsWith(\"event \")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"ncmathan"},"content":"                    str \u003d str.substring(6);","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"ncmathan"},"content":"                    if (str.isEmpty())","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"ncmathan"},"content":"                        throw new DukeException(\"\\n____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"ncmathan"},"content":"                                \"☹ OOPS!!! The description of a event cannot be empty.\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"ncmathan"},"content":"                                \"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"ncmathan"},"content":"                    String[] arr \u003d str.split(\" /from \");","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"ncmathan"},"content":"                    if (arr.length\u003c2)","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"ncmathan"},"content":"                        throw new DukeException(\"\\n____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"ncmathan"},"content":"                                \"☹ OOPS!!! Insufficient parameters passed to event.\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"ncmathan"},"content":"                                \"____________________________________________________________\");","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"ncmathan"},"content":"                    String[] time \u003d arr[1].split(\" /to \");","lastModifiedDate":"2023-08-24"},{"lineNumber":124,"author":{"gitId":"ncmathan"},"content":"                    if (time.length\u003c2)","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"ncmathan"},"content":"                        throw new DukeException(\"\\n____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"ncmathan"},"content":"                                \"☹ OOPS!!! Insufficient parameters passed to event.\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"ncmathan"},"content":"                                \"____________________________________________________________\");","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"ncmathan"},"content":"                    LocalDate date\u003dchangeDateFormat(time[0]);","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"ncmathan"},"content":"                    time[0]\u003ddate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"ncmathan"},"content":"                    date\u003dchangeDateFormat(time[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"ncmathan"},"content":"                    time[1]\u003ddate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"ncmathan"},"content":"                    list.add(new Event(arr[0], time[0], time[1]));","lastModifiedDate":"2023-08-24"},{"lineNumber":133,"author":{"gitId":"ncmathan"},"content":"                    addToFile(\"E,0,\"+arr[0]+\",\"+time[0]+\",\"+time[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"ncmathan"},"content":"                    System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":135,"author":{"gitId":"ncmathan"},"content":"                            \"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":136,"author":{"gitId":"ncmathan"},"content":"                    System.out.println(\"\\t\" + list.get(list.size() - 1));","lastModifiedDate":"2023-08-24"},{"lineNumber":137,"author":{"gitId":"ncmathan"},"content":"                    System.out.println(\"Now you have \" + list.size() + \" tasks in your list\");","lastModifiedDate":"2023-08-24"},{"lineNumber":138,"author":{"gitId":"ncmathan"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":139,"author":{"gitId":"ncmathan"},"content":"                } else if (str.startsWith(\"delete \")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"ncmathan"},"content":"                    ","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"ncmathan"},"content":"                    str \u003d str.substring(7);","lastModifiedDate":"2023-08-24"},{"lineNumber":142,"author":{"gitId":"ncmathan"},"content":"                    String val \u003d str.replaceAll(\"[^0-9]\", \"\");","lastModifiedDate":"2023-08-24"},{"lineNumber":143,"author":{"gitId":"ncmathan"},"content":"                    int index \u003d Integer.parseInt(val);","lastModifiedDate":"2023-08-24"},{"lineNumber":144,"author":{"gitId":"ncmathan"},"content":"                    if (str.isEmpty())","lastModifiedDate":"2023-08-24"},{"lineNumber":145,"author":{"gitId":"ncmathan"},"content":"                        throw new DukeException(\"\\n____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":146,"author":{"gitId":"ncmathan"},"content":"                                \"☹ OOPS!!! The description of a delete cannot be empty.\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"ncmathan"},"content":"                                \"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":148,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":149,"author":{"gitId":"ncmathan"},"content":"                    System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":150,"author":{"gitId":"ncmathan"},"content":"                            \"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":151,"author":{"gitId":"ncmathan"},"content":"                    System.out.println(\"\\t\" + list.get(index - 1));","lastModifiedDate":"2023-08-24"},{"lineNumber":152,"author":{"gitId":"ncmathan"},"content":"                    list.remove(index - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":153,"author":{"gitId":"ncmathan"},"content":"                    deleteFromFile(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"ncmathan"},"content":"                    System.out.println(\"Now you have \" + list.size() + \" tasks in your list\");","lastModifiedDate":"2023-08-24"},{"lineNumber":155,"author":{"gitId":"ncmathan"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":156,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":157,"author":{"gitId":"ncmathan"},"content":"                } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":158,"author":{"gitId":"ncmathan"},"content":"                    throw new DukeException(\"\\n____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":159,"author":{"gitId":"ncmathan"},"content":"                            \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":160,"author":{"gitId":"ncmathan"},"content":"                            \"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":161,"author":{"gitId":"ncmathan"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":162,"author":{"gitId":"ncmathan"},"content":"                str \u003d scanner.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":163,"author":{"gitId":"ncmathan"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":164,"author":{"gitId":"ncmathan"},"content":"            catch (DukeException e){","lastModifiedDate":"2023-08-29"},{"lineNumber":165,"author":{"gitId":"ncmathan"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":166,"author":{"gitId":"ncmathan"},"content":"                str \u003d scanner.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":167,"author":{"gitId":"ncmathan"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":168,"author":{"gitId":"ncmathan"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":169,"author":{"gitId":"ncmathan"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":170,"author":{"gitId":"ncmathan"},"content":"                \" Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":171,"author":{"gitId":"ncmathan"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":172,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":174,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":175,"author":{"gitId":"ncmathan"},"content":"    public static void addToFile(String text){","lastModifiedDate":"2023-08-29"},{"lineNumber":176,"author":{"gitId":"ncmathan"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":177,"author":{"gitId":"ncmathan"},"content":"            File file \u003d new File(\"file.txt\");","lastModifiedDate":"2023-08-29"},{"lineNumber":178,"author":{"gitId":"ncmathan"},"content":"            FileWriter fw \u003d new FileWriter(file, true);","lastModifiedDate":"2023-08-29"},{"lineNumber":179,"author":{"gitId":"ncmathan"},"content":"            fw.append(text);","lastModifiedDate":"2023-08-29"},{"lineNumber":180,"author":{"gitId":"ncmathan"},"content":"            fw.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":181,"author":{"gitId":"ncmathan"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":182,"author":{"gitId":"ncmathan"},"content":"        catch (Exception e){","lastModifiedDate":"2023-08-29"},{"lineNumber":183,"author":{"gitId":"ncmathan"},"content":"            System.out.println(\"Error:\" + e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":184,"author":{"gitId":"ncmathan"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":185,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":186,"author":{"gitId":"ncmathan"},"content":"    public static LocalDate changeDateFormat(String input) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":187,"author":{"gitId":"ncmathan"},"content":"        LocalDate date;","lastModifiedDate":"2023-08-30"},{"lineNumber":188,"author":{"gitId":"ncmathan"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":189,"author":{"gitId":"ncmathan"},"content":"            DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-08-30"},{"lineNumber":190,"author":{"gitId":"ncmathan"},"content":"            date \u003d LocalDate.parse(input,format);","lastModifiedDate":"2023-08-30"},{"lineNumber":191,"author":{"gitId":"ncmathan"},"content":"        }catch (Exception e){","lastModifiedDate":"2023-08-30"},{"lineNumber":192,"author":{"gitId":"ncmathan"},"content":"            throw new DukeException(\"\\n____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":193,"author":{"gitId":"ncmathan"},"content":"                    \"☹ OOPS!!! Improper date format.\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":194,"author":{"gitId":"ncmathan"},"content":"                    \"____________________________________________________________\");","lastModifiedDate":"2023-08-30"},{"lineNumber":195,"author":{"gitId":"ncmathan"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":196,"author":{"gitId":"ncmathan"},"content":"        return date;","lastModifiedDate":"2023-08-30"},{"lineNumber":197,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":198,"author":{"gitId":"ncmathan"},"content":"    public static void updateFile(int num,boolean val){","lastModifiedDate":"2023-08-29"},{"lineNumber":199,"author":{"gitId":"ncmathan"},"content":"        File file \u003d new File(\"file.txt\");","lastModifiedDate":"2023-08-29"},{"lineNumber":200,"author":{"gitId":"ncmathan"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":201,"author":{"gitId":"ncmathan"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-08-29"},{"lineNumber":202,"author":{"gitId":"ncmathan"},"content":"            String line\u003d\"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":203,"author":{"gitId":"ncmathan"},"content":"            String out\u003d\"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":204,"author":{"gitId":"ncmathan"},"content":"            int count\u003d0;","lastModifiedDate":"2023-08-29"},{"lineNumber":205,"author":{"gitId":"ncmathan"},"content":"            while(sc.hasNextLine()){","lastModifiedDate":"2023-08-29"},{"lineNumber":206,"author":{"gitId":"ncmathan"},"content":"                line\u003dsc.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":207,"author":{"gitId":"ncmathan"},"content":"                count+\u003d1;","lastModifiedDate":"2023-08-29"},{"lineNumber":208,"author":{"gitId":"ncmathan"},"content":"                if(count!\u003dnum)","lastModifiedDate":"2023-08-29"},{"lineNumber":209,"author":{"gitId":"ncmathan"},"content":"                    out+\u003dline+\"\\n\";","lastModifiedDate":"2023-08-29"},{"lineNumber":210,"author":{"gitId":"ncmathan"},"content":"                else{","lastModifiedDate":"2023-08-29"},{"lineNumber":211,"author":{"gitId":"ncmathan"},"content":"                    if(val)","lastModifiedDate":"2023-08-29"},{"lineNumber":212,"author":{"gitId":"ncmathan"},"content":"                        out+\u003dline.substring(0,2)+\"1\"+line.substring(3)+\"\\n\";","lastModifiedDate":"2023-08-29"},{"lineNumber":213,"author":{"gitId":"ncmathan"},"content":"                    else","lastModifiedDate":"2023-08-29"},{"lineNumber":214,"author":{"gitId":"ncmathan"},"content":"                        out+\u003dline.substring(0,2)+\"0\"+line.substring(3)+\"\\n\";","lastModifiedDate":"2023-08-29"},{"lineNumber":215,"author":{"gitId":"ncmathan"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":216,"author":{"gitId":"ncmathan"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":217,"author":{"gitId":"ncmathan"},"content":"            FileWriter fw\u003dnew FileWriter(file,false);","lastModifiedDate":"2023-08-29"},{"lineNumber":218,"author":{"gitId":"ncmathan"},"content":"            fw.append(out);","lastModifiedDate":"2023-08-29"},{"lineNumber":219,"author":{"gitId":"ncmathan"},"content":"            fw.flush();","lastModifiedDate":"2023-08-29"},{"lineNumber":220,"author":{"gitId":"ncmathan"},"content":"            fw.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":221,"author":{"gitId":"ncmathan"},"content":"            sc.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":222,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":223,"author":{"gitId":"ncmathan"},"content":"        }catch (Exception e){","lastModifiedDate":"2023-08-29"},{"lineNumber":224,"author":{"gitId":"ncmathan"},"content":"            System.out.println(\"Error:\"+e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":225,"author":{"gitId":"ncmathan"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":226,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":227,"author":{"gitId":"ncmathan"},"content":"    public static void deleteFromFile(int num) {","lastModifiedDate":"2023-08-29"},{"lineNumber":228,"author":{"gitId":"ncmathan"},"content":"        File file \u003d new File(\"file.txt\");","lastModifiedDate":"2023-08-29"},{"lineNumber":229,"author":{"gitId":"ncmathan"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":230,"author":{"gitId":"ncmathan"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-08-29"},{"lineNumber":231,"author":{"gitId":"ncmathan"},"content":"            String line\u003d\"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":232,"author":{"gitId":"ncmathan"},"content":"            String out\u003d\"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":233,"author":{"gitId":"ncmathan"},"content":"            int count\u003d0;","lastModifiedDate":"2023-08-29"},{"lineNumber":234,"author":{"gitId":"ncmathan"},"content":"            while(sc.hasNextLine()){","lastModifiedDate":"2023-08-29"},{"lineNumber":235,"author":{"gitId":"ncmathan"},"content":"                line\u003dsc.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":236,"author":{"gitId":"ncmathan"},"content":"                count+\u003d1;","lastModifiedDate":"2023-08-29"},{"lineNumber":237,"author":{"gitId":"ncmathan"},"content":"                if(count!\u003dnum)","lastModifiedDate":"2023-08-29"},{"lineNumber":238,"author":{"gitId":"ncmathan"},"content":"                    out+\u003dline+\"\\n\";","lastModifiedDate":"2023-08-29"},{"lineNumber":239,"author":{"gitId":"ncmathan"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":240,"author":{"gitId":"ncmathan"},"content":"            FileWriter fw\u003dnew FileWriter(file,false);","lastModifiedDate":"2023-08-29"},{"lineNumber":241,"author":{"gitId":"ncmathan"},"content":"            fw.append(out);","lastModifiedDate":"2023-08-29"},{"lineNumber":242,"author":{"gitId":"ncmathan"},"content":"            fw.flush();","lastModifiedDate":"2023-08-29"},{"lineNumber":243,"author":{"gitId":"ncmathan"},"content":"            fw.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":244,"author":{"gitId":"ncmathan"},"content":"            sc.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":245,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":246,"author":{"gitId":"ncmathan"},"content":"        }catch (Exception e){","lastModifiedDate":"2023-08-29"},{"lineNumber":247,"author":{"gitId":"ncmathan"},"content":"            System.out.println(\"Error:\"+e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":248,"author":{"gitId":"ncmathan"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":249,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":250,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":252,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ncmathan":249,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"    public DukeException(String msg){","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"ncmathan"},"content":"        super(msg);","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"ncmathan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ncmathan":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":"public class Event extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"ncmathan"},"content":"    private LocalDate from;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ncmathan"},"content":"    private LocalDate to;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"ncmathan"},"content":"    public Event (String val, String from, String to){","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"ncmathan"},"content":"        super(val);","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"ncmathan"},"content":"        this.from\u003dLocalDate.parse(from,DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"ncmathan"},"content":"        this.to \u003d LocalDate.parse(to,DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"ncmathan"},"content":"    public String toString(){","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"ncmathan"},"content":"        return \"[E]\"+super.toString() +\" (from: \"+from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))+\" to: \"+to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))+\")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"ncmathan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ncmathan":16}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"public class Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"    private String task;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"ncmathan"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"ncmathan"},"content":"    public Task(String task){","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"ncmathan"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"ncmathan"},"content":"        isDone\u003dfalse;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"ncmathan"},"content":"    public void setDone(){","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"ncmathan"},"content":"        isDone\u003dtrue;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"ncmathan"},"content":"    public void setUndone(){","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"ncmathan"},"content":"        isDone\u003dfalse;","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"ncmathan"},"content":"    public boolean getDone(){","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"ncmathan"},"content":"        return isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"ncmathan"},"content":"    public String toString(){","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"ncmathan"},"content":"        if(isDone)","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"ncmathan"},"content":"            return \"[X] \"+ task;","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"ncmathan"},"content":"        return \"[ ] \"+ task;","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"ncmathan"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ncmathan":27}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"    public Todo (String val){","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"ncmathan"},"content":"        super(val);","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"ncmathan"},"content":"    public String toString(){","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"ncmathan"},"content":"        return \"[T]\"+super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"ncmathan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ncmathan":8}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"ncmathan"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ncmathan":4}}]
