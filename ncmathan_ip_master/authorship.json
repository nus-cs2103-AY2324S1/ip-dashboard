[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"ncmathan"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"ncmathan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"ncmathan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"ncmathan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"ncmathan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"ncmathan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"ncmathan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"ncmathan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"ncmathan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"ncmathan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"ncmathan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"ncmathan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"ncmathan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"ncmathan"},"content":"    mainClass.set(\"Duke.Launcher\")","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"ncmathan":17}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"# Mathan ChatBot\u0027s User Guide","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"Mathan ChatBot is a **Desktop App** for storing and accessing tasks, events and deadlines.","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"ncmathan"},"content":"![Sample screenshot of UI](Ui.png)","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"ncmathan"},"content":"Here\u0027s a list of commands you can use in the chatbot:","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"ncmathan"},"content":"- [List down all tasks: `list`](#list-down-all-tasks-list)","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"ncmathan"},"content":"- [Create new todo task: `todo [Name]`](#create-new-todo-task-todo-name)","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"ncmathan"},"content":"- [Create new deadline: `deadline [Name] /by [Date]`](#create-new-deadline-deadline-name-by-date)","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"ncmathan"},"content":"- [Create new event: `event [Name] /from [Date] /to [Date]`](#create-new-event-event-name-from-date-to-date)","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"ncmathan"},"content":"- [Mark/unmark tasks: `mark [taskNum]`/`unmark [taskNum]`](#markunmark-tasks-mark-tasknumunmark-tasknum)","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"ncmathan"},"content":"- [Delete a task: `delete [taskNum]`](#delete-a-task-delete-tasknum)","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"ncmathan"},"content":"- [Find a task: `find [Name]`](#find-a-task-find-name)","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"ncmathan"},"content":"- [Sort event/deadline chronologically: `sort event`/`sort deadline`](#sort-eventdeadline-chronologically-sort-eventsort-deadline)","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"ncmathan"},"content":"- [Exit the chatbot: `bye`](#exit-the-chatbot-bye)","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"ncmathan"},"content":"### List down all tasks: `list`","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"ncmathan"},"content":"Lists the tasks in the order they were added,","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"ncmathan"},"content":"whether they are marked or unmarked,","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"ncmathan"},"content":"and the dates (if any)","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"ncmathan"},"content":"  ","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"ncmathan"},"content":"Here\u0027s a sample output:","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"ncmathan"},"content":"![list command](list.png)","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"ncmathan"},"content":"### Create new todo task: `todo [Name]`","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"ncmathan"},"content":"Adds a new todo task to the list.","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"ncmathan"},"content":"  ","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"ncmathan"},"content":"Here\u0027s an example output:","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"ncmathan"},"content":"![todo command](todo.png)","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"ncmathan"},"content":"### Create new deadline: `deadline [Name] /by [Date]`","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"ncmathan"},"content":"Follow the format above exactly with the date in the format `yyyy-MM-dd`","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"ncmathan"},"content":"to create a valid deadline task","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"ncmathan"},"content":"Here\u0027s an example output:","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"ncmathan"},"content":"![deadline command](deadline.png)","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"ncmathan"},"content":"### Create new event: `event [Name] /from [Date] /to [Date]`","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"ncmathan"},"content":"Follow the format above exactly with the dates in the format `yyyy-MM-dd`","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"ncmathan"},"content":"to create a valid event","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"ncmathan"},"content":"Here\u0027s an example output:","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"ncmathan"},"content":"![event command](event.png)","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"ncmathan"},"content":"### Mark/unmark tasks: `mark [taskNum]`/`unmark [taskNum]`","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"ncmathan"},"content":"marks and unmarks the checkbox next to task name in list function,","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"ncmathan"},"content":"to indicate whether task has been completed.","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":51,"author":{"gitId":"ncmathan"},"content":"\u003e [!NOTE]","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"ncmathan"},"content":"\u003e Note that the taskNum is the index of the task in the list function.","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":54,"author":{"gitId":"ncmathan"},"content":"Here\u0027s an example output:","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"ncmathan"},"content":"![mark command](mark.png)","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":58,"author":{"gitId":"ncmathan"},"content":"### Delete a task: `delete [taskNum]`","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"ncmathan"},"content":"Deletes a task from the list.","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"ncmathan"},"content":"\u003e [!NOTE]","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"ncmathan"},"content":"\u003e Note that the taskNum is the index of the task in the list function.","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"ncmathan"},"content":"\u003e The taskNum is recomputed for all other tasks after deleting one task.","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"ncmathan"},"content":"  ","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"ncmathan"},"content":"Here\u0027s an example output:","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"ncmathan"},"content":"![delete command](delete.png)","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"ncmathan"},"content":"### Find a task: `find [Name]`","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"ncmathan"},"content":"Searches for tasks based on its name. `[Name]` may also contain only a part of the task name.","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":72,"author":{"gitId":"ncmathan"},"content":"Here\u0027s an example output:","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"ncmathan"},"content":"![task command](task.png)","lastModifiedDate":"2023-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":76,"author":{"gitId":"ncmathan"},"content":"### Sort event/deadline chronologically: `sort event`/`sort deadline`","lastModifiedDate":"2023-09-21"},{"lineNumber":77,"author":{"gitId":"ncmathan"},"content":"Sorts deadlines based on when its due and events from its start date.","lastModifiedDate":"2023-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":79,"author":{"gitId":"ncmathan"},"content":"Here\u0027s an example output:","lastModifiedDate":"2023-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"ncmathan"},"content":"![sort command](sort.png)","lastModifiedDate":"2023-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":83,"author":{"gitId":"ncmathan"},"content":"### Exit the chatbot: `bye`","lastModifiedDate":"2023-09-21"},{"lineNumber":84,"author":{"gitId":"ncmathan"},"content":"Exits the chatbot and stops taking in new user input.","lastModifiedDate":"2023-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":86,"author":{"gitId":"ncmathan"},"content":"Here\u0027s an example output:","lastModifiedDate":"2023-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":88,"author":{"gitId":"ncmathan"},"content":"![bye command](bye.png)","lastModifiedDate":"2023-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"ncmathan":72,"-":17}},{"path":"file.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"T,1,clean","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"E,1,ceremony,11am,12pm","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"ncmathan":2}},{"path":"src/main/java/Duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"package Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ncmathan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"ncmathan"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"ncmathan"},"content":" * Class to create and store deadlines.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ncmathan"},"content":" * Extends Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"ncmathan"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ncmathan"},"content":"public class Deadline extends Task implements Comparable {","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"ncmathan"},"content":"    private LocalDate by;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"ncmathan"},"content":"     * Public constructor for Deadline.","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"ncmathan"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"ncmathan"},"content":"     * @param val The description of the Deadline task.","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"ncmathan"},"content":"     * @param by  The due date of the Deadline task in the format \"MMM dd yyyy\".","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"ncmathan"},"content":"    public Deadline(String val, String by) {","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"ncmathan"},"content":"        super(val);","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"ncmathan"},"content":"        assert !val.isEmpty() \u0026\u0026 !by.isEmpty();","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"ncmathan"},"content":"        assert by.matches(\"\\\\w{3} \\\\d{2} \\\\d{4}\");","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"ncmathan"},"content":"        this.by \u003d LocalDate.parse(by, DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"ncmathan"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"ncmathan"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"ncmathan"},"content":"     * @return A string containing the task type, description, and due date.","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"ncmathan"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"ncmathan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"ncmathan"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"ncmathan"},"content":"     * Compares this Deadline task to another object.","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"ncmathan"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"ncmathan"},"content":"     * @param o The object to compare to.","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"ncmathan"},"content":"     * @return A negative integer, zero, or a positive integer if this task is less than, equal to, or greater","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"ncmathan"},"content":"     *         than the specified object.","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"ncmathan"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"ncmathan"},"content":"    public int compareTo(Object o) {","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"ncmathan"},"content":"        Deadline d \u003d (Deadline) o;","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"ncmathan"},"content":"        return this.by.compareTo(d.by);","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"ncmathan"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"ncmathan":49}},{"path":"src/main/java/Duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"package Duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"ncmathan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"ncmathan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"ncmathan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"ncmathan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"ncmathan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"ncmathan"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"ncmathan"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"ncmathan"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"ncmathan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"ncmathan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"ncmathan"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"ncmathan"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"ncmathan"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"ncmathan"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"ncmathan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"ncmathan"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"ncmathan"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"ncmathan"},"content":" * A custom control representing a dialog box in a chat interface.","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"ncmathan"},"content":" * This control consists of an ImageView to display an image and a Label to display text.","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"ncmathan"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"ncmathan"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"ncmathan"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"ncmathan"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"ncmathan"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"ncmathan"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"ncmathan"},"content":"     * Constructor for the DialogBox.","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"ncmathan"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"ncmathan"},"content":"     * @param text The text content to be displayed in the dialog.","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"ncmathan"},"content":"     * @param img  The image to be displayed in the dialog.","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"ncmathan"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"ncmathan"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"ncmathan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"ncmathan"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"ncmathan"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"ncmathan"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"ncmathan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"ncmathan"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"ncmathan"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"ncmathan"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"ncmathan"},"content":"        dialog.setMinSize(Label.USE_PREF_SIZE, Label.USE_PREF_SIZE);","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"ncmathan"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"ncmathan"},"content":"     * Flips the dialog box to change the alignment of elements (ImageView and Label).","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"ncmathan"},"content":"     * This is used to distinguish between user and Duke (bot) dialogs.","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"ncmathan"},"content":"    private void flip() {","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"ncmathan"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"ncmathan"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"ncmathan"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"ncmathan"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"ncmathan"},"content":"     * Create a DialogBox for user messages.","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"ncmathan"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"ncmathan"},"content":"     * @param text The text content of the user\u0027s message.","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"ncmathan"},"content":"     * @param img  The user\u0027s image.","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"ncmathan"},"content":"     * @return A DialogBox containing the user\u0027s message and image.","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"ncmathan"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"ncmathan"},"content":"        assert !text.isEmpty();","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"ncmathan"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":77,"author":{"gitId":"ncmathan"},"content":"     * Create a DialogBox for Duke\u0027s (bot) messages.","lastModifiedDate":"2023-09-21"},{"lineNumber":78,"author":{"gitId":"ncmathan"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"ncmathan"},"content":"     * @param text The text content of Duke\u0027s message.","lastModifiedDate":"2023-09-21"},{"lineNumber":80,"author":{"gitId":"ncmathan"},"content":"     * @param img  Duke\u0027s image.","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"ncmathan"},"content":"     * @return A DialogBox containing Duke\u0027s message and image.","lastModifiedDate":"2023-09-21"},{"lineNumber":82,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":83,"author":{"gitId":"ncmathan"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"ncmathan"},"content":"        assert !text.isEmpty();","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"ncmathan"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"ncmathan"},"content":"        db.setBackground(new Background(new BackgroundFill(Color.LIGHTGRAY,","lastModifiedDate":"2023-09-21"},{"lineNumber":87,"author":{"gitId":"ncmathan"},"content":"                CornerRadii.EMPTY, Insets.EMPTY)));","lastModifiedDate":"2023-09-21"},{"lineNumber":88,"author":{"gitId":"ncmathan"},"content":"        db.flip();","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"ncmathan"},"content":"        return db;","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"ncmathan"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"ncmathan":91}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"package Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"ncmathan"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":" * Main class for running the Duke program.","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"ncmathan"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"ncmathan"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ncmathan"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ncmathan"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ncmathan"},"content":"    private Parser parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"ncmathan"},"content":"     * Constructor for the Duke class.","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"ncmathan"},"content":"     * Initializes the user interface, storage, task list, and parser.","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"ncmathan"},"content":"    public Duke() {","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"ncmathan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"ncmathan"},"content":"        storage \u003d new Storage(\"file.txt\");","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"ncmathan"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"ncmathan"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"ncmathan"},"content":"     * Gets a response to user input and performs necessary actions.","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"ncmathan"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"ncmathan"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"ncmathan"},"content":"     * @return The response generated based on the input.","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"ncmathan"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"ncmathan"},"content":"        assert !input.isEmpty();","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"ncmathan"},"content":"        parser.parse(input, tasks, storage, ui);","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"ncmathan"},"content":"        if (parser.isExit()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"ncmathan"},"content":"            ui.showExit();","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"ncmathan"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"ncmathan"},"content":"        return ui.emptyBuffer();","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"ncmathan"},"content":"     * Checks if the Duke program has ended (i.e., the user requested an exit).","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"ncmathan"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"ncmathan"},"content":"     * @return true if the program has ended, false otherwise.","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"ncmathan"},"content":"    public boolean hasEnded() {","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"ncmathan"},"content":"        return parser.isExit();","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ncmathan":44,"-":2}},{"path":"src/main/java/Duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"package Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ncmathan"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":" * Custom exception class to handle exceptions thrown by Duke.","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"ncmathan"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"ncmathan"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ncmathan"},"content":"     * Public constructor for DukeException.","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"ncmathan"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"ncmathan"},"content":"     * @param msg The error message associated with the exception.","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"ncmathan"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"ncmathan"},"content":"        super(msg);","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"ncmathan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ncmathan":15}},{"path":"src/main/java/Duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"package Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ncmathan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"ncmathan"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"ncmathan"},"content":" * Class to represent and create Events.","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"ncmathan"},"content":" * Extends the Task class.","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"ncmathan"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ncmathan"},"content":"public class Event extends Task implements Comparable {","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"ncmathan"},"content":"    private LocalDate from;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ncmathan"},"content":"    private LocalDate to;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"ncmathan"},"content":"     * Public constructor for Event.","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"ncmathan"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"ncmathan"},"content":"     * @param val  The description of the Event.","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"ncmathan"},"content":"     * @param from The starting date of the Event in the format \"MMM dd yyyy\".","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"ncmathan"},"content":"     * @param to   The ending date of the Event in the format \"MMM dd yyyy\".","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"ncmathan"},"content":"    public Event(String val, String from, String to) {","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"ncmathan"},"content":"        super(val);","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"ncmathan"},"content":"        assert !val.isEmpty() \u0026\u0026 !from.isEmpty() \u0026\u0026 !to.isEmpty();","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"ncmathan"},"content":"        assert from.matches(\"\\\\w{3} \\\\d{2} \\\\d{4}\");","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"ncmathan"},"content":"        assert to.matches(\"\\\\w{3} \\\\d{2} \\\\d{4}\");","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"ncmathan"},"content":"        this.from \u003d LocalDate.parse(from, DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"ncmathan"},"content":"        this.to \u003d LocalDate.parse(to, DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"ncmathan"},"content":"     * Returns a string representation of the Event.","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"ncmathan"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"ncmathan"},"content":"     * @return A string containing the task type, description, and date range.","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"ncmathan"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"ncmathan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"ncmathan"},"content":"        return \"[E]\" + super.toString() + \" (from: \" +","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"ncmathan"},"content":"                from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) +","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"ncmathan"},"content":"                \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"ncmathan"},"content":"     * Compares this Event task to another object based on the starting date.","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"ncmathan"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"ncmathan"},"content":"     * @param o The object to compare to.","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"ncmathan"},"content":"     * @return A negative integer, zero, or a positive integer if this task\u0027s starting date is less than, equal to,","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"ncmathan"},"content":"     *         or greater than the specified object\u0027s starting date.","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"ncmathan"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"ncmathan"},"content":"    public int compareTo(Object o) {","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"ncmathan"},"content":"        Event e \u003d (Event) o;","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"ncmathan"},"content":"        return this.from.compareTo(e.from);","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"ncmathan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ncmathan":55}},{"path":"src/main/java/Duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"package Duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"ncmathan"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"ncmathan"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"ncmathan"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"ncmathan"},"content":"public class Launcher {","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"ncmathan"},"content":"     * The main method to launch the Duke application.","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"ncmathan"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"ncmathan"},"content":"     * @param args The command-line arguments.","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"ncmathan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"ncmathan"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"ncmathan"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"ncmathan":19}},{"path":"src/main/java/Duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"package Duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"ncmathan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"ncmathan"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"ncmathan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"ncmathan"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"ncmathan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"ncmathan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"ncmathan"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"ncmathan"},"content":" * A GUI application for Duke using FXML.","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"ncmathan"},"content":" * This class launches the Duke chatbot graphical user interface (GUI).","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"ncmathan"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"ncmathan"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"ncmathan"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"ncmathan"},"content":"     * The entry point for the Duke GUI application.","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"ncmathan"},"content":"     * Initializes the GUI, loads the FXML layout, and sets up the Duke chatbot.","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"ncmathan"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"ncmathan"},"content":"     * @param stage The primary stage for the GUI.","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"ncmathan"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"ncmathan"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"ncmathan"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"ncmathan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"ncmathan"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"ncmathan"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"ncmathan"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"ncmathan"},"content":"            stage.setTitle(\"Mathan ChatBot\");","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"ncmathan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"ncmathan"},"content":"            stage.show();","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"ncmathan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"ncmathan"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"ncmathan"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"ncmathan"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"ncmathan":39}},{"path":"src/main/java/Duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"package Duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"ncmathan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"ncmathan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"ncmathan"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"ncmathan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"ncmathan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"ncmathan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"ncmathan"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"ncmathan"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"ncmathan"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"ncmathan"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"ncmathan"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"ncmathan"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"ncmathan"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"ncmathan"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"ncmathan"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"ncmathan"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"ncmathan"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"ncmathan"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"ncmathan"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"ncmathan"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"ncmathan"},"content":"    private boolean hasEnded;","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"ncmathan"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"ncmathan"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"ncmathan"},"content":"     * Initializes the MainWindow controller.","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"ncmathan"},"content":"     * Binds the scroll pane\u0027s vertical value property to the dialog container\u0027s height property.","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"ncmathan"},"content":"     * Initializes the user interface and sets the initial state.","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"ncmathan"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"ncmathan"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"ncmathan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"ncmathan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"ncmathan"},"content":"        hasEnded \u003d false;","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"ncmathan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"ncmathan"},"content":"                DialogBox.getDukeDialog(ui.getWelcome(), dukeImage)","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"ncmathan"},"content":"        );","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"ncmathan"},"content":"        assert dialogContainer.getChildren().size() \u003d\u003d 1;","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"ncmathan"},"content":"        dialogContainer.autosize();","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"ncmathan"},"content":"     * Sets the Duke object for this controller.","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"ncmathan"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"ncmathan"},"content":"     * @param d The Duke chatbot.","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"ncmathan"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"ncmathan"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"ncmathan"},"content":"     * Handles user input by processing it with the Duke chatbot.","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"ncmathan"},"content":"     * Creates dialog boxes for user input and Duke\u0027s response, appends them to the dialog container,","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"ncmathan"},"content":"     * and checks if the chatbot has ended.","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"ncmathan"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"ncmathan"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"ncmathan"},"content":"        if (hasEnded) {","lastModifiedDate":"2023-09-13"},{"lineNumber":67,"author":{"gitId":"ncmathan"},"content":"            userInput.clear();","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"ncmathan"},"content":"            return;","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"ncmathan"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"ncmathan"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"ncmathan"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"ncmathan"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"ncmathan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"ncmathan"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"ncmathan"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"ncmathan"},"content":"        );","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"ncmathan"},"content":"        hasEnded \u003d duke.hasEnded();","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"ncmathan"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"ncmathan":79}},{"path":"src/main/java/Duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"package Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ncmathan"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":" * Class to parse user input and execute corresponding commands.","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"ncmathan"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"ncmathan"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"ncmathan"},"content":"    private boolean isExit;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ncmathan"},"content":"     * Default constructor for the Parser class.","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"ncmathan"},"content":"     * Initializes the isExit flag to false.","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"ncmathan"},"content":"    public Parser() {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ncmathan"},"content":"        isExit \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"ncmathan"},"content":"     * Parses the user input and performs the corresponding actions.","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"ncmathan"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"ncmathan"},"content":"     * @param str      The user input to be parsed.","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"ncmathan"},"content":"     * @param list     The TaskList instance to manage tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"ncmathan"},"content":"     * @param storage  The Storage instance to handle task storage.","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"ncmathan"},"content":"     * @param ui       The Ui instance to manage user interface interactions.","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"ncmathan"},"content":"    public void parse(String str, TaskList list, Storage storage, Ui ui) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ncmathan"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"ncmathan"},"content":"            if (str.equals(\"bye\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ncmathan"},"content":"                isExit \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"ncmathan"},"content":"            } else if (str.equals(\"list\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"ncmathan"},"content":"                list.list(ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ncmathan"},"content":"            } else if (str.contains(\"unmark\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ncmathan"},"content":"                list.mark(false, str, ui, storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ncmathan"},"content":"            } else if (str.contains(\"mark\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ncmathan"},"content":"                list.mark(true, str, ui, storage);","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"ncmathan"},"content":"            } else if (str.startsWith(\"todo \")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ncmathan"},"content":"                list.todo(str, ui, storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ncmathan"},"content":"            } else if (str.startsWith(\"deadline \")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"ncmathan"},"content":"                list.deadline(str, ui, storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"ncmathan"},"content":"            } else if (str.startsWith(\"event \")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"ncmathan"},"content":"                list.event(str, ui, storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"ncmathan"},"content":"            } else if (str.startsWith(\"delete \")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"ncmathan"},"content":"                list.delete(str, ui, storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"ncmathan"},"content":"            } else if (str.startsWith(\"find \")) {","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"ncmathan"},"content":"                list.find(str, ui);","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"ncmathan"},"content":"            } else if (str.startsWith(\"sort deadline\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"ncmathan"},"content":"                list.sortDeadline(ui);","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"ncmathan"},"content":"            } else if (str.startsWith(\"sort event\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"ncmathan"},"content":"                list.sortEvent(ui);","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"ncmathan"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"ncmathan"},"content":"                ui.handleError(new DukeException(\"\\n____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"ncmathan"},"content":"                        \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" +","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"ncmathan"},"content":"                        \"____________________________________________________________\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"ncmathan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"ncmathan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"ncmathan"},"content":"            ui.handleError(e);","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"ncmathan"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"ncmathan"},"content":"     * Checks if the program should exit.","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"ncmathan"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"ncmathan"},"content":"     * @return true if the program should exit, false otherwise.","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"ncmathan"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"ncmathan"},"content":"        return isExit;","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"ncmathan"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ncmathan":67}},{"path":"src/main/java/Duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"package Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ncmathan"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"ncmathan"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ncmathan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"ncmathan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ncmathan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ncmathan"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"ncmathan"},"content":" * Class to read and write to a text file for task storage.","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"ncmathan"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"ncmathan"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ncmathan"},"content":"    private String file;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"ncmathan"},"content":"     * Constructor for the Storage class.","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"ncmathan"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"ncmathan"},"content":"     * @param file The name of the text file to read and write task data.","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"ncmathan"},"content":"    public Storage(String file) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ncmathan"},"content":"        this.file \u003d file;","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"ncmathan"},"content":"     * Reads task data from the text file and loads it into an ArrayList of tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"ncmathan"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"ncmathan"},"content":"     * @return An ArrayList containing tasks loaded from the file.","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"ncmathan"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ncmathan"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ncmathan"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ncmathan"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ncmathan"},"content":"            String st;","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"ncmathan"},"content":"            while ((st \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ncmathan"},"content":"                String[] out \u003d st.split(\",\");","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ncmathan"},"content":"                assert out[0].equals(\"T\") || out[0].equals(\"E\") || out[0].equals(\"D\");","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"ncmathan"},"content":"                switch (out[0]) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"ncmathan"},"content":"                case \"T\":","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"ncmathan"},"content":"                    Todo e \u003d new Todo(out[2]);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"ncmathan"},"content":"                    if (out[1].equals(\"1\"))","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"ncmathan"},"content":"                        e.setDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"ncmathan"},"content":"                    list.add(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"ncmathan"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"ncmathan"},"content":"                case \"E\":","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"ncmathan"},"content":"                    Event f \u003d new Event(out[2], out[3], out[4]);","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"ncmathan"},"content":"                    if (out[1].equals(\"1\"))","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"ncmathan"},"content":"                        f.setDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"ncmathan"},"content":"                    list.add(f);","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"ncmathan"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"ncmathan"},"content":"                case \"D\":","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"ncmathan"},"content":"                    Deadline g \u003d new Deadline(out[2], out[3]);","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"ncmathan"},"content":"                    if (out[1].equals(\"1\"))","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"ncmathan"},"content":"                        g.setDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"ncmathan"},"content":"                    list.add(g);","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"ncmathan"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"ncmathan"},"content":"                default:","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"ncmathan"},"content":"                    throw new IllegalStateException(\"Unexpected value: \" + out[0]);","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"ncmathan"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"ncmathan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"ncmathan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"ncmathan"},"content":"            return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"ncmathan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"ncmathan"},"content":"        return list;","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"ncmathan"},"content":"     * Adds text to the end of the text file.","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"ncmathan"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"ncmathan"},"content":"     * @param text The text to be added to the file.","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"ncmathan"},"content":"    public void addToFile(String text) {","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"ncmathan"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"ncmathan"},"content":"            File f \u003d new File(file);","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"ncmathan"},"content":"            FileWriter fw \u003d new FileWriter(f, true);","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"ncmathan"},"content":"            fw.append(text + \"\\n\");","lastModifiedDate":"2023-09-04"},{"lineNumber":77,"author":{"gitId":"ncmathan"},"content":"            fw.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"ncmathan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"ncmathan"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"ncmathan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"ncmathan"},"content":"     * Updates a particular line in the text file to store whether that entry should be marked.","lastModifiedDate":"2023-09-21"},{"lineNumber":85,"author":{"gitId":"ncmathan"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":86,"author":{"gitId":"ncmathan"},"content":"     * @param num The line number to be updated.","lastModifiedDate":"2023-09-21"},{"lineNumber":87,"author":{"gitId":"ncmathan"},"content":"     * @param val Whether the entry should be marked (true) or unmarked (false).","lastModifiedDate":"2023-09-21"},{"lineNumber":88,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"ncmathan"},"content":"    public void updateFile(int num, boolean val) {","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"ncmathan"},"content":"        File file \u003d new File(this.file);","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"ncmathan"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"ncmathan"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"ncmathan"},"content":"            String line \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"ncmathan"},"content":"            String out \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"ncmathan"},"content":"            int count \u003d 0;","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"ncmathan"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"ncmathan"},"content":"                line \u003d sc.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"ncmathan"},"content":"                count +\u003d 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"ncmathan"},"content":"                if (count !\u003d num)","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"ncmathan"},"content":"                    out +\u003d line + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"ncmathan"},"content":"                else {","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"ncmathan"},"content":"                    if (val)","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"ncmathan"},"content":"                        out +\u003d line.substring(0, 2) + \"1\" + line.substring(3) + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"ncmathan"},"content":"                    else","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"ncmathan"},"content":"                        out +\u003d line.substring(0, 2) + \"0\" + line.substring(3) + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"ncmathan"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"ncmathan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"ncmathan"},"content":"            FileWriter fw \u003d new FileWriter(file, false);","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"ncmathan"},"content":"            fw.append(out);","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"ncmathan"},"content":"            fw.flush();","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"ncmathan"},"content":"            fw.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"ncmathan"},"content":"            sc.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"ncmathan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"ncmathan"},"content":"            System.out.println(\"Error:\" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"ncmathan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"ncmathan"},"content":"     * Deletes a particular line from the text file.","lastModifiedDate":"2023-09-21"},{"lineNumber":120,"author":{"gitId":"ncmathan"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":121,"author":{"gitId":"ncmathan"},"content":"     * @param num The line number to be deleted.","lastModifiedDate":"2023-09-21"},{"lineNumber":122,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"ncmathan"},"content":"    public void deleteFromFile(int num) {","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"ncmathan"},"content":"        File f \u003d new File(file);","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"ncmathan"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"ncmathan"},"content":"            Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"ncmathan"},"content":"            String line \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"ncmathan"},"content":"            String out \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"ncmathan"},"content":"            int count \u003d 0;","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"ncmathan"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"ncmathan"},"content":"                line \u003d sc.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"ncmathan"},"content":"                count +\u003d 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"ncmathan"},"content":"                if (count !\u003d num)","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"ncmathan"},"content":"                    out +\u003d line + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"ncmathan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"ncmathan"},"content":"            FileWriter fw \u003d new FileWriter(file, false);","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"ncmathan"},"content":"            fw.append(out);","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"ncmathan"},"content":"            fw.flush();","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"ncmathan"},"content":"            fw.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"ncmathan"},"content":"            sc.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"ncmathan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"ncmathan"},"content":"            System.out.println(\"Error:\" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"ncmathan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"ncmathan"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ncmathan":145}},{"path":"src/main/java/Duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"package Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ncmathan"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":" * Class to encapsulate the features of a task.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"ncmathan"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"ncmathan"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"ncmathan"},"content":"    private String task;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"ncmathan"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"ncmathan"},"content":"     * Public constructor for Task.","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"ncmathan"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"ncmathan"},"content":"     * @param task The description of the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"ncmathan"},"content":"    public Task(String task) {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"ncmathan"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"ncmathan"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"ncmathan"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"ncmathan"},"content":"    public void setDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"ncmathan"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"ncmathan"},"content":"     * Marks the task as undone.","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"ncmathan"},"content":"    public void setUndone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"ncmathan"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"ncmathan"},"content":"     * Checks if the task is done.","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"ncmathan"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"ncmathan"},"content":"     * @return true if the task is done, false otherwise.","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"ncmathan"},"content":"    public boolean getDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"ncmathan"},"content":"        return isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"ncmathan"},"content":"     * Checks if the task description contains a specific string.","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"ncmathan"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"ncmathan"},"content":"     * @param val The string to check for in the task description.","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"ncmathan"},"content":"     * @return true if the string is found, false otherwise.","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"ncmathan"},"content":"    public boolean contains(String val) {","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"ncmathan"},"content":"        return task.contains(val);","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"ncmathan"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"ncmathan"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"ncmathan"},"content":"     * @return A formatted string indicating whether the task is done and its description.","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"ncmathan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"ncmathan"},"content":"        if (isDone)","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"ncmathan"},"content":"            return \"[X] \" + task;","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"ncmathan"},"content":"        return \"[ ] \" + task;","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"ncmathan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ncmathan":63}},{"path":"src/main/java/Duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"package Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ncmathan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"ncmathan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ncmathan"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ncmathan"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"ncmathan"},"content":" * Stores the list of tasks in ArrayList and carries out the functions.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ncmathan"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"ncmathan"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ncmathan"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"ncmathan"},"content":"     * Default constructor.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"ncmathan"},"content":"    public TaskList(){","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ncmathan"},"content":"        list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"ncmathan"},"content":"     * Constructor to load arraylist from another source.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"ncmathan"},"content":"     * @param list","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"ncmathan"},"content":"    public TaskList(ArrayList\u003cTask\u003e list){","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ncmathan"},"content":"        this.list \u003d list;","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"ncmathan"},"content":"     * prints the tasks stored in list.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"ncmathan"},"content":"     * @param ui","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"ncmathan"},"content":"    public void list(Ui ui){","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ncmathan"},"content":"        ui.showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"ncmathan"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ncmathan"},"content":"            int j \u003d i + 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ncmathan"},"content":"            ui.print(j + \".\" + list.get(i) + \"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"ncmathan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"ncmathan"},"content":"        ui.showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"ncmathan"},"content":"    public void sortDeadline(Ui ui){","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"ncmathan"},"content":"        ui.showLine();","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"ncmathan"},"content":"        ArrayList\u003cDeadline\u003e deadlines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"ncmathan"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"ncmathan"},"content":"            if(list.get(i) instanceof Deadline)","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"ncmathan"},"content":"                deadlines.add((Deadline) list.get(i));","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"ncmathan"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"ncmathan"},"content":"        Collections.sort(deadlines);","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"ncmathan"},"content":"        for (int i \u003d 0; i \u003c deadlines.size(); i++) {","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"ncmathan"},"content":"            int j \u003d i + 1;","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"ncmathan"},"content":"            ui.print(j + \".\" + deadlines.get(i) + \"\");","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"ncmathan"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"ncmathan"},"content":"        ui.showLine();","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"ncmathan"},"content":"    public void sortEvent(Ui ui){","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"ncmathan"},"content":"        ui.showLine();","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"ncmathan"},"content":"        ArrayList\u003cEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"ncmathan"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"ncmathan"},"content":"            if(list.get(i) instanceof Event)","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"ncmathan"},"content":"                events.add((Event) list.get(i));","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"ncmathan"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"ncmathan"},"content":"        Collections.sort(events);","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"ncmathan"},"content":"        for (int i \u003d 0; i \u003c events.size(); i++) {","lastModifiedDate":"2023-09-13"},{"lineNumber":67,"author":{"gitId":"ncmathan"},"content":"            int j \u003d i + 1;","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"ncmathan"},"content":"            ui.print(j + \".\" + events.get(i) + \"\");","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"ncmathan"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"ncmathan"},"content":"        ui.showLine();","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":72,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":74,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"ncmathan"},"content":"     * Marks a particular task as done or undone.","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"ncmathan"},"content":"     * @param mark","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"ncmathan"},"content":"     * @param str","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"ncmathan"},"content":"     * @param ui","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"ncmathan"},"content":"     * @param storage","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"ncmathan"},"content":"    public void mark(boolean mark,String str, Ui ui, Storage storage){","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"ncmathan"},"content":"        ui.showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"ncmathan"},"content":"        String val \u003d str.replaceAll(\"[^0-9]\", \"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"ncmathan"},"content":"        int index \u003d Integer.parseInt(val);","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"ncmathan"},"content":"        if(mark){","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"ncmathan"},"content":"            list.get(index-1).setDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"ncmathan"},"content":"            storage.updateFile(index,true);","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"ncmathan"},"content":"            ui.print(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"ncmathan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"ncmathan"},"content":"        else{","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"ncmathan"},"content":"            list.get(index-1).setUndone();","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"ncmathan"},"content":"            storage.updateFile(index,false);","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"ncmathan"},"content":"            ui.print(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"ncmathan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"ncmathan"},"content":"        ui.print(\"\\t\" + list.get(index-1) + \"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"ncmathan"},"content":"        ui.showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"ncmathan"},"content":"     * Creates a todo instance.","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"ncmathan"},"content":"     * @param str","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"ncmathan"},"content":"     * @param ui","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"ncmathan"},"content":"     * @param storage","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"ncmathan"},"content":"    public void todo(String str, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-13"},{"lineNumber":106,"author":{"gitId":"ncmathan"},"content":"        str \u003d str.substring(5);","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"ncmathan"},"content":"        if (str.isEmpty())","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"ncmathan"},"content":"            throw new DukeException(\"\\n____________________________________________________________\\n\" +","lastModifiedDate":"2023-09-13"},{"lineNumber":109,"author":{"gitId":"ncmathan"},"content":"                    \"OOPS!!! The description of a todo cannot be empty.\\n\" +","lastModifiedDate":"2023-09-21"},{"lineNumber":110,"author":{"gitId":"ncmathan"},"content":"                    \"____________________________________________________________\");","lastModifiedDate":"2023-09-13"},{"lineNumber":111,"author":{"gitId":"ncmathan"},"content":"        list.add(new Todo(str));","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"ncmathan"},"content":"        storage.addToFile(\"T,0,\"+str);","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"ncmathan"},"content":"        ui.print(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"ncmathan"},"content":"                \"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"ncmathan"},"content":"        ui.print(\"\\t\" + list.get(list.size() - 1));","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"ncmathan"},"content":"        ui.print(\"Now you have \" + list.size() + \" tasks in your list\");","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"ncmathan"},"content":"        ui.showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"ncmathan"},"content":"     * Converts date from string to LocalDate object.","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"ncmathan"},"content":"     * @param input","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"ncmathan"},"content":"     * @param ui","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"ncmathan"},"content":"     * @return","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"ncmathan"},"content":"    public LocalDate changeDateFormat(String input,Ui ui) throws DukeException {","lastModifiedDate":"2023-09-13"},{"lineNumber":127,"author":{"gitId":"ncmathan"},"content":"        LocalDate date\u003dnull;","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"ncmathan"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"ncmathan"},"content":"            DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"ncmathan"},"content":"            date \u003d LocalDate.parse(input,format);","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"ncmathan"},"content":"        }catch (Exception e){","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"ncmathan"},"content":"            throw new DukeException(\"\\n____________________________________________________________\\n\" +","lastModifiedDate":"2023-09-13"},{"lineNumber":133,"author":{"gitId":"ncmathan"},"content":"                    \"OOPS!!! Improper date format.\\n\" +","lastModifiedDate":"2023-09-21"},{"lineNumber":134,"author":{"gitId":"ncmathan"},"content":"                    \"____________________________________________________________\");","lastModifiedDate":"2023-09-13"},{"lineNumber":135,"author":{"gitId":"ncmathan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"ncmathan"},"content":"        return date;","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"ncmathan"},"content":"     * Creates new deadline instance.","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"ncmathan"},"content":"     * @param str","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"ncmathan"},"content":"     * @param ui","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"ncmathan"},"content":"     * @param storage","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"ncmathan"},"content":"    public void deadline(String str, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-13"},{"lineNumber":146,"author":{"gitId":"ncmathan"},"content":"        str \u003d str.substring(9);","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"ncmathan"},"content":"        if (str.isEmpty())","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"ncmathan"},"content":"            throw new DukeException(\"\\n____________________________________________________________\\n\" +","lastModifiedDate":"2023-09-13"},{"lineNumber":149,"author":{"gitId":"ncmathan"},"content":"                    \"OOPS!!! The description of a deadline cannot be empty.\\n\" +","lastModifiedDate":"2023-09-21"},{"lineNumber":150,"author":{"gitId":"ncmathan"},"content":"                    \"____________________________________________________________\");","lastModifiedDate":"2023-09-13"},{"lineNumber":151,"author":{"gitId":"ncmathan"},"content":"        String[] arr \u003d str.split(\" /by \");","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"ncmathan"},"content":"        if (arr.length\u003c2)","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"ncmathan"},"content":"            throw new DukeException(\"\\n____________________________________________________________\\n\" +","lastModifiedDate":"2023-09-13"},{"lineNumber":154,"author":{"gitId":"ncmathan"},"content":"                    \"OOPS!!! Insufficient parameters passed to deadline.\\n\" +","lastModifiedDate":"2023-09-21"},{"lineNumber":155,"author":{"gitId":"ncmathan"},"content":"                    \"____________________________________________________________\");","lastModifiedDate":"2023-09-13"},{"lineNumber":156,"author":{"gitId":"ncmathan"},"content":"        LocalDate date\u003dchangeDateFormat(arr[1],ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"ncmathan"},"content":"        arr[1]\u003ddate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"ncmathan"},"content":"        list.add(new Deadline(arr[0], arr[1]));","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"ncmathan"},"content":"        storage.addToFile(\"D,0,\"+arr[0]+\",\"+arr[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"ncmathan"},"content":"        ui.print(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"ncmathan"},"content":"                \"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"ncmathan"},"content":"        ui.print(\"\\t\" + list.get(list.size() - 1));","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"ncmathan"},"content":"        ui.print(\"Now you have \" + list.size() + \" tasks in your list\");","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"ncmathan"},"content":"        ui.showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":168,"author":{"gitId":"ncmathan"},"content":"     * Creates new event instance.","lastModifiedDate":"2023-09-02"},{"lineNumber":169,"author":{"gitId":"ncmathan"},"content":"     * @param str","lastModifiedDate":"2023-09-02"},{"lineNumber":170,"author":{"gitId":"ncmathan"},"content":"     * @param ui","lastModifiedDate":"2023-09-02"},{"lineNumber":171,"author":{"gitId":"ncmathan"},"content":"     * @param storage","lastModifiedDate":"2023-09-02"},{"lineNumber":172,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":173,"author":{"gitId":"ncmathan"},"content":"    public void event(String str, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-13"},{"lineNumber":174,"author":{"gitId":"ncmathan"},"content":"        str \u003d str.substring(6);","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"ncmathan"},"content":"        if (str.isEmpty())","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"ncmathan"},"content":"            throw new DukeException(\"\\n____________________________________________________________\\n\" +","lastModifiedDate":"2023-09-13"},{"lineNumber":177,"author":{"gitId":"ncmathan"},"content":"                    \"OOPS!!! The description of a event cannot be empty.\\n\" +","lastModifiedDate":"2023-09-21"},{"lineNumber":178,"author":{"gitId":"ncmathan"},"content":"                    \"____________________________________________________________\");","lastModifiedDate":"2023-09-13"},{"lineNumber":179,"author":{"gitId":"ncmathan"},"content":"        String[] arr \u003d str.split(\" /from \");","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"ncmathan"},"content":"        if (arr.length\u003c2)","lastModifiedDate":"2023-08-31"},{"lineNumber":181,"author":{"gitId":"ncmathan"},"content":"            throw new DukeException(\"\\n____________________________________________________________\\n\" +","lastModifiedDate":"2023-09-13"},{"lineNumber":182,"author":{"gitId":"ncmathan"},"content":"                    \"OOPS!!! Insufficient parameters passed to event.\\n\" +","lastModifiedDate":"2023-09-21"},{"lineNumber":183,"author":{"gitId":"ncmathan"},"content":"                    \"____________________________________________________________\");","lastModifiedDate":"2023-09-13"},{"lineNumber":184,"author":{"gitId":"ncmathan"},"content":"        String[] time \u003d arr[1].split(\" /to \");","lastModifiedDate":"2023-08-31"},{"lineNumber":185,"author":{"gitId":"ncmathan"},"content":"        if (time.length\u003c2)","lastModifiedDate":"2023-08-31"},{"lineNumber":186,"author":{"gitId":"ncmathan"},"content":"            throw new DukeException(\"\\n____________________________________________________________\\n\" +","lastModifiedDate":"2023-09-13"},{"lineNumber":187,"author":{"gitId":"ncmathan"},"content":"                    \"☹ OOPS!!! Insufficient parameters passed to event.\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":188,"author":{"gitId":"ncmathan"},"content":"                    \"____________________________________________________________\");","lastModifiedDate":"2023-09-13"},{"lineNumber":189,"author":{"gitId":"ncmathan"},"content":"        LocalDate date\u003dchangeDateFormat(time[0],ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":190,"author":{"gitId":"ncmathan"},"content":"        time[0]\u003ddate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":191,"author":{"gitId":"ncmathan"},"content":"        date\u003dchangeDateFormat(time[1],ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":192,"author":{"gitId":"ncmathan"},"content":"        time[1]\u003ddate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":193,"author":{"gitId":"ncmathan"},"content":"        list.add(new Event(arr[0], time[0], time[1]));","lastModifiedDate":"2023-08-31"},{"lineNumber":194,"author":{"gitId":"ncmathan"},"content":"        storage.addToFile(\"E,0,\"+arr[0]+\",\"+time[0]+\",\"+time[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":195,"author":{"gitId":"ncmathan"},"content":"        ui.showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":196,"author":{"gitId":"ncmathan"},"content":"        ui.print( \"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":197,"author":{"gitId":"ncmathan"},"content":"        ui.print(\"\\t\" + list.get(list.size() - 1));","lastModifiedDate":"2023-08-31"},{"lineNumber":198,"author":{"gitId":"ncmathan"},"content":"        ui.print(\"Now you have \" + list.size() + \" tasks in your list\");","lastModifiedDate":"2023-08-31"},{"lineNumber":199,"author":{"gitId":"ncmathan"},"content":"        ui.showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":200,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":201,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":202,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":203,"author":{"gitId":"ncmathan"},"content":"     * Deletes a particular task.","lastModifiedDate":"2023-09-02"},{"lineNumber":204,"author":{"gitId":"ncmathan"},"content":"     * @param str","lastModifiedDate":"2023-09-02"},{"lineNumber":205,"author":{"gitId":"ncmathan"},"content":"     * @param ui","lastModifiedDate":"2023-09-02"},{"lineNumber":206,"author":{"gitId":"ncmathan"},"content":"     * @param storage","lastModifiedDate":"2023-09-02"},{"lineNumber":207,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":208,"author":{"gitId":"ncmathan"},"content":"    public void delete(String str, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-13"},{"lineNumber":209,"author":{"gitId":"ncmathan"},"content":"        str \u003d str.substring(7);","lastModifiedDate":"2023-08-31"},{"lineNumber":210,"author":{"gitId":"ncmathan"},"content":"        String val \u003d str.replaceAll(\"[^0-9]\", \"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":211,"author":{"gitId":"ncmathan"},"content":"        int index \u003d Integer.parseInt(val);","lastModifiedDate":"2023-08-31"},{"lineNumber":212,"author":{"gitId":"ncmathan"},"content":"        if (str.isEmpty())","lastModifiedDate":"2023-08-31"},{"lineNumber":213,"author":{"gitId":"ncmathan"},"content":"            throw new DukeException(\"\\n____________________________________________________________\\n\" +","lastModifiedDate":"2023-09-13"},{"lineNumber":214,"author":{"gitId":"ncmathan"},"content":"                    \"OOPS!!! The description of a delete cannot be empty.\\n\" +","lastModifiedDate":"2023-09-21"},{"lineNumber":215,"author":{"gitId":"ncmathan"},"content":"                    \"____________________________________________________________\");","lastModifiedDate":"2023-09-13"},{"lineNumber":216,"author":{"gitId":"ncmathan"},"content":"        ui.showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":217,"author":{"gitId":"ncmathan"},"content":"        ui.print(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":218,"author":{"gitId":"ncmathan"},"content":"        ui.print(\"\\t\" + list.get(index - 1));","lastModifiedDate":"2023-08-31"},{"lineNumber":219,"author":{"gitId":"ncmathan"},"content":"        list.remove(index - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":220,"author":{"gitId":"ncmathan"},"content":"        storage.deleteFromFile(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":221,"author":{"gitId":"ncmathan"},"content":"        ui.print(\"Now you have \" + list.size() + \" tasks in your list\");","lastModifiedDate":"2023-08-31"},{"lineNumber":222,"author":{"gitId":"ncmathan"},"content":"        ui.showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":223,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":224,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":225,"author":{"gitId":"ncmathan"},"content":"    public void find (String str, Ui ui) {","lastModifiedDate":"2023-09-02"},{"lineNumber":226,"author":{"gitId":"ncmathan"},"content":"        str \u003d str.substring(5);","lastModifiedDate":"2023-09-02"},{"lineNumber":227,"author":{"gitId":"ncmathan"},"content":"        ui.showLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":228,"author":{"gitId":"ncmathan"},"content":"        ui.print(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-09-02"},{"lineNumber":229,"author":{"gitId":"ncmathan"},"content":"        int j \u003d 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":230,"author":{"gitId":"ncmathan"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":231,"author":{"gitId":"ncmathan"},"content":"            if (list.get(i).contains(str)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":232,"author":{"gitId":"ncmathan"},"content":"                ui.print(j + \".\" + list.get(i) + \"\");","lastModifiedDate":"2023-09-02"},{"lineNumber":233,"author":{"gitId":"ncmathan"},"content":"                j +\u003d 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":234,"author":{"gitId":"ncmathan"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":235,"author":{"gitId":"ncmathan"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":236,"author":{"gitId":"ncmathan"},"content":"        ui.showLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":237,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":238,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":239,"author":{"gitId":"ncmathan"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ncmathan":239}},{"path":"src/main/java/Duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"package Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ncmathan"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":" * Class to create todo instances.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"ncmathan"},"content":" * Extends Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"ncmathan"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"ncmathan"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"ncmathan"},"content":"     * Constructor fof todo","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ncmathan"},"content":"     * @param val","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"ncmathan"},"content":"    public Todo (String val){","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"ncmathan"},"content":"        super(val);","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"ncmathan"},"content":"    public String toString(){","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"ncmathan"},"content":"        return \"[T]\"+super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"ncmathan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ncmathan":18}},{"path":"src/main/java/Duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"package Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ncmathan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"ncmathan"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"ncmathan"},"content":" * Class to handle interactions with user.","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"ncmathan"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ncmathan"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ncmathan"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ncmathan"},"content":"    private String buffer;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"ncmathan"},"content":"     * Default constructor.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"ncmathan"},"content":"    public Ui(){","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ncmathan"},"content":"        buffer \u003d \"\";","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"ncmathan"},"content":"        scanner\u003dnew Scanner(System.in);","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"ncmathan"},"content":"     * Returns welcome message.","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"ncmathan"},"content":"    public String getWelcome(){","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"ncmathan"},"content":"        return \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"ncmathan"},"content":"                \" Hello! I\u0027m Mathan\\n\" +","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"ncmathan"},"content":"                \" What can I do for you?\";","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"ncmathan"},"content":"     * Prints exit message.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"ncmathan"},"content":"    public void showExit(){","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ncmathan"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ncmathan"},"content":"                \" Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"ncmathan"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ncmathan"},"content":"        buffer +\u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"ncmathan"},"content":"                \" Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"ncmathan"},"content":"                \"____________________________________________________________\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"ncmathan"},"content":"     * Prints line spacer.","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"ncmathan"},"content":"    public void showLine(){","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"ncmathan"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"ncmathan"},"content":"        buffer \u003d buffer + \"____________________________________________________________\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"ncmathan"},"content":"     * Prints text to user.","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"ncmathan"},"content":"     * @param str","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"ncmathan"},"content":"    public void print(String str){","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"ncmathan"},"content":"        System.out.println(str);","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"ncmathan"},"content":"        buffer +\u003d str + \"\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"ncmathan"},"content":"     * Prints DukeException errors.","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"ncmathan"},"content":"     * @param e","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"ncmathan"},"content":"    public void handleError(DukeException e){","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"ncmathan"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"ncmathan"},"content":"        buffer +\u003d e.getMessage() + \"\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"ncmathan"},"content":"    public String emptyBuffer(){","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"ncmathan"},"content":"        String tmp \u003d buffer;","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"ncmathan"},"content":"        buffer \u003d \"\";","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"ncmathan"},"content":"        return tmp;","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"ncmathan"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ncmathan":73}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"ncmathan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"ncmathan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"ncmathan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"ncmathan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" \u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"ncmathan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"ncmathan"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"ncmathan"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"ncmathan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"ncmathan"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"ncmathan"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"ncmathan"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"ncmathan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"ncmathan":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"ncmathan"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"ncmathan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"ncmathan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"ncmathan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"ncmathan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"500.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"Duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"ncmathan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"ncmathan"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"400.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"ncmathan"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"400.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"ncmathan"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"500.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"ncmathan"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"ncmathan"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"488.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"ncmathan"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"ncmathan"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"ncmathan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"ncmathan"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"ncmathan":19}},{"path":"src/test/java/Duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"package Duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"ncmathan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"ncmathan"},"content":"import java.io.File;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"ncmathan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"ncmathan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"ncmathan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ncmathan"},"content":"public class StorageTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"ncmathan"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"ncmathan"},"content":"    public void testAddToFile(){","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"ncmathan"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"ncmathan"},"content":"            File f \u003d new File(\"testfile.txt\");","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"ncmathan"},"content":"            FileWriter fw \u003d new FileWriter(f, false);","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"ncmathan"},"content":"            fw.append(\"hello\");","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"ncmathan"},"content":"            fw.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"ncmathan"},"content":"            Storage storage \u003d new Storage(\"testfile.txt\");","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"ncmathan"},"content":"            storage.addToFile(\"bye\");","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"ncmathan"},"content":"            Scanner scanner \u003d new Scanner(f);","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"ncmathan"},"content":"            assertEquals(\"hellobye\",scanner.nextLine());","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"ncmathan"},"content":"        }catch (Exception e){","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"ncmathan"},"content":"            System.out.println(\"Exception while testing: \"+e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"ncmathan"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"ncmathan"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"ncmathan":27}},{"path":"src/test/java/Duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"package Duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"ncmathan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"ncmathan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"ncmathan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ncmathan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"ncmathan"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"ncmathan"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"ncmathan"},"content":"    public void testChangeDateFormat() throws DukeException {","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"ncmathan"},"content":"        assertEquals(null,new TaskList().changeDateFormat(\"2019\",new Ui()));","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"ncmathan"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyyMMdd\");","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"ncmathan"},"content":"        LocalDate date \u003d LocalDate.parse(\"20190404\",format);","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"ncmathan"},"content":"        assertEquals(date,new TaskList().changeDateFormat(\"2019-04-04\",new Ui()));","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"ncmathan"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"ncmathan":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"ncmathan"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ncmathan":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ncmathan"},"content":"java -classpath ..\\bin Duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"ncmathan":1}}]
