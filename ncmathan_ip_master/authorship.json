[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"# Duke.Duke project template","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"ncmathan"},"content":"3. After that, locate the `src/main/java/Duke.Duke.java` file, right-click it, and choose `Run Duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ncmathan":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"ncmathan"},"content":"    mainClass.set(\"Duke.Duke\")","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"ncmathan":2}},{"path":"file.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"T,1,clean","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"E,1,ceremony,11am,12pm","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"ncmathan":2}},{"path":"src/main/java/Duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"package Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ncmathan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"ncmathan"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"ncmathan"},"content":" * Class to create and store deadlines.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ncmathan"},"content":" * Extends Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"ncmathan"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ncmathan"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"ncmathan"},"content":"    private LocalDate by;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"ncmathan"},"content":"     * public constructor for Deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"ncmathan"},"content":"     * @param val","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"ncmathan"},"content":"     * @param by","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"ncmathan"},"content":"    public Deadline (String val, String by){","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"ncmathan"},"content":"        super(val);","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"ncmathan"},"content":"        this.by\u003dLocalDate.parse(by,DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"ncmathan"},"content":"    public String toString(){","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"ncmathan"},"content":"        return \"[D]\"+super.toString() +\" (by: \"+by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))+\")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"ncmathan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ncmathan":25}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"package Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"ncmathan"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":" * Main class from which Duke program is run.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"ncmathan"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"ncmathan"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ncmathan"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ncmathan"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"ncmathan"},"content":"    private Parser parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"ncmathan"},"content":"     * Main method for Duke.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"ncmathan"},"content":"     * @param args","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"ncmathan"},"content":"     * @throws DukeException","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"ncmathan"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ncmathan"},"content":"        new Duke(\"file.txt\").run();","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"ncmathan"},"content":"     * Public constructor for Duke","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"ncmathan"},"content":"     * @param filename for the txt file to be referenced.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"ncmathan"},"content":"    public Duke (String filename){","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ncmathan"},"content":"        ui\u003dnew Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ncmathan"},"content":"        storage\u003dnew Storage(filename);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"ncmathan"},"content":"        tasks\u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"ncmathan"},"content":"        parser\u003dnew Parser();","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"ncmathan"},"content":"     * Contains the logic essential to the running of Duke.","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"ncmathan"},"content":"    public void run(){","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ncmathan"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"ncmathan"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"ncmathan"},"content":"        while (!isExit) {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"ncmathan"},"content":"            String cmd \u003d ui.readCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"ncmathan"},"content":"            parser.parse(cmd, tasks, storage, ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"ncmathan"},"content":"            isExit \u003d parser.isExit();","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"ncmathan"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"ncmathan"},"content":"        ui.showExit();","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ncmathan":44,"-":3}},{"path":"src/main/java/Duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"package Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ncmathan"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":" * Class to contain exceptions thrown from Duke","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"ncmathan"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"ncmathan"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ncmathan"},"content":"     * public constructor for Duke","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"ncmathan"},"content":"     * @param msg","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"ncmathan"},"content":"    public DukeException(String msg){","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"ncmathan"},"content":"        super(msg);","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"ncmathan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ncmathan":15}},{"path":"src/main/java/Duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"package Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ncmathan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"ncmathan"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"ncmathan"},"content":" * Class to generate Events.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ncmathan"},"content":" * Extends task.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"ncmathan"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ncmathan"},"content":"public class Event extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"ncmathan"},"content":"    private LocalDate from;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ncmathan"},"content":"    private LocalDate to;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"ncmathan"},"content":"     * public constructor for Event.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"ncmathan"},"content":"     * @param val","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"ncmathan"},"content":"     * @param from","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"ncmathan"},"content":"     * @param to","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"ncmathan"},"content":"    public Event (String val, String from, String to){","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"ncmathan"},"content":"        super(val);","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"ncmathan"},"content":"        this.from\u003dLocalDate.parse(from,DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"ncmathan"},"content":"        this.to \u003d LocalDate.parse(to,DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"ncmathan"},"content":"    public String toString(){","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"ncmathan"},"content":"        return \"[E]\"+super.toString() +\" (from: \"+from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))+\" to: \"+to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))+\")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"ncmathan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ncmathan":29}},{"path":"src/main/java/Duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"package Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ncmathan"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":" * Class to parse the input from user.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"ncmathan"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"ncmathan"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"ncmathan"},"content":"    private boolean isExit;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ncmathan"},"content":"     * Default constructor.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"ncmathan"},"content":"    public Parser(){","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ncmathan"},"content":"        isExit\u003dfalse;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"ncmathan"},"content":"     * static method which takes in instances of other essential classes.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"ncmathan"},"content":"     * @param str","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"ncmathan"},"content":"     * @param list","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"ncmathan"},"content":"     * @param storage","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"ncmathan"},"content":"     * @param ui","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"ncmathan"},"content":"    public void parse(String str, TaskList list, Storage storage,Ui ui){","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ncmathan"},"content":"            if(str.equals(\"bye\")){","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ncmathan"},"content":"                isExit\u003dtrue;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ncmathan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ncmathan"},"content":"            else if (str.equals(\"list\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ncmathan"},"content":"                list.list(ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"ncmathan"},"content":"            } else if (str.contains(\"unmark\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"ncmathan"},"content":"                list.mark(false,str,ui,storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ncmathan"},"content":"            } else if (str.contains(\"mark\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ncmathan"},"content":"                list.mark(false,str,ui,storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ncmathan"},"content":"            } else if (str.startsWith(\"todo \")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"ncmathan"},"content":"                list.todo(str,ui,storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ncmathan"},"content":"            } else if (str.startsWith(\"deadline \")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ncmathan"},"content":"                list.deadline(str,ui,storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"ncmathan"},"content":"            } else if (str.startsWith(\"event \")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"ncmathan"},"content":"                list.event(str,ui,storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"ncmathan"},"content":"            } else if (str.startsWith(\"delete \")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"ncmathan"},"content":"                list.delete(str,ui,storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"ncmathan"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"ncmathan"},"content":"                ui.handleError(new DukeException(\"\\n____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"ncmathan"},"content":"                        \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"ncmathan"},"content":"                        \"____________________________________________________________\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"ncmathan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"ncmathan"},"content":"     * Checks if program should still run.","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"ncmathan"},"content":"     * @return","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"ncmathan"},"content":"    public boolean isExit(){","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"ncmathan"},"content":"        return isExit;","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"ncmathan"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ncmathan":58}},{"path":"src/main/java/Duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"package Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ncmathan"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"ncmathan"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ncmathan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"ncmathan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ncmathan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ncmathan"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"ncmathan"},"content":" * Class to read and write to text file.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"ncmathan"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"ncmathan"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ncmathan"},"content":"    private String file;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"ncmathan"},"content":"     * Constructor taking in file name.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"ncmathan"},"content":"     * @param file","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"ncmathan"},"content":"    public Storage(String file){","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ncmathan"},"content":"        this.file\u003dfile;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"ncmathan"},"content":"     * Method to read from text file to load to ArrayList.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"ncmathan"},"content":"     * @return","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"ncmathan"},"content":"    public ArrayList\u003cTask\u003e load(){","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"ncmathan"},"content":"        ArrayList\u003cTask\u003e list \u003dnew ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"ncmathan"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ncmathan"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ncmathan"},"content":"            String st;","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ncmathan"},"content":"            while ((st \u003d br.readLine()) !\u003d null){","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ncmathan"},"content":"                String[] out\u003dst.split(\",\");","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"ncmathan"},"content":"                switch (out[0]){","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ncmathan"},"content":"                    case \"T\":","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ncmathan"},"content":"                        Todo e \u003dnew Todo(out[2]);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"ncmathan"},"content":"                        if(out[1].equals(\"1\"))","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"ncmathan"},"content":"                            e.setDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"ncmathan"},"content":"                        list.add(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"ncmathan"},"content":"                        break;","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"ncmathan"},"content":"                    case \"E\":","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"ncmathan"},"content":"                        Event f \u003dnew Event(out[2],out[3],out[4]);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"ncmathan"},"content":"                        if(out[1].equals(\"1\"))","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"ncmathan"},"content":"                            f.setDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"ncmathan"},"content":"                        list.add(f);","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"ncmathan"},"content":"                        break;","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"ncmathan"},"content":"                    case \"D\":","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"ncmathan"},"content":"                        Deadline g \u003dnew Deadline(out[2],out[3]);","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"ncmathan"},"content":"                        if(out[1].equals(\"1\"))","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"ncmathan"},"content":"                            g.setDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"ncmathan"},"content":"                        list.add(g);","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"ncmathan"},"content":"                        break;","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"ncmathan"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"ncmathan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"ncmathan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"ncmathan"},"content":"        catch (Exception e){","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"ncmathan"},"content":"            return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"ncmathan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"ncmathan"},"content":"        return list;","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"ncmathan"},"content":"     * Adds text to file.","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"ncmathan"},"content":"     * @param text","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"ncmathan"},"content":"    public void addToFile(String text){","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"ncmathan"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"ncmathan"},"content":"            File f \u003d new File(file);","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"ncmathan"},"content":"            FileWriter fw \u003d new FileWriter(f, true);","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"ncmathan"},"content":"            fw.append(text);","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"ncmathan"},"content":"            fw.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"ncmathan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"ncmathan"},"content":"        catch (Exception e){","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"ncmathan"},"content":"            System.out.println(\"Error:\" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"ncmathan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"ncmathan"},"content":"     * Updates a particular line in the text file to store if that entry","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"ncmathan"},"content":"     * should be marked.","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"ncmathan"},"content":"     * @param num line number","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"ncmathan"},"content":"     * @param val whether the entry should be marked","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"ncmathan"},"content":"    public void updateFile(int num,boolean val){","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"ncmathan"},"content":"        File file \u003d new File(this.file);","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"ncmathan"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"ncmathan"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"ncmathan"},"content":"            String line\u003d\"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"ncmathan"},"content":"            String out\u003d\"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"ncmathan"},"content":"            int count\u003d0;","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"ncmathan"},"content":"            while(sc.hasNextLine()){","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"ncmathan"},"content":"                line\u003dsc.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"ncmathan"},"content":"                count+\u003d1;","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"ncmathan"},"content":"                if(count!\u003dnum)","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"ncmathan"},"content":"                    out+\u003dline+\"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"ncmathan"},"content":"                else{","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"ncmathan"},"content":"                    if(val)","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"ncmathan"},"content":"                        out+\u003dline.substring(0,2)+\"1\"+line.substring(3)+\"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"ncmathan"},"content":"                    else","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"ncmathan"},"content":"                        out+\u003dline.substring(0,2)+\"0\"+line.substring(3)+\"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"ncmathan"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"ncmathan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"ncmathan"},"content":"            FileWriter fw\u003dnew FileWriter(file,false);","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"ncmathan"},"content":"            fw.append(out);","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"ncmathan"},"content":"            fw.flush();","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"ncmathan"},"content":"            fw.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"ncmathan"},"content":"            sc.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"ncmathan"},"content":"        }catch (Exception e){","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"ncmathan"},"content":"            System.out.println(\"Error:\"+e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"ncmathan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"ncmathan"},"content":"     * Delete a particular line from the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"ncmathan"},"content":"     * @param num","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"ncmathan"},"content":"    public void deleteFromFile(int num) {","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"ncmathan"},"content":"        File f \u003d new File(file);","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"ncmathan"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"ncmathan"},"content":"            Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"ncmathan"},"content":"            String line\u003d\"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"ncmathan"},"content":"            String out\u003d\"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"ncmathan"},"content":"            int count\u003d0;","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"ncmathan"},"content":"            while(sc.hasNextLine()){","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"ncmathan"},"content":"                line\u003dsc.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"ncmathan"},"content":"                count+\u003d1;","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"ncmathan"},"content":"                if(count!\u003dnum)","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"ncmathan"},"content":"                    out+\u003dline+\"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"ncmathan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"ncmathan"},"content":"            FileWriter fw\u003dnew FileWriter(file,false);","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"ncmathan"},"content":"            fw.append(out);","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"ncmathan"},"content":"            fw.flush();","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"ncmathan"},"content":"            fw.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"ncmathan"},"content":"            sc.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"ncmathan"},"content":"        }catch (Exception e){","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"ncmathan"},"content":"            System.out.println(\"Error:\"+e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"ncmathan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"ncmathan"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ncmathan":145}},{"path":"src/main/java/Duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"package Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ncmathan"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":" * Class to encapsulate the features of a task.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"ncmathan"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"ncmathan"},"content":"public class Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"ncmathan"},"content":"    private String task;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"ncmathan"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"ncmathan"},"content":"     * public constructor for Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"ncmathan"},"content":"     * @param task","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"ncmathan"},"content":"    public Task(String task){","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"ncmathan"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"ncmathan"},"content":"        isDone\u003dfalse;","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"ncmathan"},"content":"    public void setDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"ncmathan"},"content":"        isDone\u003dtrue;","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"ncmathan"},"content":"    public void setUndone(){","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"ncmathan"},"content":"        isDone\u003dfalse;","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"ncmathan"},"content":"    public boolean getDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"ncmathan"},"content":"        return isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"ncmathan"},"content":"    public boolean contains (String val) {","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"ncmathan"},"content":"        return task.contains(val);","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"ncmathan"},"content":"    public String toString(){","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"ncmathan"},"content":"        if(isDone)","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"ncmathan"},"content":"            return \"[X] \"+ task;","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"ncmathan"},"content":"        return \"[ ] \"+ task;","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"ncmathan"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ncmathan":40}},{"path":"src/main/java/Duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"package Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ncmathan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"ncmathan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"ncmathan"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ncmathan"},"content":" * Stores the list of tasks in ArrayList and carries out the functions.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"ncmathan"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ncmathan"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ncmathan"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"ncmathan"},"content":"     * Default constructor.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"ncmathan"},"content":"    public TaskList(){","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ncmathan"},"content":"        list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"ncmathan"},"content":"     * Constructor to load arraylist from another source.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"ncmathan"},"content":"     * @param list","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"ncmathan"},"content":"    public TaskList(ArrayList\u003cTask\u003e list){","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ncmathan"},"content":"        this.list \u003d list;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"ncmathan"},"content":"     * prints the tasks stored in list.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"ncmathan"},"content":"     * @param ui","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"ncmathan"},"content":"    public void list(Ui ui){","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ncmathan"},"content":"        ui.showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ncmathan"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"ncmathan"},"content":"            int j \u003d i + 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ncmathan"},"content":"            ui.print(j + \".\" + list.get(i) + \"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ncmathan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"ncmathan"},"content":"        ui.showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"ncmathan"},"content":"     * Marks a particular task as done or undone.","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"ncmathan"},"content":"     * @param mark","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"ncmathan"},"content":"     * @param str","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"ncmathan"},"content":"     * @param ui","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"ncmathan"},"content":"     * @param storage","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"ncmathan"},"content":"    public void mark(boolean mark,String str, Ui ui, Storage storage){","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"ncmathan"},"content":"        ui.showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"ncmathan"},"content":"        String val \u003d str.replaceAll(\"[^0-9]\", \"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"ncmathan"},"content":"        int index \u003d Integer.parseInt(val);","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"ncmathan"},"content":"        if(mark){","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"ncmathan"},"content":"            list.get(index-1).setDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"ncmathan"},"content":"            storage.updateFile(index,true);","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"ncmathan"},"content":"            ui.print(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"ncmathan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"ncmathan"},"content":"        else{","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"ncmathan"},"content":"            list.get(index-1).setUndone();","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"ncmathan"},"content":"            storage.updateFile(index,false);","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"ncmathan"},"content":"            ui.print(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"ncmathan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"ncmathan"},"content":"        ui.print(\"\\t\" + list.get(index-1) + \"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"ncmathan"},"content":"        ui.showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"ncmathan"},"content":"     * Creates a todo instance.","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"ncmathan"},"content":"     * @param str","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"ncmathan"},"content":"     * @param ui","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"ncmathan"},"content":"     * @param storage","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"ncmathan"},"content":"    public void todo(String str, Ui ui, Storage storage){","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"ncmathan"},"content":"        str \u003d str.substring(5);","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"ncmathan"},"content":"        if (str.isEmpty())","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"ncmathan"},"content":"            ui.handleError(new DukeException(\"\\n____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"ncmathan"},"content":"                    \"☹ OOPS!!! The description of a todo cannot be empty.\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"ncmathan"},"content":"                    \"____________________________________________________________\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"ncmathan"},"content":"        list.add(new Todo(str));","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"ncmathan"},"content":"        storage.addToFile(\"T,0,\"+str);","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"ncmathan"},"content":"        ui.print(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"ncmathan"},"content":"                \"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"ncmathan"},"content":"        ui.print(\"\\t\" + list.get(list.size() - 1));","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"ncmathan"},"content":"        ui.print(\"Now you have \" + list.size() + \" tasks in your list\");","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"ncmathan"},"content":"        ui.showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"ncmathan"},"content":"     * Converts date from string to LocalDate object.","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"ncmathan"},"content":"     * @param input","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"ncmathan"},"content":"     * @param ui","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"ncmathan"},"content":"     * @return","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"ncmathan"},"content":"    public LocalDate changeDateFormat(String input,Ui ui){","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"ncmathan"},"content":"        LocalDate date\u003dnull;","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"ncmathan"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"ncmathan"},"content":"            DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"ncmathan"},"content":"            date \u003d LocalDate.parse(input,format);","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"ncmathan"},"content":"        }catch (Exception e){","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"ncmathan"},"content":"            ui.handleError(new DukeException(\"\\n____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"ncmathan"},"content":"                    \"☹ OOPS!!! Improper date format.\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"ncmathan"},"content":"                    \"____________________________________________________________\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"ncmathan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"ncmathan"},"content":"        return date;","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"ncmathan"},"content":"     * Creates new deadline instance.","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"ncmathan"},"content":"     * @param str","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"ncmathan"},"content":"     * @param ui","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"ncmathan"},"content":"     * @param storage","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"ncmathan"},"content":"    public void deadline(String str, Ui ui, Storage storage){","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"ncmathan"},"content":"        str \u003d str.substring(9);","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"ncmathan"},"content":"        if (str.isEmpty())","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"ncmathan"},"content":"            ui.handleError(new DukeException(\"\\n____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"ncmathan"},"content":"                    \"☹ OOPS!!! The description of a deadline cannot be empty.\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"ncmathan"},"content":"                    \"____________________________________________________________\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"ncmathan"},"content":"        String[] arr \u003d str.split(\" /by \");","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"ncmathan"},"content":"        if (arr.length\u003c2)","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"ncmathan"},"content":"            ui.handleError(new DukeException(\"\\n____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"ncmathan"},"content":"                    \"☹ OOPS!!! Insufficient parameters passed to deadline.\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"ncmathan"},"content":"                    \"____________________________________________________________\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"ncmathan"},"content":"        LocalDate date\u003dchangeDateFormat(arr[1],ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"ncmathan"},"content":"        arr[1]\u003ddate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"ncmathan"},"content":"        list.add(new Deadline(arr[0], arr[1]));","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"ncmathan"},"content":"        storage.addToFile(\"D,0,\"+arr[0]+\",\"+arr[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"ncmathan"},"content":"        ui.print(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"ncmathan"},"content":"                \"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"ncmathan"},"content":"        ui.print(\"\\t\" + list.get(list.size() - 1));","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"ncmathan"},"content":"        ui.print(\"Now you have \" + list.size() + \" tasks in your list\");","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"ncmathan"},"content":"        ui.showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"ncmathan"},"content":"     * Creates new event instance.","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"ncmathan"},"content":"     * @param str","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"ncmathan"},"content":"     * @param ui","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"ncmathan"},"content":"     * @param storage","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"ncmathan"},"content":"    public void event(String str, Ui ui, Storage storage){","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"ncmathan"},"content":"        str \u003d str.substring(6);","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"ncmathan"},"content":"        if (str.isEmpty())","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"ncmathan"},"content":"            ui.handleError(new DukeException(\"\\n____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"ncmathan"},"content":"                    \"☹ OOPS!!! The description of a event cannot be empty.\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"ncmathan"},"content":"                    \"____________________________________________________________\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"ncmathan"},"content":"        String[] arr \u003d str.split(\" /from \");","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"ncmathan"},"content":"        if (arr.length\u003c2)","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"ncmathan"},"content":"            ui.handleError(new DukeException(\"\\n____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"ncmathan"},"content":"                    \"☹ OOPS!!! Insufficient parameters passed to event.\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"ncmathan"},"content":"                    \"____________________________________________________________\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"ncmathan"},"content":"        String[] time \u003d arr[1].split(\" /to \");","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"ncmathan"},"content":"        if (time.length\u003c2)","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"ncmathan"},"content":"            ui.handleError(new DukeException(\"\\n____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"ncmathan"},"content":"                    \"☹ OOPS!!! Insufficient parameters passed to event.\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"ncmathan"},"content":"                    \"____________________________________________________________\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"ncmathan"},"content":"        LocalDate date\u003dchangeDateFormat(time[0],ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"ncmathan"},"content":"        time[0]\u003ddate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"ncmathan"},"content":"        date\u003dchangeDateFormat(time[1],ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"ncmathan"},"content":"        time[1]\u003ddate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"ncmathan"},"content":"        list.add(new Event(arr[0], time[0], time[1]));","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"ncmathan"},"content":"        storage.addToFile(\"E,0,\"+arr[0]+\",\"+time[0]+\",\"+time[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"ncmathan"},"content":"        ui.showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"ncmathan"},"content":"        ui.print( \"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"ncmathan"},"content":"        ui.print(\"\\t\" + list.get(list.size() - 1));","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"ncmathan"},"content":"        ui.print(\"Now you have \" + list.size() + \" tasks in your list\");","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"ncmathan"},"content":"        ui.showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":170,"author":{"gitId":"ncmathan"},"content":"     * Deletes a particular task.","lastModifiedDate":"2023-09-02"},{"lineNumber":171,"author":{"gitId":"ncmathan"},"content":"     * @param str","lastModifiedDate":"2023-09-02"},{"lineNumber":172,"author":{"gitId":"ncmathan"},"content":"     * @param ui","lastModifiedDate":"2023-09-02"},{"lineNumber":173,"author":{"gitId":"ncmathan"},"content":"     * @param storage","lastModifiedDate":"2023-09-02"},{"lineNumber":174,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":175,"author":{"gitId":"ncmathan"},"content":"    public void delete(String str, Ui ui, Storage storage){","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"ncmathan"},"content":"        str \u003d str.substring(7);","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"ncmathan"},"content":"        String val \u003d str.replaceAll(\"[^0-9]\", \"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":178,"author":{"gitId":"ncmathan"},"content":"        int index \u003d Integer.parseInt(val);","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"ncmathan"},"content":"        if (str.isEmpty())","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"ncmathan"},"content":"            ui.handleError(new DukeException(\"\\n____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":181,"author":{"gitId":"ncmathan"},"content":"                    \"☹ OOPS!!! The description of a delete cannot be empty.\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":182,"author":{"gitId":"ncmathan"},"content":"                    \"____________________________________________________________\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":183,"author":{"gitId":"ncmathan"},"content":"        ui.showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":184,"author":{"gitId":"ncmathan"},"content":"        ui.print(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":185,"author":{"gitId":"ncmathan"},"content":"        ui.print(\"\\t\" + list.get(index - 1));","lastModifiedDate":"2023-08-31"},{"lineNumber":186,"author":{"gitId":"ncmathan"},"content":"        list.remove(index - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":187,"author":{"gitId":"ncmathan"},"content":"        storage.deleteFromFile(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":188,"author":{"gitId":"ncmathan"},"content":"        ui.print(\"Now you have \" + list.size() + \" tasks in your list\");","lastModifiedDate":"2023-08-31"},{"lineNumber":189,"author":{"gitId":"ncmathan"},"content":"        ui.showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":190,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":191,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":192,"author":{"gitId":"ncmathan"},"content":"    public void find (String str, Ui ui) {","lastModifiedDate":"2023-09-02"},{"lineNumber":193,"author":{"gitId":"ncmathan"},"content":"        str \u003d str.substring(5);","lastModifiedDate":"2023-09-02"},{"lineNumber":194,"author":{"gitId":"ncmathan"},"content":"        ui.showLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":195,"author":{"gitId":"ncmathan"},"content":"        ui.print(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-09-02"},{"lineNumber":196,"author":{"gitId":"ncmathan"},"content":"        int j \u003d 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":197,"author":{"gitId":"ncmathan"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":198,"author":{"gitId":"ncmathan"},"content":"            if (list.get(i).contains(str)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":199,"author":{"gitId":"ncmathan"},"content":"                ui.print(j + \".\" + list.get(i) + \"\");","lastModifiedDate":"2023-09-02"},{"lineNumber":200,"author":{"gitId":"ncmathan"},"content":"                j +\u003d 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":201,"author":{"gitId":"ncmathan"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":202,"author":{"gitId":"ncmathan"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":203,"author":{"gitId":"ncmathan"},"content":"        ui.showLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":204,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":205,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":206,"author":{"gitId":"ncmathan"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ncmathan":206}},{"path":"src/main/java/Duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"package Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ncmathan"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":" * Class to create todo instances.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"ncmathan"},"content":" * Extends Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"ncmathan"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"ncmathan"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"ncmathan"},"content":"     * Constructor fof todo","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ncmathan"},"content":"     * @param val","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"ncmathan"},"content":"    public Todo (String val){","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"ncmathan"},"content":"        super(val);","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"ncmathan"},"content":"    public String toString(){","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"ncmathan"},"content":"        return \"[T]\"+super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"ncmathan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ncmathan":18}},{"path":"src/main/java/Duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"package Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ncmathan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"ncmathan"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"ncmathan"},"content":" * Class to handle interactions with user.","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"ncmathan"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ncmathan"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ncmathan"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"ncmathan"},"content":"     * Default constructor.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"ncmathan"},"content":"    public Ui(){","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ncmathan"},"content":"        scanner\u003dnew Scanner(System.in);","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"ncmathan"},"content":"     * reads user input.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"ncmathan"},"content":"     * @return","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"ncmathan"},"content":"    public String readCommand(){","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ncmathan"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"ncmathan"},"content":"     * Prints welcome message.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"ncmathan"},"content":"    public void showWelcome(){","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"ncmathan"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ncmathan"},"content":"                \" Hello! I\u0027m Mathan\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ncmathan"},"content":"                \" What can I do for you?\");","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"ncmathan"},"content":"     * Prints exit message.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"ncmathan"},"content":"    public void showExit(){","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"ncmathan"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"ncmathan"},"content":"                \" Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"ncmathan"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"ncmathan"},"content":"     * Prints line spacer.","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"ncmathan"},"content":"    public void showLine(){","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"ncmathan"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"ncmathan"},"content":"     * Prints text to user.","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"ncmathan"},"content":"     * @param str","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"ncmathan"},"content":"    public void print(String str){","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"ncmathan"},"content":"        System.out.println(str);","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"ncmathan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"ncmathan"},"content":"     * Prints DukeException errors.","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"ncmathan"},"content":"     * @param e","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"ncmathan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"ncmathan"},"content":"    public void handleError(DukeException e){","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"ncmathan"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"ncmathan"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ncmathan":66}},{"path":"src/test/java/Duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"package Duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"ncmathan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"ncmathan"},"content":"import java.io.File;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"ncmathan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"ncmathan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"ncmathan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ncmathan"},"content":"public class StorageTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"ncmathan"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"ncmathan"},"content":"    public void testAddToFile(){","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"ncmathan"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"ncmathan"},"content":"            File f \u003d new File(\"testfile.txt\");","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"ncmathan"},"content":"            FileWriter fw \u003d new FileWriter(f, false);","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"ncmathan"},"content":"            fw.append(\"hello\");","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"ncmathan"},"content":"            fw.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"ncmathan"},"content":"            Storage storage \u003d new Storage(\"testfile.txt\");","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"ncmathan"},"content":"            storage.addToFile(\"bye\");","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"ncmathan"},"content":"            Scanner scanner \u003d new Scanner(f);","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"ncmathan"},"content":"            assertEquals(\"hellobye\",scanner.nextLine());","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"ncmathan"},"content":"        }catch (Exception e){","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"ncmathan"},"content":"            System.out.println(\"Exception while testing: \"+e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"ncmathan"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"ncmathan"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"ncmathan":27}},{"path":"src/test/java/Duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"package Duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"ncmathan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"ncmathan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"ncmathan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"ncmathan"},"content":"import java.util.Date;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"ncmathan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ncmathan"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"ncmathan"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"ncmathan"},"content":"    public void testChangeDateFormat(){","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"ncmathan"},"content":"        assertEquals(null,new TaskList().changeDateFormat(\"2019\",new Ui()));","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"ncmathan"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyyMMdd\");","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"ncmathan"},"content":"        LocalDate date \u003d LocalDate.parse(\"20190404\",format);","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"ncmathan"},"content":"        assertEquals(date,new TaskList().changeDateFormat(\"2019-04-04\",new Ui()));","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"ncmathan"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"ncmathan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"ncmathan"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"ncmathan":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ncmathan"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"ncmathan"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"ncmathan"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"ncmathan"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ncmathan":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ncmathan"},"content":"java -classpath ..\\bin Duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"ncmathan":1}}]
