[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"dickongwd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"dickongwd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"dickongwd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"dickongwd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"dickongwd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"dickongwd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"dickongwd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"dickongwd"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"dickongwd"},"content":"checkstyle {","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"dickongwd"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"dickongwd"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"dickongwd":22}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"# Duke: User Guide","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"Duke is a chatbot designed to be a task manager and assistant for users.","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"![Duke Screenshot](./Ui.png)","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":"---","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"- [Features](#features)","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"    - [Task Management](#task-management)","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"    - [Task Completion](#task-completion)","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"    - [Search Descriptions](#search-descriptions)","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"    - [Task Persistence](#task-persistence)","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"    - [Loading Tasks](#loading-tasks)","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"- [Commands](#commands)","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"    - [Todo](#todo)","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"    - [Deadline](#deadline)","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"    - [Event](#event)","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"    - [List](#list)","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"    - [Mark](#mark)","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"    - [Unmark](#unmark)","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"dickongwd"},"content":"    - [Delete](#delete)","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"dickongwd"},"content":"    - [Find](#find)","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"dickongwd"},"content":"    - [Load](#load)","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"dickongwd"},"content":"    - [Bye](#bye)","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"dickongwd"},"content":"## Quick Start","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"dickongwd"},"content":"1. Ensure that you have Java 11 installed.","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"dickongwd"},"content":"2. Download the latest `duke.jar`.","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"dickongwd"},"content":"3. Run `java -jar duke.jar`","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"dickongwd"},"content":"4. Start managing your tasks!","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"dickongwd"},"content":"### Task Management","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":39,"author":{"gitId":"dickongwd"},"content":"Duke allows users to input tasks, providing a brief description of each task. Users can also specify deadlines, or","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"dickongwd"},"content":"events with a start and end date if needed.","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":42,"author":{"gitId":"dickongwd"},"content":"### Task Completion","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":44,"author":{"gitId":"dickongwd"},"content":"Duke enables users to mark tasks as \"done\" when they are completed. This helps users keep track of their progress.","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"dickongwd"},"content":"### Search Descriptions","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"dickongwd"},"content":"Duke includes a search feature that allows users to search for keywords in their tasks. This makes it easy to find","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"dickongwd"},"content":"specific tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"dickongwd"},"content":"### Task Persistence","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"dickongwd"},"content":"Tasks are automatically saved after every change. This ensures that users do not lose their list of tasks even if they","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"dickongwd"},"content":"close their session with Duke.","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"dickongwd"},"content":"### Loading Tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"dickongwd"},"content":"Duke allows users to specify which data files they would like to load, allowing them to share their task list with","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"dickongwd"},"content":"others, or simply continue using the same task list on another device by copying over the data file.","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"dickongwd"},"content":"## Commands","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":63,"author":{"gitId":"dickongwd"},"content":"### `Todo`","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"dickongwd"},"content":"Creates a \"todo\" task with a description.","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"dickongwd"},"content":"Usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"dickongwd"},"content":"`todo \u003ctask description\u003e`","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"dickongwd"},"content":"Examples:","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"dickongwd"},"content":"- `todo borrow book`","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"dickongwd"},"content":"- `todo drink water`","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"dickongwd"},"content":"### `Deadline`","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"dickongwd"},"content":"Creates a task with a deadline.","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"dickongwd"},"content":"Usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"dickongwd"},"content":"`deadline \u003ctask description\u003e /by \u003cdate\u003e`","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"dickongwd"},"content":"Note that `\u003cdate\u003e` is specified in `YYYY-MM-DD` format.","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"dickongwd"},"content":"Examples:","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"dickongwd"},"content":"- `deadline return book /by 2023-09-22`","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"dickongwd"},"content":"- `deadline finish assignment /by 2023-11-11`","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"dickongwd"},"content":"### `Event`","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"dickongwd"},"content":"Creates an event with a specified start and end date.","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"dickongwd"},"content":"Usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"dickongwd"},"content":"`event \u003cdescription\u003e /from \u003cdate\u003e /to \u003cdate\u003e`","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"dickongwd"},"content":"Note that `\u003cdate\u003e` is specified in `YYYY-MM-DD` format.","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"dickongwd"},"content":"Examples:","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"dickongwd"},"content":"- `event camp /from 2023-11-01 /to 2023-11-11`","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":105,"author":{"gitId":"dickongwd"},"content":"### `List`","lastModifiedDate":"2023-09-20"},{"lineNumber":106,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":107,"author":{"gitId":"dickongwd"},"content":"Lists all tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":108,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":109,"author":{"gitId":"dickongwd"},"content":"Usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":110,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"dickongwd"},"content":"`list`","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"dickongwd"},"content":"Example output:","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"dickongwd"},"content":"```text","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"dickongwd"},"content":"1. [T][X] borrow book","lastModifiedDate":"2023-09-20"},{"lineNumber":117,"author":{"gitId":"dickongwd"},"content":"2. [D][ ] return book (by: Sep 22 2023)","lastModifiedDate":"2023-09-20"},{"lineNumber":118,"author":{"gitId":"dickongwd"},"content":"3. [E][ ] camp (from: Nov 01 2023 to: Nov 11 2023)","lastModifiedDate":"2023-09-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":120,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":121,"author":{"gitId":"dickongwd"},"content":"### `Mark`","lastModifiedDate":"2023-09-20"},{"lineNumber":122,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":123,"author":{"gitId":"dickongwd"},"content":"Marks a specified task as completed.","lastModifiedDate":"2023-09-20"},{"lineNumber":124,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":125,"author":{"gitId":"dickongwd"},"content":"Usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":126,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":127,"author":{"gitId":"dickongwd"},"content":"`mark \u003ctask number\u003e`","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":129,"author":{"gitId":"dickongwd"},"content":"Note that task numbers must be positive integers e.g. 1, 2, 3","lastModifiedDate":"2023-09-20"},{"lineNumber":130,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":131,"author":{"gitId":"dickongwd"},"content":"### `Unmark`","lastModifiedDate":"2023-09-20"},{"lineNumber":132,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":133,"author":{"gitId":"dickongwd"},"content":"Removes a mark from a completed task.","lastModifiedDate":"2023-09-20"},{"lineNumber":134,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":135,"author":{"gitId":"dickongwd"},"content":"Usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":136,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":137,"author":{"gitId":"dickongwd"},"content":"`unmark \u003ctask number\u003e`","lastModifiedDate":"2023-09-20"},{"lineNumber":138,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":139,"author":{"gitId":"dickongwd"},"content":"Note that task numbers must be positive integers e.g. 1, 2, 3","lastModifiedDate":"2023-09-20"},{"lineNumber":140,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":141,"author":{"gitId":"dickongwd"},"content":"### `Delete`","lastModifiedDate":"2023-09-20"},{"lineNumber":142,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":143,"author":{"gitId":"dickongwd"},"content":"Removes a specified task from the task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":144,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":145,"author":{"gitId":"dickongwd"},"content":"Usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":146,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":147,"author":{"gitId":"dickongwd"},"content":"`delete \u003ctask number\u003e`","lastModifiedDate":"2023-09-20"},{"lineNumber":148,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":149,"author":{"gitId":"dickongwd"},"content":"Note that task numbers must be positive integers e.g. 1, 2, 3","lastModifiedDate":"2023-09-20"},{"lineNumber":150,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":151,"author":{"gitId":"dickongwd"},"content":"### `Find`","lastModifiedDate":"2023-09-20"},{"lineNumber":152,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":153,"author":{"gitId":"dickongwd"},"content":"Searches for task descriptions using a keyword.","lastModifiedDate":"2023-09-20"},{"lineNumber":154,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":155,"author":{"gitId":"dickongwd"},"content":"- The search is case-sensitive e.g `hans` will not match `Hans`","lastModifiedDate":"2023-09-20"},{"lineNumber":156,"author":{"gitId":"dickongwd"},"content":"- The order of the keywords matters e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2023-09-20"},{"lineNumber":157,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":158,"author":{"gitId":"dickongwd"},"content":"Usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":159,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":160,"author":{"gitId":"dickongwd"},"content":"`find book`","lastModifiedDate":"2023-09-20"},{"lineNumber":161,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":162,"author":{"gitId":"dickongwd"},"content":"### `Load`","lastModifiedDate":"2023-09-20"},{"lineNumber":163,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":164,"author":{"gitId":"dickongwd"},"content":"Loads tasks from a specified file. Duke loads tasks from `.duke-storage.txt` by default.","lastModifiedDate":"2023-09-20"},{"lineNumber":165,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":166,"author":{"gitId":"dickongwd"},"content":"Usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":167,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":168,"author":{"gitId":"dickongwd"},"content":"`load \u003cfile path\u003e`","lastModifiedDate":"2023-09-20"},{"lineNumber":169,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":170,"author":{"gitId":"dickongwd"},"content":"### `Bye`","lastModifiedDate":"2023-09-20"},{"lineNumber":171,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":172,"author":{"gitId":"dickongwd"},"content":"Ends the session with Duke.","lastModifiedDate":"2023-09-20"},{"lineNumber":173,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":174,"author":{"gitId":"dickongwd"},"content":"Usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":175,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":176,"author":{"gitId":"dickongwd"},"content":"`bye`","lastModifiedDate":"2023-09-20"},{"lineNumber":177,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"dickongwd":156,"-":21}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"import duke.storage.DukeStorageException;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":" * The main class for the Duke chatbot.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"public class Duke {","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"    private final Parser parser;","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"     * The constructor for the Duke application.","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"     * Sets up the relevant components required.","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"dickongwd"},"content":"    public Duke() {","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"dickongwd"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"dickongwd"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"dickongwd"},"content":"     * Returns the task list for Duke.","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"dickongwd"},"content":"     * @return a list of tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"dickongwd"},"content":"    public TaskList getTasks() {","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"dickongwd"},"content":"        return tasks;","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"dickongwd"},"content":"     * Sets a new task list for Duke.","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"dickongwd"},"content":"     * @param tasks the new task list to be set","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"dickongwd"},"content":"    public void setTaskList(TaskList tasks) {","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"dickongwd"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"dickongwd"},"content":"     * Returns the storage object for Duke.","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"dickongwd"},"content":"     * @return the storage object","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"dickongwd"},"content":"    public Storage getStorage() {","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"dickongwd"},"content":"        return storage;","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"dickongwd"},"content":"     * Sets a new storage for Duke.","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"dickongwd"},"content":"     * @param storage the new storage object to be set","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"dickongwd"},"content":"    public void setStorage(Storage storage) {","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"dickongwd"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"dickongwd"},"content":"     * Loads the tasks from storage.","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"dickongwd"},"content":"     * @return the number of tasks loaded from storage","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"dickongwd"},"content":"     * @throws DukeStorageException if an error occurs when loading tasks from storage","lastModifiedDate":"2023-09-12"},{"lineNumber":70,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":71,"author":{"gitId":"dickongwd"},"content":"    public int loadTasks() throws DukeStorageException {","lastModifiedDate":"2023-09-12"},{"lineNumber":72,"author":{"gitId":"dickongwd"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"dickongwd"},"content":"            tasks \u003d storage.load();","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"dickongwd"},"content":"            return tasks.size();","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"dickongwd"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"dickongwd"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"dickongwd"},"content":"            throw new DukeStorageException(\"Error reading from \" + Storage.DEFAULT_STORAGE_PATH);","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":80,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"dickongwd"},"content":"     * Returns Duke\u0027s response given the user input.","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":84,"author":{"gitId":"dickongwd"},"content":"     * @param input the input from the user","lastModifiedDate":"2023-09-12"},{"lineNumber":85,"author":{"gitId":"dickongwd"},"content":"     * @return the response from Duke","lastModifiedDate":"2023-09-12"},{"lineNumber":86,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":87,"author":{"gitId":"dickongwd"},"content":"    public String[] getResponse(String input) {","lastModifiedDate":"2023-09-12"},{"lineNumber":88,"author":{"gitId":"dickongwd"},"content":"        Command command \u003d parser.parseCommand(input);","lastModifiedDate":"2023-09-12"},{"lineNumber":89,"author":{"gitId":"dickongwd"},"content":"        command.setDuke(this);","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"dickongwd"},"content":"        String[] response \u003d command.execute();","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"dickongwd"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"dickongwd"},"content":"            storage.save(tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"dickongwd"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"dickongwd"},"content":"            String[] newResponse \u003d Arrays.copyOf(response, response.length + 1);","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"dickongwd"},"content":"            newResponse[newResponse.length - 1] \u003d \"Error saving tasks\";","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"dickongwd"},"content":"            return newResponse;","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"dickongwd"},"content":"        if (command.isBye()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"dickongwd"},"content":"            Platform.exit();","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"dickongwd"},"content":"        return response;","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"dickongwd":104,"-":1}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":" * Launcher for javafx GUI.","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"public class Launcher {","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"dickongwd":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"dickongwd"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"dickongwd"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"dickongwd"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"dickongwd"},"content":"            stage.show();","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"dickongwd"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"dickongwd"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"dickongwd":31}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"import java.util.List;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":" * Represents the list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"public class TaskList {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"     * Initialises a TaskList with the given tasks","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"dickongwd"},"content":"     * @param tasks the tasks to initialise the list","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"dickongwd"},"content":"    public TaskList(Iterable\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"dickongwd"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"dickongwd"},"content":"        tasks.forEach(this.tasks::add);","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"dickongwd"},"content":"     * Decodes a list of task from a given encoded task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"dickongwd"},"content":"     * @param encodedTaskList the encoded task list as a string","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"dickongwd"},"content":"     * @return the decoded task list","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"dickongwd"},"content":"    public static TaskList decode(List\u003cString\u003e encodedTaskList) {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"dickongwd"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"dickongwd"},"content":"        encodedTaskList.forEach(encodedTask -\u003e {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"dickongwd"},"content":"            Task task \u003d Task.decode(encodedTask);","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"dickongwd"},"content":"            if (!Objects.isNull(task)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"dickongwd"},"content":"                tasks.add(task);","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"dickongwd"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"dickongwd"},"content":"        });","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"dickongwd"},"content":"        return new TaskList(tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"dickongwd"},"content":"     * Returns the task with the given task number.","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"dickongwd"},"content":"     * We subtract 1 because task numbers start from 1.","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"dickongwd"},"content":"     * @param taskNum the task number to get","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"dickongwd"},"content":"     * @return the task with the corresponding task number","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"dickongwd"},"content":"    public Task get(int taskNum) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"dickongwd"},"content":"        return tasks.get(taskNum - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"dickongwd"},"content":"     * Adds the given task to the list.","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"dickongwd"},"content":"     * @param task the task to be added","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"dickongwd"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"dickongwd"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"dickongwd"},"content":"     * Returns the size of the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"dickongwd"},"content":"     * @return the size of the task list","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"dickongwd"},"content":"    public int size() {","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"dickongwd"},"content":"        return tasks.size();","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"dickongwd"},"content":"     * Deletes the task with the given task number.","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"dickongwd"},"content":"     * @param taskNum the task number to delete","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"dickongwd"},"content":"    public void delete(int taskNum) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"dickongwd"},"content":"        tasks.remove(taskNum - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"dickongwd"},"content":"     * Filters the task list by the given predicate and returns a new TaskList containing the filtered tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"dickongwd"},"content":"     * @param pred the predicate used to filter for tasks","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"dickongwd"},"content":"     * @return a new task list containing filtered tasks","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"dickongwd"},"content":"    public TaskList filter(Predicate\u003c? super Task\u003e pred) {","lastModifiedDate":"2023-09-06"},{"lineNumber":93,"author":{"gitId":"dickongwd"},"content":"        return new TaskList(tasks.stream().filter(pred).collect(Collectors.toList()));","lastModifiedDate":"2023-09-06"},{"lineNumber":94,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":95,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"dickongwd"},"content":"     * Encodes the task list as a list of strings to be stored in a file.","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"dickongwd"},"content":"     * @return the encoded task list as a list of strings","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"dickongwd"},"content":"    public List\u003cString\u003e encode() {","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"dickongwd"},"content":"        List\u003cString\u003e encodedTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"dickongwd"},"content":"        tasks.forEach(task -\u003e encodedTaskList.add(task.encode()));","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"dickongwd"},"content":"        return encodedTaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"dickongwd":106}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":" * Terminates the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"    public ByeCommand() {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"    public String[] execute() {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"        return new String[]{\"Bye! Hope to see you again soon!\"};","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"dickongwd":16}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":" * Represents an executable command.","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"    protected Duke duke;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"     * Sets the context for the command to execute on.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"     * It is required to call this method before executing a command.","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"     * @param duke the Duke object for the command to run on","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"    public void setDuke(Duke duke) {","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"    public boolean isBye() {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"        return this instanceof ByeCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"dickongwd"},"content":"    public abstract String[] execute();","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"dickongwd":26}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":" * Adds a Deadline task to the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"    public static final String MESSAGE_USAGE \u003d \"deadline \u003cdescription\u003e /by \u003cdate YYYY-MM-DD\u003e\";","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"    private final Deadline taskToAdd;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"    public DeadlineCommand(Deadline task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"        taskToAdd \u003d task;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"     * Inserts the deadline task into the task list and returns the response for the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"     * @return the response to the user","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"    public String[] execute() {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"dickongwd"},"content":"        String[] response \u003d new String[3];","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"dickongwd"},"content":"        this.duke.getTasks().add(taskToAdd);","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"dickongwd"},"content":"        response[0] \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"dickongwd"},"content":"        response[1] \u003d taskToAdd.toString();","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"dickongwd"},"content":"        response[2] \u003d String.format(\"Now you have %d task%s in the list.\",","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"dickongwd"},"content":"                this.duke.getTasks().size(),","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"dickongwd"},"content":"                this.duke.getTasks().size() \u003d\u003d 1 ? \"\" : \"s\");","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"dickongwd"},"content":"        return response;","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"dickongwd":33}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":" * Deletes a task from the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"    public static final String MESSAGE_USAGE \u003d \"delete \u003ctask number\u003e\";","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"    public static final String MESSAGE_INVALID_TASK_NUMBER \u003d \"delete can only take an integer task number\";","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"    private final int taskNumToDelete;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"    public DeleteCommand(int taskNum) {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"        taskNumToDelete \u003d taskNum;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"     * Deletes the task with the given task number and returns the response for the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"     * @return the response to the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"dickongwd"},"content":"    public String[] execute() {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"dickongwd"},"content":"        assert taskNumToDelete \u003e 0 \u0026\u0026 taskNumToDelete \u003c\u003d this.duke.getTasks().size() : \"Task number is not valid\";","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"dickongwd"},"content":"        String[] response \u003d new String[3];","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"dickongwd"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"dickongwd"},"content":"            Task task \u003d this.duke.getTasks().get(taskNumToDelete);","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"dickongwd"},"content":"            this.duke.getTasks().delete(taskNumToDelete);","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"dickongwd"},"content":"            response[0] \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"dickongwd"},"content":"            response[1] \u003d task.toString();","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"dickongwd"},"content":"            response[2] \u003d String.format(\"Now you have %d task%s in the list.\",","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"dickongwd"},"content":"                    this.duke.getTasks().size(),","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"dickongwd"},"content":"                    this.duke.getTasks().size() \u003d\u003d 1 ? \"\" : \"s\");","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"dickongwd"},"content":"            return response;","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"dickongwd"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"dickongwd"},"content":"            return new String[]{\"Task number does not exist\"};","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"dickongwd":41}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":" * Adds an event task to the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"    public static final String MESSAGE_USAGE \u003d \"event \u003cdescription\u003e /from \u003cdate YYYY-MM-DD\u003e /to \u003cdate YYYY-MM-DD\u003e\";","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"    private final Event taskToAdd;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"    public EventCommand(Event task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"        taskToAdd \u003d task;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"     * Inserts an event task into the task list and returns a response for the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"     * @return the response to the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"    public String[] execute() {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"dickongwd"},"content":"        String[] response \u003d new String[3];","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"dickongwd"},"content":"        this.duke.getTasks().add(taskToAdd);","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"dickongwd"},"content":"        response[0] \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"dickongwd"},"content":"        response[1] \u003d taskToAdd.toString();","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"dickongwd"},"content":"        response[2] \u003d String.format(\"Now you have %d task%s in the list.\",","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"dickongwd"},"content":"                this.duke.getTasks().size(),","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"dickongwd"},"content":"                this.duke.getTasks().size() \u003d\u003d 1 ? \"\" : \"s\");","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"dickongwd"},"content":"        return response;","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"dickongwd":33}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.command;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":" * Searches the task list by a keyword.","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"    public static final String MESSAGE_USAGE \u003d \"find \u003ckeyword\u003e\";","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"    public static final String MESSAGE_EMPTY_KEYWORD \u003d \"you are missing a keyword to find by!\";","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"    private final String keyword;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"    public String[] execute() {","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"        TaskList filteredTasks \u003d this.duke.getTasks().filter(task -\u003e task.getDesc().contains(keyword));","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"        String[] response;","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"dickongwd"},"content":"        if (filteredTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"dickongwd"},"content":"            response \u003d new String[1];","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"dickongwd"},"content":"            response[0] \u003d \"There are no matching tasks in your list.\";","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"dickongwd"},"content":"        } else {","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"dickongwd"},"content":"            response \u003d new String[filteredTasks.size() + 1];","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"dickongwd"},"content":"            response[0] \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"dickongwd"},"content":"            for (int i \u003d 1; i \u003c\u003d filteredTasks.size(); i++) {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"dickongwd"},"content":"                response[i] \u003d (i + \". \" + filteredTasks.get(i));","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"dickongwd"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"dickongwd"},"content":"        return response;","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"dickongwd":35}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":" * Represents an invalid command with a message to be shown to the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":"    public final String[] message;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"    public InvalidCommand(String... message) {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"     * Returns the invalid command message as the user response.","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"     * @return the response to the user","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"    public String[] execute() {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"        return message;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"dickongwd":21}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":" * Lists all tasks in the list to the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"    public ListCommand() {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"     * Lists all current tasks in the list and sends it as a response to the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"     * @return the response for the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"    public String[] execute() {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"        String[] response;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"        int numTasks \u003d this.duke.getTasks().size();","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"        if (numTasks \u003d\u003d 0) {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"            response \u003d new String[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"            response[0] \u003d \"There are no items in your list.\";","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"dickongwd"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"dickongwd"},"content":"            response \u003d new String[numTasks + 1];","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"dickongwd"},"content":"            response[0] \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"dickongwd"},"content":"            for (int i \u003d 1; i \u003c\u003d numTasks; i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"dickongwd"},"content":"                response[i] \u003d (i + \". \" + this.duke.getTasks().get(i));","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"dickongwd"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"dickongwd"},"content":"        return response;","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"dickongwd":32}},{"path":"src/main/java/duke/command/LoadCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.command;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":" * Represents a command to load from a specified file.","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":" * Note that this command is not explicitly used by the user, but called once at the start of the program.","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"public class LoadCommand extends Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"    public static final String COMMAND_WORD \u003d \"load\";","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"    public static final String MESSAGE_USAGE \u003d \"load \u003cfile path\u003e\";","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"    public static final String MESSAGE_EMPTY_FILE_PATH \u003d \"Sorry, but the file path cannot be empty.\";","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"    private final String fileToLoad;","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"    public LoadCommand(String fileToLoad) {","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"        this.fileToLoad \u003d fileToLoad;","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"dickongwd"},"content":"     * Assigns a new storage object given the file to be used as data.","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"dickongwd"},"content":"     * @return the response to the user","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"dickongwd"},"content":"    public String[] execute() {","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"dickongwd"},"content":"        Storage storage \u003d new Storage(fileToLoad);","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"dickongwd"},"content":"        this.duke.setStorage(storage);","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"dickongwd"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"dickongwd"},"content":"            TaskList tasks \u003d storage.load();","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"dickongwd"},"content":"            this.duke.setTaskList(tasks);","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"dickongwd"},"content":"            if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"dickongwd"},"content":"                return new String[]{String.format(","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"dickongwd"},"content":"                        \"No stored tasks found from %s\", fileToLoad),","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"dickongwd"},"content":"                        \"Loading an empty task list.\"","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"dickongwd"},"content":"                };","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"dickongwd"},"content":"            } else {","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"dickongwd"},"content":"                return new String[]{String.format(","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"dickongwd"},"content":"                        \"%s task%s loaded from %s\",","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"dickongwd"},"content":"                        tasks.size(),","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"dickongwd"},"content":"                        tasks.size() \u003d\u003d 1 ? \"\" : \"s\",","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"dickongwd"},"content":"                        fileToLoad","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"dickongwd"},"content":"                )};","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"dickongwd"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"dickongwd"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"dickongwd"},"content":"            this.duke.setTaskList(new TaskList());","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"dickongwd"},"content":"            return new String[]{","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"dickongwd"},"content":"                    String.format(\"Error loading tasks from %s\", fileToLoad),","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"dickongwd"},"content":"                    \"Starting from an empty task list.\"","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"dickongwd"},"content":"            };","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"dickongwd":55}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":" * Marks a task as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"    public static final String MESSAGE_USAGE \u003d \"mark \u003ctask number\u003e\";","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"    public static final String MESSAGE_INVALID_TASK_NUMBER \u003d \"mark can only take an integer task number\";","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"    private final int taskNumToMark;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"    public MarkCommand(int taskNum) {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"        taskNumToMark \u003d taskNum;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"     * Marks the task with the given task number.","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"     * @return the response to the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"dickongwd"},"content":"    public String[] execute() {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"dickongwd"},"content":"        assert taskNumToMark \u003e 0 \u0026\u0026 taskNumToMark \u003c\u003d this.duke.getTasks().size() : \"Task number is not valid\";","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"dickongwd"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"dickongwd"},"content":"            String[] response \u003d new String[2];","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"dickongwd"},"content":"            Task task \u003d this.duke.getTasks().get(taskNumToMark);","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"dickongwd"},"content":"            task.mark();","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"dickongwd"},"content":"            response[0] \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"dickongwd"},"content":"            response[1] \u003d task.toString();","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"dickongwd"},"content":"            return response;","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"dickongwd"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"dickongwd"},"content":"            return new String[]{\"Task number does not exist\"};","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"dickongwd":38}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":" * Represents a task that has to be done.","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"    public static final String MESSAGE_USAGE \u003d \"todo \u003cdescription\u003e\";","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"    public static final String MESSAGE_EMPTY_DESCRIPTION \u003d \"Sorry, but the description of a todo cannot be empty.\";","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"    private final Todo taskToAdd;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"    public TodoCommand(Todo task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"        taskToAdd \u003d task;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"     * Inserts a Todo task into the task list and returns a response for the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"     * @return the response to the user","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"dickongwd"},"content":"    public String[] execute() {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"dickongwd"},"content":"        String[] response \u003d new String[3];","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"dickongwd"},"content":"        this.duke.getTasks().add(taskToAdd);","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"dickongwd"},"content":"        response[0] \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"dickongwd"},"content":"        response[1] \u003d taskToAdd.toString();","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"dickongwd"},"content":"        response[2] \u003d String.format(\"Now you have %d task%s in the list.\",","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"dickongwd"},"content":"                this.duke.getTasks().size(),","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"dickongwd"},"content":"                this.duke.getTasks().size() \u003d\u003d 1 ? \"\" : \"s\");","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"dickongwd"},"content":"        return response;","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"dickongwd":34}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":" * Unmarks a task as undone.","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"    public static final String MESSAGE_USAGE \u003d \"unmark \u003ctask number\u003e\";","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"    public static final String MESSAGE_INVALID_TASK_NUMBER \u003d \"unmark can only take an integer task number\";","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"    private final int taskNumToMark;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"    public UnmarkCommand(int taskNum) {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"        taskNumToMark \u003d taskNum;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"     * Unmarks a task with the given task number.","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"     * @return the response to the user","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"dickongwd"},"content":"    public String[] execute() {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"dickongwd"},"content":"        assert taskNumToMark \u003e 0 \u0026\u0026 taskNumToMark \u003c\u003d this.duke.getTasks().size() : \"Task number is not valid\";","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"dickongwd"},"content":"        String[] response \u003d new String[2];","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"dickongwd"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"dickongwd"},"content":"            Task task \u003d this.duke.getTasks().get(taskNumToMark);","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"dickongwd"},"content":"            task.unmark();","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"dickongwd"},"content":"            response[0] \u003d \"Ok, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"dickongwd"},"content":"            response[1] \u003d task.toString();","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"dickongwd"},"content":"            return response;","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"dickongwd"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"dickongwd"},"content":"            return new String[]{\"Task number does not exist\"};","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"dickongwd":38}},{"path":"src/main/java/duke/common/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.common;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":" * A list of common messages used in the chatbot.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"public class Messages {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":"    public static final String MESSAGE_WELCOME \u003d \"Hello! I\u0027m Buzu.\";","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"    public static final String MESSAGE_FIRST_PROMPT \u003d \"What can I do for you?\";","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"    public static final String MESSAGE_GOODBYE \u003d \"Bye! Hope to see you again soon!\";","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"    public static final String MESSAGE_INVALID_COMMAND \u003d \"Sorry, but I don\u0027t know what that means :(\";","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"dickongwd":11}},{"path":"src/main/java/duke/parser/DukeParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":" * Represents an error when parsing user input.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"public class DukeParseException extends Exception {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":"    public DukeParseException(String message) {","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"        super(message);","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"dickongwd":10}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"import static duke.common.Messages.MESSAGE_INVALID_COMMAND;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"import duke.command.InvalidCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"import duke.command.LoadCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"dickongwd"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"dickongwd"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"dickongwd"},"content":" * Parses user input into commands.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"dickongwd"},"content":"public class Parser {","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"dickongwd"},"content":"    private static final Pattern COMMAND_FORMAT \u003d Pattern.compile(\"^(?\u003ccommand\u003e\\\\S+)(?\u003carguments\u003e.*)$\");","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"dickongwd"},"content":"    public static Todo parseTodo(String args) {","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"dickongwd"},"content":"        return new Todo(args);","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"dickongwd"},"content":"     * Parses a deadline input string into a Deadline object.","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"dickongwd"},"content":"     * @param args the input string for the deadline","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"dickongwd"},"content":"     * @return the parsed Deadline object","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"dickongwd"},"content":"     * @throws DukeParseException if unable to parse correctly","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"dickongwd"},"content":"    public static Deadline parseDeadline(String args) throws DukeParseException {","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"dickongwd"},"content":"        Pattern pattern \u003d Pattern.compile(\"^(?\u003cdesc\u003e.+) /by (?\u003cby\u003e.+)$\");","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"dickongwd"},"content":"        Matcher matcher \u003d pattern.matcher(args);","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"dickongwd"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"dickongwd"},"content":"            throw new DukeParseException(\"Deadline cannot be parsed\");","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"dickongwd"},"content":"        String desc \u003d matcher.group(\"desc\").trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"dickongwd"},"content":"        String by \u003d matcher.group(\"by\").trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"dickongwd"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"dickongwd"},"content":"            LocalDate byDate \u003d LocalDate.parse(by);","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"dickongwd"},"content":"            return new Deadline(desc, byDate);","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"dickongwd"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"dickongwd"},"content":"            throw new DukeParseException(\"Deadline cannot be parsed\");","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"dickongwd"},"content":"     * Parses an event input string into an Event object.","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"dickongwd"},"content":"     * @param args the input string for the event","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"dickongwd"},"content":"     * @return the parsed Event object","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"dickongwd"},"content":"     * @throws DukeParseException if unable to parse correctly","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"dickongwd"},"content":"    public static Event parseEvent(String args) throws DukeParseException {","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"dickongwd"},"content":"        Pattern pattern \u003d Pattern.compile(\"^(?\u003cdesc\u003e.+) /from (?\u003cfrom\u003e.+) /to (?\u003cto\u003e.+)$\");","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"dickongwd"},"content":"        Matcher matcher \u003d pattern.matcher(args);","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"dickongwd"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"dickongwd"},"content":"            throw new DukeParseException(\"Event cannot be parsed\");","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"dickongwd"},"content":"        String desc \u003d matcher.group(\"desc\").trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"dickongwd"},"content":"        String from \u003d matcher.group(\"from\").trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"dickongwd"},"content":"        String to \u003d matcher.group(\"to\").trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"dickongwd"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"dickongwd"},"content":"            LocalDate fromDate \u003d LocalDate.parse(from);","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"dickongwd"},"content":"            LocalDate toDate \u003d LocalDate.parse(to);","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"dickongwd"},"content":"            return new Event(desc, fromDate, toDate);","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"dickongwd"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"dickongwd"},"content":"            throw new DukeParseException(\"Event cannot be parsed\");","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"dickongwd"},"content":"     * Takes a given user input and parses it into the corresponding command.","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"dickongwd"},"content":"     * If the user supplies invalid input, an InvalidCommand will be returned.","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"dickongwd"},"content":"     * @param input the user input","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"dickongwd"},"content":"     * @return the corresponding command from the input","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"dickongwd"},"content":"    public Command parseCommand(String input) {","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"dickongwd"},"content":"        Matcher matcher \u003d COMMAND_FORMAT.matcher(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"dickongwd"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"dickongwd"},"content":"            return new InvalidCommand(MESSAGE_INVALID_COMMAND);","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"dickongwd"},"content":"        String command \u003d matcher.group(\"command\").trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"dickongwd"},"content":"        String args \u003d matcher.group(\"arguments\").trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"dickongwd"},"content":"        switch (command) {","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"dickongwd"},"content":"        case TodoCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"dickongwd"},"content":"            return parseTodoCommand(args);","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"dickongwd"},"content":"        case DeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"dickongwd"},"content":"            return parseDeadlineCommand(args);","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"dickongwd"},"content":"        case EventCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"dickongwd"},"content":"            return parseEventCommand(args);","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"dickongwd"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"dickongwd"},"content":"            return parseMarkCommand(args);","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"dickongwd"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"dickongwd"},"content":"            return parseUnmarkCommand(args);","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"dickongwd"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"dickongwd"},"content":"            return parseListCommand(args);","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"dickongwd"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"dickongwd"},"content":"            return parseDeleteCommand(args);","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"dickongwd"},"content":"        case ByeCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"dickongwd"},"content":"            return parseByeCommand(args);","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"dickongwd"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-06"},{"lineNumber":117,"author":{"gitId":"dickongwd"},"content":"            return parseFindCommand(args);","lastModifiedDate":"2023-09-06"},{"lineNumber":118,"author":{"gitId":"dickongwd"},"content":"        case LoadCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-20"},{"lineNumber":119,"author":{"gitId":"dickongwd"},"content":"            return parseLoadCommand(args);","lastModifiedDate":"2023-09-20"},{"lineNumber":120,"author":{"gitId":"dickongwd"},"content":"        default:","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"dickongwd"},"content":"            return new InvalidCommand(MESSAGE_INVALID_COMMAND);","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"dickongwd"},"content":"     * Parses a given argument string for the Todo command.","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"dickongwd"},"content":"     * @param args argument string for the Todo command","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"dickongwd"},"content":"     * @return the parsed TodoCommand object","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"dickongwd"},"content":"    private Command parseTodoCommand(String args) {","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"dickongwd"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"dickongwd"},"content":"            return new InvalidCommand(TodoCommand.MESSAGE_EMPTY_DESCRIPTION, TodoCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"dickongwd"},"content":"        return new TodoCommand(parseTodo(args));","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"dickongwd"},"content":"     * Parses a given argument string for the Deadline command.","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"dickongwd"},"content":"     * @param args argument string for the Deadline command","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"dickongwd"},"content":"     * @return the parsed DeadlineCommand object","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"dickongwd"},"content":"    private Command parseDeadlineCommand(String args) {","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"dickongwd"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"dickongwd"},"content":"            Deadline deadline \u003d parseDeadline(args);","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"dickongwd"},"content":"            return new DeadlineCommand(deadline);","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"dickongwd"},"content":"        } catch (DukeParseException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"dickongwd"},"content":"            return new InvalidCommand(MESSAGE_INVALID_COMMAND, e.getMessage(), DeadlineCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":154,"author":{"gitId":"dickongwd"},"content":"     * Parses a given argument string for the Event command.","lastModifiedDate":"2023-09-02"},{"lineNumber":155,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"dickongwd"},"content":"     * @param args argument string for the Event command","lastModifiedDate":"2023-09-02"},{"lineNumber":157,"author":{"gitId":"dickongwd"},"content":"     * @return the parsed EventCommand object","lastModifiedDate":"2023-09-02"},{"lineNumber":158,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":159,"author":{"gitId":"dickongwd"},"content":"    private Command parseEventCommand(String args) {","lastModifiedDate":"2023-09-02"},{"lineNumber":160,"author":{"gitId":"dickongwd"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":161,"author":{"gitId":"dickongwd"},"content":"            Event event \u003d parseEvent(args);","lastModifiedDate":"2023-09-02"},{"lineNumber":162,"author":{"gitId":"dickongwd"},"content":"            return new EventCommand(event);","lastModifiedDate":"2023-09-02"},{"lineNumber":163,"author":{"gitId":"dickongwd"},"content":"        } catch (DukeParseException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":164,"author":{"gitId":"dickongwd"},"content":"            return new InvalidCommand(MESSAGE_INVALID_COMMAND, EventCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-09-02"},{"lineNumber":165,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":166,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":167,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":168,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":169,"author":{"gitId":"dickongwd"},"content":"     * Parses a given argument string for the Mark command.","lastModifiedDate":"2023-09-02"},{"lineNumber":170,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":171,"author":{"gitId":"dickongwd"},"content":"     * @param args argument string for the Mark command","lastModifiedDate":"2023-09-02"},{"lineNumber":172,"author":{"gitId":"dickongwd"},"content":"     * @return the parsed MarkCommand object","lastModifiedDate":"2023-09-02"},{"lineNumber":173,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":174,"author":{"gitId":"dickongwd"},"content":"    private Command parseMarkCommand(String args) {","lastModifiedDate":"2023-09-02"},{"lineNumber":175,"author":{"gitId":"dickongwd"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":176,"author":{"gitId":"dickongwd"},"content":"            int taskNum \u003d Integer.parseInt(args);","lastModifiedDate":"2023-09-02"},{"lineNumber":177,"author":{"gitId":"dickongwd"},"content":"            return new MarkCommand(taskNum);","lastModifiedDate":"2023-09-02"},{"lineNumber":178,"author":{"gitId":"dickongwd"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":179,"author":{"gitId":"dickongwd"},"content":"            return new InvalidCommand(MarkCommand.MESSAGE_INVALID_TASK_NUMBER, MarkCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-09-02"},{"lineNumber":180,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":181,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":182,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":183,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":184,"author":{"gitId":"dickongwd"},"content":"     * Parses a given argument string for the Unmark command.","lastModifiedDate":"2023-09-02"},{"lineNumber":185,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":186,"author":{"gitId":"dickongwd"},"content":"     * @param args argument string for the Unmark command","lastModifiedDate":"2023-09-02"},{"lineNumber":187,"author":{"gitId":"dickongwd"},"content":"     * @return the parsed UnmarkCommand object","lastModifiedDate":"2023-09-02"},{"lineNumber":188,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":189,"author":{"gitId":"dickongwd"},"content":"    private Command parseUnmarkCommand(String args) {","lastModifiedDate":"2023-09-02"},{"lineNumber":190,"author":{"gitId":"dickongwd"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":191,"author":{"gitId":"dickongwd"},"content":"            int taskNum \u003d Integer.parseInt(args);","lastModifiedDate":"2023-09-02"},{"lineNumber":192,"author":{"gitId":"dickongwd"},"content":"            return new UnmarkCommand(taskNum);","lastModifiedDate":"2023-09-02"},{"lineNumber":193,"author":{"gitId":"dickongwd"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":194,"author":{"gitId":"dickongwd"},"content":"            return new InvalidCommand(UnmarkCommand.MESSAGE_INVALID_TASK_NUMBER, UnmarkCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-09-02"},{"lineNumber":195,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":196,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":197,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":198,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":199,"author":{"gitId":"dickongwd"},"content":"     * Parses a given argument string for the List command.","lastModifiedDate":"2023-09-02"},{"lineNumber":200,"author":{"gitId":"dickongwd"},"content":"     * A List command has no arguments to parse, but we have this function for uniformity.","lastModifiedDate":"2023-09-02"},{"lineNumber":201,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":202,"author":{"gitId":"dickongwd"},"content":"     * @param args argument string for the List command","lastModifiedDate":"2023-09-02"},{"lineNumber":203,"author":{"gitId":"dickongwd"},"content":"     * @return the parsed ListCommand object","lastModifiedDate":"2023-09-02"},{"lineNumber":204,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":205,"author":{"gitId":"dickongwd"},"content":"    private Command parseListCommand(String args) {","lastModifiedDate":"2023-09-02"},{"lineNumber":206,"author":{"gitId":"dickongwd"},"content":"        return new ListCommand();","lastModifiedDate":"2023-09-02"},{"lineNumber":207,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":208,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":209,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":210,"author":{"gitId":"dickongwd"},"content":"     * Parses a given argument string for the Delete command.","lastModifiedDate":"2023-09-02"},{"lineNumber":211,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":212,"author":{"gitId":"dickongwd"},"content":"     * @param args argument string for the Delete command","lastModifiedDate":"2023-09-02"},{"lineNumber":213,"author":{"gitId":"dickongwd"},"content":"     * @return the parsed DeleteCommand object","lastModifiedDate":"2023-09-02"},{"lineNumber":214,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":215,"author":{"gitId":"dickongwd"},"content":"    private Command parseDeleteCommand(String args) {","lastModifiedDate":"2023-09-02"},{"lineNumber":216,"author":{"gitId":"dickongwd"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":217,"author":{"gitId":"dickongwd"},"content":"            int taskNum \u003d Integer.parseInt(args);","lastModifiedDate":"2023-09-02"},{"lineNumber":218,"author":{"gitId":"dickongwd"},"content":"            return new DeleteCommand(taskNum);","lastModifiedDate":"2023-09-02"},{"lineNumber":219,"author":{"gitId":"dickongwd"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":220,"author":{"gitId":"dickongwd"},"content":"            return new InvalidCommand(DeleteCommand.MESSAGE_INVALID_TASK_NUMBER, DeleteCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-09-02"},{"lineNumber":221,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":222,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":223,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":224,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":225,"author":{"gitId":"dickongwd"},"content":"     * Parses a given argument string for the Find command.","lastModifiedDate":"2023-09-06"},{"lineNumber":226,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":227,"author":{"gitId":"dickongwd"},"content":"     * @param args argument string for the Find command","lastModifiedDate":"2023-09-06"},{"lineNumber":228,"author":{"gitId":"dickongwd"},"content":"     * @return the parsed FindCommand object","lastModifiedDate":"2023-09-06"},{"lineNumber":229,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":230,"author":{"gitId":"dickongwd"},"content":"    private Command parseFindCommand(String args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":231,"author":{"gitId":"dickongwd"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":232,"author":{"gitId":"dickongwd"},"content":"            return new InvalidCommand(FindCommand.MESSAGE_EMPTY_KEYWORD, FindCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-09-06"},{"lineNumber":233,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":234,"author":{"gitId":"dickongwd"},"content":"        return new FindCommand(args);","lastModifiedDate":"2023-09-06"},{"lineNumber":235,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":236,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":237,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":238,"author":{"gitId":"dickongwd"},"content":"     * Parses a given argument string for the Load command.","lastModifiedDate":"2023-09-20"},{"lineNumber":239,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":240,"author":{"gitId":"dickongwd"},"content":"     * @param args argument string for the Load command","lastModifiedDate":"2023-09-20"},{"lineNumber":241,"author":{"gitId":"dickongwd"},"content":"     * @return the parsed LoadCommand object","lastModifiedDate":"2023-09-20"},{"lineNumber":242,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":243,"author":{"gitId":"dickongwd"},"content":"    private Command parseLoadCommand(String args) {","lastModifiedDate":"2023-09-20"},{"lineNumber":244,"author":{"gitId":"dickongwd"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":245,"author":{"gitId":"dickongwd"},"content":"            return new InvalidCommand(LoadCommand.MESSAGE_EMPTY_FILE_PATH, LoadCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-09-20"},{"lineNumber":246,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":247,"author":{"gitId":"dickongwd"},"content":"        return new LoadCommand(args);","lastModifiedDate":"2023-09-20"},{"lineNumber":248,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":249,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":250,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":251,"author":{"gitId":"dickongwd"},"content":"     * Parses a given argument string for the Bye command.","lastModifiedDate":"2023-09-02"},{"lineNumber":252,"author":{"gitId":"dickongwd"},"content":"     * A Bye command has no arguments to parse, but we have this function for uniformity.","lastModifiedDate":"2023-09-02"},{"lineNumber":253,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":254,"author":{"gitId":"dickongwd"},"content":"     * @param args argument string for the Bye command","lastModifiedDate":"2023-09-02"},{"lineNumber":255,"author":{"gitId":"dickongwd"},"content":"     * @return the parsed ByeCommand object","lastModifiedDate":"2023-09-02"},{"lineNumber":256,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":257,"author":{"gitId":"dickongwd"},"content":"    private Command parseByeCommand(String args) {","lastModifiedDate":"2023-09-02"},{"lineNumber":258,"author":{"gitId":"dickongwd"},"content":"        return new ByeCommand();","lastModifiedDate":"2023-09-02"},{"lineNumber":259,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":260,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"dickongwd":260}},{"path":"src/main/java/duke/storage/DukeStorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.storage;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":" * Represents an error when loading from storage file.","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"public class DukeStorageException extends Exception {","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":"    public DukeStorageException(String message) {","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"        super(message);","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"dickongwd":10}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":"import java.util.List;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":" * Handles saving and loading of tasks from and to a data text file.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"public class Storage {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"     * The default file name for storing tasks on disk.","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"    public static final String DEFAULT_STORAGE_PATH \u003d \".duke-storage.txt\";","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"    private final Path path;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"    public Storage() {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"        this(DEFAULT_STORAGE_PATH);","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"dickongwd"},"content":"    public Storage(String path) {","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"dickongwd"},"content":"        this.path \u003d Paths.get(path);","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"dickongwd"},"content":"     * Saves Duke\u0027s task list in a text file.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"dickongwd"},"content":"     * @param taskList the list of tasks to save","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"dickongwd"},"content":"     * @throws IOException if an I/O error occurs when writing to the file","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"dickongwd"},"content":"    public void save(TaskList taskList) throws IOException {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"dickongwd"},"content":"        List\u003cString\u003e encodedTaskList \u003d taskList.encode();","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"dickongwd"},"content":"        Files.write(path, encodedTaskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"dickongwd"},"content":"     * Loads the task list from Duke\u0027s data text file.","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"dickongwd"},"content":"     * @return the loaded task list from the data text file","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"dickongwd"},"content":"     * @throws IOException if an I/O error occurs when reading from the file","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"dickongwd"},"content":"    public TaskList load() throws IOException {","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"dickongwd"},"content":"        if (!Files.exists(path) || !Files.isRegularFile(path)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"dickongwd"},"content":"            return new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"dickongwd"},"content":"        return TaskList.decode(Files.readAllLines(path));","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"dickongwd":52}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"    private final LocalDate by;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"     * Creates a task with a deadline.","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"     * @param desc the description of the task","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"     * @param by   the deadline of the task","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"    public Deadline(String desc, LocalDate by) {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"        super(desc);","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"dickongwd"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"dickongwd"},"content":"    public String encode() {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"dickongwd"},"content":"        return String.format(\"D|%s /by %s\", super.encode(), by);","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"dickongwd"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":29,"author":{"gitId":"dickongwd"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":30,"author":{"gitId":"dickongwd"},"content":"        return String.format(\"[D]%s (by: %s)\",","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"dickongwd"},"content":"                super.toString(),","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"dickongwd"},"content":"                by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":34,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"dickongwd":34}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":" * Represents an event with a start and end.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"    private final LocalDate from;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"    private final LocalDate to;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"     * Creates an Event given the description, start and end date.","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"     * @param desc description of the event","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"     * @param from the start date of the event","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"     * @param to   the end date of the event","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"    public Event(String desc, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"        super(desc);","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"dickongwd"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":26,"author":{"gitId":"dickongwd"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"dickongwd"},"content":"    public String encode() {","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"dickongwd"},"content":"        return String.format(\"E|%s /from %s /to %s\", super.encode(), from, to);","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"dickongwd"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":32,"author":{"gitId":"dickongwd"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":33,"author":{"gitId":"dickongwd"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\",","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"dickongwd"},"content":"                super.toString(),","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"dickongwd"},"content":"                from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")),","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"dickongwd"},"content":"                to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":38,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"dickongwd":38}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"import duke.parser.DukeParseException;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":" * Represents a Task.","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":" * This class is abstract because tasks should exist as a Todo, Deadline or Event.","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"public abstract class Task {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"    private final String desc;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"    private boolean isMarked;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"     * Creates a Task given its description.","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"     * @param desc the description of the task","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"    public Task(String desc) {","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"dickongwd"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"dickongwd"},"content":"        isMarked \u003d false;","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":26,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":27,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"dickongwd"},"content":"     * Decodes a task encoded string into a task.","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"dickongwd"},"content":"     * @param encodedTask the string representing the encoded task","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"dickongwd"},"content":"     * @return the task retrieved after decoding","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"dickongwd"},"content":"    public static Task decode(String encodedTask) {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"dickongwd"},"content":"        Pattern pattern \u003d Pattern.compile(\"^(?\u003ctype\u003e.)\\\\|(?\u003cmark\u003e.)\\\\|(?\u003ctaskString\u003e.+)$\");","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"dickongwd"},"content":"        Matcher matcher \u003d pattern.matcher(encodedTask);","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"dickongwd"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"dickongwd"},"content":"            return null;","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"dickongwd"},"content":"        String type \u003d matcher.group(\"type\");","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"dickongwd"},"content":"        String mark \u003d matcher.group(\"mark\");","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"dickongwd"},"content":"        String input \u003d matcher.group(\"taskString\");","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"dickongwd"},"content":"        Task task;","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"dickongwd"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"dickongwd"},"content":"            switch (type) {","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"dickongwd"},"content":"            case \"T\":","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"dickongwd"},"content":"                task \u003d Parser.parseTodo(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"dickongwd"},"content":"                break;","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"dickongwd"},"content":"            case \"D\":","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"dickongwd"},"content":"                task \u003d Parser.parseDeadline(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"dickongwd"},"content":"                break;","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"dickongwd"},"content":"            case \"E\":","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"dickongwd"},"content":"                task \u003d Parser.parseEvent(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"dickongwd"},"content":"                break;","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"dickongwd"},"content":"            default:","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"dickongwd"},"content":"                return null;","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"dickongwd"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"dickongwd"},"content":"        } catch (DukeParseException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"dickongwd"},"content":"            return null;","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"dickongwd"},"content":"        if (mark.equals(\"1\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"dickongwd"},"content":"            task.mark();","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"dickongwd"},"content":"        return task;","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"dickongwd"},"content":"    public boolean isMarked() {","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"dickongwd"},"content":"        return isMarked;","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"dickongwd"},"content":"    public String getDesc() {","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"dickongwd"},"content":"        return desc;","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"dickongwd"},"content":"    public void mark() {","lastModifiedDate":"2023-08-19"},{"lineNumber":75,"author":{"gitId":"dickongwd"},"content":"        isMarked \u003d true;","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":77,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":78,"author":{"gitId":"dickongwd"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-19"},{"lineNumber":79,"author":{"gitId":"dickongwd"},"content":"        isMarked \u003d false;","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":81,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":82,"author":{"gitId":"dickongwd"},"content":"    public String encode() {","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"dickongwd"},"content":"        return String.format(\"%s|%s\", isMarked ? \"1\" : \"0\", desc);","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"dickongwd"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":87,"author":{"gitId":"dickongwd"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":88,"author":{"gitId":"dickongwd"},"content":"        return String.format(\"[%s] %s\", isMarked ? \"X\" : \" \", desc);","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":90,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"dickongwd":90}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":" * Represents a task that has to be done.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":"    public Todo(String desc) {","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"        super(desc);","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"    public String encode() {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"        return String.format(\"T|%s\", super.encode());","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"dickongwd":20}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.ui;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":" * A dialog box controlled using FXML.","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":" * Shows the speaker\u0027s face and a text from the speaker.","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"    @FXML","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"dickongwd"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"dickongwd"},"content":"    @FXML","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"dickongwd"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"dickongwd"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"dickongwd"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"dickongwd"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"dickongwd"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"dickongwd"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"dickongwd"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"dickongwd"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"dickongwd"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"dickongwd"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"dickongwd"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"dickongwd"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"dickongwd"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"dickongwd"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"dickongwd"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"dickongwd"},"content":"        db.flip();","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"dickongwd"},"content":"        return db;","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"dickongwd"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"dickongwd"},"content":"    private void flip() {","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"dickongwd"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"dickongwd"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"dickongwd"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"dickongwd"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"dickongwd":60}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.ui;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"import static duke.common.Messages.MESSAGE_FIRST_PROMPT;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"import static duke.common.Messages.MESSAGE_WELCOME;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":"import duke.storage.DukeStorageException;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"dickongwd"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"dickongwd"},"content":"    @FXML","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"dickongwd"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"dickongwd"},"content":"    @FXML","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"dickongwd"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"dickongwd"},"content":"    @FXML","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"dickongwd"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"dickongwd"},"content":"    @FXML","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"dickongwd"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"dickongwd"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"dickongwd"},"content":"    @FXML","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"dickongwd"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"dickongwd"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"dickongwd"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"dickongwd"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"dickongwd"},"content":"        showMessage(MESSAGE_WELCOME, MESSAGE_FIRST_PROMPT);","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"dickongwd"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"dickongwd"},"content":"            int tasksLoaded \u003d duke.loadTasks();","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"dickongwd"},"content":"            if (tasksLoaded \u003d\u003d 0) {","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"dickongwd"},"content":"                showMessage(String.format(\"No stored tasks found from %s\", Storage.DEFAULT_STORAGE_PATH),","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"dickongwd"},"content":"                        \"Starting from an empty task list.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"dickongwd"},"content":"            } else {","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"dickongwd"},"content":"                showMessage(String.format(","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"dickongwd"},"content":"                        \"%s task%s loaded from %s\",","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"dickongwd"},"content":"                        tasksLoaded,","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"dickongwd"},"content":"                        tasksLoaded \u003d\u003d 1 ? \"\" : \"s\",","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"dickongwd"},"content":"                        Storage.DEFAULT_STORAGE_PATH));","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"dickongwd"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"dickongwd"},"content":"        } catch (DukeStorageException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"dickongwd"},"content":"            showMessage(String.format(\"Error loading tasks from %s\", Storage.DEFAULT_STORAGE_PATH),","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"dickongwd"},"content":"                    \"Starting from an empty task list.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"dickongwd"},"content":"     * Shows a response to the user via the javafx GUI.","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"dickongwd"},"content":"     * @param message the message to display, line by line","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"dickongwd"},"content":"    private void showMessage(String... message) {","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"dickongwd"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(String.join(\"\\n\", message), dukeImage));","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":70,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":71,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":72,"author":{"gitId":"dickongwd"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"dickongwd"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-12"},{"lineNumber":74,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"dickongwd"},"content":"    @FXML","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"dickongwd"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-12"},{"lineNumber":77,"author":{"gitId":"dickongwd"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"dickongwd"},"content":"        String[] response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"dickongwd"},"content":"        dialogContainer.getChildren().add(DialogBox.getUserDialog(input, userImage));","lastModifiedDate":"2023-09-12"},{"lineNumber":80,"author":{"gitId":"dickongwd"},"content":"        showMessage(response);","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"dickongwd"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"dickongwd":83}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":"\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"         prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"dickongwd":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"\u003cAnchorPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"            minWidth\u003d\"-Infinity\"","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"            fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"dickongwd"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"dickongwd"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"dickongwd":24}},{"path":"src/test/java/duke/command/DeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.command;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"import duke.storage.DukeStorageException;","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"public class DeadlineCommandTest {","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"    public void execute_deadlineCommand_success() throws DukeStorageException, IOException {","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"        Command command \u003d new DeadlineCommand(new Deadline(\"return book\", LocalDate.parse(\"2023-11-30\")));","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"        duke.setStorage(new Storage(\".duke-test-storage.txt\"));","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"dickongwd"},"content":"        duke.loadTasks();","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"dickongwd"},"content":"        command.setDuke(duke);","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"dickongwd"},"content":"        String[] response \u003d command.execute();","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"dickongwd"},"content":"        assertArrayEquals(new String[]{","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"dickongwd"},"content":"                        \"Got it. I\u0027ve added this task:\",","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"dickongwd"},"content":"                        \"[D][ ] return book (by: Nov 30 2023)\",","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"dickongwd"},"content":"                        \"Now you have 1 task in the list.\"},","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"dickongwd"},"content":"                response);","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"dickongwd"},"content":"        // Cleanup","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"dickongwd"},"content":"        Files.deleteIfExists(Paths.get(\".duke-test-storage.txt\"));","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"dickongwd":36}},{"path":"src/test/java/duke/command/InvalidCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.command;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":"public class InvalidCommandTest {","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"    public void execute_invalidCommand_success() {","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"        Command command \u003d new InvalidCommand(\"this is invalid\");","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"        String[] response \u003d command.execute();","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"        assertArrayEquals(response, new String[]{\"this is invalid\"});","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"dickongwd":15}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.parser;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"import duke.command.InvalidCommand;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"    public void eventParsing_validEvent_success() throws DukeParseException {","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"dickongwd"},"content":"        LocalDate from \u003d LocalDate.parse(\"2023-11-11\");","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"dickongwd"},"content":"        LocalDate to \u003d LocalDate.parse(\"2023-11-30\");","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"dickongwd"},"content":"        Event event \u003d new Event(\"exams\", from, to);","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"dickongwd"},"content":"        Event parsedEvent \u003d Parser.parseEvent(\"exams /from 2023-11-11 /to 2023-11-30\");","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"dickongwd"},"content":"        assertEquals(parsedEvent.getDesc(), event.getDesc());","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"dickongwd"},"content":"        assertFalse(parsedEvent.isMarked());","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"dickongwd"},"content":"        assertEquals(parsedEvent.toString(), \"[E][ ] exams (from: Nov 11 2023 to: Nov 30 2023)\");","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"dickongwd"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"dickongwd"},"content":"    public void eventParsing_invalidEvent_exceptionThrown() {","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"dickongwd"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"dickongwd"},"content":"            Parser.parseEvent(\"camp /from 2023-11-11\");","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"dickongwd"},"content":"            fail();","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"dickongwd"},"content":"        } catch (DukeParseException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"dickongwd"},"content":"            assertEquals(\"Event cannot be parsed\", e.getMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"dickongwd"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"dickongwd"},"content":"    public void eventParsing_invalidDate_exceptionThrown() {","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"dickongwd"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"dickongwd"},"content":"            Parser.parseEvent(\"camp /from 11-11-2023 /to 30-11-2023\");","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"dickongwd"},"content":"            fail();","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"dickongwd"},"content":"        } catch (DukeParseException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"dickongwd"},"content":"            assertEquals(\"Event cannot be parsed\", e.getMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"dickongwd"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"dickongwd"},"content":"    public void commandParsing_validCommand_success() {","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"dickongwd"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"dickongwd"},"content":"        Command command \u003d parser.parseCommand(\"todo return book\");","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"dickongwd"},"content":"        assertTrue(command instanceof TodoCommand);","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"dickongwd"},"content":"        command \u003d parser.parseCommand(\"deadline return book /by 2023-11-11\");","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"dickongwd"},"content":"        assertTrue(command instanceof DeadlineCommand);","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"dickongwd"},"content":"        command \u003d parser.parseCommand(\"list\");","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"dickongwd"},"content":"        assertTrue(command instanceof ListCommand);","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"dickongwd"},"content":"        command \u003d parser.parseCommand(\"when is this\");","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"dickongwd"},"content":"        assertTrue(command instanceof InvalidCommand);","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"dickongwd":69}}]
