[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"dickongwd"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"dickongwd":1}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"    private final LocalDate by;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"    public Deadline(String desc, LocalDate by) {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"        super(desc);","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"    public String encode() {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"        return String.format(\"D|%s /by %s\", super.encode(), by);","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"dickongwd"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"dickongwd"},"content":"        return String.format(\"[D]%s (by: %s)\",","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"dickongwd"},"content":"                super.toString(),","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"dickongwd"},"content":"                by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":28,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"dickongwd":28}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-08-18"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":" * The main class for the Duke chatbot.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"        TaskList tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"        TextUi ui \u003d new TextUi();","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"dickongwd"},"content":"            tasks \u003d storage.load();","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"dickongwd"},"content":"            if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"dickongwd"},"content":"                ui.showMessage(String.format(\"No stored tasks found from %s\", Storage.DEFAULT_STORAGE_PATH),","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"dickongwd"},"content":"                        \"Starting from an empty task list.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"dickongwd"},"content":"                tasks \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"dickongwd"},"content":"            } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"dickongwd"},"content":"                ui.showMessage(String.format(\"Tasks loaded from %s\", Storage.DEFAULT_STORAGE_PATH));","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"dickongwd"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"dickongwd"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"dickongwd"},"content":"            ui.showMessage(String.format(\"Error loading tasks from %s\", Storage.DEFAULT_STORAGE_PATH),","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"dickongwd"},"content":"                    \"Starting from an empty task list.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"dickongwd"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"dickongwd"},"content":"        Command command;","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"dickongwd"},"content":"        do {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"dickongwd"},"content":"            String input \u003d ui.getUserCommand();","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"dickongwd"},"content":"            command \u003d parser.parseCommand(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"dickongwd"},"content":"            command.setData(tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"dickongwd"},"content":"            String[] response \u003d command.execute();","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"dickongwd"},"content":"            ui.showMessage(response);","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"dickongwd"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"dickongwd"},"content":"                storage.save(tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"dickongwd"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"dickongwd"},"content":"                ui.showMessage(\"Error saving tasks\");","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"dickongwd"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"dickongwd"},"content":"        } while (!command.isBye());","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"dickongwd":48,"-":4}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":" * Represents an event with a start and end.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"    private final LocalDate from;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"    private final LocalDate to;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"    public Event(String desc, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"        super(desc);","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"    public String encode() {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"        return String.format(\"E|%s /from %s /to %s\", super.encode(), from, to);","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"dickongwd"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"dickongwd"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":26,"author":{"gitId":"dickongwd"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\",","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"dickongwd"},"content":"                super.toString(),","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"dickongwd"},"content":"                from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")),","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"dickongwd"},"content":"                to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":31,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"dickongwd":31}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"import duke.parser.DukeParseException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"public abstract class Task {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"    private final String desc;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"    private boolean marked;","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"    public Task(String desc) {","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"        marked \u003d false;","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"    public static Task decode(String encodedTask) {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"        Pattern pattern \u003d Pattern.compile(\"^(?\u003ctype\u003e.)\\\\|(?\u003cmark\u003e.)\\\\|(?\u003ctaskString\u003e.+)$\");","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"        Matcher matcher \u003d pattern.matcher(encodedTask);","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"        String type \u003d matcher.group(\"type\");","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"        String mark \u003d matcher.group(\"mark\");","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"dickongwd"},"content":"        String input \u003d matcher.group(\"taskString\");","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"dickongwd"},"content":"        Task task;","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"dickongwd"},"content":"        switch (type) {","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"dickongwd"},"content":"            case \"T\":","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"dickongwd"},"content":"                task \u003d Parser.parseTodo(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"dickongwd"},"content":"                break;","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"dickongwd"},"content":"            case \"D\":","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"dickongwd"},"content":"                try {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"dickongwd"},"content":"                    task \u003d Parser.parseDeadline(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"dickongwd"},"content":"                } catch (DukeParseException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"dickongwd"},"content":"                    return null;","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"dickongwd"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"dickongwd"},"content":"                break;","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"dickongwd"},"content":"            case \"E\":","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"dickongwd"},"content":"                try {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"dickongwd"},"content":"                    task \u003d Parser.parseEvent(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"dickongwd"},"content":"                } catch (DukeParseException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"dickongwd"},"content":"                    return null;","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"dickongwd"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"dickongwd"},"content":"                break;","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"dickongwd"},"content":"            default:","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"dickongwd"},"content":"                return null;","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"dickongwd"},"content":"        if (mark.equals(\"1\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"dickongwd"},"content":"            task.mark();","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"dickongwd"},"content":"        return task;","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"dickongwd"},"content":"    public void mark() {","lastModifiedDate":"2023-08-19"},{"lineNumber":53,"author":{"gitId":"dickongwd"},"content":"        marked \u003d true;","lastModifiedDate":"2023-08-19"},{"lineNumber":54,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":55,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":56,"author":{"gitId":"dickongwd"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-19"},{"lineNumber":57,"author":{"gitId":"dickongwd"},"content":"        marked \u003d false;","lastModifiedDate":"2023-08-19"},{"lineNumber":58,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":59,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":60,"author":{"gitId":"dickongwd"},"content":"    public String encode() {","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"dickongwd"},"content":"        return String.format(\"%s|%s\", marked ? \"1\" : \"0\", desc);","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"dickongwd"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":65,"author":{"gitId":"dickongwd"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":66,"author":{"gitId":"dickongwd"},"content":"        return String.format(\"[%s] %s\", marked ? \"X\" : \" \", desc);","lastModifiedDate":"2023-08-19"},{"lineNumber":67,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":68,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"dickongwd":68}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"import java.util.List;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":" * Represents the list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"public class TaskList {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"    public TaskList(Iterable\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"        tasks.forEach(this.tasks::add);","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"dickongwd"},"content":"     * Decodes a list of task from a given encoded task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"dickongwd"},"content":"     * @param encodedTaskList the encoded task list as a string","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"dickongwd"},"content":"     * @return the decoded task list","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"dickongwd"},"content":"    public static TaskList decode(List\u003cString\u003e encodedTaskList) {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"dickongwd"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"dickongwd"},"content":"        encodedTaskList.forEach(encodedTask -\u003e {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"dickongwd"},"content":"            Task task \u003d Task.decode(encodedTask);","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"dickongwd"},"content":"            if (!Objects.isNull(task)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"dickongwd"},"content":"                tasks.add(Task.decode(encodedTask));","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"dickongwd"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"dickongwd"},"content":"        });","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"dickongwd"},"content":"        return new TaskList(tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"dickongwd"},"content":"     * Returns the task with the given task number.","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"dickongwd"},"content":"     * We subtract 1 because task numbers start from 1.","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"dickongwd"},"content":"     * @param taskNum the task number to get","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"dickongwd"},"content":"     * @return the task with the corresponding task number","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"dickongwd"},"content":"    public Task get(int taskNum) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"dickongwd"},"content":"        return tasks.get(taskNum - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"dickongwd"},"content":"     * Adds the given task to the list.","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"dickongwd"},"content":"     * @param task the task to be added","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"dickongwd"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"dickongwd"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"dickongwd"},"content":"     * Returns the size of the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"dickongwd"},"content":"     * @return the size of the task list","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"dickongwd"},"content":"    public int size() {","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"dickongwd"},"content":"        return tasks.size();","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"dickongwd"},"content":"     * Deletes the task with the given task number.","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"dickongwd"},"content":"     * @param taskNum the task number to delete","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"dickongwd"},"content":"    public void delete(int taskNum) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"dickongwd"},"content":"        tasks.remove(taskNum - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"dickongwd"},"content":"     * Encodes the task list as a list of strings to be stored in a file.","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"dickongwd"},"content":"     * @return the encoded task list as a list of strings","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"dickongwd"},"content":"    public List\u003cString\u003e encode() {","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"dickongwd"},"content":"        List\u003cString\u003e encodedTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"dickongwd"},"content":"        tasks.forEach(task -\u003e encodedTaskList.add(task.encode()));","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"dickongwd"},"content":"        return encodedTaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"dickongwd":87}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":" * Represents a task that has to be done.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":"    public Todo(String desc) {","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"        super(desc);","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"    public String encode() {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"        return String.format(\"T|%s\", super.encode());","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"dickongwd":20}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":" * Terminates the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"    public ByeCommand() {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"    public String[] execute() {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"        return new String[]{\"Bye! Hope to see you again soon!\"};","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"dickongwd":16}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":" * Represents an executable command.","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"    protected TaskList tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"    public void setData(TaskList tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"    public boolean isBye() {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"        return this instanceof ByeCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"    public abstract String[] execute();","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"dickongwd":20}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"import duke.Deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":" * Adds a Deadline task to the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"    public static final String MESSAGE_USAGE \u003d \"deadline \u003cdescription\u003e /by \u003cdate YYYY-MM-DD\u003e\";","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"    private final Deadline taskToAdd;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"    public DeadlineCommand(Deadline task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"        taskToAdd \u003d task;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"    public String[] execute() {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"        String[] response \u003d new String[3];","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"        this.tasks.add(taskToAdd);","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"        response[0] \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"dickongwd"},"content":"        response[1] \u003d String.format(\"%s%s\", TextUi.INDENT, taskToAdd);","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"dickongwd"},"content":"        response[2] \u003d String.format(\"Now you have %d task%s in the list.\",","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"dickongwd"},"content":"                this.tasks.size(),","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"dickongwd"},"content":"                this.tasks.size() \u003d\u003d 1 ? \"\" : \"s\");","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"dickongwd"},"content":"        return response;","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"dickongwd":29}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"import duke.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":" * Deletes a task from the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"    public static final String MESSAGE_USAGE \u003d \"delete \u003ctask number\u003e\";","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"    public static final String MESSAGE_INVALID_TASK_NUMBER \u003d \"delete can only take an integer task number\";","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"    private final int taskNumToDelete;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"    public DeleteCommand(int taskNum) {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"        taskNumToDelete \u003d taskNum;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"    public String[] execute() {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"        String[] response \u003d new String[3];","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"dickongwd"},"content":"            Task task \u003d this.tasks.get(taskNumToDelete);","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"dickongwd"},"content":"            this.tasks.delete(taskNumToDelete);","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"dickongwd"},"content":"            response[0] \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"dickongwd"},"content":"            response[1] \u003d String.format(\"%s%s\", TextUi.INDENT, task);","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"dickongwd"},"content":"            response[2] \u003d String.format(\"Now you have %d task%s in the list.\",","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"dickongwd"},"content":"                    this.tasks.size(),","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"dickongwd"},"content":"                    this.tasks.size() \u003d\u003d 1 ? \"\" : \"s\");","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"dickongwd"},"content":"            return response;","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"dickongwd"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"dickongwd"},"content":"            return new String[]{\"Task number does not exist\"};","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"dickongwd":36}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"import duke.Event;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":" * Adds an event task to the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"    public static final String MESSAGE_USAGE \u003d \"event \u003cdescription\u003e /from \u003cdate YYYY-MM-DD\u003e /to \u003cdate YYYY-MM-DD\u003e\";","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"    private final Event taskToAdd;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"    public EventCommand(Event task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"        taskToAdd \u003d task;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"    public String[] execute() {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"        String[] response \u003d new String[3];","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"        this.tasks.add(taskToAdd);","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"        response[0] \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"dickongwd"},"content":"        response[1] \u003d String.format(\"%s%s\", TextUi.INDENT, taskToAdd);","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"dickongwd"},"content":"        response[2] \u003d String.format(\"Now you have %d task%s in the list.\",","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"dickongwd"},"content":"                this.tasks.size(),","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"dickongwd"},"content":"                this.tasks.size() \u003d\u003d 1 ? \"\" : \"s\");","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"dickongwd"},"content":"        return response;","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"dickongwd":29}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":" * Represents an invalid command with a message to be shown to the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":"    public final String[] message;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"    public InvalidCommand(String... message) {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"    public String[] execute() {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"        return message;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"dickongwd":16}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":" * Lists all tasks in the list to the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"    public ListCommand() {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"    public String[] execute() {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"        String[] response;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"        int numTasks \u003d this.tasks.size();","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"        if (numTasks \u003d\u003d 0) {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"            response \u003d new String[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"            response[0] \u003d \"There are no items in your list.\";","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"            response \u003d new String[numTasks + 1];","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"            response[0] \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"            for (int i \u003d 1; i \u003c\u003d numTasks; i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"                response[i] \u003d (i + \". \" + this.tasks.get(i));","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"dickongwd"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"dickongwd"},"content":"        return response;","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"dickongwd":27}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"import duke.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":" * Marks a task as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"    public static final String MESSAGE_USAGE \u003d \"mark \u003ctask number\u003e\";","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"    public static final String MESSAGE_INVALID_TASK_NUMBER \u003d \"mark can only take an integer task number\";","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"    private final int taskNumToMark;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"    public MarkCommand(int taskNum) {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"        taskNumToMark \u003d taskNum;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"    public String[] execute() {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"            String[] response \u003d new String[2];","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"            Task task \u003d this.tasks.get(taskNumToMark);","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"dickongwd"},"content":"            task.mark();","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"dickongwd"},"content":"            response[0] \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"dickongwd"},"content":"            response[1] \u003d String.format(\"%s%s\", TextUi.INDENT, task);","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"dickongwd"},"content":"            return response;","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"dickongwd"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"dickongwd"},"content":"            return new String[]{\"Task number does not exist\"};","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"dickongwd":32}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"import duke.Todo;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":" * Represents a task that has to be done.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"    public static final String MESSAGE_USAGE \u003d \"todo \u003cdescription\u003e\";","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"    public static final String MESSAGE_EMPTY_DESCRIPTION \u003d \"Sorry, but the description of a todo cannot be empty.\";","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"    private final Todo taskToAdd;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"    public TodoCommand(Todo task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"        taskToAdd \u003d task;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"    public String[] execute() {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"        String[] response \u003d new String[3];","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"        this.tasks.add(taskToAdd);","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"dickongwd"},"content":"        response[0] \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"dickongwd"},"content":"        response[1] \u003d String.format(\"%s%s\", TextUi.INDENT, taskToAdd);","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"dickongwd"},"content":"        response[2] \u003d String.format(\"Now you have %d task%s in the list.\",","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"dickongwd"},"content":"                this.tasks.size(),","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"dickongwd"},"content":"                this.tasks.size() \u003d\u003d 1 ? \"\" : \"s\");","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"dickongwd"},"content":"        return response;","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"dickongwd":30}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"import duke.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":" * Unmarks a task as undone.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"    public static final String MESSAGE_USAGE \u003d \"unmark \u003ctask number\u003e\";","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"    public static final String MESSAGE_INVALID_TASK_NUMBER \u003d \"unmark can only take an integer task number\";","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"    private final int taskNumToMark;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"    public UnmarkCommand(int taskNum) {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"        taskNumToMark \u003d taskNum;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"    public String[] execute() {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"        String[] response \u003d new String[2];","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"dickongwd"},"content":"            Task task \u003d this.tasks.get(taskNumToMark);","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"dickongwd"},"content":"            task.unmark();","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"dickongwd"},"content":"            response[0] \u003d \"Ok, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"dickongwd"},"content":"            response[1] \u003d String.format(\"%s%s\", TextUi.INDENT, task);","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"dickongwd"},"content":"            return response;","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"dickongwd"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"dickongwd"},"content":"            return new String[]{\"Task number does not exist\"};","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"dickongwd":33}},{"path":"src/main/java/duke/common/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.common;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":" * A list of common messages used in the chatbot.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"public class Messages {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":"    public static final String MESSAGE_WELCOME \u003d \"Hello! I\u0027m Buzu.\";","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"    public static final String MESSAGE_FIRST_PROMPT \u003d \"What can I do for you?\";","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"    public static final String MESSAGE_GOODBYE \u003d \"Bye! Hope to see you again soon!\";","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"    public static final String MESSAGE_INVALID_COMMAND \u003d \"Sorry, but I don\u0027t know what that means :(\";","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"dickongwd":11}},{"path":"src/main/java/duke/parser/DukeParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":" * Represents an error when parsing user input.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"public class DukeParseException extends Exception {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":"    public DukeParseException(String message) {","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"        super(message);","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"dickongwd":10}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"import duke.Deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"import duke.Event;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"import duke.Todo;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"import duke.command.InvalidCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"import static duke.common.Messages.MESSAGE_INVALID_COMMAND;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"dickongwd"},"content":" * Parses user input into commands.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"dickongwd"},"content":"public class Parser {","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"dickongwd"},"content":"    private static final Pattern COMMAND_FORMAT \u003d Pattern.compile(\"^(?\u003ccommand\u003e\\\\S+)(?\u003carguments\u003e.*)$\");","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"dickongwd"},"content":"    public static Todo parseTodo(String args) {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"dickongwd"},"content":"        return new Todo(args);","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"dickongwd"},"content":"     * Parses a deadline input string into a Deadline object.","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"dickongwd"},"content":"     * @param args the input string for the deadline","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"dickongwd"},"content":"     * @return the parsed Deadline object","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"dickongwd"},"content":"     * @throws DukeParseException if unable to parse correctly","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"dickongwd"},"content":"    public static Deadline parseDeadline(String args) throws DukeParseException {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"dickongwd"},"content":"        Pattern pattern \u003d Pattern.compile(\"^(?\u003cdesc\u003e.+) /by (?\u003cby\u003e.+)$\");","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"dickongwd"},"content":"        Matcher matcher \u003d pattern.matcher(args);","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"dickongwd"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"dickongwd"},"content":"            throw new DukeParseException(\"Deadline cannot be parsed\");","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"dickongwd"},"content":"        String desc \u003d matcher.group(\"desc\").trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"dickongwd"},"content":"        String by \u003d matcher.group(\"by\").trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"dickongwd"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"dickongwd"},"content":"            LocalDate byDate \u003d LocalDate.parse(by);","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"dickongwd"},"content":"            return new Deadline(desc, byDate);","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"dickongwd"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"dickongwd"},"content":"            throw new DukeParseException(\"Deadline cannot be parsed\");","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"dickongwd"},"content":"     * Parses an event input string into an Event object.","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"dickongwd"},"content":"     * @param args the input string for the event","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"dickongwd"},"content":"     * @return the parsed Event object","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"dickongwd"},"content":"     * @throws DukeParseException if unable to parse correctly","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"dickongwd"},"content":"    public static Event parseEvent(String args) throws DukeParseException {","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"dickongwd"},"content":"        Pattern pattern \u003d Pattern.compile(\"^(?\u003cdesc\u003e.+) /from (?\u003cfrom\u003e.+) /to (?\u003cto\u003e.+)$\");","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"dickongwd"},"content":"        Matcher matcher \u003d pattern.matcher(args);","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"dickongwd"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"dickongwd"},"content":"            throw new DukeParseException(\"Event cannot be parsed\");","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"dickongwd"},"content":"        String desc \u003d matcher.group(\"desc\").trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"dickongwd"},"content":"        String from \u003d matcher.group(\"from\").trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"dickongwd"},"content":"        String to \u003d matcher.group(\"to\").trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"dickongwd"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"dickongwd"},"content":"            LocalDate fromDate \u003d LocalDate.parse(from);","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"dickongwd"},"content":"            LocalDate toDate \u003d LocalDate.parse(to);","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"dickongwd"},"content":"            return new Event(desc, fromDate, toDate);","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"dickongwd"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"dickongwd"},"content":"            throw new DukeParseException(\"Event cannot be parsed\");","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"dickongwd"},"content":"     * Takes a given user input and parses it into the corresponding command.","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"dickongwd"},"content":"     * If the user supplies invalid input, an InvalidCommand will be returned.","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"dickongwd"},"content":"     * @param input the user input","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"dickongwd"},"content":"     * @return the corresponding command from the input","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"dickongwd"},"content":"    public Command parseCommand(String input) {","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"dickongwd"},"content":"        Matcher matcher \u003d COMMAND_FORMAT.matcher(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"dickongwd"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"dickongwd"},"content":"            return new InvalidCommand(MESSAGE_INVALID_COMMAND);","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"dickongwd"},"content":"        String command \u003d matcher.group(\"command\").trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"dickongwd"},"content":"        String args \u003d matcher.group(\"arguments\").trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"dickongwd"},"content":"        switch (command) {","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"dickongwd"},"content":"            case TodoCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"dickongwd"},"content":"                return parseTodoCommand(args);","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"dickongwd"},"content":"            case DeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"dickongwd"},"content":"                return parseDeadlineCommand(args);","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"dickongwd"},"content":"            case EventCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"dickongwd"},"content":"                return parseEventCommand(args);","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"dickongwd"},"content":"            case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"dickongwd"},"content":"                return parseMarkCommand(args);","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"dickongwd"},"content":"            case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"dickongwd"},"content":"                return parseUnmarkCommand(args);","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"dickongwd"},"content":"            case ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"dickongwd"},"content":"                return parseListCommand(args);","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"dickongwd"},"content":"            case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"dickongwd"},"content":"                return parseDeleteCommand(args);","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"dickongwd"},"content":"            case ByeCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"dickongwd"},"content":"                return parseByeCommand(args);","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"dickongwd"},"content":"            default:","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"dickongwd"},"content":"                return new InvalidCommand(MESSAGE_INVALID_COMMAND);","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"dickongwd"},"content":"     * Parses a given argument string for the Todo command.","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"dickongwd"},"content":"     * @param args argument string for the Todo command","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"dickongwd"},"content":"     * @return the parsed TodoCommand object","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"dickongwd"},"content":"    private Command parseTodoCommand(String args) {","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"dickongwd"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"dickongwd"},"content":"            return new InvalidCommand(TodoCommand.MESSAGE_EMPTY_DESCRIPTION, TodoCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"dickongwd"},"content":"        return new TodoCommand(parseTodo(args));","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"dickongwd"},"content":"     * Parses a given argument string for the Deadline command.","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"dickongwd"},"content":"     * @param args argument string for the Deadline command","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"dickongwd"},"content":"     * @return the parsed DeadlineCommand object","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"dickongwd"},"content":"    private Command parseDeadlineCommand(String args) {","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"dickongwd"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"dickongwd"},"content":"            Deadline deadline \u003d parseDeadline(args);","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"dickongwd"},"content":"            return new DeadlineCommand(deadline);","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"dickongwd"},"content":"        } catch (DukeParseException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"dickongwd"},"content":"            return new InvalidCommand(MESSAGE_INVALID_COMMAND, e.getMessage(), DeadlineCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"dickongwd"},"content":"     * Parses a given argument string for the Event command.","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"dickongwd"},"content":"     * @param args argument string for the Event command","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"dickongwd"},"content":"     * @return the parsed EventCommand object","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"dickongwd"},"content":"    private Command parseEventCommand(String args) {","lastModifiedDate":"2023-09-02"},{"lineNumber":154,"author":{"gitId":"dickongwd"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":155,"author":{"gitId":"dickongwd"},"content":"            Event event \u003d parseEvent(args);","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"dickongwd"},"content":"            return new EventCommand(event);","lastModifiedDate":"2023-09-02"},{"lineNumber":157,"author":{"gitId":"dickongwd"},"content":"        } catch (DukeParseException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":158,"author":{"gitId":"dickongwd"},"content":"            return new InvalidCommand(MESSAGE_INVALID_COMMAND, EventCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-09-02"},{"lineNumber":159,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":160,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":161,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":162,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":163,"author":{"gitId":"dickongwd"},"content":"     * Parses a given argument string for the Mark command.","lastModifiedDate":"2023-09-02"},{"lineNumber":164,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":165,"author":{"gitId":"dickongwd"},"content":"     * @param args argument string for the Mark command","lastModifiedDate":"2023-09-02"},{"lineNumber":166,"author":{"gitId":"dickongwd"},"content":"     * @return the parsed MarkCommand object","lastModifiedDate":"2023-09-02"},{"lineNumber":167,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":168,"author":{"gitId":"dickongwd"},"content":"    private Command parseMarkCommand(String args) {","lastModifiedDate":"2023-09-02"},{"lineNumber":169,"author":{"gitId":"dickongwd"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":170,"author":{"gitId":"dickongwd"},"content":"            int taskNum \u003d Integer.parseInt(args);","lastModifiedDate":"2023-09-02"},{"lineNumber":171,"author":{"gitId":"dickongwd"},"content":"            return new MarkCommand(taskNum);","lastModifiedDate":"2023-09-02"},{"lineNumber":172,"author":{"gitId":"dickongwd"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":173,"author":{"gitId":"dickongwd"},"content":"            return new InvalidCommand(MarkCommand.MESSAGE_INVALID_TASK_NUMBER, MarkCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-09-02"},{"lineNumber":174,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":175,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":176,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":177,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":178,"author":{"gitId":"dickongwd"},"content":"     * Parses a given argument string for the Unmark command.","lastModifiedDate":"2023-09-02"},{"lineNumber":179,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":180,"author":{"gitId":"dickongwd"},"content":"     * @param args argument string for the Unmark command","lastModifiedDate":"2023-09-02"},{"lineNumber":181,"author":{"gitId":"dickongwd"},"content":"     * @return the parsed UnmarkCommand object","lastModifiedDate":"2023-09-02"},{"lineNumber":182,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":183,"author":{"gitId":"dickongwd"},"content":"    private Command parseUnmarkCommand(String args) {","lastModifiedDate":"2023-09-02"},{"lineNumber":184,"author":{"gitId":"dickongwd"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":185,"author":{"gitId":"dickongwd"},"content":"            int taskNum \u003d Integer.parseInt(args);","lastModifiedDate":"2023-09-02"},{"lineNumber":186,"author":{"gitId":"dickongwd"},"content":"            return new UnmarkCommand(taskNum);","lastModifiedDate":"2023-09-02"},{"lineNumber":187,"author":{"gitId":"dickongwd"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":188,"author":{"gitId":"dickongwd"},"content":"            return new InvalidCommand(UnmarkCommand.MESSAGE_INVALID_TASK_NUMBER, UnmarkCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-09-02"},{"lineNumber":189,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":190,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":191,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":192,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":193,"author":{"gitId":"dickongwd"},"content":"     * Parses a given argument string for the List command.","lastModifiedDate":"2023-09-02"},{"lineNumber":194,"author":{"gitId":"dickongwd"},"content":"     * A List command has no arguments to parse, but we have this function for uniformity.","lastModifiedDate":"2023-09-02"},{"lineNumber":195,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":196,"author":{"gitId":"dickongwd"},"content":"     * @param args argument string for the List command","lastModifiedDate":"2023-09-02"},{"lineNumber":197,"author":{"gitId":"dickongwd"},"content":"     * @return the parsed ListCommand object","lastModifiedDate":"2023-09-02"},{"lineNumber":198,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":199,"author":{"gitId":"dickongwd"},"content":"    private Command parseListCommand(String args) {","lastModifiedDate":"2023-09-02"},{"lineNumber":200,"author":{"gitId":"dickongwd"},"content":"        return new ListCommand();","lastModifiedDate":"2023-09-02"},{"lineNumber":201,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":202,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":203,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":204,"author":{"gitId":"dickongwd"},"content":"     * Parses a given argument string for the Delete command.","lastModifiedDate":"2023-09-02"},{"lineNumber":205,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":206,"author":{"gitId":"dickongwd"},"content":"     * @param args argument string for the Delete command","lastModifiedDate":"2023-09-02"},{"lineNumber":207,"author":{"gitId":"dickongwd"},"content":"     * @return the parsed DeleteCommand object","lastModifiedDate":"2023-09-02"},{"lineNumber":208,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":209,"author":{"gitId":"dickongwd"},"content":"    private Command parseDeleteCommand(String args) {","lastModifiedDate":"2023-09-02"},{"lineNumber":210,"author":{"gitId":"dickongwd"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":211,"author":{"gitId":"dickongwd"},"content":"            int taskNum \u003d Integer.parseInt(args);","lastModifiedDate":"2023-09-02"},{"lineNumber":212,"author":{"gitId":"dickongwd"},"content":"            return new DeleteCommand(taskNum);","lastModifiedDate":"2023-09-02"},{"lineNumber":213,"author":{"gitId":"dickongwd"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":214,"author":{"gitId":"dickongwd"},"content":"            return new InvalidCommand(DeleteCommand.MESSAGE_INVALID_TASK_NUMBER, DeleteCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-09-02"},{"lineNumber":215,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":216,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":217,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":218,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":219,"author":{"gitId":"dickongwd"},"content":"     * Parses a given argument string for the Bye command.","lastModifiedDate":"2023-09-02"},{"lineNumber":220,"author":{"gitId":"dickongwd"},"content":"     * A Bye command has no arguments to parse, but we have this function for uniformity.","lastModifiedDate":"2023-09-02"},{"lineNumber":221,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":222,"author":{"gitId":"dickongwd"},"content":"     * @param args argument string for the Bye command","lastModifiedDate":"2023-09-02"},{"lineNumber":223,"author":{"gitId":"dickongwd"},"content":"     * @return the parsed ByeCommand object","lastModifiedDate":"2023-09-02"},{"lineNumber":224,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":225,"author":{"gitId":"dickongwd"},"content":"    private Command parseByeCommand(String args) {","lastModifiedDate":"2023-09-02"},{"lineNumber":226,"author":{"gitId":"dickongwd"},"content":"        return new ByeCommand();","lastModifiedDate":"2023-09-02"},{"lineNumber":227,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":228,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"dickongwd":228}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"import java.util.List;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":" * Handles saving and loading of tasks from and to a data text file.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":"public class Storage {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"    public static final String DEFAULT_STORAGE_PATH \u003d \".duke-storage.txt\";","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"    private final Path path;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"    public Storage() {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"        this(DEFAULT_STORAGE_PATH);","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"    public Storage(String path) {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"dickongwd"},"content":"        this.path \u003d Paths.get(path);","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"dickongwd"},"content":"     * Saves Duke\u0027s task list in a text file.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"dickongwd"},"content":"     * @param taskList the list of tasks to save","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"dickongwd"},"content":"     * @throws IOException if an I/O error occurs when writing to the file","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"dickongwd"},"content":"    public void save(TaskList taskList) throws IOException {","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"dickongwd"},"content":"        List\u003cString\u003e encodedTaskList \u003d taskList.encode();","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"dickongwd"},"content":"        Files.write(path, encodedTaskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"dickongwd"},"content":"     * Loads the task list from Duke\u0027s data text file.","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"dickongwd"},"content":"     * @return the loaded task list from the data text file","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"dickongwd"},"content":"    public TaskList load() throws IOException {","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"dickongwd"},"content":"        if (!Files.exists(path) || !Files.isRegularFile(path)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"dickongwd"},"content":"            return new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"dickongwd"},"content":"        return TaskList.decode(Files.readAllLines(path));","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"dickongwd":48}},{"path":"src/main/java/duke/ui/TextUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"package duke.ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":"import static duke.common.Messages.MESSAGE_FIRST_PROMPT;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"import static duke.common.Messages.MESSAGE_GOODBYE;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"import static duke.common.Messages.MESSAGE_INVALID_COMMAND;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"import static duke.common.Messages.MESSAGE_WELCOME;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"dickongwd"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"dickongwd"},"content":" * Responsible for showing and retrieving messages to and from the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"dickongwd"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"public class TextUi {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"    public static final String DIVIDER \u003d \"__________________________________________________\";","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"    public static final String INDENT \u003d \"    \";","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"    public static final String NAME \u003d \"Buzu\";","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"    private final Scanner in;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"    private final PrintStream out;","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"    public TextUi() {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"dickongwd"},"content":"        this(System.in, System.out);","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"dickongwd"},"content":"    public TextUi(InputStream in, PrintStream out) {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"dickongwd"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"dickongwd"},"content":"        this.out \u003d out;","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"dickongwd"},"content":"     * Sends a formatted response to the user via standard input.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"dickongwd"},"content":"     * @param text The text to respond with, line by line","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"dickongwd"},"content":"    public void showMessage(String... text) {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"dickongwd"},"content":"        out.printf(\"%s%s%n\", INDENT, DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"dickongwd"},"content":"        for (String line : text) {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"dickongwd"},"content":"            out.printf(\"%s%s%n\", INDENT, line);","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"dickongwd"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"dickongwd"},"content":"        out.printf(\"%s%s%n\", INDENT, DIVIDER);","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"dickongwd"},"content":"        out.println();","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"dickongwd"},"content":"     * Shows a welcome message to the user, typically during the start of program.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"dickongwd"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"dickongwd"},"content":"        showMessage(MESSAGE_WELCOME, MESSAGE_FIRST_PROMPT);","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"dickongwd"},"content":"     * Shows a goodbye message to the user, typically during termination of the program.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"dickongwd"},"content":"    public void showGoodbyeMessage() {","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"dickongwd"},"content":"        showMessage(MESSAGE_GOODBYE);","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"dickongwd"},"content":"     * Shows an invalid command message to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"dickongwd"},"content":"    public void showInvalidCommandMessage() {","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"dickongwd"},"content":"        showMessage(MESSAGE_INVALID_COMMAND);","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"dickongwd"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"dickongwd"},"content":"     * Returns the input string from the user command.","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"dickongwd"},"content":"     * Ignores empty or lines with only whitespace.","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"dickongwd"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"dickongwd"},"content":"     * @return the input string for the user command","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"dickongwd"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"dickongwd"},"content":"    public String getUserCommand() {","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"dickongwd"},"content":"        String input;","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"dickongwd"},"content":"        do {","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"dickongwd"},"content":"            input \u003d in.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"dickongwd"},"content":"        } while (input.trim().isEmpty());","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"dickongwd"},"content":"        return input.trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"dickongwd"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"dickongwd"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"dickongwd":79}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dickongwd"},"content":"todo borrow book","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"dickongwd"},"content":"deadline return book /by 2023-09-03","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"dickongwd"},"content":"mark 1","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"dickongwd"},"content":"event project meeting /from 2023-09-04 /to 2023-09-08","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"dickongwd"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"dickongwd"},"content":"what","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"dickongwd"},"content":"unmark me","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"dickongwd"},"content":"deadline buy food /by 7pm","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"dickongwd"},"content":"delete 1","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"dickongwd"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"dickongwd"},"content":"bye","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"dickongwd":11}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"dickongwd"},"content":"# delete storage data from previous run","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"dickongwd"},"content":"if [ -e \"./.duke-storage.txt\" ]","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"dickongwd"},"content":"then","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"dickongwd"},"content":"    rm .duke-storage.txt","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"dickongwd"},"content":"fi","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"dickongwd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"dickongwd"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"dickongwd"},"content":"java -classpath ../bin duke/Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"dickongwd":8}}]
