[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"# duke.main.Duke project template","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"3. After that, locate the `src/main/java/duke.main.Duke.java` file, right-click it, and choose `Run duke.main.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"pangyyen":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"pangyyen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"pangyyen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"pangyyen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"pangyyen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"pangyyen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"pangyyen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"pangyyen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"pangyyen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"pangyyen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"pangyyen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"pangyyen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"pangyyen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"pangyyen"},"content":"//checkstyle {","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"pangyyen"},"content":"//    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"pangyyen"},"content":"//}","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"pangyyen"},"content":"    mainClass.set(\"duke.main.Launcher\")","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"pangyyen"},"content":"    archiveFileName \u003d \"duke.jar\"","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"pangyyen":23,"-":41}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"T | 0 | borrow","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"pangyyen":1}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"package duke.commands;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":" * Represents a command to be executed.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"public class Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"    private final String commandType;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"    private String description;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"    private int taskIndex;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"    private LocalDate deadlineDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"    private LocalDate eventFromDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"    private LocalDate eventToDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"    public Command(String commandType) {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"pangyyen"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"pangyyen"},"content":"     * Initializes a command with the given command type and description.","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"pangyyen"},"content":"     * @param commandType The command type.","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"pangyyen"},"content":"     * @param description The description.","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"pangyyen"},"content":"    public Command(String commandType, String description) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"pangyyen"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"pangyyen"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"pangyyen"},"content":"     * Initializes a command with the given command type and task index.","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"pangyyen"},"content":"     * @param commandType The command type.","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"pangyyen"},"content":"     * @param taskIndex The task index.","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"pangyyen"},"content":"    public Command(String commandType, int taskIndex) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"pangyyen"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"pangyyen"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"pangyyen"},"content":"     * Initializes a command with the given command type, description and deadline date.","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"pangyyen"},"content":"     * @param commandType The command type.","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"pangyyen"},"content":"     * @param description The description.","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"pangyyen"},"content":"     * @param deadlineDate The deadline date.","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"pangyyen"},"content":"    public Command(String commandType, String description, LocalDate deadlineDate) {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"pangyyen"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"pangyyen"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"pangyyen"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"pangyyen"},"content":"     * Initializes a command with the given command type, description and event dates.","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"pangyyen"},"content":"     * @param commandType The command type.","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"pangyyen"},"content":"     * @param description The description.","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"pangyyen"},"content":"     * @param eventFromDate The event from date.","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"pangyyen"},"content":"     * @param eventToDate The event to date.","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"pangyyen"},"content":"    public Command(String commandType, String description, LocalDate eventFromDate, LocalDate eventToDate) {","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"pangyyen"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"pangyyen"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"pangyyen"},"content":"        this.eventFromDate \u003d eventFromDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"pangyyen"},"content":"        this.eventToDate \u003d eventToDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"pangyyen"},"content":"    public int getTaskIndex() {","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"pangyyen"},"content":"        return this.taskIndex;","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"pangyyen"},"content":"    public String getCommandType() {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"pangyyen"},"content":"        return this.commandType;","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"pangyyen"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"pangyyen"},"content":"        return this.description;","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"pangyyen"},"content":"    public LocalDate getDeadlineDate() {","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"pangyyen"},"content":"        return this.deadlineDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"pangyyen"},"content":"    public LocalDate getEventFromDate() {","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"pangyyen"},"content":"        return this.eventFromDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"pangyyen"},"content":"    public LocalDate getEventToDate() {","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"pangyyen"},"content":"        return this.eventToDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"pangyyen":92}},{"path":"src/main/java/duke/commands/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"package duke.commands;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"import duke.exception.DeadlineException;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"import duke.exception.EventException;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":" * Represents a parser that parses the user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"pangyyen"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"pangyyen"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"pangyyen"},"content":"    private static final DateTimeFormatter dataFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"pangyyen"},"content":"     * Parses the user input and returns the corresponding command.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"pangyyen"},"content":"     * @param userInput The user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"pangyyen"},"content":"     * @return The corresponding command.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"pangyyen"},"content":"     * @throws DukeException If the user input is invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"pangyyen"},"content":"    public static Command parse(String userInput) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"pangyyen"},"content":"        String commandType \u003d getCommandType(userInput);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"pangyyen"},"content":"        switch (commandType) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"pangyyen"},"content":"        case \"bye\":","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"pangyyen"},"content":"        case \"list\":","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"pangyyen"},"content":"            return new Command(commandType);","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"pangyyen"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"pangyyen"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"pangyyen"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"pangyyen"},"content":"            return new Command(commandType, getTaskIndex(userInput)); // taskIndex is -1 if invalid","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"pangyyen"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"pangyyen"},"content":"        case \"find\":","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"pangyyen"},"content":"            return new Command(commandType, getDescription(userInput));","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"pangyyen"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"pangyyen"},"content":"            return new Command(commandType, getDeadlineDescription(userInput), getDeadlineDate(userInput));","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"pangyyen"},"content":"        case \"event\":","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"pangyyen"},"content":"            LocalDate[] eventDates \u003d getEventDates(userInput);","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"pangyyen"},"content":"            LocalDate eventFromDate \u003d eventDates[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"pangyyen"},"content":"            LocalDate eventToDate \u003d eventDates[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"pangyyen"},"content":"            return new Command(commandType, getEventDescription(userInput), eventFromDate, eventToDate);","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"pangyyen"},"content":"        default:","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"pangyyen"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"pangyyen"},"content":"     * Parses the data string from the storage file and returns the corresponding task.","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"pangyyen"},"content":"     * example of data string:","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"pangyyen"},"content":"     * T | 1 | read book","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"pangyyen"},"content":"     * D | 0 | return book | June 6th","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"pangyyen"},"content":"     * E | 0 | project meeting | Aug 6th 2-4pm","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"pangyyen"},"content":"     * File corruption is not handled.","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"pangyyen"},"content":"     * @param taskData The data string from the storage file.","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"pangyyen"},"content":"     * @return The completion status of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"pangyyen"},"content":"    public static Task parseFileString(String taskData) {","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"pangyyen"},"content":"        String[] parts \u003d taskData.split(\" \\\\| \");","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"pangyyen"},"content":"        String type \u003d parts[0].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"pangyyen"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"pangyyen"},"content":"            return null;","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"pangyyen"},"content":"        String isDone \u003d parts[1].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"pangyyen"},"content":"        String description \u003d parts[2].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"pangyyen"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"pangyyen"},"content":"        switch (type) {","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"pangyyen"},"content":"        case \"T\":","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"pangyyen"},"content":"            task \u003d new Todo(description);","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"pangyyen"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"pangyyen"},"content":"        case \"D\":","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"pangyyen"},"content":"            String by \u003d parts[3].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"pangyyen"},"content":"            task \u003d new Deadline(description, by);","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"pangyyen"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"pangyyen"},"content":"        case \"E\":","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"pangyyen"},"content":"            String from \u003d parts[3].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"pangyyen"},"content":"            String to \u003d parts[4].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"pangyyen"},"content":"            task \u003d new Event(description, from, to);","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"pangyyen"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"pangyyen"},"content":"        default:","lastModifiedDate":"2023-09-06"},{"lineNumber":94,"author":{"gitId":"pangyyen"},"content":"            break;","lastModifiedDate":"2023-09-06"},{"lineNumber":95,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"pangyyen"},"content":"        if (isDone.equals(\"1\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"pangyyen"},"content":"            assert task !\u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"pangyyen"},"content":"            task.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"pangyyen"},"content":"        return task;","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"pangyyen"},"content":"     * reads the task and returns the corresponding data string to be written to the storage file.","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"pangyyen"},"content":"     * @param task The task to be read.","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"pangyyen"},"content":"     * @return String to be written to the storage file.","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"pangyyen"},"content":"    public static String readTaskToFile(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"pangyyen"},"content":"        StringBuilder data \u003d new StringBuilder();","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"pangyyen"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"pangyyen"},"content":"            data.append(\"T\");","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"pangyyen"},"content":"            data.append(\" | \").append(task.isDone() ? \"1\" : \"0\");","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"pangyyen"},"content":"            data.append(\" | \").append(task.getDescription());","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"pangyyen"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"pangyyen"},"content":"            data.append(\"D\");","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"pangyyen"},"content":"            data.append(\" | \").append(task.isDone() ? \"1\" : \"0\");","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"pangyyen"},"content":"            data.append(\" | \").append(task.getDescription());","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"pangyyen"},"content":"            data.append(\" | \").append(((Deadline) task).getBy());","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"pangyyen"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"pangyyen"},"content":"            data.append(\"E\");","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"pangyyen"},"content":"            data.append(\" | \").append(task.isDone() ? \"1\" : \"0\");","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"pangyyen"},"content":"            data.append(\" | \").append(task.getDescription());","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"pangyyen"},"content":"            data.append(\" | \").append(((Event) task).getFrom()).append(\" | \").append(((Event) task).getTo());","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"pangyyen"},"content":"        return data.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"pangyyen"},"content":"    private static String getCommandType(String userInput) {","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"pangyyen"},"content":"        String[] parts \u003d userInput.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"pangyyen"},"content":"        return parts.length \u003e 0 ? parts[0] : \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"pangyyen"},"content":"    public static String getDescription(String userInput) {","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"pangyyen"},"content":"        String[] parts \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"pangyyen"},"content":"        return parts.length \u003e 1 ? parts[1] : \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"pangyyen"},"content":"    public static String getDeadlineDescription(String userInput) {","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"pangyyen"},"content":"        String[] parts \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"pangyyen"},"content":"        return parts.length \u003e 1 ? parts[1].split(\"/by\", 2)[0].trim() : \"\";","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"pangyyen"},"content":"    public static String getEventDescription(String userInput) {","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"pangyyen"},"content":"        String[] parts \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"pangyyen"},"content":"        return parts.length \u003e 1 ? parts[1].split(\"/from\", 2)[0].trim() : \"\";","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":153,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"pangyyen"},"content":"     * Returns the task index from the user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"pangyyen"},"content":"     * @param userInput The user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"pangyyen"},"content":"     * @return The task index.","lastModifiedDate":"2023-09-01"},{"lineNumber":158,"author":{"gitId":"pangyyen"},"content":"     * @throws DukeException If the task index is not numeric.","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":160,"author":{"gitId":"pangyyen"},"content":"    public static int getTaskIndex(String userInput) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":161,"author":{"gitId":"pangyyen"},"content":"        String[] parts \u003d userInput.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"pangyyen"},"content":"        if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"pangyyen"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"pangyyen"},"content":"                return Integer.parseInt(parts[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"pangyyen"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"pangyyen"},"content":"                throw new DukeException(\"Error, please enter a number.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":167,"author":{"gitId":"pangyyen"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"pangyyen"},"content":"        throw new DukeException(\"Error, please enter a number.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":170,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":173,"author":{"gitId":"pangyyen"},"content":"     * Returns the deadline date from the user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":174,"author":{"gitId":"pangyyen"},"content":"     * example of deadline date: 2020-02-02","lastModifiedDate":"2023-09-01"},{"lineNumber":175,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":176,"author":{"gitId":"pangyyen"},"content":"     * @param userInput The user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":177,"author":{"gitId":"pangyyen"},"content":"     * @return The deadline date.","lastModifiedDate":"2023-09-01"},{"lineNumber":178,"author":{"gitId":"pangyyen"},"content":"     * @throws DeadlineException If the deadline date is empty or invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":179,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":180,"author":{"gitId":"pangyyen"},"content":"    private static LocalDate getDeadlineDate(String userInput) throws DeadlineException {","lastModifiedDate":"2023-08-31"},{"lineNumber":181,"author":{"gitId":"pangyyen"},"content":"        String[] parts \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":182,"author":{"gitId":"pangyyen"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":183,"author":{"gitId":"pangyyen"},"content":"            throw new DeadlineException(\"detail: Description or deadline date is empty\");","lastModifiedDate":"2023-09-01"},{"lineNumber":184,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":185,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":186,"author":{"gitId":"pangyyen"},"content":"        String description \u003d parts[1];","lastModifiedDate":"2023-09-01"},{"lineNumber":187,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":188,"author":{"gitId":"pangyyen"},"content":"        // Check if /by exists in the description","lastModifiedDate":"2023-09-01"},{"lineNumber":189,"author":{"gitId":"pangyyen"},"content":"        if (!description.contains(\"/by\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":190,"author":{"gitId":"pangyyen"},"content":"            throw new DeadlineException(\"detail: Description does not contain /by\");","lastModifiedDate":"2023-09-01"},{"lineNumber":191,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":192,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":193,"author":{"gitId":"pangyyen"},"content":"        String[] desArray \u003d description.split(\"/by\", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":194,"author":{"gitId":"pangyyen"},"content":"        String taskDescription \u003d desArray[0].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":195,"author":{"gitId":"pangyyen"},"content":"        String deadlineDate \u003d desArray[1].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":196,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":197,"author":{"gitId":"pangyyen"},"content":"        if (taskDescription.isEmpty() || deadlineDate.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":198,"author":{"gitId":"pangyyen"},"content":"            throw new DeadlineException(\"detail: Description or deadline date is empty\");","lastModifiedDate":"2023-09-01"},{"lineNumber":199,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":200,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":201,"author":{"gitId":"pangyyen"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":202,"author":{"gitId":"pangyyen"},"content":"            // Validate date format and return LocalDate object","lastModifiedDate":"2023-08-31"},{"lineNumber":203,"author":{"gitId":"pangyyen"},"content":"            return LocalDate.parse(deadlineDate, dataFormatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":204,"author":{"gitId":"pangyyen"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":205,"author":{"gitId":"pangyyen"},"content":"            throw new DeadlineException(\"detail: Invalid date format. Please use yyyy-MM-dd\");","lastModifiedDate":"2023-09-01"},{"lineNumber":206,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":207,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":208,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":209,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":210,"author":{"gitId":"pangyyen"},"content":"     * Returns the event dates from the user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":211,"author":{"gitId":"pangyyen"},"content":"     * example of event dates: 2020-02-02 2020-02-03","lastModifiedDate":"2023-09-01"},{"lineNumber":212,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":213,"author":{"gitId":"pangyyen"},"content":"     * @param userInput The user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":214,"author":{"gitId":"pangyyen"},"content":"     * @return The event dates.","lastModifiedDate":"2023-09-01"},{"lineNumber":215,"author":{"gitId":"pangyyen"},"content":"     * @throws EventException If the event dates are empty or invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":216,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":217,"author":{"gitId":"pangyyen"},"content":"    private static LocalDate[] getEventDates(String userInput) throws EventException {","lastModifiedDate":"2023-08-31"},{"lineNumber":218,"author":{"gitId":"pangyyen"},"content":"        String[] parts \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":219,"author":{"gitId":"pangyyen"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":220,"author":{"gitId":"pangyyen"},"content":"            throw new EventException(\"details: Description or event dates are empty\");","lastModifiedDate":"2023-09-01"},{"lineNumber":221,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":222,"author":{"gitId":"pangyyen"},"content":"        String description \u003d parts[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":223,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":224,"author":{"gitId":"pangyyen"},"content":"        // Check if both /from and /to exist in the description","lastModifiedDate":"2023-09-01"},{"lineNumber":225,"author":{"gitId":"pangyyen"},"content":"        if (!description.contains(\"/from\") || !description.contains(\"/to\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":226,"author":{"gitId":"pangyyen"},"content":"            throw new EventException(\"details: Description does not contain /from or /to\");","lastModifiedDate":"2023-09-01"},{"lineNumber":227,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":228,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":229,"author":{"gitId":"pangyyen"},"content":"        String[] desArray \u003d description.split(\"/from\", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":230,"author":{"gitId":"pangyyen"},"content":"        String taskDescription \u003d desArray[0].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":231,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":232,"author":{"gitId":"pangyyen"},"content":"        // Split the timing description further using /to","lastModifiedDate":"2023-09-01"},{"lineNumber":233,"author":{"gitId":"pangyyen"},"content":"        String[] timingArr \u003d desArray[1].split(\"/to\", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":234,"author":{"gitId":"pangyyen"},"content":"        String eventFrom \u003d timingArr[0].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":235,"author":{"gitId":"pangyyen"},"content":"        String eventTo \u003d timingArr[1].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":236,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":237,"author":{"gitId":"pangyyen"},"content":"        if (taskDescription.isEmpty() || eventFrom.isEmpty() || eventTo.isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":238,"author":{"gitId":"pangyyen"},"content":"            throw new EventException(\"details: Description or event dates are empty\");","lastModifiedDate":"2023-09-01"},{"lineNumber":239,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":240,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":241,"author":{"gitId":"pangyyen"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":242,"author":{"gitId":"pangyyen"},"content":"            LocalDate eventFromDate \u003d LocalDate.parse(eventFrom, dataFormatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":243,"author":{"gitId":"pangyyen"},"content":"            LocalDate eventToDate \u003d LocalDate.parse(eventTo, dataFormatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":244,"author":{"gitId":"pangyyen"},"content":"            return new LocalDate[]{eventFromDate, eventToDate};","lastModifiedDate":"2023-09-01"},{"lineNumber":245,"author":{"gitId":"pangyyen"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":246,"author":{"gitId":"pangyyen"},"content":"            throw new EventException(\"details: Invalid date format. Please use yyyy-MM-dd\");","lastModifiedDate":"2023-09-01"},{"lineNumber":247,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":248,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":249,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"pangyyen":249}},{"path":"src/main/java/duke/exception/DeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":" * Represents an exception that occurs when the format for adding a deadline is incorrect.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"public class DeadlineException extends DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"    public DeadlineException() {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"        super(\"The format for adding a deadline is incorrect. Please use: \u0027deadline [description] /by [yyyy-MM-dd]\u0027\");","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"     * Constructs a DeadlineException with a specified detail message.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"     * @param s The specified detail message.","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"    public DeadlineException(String s) {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"pangyyen"},"content":"        super(\"The format for adding a deadline is incorrect. Please use: \u0027deadline [description] /by [yyyy-MM-dd]\u0027\"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"pangyyen"},"content":"                + \"\\n\" + s);","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"pangyyen":20}},{"path":"src/main/java/duke/exception/DeleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":" * Represents an exception that occurs when the format for deleting a task is incorrect.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"public class DeleteException extends DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"    public DeleteException() {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"        super(\"The format for deleting a task is incorrect. Please use: \u0027delete [index of task]\u0027\");","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"     * Constructs a DeleteException with a specified detail message.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"     * @param message The specified detail message.","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"    public DeleteException(String message) {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"pangyyen"},"content":"        super(\"The format for deleting a task is incorrect. Please use: \u0027delete [index of task]\u0027\"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"pangyyen"},"content":"                + \"\\n\" + message);","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"pangyyen":20}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":" * Represents an exception that occurs when the format for a command is incorrect.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"     * Constructs a DukeException with a specified detail message.","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"     * @param message The specified detail message.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"pangyyen":16}},{"path":"src/main/java/duke/exception/EventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":" * Represents an exception that occurs when the format for adding an event is incorrect.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"public class EventException extends DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"     * Constructs an EventException.","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"    public EventException() {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"        super(\"The format for adding an event is incorrect. \"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"                + \"Please use: \u0027event [description] /from [yyyy-MM-dd] /to [yyyy-MM-dd]\u0027\");","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"     * Constructs an EventException with the specified detail message.","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"pangyyen"},"content":"     * @param message The detail message.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"pangyyen"},"content":"    public EventException(String message) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"pangyyen"},"content":"        super(\"The format for adding an event is incorrect. \"","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"pangyyen"},"content":"                + \"Please use: \u0027event [description] /from [yyyy-MM-dd] /to [yyyy-MM-dd]\u0027\"","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"pangyyen"},"content":"                + \"\\n\" + message);","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"pangyyen":25}},{"path":"src/main/java/duke/exception/TodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":" * Represents an exception that occurs when the format for a command is incorrect.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"public class TodoException extends DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"     * Constructs a TodoException with a specified detail message.","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"    public TodoException() {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"        super(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"pangyyen":14}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"package duke.main;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"import duke.exception.DeadlineException;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"import duke.exception.DeleteException;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"import duke.exception.EventException;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"import duke.exception.TodoException;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"pangyyen"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"pangyyen"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"pangyyen"},"content":" * The main class that initiates the chatbot application.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"pangyyen"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"pangyyen"},"content":"public class Duke {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"pangyyen"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"pangyyen"},"content":"    private final String filePath \u003d \"duke.txt\";","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"pangyyen"},"content":"    private final Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"pangyyen"},"content":"     * Initializes the Chatbot with an empty task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"pangyyen"},"content":"    public Duke() {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"pangyyen"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"pangyyen"},"content":"     * Marks a task as done and provides user feedback","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"pangyyen"},"content":"     * @param taskIndex Index of the task to be marked as done, starts from \u00271\u0027","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"pangyyen"},"content":"     * @return The feedback string.","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"pangyyen"},"content":"     * @throws DeleteException If the input string is not numeric or if the task index is out of valid range.","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"pangyyen"},"content":"    public String markTaskByBot(int taskIndex) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"pangyyen"},"content":"        if (!taskList.isValidListIndex(taskIndex - 1)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"pangyyen"},"content":"            throw new DeleteException(\"Invalid Index of task!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"pangyyen"},"content":"        taskList.markTaskAsDone(taskIndex - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"pangyyen"},"content":"        saveTasksToFile();","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"pangyyen"},"content":"        return \" OK, I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"pangyyen"},"content":"                + taskList.getTaskDetails(taskIndex - 1);","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"pangyyen"},"content":"     * Marks a task as not done and provides user feedback.","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"pangyyen"},"content":"     * @param taskIndex Index of the task to be marked as not done, starts from \u00271\u0027","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"pangyyen"},"content":"     * @return The feedback string.","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"pangyyen"},"content":"     * @throws DeleteException If the input string is not numeric or if the task index is out of valid range.","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"pangyyen"},"content":"    public String unmarkTaskByBot(int taskIndex) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"pangyyen"},"content":"        if (!taskList.isValidListIndex(taskIndex - 1)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"pangyyen"},"content":"            throw new DeleteException(\"detail: Invalid Index of task!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"pangyyen"},"content":"        taskList.markTaskAsNotDone(taskIndex - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"pangyyen"},"content":"        saveTasksToFile();","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"pangyyen"},"content":"        return \" OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"pangyyen"},"content":"                + taskList.getTaskDetails(taskIndex - 1);","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"pangyyen"},"content":"     * Deletes a task from the task list based on the provided input.","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"pangyyen"},"content":"     * @param taskIndex The index of the task to be deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"pangyyen"},"content":"     * @return The feedback string.","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"pangyyen"},"content":"     * @throws DeleteException If the input string is not numeric or if the task index is out of valid range.","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"pangyyen"},"content":"    public String deleteTaskByBot(int taskIndex) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"pangyyen"},"content":"        if (taskIndex \u003c 1 || taskIndex \u003e taskList.getTaskCount()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"pangyyen"},"content":"            throw new DeleteException(\"Invalid Index of task!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"pangyyen"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"pangyyen"},"content":"            String returnStr \u003d \" Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"pangyyen"},"content":"                    + this.taskList.getTaskDetails(taskIndex - 1)","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"pangyyen"},"content":"                    + \"\\n Now you have \" + (taskList.getTaskCount() - 1) + \" tasks in the list.\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"pangyyen"},"content":"            taskList.deleteTask(taskIndex - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"pangyyen"},"content":"            return returnStr;","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"pangyyen"},"content":"     * Adds a todo task to the task list and provides user feedback","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"pangyyen"},"content":"     * @param description The description of the todo task","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"pangyyen"},"content":"     * @return The feedback string.","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"pangyyen"},"content":"     * @throws TodoException If the description is empty","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"pangyyen"},"content":"    public String addTodo(String description) throws TodoException {","lastModifiedDate":"2023-09-07"},{"lineNumber":100,"author":{"gitId":"pangyyen"},"content":"        Task newTask;","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"pangyyen"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"pangyyen"},"content":"            throw new TodoException();","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"pangyyen"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"pangyyen"},"content":"            newTask \u003d new Todo(description);","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"pangyyen"},"content":"            taskList.addTask(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"pangyyen"},"content":"            return \" Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"pangyyen"},"content":"                    + newTask","lastModifiedDate":"2023-09-06"},{"lineNumber":108,"author":{"gitId":"pangyyen"},"content":"                    + \"\\n Now you have \" + taskList.getTaskCount() + \" tasks in the list.\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"pangyyen"},"content":"     * Adds a deadline task to the task list and provides user feedback","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"pangyyen"},"content":"     * @param description  The description of the deadline task","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"pangyyen"},"content":"     * @param deadlineDate The deadline date of the deadline task","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"pangyyen"},"content":"     * @return The feedback string.","lastModifiedDate":"2023-09-07"},{"lineNumber":118,"author":{"gitId":"pangyyen"},"content":"     * @throws DeadlineException If the description or deadline date is empty","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"pangyyen"},"content":"    public String addDeadline(String description, LocalDate deadlineDate) throws DeadlineException {","lastModifiedDate":"2023-09-07"},{"lineNumber":121,"author":{"gitId":"pangyyen"},"content":"        if (description.isEmpty() || deadlineDate \u003d\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"pangyyen"},"content":"            throw new DeadlineException();","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"pangyyen"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"pangyyen"},"content":"            Task newTask \u003d new Deadline(description, deadlineDate);","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"pangyyen"},"content":"            taskList.addTask(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"pangyyen"},"content":"            return \" Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":127,"author":{"gitId":"pangyyen"},"content":"                    + newTask","lastModifiedDate":"2023-09-06"},{"lineNumber":128,"author":{"gitId":"pangyyen"},"content":"                    + \"\\n Now you have \" + taskList.getTaskCount() + \" tasks in the list.\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":129,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"pangyyen"},"content":"     * Adds an event task to the task list and provides user feedback","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"pangyyen"},"content":"     * @param description   The description of the event task","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"pangyyen"},"content":"     * @param eventFromDate The start date of the event task","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"pangyyen"},"content":"     * @param eventToDate   The end date of the event task","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"pangyyen"},"content":"     * @return The feedback string.","lastModifiedDate":"2023-09-07"},{"lineNumber":139,"author":{"gitId":"pangyyen"},"content":"     * @throws EventException If the description, start date or end date is empty","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"pangyyen"},"content":"    public String addEvent(String description, LocalDate eventFromDate, LocalDate eventToDate) throws EventException {","lastModifiedDate":"2023-09-07"},{"lineNumber":142,"author":{"gitId":"pangyyen"},"content":"        if (description.isEmpty() || eventFromDate \u003d\u003d null || eventToDate \u003d\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"pangyyen"},"content":"            throw new EventException();","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"pangyyen"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"pangyyen"},"content":"            Task newTask \u003d new Event(description, eventFromDate, eventToDate);","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"pangyyen"},"content":"            taskList.addTask(newTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"pangyyen"},"content":"            return \" Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":148,"author":{"gitId":"pangyyen"},"content":"                    + newTask","lastModifiedDate":"2023-09-06"},{"lineNumber":149,"author":{"gitId":"pangyyen"},"content":"                    + \"\\n Now you have \" + taskList.getTaskCount() + \" tasks in the list.\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":150,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":153,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"pangyyen"},"content":"     * Loads the tasks from the storage file","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":156,"author":{"gitId":"pangyyen"},"content":"     * @return The feedback string.","lastModifiedDate":"2023-09-07"},{"lineNumber":157,"author":{"gitId":"pangyyen"},"content":"     * @throws DukeException If the file path is invalid","lastModifiedDate":"2023-09-07"},{"lineNumber":158,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"pangyyen"},"content":"    public String loadTasksFromFile() throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":160,"author":{"gitId":"pangyyen"},"content":"        for (Task taskData : storage.loadTasks()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"pangyyen"},"content":"            this.taskList.addTask(taskData);","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"pangyyen"},"content":"        if (!this.taskList.isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"pangyyen"},"content":"            return this.taskList.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":166,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"pangyyen"},"content":"        return \"No tasks found in file.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":168,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":169,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":170,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":171,"author":{"gitId":"pangyyen"},"content":"     * Saves the tasks to the storage file","lastModifiedDate":"2023-08-30"},{"lineNumber":172,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":173,"author":{"gitId":"pangyyen"},"content":"     * @throws DukeException If the file path is invalid","lastModifiedDate":"2023-09-07"},{"lineNumber":174,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":175,"author":{"gitId":"pangyyen"},"content":"    public void saveTasksToFile() throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":176,"author":{"gitId":"pangyyen"},"content":"        this.storage.saveTasks(this.taskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":177,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":178,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":179,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":180,"author":{"gitId":"pangyyen"},"content":"     * Finds tasks containing the given keyword and displays them.","lastModifiedDate":"2023-09-01"},{"lineNumber":181,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":182,"author":{"gitId":"pangyyen"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2023-09-01"},{"lineNumber":183,"author":{"gitId":"pangyyen"},"content":"     * @return The feedback string.","lastModifiedDate":"2023-09-07"},{"lineNumber":184,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":185,"author":{"gitId":"pangyyen"},"content":"    public String findTasksByKeyword(String keyword) {","lastModifiedDate":"2023-09-07"},{"lineNumber":186,"author":{"gitId":"pangyyen"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d taskList.findTasksByKeyword(keyword);","lastModifiedDate":"2023-09-01"},{"lineNumber":187,"author":{"gitId":"pangyyen"},"content":"        StringBuilder matchingTasksString \u003d new StringBuilder();","lastModifiedDate":"2023-09-07"},{"lineNumber":188,"author":{"gitId":"pangyyen"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":189,"author":{"gitId":"pangyyen"},"content":"            return \"No matching tasks found.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":190,"author":{"gitId":"pangyyen"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":191,"author":{"gitId":"pangyyen"},"content":"            matchingTasksString.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":192,"author":{"gitId":"pangyyen"},"content":"            int count \u003d 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":193,"author":{"gitId":"pangyyen"},"content":"            for (Task task : matchingTasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":194,"author":{"gitId":"pangyyen"},"content":"                matchingTasksString.append(count).append(\".\").append(task).append(\"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":195,"author":{"gitId":"pangyyen"},"content":"                count++;","lastModifiedDate":"2023-09-01"},{"lineNumber":196,"author":{"gitId":"pangyyen"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":197,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":198,"author":{"gitId":"pangyyen"},"content":"        return matchingTasksString.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":199,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":200,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":201,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":202,"author":{"gitId":"pangyyen"},"content":"     * Handles the command based on the command type","lastModifiedDate":"2023-09-01"},{"lineNumber":203,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":204,"author":{"gitId":"pangyyen"},"content":"     * @param command The command to be handled","lastModifiedDate":"2023-09-01"},{"lineNumber":205,"author":{"gitId":"pangyyen"},"content":"     * @return The feedback string.","lastModifiedDate":"2023-09-07"},{"lineNumber":206,"author":{"gitId":"pangyyen"},"content":"     * @throws DukeException If the command type is not recognized","lastModifiedDate":"2023-09-01"},{"lineNumber":207,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":208,"author":{"gitId":"pangyyen"},"content":"    public String handleCommand(Command command) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":209,"author":{"gitId":"pangyyen"},"content":"        String commandType \u003d command.getCommandType();","lastModifiedDate":"2023-08-31"},{"lineNumber":210,"author":{"gitId":"pangyyen"},"content":"        String description \u003d command.getDescription();","lastModifiedDate":"2023-08-31"},{"lineNumber":211,"author":{"gitId":"pangyyen"},"content":"        int taskIndex \u003d command.getTaskIndex();","lastModifiedDate":"2023-08-31"},{"lineNumber":212,"author":{"gitId":"pangyyen"},"content":"        LocalDate deadlineDate \u003d command.getDeadlineDate();","lastModifiedDate":"2023-08-31"},{"lineNumber":213,"author":{"gitId":"pangyyen"},"content":"        LocalDate eventFromDate \u003d command.getEventFromDate();","lastModifiedDate":"2023-08-31"},{"lineNumber":214,"author":{"gitId":"pangyyen"},"content":"        LocalDate eventToDate \u003d command.getEventToDate();","lastModifiedDate":"2023-08-31"},{"lineNumber":215,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":216,"author":{"gitId":"pangyyen"},"content":"        switch (commandType) {","lastModifiedDate":"2023-08-31"},{"lineNumber":217,"author":{"gitId":"pangyyen"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":218,"author":{"gitId":"pangyyen"},"content":"            return markTaskByBot(taskIndex);","lastModifiedDate":"2023-09-07"},{"lineNumber":219,"author":{"gitId":"pangyyen"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":220,"author":{"gitId":"pangyyen"},"content":"            return unmarkTaskByBot(taskIndex);","lastModifiedDate":"2023-09-07"},{"lineNumber":221,"author":{"gitId":"pangyyen"},"content":"        case \"bye\":","lastModifiedDate":"2023-08-31"},{"lineNumber":222,"author":{"gitId":"pangyyen"},"content":"            return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-07"},{"lineNumber":223,"author":{"gitId":"pangyyen"},"content":"        case \"list\":","lastModifiedDate":"2023-08-31"},{"lineNumber":224,"author":{"gitId":"pangyyen"},"content":"            return this.taskList.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":225,"author":{"gitId":"pangyyen"},"content":"        case \"find\":","lastModifiedDate":"2023-09-01"},{"lineNumber":226,"author":{"gitId":"pangyyen"},"content":"            return this.findTasksByKeyword(description);","lastModifiedDate":"2023-09-07"},{"lineNumber":227,"author":{"gitId":"pangyyen"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-31"},{"lineNumber":228,"author":{"gitId":"pangyyen"},"content":"            return this.addTodo(description);","lastModifiedDate":"2023-09-07"},{"lineNumber":229,"author":{"gitId":"pangyyen"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-31"},{"lineNumber":230,"author":{"gitId":"pangyyen"},"content":"            return this.addDeadline(description, deadlineDate);","lastModifiedDate":"2023-09-07"},{"lineNumber":231,"author":{"gitId":"pangyyen"},"content":"        case \"event\":","lastModifiedDate":"2023-08-31"},{"lineNumber":232,"author":{"gitId":"pangyyen"},"content":"            return this.addEvent(description, eventFromDate, eventToDate);","lastModifiedDate":"2023-09-07"},{"lineNumber":233,"author":{"gitId":"pangyyen"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-31"},{"lineNumber":234,"author":{"gitId":"pangyyen"},"content":"            return this.deleteTaskByBot(taskIndex);","lastModifiedDate":"2023-09-07"},{"lineNumber":235,"author":{"gitId":"pangyyen"},"content":"        default:","lastModifiedDate":"2023-08-31"},{"lineNumber":236,"author":{"gitId":"pangyyen"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-30"},{"lineNumber":237,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":238,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"pangyyen":238,"-":1}},{"path":"src/main/java/duke/main/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"package duke.main;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"public class Launcher {","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"        Application.launch(Ui.class, args);","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"pangyyen":13}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"package duke.storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"import duke.commands.Parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"pangyyen"},"content":" * Represents a storage for tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"pangyyen"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"pangyyen"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"pangyyen"},"content":"    private final String filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"pangyyen"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"pangyyen"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"pangyyen"},"content":"     * Loads tasks from the file path","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"pangyyen"},"content":"     * @return An ArrayList of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"pangyyen"},"content":"     * @throws DukeException If the file path is invalid","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"pangyyen"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"pangyyen"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"pangyyen"},"content":"        Task task;","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"pangyyen"},"content":"        try (Scanner scanner \u003d new Scanner(new File(filePath))) {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"pangyyen"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"pangyyen"},"content":"                task \u003d Parser.parseFileString(scanner.nextLine());","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"pangyyen"},"content":"                tasks.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"pangyyen"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"pangyyen"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"pangyyen"},"content":"            System.out.println(\"Data file not found, starting with an empty task list.\");","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"pangyyen"},"content":"        return tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"pangyyen"},"content":"     * Saves tasks to the file path","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"pangyyen"},"content":"     * @param tasks The task list to be saved","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"pangyyen"},"content":"     * @throws DukeException If the file path is invalid","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"pangyyen"},"content":"    public void saveTasks(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"pangyyen"},"content":"        try (PrintWriter writer \u003d new PrintWriter(new FileWriter(filePath))) {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"pangyyen"},"content":"            for (int i \u003d 0; i \u003c tasks.getTaskCount(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"pangyyen"},"content":"                writer.println(Parser.readTaskToFile(tasks.getTask(i)));","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"pangyyen"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"pangyyen"},"content":"        } catch (IOException | DukeException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"pangyyen"},"content":"            throw new DukeException(\"Error saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"pangyyen":62}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":" * Represents a deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"     * Initializes a deadline task with the given description and date in String.","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"pangyyen"},"content":"     * @param by          Due date of the deadline task.","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"pangyyen"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"pangyyen"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"pangyyen"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"pangyyen"},"content":"     * Initializes a deadline task with the given description and date in LocalDate.","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"pangyyen"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"pangyyen"},"content":"     * @param by          Due date of the deadline task.","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"pangyyen"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"pangyyen"},"content":"        super(description);","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"pangyyen"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"pangyyen"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"pangyyen"},"content":"        return this.by;","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"pangyyen"},"content":"     * Returns a string representation of the deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"pangyyen"},"content":"     * example: [D][X] return book (by: Aug 6 2021)","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"pangyyen"},"content":"     * @return String representation of the deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"pangyyen"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"pangyyen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"pangyyen"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"pangyyen"},"content":"                + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"pangyyen":50}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":" * Represents an event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"    protected LocalDate from;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"    protected LocalDate to;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"     * Initializes an event task with the given description and date in String.","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"pangyyen"},"content":"     * @param from        Starting date of the event task.","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"pangyyen"},"content":"     * @param to          Ending date of the event task.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"pangyyen"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"pangyyen"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"pangyyen"},"content":"        this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"pangyyen"},"content":"        this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"pangyyen"},"content":"     * Initializes an event task with the given description and date in LocalDate.","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"pangyyen"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"pangyyen"},"content":"     * @param from        Starting date of the event task.","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"pangyyen"},"content":"     * @param to          Ending date of the event task.","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"pangyyen"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"pangyyen"},"content":"        super(description);","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"pangyyen"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"pangyyen"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"pangyyen"},"content":"    public LocalDate getFrom() {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"pangyyen"},"content":"        return this.from;","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"pangyyen"},"content":"    public LocalDate getTo() {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"pangyyen"},"content":"        return this.to;","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"pangyyen"},"content":"     * Returns a string representation of the event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"pangyyen"},"content":"     * The string representation is formatted as follows:","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"pangyyen"},"content":"     * example: [E][X] project meeting (at: Aug 6 2021)","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"pangyyen"},"content":"     * @return String representation of the event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"pangyyen"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"pangyyen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"pangyyen"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\",","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"pangyyen"},"content":"                super.toString(),","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"pangyyen"},"content":"                from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")),","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"pangyyen"},"content":"                to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"pangyyen":61}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":" * Represents a generic task with a description and completion status","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"     * Initializes a task with the given description and sets the completion status to false.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"pangyyen"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"pangyyen"},"content":"     * Initializes a task with the given description and completion status.","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"pangyyen"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"pangyyen"},"content":"     * @param isDone Completion status of the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"pangyyen"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"pangyyen"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"pangyyen"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"pangyyen"},"content":"     * Gets the status icon representing the completion status of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"pangyyen"},"content":"     * @return \"X\" if the task is done, \" \" (space) if not done.","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"pangyyen"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"pangyyen"},"content":"        return (this.isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"pangyyen"},"content":"     * Gets the description of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"pangyyen"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"pangyyen"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"pangyyen"},"content":"        return (this.description);","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"pangyyen"},"content":"     * Marks the task as done by setting the completion status to true.","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"pangyyen"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"pangyyen"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"pangyyen"},"content":"     * Marks the task as not done by setting the completion status to false.","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"pangyyen"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"pangyyen"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"pangyyen"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"pangyyen"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"pangyyen"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"pangyyen"},"content":"     * example: [T][X] return book","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"pangyyen"},"content":"     * @return String representation of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"pangyyen"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"pangyyen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"pangyyen"},"content":"        return String.format(\"[\" + this.getStatusIcon() + \"] \" + this.getDescription());","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"pangyyen":77}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":" * Represents a list of tasks and provides methods to manipulate them","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"public class TaskList {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"    private int taskCount;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"     * Initializes a dynamic empty task list with a maximum capacity.","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"pangyyen"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"pangyyen"},"content":"        tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"pangyyen"},"content":"        taskCount \u003d 0;","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"pangyyen"},"content":"     * Checks if the given task index is valid within the task list.","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"pangyyen"},"content":"     * @param taskListIndex The index of the task to be checked.","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"pangyyen"},"content":"     * @return True if the task index is valid, otherwise false.","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"pangyyen"},"content":"    public boolean isValidListIndex(int taskListIndex) {","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"pangyyen"},"content":"        return (taskListIndex \u003e\u003d 0 \u0026\u0026 taskListIndex \u003c taskCount);","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"pangyyen"},"content":"     * Retrieves details of a specific task within the task list.","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"pangyyen"},"content":"     * @param taskListIndex The index of the task in the task list.","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"pangyyen"},"content":"     * @return Details of the task as a formatted string, or null if the index is invalid.","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"pangyyen"},"content":"     * @throws DukeException If the index is invalid.","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"pangyyen"},"content":"    public String getTaskDetails(int taskListIndex) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"pangyyen"},"content":"        if (isValidListIndex(taskListIndex)) {","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"pangyyen"},"content":"            Task task \u003d tasks.get(taskListIndex);","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"pangyyen"},"content":"            return task.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"pangyyen"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"pangyyen"},"content":"            throw new DukeException(\"Invalid Index\");","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"pangyyen"},"content":"     * Retrieves a specific task within the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"pangyyen"},"content":"     * @param taskListIndex The index of the task in the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"pangyyen"},"content":"     * @return The task, or null if the index is invalid.","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"pangyyen"},"content":"     * @throws DukeException If the index is invalid.","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"pangyyen"},"content":"    public Task getTask(int taskListIndex) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"pangyyen"},"content":"        if (isValidListIndex(taskListIndex)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"pangyyen"},"content":"            return tasks.get(taskListIndex);","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"pangyyen"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"pangyyen"},"content":"            throw new DukeException(\"Invalid Index\");","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"pangyyen"},"content":"     * Gets the current count of tasks in the task list.","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"pangyyen"},"content":"     * @return The count of tasks in the task list.","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"pangyyen"},"content":"    public int getTaskCount() {","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"pangyyen"},"content":"        return this.taskCount;","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"pangyyen"},"content":"     * Adds a task to the task list if space is available.","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"pangyyen"},"content":"     * @param task The task to be added to the task list.","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"pangyyen"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"pangyyen"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"pangyyen"},"content":"        this.taskCount++;","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"pangyyen"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"pangyyen"},"content":"     * @param taskListIndex The index of the task to be deleted.","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"pangyyen"},"content":"    public void deleteTask(int taskListIndex) {","lastModifiedDate":"2023-08-23"},{"lineNumber":89,"author":{"gitId":"pangyyen"},"content":"        this.tasks.remove(taskListIndex);","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"pangyyen"},"content":"        this.taskCount--;","lastModifiedDate":"2023-08-23"},{"lineNumber":91,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":92,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":93,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":94,"author":{"gitId":"pangyyen"},"content":"     * Marks a task in the task list as done.","lastModifiedDate":"2023-08-23"},{"lineNumber":95,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":96,"author":{"gitId":"pangyyen"},"content":"     * @param taskListIndex The index of the task to be marked as done.","lastModifiedDate":"2023-08-23"},{"lineNumber":97,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":98,"author":{"gitId":"pangyyen"},"content":"    public void markTaskAsDone(int taskListIndex) {","lastModifiedDate":"2023-08-23"},{"lineNumber":99,"author":{"gitId":"pangyyen"},"content":"        if (isValidListIndex(taskListIndex)) {","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"pangyyen"},"content":"            this.tasks.get(taskListIndex).markAsDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":101,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":102,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":103,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":104,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":105,"author":{"gitId":"pangyyen"},"content":"     * Marks a task in the task list as not done.","lastModifiedDate":"2023-08-23"},{"lineNumber":106,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":107,"author":{"gitId":"pangyyen"},"content":"     * @param taskListIndex The index of the task to be marked as not done.","lastModifiedDate":"2023-08-23"},{"lineNumber":108,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":109,"author":{"gitId":"pangyyen"},"content":"    public void markTaskAsNotDone(int taskListIndex) {","lastModifiedDate":"2023-08-23"},{"lineNumber":110,"author":{"gitId":"pangyyen"},"content":"        if (isValidListIndex(taskListIndex)) {","lastModifiedDate":"2023-08-23"},{"lineNumber":111,"author":{"gitId":"pangyyen"},"content":"            this.tasks.get(taskListIndex).markAsNotDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":112,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":113,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":114,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":115,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"pangyyen"},"content":"     * Searches for tasks containing the given keyword and returns a list of matching tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"pangyyen"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"pangyyen"},"content":"     * @return A list of matching tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"pangyyen"},"content":"    public ArrayList\u003cTask\u003e findTasksByKeyword(String keyword) {","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"pangyyen"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"pangyyen"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"pangyyen"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"pangyyen"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"pangyyen"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"pangyyen"},"content":"        return matchingTasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":132,"author":{"gitId":"pangyyen"},"content":"     * Displays the tasks in the task list with their details.","lastModifiedDate":"2023-08-23"},{"lineNumber":133,"author":{"gitId":"pangyyen"},"content":"     * example: [T][X] return book","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"pangyyen"},"content":"     * @return String representation of the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":137,"author":{"gitId":"pangyyen"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"pangyyen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"pangyyen"},"content":"        if (taskCount \u003d\u003d 0) {","lastModifiedDate":"2023-08-23"},{"lineNumber":140,"author":{"gitId":"pangyyen"},"content":"            return \"Horray!! No tasks in the task list!\";","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"pangyyen"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":142,"author":{"gitId":"pangyyen"},"content":"            StringBuilder taskListString \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"pangyyen"},"content":"            for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2023-08-23"},{"lineNumber":144,"author":{"gitId":"pangyyen"},"content":"                try {","lastModifiedDate":"2023-09-07"},{"lineNumber":145,"author":{"gitId":"pangyyen"},"content":"                    taskListString.append((i + 1)).append(\". \").append(this.getTaskDetails(i)).append(\"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"pangyyen"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":147,"author":{"gitId":"pangyyen"},"content":"                    throw new RuntimeException(e);","lastModifiedDate":"2023-09-07"},{"lineNumber":148,"author":{"gitId":"pangyyen"},"content":"                }","lastModifiedDate":"2023-09-07"},{"lineNumber":149,"author":{"gitId":"pangyyen"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":150,"author":{"gitId":"pangyyen"},"content":"            return taskListString.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":152,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":153,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":154,"author":{"gitId":"pangyyen"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"pangyyen"},"content":"        return (taskCount \u003d\u003d 0);","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"pangyyen":157}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":" * Represents a todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"     * Returns a string representation of the todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"     * example: [T][X] return book","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"     * @return String representation of the todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"pangyyen"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"pangyyen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"pangyyen"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"pangyyen":21}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"package duke.ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label containing text from","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"pangyyen"},"content":"    private Label text;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"pangyyen"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"pangyyen"},"content":"     * Initializes a DialogBox object.","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"pangyyen"},"content":"     * @param l The label containing the text to be displayed.","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"pangyyen"},"content":"     * @param iv The image to be displayed.","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"pangyyen"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"pangyyen"},"content":"        text \u003d l;","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"pangyyen"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"pangyyen"},"content":"        text.setWrapText(true);","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"pangyyen"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"pangyyen"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"pangyyen"},"content":"        Circle clip \u003d new Circle(50, 50, 50);","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"pangyyen"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"pangyyen"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"pangyyen"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"pangyyen"},"content":"    private void flip() {","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"pangyyen"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"pangyyen"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"pangyyen"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"pangyyen"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"pangyyen"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"pangyyen"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"pangyyen"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"pangyyen"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"pangyyen"},"content":"        db.flip();","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"pangyyen"},"content":"        return db;","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"pangyyen":57}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"package duke.ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"import duke.commands.Parser;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"import duke.main.Duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"pangyyen"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"pangyyen"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"pangyyen"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"pangyyen"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"pangyyen"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"pangyyen"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"pangyyen"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"pangyyen"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"pangyyen"},"content":" * Represents the user interface of the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"pangyyen"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"pangyyen"},"content":"public class Ui extends Application {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"pangyyen"},"content":"    private static final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"pangyyen"},"content":"    private static VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"pangyyen"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"pangyyen"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"pangyyen"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"pangyyen"},"content":"    private Scene scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"pangyyen"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"pangyyen"},"content":"    private final Image userImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"pangyyen"},"content":"            this.getClass().getResourceAsStream(\"/AncientHuman.jpeg\")));","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"pangyyen"},"content":"    private final Image dukeImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"pangyyen"},"content":"            this.getClass().getResourceAsStream(\"/HolyGod.jpeg\")));","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"pangyyen"},"content":"     * Prints a message to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"pangyyen"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"pangyyen"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"pangyyen"},"content":"        Label dukeMessage \u003d new Label(\"____________________________________________________________\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"pangyyen"},"content":"                + message + \"\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"pangyyen"},"content":"                + \"____________________________________________________________\");","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"pangyyen"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(dukeMessage, new ImageView(dukeImage)));","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"pangyyen"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"pangyyen"},"content":"    public void start(Stage stage) throws Exception {","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"pangyyen"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"pangyyen"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"pangyyen"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"pangyyen"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"pangyyen"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"pangyyen"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"pangyyen"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"pangyyen"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"pangyyen"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"pangyyen"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"pangyyen"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"pangyyen"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"pangyyen"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"pangyyen"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"pangyyen"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"pangyyen"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"pangyyen"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"pangyyen"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"pangyyen"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"pangyyen"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"pangyyen"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"pangyyen"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"pangyyen"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"pangyyen"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"pangyyen"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"pangyyen"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":96,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"pangyyen"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"pangyyen"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":99,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":100,"author":{"gitId":"pangyyen"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":101,"author":{"gitId":"pangyyen"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":102,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":103,"author":{"gitId":"pangyyen"},"content":"        //Step 3. Add functionality to handle user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":104,"author":{"gitId":"pangyyen"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"pangyyen"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-07"},{"lineNumber":106,"author":{"gitId":"pangyyen"},"content":"        });","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"pangyyen"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"pangyyen"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"pangyyen"},"content":"        });","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":112,"author":{"gitId":"pangyyen"},"content":"        // Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2023-09-07"},{"lineNumber":113,"author":{"gitId":"pangyyen"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-09-07"},{"lineNumber":114,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":115,"author":{"gitId":"pangyyen"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-09-07"},{"lineNumber":116,"author":{"gitId":"pangyyen"},"content":"        stage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":117,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":118,"author":{"gitId":"pangyyen"},"content":"        handleFileLoading();","lastModifiedDate":"2023-09-07"},{"lineNumber":119,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":120,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":121,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":122,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":123,"author":{"gitId":"pangyyen"},"content":"     * Prints the initial greeting message to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":124,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":125,"author":{"gitId":"pangyyen"},"content":"    private void handleFileLoading() throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":126,"author":{"gitId":"pangyyen"},"content":"        Label dukeLoadTasks \u003d new Label(\"hello HUMAN what do you need \\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":127,"author":{"gitId":"pangyyen"},"content":"                + duke.loadTasksFromFile());","lastModifiedDate":"2023-09-07"},{"lineNumber":128,"author":{"gitId":"pangyyen"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(dukeLoadTasks, new ImageView(dukeImage)));","lastModifiedDate":"2023-09-07"},{"lineNumber":129,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":130,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":131,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":132,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":133,"author":{"gitId":"pangyyen"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-07"},{"lineNumber":134,"author":{"gitId":"pangyyen"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-07"},{"lineNumber":135,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":136,"author":{"gitId":"pangyyen"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":137,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":138,"author":{"gitId":"pangyyen"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2023-09-07"},{"lineNumber":139,"author":{"gitId":"pangyyen"},"content":"        String output \u003d getResponse(userInput.getText());","lastModifiedDate":"2023-09-07"},{"lineNumber":140,"author":{"gitId":"pangyyen"},"content":"        Label dukeText \u003d new Label(output);","lastModifiedDate":"2023-09-07"},{"lineNumber":141,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":142,"author":{"gitId":"pangyyen"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":143,"author":{"gitId":"pangyyen"},"content":"                DialogBox.getUserDialog(userText, new ImageView(userImage)),","lastModifiedDate":"2023-09-07"},{"lineNumber":144,"author":{"gitId":"pangyyen"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(dukeImage))","lastModifiedDate":"2023-09-07"},{"lineNumber":145,"author":{"gitId":"pangyyen"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":146,"author":{"gitId":"pangyyen"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":147,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":148,"author":{"gitId":"pangyyen"},"content":"        if (output.equals(\"Bye. Hope to see you again soon!\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":149,"author":{"gitId":"pangyyen"},"content":"            userInput.setDisable(true);","lastModifiedDate":"2023-09-07"},{"lineNumber":150,"author":{"gitId":"pangyyen"},"content":"            sendButton.setDisable(true);","lastModifiedDate":"2023-09-07"},{"lineNumber":151,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":152,"author":{"gitId":"pangyyen"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2023-09-07"},{"lineNumber":153,"author":{"gitId":"pangyyen"},"content":"            delay.setOnFinished(event -\u003e {","lastModifiedDate":"2023-09-07"},{"lineNumber":154,"author":{"gitId":"pangyyen"},"content":"                Stage stage \u003d (Stage) userInput.getScene().getWindow();","lastModifiedDate":"2023-09-07"},{"lineNumber":155,"author":{"gitId":"pangyyen"},"content":"                stage.close();","lastModifiedDate":"2023-09-07"},{"lineNumber":156,"author":{"gitId":"pangyyen"},"content":"            });","lastModifiedDate":"2023-09-07"},{"lineNumber":157,"author":{"gitId":"pangyyen"},"content":"            delay.play();","lastModifiedDate":"2023-09-07"},{"lineNumber":158,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":159,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":160,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":161,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":162,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":163,"author":{"gitId":"pangyyen"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":164,"author":{"gitId":"pangyyen"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-09-07"},{"lineNumber":165,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":166,"author":{"gitId":"pangyyen"},"content":"     * @param input The user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":167,"author":{"gitId":"pangyyen"},"content":"     * @return The response to the user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":168,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":169,"author":{"gitId":"pangyyen"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":170,"author":{"gitId":"pangyyen"},"content":"        String dukeResponse;","lastModifiedDate":"2023-09-07"},{"lineNumber":171,"author":{"gitId":"pangyyen"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":172,"author":{"gitId":"pangyyen"},"content":"            Command parsedCommand \u003d Parser.parse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":173,"author":{"gitId":"pangyyen"},"content":"            dukeResponse \u003d duke.handleCommand(parsedCommand);","lastModifiedDate":"2023-09-07"},{"lineNumber":174,"author":{"gitId":"pangyyen"},"content":"            duke.saveTasksToFile();","lastModifiedDate":"2023-09-07"},{"lineNumber":175,"author":{"gitId":"pangyyen"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":176,"author":{"gitId":"pangyyen"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":177,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":178,"author":{"gitId":"pangyyen"},"content":"        return dukeResponse;","lastModifiedDate":"2023-09-07"},{"lineNumber":179,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":180,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":181,"author":{"gitId":"pangyyen"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-07"},{"lineNumber":182,"author":{"gitId":"pangyyen"},"content":"        Application.launch(Ui.class, args);","lastModifiedDate":"2023-09-07"},{"lineNumber":183,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":184,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"pangyyen":184}},{"path":"src/main/resources/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"D | 1 | return book | 2023-01-01","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"T | 0 | swimming","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"D | 0 | return | 2024-01-01","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"E | 0 | super nova | 2023-01-01 | 2023-02-02","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"T | 0 | gogogo","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"pangyyen":5}},{"path":"src/test/data/dukeTest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"pangyyen":2}},{"path":"src/test/java/commands/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"package commands;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"import duke.commands.Parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"pangyyen"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"pangyyen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"pangyyen"},"content":"    public void parseTodoTest() throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"pangyyen"},"content":"        String userInput \u003d \"todo Sample\";","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"pangyyen"},"content":"        Command command \u003d Parser.parse(userInput);","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"pangyyen"},"content":"        assertEquals(command.getCommandType(), \"todo\");","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"pangyyen"},"content":"        assertEquals(\"Sample\", command.getDescription());","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"pangyyen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"pangyyen"},"content":"    public void parseDeadlineTest() throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"pangyyen"},"content":"        String userInput \u003d \"deadline Sample /by 2023-12-31\";","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"pangyyen"},"content":"        Command command \u003d Parser.parse(userInput);","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"pangyyen"},"content":"        assertEquals(command.getCommandType(), \"deadline\");","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"pangyyen"},"content":"        assertEquals(\"Sample\", command.getDescription());","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"pangyyen"},"content":"        assertEquals(LocalDate.parse(\"2023-12-31\"), command.getDeadlineDate());","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"pangyyen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"pangyyen"},"content":"    public void parseEventTest() throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"pangyyen"},"content":"        String userInput \u003d \"event Sample /from 2023-12-31 /to 2024-01-01\";","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"pangyyen"},"content":"        Command command \u003d Parser.parse(userInput);","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"pangyyen"},"content":"        assertEquals(command.getCommandType(), \"event\");","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"pangyyen"},"content":"        assertEquals(\"Sample\", command.getDescription());","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"pangyyen"},"content":"        assertEquals(LocalDate.parse(\"2023-12-31\"), command.getEventFromDate());","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"pangyyen"},"content":"        assertEquals(LocalDate.parse(\"2024-01-01\"), command.getEventToDate());","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"pangyyen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"pangyyen"},"content":"    public void parseInvalidCommandTest() {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"pangyyen"},"content":"        String userInput \u003d \"invalidCommand\";","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"pangyyen"},"content":"        assertThrows(DukeException.class, () -\u003e Parser.parse(userInput));","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"pangyyen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"pangyyen"},"content":"    public void parseFileStringTodoTest() {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"pangyyen"},"content":"        String taskData \u003d \"T | 1 | Sample Todo\";","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"pangyyen"},"content":"        Task task \u003d Parser.parseFileString(taskData);","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"pangyyen"},"content":"        assertTrue(task instanceof Todo);","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"pangyyen"},"content":"        assertEquals(\"Sample Todo\", task.getDescription());","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"pangyyen"},"content":"        assertTrue(task.isDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"pangyyen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"pangyyen"},"content":"    public void parseFileStringDeadlineTest() {","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"pangyyen"},"content":"        String taskData \u003d \"D | 0 | Sample Deadline | 2023-12-31\";","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"pangyyen"},"content":"        Task task \u003d Parser.parseFileString(taskData);","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"pangyyen"},"content":"        assertTrue(task instanceof Deadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"pangyyen"},"content":"        assertEquals(\"Sample Deadline\", task.getDescription());","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"pangyyen":74}},{"path":"src/test/java/duke/commands/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"package duke.commands;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"public class CommandTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"    public void constructorWithTypeOnlyTest() {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"        Command command \u003d new Command(\"bye\");","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"        assertEquals(\"bye\", command.getCommandType());","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"        assertNull(command.getDescription());","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"pangyyen"},"content":"        assertEquals(0, command.getTaskIndex());","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"pangyyen"},"content":"        assertNull(command.getDeadlineDate());","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"pangyyen"},"content":"        assertNull(command.getEventFromDate());","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"pangyyen"},"content":"        assertNull(command.getEventToDate());","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"pangyyen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"pangyyen"},"content":"    public void constructorWithTypeAndDescriptionTest() {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"pangyyen"},"content":"        Command command \u003d new Command(\"todo\", \"Sample Todo\");","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"pangyyen"},"content":"        assertEquals(\"todo\", command.getCommandType());","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"pangyyen"},"content":"        assertEquals(\"Sample Todo\", command.getDescription());","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"pangyyen"},"content":"        assertEquals(0, command.getTaskIndex());","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"pangyyen"},"content":"        assertNull(command.getDeadlineDate());","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"pangyyen"},"content":"        assertNull(command.getEventFromDate());","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"pangyyen"},"content":"        assertNull(command.getEventToDate());","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"pangyyen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"pangyyen"},"content":"    public void constructorWithTypeAndTaskIndexTest() {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"pangyyen"},"content":"        Command command \u003d new Command(\"delete\", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"pangyyen"},"content":"        assertEquals(\"delete\", command.getCommandType());","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"pangyyen"},"content":"        assertNull(command.getDescription());","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"pangyyen"},"content":"        assertEquals(2, command.getTaskIndex());","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"pangyyen"},"content":"        assertNull(command.getDeadlineDate());","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"pangyyen"},"content":"        assertNull(command.getEventFromDate());","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"pangyyen"},"content":"        assertNull(command.getEventToDate());","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"pangyyen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"pangyyen"},"content":"    public void constructorWithTypeDescriptionAndDeadlineDateTest() {","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"pangyyen"},"content":"        LocalDate deadlineDate \u003d LocalDate.parse(\"2023-12-31\");","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"pangyyen"},"content":"        Command command \u003d new Command(\"deadline\", \"Sample Deadline\", deadlineDate);","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"pangyyen"},"content":"        assertEquals(\"deadline\", command.getCommandType());","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"pangyyen"},"content":"        assertEquals(\"Sample Deadline\", command.getDescription());","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"pangyyen"},"content":"        assertEquals(0, command.getTaskIndex());","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"pangyyen"},"content":"        assertEquals(deadlineDate, command.getDeadlineDate());","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"pangyyen"},"content":"        assertNull(command.getEventFromDate());","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"pangyyen"},"content":"        assertNull(command.getEventToDate());","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"pangyyen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"pangyyen"},"content":"    public void constructorWithTypeDescriptionAndEventDatesTest() {","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"pangyyen"},"content":"        LocalDate eventFromDate \u003d LocalDate.parse(\"2023-12-31\");","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"pangyyen"},"content":"        LocalDate eventToDate \u003d LocalDate.parse(\"2024-01-01\");","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"pangyyen"},"content":"        Command command \u003d new Command(\"event\", \"Sample Event\", eventFromDate, eventToDate);","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"pangyyen"},"content":"        assertEquals(\"event\", command.getCommandType());","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"pangyyen"},"content":"        assertEquals(\"Sample Event\", command.getDescription());","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"pangyyen"},"content":"        assertEquals(0, command.getTaskIndex());","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"pangyyen"},"content":"        assertNull(command.getDeadlineDate());","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"pangyyen"},"content":"        assertEquals(eventFromDate, command.getEventFromDate());","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"pangyyen"},"content":"        assertEquals(eventToDate, command.getEventToDate());","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"pangyyen":69}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"class DeadlineTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"    void getByTest() {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"        Deadline deadline \u003d new Deadline(\"Sample Deadline\", date);","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"        assertEquals(date, deadline.getBy());","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"pangyyen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"pangyyen"},"content":"    void testToStringTest() {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"pangyyen"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"pangyyen"},"content":"        Deadline deadline \u003d new Deadline(\"Sample Deadline\", date);","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"pangyyen"},"content":"        assertEquals(\"[D][ ] Sample Deadline (by: \"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"pangyyen"},"content":"                + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"pangyyen"},"content":"                + \")\", deadline.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"pangyyen"},"content":"        deadline.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"pangyyen"},"content":"        assertEquals(\"[D][X] Sample Deadline (by: \"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"pangyyen"},"content":"                + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"pangyyen"},"content":"                + \")\", deadline.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"pangyyen":32}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"class EventTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"    void getFromAndToTest() {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"        LocalDate fromDate \u003d LocalDate.now();","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"        LocalDate toDate \u003d fromDate.plusDays(2);","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"pangyyen"},"content":"        Event event \u003d new Event(\"Sample Event\", fromDate, toDate);","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"pangyyen"},"content":"        assertEquals(fromDate, event.getFrom());","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"pangyyen"},"content":"        assertEquals(toDate, event.getTo());","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"pangyyen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"pangyyen"},"content":"    void toStringTest() {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"pangyyen"},"content":"        LocalDate fromDate \u003d LocalDate.now();","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"pangyyen"},"content":"        LocalDate toDate \u003d fromDate.plusDays(2);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"pangyyen"},"content":"        Event event \u003d new Event(\"Sample Event\", fromDate, toDate);","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"pangyyen"},"content":"        assertEquals(\"[E][ ] Sample Event (from: \"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"pangyyen"},"content":"                + fromDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"pangyyen"},"content":"                + \" to: \" + toDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\", event.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"pangyyen"},"content":"        event.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"pangyyen"},"content":"        assertEquals(\"[E][X] Sample Event (from: \"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"pangyyen"},"content":"                + fromDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"pangyyen"},"content":"                + \" to: \" + toDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\", event.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"pangyyen":38}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"import static org.junit.jupiter.api.Assertions.assertSame;","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"class TaskListTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"pangyyen"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"pangyyen"},"content":"    public void setUp() {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"pangyyen"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"pangyyen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"pangyyen"},"content":"    void getTaskDetails() throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"pangyyen"},"content":"        Task task1 \u003d new Task(\"Sample Task 1\");","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"pangyyen"},"content":"        Task task2 \u003d new Task(\"Sample Task 2\");","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"pangyyen"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"pangyyen"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"pangyyen"},"content":"        assertEquals(\"[ ] Sample Task 1\", taskList.getTaskDetails(0));","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"pangyyen"},"content":"        assertEquals(\"[ ] Sample Task 2\", taskList.getTaskDetails(1));","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"pangyyen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"pangyyen"},"content":"    void addTaskTest() throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"pangyyen"},"content":"        Task task \u003d new Task(\"Sample Task\");","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"pangyyen"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"pangyyen"},"content":"        assertEquals(1, taskList.getTaskCount());","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"pangyyen"},"content":"        assertSame(taskList.getTask(0), task);","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"pangyyen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"pangyyen"},"content":"    void deleteTaskTest() throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"pangyyen"},"content":"        Task task \u003d new Task(\"Sample Task\");","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"pangyyen"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"pangyyen"},"content":"        assertEquals(1, taskList.getTaskCount());","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"pangyyen"},"content":"        taskList.deleteTask(0);","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"pangyyen"},"content":"        assertThrows(DukeException.class, () -\u003e taskList.getTask(0));","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"pangyyen"},"content":"        assertEquals(0, taskList.getTaskCount());","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"pangyyen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"pangyyen"},"content":"    void markTaskAsDoneTest() {","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"pangyyen"},"content":"        Task task \u003d new Task(\"Sample Task\");","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"pangyyen"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"pangyyen"},"content":"        assertFalse(task.isDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"pangyyen"},"content":"        taskList.markTaskAsDone(0);","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"pangyyen"},"content":"        assertTrue(task.isDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"pangyyen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"pangyyen"},"content":"    void markTaskAsNotDoneTest() {","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"pangyyen"},"content":"        Task task \u003d new Task(\"Sample Task\", true);","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"pangyyen"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"pangyyen"},"content":"        assertTrue(task.isDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"pangyyen"},"content":"        taskList.markTaskAsNotDone(0);","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"pangyyen"},"content":"        assertFalse(task.isDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"pangyyen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"pangyyen"},"content":"    public void testIsEmpty() {","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"pangyyen"},"content":"        assertTrue(taskList.isEmpty());","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"pangyyen"},"content":"        Task task \u003d new Task(\"Sample Task\");","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"pangyyen"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"pangyyen"},"content":"        assertFalse(taskList.isEmpty());","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"pangyyen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"pangyyen"},"content":"    void toStringTest() {","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"pangyyen"},"content":"        assertEquals(\"Horray!! No tasks in the task list!\", taskList.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"pangyyen"},"content":"        Task task1 \u003d new Task(\"Sample Task 1\");","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"pangyyen"},"content":"        Task task2 \u003d new Task(\"Sample Task 2\");","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"pangyyen"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"pangyyen"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"pangyyen"},"content":"        String expected \u003d \"Here are the tasks in your list:\\n1. [ ] Sample Task 1\\n2. [ ] Sample Task 2\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"pangyyen"},"content":"        assertEquals(expected, taskList.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"pangyyen":96}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"class TaskTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"    void getStatusIconTest() {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"        Task task1 \u003d new Task(\"Sample Task\");","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"        assertFalse(task1.isDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"        assertEquals(\" \", task1.getStatusIcon());","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"pangyyen"},"content":"        Task task2 \u003d new Task(\"Completed Task\", true);","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"pangyyen"},"content":"        assertTrue(task2.isDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"pangyyen"},"content":"        assertEquals(\"X\", task2.getStatusIcon());","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"pangyyen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"pangyyen"},"content":"    void getDescriptionTest() {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"pangyyen"},"content":"        Task task1 \u003d new Task(\"Sample Task\");","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"pangyyen"},"content":"        assertEquals(\"Sample Task\", task1.getDescription());","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"pangyyen"},"content":"        Task task2 \u003d new Task(\"Another Task\");","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"pangyyen"},"content":"        assertEquals(\"Another Task\", task2.getDescription());","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"pangyyen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"pangyyen"},"content":"    void markAsDoneTest() {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"pangyyen"},"content":"        Task task \u003d new Task(\"Sample Task\");","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"pangyyen"},"content":"        assertFalse(task.isDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"pangyyen"},"content":"        task.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"pangyyen"},"content":"        assertTrue(task.isDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"pangyyen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"pangyyen"},"content":"    void markAsNotDoneTest() {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"pangyyen"},"content":"        Task task \u003d new Task(\"Sample Task\", true);","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"pangyyen"},"content":"        assertTrue(task.isDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"pangyyen"},"content":"        task.markAsNotDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"pangyyen"},"content":"        assertFalse(task.isDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"pangyyen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"pangyyen"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"pangyyen"},"content":"        Task task \u003d new Task(\"Sample Task\");","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"pangyyen"},"content":"        assertEquals(\"[ ] Sample Task\", task.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"pangyyen"},"content":"        task.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"pangyyen"},"content":"        assertEquals(\"[X] Sample Task\", task.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"pangyyen":57}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"class TodoTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"    void toStringTest() {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"        Todo todo \u003d new Todo(\"Sample Todo\");","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"        assertEquals(\"[T][ ] Sample Todo\", todo.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"        todo.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"        assertEquals(\"[T][X] Sample Todo\", todo.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"pangyyen":17}},{"path":"src/test/java/duke/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"package duke.ui; //same package as the class being tested","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"public class UiTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"    public void dummyTest() {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"    public void anotherDummyTest() {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"pangyyen":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"todo borrow book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"event student life fair /from Mon /to Sun","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"unmark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"todo eat dinner","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"delete 4","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"delete 5","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"delete","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"todo","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"deadline","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"blah","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"deadline go fairprice","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"pangyyen"},"content":"deadlien go fairprice /by","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"pangyyen"},"content":"deadline go fairprice /by","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"pangyyen"},"content":"event go fairprice","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"pangyyen"},"content":"event go fairprice /to /ftrom","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"pangyyen"},"content":"event go fairprice /to sun /from mon","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"pangyyen"},"content":"event go fair price /from sun","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"pangyyen"},"content":"event go fair price /to sun","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"pangyyen"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"pangyyen"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"pangyyen":25}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"pangyyen"},"content":"java -classpath ..\\bin duke.main.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"pangyyen":1,"-":20}}]
