[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"# duke.main.Duke project template","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"3. After that, locate the `src/main/java/duke.main.Duke.java` file, right-click it, and choose `Run duke.main.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"pangyyen":2,"-":22}},{"path":"src/main/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"D | 1 | return book | 2023-01-01","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"E | 0 | supernova | 2023-12-01 | 2023-01-10","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"D | 0 | return | 2023-10-01","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"pangyyen":3}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"package duke.commands;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"public class Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"    private final String commandType;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"    private String description;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"    private int taskIndex;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"    private LocalDate deadlineDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"    private LocalDate eventFromDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"    private LocalDate eventToDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"    public Command(String commandType) {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"pangyyen"},"content":"    public Command(String commandType, String description) {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"pangyyen"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"pangyyen"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"pangyyen"},"content":"    public Command(String commandType, int taskIndex) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"pangyyen"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"pangyyen"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"pangyyen"},"content":"    public Command(String commandType, String description, LocalDate deadlineDate) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"pangyyen"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"pangyyen"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"pangyyen"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"pangyyen"},"content":"    public Command(String commandType, String description, LocalDate eventFromDate, LocalDate eventToDate) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"pangyyen"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"pangyyen"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"pangyyen"},"content":"        this.eventFromDate \u003d eventFromDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"pangyyen"},"content":"        this.eventToDate \u003d eventToDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"pangyyen"},"content":"    public int getTaskIndex() {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"pangyyen"},"content":"        return this.taskIndex;","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"pangyyen"},"content":"    public String getCommandType() {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"pangyyen"},"content":"        return this.commandType;","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"pangyyen"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"pangyyen"},"content":"        return this.description;","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"pangyyen"},"content":"    public LocalDate getDeadlineDate() {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"pangyyen"},"content":"        return this.deadlineDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"pangyyen"},"content":"    public LocalDate getEventFromDate() {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"pangyyen"},"content":"        return this.eventFromDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"pangyyen"},"content":"    public LocalDate getEventToDate() {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"pangyyen"},"content":"        return this.eventToDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"pangyyen":62}},{"path":"src/main/java/duke/commands/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"package duke.commands;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"import duke.exception.DeadlineException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"import duke.exception.EventException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"pangyyen"},"content":"    private static final DateTimeFormatter dataFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"pangyyen"},"content":"    public static Command parse(String userInput) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"pangyyen"},"content":"        String commandType \u003d getCommandType(userInput);","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"pangyyen"},"content":"        switch (commandType) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"pangyyen"},"content":"        case \"bye\":","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"pangyyen"},"content":"        case \"list\":","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"pangyyen"},"content":"            return new Command(commandType);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"pangyyen"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"pangyyen"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"pangyyen"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"pangyyen"},"content":"            return new Command(commandType, getTaskIndex(userInput)); // taskIndex is -1 if invalid","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"pangyyen"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"pangyyen"},"content":"            return new Command(commandType, getDescription(userInput));","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"pangyyen"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"pangyyen"},"content":"            return new Command(commandType, getDescription(userInput), getDeadlineDate(userInput));","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"pangyyen"},"content":"        case \"event\":","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"pangyyen"},"content":"            LocalDate[] eventDates \u003d getEventDates(userInput);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"pangyyen"},"content":"            LocalDate eventFromDate \u003d eventDates[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"pangyyen"},"content":"            LocalDate eventToDate \u003d eventDates[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"pangyyen"},"content":"            return new Command(commandType, getDescription(userInput), eventFromDate, eventToDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"pangyyen"},"content":"        default:","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"pangyyen"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"pangyyen"},"content":"     * Parses the data string from the storage file and returns the corresponding task.","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"pangyyen"},"content":"     * example of data string:","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"pangyyen"},"content":"     * T | 1 | read book","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"pangyyen"},"content":"     * D | 0 | return book | June 6th","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"pangyyen"},"content":"     * E | 0 | project meeting | Aug 6th 2-4pm","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"pangyyen"},"content":"     * file corruption not handled","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"pangyyen"},"content":"     * @return The completion status of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"pangyyen"},"content":"    public static Task parseFileString(String taskData) {","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"pangyyen"},"content":"        String[] parts \u003d taskData.split(\" \\\\| \");","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"pangyyen"},"content":"        String type \u003d parts[0].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"pangyyen"},"content":"        String isDone \u003d parts[1].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"pangyyen"},"content":"        String description \u003d parts[2].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"pangyyen"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"pangyyen"},"content":"        switch (type) {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"pangyyen"},"content":"        case \"T\":","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"pangyyen"},"content":"            task \u003d new Todo(description);","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"pangyyen"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"pangyyen"},"content":"        case \"D\":","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"pangyyen"},"content":"            String by \u003d parts[3].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"pangyyen"},"content":"            task \u003d new Deadline(description, by);","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"pangyyen"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"pangyyen"},"content":"        case \"E\":","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"pangyyen"},"content":"            String from \u003d parts[3].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"pangyyen"},"content":"            String to \u003d parts[4].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"pangyyen"},"content":"            task \u003d new Event(description, from, to);","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"pangyyen"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"pangyyen"},"content":"        if (isDone.equals(\"1\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"pangyyen"},"content":"            assert task !\u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"pangyyen"},"content":"            task.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"pangyyen"},"content":"        return task;","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"pangyyen"},"content":"     * reads the task and returns the corresponding data string to be written to the storage file.","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"pangyyen"},"content":"     * @param task The task to be read.","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"pangyyen"},"content":"     * @return String to be written to the storage file.","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"pangyyen"},"content":"    public static String readTaskToFile(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"pangyyen"},"content":"        StringBuilder data \u003d new StringBuilder();","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"pangyyen"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"pangyyen"},"content":"            data.append(\"T\");","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"pangyyen"},"content":"            data.append(\" | \").append(task.isDone() ? \"1\" : \"0\");","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"pangyyen"},"content":"            data.append(\" | \").append(task.getDescription());","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"pangyyen"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"pangyyen"},"content":"            data.append(\"D\");","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"pangyyen"},"content":"            data.append(\" | \").append(task.isDone() ? \"1\" : \"0\");","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"pangyyen"},"content":"            data.append(\" | \").append(task.getDescription());","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"pangyyen"},"content":"            data.append(\" | \").append(((Deadline) task).getBy());","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"pangyyen"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"pangyyen"},"content":"            data.append(\"E\");","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"pangyyen"},"content":"            data.append(\" | \").append(task.isDone() ? \"1\" : \"0\");","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"pangyyen"},"content":"            data.append(\" | \").append(task.getDescription());","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"pangyyen"},"content":"            data.append(\" | \").append(((Event) task).getFrom()).append(\" | \").append(((Event) task).getTo());","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"pangyyen"},"content":"        return data.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"pangyyen"},"content":"    private static String getCommandType(String userInput) {","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"pangyyen"},"content":"        String[] parts \u003d userInput.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"pangyyen"},"content":"        return parts.length \u003e 0 ? parts[0] : \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"pangyyen"},"content":"    public static String getDescription(String userInput) {","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"pangyyen"},"content":"        String[] parts \u003d userInput.split(\" \");","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"pangyyen"},"content":"        return parts.length \u003e 1 ? parts[1] : \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"pangyyen"},"content":"    public static int getTaskIndex(String userInput) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"pangyyen"},"content":"        String[] parts \u003d userInput.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"pangyyen"},"content":"        if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"pangyyen"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"pangyyen"},"content":"                return Integer.parseInt(parts[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"pangyyen"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"pangyyen"},"content":"                throw new DukeException(\"Error, please enter a number.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"pangyyen"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"pangyyen"},"content":"        return -1;","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"pangyyen"},"content":"    private static LocalDate getDeadlineDate(String userInput) throws DeadlineException {","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"pangyyen"},"content":"        String[] parts \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"pangyyen"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"pangyyen"},"content":"            throw new DeadlineException(\"detail: Description or deadline date is empty\");","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"pangyyen"},"content":"        String description \u003d parts[1];","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"pangyyen"},"content":"        // Check if /by exists in the description","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"pangyyen"},"content":"        if (!description.contains(\"/by\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"pangyyen"},"content":"            throw new DeadlineException(\"detail: Description does not contain /by\");","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"pangyyen"},"content":"        String[] desArray \u003d description.split(\"/by\", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"pangyyen"},"content":"        String taskDescription \u003d desArray[0].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"pangyyen"},"content":"        String deadlineDate \u003d desArray[1].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"pangyyen"},"content":"        if (taskDescription.isEmpty() || deadlineDate.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"pangyyen"},"content":"            throw new DeadlineException(\"detail: Description or deadline date is empty\");","lastModifiedDate":"2023-09-01"},{"lineNumber":158,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"pangyyen"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"pangyyen"},"content":"            // Validate date format and return LocalDate object","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"pangyyen"},"content":"            return LocalDate.parse(deadlineDate, dataFormatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":163,"author":{"gitId":"pangyyen"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"pangyyen"},"content":"            throw new DeadlineException(\"detail: Invalid date format. Please use yyyy-MM-dd\");","lastModifiedDate":"2023-09-01"},{"lineNumber":165,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"pangyyen"},"content":"    private static LocalDate[] getEventDates(String userInput) throws EventException {","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"pangyyen"},"content":"        String[] parts \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"pangyyen"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":171,"author":{"gitId":"pangyyen"},"content":"            throw new EventException(\"details: Description or event dates are empty\");","lastModifiedDate":"2023-09-01"},{"lineNumber":172,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":173,"author":{"gitId":"pangyyen"},"content":"        String description \u003d parts[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"pangyyen"},"content":"        // Check if both /from and /to exist in the description","lastModifiedDate":"2023-09-01"},{"lineNumber":176,"author":{"gitId":"pangyyen"},"content":"        if (!description.contains(\"/from\") || !description.contains(\"/to\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"pangyyen"},"content":"            throw new EventException(\"details: Description does not contain /from or /to\");","lastModifiedDate":"2023-09-01"},{"lineNumber":178,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"pangyyen"},"content":"        String[] desArray \u003d description.split(\"/from\", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":181,"author":{"gitId":"pangyyen"},"content":"        String taskDescription \u003d desArray[0].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":182,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":183,"author":{"gitId":"pangyyen"},"content":"        // Split the timing description further using /to","lastModifiedDate":"2023-09-01"},{"lineNumber":184,"author":{"gitId":"pangyyen"},"content":"        String[] timingArr \u003d desArray[1].split(\"/to\", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":185,"author":{"gitId":"pangyyen"},"content":"        String eventFrom \u003d timingArr[0].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":186,"author":{"gitId":"pangyyen"},"content":"        String eventTo \u003d timingArr[1].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":187,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":188,"author":{"gitId":"pangyyen"},"content":"        if (taskDescription.isEmpty() || eventFrom.isEmpty() || eventTo.isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":189,"author":{"gitId":"pangyyen"},"content":"            throw new EventException(\"details: Description or event dates are empty\");","lastModifiedDate":"2023-09-01"},{"lineNumber":190,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":191,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":192,"author":{"gitId":"pangyyen"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":193,"author":{"gitId":"pangyyen"},"content":"            LocalDate eventFromDate \u003d LocalDate.parse(eventFrom, dataFormatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":194,"author":{"gitId":"pangyyen"},"content":"            LocalDate eventToDate \u003d LocalDate.parse(eventTo, dataFormatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":195,"author":{"gitId":"pangyyen"},"content":"            return new LocalDate[]{eventFromDate, eventToDate};","lastModifiedDate":"2023-09-01"},{"lineNumber":196,"author":{"gitId":"pangyyen"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":197,"author":{"gitId":"pangyyen"},"content":"            throw new EventException(\"details: Invalid date format. Please use yyyy-MM-dd\");","lastModifiedDate":"2023-09-01"},{"lineNumber":198,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":199,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":200,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"pangyyen":200}},{"path":"src/main/java/duke/exception/DeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"public class DeadlineException extends DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"    public DeadlineException() {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"        super(\"The format for adding a deadline is incorrect. Please use: \u0027deadline [description] /by [yyyy-MM-dd]\u0027\");","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"    public DeadlineException(String s) {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"        super(\"The format for adding a deadline is incorrect. Please use: \u0027deadline [description] /by [yyyy-MM-dd]\u0027\"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"                + \"\\n\" + s);","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"pangyyen":12}},{"path":"src/main/java/duke/exception/DeleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"public class DeleteException extends DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"    public DeleteException() {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"        super(\"The format for deleting a task is incorrect. Please use: \u0027delete [index of task]\u0027\");","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"    public DeleteException(String message) {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"        super(\"The format for deleting a task is incorrect. Please use: \u0027delete [index of task]\u0027\"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"                + \"\\n\" + message);","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"pangyyen":14}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"pangyyen":7}},{"path":"src/main/java/duke/exception/EventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"public class EventException extends DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"    public EventException() {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"        super(\"The format for adding an event is incorrect. Please use: \u0027event [description] /from [yyyy-MM-dd] /to [yyyy-MM-dd]\u0027\");","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"    public EventException(String message) {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"        super(\"The format for adding an event is incorrect. Please use: \u0027event [description] /from [yyyy-MM-dd] /to [yyyy-MM-dd]\u0027\"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"                + \"\\n\" + message);","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"pangyyen":14}},{"path":"src/main/java/duke/exception/TodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"public class TodoException extends DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"    public TodoException() {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"        super(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"pangyyen":9}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"package duke.main;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"import duke.task.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"import duke.exception.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"import duke.commands.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":" * The main class that initiates the chatbot application","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"pangyyen"},"content":"    private final String FILE_PATH \u003d \"./src/main/data/duke.txt\";","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"pangyyen"},"content":"    private final Storage storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"pangyyen"},"content":"     * Initializes the Chatbot with an empty task list","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"pangyyen"},"content":"    public Duke() {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"pangyyen"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"pangyyen"},"content":"     * Marks a task as done and provides user feedback","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"pangyyen"},"content":"     * @param taskIndex Index of the task to be marked as done, starts from \u00271\u0027","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"pangyyen"},"content":"    public void markTaskByBot(int taskIndex) throws DeleteException {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"pangyyen"},"content":"        if (!taskList.isValidListIndex(taskIndex - 1)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"pangyyen"},"content":"            throw new DeleteException(\"Invalid Index of task!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"pangyyen"},"content":"        taskList.markTaskAsDone(taskIndex - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"pangyyen"},"content":"        saveTasksToFile(this.taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"pangyyen"},"content":"        Ui.showMessage(taskList.getTaskDetails(taskIndex - 1));","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"pangyyen"},"content":"     * Marks a task as not done and provides user feedback","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"pangyyen"},"content":"     * @param taskIndex Index of the task to be marked as not done, starts from \u00271\u0027","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"pangyyen"},"content":"    public void unmarkTaskByBot(int taskIndex) throws DeleteException {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"pangyyen"},"content":"        if (!taskList.isValidListIndex(taskIndex - 1)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"pangyyen"},"content":"            throw new DeleteException(\"detail: Invalid Index of task!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"pangyyen"},"content":"        taskList.markTaskAsNotDone(taskIndex - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"pangyyen"},"content":"        saveTasksToFile(this.taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"pangyyen"},"content":"        Ui.showMessage(\" OK, I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"pangyyen"},"content":"                taskList.getTaskDetails(taskIndex - 1));","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"pangyyen"},"content":"     * Deletes a task from the task list based on the provided input.","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"pangyyen"},"content":"     * @param taskIndex The index of the task to be deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"pangyyen"},"content":"     * @throws DeleteException If the input string is not numeric or if the task index is out of valid range.","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"pangyyen"},"content":"    public void deleteTaskByBot(int taskIndex) throws DeleteException {","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"pangyyen"},"content":"        if (taskIndex \u003c 1 || taskIndex \u003e taskList.getTaskCount()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"pangyyen"},"content":"            throw new DeleteException(\"Invalid Index of task!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"pangyyen"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"pangyyen"},"content":"            Ui.showMessage(\" Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"pangyyen"},"content":"                    this.taskList.getTaskDetails(taskIndex - 1) +","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"pangyyen"},"content":"                    \"\\n Now you have \" + (taskList.getTaskCount() - 1) + \" tasks in the list.\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"pangyyen"},"content":"            taskList.deleteTask(taskIndex - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"pangyyen"},"content":"    public void addTodo(String description) throws TodoException {","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"pangyyen"},"content":"        Task newTask;","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"pangyyen"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"pangyyen"},"content":"            throw new TodoException();","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"pangyyen"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"pangyyen"},"content":"            newTask \u003d new Todo(description);","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"pangyyen"},"content":"            taskList.addTask(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"pangyyen"},"content":"            Ui.showMessage(","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"pangyyen"},"content":"                    \" Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"pangyyen"},"content":"                            newTask +","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"pangyyen"},"content":"                            \"\\n Now you have \" + taskList.getTaskCount() + \" tasks in the list.\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"pangyyen"},"content":"    public void addDeadline(String description, LocalDate deadlineDate) throws DeadlineException {","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"pangyyen"},"content":"        if (description.isEmpty() || deadlineDate \u003d\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"pangyyen"},"content":"            System.out.println(\"Error in addDeadline\");","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"pangyyen"},"content":"            throw new DeadlineException();","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"pangyyen"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"pangyyen"},"content":"            Task newTask \u003d new Deadline(description, deadlineDate);","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"pangyyen"},"content":"            taskList.addTask(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"pangyyen"},"content":"            Ui.showMessage(","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"pangyyen"},"content":"                    \" Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"pangyyen"},"content":"                            newTask +","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"pangyyen"},"content":"                            \"\\n Now you have \" + taskList.getTaskCount() + \" tasks in the list.\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"pangyyen"},"content":"    public void addEvent(String description, LocalDate eventFromDate, LocalDate eventToDate) throws EventException {","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"pangyyen"},"content":"        if (description.isEmpty() || eventFromDate \u003d\u003d null || eventToDate \u003d\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"pangyyen"},"content":"            throw new EventException();","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"pangyyen"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"pangyyen"},"content":"            Task newTask \u003d new Event(description, eventFromDate, eventToDate);","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"pangyyen"},"content":"            taskList.addTask(newTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"pangyyen"},"content":"            Ui.showMessage(","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"pangyyen"},"content":"                    \" Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"pangyyen"},"content":"                            newTask +","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"pangyyen"},"content":"                            \"\\n Now you have \" + taskList.getTaskCount() + \" tasks in the list.\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"pangyyen"},"content":"    private void loadTasksFromFile() {","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"pangyyen"},"content":"        for (Task taskData : storage.loadTasks()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"pangyyen"},"content":"            this.taskList.addTask(taskData);","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"pangyyen"},"content":"        if (!this.taskList.isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"pangyyen"},"content":"            System.out.println(this.taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"pangyyen"},"content":"     * Saves the tasks to the storage file","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"pangyyen"},"content":"    private void saveTasksToFile(TaskList taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"pangyyen"},"content":"        this.storage.saveTasks(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"pangyyen"},"content":"    public boolean handleCommand(Command command) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"pangyyen"},"content":"        String commandType \u003d command.getCommandType();","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"pangyyen"},"content":"        String description \u003d command.getDescription();","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"pangyyen"},"content":"        int taskIndex \u003d command.getTaskIndex();","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"pangyyen"},"content":"        LocalDate deadlineDate \u003d command.getDeadlineDate();","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"pangyyen"},"content":"        LocalDate eventFromDate \u003d command.getEventFromDate();","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"pangyyen"},"content":"        LocalDate eventToDate \u003d command.getEventToDate();","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"pangyyen"},"content":"        switch (commandType) {","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"pangyyen"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"pangyyen"},"content":"            this.markTaskByBot(taskIndex);","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"pangyyen"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"pangyyen"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"pangyyen"},"content":"            this.unmarkTaskByBot(taskIndex);","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"pangyyen"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"pangyyen"},"content":"        case \"bye\":","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"pangyyen"},"content":"            return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"pangyyen"},"content":"        case \"list\":","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"pangyyen"},"content":"            Ui.showMessage(this.taskList.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"pangyyen"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"pangyyen"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"pangyyen"},"content":"            this.addTodo(description);","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"pangyyen"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"pangyyen"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"pangyyen"},"content":"            this.addDeadline(description, deadlineDate);","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"pangyyen"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"pangyyen"},"content":"        case \"event\":","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"pangyyen"},"content":"            this.addEvent(description, eventFromDate, eventToDate);","lastModifiedDate":"2023-09-01"},{"lineNumber":162,"author":{"gitId":"pangyyen"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"pangyyen"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"pangyyen"},"content":"            this.deleteTaskByBot(taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"pangyyen"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"pangyyen"},"content":"        default:","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"pangyyen"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-30"},{"lineNumber":168,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":169,"author":{"gitId":"pangyyen"},"content":"        return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":170,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":171,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":172,"author":{"gitId":"pangyyen"},"content":"    public void start() {","lastModifiedDate":"2023-08-31"},{"lineNumber":173,"author":{"gitId":"pangyyen"},"content":"        Ui.showWelcomeMessage();","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"pangyyen"},"content":"        String userInput;","lastModifiedDate":"2023-09-01"},{"lineNumber":175,"author":{"gitId":"pangyyen"},"content":"        Command parsedCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":176,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":177,"author":{"gitId":"pangyyen"},"content":"        this.loadTasksFromFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":178,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":179,"author":{"gitId":"pangyyen"},"content":"        boolean isContinuing \u003d true;","lastModifiedDate":"2023-08-30"},{"lineNumber":180,"author":{"gitId":"pangyyen"},"content":"        while (isContinuing) {","lastModifiedDate":"2023-08-30"},{"lineNumber":181,"author":{"gitId":"pangyyen"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":182,"author":{"gitId":"pangyyen"},"content":"                userInput \u003d Ui.getUserInput();","lastModifiedDate":"2023-08-31"},{"lineNumber":183,"author":{"gitId":"pangyyen"},"content":"                parsedCommand \u003d Parser.parse(userInput);","lastModifiedDate":"2023-08-31"},{"lineNumber":184,"author":{"gitId":"pangyyen"},"content":"                isContinuing \u003d handleCommand(parsedCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":185,"author":{"gitId":"pangyyen"},"content":"                this.saveTasksToFile(this.taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":186,"author":{"gitId":"pangyyen"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":187,"author":{"gitId":"pangyyen"},"content":"               Ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":188,"author":{"gitId":"pangyyen"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":189,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":190,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":191,"author":{"gitId":"pangyyen"},"content":"        Ui.showGoodByeMessage();","lastModifiedDate":"2023-08-31"},{"lineNumber":192,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":193,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":195,"author":{"gitId":"pangyyen"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2023-08-30"},{"lineNumber":196,"author":{"gitId":"pangyyen"},"content":"        duke.start();","lastModifiedDate":"2023-08-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"pangyyen":194,"-":4}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"package duke.storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"import duke.commands.Parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"import java.io.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"    private final String filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"pangyyen"},"content":"    public ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"pangyyen"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"pangyyen"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"pangyyen"},"content":"        try (Scanner scanner \u003d new Scanner(new File(filePath))) {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"pangyyen"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"pangyyen"},"content":"                task \u003d Parser.parseFileString(scanner.nextLine());","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"pangyyen"},"content":"                tasks.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"pangyyen"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"pangyyen"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"pangyyen"},"content":"            Ui.showMessage(\"Data file not found, starting with an empty task list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"pangyyen"},"content":"        return tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"pangyyen"},"content":"    public void saveTasks(TaskList tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"pangyyen"},"content":"        try (PrintWriter writer \u003d new PrintWriter(new FileWriter(filePath))) {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"pangyyen"},"content":"            for (int i \u003d 0; i \u003c tasks.getTaskCount(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"pangyyen"},"content":"                writer.println(Parser.readTaskToFile(tasks.getTask(i)));","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"pangyyen"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"pangyyen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"pangyyen"},"content":"            Ui.showErrorMessage(\"Error saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"pangyyen":43}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"        super(description);","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"pangyyen"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"pangyyen"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"pangyyen"},"content":"        return this.by;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"pangyyen"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"pangyyen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"pangyyen"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"pangyyen"},"content":"                + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"pangyyen":29}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"    protected LocalDate from;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"    protected LocalDate to;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"        this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"        this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"pangyyen"},"content":"        super(description);","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"pangyyen"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"pangyyen"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"pangyyen"},"content":"    public LocalDate getFrom() {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"pangyyen"},"content":"        return this.from;","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"pangyyen"},"content":"    public LocalDate getTo() {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"pangyyen"},"content":"        return this.to;","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"pangyyen"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"pangyyen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"pangyyen"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\",","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"pangyyen"},"content":"                super.toString(),","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"pangyyen"},"content":"                from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")),","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"pangyyen"},"content":"                to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"pangyyen":37}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":" * Represents a generic task with a description and completion status","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"pangyyen"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"pangyyen"},"content":"     * Gets the status icon representing the completion status of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"pangyyen"},"content":"     * @return \"X\" if the task is done, \" \" (space) if not done.","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"pangyyen"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"pangyyen"},"content":"        return (this.isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"pangyyen"},"content":"     * Gets the description of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"pangyyen"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"pangyyen"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"pangyyen"},"content":"        return (this.description);","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"pangyyen"},"content":"     * Marks the task as done by setting the completion status to true.","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"pangyyen"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"pangyyen"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"pangyyen"},"content":"     * Marks the task as not done by setting the completion status to false.","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"pangyyen"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"pangyyen"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"pangyyen"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"pangyyen"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"pangyyen"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"pangyyen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"pangyyen"},"content":"        return String.format(\"[\" + this.getStatusIcon() + \"] \" + this.getDescription());","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"pangyyen":60}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":" * Represents a list of tasks and provides methods to manipulate them","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"public class TaskList {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"    private int taskCount;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"     * Initializes a dynamic empty task list with a maximum capacity.","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"pangyyen"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"pangyyen"},"content":"        tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"pangyyen"},"content":"        taskCount \u003d 0;","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"pangyyen"},"content":"     * Checks if the given task index is valid within the task list.","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"pangyyen"},"content":"     * @param taskListIndex The index of the task to be checked.","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"pangyyen"},"content":"     * @return True if the task index is valid, otherwise false.","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"pangyyen"},"content":"    public boolean isValidListIndex(int taskListIndex) {","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"pangyyen"},"content":"        return (taskListIndex \u003e\u003d 0 \u0026\u0026 taskListIndex \u003c taskCount);","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"pangyyen"},"content":"     * Retrieves details of a specific task within the task list.","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"pangyyen"},"content":"     * @param taskListIndex The index of the task in the task list.","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"pangyyen"},"content":"     * @return Details of the task as a formatted string, or null if the index is invalid.","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"pangyyen"},"content":"    public String getTaskDetails(int taskListIndex) {","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"pangyyen"},"content":"        if (isValidListIndex(taskListIndex)) {","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"pangyyen"},"content":"            Task task \u003d tasks.get(taskListIndex);","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"pangyyen"},"content":"            return task.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"pangyyen"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"pangyyen"},"content":"            System.out.println(\"Invalid Index of task!\");","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"pangyyen"},"content":"            return null;","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"pangyyen"},"content":"     * Retrieves a specific task within the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"pangyyen"},"content":"     * @param taskListIndex The index of the task in the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"pangyyen"},"content":"     * @return The task, or null if the index is invalid.","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"pangyyen"},"content":"    public Task getTask(int taskListIndex) {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"pangyyen"},"content":"        if (isValidListIndex(taskListIndex)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"pangyyen"},"content":"            return tasks.get(taskListIndex);","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"pangyyen"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"pangyyen"},"content":"            System.out.println(\"Invalid Index of task!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"pangyyen"},"content":"            return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"pangyyen"},"content":"     * Gets the current count of tasks in the task list.","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"pangyyen"},"content":"     * @return The count of tasks in the task list.","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"pangyyen"},"content":"    public int getTaskCount() {","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"pangyyen"},"content":"        return this.taskCount;","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"pangyyen"},"content":"     * Adds a task to the task list if space is available.","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"pangyyen"},"content":"     * @param task The task to be added to the task list.","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"pangyyen"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"pangyyen"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"pangyyen"},"content":"        this.taskCount++;","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"pangyyen"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"pangyyen"},"content":"     * @param taskListIndex The index of the task to be deleted.","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"pangyyen"},"content":"    public void deleteTask(int taskListIndex) {","lastModifiedDate":"2023-08-23"},{"lineNumber":89,"author":{"gitId":"pangyyen"},"content":"        this.tasks.remove(taskListIndex);","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"pangyyen"},"content":"        this.taskCount--;","lastModifiedDate":"2023-08-23"},{"lineNumber":91,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":92,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":93,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":94,"author":{"gitId":"pangyyen"},"content":"     * Marks a task in the task list as done.","lastModifiedDate":"2023-08-23"},{"lineNumber":95,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":96,"author":{"gitId":"pangyyen"},"content":"     * @param taskListIndex The index of the task to be marked as done.","lastModifiedDate":"2023-08-23"},{"lineNumber":97,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":98,"author":{"gitId":"pangyyen"},"content":"    public void markTaskAsDone(int taskListIndex) {","lastModifiedDate":"2023-08-23"},{"lineNumber":99,"author":{"gitId":"pangyyen"},"content":"        if (isValidListIndex(taskListIndex)) {","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"pangyyen"},"content":"            this.tasks.get(taskListIndex).markAsDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":101,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":102,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":103,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":104,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":105,"author":{"gitId":"pangyyen"},"content":"     * Marks a task in the task list as not done.","lastModifiedDate":"2023-08-23"},{"lineNumber":106,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":107,"author":{"gitId":"pangyyen"},"content":"     * @param taskListIndex The index of the task to be marked as not done.","lastModifiedDate":"2023-08-23"},{"lineNumber":108,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":109,"author":{"gitId":"pangyyen"},"content":"    public void markTaskAsNotDone(int taskListIndex) {","lastModifiedDate":"2023-08-23"},{"lineNumber":110,"author":{"gitId":"pangyyen"},"content":"        if (isValidListIndex(taskListIndex)) {","lastModifiedDate":"2023-08-23"},{"lineNumber":111,"author":{"gitId":"pangyyen"},"content":"            this.tasks.get(taskListIndex).markAsNotDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":112,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":113,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":114,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":115,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":116,"author":{"gitId":"pangyyen"},"content":"     * Displays the tasks in the task list with their details.","lastModifiedDate":"2023-08-23"},{"lineNumber":117,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":118,"author":{"gitId":"pangyyen"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"pangyyen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"pangyyen"},"content":"        if (taskCount \u003d\u003d 0) {","lastModifiedDate":"2023-08-23"},{"lineNumber":121,"author":{"gitId":"pangyyen"},"content":"            return \"Horray!! No tasks in the task list!\";","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"pangyyen"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":123,"author":{"gitId":"pangyyen"},"content":"            StringBuilder taskListString \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"pangyyen"},"content":"            for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2023-08-23"},{"lineNumber":125,"author":{"gitId":"pangyyen"},"content":"                taskListString.append((i + 1)).append(\". \").append(this.getTaskDetails(i)).append(\"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"pangyyen"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":127,"author":{"gitId":"pangyyen"},"content":"            return taskListString.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":129,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":130,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"pangyyen"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"pangyyen"},"content":"        return (taskCount \u003d\u003d 0);","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"pangyyen":134}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"pangyyen":14}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"package duke.ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"    private static final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"    public static void showWelcomeMessage() {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"        System.out.println(\" Hello! I\u0027m duke.main.Duke\\n What can I do for you?\");","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"    public static void showGoodByeMessage() {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"pangyyen"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"pangyyen"},"content":"    public static void showMessage(String message) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"pangyyen"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"pangyyen"},"content":"        System.out.println(message);","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"pangyyen"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"pangyyen"},"content":"    public static void showErrorMessage(String error) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"pangyyen"},"content":"        showMessage(\"☹ OOPS!!! \" + error);","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"pangyyen"},"content":"    public static String getUserInput() {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"pangyyen"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"pangyyen":33}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"todo borrow book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"event student life fair /from Mon /to Sun","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"unmark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"todo eat dinner","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"delete 4","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"delete 5","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"delete","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"todo","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"deadline","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"blah","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"deadline go fairprice","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"pangyyen"},"content":"deadlien go fairprice /by","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"pangyyen"},"content":"deadline go fairprice /by","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"pangyyen"},"content":"event go fairprice","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"pangyyen"},"content":"event go fairprice /to /ftrom","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"pangyyen"},"content":"event go fairprice /to sun /from mon","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"pangyyen"},"content":"event go fair price /from sun","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"pangyyen"},"content":"event go fair price /to sun","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"pangyyen"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"pangyyen"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"pangyyen":25}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"pangyyen"},"content":"java -classpath ..\\bin duke.main.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"pangyyen":1,"-":20}}]
