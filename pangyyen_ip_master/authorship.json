[{"path":"src/main/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"T | 0 | borrow","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"T | 0 | bororw","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"D | 0 | nothing | 2023-08-31","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"pangyyen":3}},{"path":"src/main/java/ChatBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"import java.io.*;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":" * Represents the chatbot that interacts with the user and manage task","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"public class ChatBot {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"    private final TaskList taskList ;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"    private final String FILE_PATH \u003d \"./src/main/data/duke.txt\";","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"     * Initializes the Chatbot with an empty task list","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"pangyyen"},"content":"    public ChatBot() {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"pangyyen"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"pangyyen"},"content":"     * Check if input str is a number","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"pangyyen"},"content":"     * @param str input string","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"pangyyen"},"content":"     * @return true if str is a number, false otherwise","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"pangyyen"},"content":"    public static boolean isNumeric(String str) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"pangyyen"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"pangyyen"},"content":"            Integer.parseInt(str);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"pangyyen"},"content":"            return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"pangyyen"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"pangyyen"},"content":"            return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"pangyyen"},"content":"     * Marks a task as done and provides user feedback","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"pangyyen"},"content":"     * @param taskIndex Index of the task to be marked as done, starts from \u00271\u0027","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"pangyyen"},"content":"    public void markTaskByBot(int taskIndex) {","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"pangyyen"},"content":"        taskList.markTaskAsDone(taskIndex - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"pangyyen"},"content":"        saveTasksToFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"pangyyen"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"pangyyen"},"content":"                \" Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"pangyyen"},"content":"                taskList.getTaskDetails(taskIndex - 1) +","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"pangyyen"},"content":"                \"\\n____________________________________________________________\");","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"pangyyen"},"content":"     * Marks a task as not done and provides user feedback","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"pangyyen"},"content":"     * @param taskIndex Index of the task to be marked as not done, starts from \u00271\u0027","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"pangyyen"},"content":"    public void unmarkTaskByBot(int taskIndex) {","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"pangyyen"},"content":"        taskList.markTaskAsNotDone(taskIndex - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"pangyyen"},"content":"        saveTasksToFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"pangyyen"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"pangyyen"},"content":"                \" OK, I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"pangyyen"},"content":"                taskList.getTaskDetails(taskIndex - 1) +","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"pangyyen"},"content":"                \"\\n____________________________________________________________\");","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"pangyyen"},"content":"     * Deletes a task from the task list based on the provided input.","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"pangyyen"},"content":"     * @param inputStr The input string containing the index of the task to be deleted.","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"pangyyen"},"content":"     * @throws DeleteException If the input string is not numeric or if the task index is out of valid range.","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"pangyyen"},"content":"    public void deleteTaskByBot(String inputStr) throws DeleteException {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"pangyyen"},"content":"        if (!isNumeric(inputStr)) {","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"pangyyen"},"content":"            throw new DeleteException();","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"pangyyen"},"content":"        int taskIndex \u003d Integer.parseInt(inputStr);","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"pangyyen"},"content":"        if (taskIndex \u003c 1 || taskIndex \u003e taskList.getTaskCount()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"pangyyen"},"content":"            throw new DeleteException();","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"pangyyen"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"pangyyen"},"content":"            System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"pangyyen"},"content":"                    \" Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"pangyyen"},"content":"                    this.taskList.getTaskDetails(taskIndex - 1).toString() +","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"pangyyen"},"content":"                    \"\\n Now you have \" + (taskList.getTaskCount() - 1 )+ \" tasks in the list.\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"pangyyen"},"content":"                    \"____________________________________________________________\");","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"pangyyen"},"content":"            taskList.deleteTask(taskIndex - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":88,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":89,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":91,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":92,"author":{"gitId":"pangyyen"},"content":"     * Adds a task to the task list based on task type and description","lastModifiedDate":"2023-08-23"},{"lineNumber":93,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":94,"author":{"gitId":"pangyyen"},"content":"     * @param taskType The type of task (todo, deadline, event)","lastModifiedDate":"2023-08-23"},{"lineNumber":95,"author":{"gitId":"pangyyen"},"content":"     * @param description The description of the task","lastModifiedDate":"2023-08-23"},{"lineNumber":96,"author":{"gitId":"pangyyen"},"content":"     * @throws DukeException If there is an error adding the task","lastModifiedDate":"2023-08-23"},{"lineNumber":97,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":98,"author":{"gitId":"pangyyen"},"content":"    public void addTaskByBot(String taskType, String description) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"pangyyen"},"content":"        DateTimeFormatter dataFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"pangyyen"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2023-08-23"},{"lineNumber":101,"author":{"gitId":"pangyyen"},"content":"        String taskDescription;","lastModifiedDate":"2023-08-23"},{"lineNumber":102,"author":{"gitId":"pangyyen"},"content":"        String deadlineTiming;","lastModifiedDate":"2023-08-23"},{"lineNumber":103,"author":{"gitId":"pangyyen"},"content":"        String eventFrom;","lastModifiedDate":"2023-08-23"},{"lineNumber":104,"author":{"gitId":"pangyyen"},"content":"        String eventTo;","lastModifiedDate":"2023-08-23"},{"lineNumber":105,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":106,"author":{"gitId":"pangyyen"},"content":"        // invoke diff task\u0027s constructor","lastModifiedDate":"2023-08-23"},{"lineNumber":107,"author":{"gitId":"pangyyen"},"content":"        switch (taskType) {","lastModifiedDate":"2023-08-23"},{"lineNumber":108,"author":{"gitId":"pangyyen"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-23"},{"lineNumber":109,"author":{"gitId":"pangyyen"},"content":"            newTask \u003d new Todo(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":110,"author":{"gitId":"pangyyen"},"content":"            break;","lastModifiedDate":"2023-08-23"},{"lineNumber":111,"author":{"gitId":"pangyyen"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-23"},{"lineNumber":112,"author":{"gitId":"pangyyen"},"content":"            // make sure /by exist to avoid exception in \"split() array\"","lastModifiedDate":"2023-08-23"},{"lineNumber":113,"author":{"gitId":"pangyyen"},"content":"            if (!description.contains(\"/by\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":114,"author":{"gitId":"pangyyen"},"content":"                throw new DeadlineException();","lastModifiedDate":"2023-08-23"},{"lineNumber":115,"author":{"gitId":"pangyyen"},"content":"            } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":116,"author":{"gitId":"pangyyen"},"content":"                // split the description to task description and timing, with /by in between","lastModifiedDate":"2023-08-23"},{"lineNumber":117,"author":{"gitId":"pangyyen"},"content":"                String[] desArray \u003d description.split(\"/by\", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":118,"author":{"gitId":"pangyyen"},"content":"                taskDescription \u003d desArray[0];","lastModifiedDate":"2023-08-23"},{"lineNumber":119,"author":{"gitId":"pangyyen"},"content":"                deadlineTiming \u003d desArray[1];","lastModifiedDate":"2023-08-23"},{"lineNumber":120,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":121,"author":{"gitId":"pangyyen"},"content":"                if (taskDescription.isEmpty() || deadlineTiming.isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":122,"author":{"gitId":"pangyyen"},"content":"                    throw new DeadlineException();","lastModifiedDate":"2023-08-23"},{"lineNumber":123,"author":{"gitId":"pangyyen"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":124,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"pangyyen"},"content":"                try {","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"pangyyen"},"content":"                    LocalDate.parse(deadlineTiming.trim(), dataFormatter);  // Validate date format","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"pangyyen"},"content":"                    newTask \u003d new Deadline(taskDescription, deadlineTiming.trim());","lastModifiedDate":"2023-08-23"},{"lineNumber":128,"author":{"gitId":"pangyyen"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"pangyyen"},"content":"                    throw new DeadlineException();","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"pangyyen"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"pangyyen"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":132,"author":{"gitId":"pangyyen"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":133,"author":{"gitId":"pangyyen"},"content":"        case \"event\":","lastModifiedDate":"2023-08-23"},{"lineNumber":134,"author":{"gitId":"pangyyen"},"content":"            // make sure /from and /to exist to avoid exception in \"split() array\"","lastModifiedDate":"2023-08-23"},{"lineNumber":135,"author":{"gitId":"pangyyen"},"content":"            if (!description.contains(\"/from\") || !description.contains(\"/to\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":136,"author":{"gitId":"pangyyen"},"content":"                throw new EventException();","lastModifiedDate":"2023-08-23"},{"lineNumber":137,"author":{"gitId":"pangyyen"},"content":"            } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":138,"author":{"gitId":"pangyyen"},"content":"                // split the description to task description and timing, with /from in between","lastModifiedDate":"2023-08-23"},{"lineNumber":139,"author":{"gitId":"pangyyen"},"content":"                String[] desArray \u003d description.split(\"/from\", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":140,"author":{"gitId":"pangyyen"},"content":"                taskDescription \u003d desArray[0];","lastModifiedDate":"2023-08-23"},{"lineNumber":141,"author":{"gitId":"pangyyen"},"content":"                // when from /to comes before /from","lastModifiedDate":"2023-08-23"},{"lineNumber":142,"author":{"gitId":"pangyyen"},"content":"                if (taskDescription.contains(\"/to\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":143,"author":{"gitId":"pangyyen"},"content":"                    throw new EventException();","lastModifiedDate":"2023-08-23"},{"lineNumber":144,"author":{"gitId":"pangyyen"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":145,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":146,"author":{"gitId":"pangyyen"},"content":"                // split the timing description further, with /to in between","lastModifiedDate":"2023-08-23"},{"lineNumber":147,"author":{"gitId":"pangyyen"},"content":"                String[] timingArr \u003d desArray[1].split(\"/to\", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":148,"author":{"gitId":"pangyyen"},"content":"                eventFrom \u003d timingArr[0];","lastModifiedDate":"2023-08-23"},{"lineNumber":149,"author":{"gitId":"pangyyen"},"content":"                eventTo \u003d timingArr[1];","lastModifiedDate":"2023-08-23"},{"lineNumber":150,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":151,"author":{"gitId":"pangyyen"},"content":"                if (eventFrom.isEmpty() || eventTo.isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":152,"author":{"gitId":"pangyyen"},"content":"                    throw new EventException();","lastModifiedDate":"2023-08-23"},{"lineNumber":153,"author":{"gitId":"pangyyen"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":154,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":155,"author":{"gitId":"pangyyen"},"content":"                try {","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"pangyyen"},"content":"                    LocalDate.parse(eventFrom.trim(), dataFormatter);  // Validate date format","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"pangyyen"},"content":"                    LocalDate.parse(eventTo.trim(), dataFormatter);  // Validate date format","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"pangyyen"},"content":"                    newTask \u003d new Event(taskDescription, eventFrom.trim(), eventTo.trim());","lastModifiedDate":"2023-08-23"},{"lineNumber":159,"author":{"gitId":"pangyyen"},"content":"                    break;","lastModifiedDate":"2023-08-23"},{"lineNumber":160,"author":{"gitId":"pangyyen"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"pangyyen"},"content":"                    throw new EventException();","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"pangyyen"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"pangyyen"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":165,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":166,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":167,"author":{"gitId":"pangyyen"},"content":"        // provides feedback for the task created","lastModifiedDate":"2023-08-23"},{"lineNumber":168,"author":{"gitId":"pangyyen"},"content":"        if (newTask !\u003d null) {","lastModifiedDate":"2023-08-23"},{"lineNumber":169,"author":{"gitId":"pangyyen"},"content":"            taskList.addTask(newTask);","lastModifiedDate":"2023-08-23"},{"lineNumber":170,"author":{"gitId":"pangyyen"},"content":"            System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":171,"author":{"gitId":"pangyyen"},"content":"                    \" Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":172,"author":{"gitId":"pangyyen"},"content":"                    newTask.toString() +","lastModifiedDate":"2023-08-23"},{"lineNumber":173,"author":{"gitId":"pangyyen"},"content":"                    \"\\n Now you have \" + taskList.getTaskCount() + \" tasks in the list.\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":174,"author":{"gitId":"pangyyen"},"content":"                    \"____________________________________________________________\");","lastModifiedDate":"2023-08-23"},{"lineNumber":175,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":176,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":177,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":178,"author":{"gitId":"pangyyen"},"content":"    private void loadTasksFromFile() {","lastModifiedDate":"2023-08-30"},{"lineNumber":179,"author":{"gitId":"pangyyen"},"content":"        try (Scanner scanner \u003d new Scanner(new File(FILE_PATH))) {","lastModifiedDate":"2023-08-30"},{"lineNumber":180,"author":{"gitId":"pangyyen"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":181,"author":{"gitId":"pangyyen"},"content":"                String taskData \u003d scanner.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":182,"author":{"gitId":"pangyyen"},"content":"                Task task \u003d Task.parseDataString(taskData);","lastModifiedDate":"2023-08-30"},{"lineNumber":183,"author":{"gitId":"pangyyen"},"content":"                this.taskList.addTask(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":184,"author":{"gitId":"pangyyen"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":185,"author":{"gitId":"pangyyen"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":186,"author":{"gitId":"pangyyen"},"content":"            System.out.println(\"Date file not found, starting with an empty task list.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":187,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":188,"author":{"gitId":"pangyyen"},"content":"        if (!this.taskList.isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":189,"author":{"gitId":"pangyyen"},"content":"            this.taskList.displayTasks();","lastModifiedDate":"2023-08-30"},{"lineNumber":190,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":191,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":192,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":193,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":194,"author":{"gitId":"pangyyen"},"content":"     * Saves the tasks to the storage file","lastModifiedDate":"2023-08-30"},{"lineNumber":195,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":196,"author":{"gitId":"pangyyen"},"content":"    private void saveTasksToFile() {","lastModifiedDate":"2023-08-30"},{"lineNumber":197,"author":{"gitId":"pangyyen"},"content":"        try (PrintWriter writer \u003d new PrintWriter(new FileWriter(FILE_PATH))) {","lastModifiedDate":"2023-08-30"},{"lineNumber":198,"author":{"gitId":"pangyyen"},"content":"            for (int i \u003d 0; i \u003c taskList.getTaskCount(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":199,"author":{"gitId":"pangyyen"},"content":"                Task task \u003d taskList.getTask(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":200,"author":{"gitId":"pangyyen"},"content":"                writer.println(task.readTaskToFile(task)); // Write the task\u0027s data to the file","lastModifiedDate":"2023-08-30"},{"lineNumber":201,"author":{"gitId":"pangyyen"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":202,"author":{"gitId":"pangyyen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":203,"author":{"gitId":"pangyyen"},"content":"            System.out.println(\"Error saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":204,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":205,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":206,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":207,"author":{"gitId":"pangyyen"},"content":"    public boolean handleCommand(String userInput) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":208,"author":{"gitId":"pangyyen"},"content":"        String[] parts \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":209,"author":{"gitId":"pangyyen"},"content":"        String command \u003d parts[0];","lastModifiedDate":"2023-08-23"},{"lineNumber":210,"author":{"gitId":"pangyyen"},"content":"        int taskIndex;","lastModifiedDate":"2023-08-23"},{"lineNumber":211,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":212,"author":{"gitId":"pangyyen"},"content":"        if (command.equals(\"mark\") \u0026\u0026 parts.length \u003e 1) {","lastModifiedDate":"2023-08-23"},{"lineNumber":213,"author":{"gitId":"pangyyen"},"content":"            taskIndex \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-08-23"},{"lineNumber":214,"author":{"gitId":"pangyyen"},"content":"            this.markTaskByBot(taskIndex);","lastModifiedDate":"2023-08-23"},{"lineNumber":215,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":216,"author":{"gitId":"pangyyen"},"content":"        } else if (command.equals(\"unmark\") \u0026\u0026 parts.length \u003e 1) {","lastModifiedDate":"2023-08-23"},{"lineNumber":217,"author":{"gitId":"pangyyen"},"content":"            taskIndex \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-08-23"},{"lineNumber":218,"author":{"gitId":"pangyyen"},"content":"            this.unmarkTaskByBot(taskIndex);","lastModifiedDate":"2023-08-23"},{"lineNumber":219,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":220,"author":{"gitId":"pangyyen"},"content":"        } else if (userInput.equals(\"bye\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":221,"author":{"gitId":"pangyyen"},"content":"            return false;  // Exit the loop when user types \"bye\"","lastModifiedDate":"2023-08-30"},{"lineNumber":222,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":223,"author":{"gitId":"pangyyen"},"content":"        } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":224,"author":{"gitId":"pangyyen"},"content":"            taskList.displayTasks();","lastModifiedDate":"2023-08-23"},{"lineNumber":225,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":226,"author":{"gitId":"pangyyen"},"content":"        } else if (command.equals(\"todo\") \u0026\u0026 parts.length \u003e 1) {","lastModifiedDate":"2023-08-23"},{"lineNumber":227,"author":{"gitId":"pangyyen"},"content":"            addTaskByBot(\"todo\", parts[1]);","lastModifiedDate":"2023-08-23"},{"lineNumber":228,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":229,"author":{"gitId":"pangyyen"},"content":"        } else if (command.equals(\"deadline\") \u0026\u0026 parts.length \u003e 1) {","lastModifiedDate":"2023-08-23"},{"lineNumber":230,"author":{"gitId":"pangyyen"},"content":"            addTaskByBot(\"deadline\", parts[1]);","lastModifiedDate":"2023-08-23"},{"lineNumber":231,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":232,"author":{"gitId":"pangyyen"},"content":"        } else if (command.equals(\"event\") \u0026\u0026 parts.length \u003e 1) {","lastModifiedDate":"2023-08-23"},{"lineNumber":233,"author":{"gitId":"pangyyen"},"content":"            addTaskByBot(\"event\", parts[1]);","lastModifiedDate":"2023-08-23"},{"lineNumber":234,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":235,"author":{"gitId":"pangyyen"},"content":"        } else if (command.equals(\"delete\") \u0026\u0026 parts.length \u003e 1) {","lastModifiedDate":"2023-08-23"},{"lineNumber":236,"author":{"gitId":"pangyyen"},"content":"            deleteTaskByBot(parts[1]);","lastModifiedDate":"2023-08-23"},{"lineNumber":237,"author":{"gitId":"pangyyen"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":238,"author":{"gitId":"pangyyen"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-23"},{"lineNumber":239,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":240,"author":{"gitId":"pangyyen"},"content":"        return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":241,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":242,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":243,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":244,"author":{"gitId":"pangyyen"},"content":"     * Start the chatbot interaction loop, end when \"bye\" is given","lastModifiedDate":"2023-08-30"},{"lineNumber":245,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":246,"author":{"gitId":"pangyyen"},"content":"    public void start() {","lastModifiedDate":"2023-08-30"},{"lineNumber":247,"author":{"gitId":"pangyyen"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-30"},{"lineNumber":248,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":249,"author":{"gitId":"pangyyen"},"content":"        String helloMessage \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":250,"author":{"gitId":"pangyyen"},"content":"                \" Hello! I\u0027m Najib\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":251,"author":{"gitId":"pangyyen"},"content":"                \" What can I do for you?\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":252,"author":{"gitId":"pangyyen"},"content":"                \"____________________________________________________________\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":253,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":254,"author":{"gitId":"pangyyen"},"content":"        String byeMessage \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":255,"author":{"gitId":"pangyyen"},"content":"                \" Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":256,"author":{"gitId":"pangyyen"},"content":"                \"____________________________________________________________\";","lastModifiedDate":"2023-08-30"},{"lineNumber":257,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":258,"author":{"gitId":"pangyyen"},"content":"        System.out.println(helloMessage);","lastModifiedDate":"2023-08-30"},{"lineNumber":259,"author":{"gitId":"pangyyen"},"content":"        String userInput;","lastModifiedDate":"2023-08-30"},{"lineNumber":260,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":261,"author":{"gitId":"pangyyen"},"content":"        loadTasksFromFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":262,"author":{"gitId":"pangyyen"},"content":"        boolean isContinuing \u003d true;","lastModifiedDate":"2023-08-30"},{"lineNumber":263,"author":{"gitId":"pangyyen"},"content":"        while (isContinuing) {","lastModifiedDate":"2023-08-30"},{"lineNumber":264,"author":{"gitId":"pangyyen"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":265,"author":{"gitId":"pangyyen"},"content":"                userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":266,"author":{"gitId":"pangyyen"},"content":"                isContinuing \u003d handleCommand(userInput);","lastModifiedDate":"2023-08-30"},{"lineNumber":267,"author":{"gitId":"pangyyen"},"content":"                saveTasksToFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":268,"author":{"gitId":"pangyyen"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":269,"author":{"gitId":"pangyyen"},"content":"                System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":270,"author":{"gitId":"pangyyen"},"content":"                        \" ☹ OOPS!!! \" + e.getMessage() + \"\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":271,"author":{"gitId":"pangyyen"},"content":"                        \"____________________________________________________________\");","lastModifiedDate":"2023-08-23"},{"lineNumber":272,"author":{"gitId":"pangyyen"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":273,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":274,"author":{"gitId":"pangyyen"},"content":"        System.out.println(byeMessage);","lastModifiedDate":"2023-08-30"},{"lineNumber":275,"author":{"gitId":"pangyyen"},"content":"        scanner.close();","lastModifiedDate":"2023-08-23"},{"lineNumber":276,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":277,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"pangyyen":277}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"        return this.by;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"pangyyen"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"pangyyen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"pangyyen"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"pangyyen"},"content":"                + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"pangyyen":22}},{"path":"src/main/java/DeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"public class DeadlineException extends DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"    public DeadlineException() {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"        super(\"The format for adding a deadline is incorrect. Please use: \u0027deadline [description] /by [yyyy-MM-dd]\u0027\");","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"pangyyen":5}},{"path":"src/main/java/DeleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"public class DeleteException extends DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"    public DeleteException() {","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"        super(\"The format for deleting a task is incorrect. Please use: \u0027delete [index of task]\u0027\");","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"pangyyen":5}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":" * The main class that initiates the chatbot application","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"        ChatBot chatBot \u003d new ChatBot();","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"        chatBot.start();","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"pangyyen":5,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"pangyyen":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"    protected LocalDate from;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"    protected LocalDate to;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"        this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"        this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"    public String getFrom() {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"        return this.from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"pangyyen"},"content":"    public String getTo() {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"pangyyen"},"content":"        return this.to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"pangyyen"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"pangyyen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"pangyyen"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\",","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"pangyyen"},"content":"                super.toString(),","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"pangyyen"},"content":"                from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")),","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"pangyyen"},"content":"                to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"pangyyen":29}},{"path":"src/main/java/EventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"public class EventException extends DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"    public EventException() {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"        super(\"The format for adding an event is incorrect. Please use: \u0027event [description] /from [yyyy-MM-dd] /to [yyyy-MM-dd]\u0027\");","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"pangyyen":5}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":" * Represents a generic task with a description and completion status","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"pangyyen"},"content":"     * Gets the status icon representing the completion status of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"pangyyen"},"content":"     * @return \"X\" if the task is done, \" \" (space) if not done.","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"pangyyen"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"pangyyen"},"content":"        return (this.isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"pangyyen"},"content":"     * Gets the description of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"pangyyen"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"pangyyen"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"pangyyen"},"content":"        return (this.description);","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"pangyyen"},"content":"     * Marks the task as done by setting the completion status to true.","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"pangyyen"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"pangyyen"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"pangyyen"},"content":"     * Marks the task as not done by setting the completion status to false.","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"pangyyen"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"pangyyen"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"pangyyen"},"content":"     * Parses the data string from the storage file and returns the corresponding task.","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"pangyyen"},"content":"     * example of data string:","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"pangyyen"},"content":"     * T | 1 | read book","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"pangyyen"},"content":"     * D | 0 | return book | June 6th","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"pangyyen"},"content":"     * E | 0 | project meeting | Aug 6th 2-4pm","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"pangyyen"},"content":"     * file corruption not handled","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"pangyyen"},"content":"     * @return The completion status of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"pangyyen"},"content":"    public static Task parseDataString(String taskData) {","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"pangyyen"},"content":"        String[] parts \u003d taskData.split(\" \\\\| \");","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"pangyyen"},"content":"        String type \u003d parts[0].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"pangyyen"},"content":"        String isDone \u003d parts[1].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"pangyyen"},"content":"        String description \u003d parts[2].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"pangyyen"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"pangyyen"},"content":"        switch (type) {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"pangyyen"},"content":"        case \"T\":","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"pangyyen"},"content":"            task \u003d new Todo(description);","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"pangyyen"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"pangyyen"},"content":"        case \"D\":","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"pangyyen"},"content":"            String by \u003d parts[3].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"pangyyen"},"content":"            task \u003d new Deadline(description, by);","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"pangyyen"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"pangyyen"},"content":"        case \"E\":","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"pangyyen"},"content":"            String from \u003d parts[3].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"pangyyen"},"content":"            String to \u003d parts[4].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"pangyyen"},"content":"            task \u003d new Event(description, from, to);","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"pangyyen"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"pangyyen"},"content":"        if (isDone.equals(\"1\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"pangyyen"},"content":"            assert task !\u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"pangyyen"},"content":"            task.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"pangyyen"},"content":"        return task;","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"pangyyen"},"content":"     * reads the task and returns the corresponding data string to be written to the storage file.","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"pangyyen"},"content":"     * @param task The task to be read.","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"pangyyen"},"content":"     * @return String to be written to the storage file.","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"pangyyen"},"content":"    public String readTaskToFile(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"pangyyen"},"content":"        StringBuilder data \u003d new StringBuilder();","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"pangyyen"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"pangyyen"},"content":"            data.append(\"T\");","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"pangyyen"},"content":"            data.append(\" | \").append(task.isDone() ? \"1\" : \"0\");","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"pangyyen"},"content":"            data.append(\" | \").append(task.getDescription());","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"pangyyen"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"pangyyen"},"content":"            data.append(\"D\");","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"pangyyen"},"content":"            data.append(\" | \").append(task.isDone() ? \"1\" : \"0\");","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"pangyyen"},"content":"            data.append(\" | \").append(task.getDescription());","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"pangyyen"},"content":"            data.append(\" | \").append(((Deadline) task).getBy());","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"pangyyen"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"pangyyen"},"content":"            data.append(\"E\");","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"pangyyen"},"content":"            data.append(\" | \").append(task.isDone() ? \"1\" : \"0\");","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"pangyyen"},"content":"            data.append(\" | \").append(task.getDescription());","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"pangyyen"},"content":"            data.append(\" | \").append(((Event) task).getFrom()).append(\" | \").append(((Event) task).getTo());","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"pangyyen"},"content":"        return data.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"pangyyen"},"content":"    private boolean isDone() {","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"pangyyen"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"pangyyen"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":124,"author":{"gitId":"pangyyen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":125,"author":{"gitId":"pangyyen"},"content":"        return String.format(\"[\" + this.getStatusIcon() + \"] \" + this.getDescription());","lastModifiedDate":"2023-08-23"},{"lineNumber":126,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":127,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"pangyyen":127}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":" * Represents a list of tasks and provides methods to manipulate them","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"public class TaskList {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"    private int taskCount;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"     * Initializes a dynamic empty task list with a maximum capacity.","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"pangyyen"},"content":"        tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"pangyyen"},"content":"        taskCount \u003d 0;","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"pangyyen"},"content":"     * Checks if the given task index is valid within the task list.","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"pangyyen"},"content":"     * @param taskListIndex The index of the task to be checked.","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"pangyyen"},"content":"     * @return True if the task index is valid, otherwise false.","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"pangyyen"},"content":"    public boolean isValidListIndex(int taskListIndex) {","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"pangyyen"},"content":"        return (taskListIndex \u003e\u003d 0 \u0026\u0026 taskListIndex \u003c taskCount);","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"pangyyen"},"content":"     * Retrieves details of a specific task within the task list.","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"pangyyen"},"content":"     * @param taskListIndex The index of the task in the task list.","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"pangyyen"},"content":"     * @return Details of the task as a formatted string, or null if the index is invalid.","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"pangyyen"},"content":"    public String getTaskDetails(int taskListIndex) {","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"pangyyen"},"content":"        if (isValidListIndex(taskListIndex)) {","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"pangyyen"},"content":"            Task task \u003d tasks.get(taskListIndex);","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"pangyyen"},"content":"            return task.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"pangyyen"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"pangyyen"},"content":"            System.out.println(\"Invalid Index of task!\");","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"pangyyen"},"content":"            return null;","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"pangyyen"},"content":"     * Retrieves a specific task within the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"pangyyen"},"content":"     * @param taskListIndex The index of the task in the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"pangyyen"},"content":"     * @return The task, or null if the index is invalid.","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"pangyyen"},"content":"    public Task getTask(int taskListIndex) {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"pangyyen"},"content":"        if (isValidListIndex(taskListIndex)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"pangyyen"},"content":"            return tasks.get(taskListIndex);","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"pangyyen"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"pangyyen"},"content":"            System.out.println(\"Invalid Index of task!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"pangyyen"},"content":"            return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"pangyyen"},"content":"     * Gets the current count of tasks in the task list.","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"pangyyen"},"content":"     * @return The count of tasks in the task list.","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"pangyyen"},"content":"    public int getTaskCount() {","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"pangyyen"},"content":"        return this.taskCount;","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"pangyyen"},"content":"     * Adds a task to the task list if space is available.","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"pangyyen"},"content":"     * @param task The task to be added to the task list.","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"pangyyen"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"pangyyen"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"pangyyen"},"content":"        this.taskCount++;","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"pangyyen"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"pangyyen"},"content":"     * @param taskListIndex The index of the task to be deleted.","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"pangyyen"},"content":"    public void deleteTask(int taskListIndex) {","lastModifiedDate":"2023-08-23"},{"lineNumber":88,"author":{"gitId":"pangyyen"},"content":"        this.tasks.remove(taskListIndex);","lastModifiedDate":"2023-08-23"},{"lineNumber":89,"author":{"gitId":"pangyyen"},"content":"        this.taskCount--;","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":91,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":92,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":93,"author":{"gitId":"pangyyen"},"content":"     * Marks a task in the task list as done.","lastModifiedDate":"2023-08-23"},{"lineNumber":94,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":95,"author":{"gitId":"pangyyen"},"content":"     * @param taskListIndex The index of the task to be marked as done.","lastModifiedDate":"2023-08-23"},{"lineNumber":96,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":97,"author":{"gitId":"pangyyen"},"content":"    public void markTaskAsDone(int taskListIndex) {","lastModifiedDate":"2023-08-23"},{"lineNumber":98,"author":{"gitId":"pangyyen"},"content":"        if (isValidListIndex(taskListIndex)) {","lastModifiedDate":"2023-08-23"},{"lineNumber":99,"author":{"gitId":"pangyyen"},"content":"            this.tasks.get(taskListIndex).markAsDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":101,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":102,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":103,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":104,"author":{"gitId":"pangyyen"},"content":"     * Marks a task in the task list as not done.","lastModifiedDate":"2023-08-23"},{"lineNumber":105,"author":{"gitId":"pangyyen"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":106,"author":{"gitId":"pangyyen"},"content":"     * @param taskListIndex The index of the task to be marked as not done.","lastModifiedDate":"2023-08-23"},{"lineNumber":107,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":108,"author":{"gitId":"pangyyen"},"content":"    public void markTaskAsNotDone(int taskListIndex) {","lastModifiedDate":"2023-08-23"},{"lineNumber":109,"author":{"gitId":"pangyyen"},"content":"        if (isValidListIndex(taskListIndex)) {","lastModifiedDate":"2023-08-23"},{"lineNumber":110,"author":{"gitId":"pangyyen"},"content":"            this.tasks.get(taskListIndex).markAsNotDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":111,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":112,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":113,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":114,"author":{"gitId":"pangyyen"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":115,"author":{"gitId":"pangyyen"},"content":"     * Displays the tasks in the task list with their details.","lastModifiedDate":"2023-08-23"},{"lineNumber":116,"author":{"gitId":"pangyyen"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":117,"author":{"gitId":"pangyyen"},"content":"    public void displayTasks() {","lastModifiedDate":"2023-08-23"},{"lineNumber":118,"author":{"gitId":"pangyyen"},"content":"        if (taskCount \u003d\u003d 0) {","lastModifiedDate":"2023-08-23"},{"lineNumber":119,"author":{"gitId":"pangyyen"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-23"},{"lineNumber":120,"author":{"gitId":"pangyyen"},"content":"            System.out.println(\"Horray!! No tasks in the task list!\");","lastModifiedDate":"2023-08-23"},{"lineNumber":121,"author":{"gitId":"pangyyen"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-23"},{"lineNumber":122,"author":{"gitId":"pangyyen"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":123,"author":{"gitId":"pangyyen"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-23"},{"lineNumber":124,"author":{"gitId":"pangyyen"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":125,"author":{"gitId":"pangyyen"},"content":"            for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2023-08-23"},{"lineNumber":126,"author":{"gitId":"pangyyen"},"content":"                System.out.println((i + 1) + \". \" + this.getTaskDetails(i));","lastModifiedDate":"2023-08-23"},{"lineNumber":127,"author":{"gitId":"pangyyen"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":128,"author":{"gitId":"pangyyen"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-23"},{"lineNumber":129,"author":{"gitId":"pangyyen"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":130,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":131,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"pangyyen"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"pangyyen"},"content":"        return (taskCount \u003d\u003d 0);","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"pangyyen":135}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"}","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"pangyyen":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pangyyen"},"content":"todo borrow book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"pangyyen"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"pangyyen"},"content":"event student life fair /from Mon /to Sun","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"pangyyen"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"pangyyen"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"pangyyen"},"content":"unmark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"pangyyen"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"pangyyen"},"content":"todo eat dinner","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"pangyyen"},"content":"delete 4","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"pangyyen"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"pangyyen"},"content":"delete 5","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"pangyyen"},"content":"delete","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"pangyyen"},"content":"todo","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"pangyyen"},"content":"deadline","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"pangyyen"},"content":"blah","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"pangyyen"},"content":"deadline go fairprice","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"pangyyen"},"content":"deadlien go fairprice /by","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"pangyyen"},"content":"deadline go fairprice /by","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"pangyyen"},"content":"event go fairprice","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"pangyyen"},"content":"event go fairprice /to /ftrom","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"pangyyen"},"content":"event go fairprice /to sun /from mon","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"pangyyen"},"content":"event go fair price /from sun","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"pangyyen"},"content":"event go fair price /to sun","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"pangyyen"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"pangyyen"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"pangyyen":25}}]
