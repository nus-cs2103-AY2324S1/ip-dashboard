[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"# Horo project template","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"This is a project template for a greenfield Java project. It\u0027s named after a character in Spice and Wolf _Horo_. Given below are instructions on how to use it.","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"1. After that, locate the `src/main/java/Horo.java` file, right-click it, and choose `Run Horo.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"    _    _","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"   | |  | |","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"   | |__| | ___  _ __ ___","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"   |  __  |/ _ \\| \u0027__/ _ \\","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":"   | |  | | (_) | | | (_) |","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"   |_|  |_|\\___/|_|  \\___/","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"cxo05":9,"-":16}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"public enum Command {","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"  BYE(\"^bye\",","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"      \"bye\"),","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"  LIST(\"^list\",","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"      \"list\"),","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"  MARK(\"^mark ([0-9]+)\",","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"      \"mark \u003cnumber\u003e\"),","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"  UNMARK(\"^unmark ([0-9]+)\",","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"      \"unmark \u003cnumber\u003e\"),","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"  DELETE(\"^delete ([0-9]+)\",","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"      \"delete \u003cnumber\u003e\"),","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"  TODO(\"^todo ([\\\\w ]+)\",","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"      \"todo \u003cdescription\u003e\"),","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"  DEADLINE(\"^deadline ([\\\\w ]+) \\\\/by ([\\\\w ]+)\",","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"      \"deadline \u003cdescription\u003e /by \u003ctime\u003e\"),","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"  EVENT(\"^event ([\\\\w ]+) \\\\/from ([\\\\w ]+) \\\\/to ([\\\\w ]+)\",","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"      \"event \u003cdescription\u003e /from \u003ctime\u003e /to \u003ctime\u003e\");","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"  private final Pattern pattern;","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":"  private final String format;","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"  private static final Pattern commandPattern \u003d Pattern","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"      .compile(\"^(deadline|todo|event|bye|mark|unmark|list|delete)\");","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"cxo05"},"content":"  Command(String regex, String format) {","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":"    this.pattern \u003d Pattern.compile(regex);","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"    this.format \u003d format;","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"  }","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"cxo05"},"content":"  public static Command commandParser(String input) throws HoroException {","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"cxo05"},"content":"    Matcher m \u003d commandPattern.matcher(input);","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"cxo05"},"content":"    if (!m.find()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"cxo05"},"content":"      throw new HoroException(\"Invalid Command\");","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"cxo05"},"content":"    String s \u003d m.group(1);","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"cxo05"},"content":"    Command c \u003d Command.valueOf(s.toUpperCase());","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"cxo05"},"content":"    return c;","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"cxo05"},"content":"  }","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"cxo05"},"content":"  public Matcher getMatcher(String input) throws HoroException {","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"cxo05"},"content":"    Matcher m \u003d pattern.matcher(input);","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"cxo05"},"content":"    if (!m.find()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"cxo05"},"content":"      throw new HoroException(\"Wrong command format\\n\" + format);","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"cxo05"},"content":"    return m;","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"cxo05"},"content":"  }","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"cxo05":54}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"  private String deadline;","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"  public Deadline(String taskString, String deadline) throws HoroException {","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"    super(taskString);","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"    if (deadline \u003d\u003d null || deadline.isBlank()) {","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"      throw new HoroException(\"Deadline cannot be empty\");","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"    this.deadline \u003d deadline;","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"  }","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"  @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"  public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"    return \"[D]\" + super.toString() + \" (by: \" + this.deadline + \")\";","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"  }","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"cxo05":17}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"  private String start;","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"  private String end;","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"  public Event(String taskString, String start, String end) throws HoroException {","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"    super(taskString);","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"    if (start \u003d\u003d null || start.isBlank()) {","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"      throw new HoroException(\"Start time cannot be empty\");","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"    if (end \u003d\u003d null || end.isBlank()) {","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"      throw new HoroException(\"End time cannot be empty\");","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"    this.start \u003d start;","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"    this.end \u003d end;","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"  }","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"  @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"  public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"    return \"[E]\" + super.toString() + \" (from: \" + this.start + \" to: \" + this.end + \")\";","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"  }","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"cxo05":21}},{"path":"src/main/java/Horo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"public class Horo {","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"  private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"  private static Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"  public static void main(String[] args) {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"    welcomeMessage();","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"    while (true) {","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"      System.out.print(\"\u003e\");","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"      String input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"      Matcher m;","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"      Command command;","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"      try {","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"        command \u003d Command.commandParser(input);","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"        m \u003d command.getMatcher(input);","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"      } catch (HoroException e) {","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"        continue;","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":"      }","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"      switch (command) {","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"        case BYE:","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"          exit();","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"cxo05"},"content":"          break;","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":"        case LIST:","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"          System.out.println(\"-----Tasks-----\");","lastModifiedDate":"2023-08-19"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"          for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-19"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":"            System.out.println((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2023-08-19"},{"lineNumber":33,"author":{"gitId":"cxo05"},"content":"          }","lastModifiedDate":"2023-08-19"},{"lineNumber":34,"author":{"gitId":"cxo05"},"content":"          break;","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"cxo05"},"content":"        case MARK:","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"cxo05"},"content":"        case UNMARK:","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"cxo05"},"content":"          if (tasks.isEmpty()) {","lastModifiedDate":"2023-08-19"},{"lineNumber":38,"author":{"gitId":"cxo05"},"content":"            System.out.println(\"No tasks available\");","lastModifiedDate":"2023-08-19"},{"lineNumber":39,"author":{"gitId":"cxo05"},"content":"            break;","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"cxo05"},"content":"          }","lastModifiedDate":"2023-08-19"},{"lineNumber":41,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"cxo05"},"content":"          Task selectedTask \u003d null;","lastModifiedDate":"2023-08-19"},{"lineNumber":43,"author":{"gitId":"cxo05"},"content":"          try {","lastModifiedDate":"2023-08-19"},{"lineNumber":44,"author":{"gitId":"cxo05"},"content":"            selectedTask \u003d tasks.get(Integer.parseInt(m.group(1)) - 1);","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"cxo05"},"content":"          } catch (Exception e) {","lastModifiedDate":"2023-08-19"},{"lineNumber":46,"author":{"gitId":"cxo05"},"content":"            System.out.println(\"Please enter a valid number from 1 - \" + tasks.size());","lastModifiedDate":"2023-08-19"},{"lineNumber":47,"author":{"gitId":"cxo05"},"content":"            break;","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"cxo05"},"content":"          }","lastModifiedDate":"2023-08-19"},{"lineNumber":49,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":50,"author":{"gitId":"cxo05"},"content":"          if (command.equals(Command.MARK)) {","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"cxo05"},"content":"            selectedTask.markDone();","lastModifiedDate":"2023-08-19"},{"lineNumber":52,"author":{"gitId":"cxo05"},"content":"            System.out.println(\"Task marked as done\");","lastModifiedDate":"2023-08-19"},{"lineNumber":53,"author":{"gitId":"cxo05"},"content":"          } else {","lastModifiedDate":"2023-08-19"},{"lineNumber":54,"author":{"gitId":"cxo05"},"content":"            selectedTask.markNotDone();","lastModifiedDate":"2023-08-19"},{"lineNumber":55,"author":{"gitId":"cxo05"},"content":"            System.out.println(\"Task marked as not done\");","lastModifiedDate":"2023-08-19"},{"lineNumber":56,"author":{"gitId":"cxo05"},"content":"          }","lastModifiedDate":"2023-08-19"},{"lineNumber":57,"author":{"gitId":"cxo05"},"content":"          System.out.println(selectedTask);","lastModifiedDate":"2023-08-19"},{"lineNumber":58,"author":{"gitId":"cxo05"},"content":"          break;","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"cxo05"},"content":"        case DELETE:","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"cxo05"},"content":"          if (tasks.isEmpty()) {","lastModifiedDate":"2023-08-19"},{"lineNumber":61,"author":{"gitId":"cxo05"},"content":"            System.out.println(\"No tasks available\");","lastModifiedDate":"2023-08-19"},{"lineNumber":62,"author":{"gitId":"cxo05"},"content":"            break;","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"cxo05"},"content":"          }","lastModifiedDate":"2023-08-19"},{"lineNumber":64,"author":{"gitId":"cxo05"},"content":"          try {","lastModifiedDate":"2023-08-19"},{"lineNumber":65,"author":{"gitId":"cxo05"},"content":"            Task removedTask \u003d tasks.remove(Integer.parseInt(m.group(1)) - 1);","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"cxo05"},"content":"            System.out.println(\"Removed task: \");","lastModifiedDate":"2023-08-19"},{"lineNumber":67,"author":{"gitId":"cxo05"},"content":"            System.out.println(removedTask);","lastModifiedDate":"2023-08-19"},{"lineNumber":68,"author":{"gitId":"cxo05"},"content":"          } catch (Exception e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"cxo05"},"content":"            System.out.println(\"Please enter a valid number from 1 - \" + tasks.size());","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"cxo05"},"content":"            break;","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"cxo05"},"content":"          }","lastModifiedDate":"2023-08-19"},{"lineNumber":72,"author":{"gitId":"cxo05"},"content":"          break;","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"cxo05"},"content":"        case TODO:","lastModifiedDate":"2023-08-22"},{"lineNumber":74,"author":{"gitId":"cxo05"},"content":"          try {","lastModifiedDate":"2023-08-19"},{"lineNumber":75,"author":{"gitId":"cxo05"},"content":"            addTask(new Todo(m.group(1)));","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"cxo05"},"content":"          } catch (HoroException e) {","lastModifiedDate":"2023-08-19"},{"lineNumber":77,"author":{"gitId":"cxo05"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-19"},{"lineNumber":78,"author":{"gitId":"cxo05"},"content":"            break;","lastModifiedDate":"2023-08-22"},{"lineNumber":79,"author":{"gitId":"cxo05"},"content":"          }","lastModifiedDate":"2023-08-19"},{"lineNumber":80,"author":{"gitId":"cxo05"},"content":"          break;","lastModifiedDate":"2023-08-22"},{"lineNumber":81,"author":{"gitId":"cxo05"},"content":"        case DEADLINE:","lastModifiedDate":"2023-08-22"},{"lineNumber":82,"author":{"gitId":"cxo05"},"content":"          try {","lastModifiedDate":"2023-08-19"},{"lineNumber":83,"author":{"gitId":"cxo05"},"content":"            addTask(new Deadline(m.group(1), m.group(2)));","lastModifiedDate":"2023-08-22"},{"lineNumber":84,"author":{"gitId":"cxo05"},"content":"          } catch (HoroException e) {","lastModifiedDate":"2023-08-19"},{"lineNumber":85,"author":{"gitId":"cxo05"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-19"},{"lineNumber":86,"author":{"gitId":"cxo05"},"content":"            break;","lastModifiedDate":"2023-08-22"},{"lineNumber":87,"author":{"gitId":"cxo05"},"content":"          }","lastModifiedDate":"2023-08-19"},{"lineNumber":88,"author":{"gitId":"cxo05"},"content":"          break;","lastModifiedDate":"2023-08-22"},{"lineNumber":89,"author":{"gitId":"cxo05"},"content":"        case EVENT:","lastModifiedDate":"2023-08-22"},{"lineNumber":90,"author":{"gitId":"cxo05"},"content":"          try {","lastModifiedDate":"2023-08-19"},{"lineNumber":91,"author":{"gitId":"cxo05"},"content":"            addTask(new Event(m.group(1), m.group(2), m.group(3)));","lastModifiedDate":"2023-08-22"},{"lineNumber":92,"author":{"gitId":"cxo05"},"content":"          } catch (HoroException e) {","lastModifiedDate":"2023-08-19"},{"lineNumber":93,"author":{"gitId":"cxo05"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-19"},{"lineNumber":94,"author":{"gitId":"cxo05"},"content":"            break;","lastModifiedDate":"2023-08-22"},{"lineNumber":95,"author":{"gitId":"cxo05"},"content":"          }","lastModifiedDate":"2023-08-19"},{"lineNumber":96,"author":{"gitId":"cxo05"},"content":"          break;","lastModifiedDate":"2023-08-22"},{"lineNumber":97,"author":{"gitId":"cxo05"},"content":"        default:","lastModifiedDate":"2023-08-22"},{"lineNumber":98,"author":{"gitId":"cxo05"},"content":"          break;","lastModifiedDate":"2023-08-22"},{"lineNumber":99,"author":{"gitId":"cxo05"},"content":"      }","lastModifiedDate":"2023-08-19"},{"lineNumber":100,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":101,"author":{"gitId":"cxo05"},"content":"  }","lastModifiedDate":"2023-08-19"},{"lineNumber":102,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":103,"author":{"gitId":"cxo05"},"content":"  private static void welcomeMessage() {","lastModifiedDate":"2023-08-22"},{"lineNumber":104,"author":{"gitId":"cxo05"},"content":"    String logo \u003d \" _    _ \\n\"","lastModifiedDate":"2023-08-22"},{"lineNumber":105,"author":{"gitId":"cxo05"},"content":"        + \"| |  | |\\n\"","lastModifiedDate":"2023-08-22"},{"lineNumber":106,"author":{"gitId":"cxo05"},"content":"        + \"| |__| | ___  _ __ ___\\n\"","lastModifiedDate":"2023-08-22"},{"lineNumber":107,"author":{"gitId":"cxo05"},"content":"        + \"|  __  |/ _ \\\\| \u0027__/ _ \\\\\\n\"","lastModifiedDate":"2023-08-22"},{"lineNumber":108,"author":{"gitId":"cxo05"},"content":"        + \"| |  | | (_) | | | (_) |\\n\"","lastModifiedDate":"2023-08-22"},{"lineNumber":109,"author":{"gitId":"cxo05"},"content":"        + \"|_|  |_|\\\\___/|_|  \\\\___/\\n\";","lastModifiedDate":"2023-08-22"},{"lineNumber":110,"author":{"gitId":"cxo05"},"content":"    System.out.println(logo);","lastModifiedDate":"2023-08-22"},{"lineNumber":111,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":112,"author":{"gitId":"cxo05"},"content":"    String introduction \u003d \"Hello! I\u0027m Horo\\n\"","lastModifiedDate":"2023-08-22"},{"lineNumber":113,"author":{"gitId":"cxo05"},"content":"        + \"What can I do for you?\\n\"","lastModifiedDate":"2023-08-22"},{"lineNumber":114,"author":{"gitId":"cxo05"},"content":"        + \"Usage: \\n\"","lastModifiedDate":"2023-08-22"},{"lineNumber":115,"author":{"gitId":"cxo05"},"content":"        + \" todo \u003cdescription\u003e\\n\"","lastModifiedDate":"2023-08-22"},{"lineNumber":116,"author":{"gitId":"cxo05"},"content":"        + \" deadline \u003cdescription\u003e /by \u003ctime\u003e\\n\"","lastModifiedDate":"2023-08-22"},{"lineNumber":117,"author":{"gitId":"cxo05"},"content":"        + \" event \u003cdescription\u003e /from \u003ctime\u003e /to \u003ctime\u003e\\n\"","lastModifiedDate":"2023-08-22"},{"lineNumber":118,"author":{"gitId":"cxo05"},"content":"        + \" list\\n\"","lastModifiedDate":"2023-08-22"},{"lineNumber":119,"author":{"gitId":"cxo05"},"content":"        + \" mark \u003cnumber\u003e\\n\"","lastModifiedDate":"2023-08-22"},{"lineNumber":120,"author":{"gitId":"cxo05"},"content":"        + \" unmark \u003cnumber\u003e\\n\"","lastModifiedDate":"2023-08-22"},{"lineNumber":121,"author":{"gitId":"cxo05"},"content":"        + \" delete \u003cnumber\u003e\\n\"","lastModifiedDate":"2023-08-22"},{"lineNumber":122,"author":{"gitId":"cxo05"},"content":"        + \" bye\\n\";","lastModifiedDate":"2023-08-22"},{"lineNumber":123,"author":{"gitId":"cxo05"},"content":"    System.out.println(introduction);","lastModifiedDate":"2023-08-22"},{"lineNumber":124,"author":{"gitId":"cxo05"},"content":"  }","lastModifiedDate":"2023-08-22"},{"lineNumber":125,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":126,"author":{"gitId":"cxo05"},"content":"  private static void exit() {","lastModifiedDate":"2023-08-22"},{"lineNumber":127,"author":{"gitId":"cxo05"},"content":"    System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-22"},{"lineNumber":128,"author":{"gitId":"cxo05"},"content":"    scanner.close();","lastModifiedDate":"2023-08-22"},{"lineNumber":129,"author":{"gitId":"cxo05"},"content":"    System.exit(0);","lastModifiedDate":"2023-08-22"},{"lineNumber":130,"author":{"gitId":"cxo05"},"content":"  }","lastModifiedDate":"2023-08-19"},{"lineNumber":131,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":132,"author":{"gitId":"cxo05"},"content":"  private static void addTask(Task newTask) {","lastModifiedDate":"2023-08-22"},{"lineNumber":133,"author":{"gitId":"cxo05"},"content":"    tasks.add(newTask);","lastModifiedDate":"2023-08-22"},{"lineNumber":134,"author":{"gitId":"cxo05"},"content":"    System.out.println(\"Added: \");","lastModifiedDate":"2023-08-22"},{"lineNumber":135,"author":{"gitId":"cxo05"},"content":"    System.out.println(newTask);","lastModifiedDate":"2023-08-22"},{"lineNumber":136,"author":{"gitId":"cxo05"},"content":"  }","lastModifiedDate":"2023-08-19"},{"lineNumber":137,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"cxo05":137}},{"path":"src/main/java/HoroException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"public class HoroException extends Exception {","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"  public HoroException(String str) {","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"    super(str);","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"  }","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"cxo05":5}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"public class Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"  private String taskString \u003d \"\";","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"  private boolean isDone \u003d false;","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"  public Task(String taskString) throws HoroException {","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"    if (taskString \u003d\u003d null || taskString.isBlank()) {","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"      throw new HoroException(\"Task description cannot be empty\");","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"    this.taskString \u003d taskString;","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"  }","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"  public void markDone() {","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"    this.isDone \u003d true;","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"  }","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"  public void markNotDone() {","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"    this.isDone \u003d false;","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"  }","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"  public String getTaskString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"    return this.taskString;","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":"  }","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"  @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"  public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"    return (isDone ? \"[X] \" : \"[ ] \") + getTaskString();","lastModifiedDate":"2023-08-19"},{"lineNumber":28,"author":{"gitId":"cxo05"},"content":"  }","lastModifiedDate":"2023-08-19"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"cxo05":29}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"  public Todo(String taskString) throws HoroException {","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"    super(taskString);","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"  }","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"  @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"  public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"    return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"  }","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"cxo05":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"todo New Todo","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"mark 1","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"mark 3","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"unmark 1","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"mark 4","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"todo","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"deadline wrong asd asd","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"event wrong /from asd /from asd","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"delete 3","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"bye","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"cxo05":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"java -classpath ..\\bin Horo \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"cxo05":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"cd \"$(dirname \"$0\")\"","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"java -classpath ../bin Horo \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"cxo05":2,"-":37}}]
