[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"GohTengFong"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"GohTengFong"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"GohTengFong"},"content":"javafx {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"GohTengFong"},"content":"    version \u003d \"17.0.7\"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"GohTengFong"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"GohTengFong"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"GohTengFong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"GohTengFong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"GohTengFong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"GohTengFong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"GohTengFong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"GohTengFong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"GohTengFong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"GohTengFong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"GohTengFong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"GohTengFong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"GohTengFong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"GohTengFong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"GohTengFong"},"content":"    mainClass.set(\"duke.gui.Launcher\")","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"GohTengFong":22,"-":41}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"GohTengFong"},"content":"T | X | read book","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"GohTengFong"},"content":"D |   | return book | 2023-06-06","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"GohTengFong"},"content":"E |   | project meeting | Aug 6th 2pm | 4pm","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"GohTengFong"},"content":"T | X | join sports club","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"GohTengFong"},"content":"T |   | run","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"GohTengFong":5}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GohTengFong"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"GohTengFong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"GohTengFong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"GohTengFong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"GohTengFong"},"content":"import duke.task.CommandEnum;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"GohTengFong"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"GohTengFong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"GohTengFong"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"GohTengFong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"GohTengFong"},"content":" * Encapsulates an instance of a chatbot program.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"GohTengFong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"GohTengFong"},"content":"    private final String line \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"GohTengFong"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"GohTengFong"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"GohTengFong"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"GohTengFong"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"GohTengFong"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"GohTengFong"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"GohTengFong"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"GohTengFong"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"GohTengFong"},"content":"        String output \u003d this.run(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"GohTengFong"},"content":"        return output;","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"GohTengFong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"GohTengFong"},"content":"     * Constructor method for Duke.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"GohTengFong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"GohTengFong"},"content":"    public Duke() {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"GohTengFong"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"GohTengFong"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"GohTengFong"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"GohTengFong"},"content":"            ArrayList\u003cTask\u003e loadedTasks \u003d this.storage.loadTasks();","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"GohTengFong"},"content":"            this.tasks \u003d new TaskList(loadedTasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"GohTengFong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"GohTengFong"},"content":"            this.ui.explainException(e);","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"GohTengFong"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"GohTengFong"},"content":"    private String run(String input) {","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"GohTengFong"},"content":"        String nextTask \u003d input;","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"GohTengFong"},"content":"        CommandEnum taskEnum \u003d CommandEnum.assignEnum(nextTask);","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"GohTengFong"},"content":"        assert (taskEnum !\u003d null) : \"The enum returned cannot be null even if it is invalid.\";","lastModifiedDate":"2023-09-11"},{"lineNumber":49,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":50,"author":{"gitId":"GohTengFong"},"content":"        switch (taskEnum) {","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"GohTengFong"},"content":"        case LIST:","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"GohTengFong"},"content":"            return this.tasks.printTasks();","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"GohTengFong"},"content":"        case MARK:","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"GohTengFong"},"content":"        case UNMARK:","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"GohTengFong"},"content":"            try {","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"GohTengFong"},"content":"                return this.tasks.handleMark(nextTask);","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"GohTengFong"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"GohTengFong"},"content":"                return this.ui.explainException(e);","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"GohTengFong"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"GohTengFong"},"content":"        case TODO:","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"GohTengFong"},"content":"        case DEADLINE:","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"GohTengFong"},"content":"        case EVENT:","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"GohTengFong"},"content":"            try {","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"GohTengFong"},"content":"                return this.tasks.handleTask(nextTask);","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"GohTengFong"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"GohTengFong"},"content":"                return this.ui.explainException(e);","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"GohTengFong"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"GohTengFong"},"content":"        case DELETE:","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"GohTengFong"},"content":"            try {","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"GohTengFong"},"content":"                return this.tasks.handleDelete(nextTask);","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"GohTengFong"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"GohTengFong"},"content":"                return this.ui.explainException(e);","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"GohTengFong"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"GohTengFong"},"content":"        case FIND:","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"GohTengFong"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"GohTengFong"},"content":"                return this.tasks.find(nextTask);","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"GohTengFong"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"GohTengFong"},"content":"                return this.ui.explainException(e);","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"GohTengFong"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":80,"author":{"gitId":"GohTengFong"},"content":"        case BYE:","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"GohTengFong"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"GohTengFong"},"content":"                this.storage.saveTasks(this.tasks.getList());","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"GohTengFong"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"GohTengFong"},"content":"                String output \u003d \"Unable to save your tasks to a file. Try Again.\";","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"GohTengFong"},"content":"                return output;","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"GohTengFong"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"GohTengFong"},"content":"            return this.ui.bye();","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"GohTengFong"},"content":"        default:","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"GohTengFong"},"content":"            return this.ui.handleInvalid();","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"GohTengFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"GohTengFong":90,"-":2}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GohTengFong"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"GohTengFong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"GohTengFong"},"content":"import duke.gui.MainWindow;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"GohTengFong"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"GohTengFong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"GohTengFong"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"GohTengFong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"GohTengFong"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"GohTengFong"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"GohTengFong"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"GohTengFong"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"GohTengFong"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"GohTengFong"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"GohTengFong"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"GohTengFong"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"GohTengFong"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"GohTengFong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"GohTengFong"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"GohTengFong"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"GohTengFong"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"GohTengFong"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"GohTengFong"},"content":"            stage.show();","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"GohTengFong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"GohTengFong"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"GohTengFong"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"GohTengFong"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"GohTengFong":32}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GohTengFong"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"GohTengFong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"GohTengFong"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"GohTengFong"},"content":" * This class represents the UI that interacts with the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"GohTengFong"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"GohTengFong"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"GohTengFong"},"content":"    private final String line \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"GohTengFong"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"GohTengFong"},"content":"     * Prints the greeting message.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"GohTengFong"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"GohTengFong"},"content":"    public String greet() {","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"GohTengFong"},"content":"        String output \u003d \"Hello! I\u0027m Fong!\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"GohTengFong"},"content":"        output +\u003d \"What can I do for you?\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"GohTengFong"},"content":"        return output;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"GohTengFong"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"GohTengFong"},"content":"     * Prints the goodbye message.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"GohTengFong"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"GohTengFong"},"content":"    public String bye() {","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"GohTengFong"},"content":"        String output \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"GohTengFong"},"content":"        return output;","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"GohTengFong"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"GohTengFong"},"content":"     * Prints the exception message.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"GohTengFong"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"GohTengFong"},"content":"    public String explainException(DukeException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"GohTengFong"},"content":"        return e.getMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"GohTengFong"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"GohTengFong"},"content":"     * Prints the invalid task message.","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"GohTengFong"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"GohTengFong"},"content":"    public String handleInvalid() {","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"GohTengFong"},"content":"        String output \u003d \"You did not enter a valid command.\";","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"GohTengFong"},"content":"        return output;","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"GohTengFong"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"GohTengFong":42}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GohTengFong"},"content":"package duke.exception;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"GohTengFong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"GohTengFong"},"content":" * An exception specifically related to Duke.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"GohTengFong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"GohTengFong"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"GohTengFong"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"GohTengFong"},"content":"        super(message);","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"GohTengFong"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"GohTengFong":10}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GohTengFong"},"content":"package duke.gui;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"GohTengFong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"GohTengFong"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"GohTengFong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"GohTengFong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"GohTengFong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"GohTengFong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"GohTengFong"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"GohTengFong"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"GohTengFong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"GohTengFong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"GohTengFong"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"GohTengFong"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"GohTengFong"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"GohTengFong"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"GohTengFong"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"GohTengFong"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"GohTengFong"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"GohTengFong"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"GohTengFong"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"GohTengFong"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"GohTengFong"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"GohTengFong"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"GohTengFong"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"GohTengFong"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"GohTengFong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"GohTengFong"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"GohTengFong"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"GohTengFong"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"GohTengFong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"GohTengFong"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"GohTengFong"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"GohTengFong"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"GohTengFong"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"GohTengFong"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"GohTengFong"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"GohTengFong"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"GohTengFong"},"content":"    private void flip() {","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"GohTengFong"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"GohTengFong"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"GohTengFong"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"GohTengFong"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"GohTengFong"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"GohTengFong"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"GohTengFong"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"GohTengFong"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"GohTengFong"},"content":"        db.flip();","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"GohTengFong"},"content":"        return db;","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"GohTengFong"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"GohTengFong":62}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GohTengFong"},"content":"package duke.gui;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"GohTengFong"},"content":"import duke.Main;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"GohTengFong"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"GohTengFong"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"GohTengFong"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"GohTengFong"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"GohTengFong"},"content":"public class Launcher {","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"GohTengFong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"GohTengFong"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"GohTengFong"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"GohTengFong":13}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GohTengFong"},"content":"package duke.gui;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"GohTengFong"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"GohTengFong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"GohTengFong"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"GohTengFong"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"GohTengFong"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"GohTengFong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"GohTengFong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"GohTengFong"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"GohTengFong"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"GohTengFong"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"GohTengFong"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"GohTengFong"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"GohTengFong"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"GohTengFong"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"GohTengFong"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"GohTengFong"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"GohTengFong"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"GohTengFong"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"GohTengFong"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"GohTengFong"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"GohTengFong"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"GohTengFong"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/userIcon.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"GohTengFong"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/fongIcon.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"GohTengFong"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"GohTengFong"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"GohTengFong"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"GohTengFong"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"GohTengFong"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"GohTengFong"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"GohTengFong"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"GohTengFong"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"GohTengFong"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"GohTengFong"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"GohTengFong"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"GohTengFong"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"GohTengFong"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"GohTengFong"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"GohTengFong"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"GohTengFong"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"GohTengFong"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"GohTengFong"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"GohTengFong"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"GohTengFong"},"content":"            javafx.application.Platform.exit();","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"GohTengFong"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"GohTengFong"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"GohTengFong":58}},{"path":"src/main/java/duke/task/CommandEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GohTengFong"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"GohTengFong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"GohTengFong"},"content":" * This is an enum containing all possible commands.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"GohTengFong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"GohTengFong"},"content":"public enum CommandEnum {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"GohTengFong"},"content":"    LIST, BYE, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, FIND, INVALID;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"GohTengFong"},"content":"    public static CommandEnum assignEnum(String task) {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"GohTengFong"},"content":"        if (task.startsWith(\"bye\")) return CommandEnum.BYE;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"GohTengFong"},"content":"        else if (task.startsWith(\"list\")) return CommandEnum.LIST;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"GohTengFong"},"content":"        else if (task.startsWith(\"mark\")) return CommandEnum.MARK;","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"GohTengFong"},"content":"        else if (task.startsWith(\"unmark\")) return CommandEnum.UNMARK;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"GohTengFong"},"content":"        else if (task.startsWith(\"todo\")) return CommandEnum.TODO;","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"GohTengFong"},"content":"        else if (task.startsWith(\"deadline\")) return CommandEnum.DEADLINE;","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"GohTengFong"},"content":"        else if (task.startsWith(\"event\")) return CommandEnum.EVENT;","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"GohTengFong"},"content":"        else if (task.startsWith(\"find\")) return CommandEnum.FIND;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"GohTengFong"},"content":"        else if (task.startsWith(\"delete\")) return CommandEnum.DELETE;","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"GohTengFong"},"content":"        else return CommandEnum.INVALID;","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"GohTengFong"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"GohTengFong":21}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GohTengFong"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"GohTengFong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"GohTengFong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"GohTengFong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"GohTengFong"},"content":" * This class encapsulates a Deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"GohTengFong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"GohTengFong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"GohTengFong"},"content":"    private LocalDate deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"GohTengFong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"GohTengFong"},"content":"     * Constructor method for a Deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"GohTengFong"},"content":"     * @param taskDescription Description of the task","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"GohTengFong"},"content":"     * @param deadline Deadline for the task","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"GohTengFong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"GohTengFong"},"content":"    public Deadline(String taskDescription, LocalDate deadline) {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"GohTengFong"},"content":"        super(taskDescription);","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"GohTengFong"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"GohTengFong"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"GohTengFong"},"content":"        return this.deadline.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"GohTengFong"},"content":"    public String getFormattedDeadline() {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"GohTengFong"},"content":"        return deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"GohTengFong"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"GohTengFong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"GohTengFong"},"content":"        assert (deadline !\u003d null) : \"The deadline of a Deadline task cannot be null.\";","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"GohTengFong"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.getFormattedDeadline() + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"GohTengFong"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"GohTengFong":36}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GohTengFong"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"GohTengFong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"GohTengFong"},"content":" * This class encapsulates an Event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"GohTengFong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"GohTengFong"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"GohTengFong"},"content":"    private String start;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"GohTengFong"},"content":"    private String end;","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"GohTengFong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"GohTengFong"},"content":"     * Constructor method for an Event.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"GohTengFong"},"content":"     * @param taskDescription Description of the task","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"GohTengFong"},"content":"     * @param start Starting date and time of the Event","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"GohTengFong"},"content":"     * @param end Ending date and time of the Event","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"GohTengFong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"GohTengFong"},"content":"    public Event(String taskDescription, String start, String end) {","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"GohTengFong"},"content":"        super(taskDescription);","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"GohTengFong"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"GohTengFong"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"GohTengFong"},"content":"    public String getStart() {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"GohTengFong"},"content":"        return this.start;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"GohTengFong"},"content":"    public String getEnd() {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"GohTengFong"},"content":"        return this.end;","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"GohTengFong"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"GohTengFong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"GohTengFong"},"content":"        assert (start !\u003d null) : \"The start date and time of an Event task cannot be null.\";","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"GohTengFong"},"content":"        assert (end !\u003d null) : \"The end date and time of an Event task cannot be null.\";","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":35,"author":{"gitId":"GohTengFong"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.start + \" to: \" + this.end + \")\";","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"GohTengFong"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"GohTengFong":37}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GohTengFong"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"GohTengFong"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"GohTengFong"},"content":"    protected String taskDescription;","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"GohTengFong"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"GohTengFong"},"content":"    public Task(String taskDescription) {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"GohTengFong"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"GohTengFong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"GohTengFong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"GohTengFong"},"content":"     * Marks the task as completed.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"GohTengFong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"GohTengFong"},"content":"    public void doTask() {","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"GohTengFong"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"GohTengFong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"GohTengFong"},"content":"     * Unmarks the task as completed.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"GohTengFong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"GohTengFong"},"content":"    public void undoTask() {","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"GohTengFong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"GohTengFong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"GohTengFong"},"content":"     * Returns the completed status of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"GohTengFong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"GohTengFong"},"content":"    public String getMarkedIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"GohTengFong"},"content":"        String markedIcon \u003d isDone ? \"X\" : \" \";","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"GohTengFong"},"content":"        return markedIcon;","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"GohTengFong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"GohTengFong"},"content":"     * Returns the task\u0027s description.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"GohTengFong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"GohTengFong"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"GohTengFong"},"content":"        return this.taskDescription;","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"GohTengFong"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"GohTengFong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"GohTengFong"},"content":"        assert (taskDescription !\u003d null) : \"The task description for a Task cannot be null.\";","lastModifiedDate":"2023-09-11"},{"lineNumber":45,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":46,"author":{"gitId":"GohTengFong"},"content":"        String markedIcon \u003d getMarkedIcon();","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"GohTengFong"},"content":"        return \"[\" + markedIcon + \"] \" + this.taskDescription;","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"GohTengFong"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"GohTengFong":50}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GohTengFong"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"GohTengFong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"GohTengFong"},"content":"import duke.util.Parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"GohTengFong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"GohTengFong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"GohTengFong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"GohTengFong"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"GohTengFong"},"content":" * This class stores tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"GohTengFong"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"GohTengFong"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"GohTengFong"},"content":"    private final String line \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"GohTengFong"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"GohTengFong"},"content":"    private Parser parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"GohTengFong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"GohTengFong"},"content":"     * Constructor method for a TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"GohTengFong"},"content":"     * @param tasks A list of the current tasks recorded","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"GohTengFong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"GohTengFong"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"GohTengFong"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"GohTengFong"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"GohTengFong"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"GohTengFong"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"GohTengFong"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"GohTengFong"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"GohTengFong"},"content":"        return this.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"GohTengFong"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"GohTengFong"},"content":"     * Prints the list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"GohTengFong"},"content":"     * @return The list of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"GohTengFong"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"GohTengFong"},"content":"    public String printTasks() {","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"GohTengFong"},"content":"        String output \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"GohTengFong"},"content":"        assert (tasks !\u003d null) : \"A TaskList must be instantiated even if there are no outstanding tasks.\";","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":43,"author":{"gitId":"GohTengFong"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"GohTengFong"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"GohTengFong"},"content":"            output +\u003d index + \".\" + this.tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"GohTengFong"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"GohTengFong"},"content":"        return output;","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"GohTengFong"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"GohTengFong"},"content":"     * Handles the adding of a task.","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"GohTengFong"},"content":"     * @return Acknowledgement.","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"GohTengFong"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"GohTengFong"},"content":"    public String handleTask(String task) throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"GohTengFong"},"content":"        String nextTaskString \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"GohTengFong"},"content":"        if (task.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"GohTengFong"},"content":"            nextTaskString \u003d handleTodo(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"GohTengFong"},"content":"        } else if (task.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"GohTengFong"},"content":"            nextTaskString \u003d handleDeadline(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"GohTengFong"},"content":"        } else if (task.startsWith(\"event\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"GohTengFong"},"content":"            nextTaskString \u003d handleEvent(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"GohTengFong"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"GohTengFong"},"content":"        String output \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"GohTengFong"},"content":"        output +\u003d nextTaskString + \"\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"GohTengFong"},"content":"        output +\u003d \"Now you have \" + this.tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"GohTengFong"},"content":"        return output;","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"GohTengFong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"GohTengFong"},"content":"     * Handles the adding of a Todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"GohTengFong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"GohTengFong"},"content":"    protected String handleTodo(String task) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"GohTengFong"},"content":"        assert (task !\u003d null) : \"A valid todo command must be passed in.\";","lastModifiedDate":"2023-09-11"},{"lineNumber":79,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":80,"author":{"gitId":"GohTengFong"},"content":"        String[] preprocessedTask \u003d this.parser.parseNewTaskByType(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"GohTengFong"},"content":"        if (preprocessedTask.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"GohTengFong"},"content":"            throw new DukeException(\"Please enter a valid todo description.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"GohTengFong"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"GohTengFong"},"content":"        Todo nextTodo \u003d new Todo(preprocessedTask[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"GohTengFong"},"content":"        this.tasks.add(nextTodo);","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"GohTengFong"},"content":"        return nextTodo.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"GohTengFong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"GohTengFong"},"content":"     * Handles the adding of a Deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"GohTengFong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"GohTengFong"},"content":"    protected String handleDeadline(String task) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"GohTengFong"},"content":"        assert (task !\u003d null) : \"A valid deadline command must be passed in.\";","lastModifiedDate":"2023-09-11"},{"lineNumber":97,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":98,"author":{"gitId":"GohTengFong"},"content":"        String[] temp \u003d this.parser.parseNewTaskByType(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"GohTengFong"},"content":"        if (temp.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"GohTengFong"},"content":"            throw new DukeException(\"You are missing both a valid deadline description and a deadline. \"","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"GohTengFong"},"content":"                    + \"Please enter a valid deadline description and deadline.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"GohTengFong"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"GohTengFong"},"content":"        String[] preprocessedTask \u003d this.parser.parseNewTaskByDate(temp[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"GohTengFong"},"content":"        if (preprocessedTask.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"GohTengFong"},"content":"            throw new DukeException(\"You are missing either a valid deadline description or deadline. \"","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"GohTengFong"},"content":"                    + \"Please enter a valid deadline description or deadline.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"GohTengFong"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"GohTengFong"},"content":"        LocalDate deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"GohTengFong"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"GohTengFong"},"content":"            deadline \u003d LocalDate.parse(preprocessedTask[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"GohTengFong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"GohTengFong"},"content":"            throw new DukeException(\"Please ensure that the deadline provided is in YYYY-MM-DD format.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"GohTengFong"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"GohTengFong"},"content":"        Deadline nextDeadline \u003d new Deadline(preprocessedTask[0], deadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"GohTengFong"},"content":"        this.tasks.add(nextDeadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"GohTengFong"},"content":"        return nextDeadline.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"GohTengFong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"GohTengFong"},"content":"     * Handles the adding of an Event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"GohTengFong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"GohTengFong"},"content":"    protected String handleEvent(String task) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"GohTengFong"},"content":"        assert (task !\u003d null) : \"A valid event command must be passed in.\";","lastModifiedDate":"2023-09-11"},{"lineNumber":129,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":130,"author":{"gitId":"GohTengFong"},"content":"        String[] temp \u003d this.parser.parseNewTaskByType(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"GohTengFong"},"content":"        if (temp.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"GohTengFong"},"content":"            throw new DukeException(\"You are missing both a valid event description and a start and end time. \"","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"GohTengFong"},"content":"                    + \"Please enter a valid event description and start and end time.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"GohTengFong"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"GohTengFong"},"content":"        String[] preprocessedTask \u003d this.parser.parseNewTaskByDate(temp[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"GohTengFong"},"content":"        if (preprocessedTask.length \u003c\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"GohTengFong"},"content":"            throw new DukeException(\"You are missing either a valid event description or start and end time. \"","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"GohTengFong"},"content":"                    + \"Please enter a valid event description or start and end time.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"GohTengFong"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"GohTengFong"},"content":"        Event nextEvent \u003d new Event(preprocessedTask[0], preprocessedTask[1], preprocessedTask[2]);","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"GohTengFong"},"content":"        this.tasks.add(nextEvent);","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"GohTengFong"},"content":"        return nextEvent.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"GohTengFong"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"GohTengFong"},"content":"     * Handles the deletion of a task.","lastModifiedDate":"2023-08-30"},{"lineNumber":153,"author":{"gitId":"GohTengFong"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":154,"author":{"gitId":"GohTengFong"},"content":"    public String handleDelete(String nextTask) throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":155,"author":{"gitId":"GohTengFong"},"content":"        assert (nextTask !\u003d null) : \"A valid delete command must be passed in.\";","lastModifiedDate":"2023-09-11"},{"lineNumber":156,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":157,"author":{"gitId":"GohTengFong"},"content":"        String[] split \u003d nextTask.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"GohTengFong"},"content":"        if (split.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"GohTengFong"},"content":"            throw new DukeException(\"You did not enter an index. Please enter a valid index to delete.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"GohTengFong"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"GohTengFong"},"content":"        String index \u003d split[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"GohTengFong"},"content":"        int taskIndex \u003d -1;","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"GohTengFong"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":168,"author":{"gitId":"GohTengFong"},"content":"            taskIndex \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":169,"author":{"gitId":"GohTengFong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":170,"author":{"gitId":"GohTengFong"},"content":"            throw new DukeException(\"You did not enter a valid index. Please enter a valid index to delete.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":171,"author":{"gitId":"GohTengFong"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":172,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":173,"author":{"gitId":"GohTengFong"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d this.tasks.size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":174,"author":{"gitId":"GohTengFong"},"content":"            throw new DukeException(\"There is no such task index. Please enter a valid index.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":175,"author":{"gitId":"GohTengFong"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":176,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":177,"author":{"gitId":"GohTengFong"},"content":"        Task taskToRemove \u003d this.tasks.get(taskIndex);","lastModifiedDate":"2023-08-30"},{"lineNumber":178,"author":{"gitId":"GohTengFong"},"content":"        this.tasks.remove(taskIndex);","lastModifiedDate":"2023-08-30"},{"lineNumber":179,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":180,"author":{"gitId":"GohTengFong"},"content":"        String output \u003d \"Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":181,"author":{"gitId":"GohTengFong"},"content":"        output +\u003d taskToRemove.toString() + \"\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":182,"author":{"gitId":"GohTengFong"},"content":"        output +\u003d \"Now you have \" + this.tasks.size() + \" tasks in the list.\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":183,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":184,"author":{"gitId":"GohTengFong"},"content":"        return output;","lastModifiedDate":"2023-09-06"},{"lineNumber":185,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":186,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":187,"author":{"gitId":"GohTengFong"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":188,"author":{"gitId":"GohTengFong"},"content":"     * Handles the marking of a task.","lastModifiedDate":"2023-08-30"},{"lineNumber":189,"author":{"gitId":"GohTengFong"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":190,"author":{"gitId":"GohTengFong"},"content":"    public String handleMark(String nextTask) throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":191,"author":{"gitId":"GohTengFong"},"content":"        assert (nextTask !\u003d null) : \"A valid mark command must be passed in.\";","lastModifiedDate":"2023-09-11"},{"lineNumber":192,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":193,"author":{"gitId":"GohTengFong"},"content":"        String[] split \u003d nextTask.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":194,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":195,"author":{"gitId":"GohTengFong"},"content":"        if (split.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":196,"author":{"gitId":"GohTengFong"},"content":"            throw new DukeException(\"You did not enter an index. Please enter a valid index to mark or unmark.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":197,"author":{"gitId":"GohTengFong"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":198,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":199,"author":{"gitId":"GohTengFong"},"content":"        String action \u003d split[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":200,"author":{"gitId":"GohTengFong"},"content":"        String index \u003d split[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":201,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":202,"author":{"gitId":"GohTengFong"},"content":"        int taskIndex \u003d -1;","lastModifiedDate":"2023-08-30"},{"lineNumber":203,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":204,"author":{"gitId":"GohTengFong"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":205,"author":{"gitId":"GohTengFong"},"content":"            taskIndex \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":206,"author":{"gitId":"GohTengFong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":207,"author":{"gitId":"GohTengFong"},"content":"            throw new DukeException(\"You did not enter a valid index. Please enter a valid index to mark or unmark.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":208,"author":{"gitId":"GohTengFong"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":209,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":210,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":211,"author":{"gitId":"GohTengFong"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d this.tasks.size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":212,"author":{"gitId":"GohTengFong"},"content":"            throw new DukeException(\"There is no such task index. Please enter a valid index.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":213,"author":{"gitId":"GohTengFong"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":214,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":215,"author":{"gitId":"GohTengFong"},"content":"        if (action.equals(\"mark\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":216,"author":{"gitId":"GohTengFong"},"content":"            return this.markTask(taskIndex);","lastModifiedDate":"2023-09-06"},{"lineNumber":217,"author":{"gitId":"GohTengFong"},"content":"        } else {","lastModifiedDate":"2023-09-06"},{"lineNumber":218,"author":{"gitId":"GohTengFong"},"content":"            return this.unmarkTask(taskIndex);","lastModifiedDate":"2023-09-06"},{"lineNumber":219,"author":{"gitId":"GohTengFong"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":220,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":221,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":222,"author":{"gitId":"GohTengFong"},"content":"    private String markTask(int taskIndex) {","lastModifiedDate":"2023-09-06"},{"lineNumber":223,"author":{"gitId":"GohTengFong"},"content":"        this.tasks.get(taskIndex).doTask();","lastModifiedDate":"2023-08-30"},{"lineNumber":224,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":225,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":226,"author":{"gitId":"GohTengFong"},"content":"        String output \u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":227,"author":{"gitId":"GohTengFong"},"content":"        output +\u003d this.tasks.get(taskIndex).toString() + \"\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":228,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":229,"author":{"gitId":"GohTengFong"},"content":"        return output;","lastModifiedDate":"2023-09-06"},{"lineNumber":230,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":231,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":232,"author":{"gitId":"GohTengFong"},"content":"    private String unmarkTask(int taskIndex) {","lastModifiedDate":"2023-09-06"},{"lineNumber":233,"author":{"gitId":"GohTengFong"},"content":"        this.tasks.get(taskIndex).undoTask();","lastModifiedDate":"2023-08-30"},{"lineNumber":234,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":235,"author":{"gitId":"GohTengFong"},"content":"        String output \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":236,"author":{"gitId":"GohTengFong"},"content":"        output +\u003d this.tasks.get(taskIndex).toString() + \"\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":237,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":238,"author":{"gitId":"GohTengFong"},"content":"        return output;","lastModifiedDate":"2023-09-06"},{"lineNumber":239,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":240,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":241,"author":{"gitId":"GohTengFong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":242,"author":{"gitId":"GohTengFong"},"content":"     * Finds the specified task.","lastModifiedDate":"2023-09-01"},{"lineNumber":243,"author":{"gitId":"GohTengFong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":244,"author":{"gitId":"GohTengFong"},"content":"    public String find(String task) throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":245,"author":{"gitId":"GohTengFong"},"content":"        assert (task !\u003d null) : \"A valid find command must be passed in.\";","lastModifiedDate":"2023-09-11"},{"lineNumber":246,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":247,"author":{"gitId":"GohTengFong"},"content":"        String[] split \u003d task.split(\"find \");","lastModifiedDate":"2023-09-01"},{"lineNumber":248,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":249,"author":{"gitId":"GohTengFong"},"content":"        if (split.length \u003c\u003d 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":250,"author":{"gitId":"GohTengFong"},"content":"            throw new DukeException(\"Please enter a task to find\");","lastModifiedDate":"2023-09-01"},{"lineNumber":251,"author":{"gitId":"GohTengFong"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":252,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":253,"author":{"gitId":"GohTengFong"},"content":"        String taskToFind \u003d split[1];","lastModifiedDate":"2023-09-01"},{"lineNumber":254,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":255,"author":{"gitId":"GohTengFong"},"content":"        ArrayList\u003cTask\u003e similarTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":256,"author":{"gitId":"GohTengFong"},"content":"        for (Task recordedTasks : tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":257,"author":{"gitId":"GohTengFong"},"content":"            if (recordedTasks.getTaskDescription().contains(taskToFind)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":258,"author":{"gitId":"GohTengFong"},"content":"                similarTasks.add(recordedTasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":259,"author":{"gitId":"GohTengFong"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":260,"author":{"gitId":"GohTengFong"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":261,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":262,"author":{"gitId":"GohTengFong"},"content":"        if (similarTasks.isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":263,"author":{"gitId":"GohTengFong"},"content":"            throw new DukeException(\"There is no such task.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":264,"author":{"gitId":"GohTengFong"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":265,"author":{"gitId":"GohTengFong"},"content":"            String output \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":266,"author":{"gitId":"GohTengFong"},"content":"            for (int i \u003d 0; i \u003c similarTasks.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":267,"author":{"gitId":"GohTengFong"},"content":"                output +\u003d i + 1 + \". \" + similarTasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":268,"author":{"gitId":"GohTengFong"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":269,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":270,"author":{"gitId":"GohTengFong"},"content":"            return output;","lastModifiedDate":"2023-09-06"},{"lineNumber":271,"author":{"gitId":"GohTengFong"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":272,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":273,"author":{"gitId":"GohTengFong"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"GohTengFong":273}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GohTengFong"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"GohTengFong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"GohTengFong"},"content":" * This class encapsulates a Todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"GohTengFong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"GohTengFong"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"GohTengFong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"GohTengFong"},"content":"     * Constructor method for a Todo.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"GohTengFong"},"content":"     * @param taskDescription Description of the task","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"GohTengFong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"GohTengFong"},"content":"    public Todo(String taskDescription) {","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"GohTengFong"},"content":"        super(taskDescription);","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"GohTengFong"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"GohTengFong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"GohTengFong"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"GohTengFong"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"GohTengFong":20}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GohTengFong"},"content":"package duke.util;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"GohTengFong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"GohTengFong"},"content":" * This class encapsulates all methods that parses user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"GohTengFong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"GohTengFong"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"GohTengFong"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"GohTengFong"},"content":"     * Parses new tasks by removing the type of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"GohTengFong"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"GohTengFong"},"content":"    public String[] parseNewTaskByType(String task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"GohTengFong"},"content":"        assert (task !\u003d null) : \"The Task to be parsed by type cannot be null.\";","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"GohTengFong"},"content":"        return task.split(\"todo |deadline |event \");","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"GohTengFong"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"GohTengFong"},"content":"     * Parses new tasks by separating the task description and dates.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"GohTengFong"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"GohTengFong"},"content":"    public String[] parseNewTaskByDate(String task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"GohTengFong"},"content":"        assert (task !\u003d null) : \"The Deadline or Event to be parsed by date cannot be null.\";","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"GohTengFong"},"content":"        return task.split(\" /by | /from | /to \");","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"GohTengFong"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"GohTengFong"},"content":"     * Parses stored tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"GohTengFong"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"GohTengFong"},"content":"    public String[] parseStoredTask(String task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"GohTengFong"},"content":"        return task.split(\" \\\\| \");","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"GohTengFong"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"GohTengFong":32}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GohTengFong"},"content":"package duke.util;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"GohTengFong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"GohTengFong"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"GohTengFong"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"GohTengFong"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"GohTengFong"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"GohTengFong"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"GohTengFong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"GohTengFong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"GohTengFong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"GohTengFong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"GohTengFong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"GohTengFong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"GohTengFong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"GohTengFong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"GohTengFong"},"content":" * This class stores and loads previously recorded tasks into a .txt file.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"GohTengFong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"GohTengFong"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"GohTengFong"},"content":"    private File file;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"GohTengFong"},"content":"    private static final String PATH \u003d \"./data/tasks.txt\";","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"GohTengFong"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"GohTengFong"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"GohTengFong"},"content":"     * Imports tasks from ./data/tasks.txt.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"GohTengFong"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"GohTengFong"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"GohTengFong"},"content":"        this.file \u003d new File(PATH);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"GohTengFong"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"GohTengFong"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"GohTengFong"},"content":"            Scanner fileScanner \u003d new Scanner(file);","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"GohTengFong"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"GohTengFong"},"content":"                String nextTask \u003d fileScanner.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"GohTengFong"},"content":"                String[] processedTask \u003d this.parser.parseStoredTask(nextTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"GohTengFong"},"content":"                String typeOfTask \u003d processedTask[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"GohTengFong"},"content":"                String taskCompletionStatus \u003d processedTask[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"GohTengFong"},"content":"                String taskDescription \u003d processedTask[2];","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"GohTengFong"},"content":"                switch (typeOfTask) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"GohTengFong"},"content":"                case \"T\":","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"GohTengFong"},"content":"                    Todo newTodo \u003d new Todo(taskDescription);","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"GohTengFong"},"content":"                    tasks.add(newTodo);","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"GohTengFong"},"content":"                    if (taskCompletionStatus.equals(\"X\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"GohTengFong"},"content":"                        newTodo.doTask();","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"GohTengFong"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"GohTengFong"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"GohTengFong"},"content":"                case \"D\":","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"GohTengFong"},"content":"                    LocalDate deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"GohTengFong"},"content":"                    try {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"GohTengFong"},"content":"                        deadline \u003d LocalDate.parse(processedTask[3]);","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"GohTengFong"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"GohTengFong"},"content":"                        throw new DukeException(\"Please ensure that the deadline provided is in YYYY-MM-DD format.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"GohTengFong"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"GohTengFong"},"content":"                    Deadline newDeadline \u003d new Deadline(taskDescription, deadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"GohTengFong"},"content":"                    tasks.add(newDeadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"GohTengFong"},"content":"                    if (taskCompletionStatus.equals(\"X\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"GohTengFong"},"content":"                        newDeadline.doTask();","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"GohTengFong"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"GohTengFong"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"GohTengFong"},"content":"                case \"E\":","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"GohTengFong"},"content":"                    Event newEvent \u003d new Event(taskDescription, processedTask[3], processedTask[4]);","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"GohTengFong"},"content":"                    tasks.add(newEvent);","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"GohTengFong"},"content":"                    if (taskCompletionStatus.equals(\"X\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"GohTengFong"},"content":"                        newEvent.doTask();","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"GohTengFong"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"GohTengFong"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"GohTengFong"},"content":"                default:","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"GohTengFong"},"content":"                    throw new DukeException(\"tasks.txt may have been corrupted.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"GohTengFong"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"GohTengFong"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"GohTengFong"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"GohTengFong"},"content":"            System.out.println(\"No file found :(\");","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"GohTengFong"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"GohTengFong"},"content":"        return tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"GohTengFong"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"GohTengFong"},"content":"     * Saves tasks to ./data/tasks.txt.","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"GohTengFong"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"GohTengFong"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"GohTengFong"},"content":"        FileWriter fw \u003d new FileWriter(PATH);","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"GohTengFong"},"content":"        for (Task currTask : tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"GohTengFong"},"content":"            StringBuilder currEntry \u003d new StringBuilder();","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"GohTengFong"},"content":"            if (currTask instanceof Todo) {","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"GohTengFong"},"content":"                Todo todo \u003d (Todo) currTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"GohTengFong"},"content":"                currEntry.append(\"T | \");","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"GohTengFong"},"content":"                currEntry.append(todo.getMarkedIcon());","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"GohTengFong"},"content":"                currEntry.append(\" | \");","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"GohTengFong"},"content":"                currEntry.append(todo.getTaskDescription());","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"GohTengFong"},"content":"            } else if (currTask instanceof Deadline) {","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"GohTengFong"},"content":"                Deadline deadline \u003d (Deadline) currTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"GohTengFong"},"content":"                currEntry.append(\"D | \");","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"GohTengFong"},"content":"                currEntry.append(deadline.getMarkedIcon());","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"GohTengFong"},"content":"                currEntry.append(\" | \");","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"GohTengFong"},"content":"                currEntry.append(deadline.getTaskDescription());","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"GohTengFong"},"content":"                currEntry.append(\" | \");","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"GohTengFong"},"content":"                currEntry.append(deadline.getDeadline());","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"GohTengFong"},"content":"            } else if (currTask instanceof Event) {","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"GohTengFong"},"content":"                Event event \u003d (Event) currTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"GohTengFong"},"content":"                currEntry.append(\"E | \");","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"GohTengFong"},"content":"                currEntry.append(event.getMarkedIcon());","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"GohTengFong"},"content":"                currEntry.append(\" | \");","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"GohTengFong"},"content":"                currEntry.append(event.getTaskDescription());","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"GohTengFong"},"content":"                currEntry.append(\" | \");","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"GohTengFong"},"content":"                currEntry.append(event.getStart());","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"GohTengFong"},"content":"                currEntry.append(\" | \");","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"GohTengFong"},"content":"                currEntry.append(event.getEnd());","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"GohTengFong"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"GohTengFong"},"content":"            currEntry.append(System.lineSeparator());","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"GohTengFong"},"content":"            fw.write(currEntry.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"GohTengFong"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"GohTengFong"},"content":"        fw.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"GohTengFong"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"GohTengFong":126}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"GohTengFong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"GohTengFong"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"GohTengFong"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"GohTengFong"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"GohTengFong"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"GohTengFong"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"GohTengFong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"GohTengFong"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"GohTengFong"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"GohTengFong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"GohTengFong"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"GohTengFong"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"GohTengFong"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"GohTengFong"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"GohTengFong":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"GohTengFong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"GohTengFong"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"GohTengFong"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"GohTengFong"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"GohTengFong"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"GohTengFong"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"GohTengFong"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"GohTengFong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"GohTengFong"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"GohTengFong"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"GohTengFong"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"GohTengFong"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"GohTengFong"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"GohTengFong"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"GohTengFong"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"GohTengFong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"GohTengFong"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"GohTengFong":20}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GohTengFong"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"GohTengFong"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"GohTengFong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"GohTengFong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"GohTengFong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"GohTengFong"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"GohTengFong"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"GohTengFong"},"content":"    public void testDeadlineStringConversion(){","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"GohTengFong"},"content":"        assertEquals(","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"GohTengFong"},"content":"                \"[D][ ] Run (by: Nov 01 2023)\",","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"GohTengFong"},"content":"                new Deadline(\"Run\", LocalDate.parse(\"2023-11-01\")).toString()","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"GohTengFong"},"content":"        );","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"GohTengFong"},"content":"        assertEquals(","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"GohTengFong"},"content":"                \"[D][ ] Project (by: Oct 23 2023)\",","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"GohTengFong"},"content":"                new Deadline(\"Project\", LocalDate.parse(\"2023-10-23\")).toString()","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"GohTengFong"},"content":"        );","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"GohTengFong"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"GohTengFong":23}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GohTengFong"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"GohTengFong"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"GohTengFong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"GohTengFong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"GohTengFong"},"content":"public class EventTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"GohTengFong"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"GohTengFong"},"content":"    public void testEventStringConversion() {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"GohTengFong"},"content":"        assertEquals(","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"GohTengFong"},"content":"                \"[E][ ] Career Fair (from: 30 Aug 12pm to: 5pm)\",","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"GohTengFong"},"content":"                new Event(\"Career Fair\", \"30 Aug 12pm\", \"5pm\").toString()","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"GohTengFong"},"content":"        );","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"GohTengFong"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"GohTengFong":17}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GohTengFong"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"GohTengFong"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"GohTengFong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"GohTengFong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"GohTengFong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"GohTengFong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"GohTengFong"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"GohTengFong"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"GohTengFong"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"GohTengFong"},"content":"    public void addDeadline_invalidDeadline_exceptionThrown() {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"GohTengFong"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"GohTengFong"},"content":"            TaskList taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"GohTengFong"},"content":"            taskList.handleDeadline(\"deadline run\");","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"GohTengFong"},"content":"            fail();","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"GohTengFong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"GohTengFong"},"content":"            assertEquals(\"You are missing either a valid deadline description or deadline. \"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"GohTengFong"},"content":"                    + \"Please enter a valid deadline description or deadline.\", e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"GohTengFong"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"GohTengFong"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"GohTengFong"},"content":"    public void addDeadline_invalidDeadlineSyntax_exceptionThrown() {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"GohTengFong"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"GohTengFong"},"content":"            TaskList taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"GohTengFong"},"content":"            taskList.handleDeadline(\"deadline run /by 01-01-2024\");","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"GohTengFong"},"content":"            fail();","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"GohTengFong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"GohTengFong"},"content":"            assertEquals(","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"GohTengFong"},"content":"                    \"Please ensure that the deadline provided is in YYYY-MM-DD format.\",","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"GohTengFong"},"content":"                    e.getMessage()","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"GohTengFong"},"content":"            );","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"GohTengFong"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"GohTengFong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"GohTengFong"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"GohTengFong"},"content":"    public void addEvent_invalidFromTo_exceptionThrown() {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"GohTengFong"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"GohTengFong"},"content":"            TaskList taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"GohTengFong"},"content":"            taskList.handleEvent(\"event party /from Weds \");","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"GohTengFong"},"content":"            fail();","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"GohTengFong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"GohTengFong"},"content":"            assertEquals(\"You are missing either a valid event description or start and end time. \"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"GohTengFong"},"content":"                    + \"Please enter a valid event description or start and end time.\", e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"GohTengFong"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"GohTengFong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"GohTengFong"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"GohTengFong":50}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"GohTengFong"},"content":"todo borrow book","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"GohTengFong"},"content":"mark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"GohTengFong"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"GohTengFong"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"GohTengFong"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"GohTengFong"},"content":"delete 2","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"GohTengFong"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"GohTengFong":7}}]
