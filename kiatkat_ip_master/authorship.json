[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"# prts.Prts project template","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"3. After that, locate the `src/main/java/prts.Prts.java` file, right-click it, and choose `Run prts.Prts.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kiatkat":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"    mainClass.set(\"prts.Prts\")","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"    archiveBaseName \u003d \"prts\"","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kiatkat":2,"-":40}},{"path":"src/main/java/prts/CreateNewSaveException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":" * Signals that the save file had failed to load, and so a new save had to be created.","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"public class CreateNewSaveException extends PrtsException {","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"     * Constructs a CreateNewSaveException.","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"    public CreateNewSaveException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"        super(\"File failed to load, created new save file.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kiatkat":15}},{"path":"src/main/java/prts/NewSaveFailedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":" * Signals that the save file failed to load, and furthermore, that PRTS attempted to create a new","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":" * save file, but failed.","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"public class NewSaveFailedException extends PrtsException {","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"     * Constructs a NewSaveFailedException.","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"    public NewSaveFailedException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"        super(\"Failed to load save file, new save file could not be created.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kiatkat":15}},{"path":"src/main/java/prts/OutOfRangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":" * Signals that the input value is out of range of the list.","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"public class OutOfRangeException extends PrtsException {","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"     * Constructs a OutOfRangeException.","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"    public OutOfRangeException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"        super(\"Please provide a number within range.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kiatkat":15}},{"path":"src/main/java/prts/Prts.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import prts.command.Command;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import prts.command.CommandParser;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":" * A chatbot and to-do list that can receive text input from the user, parse it, and execute","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":" * predefined commands.","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"public class Prts {","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"    private final Storage storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"    private final Ui ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"    private String fileName \u003d \"prts.PRTS.txt\";","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"    private String[] directories \u003d {\"data\"};","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"     * Constructs a PRTS object, and initializes its fields.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"    public Prts() {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"        storage \u003d new Storage(fileName, directories);","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"            tasks \u003d storage.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"        } catch (CreateNewSaveException | NewSaveFailedException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"            ui.displayMessage(e.getMessage());","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"     * Starts the main program loop of PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"    public void run() {","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"        while (!isExit) {","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"                ui.showSoftLine(); // show the divider line (\"_______\")","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"                Command c \u003d CommandParser.parse(fullCommand);","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"            } catch (PrtsException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"                ui.displayMessage(e.getMessage());","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"            } finally {","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"kiatkat"},"content":"                if (!isExit) {","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"kiatkat"},"content":"                    ui.showHardLine();","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"kiatkat"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"kiatkat"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"kiatkat"},"content":"        ui.showGoodbye();","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"kiatkat"},"content":"     * Runs PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"kiatkat"},"content":"     * @param args Unused argument.","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"kiatkat"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"kiatkat"},"content":"        new Prts().run();","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kiatkat":64,"-":1}},{"path":"src/main/java/prts/PrtsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":" * A general exception for any errors that PRTS may encounter in its execution. All other custom","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":" * exceptions in PRTS extend from this class.","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"public class PrtsException extends Exception {","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"     * Constructs a PrtsException object.","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"    public PrtsException(String message) {","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"        super(message);","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kiatkat":17}},{"path":"src/main/java/prts/SaveToFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":" * Signals that an error occurred attempting to save the state of the TaskList to the save file.","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"public class SaveToFileException extends PrtsException {","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"     * Constructs a SaveToFileException.","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"    public SaveToFileException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"        super(\"Failed to save to save file.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kiatkat":15}},{"path":"src/main/java/prts/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import java.io.File;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":" * The class responsible for dealing with saving and loading the state of the TaskList to and from","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":" * a save file on the user\u0027s hard disk.","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"public class Storage {","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"    private Path filePath;","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"    private File saveFile;","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"     * Constructs a Storage object. In addition, verifies if the specified file path for the save file","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"     * exists. If it does not exist, creates the necessary directory/directories and file.","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"     * @param fileName The name of the desired save file.","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"     * @param directories One or more desired directory names, to specify the path where the file","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"     *                    should be stored in. These extend off of \u003ccode\u003eSystem.getProperty(user.dir)","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"     *                    \u003c/code\u003e.","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"    public Storage(String fileName, String[] directories) {","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"        filePath \u003d Path.of(System.getProperty(\"user.dir\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"        for (String directory : directories) {","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"            filePath \u003d Paths.get(filePath.toString(), directory);","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"            saveFile \u003d new File(filePath.toUri());","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"            if (!saveFile.exists()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"                if (saveFile.mkdir()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"                    System.out.println(\"Directory \" + filePath.toString() + \" created.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"                }","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"        filePath \u003d Paths.get(filePath.toString(), fileName);","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"        saveFile \u003d new File(filePath.toUri());","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"        if (!saveFile.exists()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"            try {","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"                if (saveFile.createNewFile()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"                    System.out.println(\"Save file could not be located, new file created\");","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"kiatkat"},"content":"                }","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"kiatkat"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"kiatkat"},"content":"                System.out.println(\"Error creating save file: \" + e.getMessage());","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"kiatkat"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"kiatkat"},"content":"     * Attempts to load the TaskList from the save file.","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"kiatkat"},"content":"     * @return The loaded TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"kiatkat"},"content":"     * @throws CreateNewSaveException If the file could not be located or read, and a new save file","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"kiatkat"},"content":"     * was created.","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"kiatkat"},"content":"     * @throws NewSaveFailedException If the file could not be located or read, and a new save file","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"kiatkat"},"content":"     * could not be created.","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"kiatkat"},"content":"    public TaskList load() throws CreateNewSaveException, NewSaveFailedException {","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"kiatkat"},"content":"        if (saveFile.length() \u003d\u003d 0) {","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"kiatkat"},"content":"            return new TaskList();","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"kiatkat"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"kiatkat"},"content":"            FileInputStream fis \u003d new FileInputStream(saveFile);","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"kiatkat"},"content":"            ObjectInputStream ois \u003d new ObjectInputStream(fis);","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"kiatkat"},"content":"            TaskList tasks \u003d (TaskList) ois.readObject();","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"kiatkat"},"content":"            ois.close();","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"kiatkat"},"content":"            return tasks;","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"kiatkat"},"content":"        } catch (IOException | ClassNotFoundException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"kiatkat"},"content":"            saveFile.delete();","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"kiatkat"},"content":"            try {","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"kiatkat"},"content":"                saveFile.createNewFile();","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"kiatkat"},"content":"                throw new CreateNewSaveException();","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"kiatkat"},"content":"            } catch (IOException ee) {","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"kiatkat"},"content":"                throw new NewSaveFailedException();","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"kiatkat"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"kiatkat"},"content":"     * Attempts to save the TaskList to the save file.","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"kiatkat"},"content":"     * @param tasks The current TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"kiatkat"},"content":"     * @throws SaveToFileException If the TaskList could not be successfully saved to the file.","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"kiatkat"},"content":"    public void save(TaskList tasks) throws SaveToFileException {","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"kiatkat"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"kiatkat"},"content":"            FileOutputStream fos \u003d new FileOutputStream(saveFile);","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"kiatkat"},"content":"            ObjectOutputStream oos \u003d new ObjectOutputStream(fos);","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"kiatkat"},"content":"            oos.writeObject(tasks);","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"kiatkat"},"content":"            oos.close();","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"kiatkat"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"kiatkat"},"content":"            throw new SaveToFileException();","lastModifiedDate":"2023-09-07"},{"lineNumber":102,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"kiatkat":105}},{"path":"src/main/java/prts/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import prts.task.AlreadyMarkedException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import prts.task.AlreadyUnmarkedException;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import prts.task.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":" * Represents the list of Tasks the user has added in PRTS, and manages all modifications to this list.","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"public class TaskList implements Serializable {","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"     * Constructs a new, empty TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"     * Adds a new Task to the list.","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"     * @param task The Task to be added to the list.","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"     * @return A message to be displayed to the user as acknowledgement and indication of successful","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"     * execution.","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"    public String add(Task task) {","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"        return task.getAddMessage() + \"\\n\" + task;","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"     * Deletes a Task from the list.","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"     * @param index The index of the Task to be deleted from the list.","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"     *              This is a number from 1 to the size of the list, or null if all items should be","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"     *              deleted.","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"     * @return A message to be displayed to the user as acknowledgement and indication of successful","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"     * execution.","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"     * @throws OutOfRangeException If the index provided is 0 or less, or greater than the size of","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"     * the list.","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"    public String delete(Integer index) throws OutOfRangeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"        if (index \u003d\u003d null) {","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"            tasks.clear();","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"kiatkat"},"content":"            return \"Your task list has been cleared.\";","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"kiatkat"},"content":"        int i \u003d index - 1;","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"kiatkat"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"kiatkat"},"content":"            throw new OutOfRangeException();","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"kiatkat"},"content":"        Task task \u003d tasks.remove(i);","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"kiatkat"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"kiatkat"},"content":"        builder.append(\"As you wish. This task has been removed:\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"kiatkat"},"content":"        builder.append(task.toString());","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"kiatkat"},"content":"        builder.append(\"\\nYou now have \");","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"kiatkat"},"content":"        builder.append(tasks.size());","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"kiatkat"},"content":"        builder.append(\" tasks in your list.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"kiatkat"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"kiatkat"},"content":"            builder.append(\"\\nCongratulations!\");","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"kiatkat"},"content":"        return builder.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"kiatkat"},"content":"     * Marks an item in the list as done.","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"kiatkat"},"content":"     * @param index The index of the Task in the list to be marked.","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"kiatkat"},"content":"     *              This is a number from 1 to the size of the list, or null if all items should be","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"kiatkat"},"content":"     *              marked.","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"kiatkat"},"content":"     * @return A message to be displayed to the user as acknowledgement and indication of successful","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"kiatkat"},"content":"     * execution.","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"kiatkat"},"content":"     * @throws OutOfRangeException If the index provided is 0 or less, or greater than the size of","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"kiatkat"},"content":"     * the list.","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"kiatkat"},"content":"     * @throws AlreadyMarkedException If the item to be marked is already marked.","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"kiatkat"},"content":"    public String mark(Integer index) throws OutOfRangeException, AlreadyMarkedException {","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"kiatkat"},"content":"        if (index \u003d\u003d null) {","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"kiatkat"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"kiatkat"},"content":"                try {","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"kiatkat"},"content":"                    task.markDone();","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"kiatkat"},"content":"                } catch (AlreadyMarkedException ignored) {","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"kiatkat"},"content":"                }","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"kiatkat"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"kiatkat"},"content":"            return \"All done.\";","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"kiatkat"},"content":"        int i \u003d index - 1;","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"kiatkat"},"content":"        if (i \u003c 0 || i \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"kiatkat"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"kiatkat"},"content":"            task.markDone();","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"kiatkat"},"content":"            return \"Mission accomplished.\\n\" + task.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"kiatkat"},"content":"        } else {","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"kiatkat"},"content":"            throw new OutOfRangeException();","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"kiatkat"},"content":"     * Marks an item in the list as not yet done.","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"kiatkat"},"content":"     * @param index The index of the Task in the list to be unmarked.","lastModifiedDate":"2023-09-07"},{"lineNumber":112,"author":{"gitId":"kiatkat"},"content":"     *              This is a number from 1 to the size of the list, or null if all items should be","lastModifiedDate":"2023-09-07"},{"lineNumber":113,"author":{"gitId":"kiatkat"},"content":"     *              unmarked.","lastModifiedDate":"2023-09-07"},{"lineNumber":114,"author":{"gitId":"kiatkat"},"content":"     * @return A message to be displayed to the user as acknowledgement and indication of successful","lastModifiedDate":"2023-09-07"},{"lineNumber":115,"author":{"gitId":"kiatkat"},"content":"     * execution.","lastModifiedDate":"2023-09-07"},{"lineNumber":116,"author":{"gitId":"kiatkat"},"content":"     * @throws OutOfRangeException If the index provided is 0 or less, or greater than the size of","lastModifiedDate":"2023-09-07"},{"lineNumber":117,"author":{"gitId":"kiatkat"},"content":"     * the list.","lastModifiedDate":"2023-09-07"},{"lineNumber":118,"author":{"gitId":"kiatkat"},"content":"     * @throws AlreadyUnmarkedException If the item to be unmarked is already unmarked.","lastModifiedDate":"2023-09-07"},{"lineNumber":119,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":120,"author":{"gitId":"kiatkat"},"content":"    public String unmark(Integer index) throws OutOfRangeException, AlreadyUnmarkedException {","lastModifiedDate":"2023-09-07"},{"lineNumber":121,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"kiatkat"},"content":"        if (index \u003d\u003d null) {","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"kiatkat"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-09-05"},{"lineNumber":124,"author":{"gitId":"kiatkat"},"content":"                try {","lastModifiedDate":"2023-09-05"},{"lineNumber":125,"author":{"gitId":"kiatkat"},"content":"                    task.markUndone();","lastModifiedDate":"2023-09-05"},{"lineNumber":126,"author":{"gitId":"kiatkat"},"content":"                } catch (AlreadyUnmarkedException ignored) {","lastModifiedDate":"2023-09-07"},{"lineNumber":127,"author":{"gitId":"kiatkat"},"content":"                }","lastModifiedDate":"2023-09-05"},{"lineNumber":128,"author":{"gitId":"kiatkat"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":129,"author":{"gitId":"kiatkat"},"content":"            return \"All undone.\";","lastModifiedDate":"2023-09-05"},{"lineNumber":130,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":131,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":132,"author":{"gitId":"kiatkat"},"content":"        int i \u003d index - 1;","lastModifiedDate":"2023-09-07"},{"lineNumber":133,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":134,"author":{"gitId":"kiatkat"},"content":"        if (i \u003c 0 || i \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":135,"author":{"gitId":"kiatkat"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-09-05"},{"lineNumber":136,"author":{"gitId":"kiatkat"},"content":"            task.markUndone();","lastModifiedDate":"2023-09-07"},{"lineNumber":137,"author":{"gitId":"kiatkat"},"content":"            return \"Uncharacteristic of you. More work has been added to the pile.\\n\" + task.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":138,"author":{"gitId":"kiatkat"},"content":"        } else {","lastModifiedDate":"2023-09-05"},{"lineNumber":139,"author":{"gitId":"kiatkat"},"content":"            throw new OutOfRangeException();","lastModifiedDate":"2023-09-07"},{"lineNumber":140,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":141,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":143,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":144,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":145,"author":{"gitId":"kiatkat"},"content":"     * Returns a message depending on whether the list is empty. For personality only.","lastModifiedDate":"2023-09-07"},{"lineNumber":146,"author":{"gitId":"kiatkat"},"content":"     * @return A preset message.","lastModifiedDate":"2023-09-07"},{"lineNumber":147,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":148,"author":{"gitId":"kiatkat"},"content":"    public String docRest() {","lastModifiedDate":"2023-09-05"},{"lineNumber":149,"author":{"gitId":"kiatkat"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":150,"author":{"gitId":"kiatkat"},"content":"            return \"...have a good rest.\";","lastModifiedDate":"2023-09-05"},{"lineNumber":151,"author":{"gitId":"kiatkat"},"content":"        } else {","lastModifiedDate":"2023-09-05"},{"lineNumber":152,"author":{"gitId":"kiatkat"},"content":"            return \"There\u0027s still lots of work that needs to be done. \" +","lastModifiedDate":"2023-09-05"},{"lineNumber":153,"author":{"gitId":"kiatkat"},"content":"                    \"We can\u0027t afford to have you resting.\";","lastModifiedDate":"2023-09-05"},{"lineNumber":154,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":155,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":156,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":157,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":158,"author":{"gitId":"kiatkat"},"content":"     * Returns the number of items in the list.","lastModifiedDate":"2023-09-07"},{"lineNumber":159,"author":{"gitId":"kiatkat"},"content":"     * @return The number of items in the list.","lastModifiedDate":"2023-09-07"},{"lineNumber":160,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":161,"author":{"gitId":"kiatkat"},"content":"    public int getSize() {","lastModifiedDate":"2023-09-05"},{"lineNumber":162,"author":{"gitId":"kiatkat"},"content":"        return tasks.size();","lastModifiedDate":"2023-09-05"},{"lineNumber":163,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":164,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":165,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":166,"author":{"gitId":"kiatkat"},"content":"     * Returns a string representation of the task list.","lastModifiedDate":"2023-09-07"},{"lineNumber":167,"author":{"gitId":"kiatkat"},"content":"     * @return the string representation of the task list.","lastModifiedDate":"2023-09-07"},{"lineNumber":168,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":169,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":170,"author":{"gitId":"kiatkat"},"content":"    public String toString() {","lastModifiedDate":"2023-09-05"},{"lineNumber":171,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":172,"author":{"gitId":"kiatkat"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":173,"author":{"gitId":"kiatkat"},"content":"            return \"...\\n\" + \"You don\u0027t have any tasks. Enjoy your day off.\";","lastModifiedDate":"2023-09-05"},{"lineNumber":174,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":175,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":176,"author":{"gitId":"kiatkat"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-09-05"},{"lineNumber":177,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":178,"author":{"gitId":"kiatkat"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-05"},{"lineNumber":179,"author":{"gitId":"kiatkat"},"content":"            output.append(i + 1).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":180,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":181,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":182,"author":{"gitId":"kiatkat"},"content":"        return output.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":183,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":184,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":185,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":186,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":187,"author":{"gitId":"kiatkat"},"content":"     * Searches through the list for all tasks containing the given string.","lastModifiedDate":"2023-09-07"},{"lineNumber":188,"author":{"gitId":"kiatkat"},"content":"     * @param searchTerm The term(s) to search for.","lastModifiedDate":"2023-09-07"},{"lineNumber":189,"author":{"gitId":"kiatkat"},"content":"     * @return A list of the tasks that contain the search term.","lastModifiedDate":"2023-09-07"},{"lineNumber":190,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":191,"author":{"gitId":"kiatkat"},"content":"    public String find(String searchTerm) {","lastModifiedDate":"2023-09-07"},{"lineNumber":192,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":193,"author":{"gitId":"kiatkat"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-09-07"},{"lineNumber":194,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":195,"author":{"gitId":"kiatkat"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-07"},{"lineNumber":196,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":197,"author":{"gitId":"kiatkat"},"content":"            if (task.contains(searchTerm)) {","lastModifiedDate":"2023-09-07"},{"lineNumber":198,"author":{"gitId":"kiatkat"},"content":"                stringBuilder.append(task.toString());","lastModifiedDate":"2023-09-07"},{"lineNumber":199,"author":{"gitId":"kiatkat"},"content":"                stringBuilder.append(\"\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":200,"author":{"gitId":"kiatkat"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":201,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":202,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":203,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":204,"author":{"gitId":"kiatkat"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":205,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":206,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":207,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":208,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"kiatkat":208}},{"path":"src/main/java/prts/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":" * The class responsible for all interaction with the user. User input and almost all program","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":" * output is managed by this class.","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"public class Ui {","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"    private final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"    static String softbreak \u003d \"--------------------------------------------------\";","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"    static String hardbreak \u003d \"——————————————————————————————————————————————————\";","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"     * Displays the initial message on startup.","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"        System.out.println(hardbreak +","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"                \"\\n...Fingerprint match found. Verification complete. Welcome home.\\n\" +","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"                \"PRTS, at your service. What would you like to do today?\\n\" + hardbreak);","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"     * Displays the farewell message upon exiting the program.","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"    public void showGoodbye() {","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"        System.out.println(\"Farewell. See you again soon.\\n\" + hardbreak);","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"     * Reads in the next line of user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"     * @return The raw user input, as a string.","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"    public String readCommand() {","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"     * Displays a dashed line.","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"    public void showSoftLine() {","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"        System.out.println(softbreak);","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"     * Displays a solid line.","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"kiatkat"},"content":"    public void showHardLine() {","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"kiatkat"},"content":"        System.out.println(hardbreak);","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"kiatkat"},"content":"     * Lists the current Tasks stored in the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"kiatkat"},"content":"     * @param tasks The current state of the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"kiatkat"},"content":"    public void list(TaskList tasks) {","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"kiatkat"},"content":"        System.out.println(\"Here are your tasks for today.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"kiatkat"},"content":"        System.out.println(tasks);","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"kiatkat"},"content":"        System.out.println(\"You now have \" + tasks.getSize() + \" tasks in your list.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"kiatkat"},"content":"     * Displays a given message to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"kiatkat"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"kiatkat"},"content":"    public void displayMessage(String message) {","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"kiatkat"},"content":"        System.out.println(message);","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"kiatkat":75}},{"path":"src/main/java/prts/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import prts.SaveToFileException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import prts.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import prts.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import prts.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import prts.task.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":" * The general command used for adding a Task to the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":" * This Task can be any of the Task types.","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"    private Task taskToAdd;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"     * Constructs the AddCommand object with the Task to be added to the list.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"        this.taskToAdd \u003d task;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"     * Executes the addition of the Task to the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"     * @param tasks The list of tasks currently stored.","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"     * @param ui The UI object stored by PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"     * @param storage The Storage object stored by PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"     * @throws SaveToFileException If the Storage object fails to save the state of the TaskList","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"     * after the addition of the Task.","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws SaveToFileException {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"        ui.displayMessage(tasks.add(taskToAdd));","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kiatkat":38}},{"path":"src/main/java/prts/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import prts.OutOfRangeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import prts.SaveToFileException;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import prts.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import prts.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import prts.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import prts.task.AlreadyMarkedException;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import prts.task.AlreadyUnmarkedException;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":" * Represents a general command that the user has input to PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"     * Executes the command given by the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"     * @param tasks The list of tasks currently stored.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"     * @param ui The UI object stored by PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"     * @param storage The Storage object stored by PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"     * @throws SaveToFileException If the program fails to save the state of the TaskList to the save","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"     * file after the execution of TaskList-modifying commands.","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"     * @throws OutOfRangeException If the execution encounters user input that falls outside valid ranges.","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"     * @throws AlreadyMarkedException If the Task being marked is already marked.","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"     * @throws AlreadyUnmarkedException If the Task being unmarked is already unmarked.","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws SaveToFileException,","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"            OutOfRangeException, AlreadyMarkedException, AlreadyUnmarkedException;","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"     * Returns true if the user command is to exit the program, and false otherwise.","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"     * @return true if this command is an ExitCommand, and false otherwise.","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"        return false;","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"    };","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kiatkat":38}},{"path":"src/main/java/prts/command/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import prts.task.Deadline;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import prts.task.Event;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import prts.task.Todo;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":" * The parser used to convert arbitrary user input into definite commands executable by PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":" * Specific keywords are required to signal to the CommandParser what command is input, and they must be","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":" * the first word input in the line.","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"public class CommandParser {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"     * Parses the user input, returning a Command.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"     * Recognizes predefined keywords if they occur at the start of the user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"     * Certain commands must follow predefined syntax to be parsed correctly.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"     * Whitespace is stripped and will not affect parsing.","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"     * @param fullCommand The raw user input received from the UI.","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"     * @return A Command that can be executed by PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"     * @throws ParsingException If an error is encountered when parsing user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"    public static Command parse(String fullCommand) throws ParsingException {","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"        String[] splits \u003d fullCommand.strip().split(\" \", 2);","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"        String command \u003d splits[0].toLowerCase();","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"        String detail \u003d splits.length \u003d\u003d 2 ? splits[1].strip() : \"\";","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"        switch (command) {","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"        case \"bye\":","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"            if (detail.isBlank())","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"                throw new ParsingException(ParsingException.ExceptionType.MISSING_DESCRIPTION);","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"            return new AddCommand(new Todo(detail));","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"            if (detail.isBlank())","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"                throw new ParsingException(ParsingException.ExceptionType.MISSING_DESCRIPTION);","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"            try {","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"kiatkat"},"content":"                String[] deadlineSplits \u003d detail.split(\"/by\", 2);","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"kiatkat"},"content":"                String deadlineDescription \u003d deadlineSplits[0].strip();","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"kiatkat"},"content":"                String deadlineStr \u003d deadlineSplits[1].strip();","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"kiatkat"},"content":"                if (deadlineStr.isBlank() || deadlineDescription.isBlank())","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"kiatkat"},"content":"                    throw new ParsingException(ParsingException.ExceptionType.MISSING_DESCRIPTION);","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"kiatkat"},"content":"                try {","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"kiatkat"},"content":"                    LocalDateTime deadlineDate \u003d LocalDateTime.parse(deadlineStr);","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"kiatkat"},"content":"                    return new AddCommand(new Deadline(deadlineDescription, deadlineDate));","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"kiatkat"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"kiatkat"},"content":"                    return new AddCommand(new Deadline(deadlineDescription, deadlineStr));","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"kiatkat"},"content":"                }","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"kiatkat"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"kiatkat"},"content":"                throw new ParsingException(ParsingException.ExceptionType.IMPROPER_FORMAT);","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"kiatkat"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"kiatkat"},"content":"        case \"event\":","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"kiatkat"},"content":"            if (detail.isBlank())","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"kiatkat"},"content":"                throw new ParsingException(ParsingException.ExceptionType.MISSING_DESCRIPTION);","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"kiatkat"},"content":"            try {","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"kiatkat"},"content":"                String[] eventSplit1 \u003d detail.split(\"/from\", 2);","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"kiatkat"},"content":"                String[] eventSplit2 \u003d eventSplit1[1].split(\"/to\", 2);","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"kiatkat"},"content":"                String eventDescription \u003d eventSplit1[0].strip();","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"kiatkat"},"content":"                String startDate \u003d eventSplit2[0].strip();","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"kiatkat"},"content":"                String endDate \u003d eventSplit2[1].strip();","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"kiatkat"},"content":"                if (eventDescription.isBlank() || startDate.isBlank() || endDate.isBlank())","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"kiatkat"},"content":"                    throw new ParsingException(ParsingException.ExceptionType.MISSING_DETAIL);","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"kiatkat"},"content":"                System.out.println(\"Roger that. Preparations will be underway.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"kiatkat"},"content":"                try {","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"kiatkat"},"content":"                    LocalDateTime eventStartDate \u003d LocalDateTime.parse(startDate);","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"kiatkat"},"content":"                    LocalDateTime eventEndDate \u003d LocalDateTime.parse(endDate);","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"kiatkat"},"content":"                    return new AddCommand(new Event(eventDescription, eventStartDate, eventEndDate));","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"kiatkat"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"kiatkat"},"content":"                    return new AddCommand(new Event(eventDescription, startDate, endDate));","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"kiatkat"},"content":"                }","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"kiatkat"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"kiatkat"},"content":"                throw new ParsingException(ParsingException.ExceptionType.IMPROPER_FORMAT);","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"kiatkat"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"kiatkat"},"content":"        case \"mark\":","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"kiatkat"},"content":"            if (detail.isBlank()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"kiatkat"},"content":"                throw new ParsingException(ParsingException.ExceptionType.MISSING_INDEX);","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"kiatkat"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"kiatkat"},"content":"            if (detail.equalsIgnoreCase(\"all\")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"kiatkat"},"content":"                return new MarkCommand(null);","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"kiatkat"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"kiatkat"},"content":"            try {","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"kiatkat"},"content":"                int index \u003d Integer.parseInt(detail);","lastModifiedDate":"2023-09-07"},{"lineNumber":101,"author":{"gitId":"kiatkat"},"content":"                return new MarkCommand(index);","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"kiatkat"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"kiatkat"},"content":"                throw new ParsingException(ParsingException.ExceptionType.NOT_A_NUMBER);","lastModifiedDate":"2023-09-07"},{"lineNumber":104,"author":{"gitId":"kiatkat"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"kiatkat"},"content":"        case \"unmark\":","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"kiatkat"},"content":"            if (detail.isBlank())","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"kiatkat"},"content":"                throw new ParsingException(ParsingException.ExceptionType.MISSING_INDEX);","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"kiatkat"},"content":"            if (detail.equalsIgnoreCase(\"all\")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"kiatkat"},"content":"                return new UnmarkCommand(null);","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"kiatkat"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":114,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"kiatkat"},"content":"            try {","lastModifiedDate":"2023-09-05"},{"lineNumber":116,"author":{"gitId":"kiatkat"},"content":"                int index \u003d Integer.parseInt(detail);","lastModifiedDate":"2023-09-07"},{"lineNumber":117,"author":{"gitId":"kiatkat"},"content":"                return new UnmarkCommand(index);","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"kiatkat"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"kiatkat"},"content":"                throw new ParsingException(ParsingException.ExceptionType.NOT_A_NUMBER);","lastModifiedDate":"2023-09-07"},{"lineNumber":120,"author":{"gitId":"kiatkat"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"kiatkat"},"content":"        case \"list\":","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":124,"author":{"gitId":"kiatkat"},"content":"            if (detail.isBlank()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":125,"author":{"gitId":"kiatkat"},"content":"                return new ListCommand();","lastModifiedDate":"2023-09-05"},{"lineNumber":126,"author":{"gitId":"kiatkat"},"content":"            } else {","lastModifiedDate":"2023-09-06"},{"lineNumber":127,"author":{"gitId":"kiatkat"},"content":"                throw new ParsingException(ParsingException.ExceptionType.EXCESS_INPUT);","lastModifiedDate":"2023-09-07"},{"lineNumber":128,"author":{"gitId":"kiatkat"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":129,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":130,"author":{"gitId":"kiatkat"},"content":"        case \"delete\":","lastModifiedDate":"2023-09-05"},{"lineNumber":131,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":132,"author":{"gitId":"kiatkat"},"content":"            if (detail.isBlank()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":133,"author":{"gitId":"kiatkat"},"content":"                throw new ParsingException(ParsingException.ExceptionType.MISSING_INDEX);","lastModifiedDate":"2023-09-07"},{"lineNumber":134,"author":{"gitId":"kiatkat"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":135,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":136,"author":{"gitId":"kiatkat"},"content":"            if (detail.equalsIgnoreCase(\"all\")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":137,"author":{"gitId":"kiatkat"},"content":"                return new DeleteCommand(null);","lastModifiedDate":"2023-09-05"},{"lineNumber":138,"author":{"gitId":"kiatkat"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":139,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":140,"author":{"gitId":"kiatkat"},"content":"            try {","lastModifiedDate":"2023-09-05"},{"lineNumber":141,"author":{"gitId":"kiatkat"},"content":"                int index \u003d Integer.parseInt(detail);","lastModifiedDate":"2023-09-07"},{"lineNumber":142,"author":{"gitId":"kiatkat"},"content":"                return new DeleteCommand(index);","lastModifiedDate":"2023-09-05"},{"lineNumber":143,"author":{"gitId":"kiatkat"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":144,"author":{"gitId":"kiatkat"},"content":"                throw new ParsingException(ParsingException.ExceptionType.NOT_A_NUMBER);","lastModifiedDate":"2023-09-07"},{"lineNumber":145,"author":{"gitId":"kiatkat"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":146,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":147,"author":{"gitId":"kiatkat"},"content":"        case \"find\":","lastModifiedDate":"2023-09-07"},{"lineNumber":148,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":149,"author":{"gitId":"kiatkat"},"content":"            if (detail.isBlank()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":150,"author":{"gitId":"kiatkat"},"content":"                throw new ParsingException(ParsingException.ExceptionType.MISSING_DESCRIPTION);","lastModifiedDate":"2023-09-07"},{"lineNumber":151,"author":{"gitId":"kiatkat"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":152,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":153,"author":{"gitId":"kiatkat"},"content":"            return new FindCommand(detail.toLowerCase());","lastModifiedDate":"2023-09-07"},{"lineNumber":154,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":155,"author":{"gitId":"kiatkat"},"content":"        case \"thanks\":","lastModifiedDate":"2023-09-05"},{"lineNumber":156,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":157,"author":{"gitId":"kiatkat"},"content":"            return new MessageCommand(\"...No problem.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":158,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":159,"author":{"gitId":"kiatkat"},"content":"        case \"zzz\":","lastModifiedDate":"2023-09-05"},{"lineNumber":160,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":161,"author":{"gitId":"kiatkat"},"content":"            return new DocRestCommand();","lastModifiedDate":"2023-09-05"},{"lineNumber":162,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":163,"author":{"gitId":"kiatkat"},"content":"        case \"hi\":","lastModifiedDate":"2023-09-05"},{"lineNumber":164,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":165,"author":{"gitId":"kiatkat"},"content":"            return new MessageCommand(\"Greetings.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":166,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":167,"author":{"gitId":"kiatkat"},"content":"        default:","lastModifiedDate":"2023-09-05"},{"lineNumber":168,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":169,"author":{"gitId":"kiatkat"},"content":"            return new MessageCommand(\"Sorry, I didn\u0027t quite catch that. Are you having enough sleep?\");","lastModifiedDate":"2023-09-05"},{"lineNumber":170,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":171,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":172,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":173,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":174,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"kiatkat":174}},{"path":"src/main/java/prts/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import prts.OutOfRangeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import prts.SaveToFileException;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import prts.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import prts.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import prts.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":" * The command for deletion of a Task from the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"    private Integer index;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"     * Constructs a DeleteCommand object, given the index of the task to be deleted.","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"     * @param index The index of the task to be deleted. If all tasks are to be deleted,","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"     *              this is null.","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"    public DeleteCommand(Integer index) {","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"     * Executes the deletion of the Task from the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"     * @param tasks The list of tasks currently stored.","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"     * @param ui The UI object stored by PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"     * @param storage The Storage object stored by PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"     * @throws SaveToFileException If the Storage object fails to save the state of the TaskList","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"     * after the deletion of the Task.","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"     * @throws OutOfRangeException If the index provided falls out of the range of the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws SaveToFileException, OutOfRangeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"        ui.displayMessage(tasks.delete(index));","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kiatkat":39}},{"path":"src/main/java/prts/command/DocRestCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import prts.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import prts.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import prts.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":" * A personality command that simply displays a message to the user depending on the state of the","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":" * TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"public class DocRestCommand extends Command {","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"     * Displays a message to the user that depends on whether the TaskList is currently empty.","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"     * @param tasks The list of tasks currently stored.","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"     * @param ui The UI object stored by PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"     * @param storage The Storage object stored by PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"        ui.displayMessage(tasks.docRest());","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kiatkat":24}},{"path":"src/main/java/prts/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import prts.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import prts.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import prts.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":" * The command for exiting PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"     * Does nothing. A concrete implementation is simply required as Command is abstract.","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"     * @param tasks The list of tasks currently stored.","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"     * @param ui The UI object stored by PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"     * @param storage The Storage object stored by PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {}","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"     * Returns true to signal that the program should exit.","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"     * @return True, always.","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"        return true;","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kiatkat":30}},{"path":"src/main/java/prts/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import prts.OutOfRangeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import prts.SaveToFileException;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import prts.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import prts.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import prts.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":" * The command for finding a string within tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"    private final String searchTerm;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"     * Constructs a FindCommmand objet with the given search term.","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"     * The search term is copied verbatim from the user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"     * Does not search for dates if the date is parsed into a Date.","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"     * @param searchTerm The term to search for.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"    public FindCommand(String searchTerm) {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"        this.searchTerm \u003d searchTerm;","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws SaveToFileException,","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"            OutOfRangeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"        String results \u003d tasks.find(searchTerm);","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"        ui.displayMessage(results);","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kiatkat":33}},{"path":"src/main/java/prts/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import prts.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import prts.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import prts.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":" * The command for listing the current state of the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"     * Executes the list command.","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"     * @param tasks The list of tasks currently stored.","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"     * @param ui The UI object stored by PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"     * @param storage The Storage object stored by PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"        ui.list(tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kiatkat":23}},{"path":"src/main/java/prts/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import prts.OutOfRangeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import prts.SaveToFileException;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import prts.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import prts.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import prts.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import prts.task.AlreadyMarkedException;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":" * The command for marking a Task as complete.","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"    private Integer index;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"     * Constructs a MarkCommand object, given the index of the task to be deleted.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"     * @param index The index of the task to be marked. If all tasks are to be marked,","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"     *              this is null.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"    public MarkCommand(Integer index) {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"     * Executes the marking of the Task as done.","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"     * @param tasks The list of tasks currently stored.","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"     * @param ui The UI object stored by PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"     * @param storage The Storage object stored by PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"     * @throws OutOfRangeException If the index provided is out of range of the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"     * @throws AlreadyMarkedException If the Task indicated by the provided index is already marked","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"     * as complete.","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"     * @throws SaveToFileException If the Storage object fails to save the state of the TaskList","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"     * after the marking of the Task.","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws OutOfRangeException,","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"            AlreadyMarkedException, SaveToFileException {","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"        ui.displayMessage(tasks.mark(index));","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kiatkat":44}},{"path":"src/main/java/prts/command/MessageCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import prts.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import prts.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import prts.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":" * The general command for simply displaying a given message to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"public class MessageCommand extends Command {","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"    private String message;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"     * Constructs a MessageCommand object, given the string to be displayed.","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"    public MessageCommand(String message) {","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"     * Executes the displaying of the message.","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"     * @param tasks The list of tasks currently stored.","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"     * @param ui The UI object stored by PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"     * @param storage The Storage object stored by PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"        ui.displayMessage(message);","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kiatkat":33}},{"path":"src/main/java/prts/command/ParsingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import prts.PrtsException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":" * Signals that an error has occurred when parsing the user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":" * This error can be of various types, and a different error message is displayed according to the","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":" * input type of error. A full list of error types is listed in the enum ExceptionType.","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"public class ParsingException extends PrtsException {","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"    public enum ExceptionType {","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"        IMPROPER_FORMAT,","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"        MISSING_DESCRIPTION,","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"        MISSING_DETAIL,","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"        MISSING_INDEX,","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"        NOT_A_NUMBER,","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"        EXCESS_INPUT;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"    ExceptionType exceptionType;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"     * Constructs a ParsingException given the error type.","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"     * @param exceptionType The type of parsing error encountered.","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"    public ParsingException(ExceptionType exceptionType) {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"        super(\"There was an error in parsing your input.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"        this.exceptionType \u003d exceptionType;","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"     * Returns an error message that changes depending on the type of parsing error this is.","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"     * @return The parsing error message.","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"    public String getMessage() {","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"        switch (exceptionType) {","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"        case IMPROPER_FORMAT:","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"            return \"Please format your description properly.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"        case MISSING_DESCRIPTION:","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"            return \"I can\u0027t read your mind. Do add a description.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"        case MISSING_DETAIL:","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"kiatkat"},"content":"            return \"I can\u0027t read your mind. Do add more details.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"kiatkat"},"content":"        case MISSING_INDEX:","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"kiatkat"},"content":"            return \"I can\u0027t read your mind. Provide a suitable index.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"kiatkat"},"content":"        case NOT_A_NUMBER:","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"kiatkat"},"content":"            return \"I can\u0027t understand that number.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"kiatkat"},"content":"        case EXCESS_INPUT:","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"kiatkat"},"content":"            return \"Sorry, you\u0027re speaking a little fast. Could you repeat just the first word?\";","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"kiatkat"},"content":"        default:","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"kiatkat"},"content":"            return \"Something went wrong.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kiatkat":66}},{"path":"src/main/java/prts/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import prts.OutOfRangeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import prts.SaveToFileException;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import prts.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import prts.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import prts.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import prts.task.AlreadyUnmarkedException;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":" * The command for marking a Task as not yet complete.","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"    private Integer index;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"     * Constructs a UnmarkCommand object, given the index of the task to be deleted.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"     * @param index The index of the task to be unmarked. If all tasks are to be unmarked,","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"     *              this is null.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"    public UnmarkCommand(Integer index) {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"     * Executes the marking of the Task as not yet done.","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"     * @param tasks The list of tasks currently stored.","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"     * @param ui The UI object stored by PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"     * @param storage The Storage object stored by PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"     * @throws OutOfRangeException If the index provided is out of range of the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"     * @throws AlreadyUnmarkedException If the Task indicated by the provided index is already marked","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"     * as not yet complete.","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"     * @throws SaveToFileException If the Storage object fails to save the state of the TaskList","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"     * after the Task is unmarked.","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws AlreadyUnmarkedException,","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"            OutOfRangeException, SaveToFileException {","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"        ui.displayMessage(tasks.unmark(index));","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kiatkat":43}},{"path":"src/main/java/prts/task/AlreadyMarkedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import prts.PrtsException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":" * Signals that the user is trying to mark a task that is already marked.","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":" * Is only thrown by the \u003ccode\u003emark()\u003c/code\u003e function in the Task object.","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"public class AlreadyMarkedException extends PrtsException {","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"    public AlreadyMarkedException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"        super(\"It\u0027s already done.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kiatkat":13}},{"path":"src/main/java/prts/task/AlreadyUnmarkedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import prts.PrtsException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":" * Signals that the user is trying to unmark a task that already isn\u0027t marked.","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":" * Is only thrown by the \u003ccode\u003eunmark()\u003c/code\u003e function in the Task object.","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"public class AlreadyUnmarkedException extends PrtsException {","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"    public AlreadyUnmarkedException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"        super(\"This hasn\u0027t been done yet...\");","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kiatkat":13}},{"path":"src/main/java/prts/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":" * Represents a deadline with a due date.","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":" * The date can be parsed if input in the form Day-Month-Year, with a short Month form.","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":" * If the date cannot be parsed, stores the user-input string as the due date.","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"    private String description;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"    private String addMessage \u003d \"Alright. I\u0027ll make sure you don\u0027t forget it.\";","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"     * Constructs a Deadline object given the description and due date, in the form of the user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"     * @param name The description of the deadline.","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"     * @param description The due date of the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"    public Deadline(String name, String description) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"        super(name);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"     * Constructs a Deadline object given the description and a due date.","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"     * @param name The description of the deadline.","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"     * @param deadline The due date of the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"    public Deadline(String name, LocalDateTime deadline) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"     * Returns the string representation of the Deadline object, for display to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"     * @return the string representation of the deadline.","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"        String detail \u003d description \u003d\u003d null","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"                ? deadline.format(DateTimeFormatter.ofPattern(\"hh\u0027:\u0027mma\u0027,\u0027 d MMM uuuu\u0027,\u0027 eee\"))","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"                : description;","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + detail + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"kiatkat"},"content":"     * Returns the message that should be displayed to the user upon addition of the Deadline to","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"kiatkat"},"content":"     * the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"kiatkat"},"content":"     * @return the message displayed to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"kiatkat"},"content":"    public String getAddMessage() {","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"kiatkat"},"content":"        return addMessage;","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"kiatkat"},"content":"     * Searches for a given search term in the name or the description strings.","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"kiatkat"},"content":"     * If there is no description string due to the Deadline being constructed with a Date, then","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"kiatkat"},"content":"     * only the name is searched.","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"kiatkat"},"content":"     * @param searchTerm The term to search for.","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"kiatkat"},"content":"     * @return True if the name or description contains the search term, false otherwise.","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"kiatkat"},"content":"    public boolean contains(String searchTerm) {","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"kiatkat"},"content":"        if (super.name.contains(searchTerm)) {","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"kiatkat"},"content":"            return true;","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"kiatkat"},"content":"        if (description !\u003d null) {","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"kiatkat"},"content":"            return description.contains(searchTerm);","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"kiatkat"},"content":"        return false;","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"kiatkat":80}},{"path":"src/main/java/prts/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":" * Represents an event with a start and end date.","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":" * This date can be recognized if input in the format Day-Month-Year, with short Month forms.","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":" * If a date cannot be parsed, then the string input is stored verbatim as the start/end date.","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"    private String description1;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"    private String description2;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"    private String addMessage \u003d \"Roger that. Preparations will be underway.\";","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"    LocalDateTime startDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"    LocalDateTime endDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"     * Constructs an Event object, with user-input strings as the start and end dates.","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"     * @param name The description of the Event.","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"     * @param description1 The start date of the Event.","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"     * @param description2 The end date of the Event.","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"    public Event(String name, String description1, String description2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"        super(name);","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"        this.description1 \u003d description1;","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"        this.description2 \u003d description2;","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"     * Constructs an Event object, given dates parsed by the CommandParser.","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"     * @param name The description of the Event.","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"     * @param startDate The start date of the Event.","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"     * @param endDate The end date of the Event.","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"    public Event(String name, LocalDateTime startDate, LocalDateTime endDate) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"     * Returns the string representation of this Event object, for display to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"     * @return The string representation of the event.","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"kiatkat"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"kiatkat"},"content":"        String detail1 \u003d description1 \u003d\u003d null","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"kiatkat"},"content":"                ? startDate.format(DateTimeFormatter.ofPattern(\"hh\u0027:\u0027mma\u0027,\u0027 d MMM uuuu\u0027,\u0027 eee\"))","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"kiatkat"},"content":"                : description1;","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"kiatkat"},"content":"        String detail2 \u003d description2 \u003d\u003d null","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"kiatkat"},"content":"                ? endDate.format(DateTimeFormatter.ofPattern(\"hh\u0027:\u0027mma\u0027,\u0027 d MMM uuuu\u0027,\u0027 eee\"))","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"kiatkat"},"content":"                : description2;","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"kiatkat"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + detail1 + \" to: \" + detail2 + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"kiatkat"},"content":"     * Returns the message displayed to the user upon addition of an Event to the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"kiatkat"},"content":"     * @return The message displayed to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"kiatkat"},"content":"    public String getAddMessage() {","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"kiatkat"},"content":"        return addMessage;","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"kiatkat"},"content":"     * Searches for a given search term in the name or the description strings.","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"kiatkat"},"content":"     * If there is no description string due to the Event being constructed with Dates, then","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"kiatkat"},"content":"     * only the name is searched.","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"kiatkat"},"content":"     * @param searchTerm The term to search for.","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"kiatkat"},"content":"     * @return True if the name or descriptions contain the search term, false otherwise.","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"kiatkat"},"content":"    public boolean contains(String searchTerm) {","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"kiatkat"},"content":"        if (super.name.contains(searchTerm)) {","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"kiatkat"},"content":"            return true;","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"kiatkat"},"content":"        if (startDate !\u003d null) {","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"kiatkat"},"content":"            return description1.contains(searchTerm) || description2.contains(searchTerm);","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"kiatkat"},"content":"        return false;","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"kiatkat":89}},{"path":"src/main/java/prts/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":" * Represents an abstract Task item that can be added to the TaskList by the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":" * Keeps track of whether the task is completed, and stores a description that can","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":" * be displayed to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"public abstract class Task implements Serializable {","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"    protected String name;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"     * Constructs a Task object. Always initializes the Task as not-yet-done.","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"     * @param name The description of the Task to be created.","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"     * Marks a Task as done.","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"     * @throws AlreadyMarkedException If the Task is already marked as done.","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"    public void markDone() throws AlreadyMarkedException {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"        if (!this.isDone) {","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"            throw new AlreadyMarkedException();","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"     * Marks a Task as not yet done.","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"     * @throws AlreadyUnmarkedException If the Task is already not yet done.","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"    public void markUndone() throws AlreadyUnmarkedException {","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"            throw new AlreadyUnmarkedException();","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"kiatkat"},"content":"     * Returns a string representation of a Task object, to be displayed to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"kiatkat"},"content":"     * @return The string representation displayed to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"kiatkat"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"kiatkat"},"content":"        return this.isDone ? \"[X] \" + name : \"[ ] \" + name;","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"kiatkat"},"content":"     * Returns the message that should be displayed to the user when this Task is added","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"kiatkat"},"content":"     * to the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"kiatkat"},"content":"     * @return The message displayed to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"kiatkat"},"content":"    public abstract String getAddMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"kiatkat"},"content":"     * Searches the description of the Task to find the given search term.","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"kiatkat"},"content":"     * @param searchTerm The term to search for.","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"kiatkat"},"content":"     * @return True if the search term is found, false otherwise.","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"kiatkat"},"content":"    public abstract boolean contains(String searchTerm);","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"kiatkat":71}},{"path":"src/main/java/prts/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":" * Represents a to-do task, with a description of the task to be done.","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"    private String addMessage \u003d \"Understood. No rest for the weary, eh?\";","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"     * Constructs a to-do object, given its description.","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"     * @param name The description of the to-do object, as will be represented in the list of tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"    public Todo(String name) {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"     * Returns the string representation of the to-do object.","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"     * @return A string representation for display to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"     * Returns a message to display to the user when this type of Task is added to the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"     * @return The message to display to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"    public String getAddMessage() {","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"        return addMessage;","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"     * Searches for a given search term in the name of the to-do.","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"     * @param searchTerm The term to search for.","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"     * @return True if the name contains the search term, false otherwise.","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"    public boolean contains(String searchTerm) {","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"        return super.name.contains(searchTerm);","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"kiatkat":47}},{"path":"src/test/java/prts/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import prts.command.ListCommand;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import prts.command.MessageCommand;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import prts.command.CommandParser;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import prts.command.ParsingException;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"    public void parse_list_success() {","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"            assertEquals(CommandParser.parse(\"list\").getClass(), ListCommand.class);","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"        } catch (ParsingException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"            fail();","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"    public void parse_listCasing_success() {","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"            assertEquals(CommandParser.parse(\"lIsT\").getClass(), ListCommand.class);","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"        } catch (ParsingException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"            fail();","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"    public void parse_listMultipleWords_reject() {","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"            assertEquals(CommandParser.parse(\"list list\").getClass(), MessageCommand.class);","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"            fail();","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"        } catch (ParsingException ignored) {","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"kiatkat":41}},{"path":"src/test/java/prts/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import prts.task.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"    public void addTask_validInput_success() {","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"        String output \u003d taskList.add(new Task(\"fakeTask\") {","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"            @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"            public String getAddMessage() {","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"                return \"\";","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"        });","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"        assertEquals(\"\\n[ ] fakeTask\", output);","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"    public void deleteTask_onlyTask_success() throws OutOfRangeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"        taskList.add(new Task(\"fakeTask\") {","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"            @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"            public String getAddMessage() {","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"                return \"\";","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"        });","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"        assertEquals(\"As you wish. This task has been removed:\\n[ ] fakeTask\" +","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"                \"\\nYou now have 0 tasks in your list.\\nCongratulations!\",","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"                taskList.delete(0));","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"kiatkat":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"test","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"test test","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"more test","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"kiatkat":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"java -classpath ..\\bin prts.Prts \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kiatkat":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"java -classpath ../bin Prts \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kiatkat":1,"-":37}}]
