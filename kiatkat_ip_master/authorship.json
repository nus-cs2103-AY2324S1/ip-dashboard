[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"# PRTS User Guide","lastModifiedDate":"2023-09-24"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"### What is PRTS?","lastModifiedDate":"2023-09-24"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"Ever felt overwhelmed by all the things you need to keep track of? Well, PRTS is here to help! Part chatbot, part to-do-","lastModifiedDate":"2023-09-24"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"list, part companion, PRTS is here to help share that cognitive load and assist you through those long nights!","lastModifiedDate":"2023-09-24"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"So, what *can* PRTS do?","lastModifiedDate":"2023-09-24"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"## Features","lastModifiedDate":"2023-09-24"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"General notes about giving commands:","lastModifiedDate":"2023-09-24"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"- PRTS is flexible! Lowercase or uppercase, **casing of commands does not matter**!","lastModifiedDate":"2023-09-24"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"- Additionally, whitespaces will also be ignored by PRTS - **except the very first word**! Ensure you do not start your","lastModifiedDate":"2023-09-24"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"command with a whitespace!","lastModifiedDate":"2023-09-24"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"- Unless otherwise stated, PRTS will not attempt to parse your descriptions, and they will be taken verbatim.","lastModifiedDate":"2023-09-24"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"- All fields **must** be present! You cannot leave a field blank, or PRTS will complain to you.","lastModifiedDate":"2023-09-24"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"- All commands that modify the Task List will automatically save the Task List to a file on your hard disk.","lastModifiedDate":"2023-09-24"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"  - These commands are: `todo`, `deadline`, `event`, `delete`, `mark`, `unmark`, and `undo`.","lastModifiedDate":"2023-09-24"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"### Adding a To-Do: `todo`","lastModifiedDate":"2023-09-24"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"Adds a To-Do item to the Task List.","lastModifiedDate":"2023-09-24"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"Format: `todo [description]`","lastModifiedDate":"2023-09-24"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"- The `description` will be displayed in the Task List verbatim.","lastModifiedDate":"2023-09-24"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"Example:","lastModifiedDate":"2023-09-24"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"- `todo buy groceries`","lastModifiedDate":"2023-09-24"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"### Adding a Deadline: `deadline`","lastModifiedDate":"2023-09-24"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"Adds a Deadline item to the Task List.","lastModifiedDate":"2023-09-24"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"Format: `deadline [description] /by [deadline]`","lastModifiedDate":"2023-09-24"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"- The `description` will be displayed in the Task List verbatim.","lastModifiedDate":"2023-09-24"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"- PRTS will attempt to parse the `deadline` as a date, but if it is unable to do so, the string input will be stored","lastModifiedDate":"2023-09-24"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"verbatim.","lastModifiedDate":"2023-09-24"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"Examples:","lastModifiedDate":"2023-09-24"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"- `deadline submit quiz /by tomorrow`","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"- `deadline finish assignment /by 25 Sep 2023`","lastModifiedDate":"2023-09-24"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"### Adding an Event: `event`","lastModifiedDate":"2023-09-24"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"Adds a Deadline item to the Task List.","lastModifiedDate":"2023-09-24"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"Format: `event [description] /from [startDate] /to [endDate]`","lastModifiedDate":"2023-09-24"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"- The `description` will be displayed in the Task List verbatim.","lastModifiedDate":"2023-09-24"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"- PRTS will attempt to parse the `startDate` and `endDate` as dates, but if it is unable to do so, the string input","lastModifiedDate":"2023-09-24"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"will be stored verbatim.","lastModifiedDate":"2023-09-24"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"Examples:","lastModifiedDate":"2023-09-24"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"- `event birthday party /from 1 Oct 12pm /to 5pm`","lastModifiedDate":"2023-09-24"},{"lineNumber":49,"author":{"gitId":"kiatkat"},"content":"- `event vacay /from september /to october ???`","lastModifiedDate":"2023-09-24"},{"lineNumber":50,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":51,"author":{"gitId":"kiatkat"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2023-09-24"},{"lineNumber":52,"author":{"gitId":"kiatkat"},"content":"Lists all Tasks currently in the Task List.","lastModifiedDate":"2023-09-24"},{"lineNumber":53,"author":{"gitId":"kiatkat"},"content":"Format: `list`","lastModifiedDate":"2023-09-24"},{"lineNumber":54,"author":{"gitId":"kiatkat"},"content":"- This command must *strictly* be used with no further input.","lastModifiedDate":"2023-09-24"},{"lineNumber":55,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":56,"author":{"gitId":"kiatkat"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2023-09-24"},{"lineNumber":57,"author":{"gitId":"kiatkat"},"content":"Deletes a specified task from the Task List.","lastModifiedDate":"2023-09-24"},{"lineNumber":58,"author":{"gitId":"kiatkat"},"content":"Format: `delete [index | \"all\"]`","lastModifiedDate":"2023-09-24"},{"lineNumber":59,"author":{"gitId":"kiatkat"},"content":"- Either a number or the word `all` should be specified.","lastModifiedDate":"2023-09-24"},{"lineNumber":60,"author":{"gitId":"kiatkat"},"content":"- If a number is specified, ensure that it is parseable as an integer, and is between 1 and the size of the Task List.","lastModifiedDate":"2023-09-24"},{"lineNumber":61,"author":{"gitId":"kiatkat"},"content":"- If `all` is specified, the entire Task List will be deleted.","lastModifiedDate":"2023-09-24"},{"lineNumber":62,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":63,"author":{"gitId":"kiatkat"},"content":"Examples:","lastModifiedDate":"2023-09-24"},{"lineNumber":64,"author":{"gitId":"kiatkat"},"content":"- `delete 3`","lastModifiedDate":"2023-09-24"},{"lineNumber":65,"author":{"gitId":"kiatkat"},"content":"- `delete all`","lastModifiedDate":"2023-09-24"},{"lineNumber":66,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":67,"author":{"gitId":"kiatkat"},"content":"### Marking a task as complete: `mark`","lastModifiedDate":"2023-09-24"},{"lineNumber":68,"author":{"gitId":"kiatkat"},"content":"Marks a specified task in the Task List as complete. If the Task is already marked as complete, PRTS will notify you.","lastModifiedDate":"2023-09-24"},{"lineNumber":69,"author":{"gitId":"kiatkat"},"content":"Format: `mark [index | \"all\"]`","lastModifiedDate":"2023-09-24"},{"lineNumber":70,"author":{"gitId":"kiatkat"},"content":"- Either a number or the word `all` should be specified.","lastModifiedDate":"2023-09-24"},{"lineNumber":71,"author":{"gitId":"kiatkat"},"content":"- If a number is specified, ensure that it is parseable as an integer, and is between 1 and the size of the Task List.","lastModifiedDate":"2023-09-24"},{"lineNumber":72,"author":{"gitId":"kiatkat"},"content":"- If `all` is specified, the entire Task List will be deleted.","lastModifiedDate":"2023-09-24"},{"lineNumber":73,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":74,"author":{"gitId":"kiatkat"},"content":"Examples:","lastModifiedDate":"2023-09-24"},{"lineNumber":75,"author":{"gitId":"kiatkat"},"content":"- `mark 3`","lastModifiedDate":"2023-09-24"},{"lineNumber":76,"author":{"gitId":"kiatkat"},"content":"- `mark all`","lastModifiedDate":"2023-09-24"},{"lineNumber":77,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":78,"author":{"gitId":"kiatkat"},"content":"### Marking a task as incomplete: `mark`","lastModifiedDate":"2023-09-24"},{"lineNumber":79,"author":{"gitId":"kiatkat"},"content":"Marks a specified task in the Task List as incomplete. If the Task is already marked as incomplete, PRTS will notify you.","lastModifiedDate":"2023-09-24"},{"lineNumber":80,"author":{"gitId":"kiatkat"},"content":"Format: `mark [index | \"all\"]`","lastModifiedDate":"2023-09-24"},{"lineNumber":81,"author":{"gitId":"kiatkat"},"content":"- Either a number or the word `all` should be specified.","lastModifiedDate":"2023-09-24"},{"lineNumber":82,"author":{"gitId":"kiatkat"},"content":"- If a number is specified, ensure that it is parseable as an integer, and is between 1 and the size of the Task List.","lastModifiedDate":"2023-09-24"},{"lineNumber":83,"author":{"gitId":"kiatkat"},"content":"- If `all` is specified, the entire Task List will be deleted.","lastModifiedDate":"2023-09-24"},{"lineNumber":84,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":85,"author":{"gitId":"kiatkat"},"content":"Examples:","lastModifiedDate":"2023-09-24"},{"lineNumber":86,"author":{"gitId":"kiatkat"},"content":"- `unmark 3`","lastModifiedDate":"2023-09-24"},{"lineNumber":87,"author":{"gitId":"kiatkat"},"content":"- `unmark all`","lastModifiedDate":"2023-09-24"},{"lineNumber":88,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":89,"author":{"gitId":"kiatkat"},"content":"### Finding a search term: `find`","lastModifiedDate":"2023-09-24"},{"lineNumber":90,"author":{"gitId":"kiatkat"},"content":"Searches the Tasks in the Task List for a given search term.","lastModifiedDate":"2023-09-24"},{"lineNumber":91,"author":{"gitId":"kiatkat"},"content":"Format: `find [searchTerm]`","lastModifiedDate":"2023-09-24"},{"lineNumber":92,"author":{"gitId":"kiatkat"},"content":"- For Deadlines and Events, this *will* search the date fields as well.","lastModifiedDate":"2023-09-24"},{"lineNumber":93,"author":{"gitId":"kiatkat"},"content":"- `[searchTerm]` can be of any length, but will not be parsed for individual words - returned results must contain the ","lastModifiedDate":"2023-09-24"},{"lineNumber":94,"author":{"gitId":"kiatkat"},"content":"entire term verbatim.","lastModifiedDate":"2023-09-24"},{"lineNumber":95,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":96,"author":{"gitId":"kiatkat"},"content":"### Undo last command: `undo`","lastModifiedDate":"2023-09-24"},{"lineNumber":97,"author":{"gitId":"kiatkat"},"content":"Undoes the last one or more commands input by the user that affected the state of the Task List.","lastModifiedDate":"2023-09-24"},{"lineNumber":98,"author":{"gitId":"kiatkat"},"content":"Format: `undo [count | \"all\"]`","lastModifiedDate":"2023-09-24"},{"lineNumber":99,"author":{"gitId":"kiatkat"},"content":"- The `count | \"all\"` field is *optional*.","lastModifiedDate":"2023-09-24"},{"lineNumber":100,"author":{"gitId":"kiatkat"},"content":"  - If this field is omitted, i.e. the command provided is `undo`, it will be treated as equivalent to `undo 1`.","lastModifiedDate":"2023-09-24"},{"lineNumber":101,"author":{"gitId":"kiatkat"},"content":"- `count` indicates the number of commands to revert.","lastModifiedDate":"2023-09-24"},{"lineNumber":102,"author":{"gitId":"kiatkat"},"content":"- Using the word `all` will undo ***all*** commands since the start of the session!","lastModifiedDate":"2023-09-24"},{"lineNumber":103,"author":{"gitId":"kiatkat"},"content":"  - **There is no way to undo an undo, so be careful about using this!**","lastModifiedDate":"2023-09-24"},{"lineNumber":104,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":105,"author":{"gitId":"kiatkat"},"content":"### Exiting the program: `bye`","lastModifiedDate":"2023-09-24"},{"lineNumber":106,"author":{"gitId":"kiatkat"},"content":"Exits the program immediately. The Task List will be saved.","lastModifiedDate":"2023-09-24"},{"lineNumber":107,"author":{"gitId":"kiatkat"},"content":"- As long as the command begins with the word `bye`, this command will execute, even if this is not the only word in ","lastModifiedDate":"2023-09-24"},{"lineNumber":108,"author":{"gitId":"kiatkat"},"content":"that input.","lastModifiedDate":"2023-09-24"},{"lineNumber":109,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":110,"author":{"gitId":"kiatkat"},"content":"### Flavor text:","lastModifiedDate":"2023-09-24"},{"lineNumber":111,"author":{"gitId":"kiatkat"},"content":"There are some keywords currently implemented that will cause PRTS to respond in unique ways! See if you can find them!","lastModifiedDate":"2023-09-24"},{"lineNumber":112,"author":{"gitId":"kiatkat"},"content":"There will be more to come!","lastModifiedDate":"2023-09-24"}],"authorContributionMap":{"kiatkat":112}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"checkstyle {","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"kiatkat"},"content":"    mainClass.set(\"prts.gui.Launcher\")","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"kiatkat"},"content":"    archiveBaseName \u003d \"prts\"","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"kiatkat"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kiatkat":23,"-":40}},{"path":"src/main/java/prts/CreateNewSaveException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":" * Signals that the save file had failed to load, and so a new save had to be created.","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"public class CreateNewSaveException extends PrtsException {","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"     * Constructs a CreateNewSaveException.","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"    public CreateNewSaveException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"        super(\"File failed to load, created new save file.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kiatkat":15}},{"path":"src/main/java/prts/History.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts;","lastModifiedDate":"2023-09-24"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-24"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-24"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":" * Represents a history of the past TaskLists made at any point by the user, in the current session.","lastModifiedDate":"2023-09-24"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":" * Is added to by commands that modify the TaskList (Add, Delete, Mark, Unmark, Undo) and is used","lastModifiedDate":"2023-09-24"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":" * by Undo to retrieve past states.","lastModifiedDate":"2023-09-24"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-24"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"public class History {","lastModifiedDate":"2023-09-24"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"     * ArrayList that maintains the past states.","lastModifiedDate":"2023-09-24"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"    private final ArrayList\u003cTaskList\u003e history;","lastModifiedDate":"2023-09-24"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"    public History() {","lastModifiedDate":"2023-09-24"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"        history \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-24"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"     * Adds a TaskList to the list of previous states.","lastModifiedDate":"2023-09-24"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"     * @param taskList The TaskList to be stored.","lastModifiedDate":"2023-09-24"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"    public void addToHistory(TaskList taskList) {","lastModifiedDate":"2023-09-24"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"        if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2023-09-24"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"            history.add(new TaskList());","lastModifiedDate":"2023-09-24"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"        } else {","lastModifiedDate":"2023-09-24"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"            history.add(new TaskList(taskList));","lastModifiedDate":"2023-09-24"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"     * Undoes one or more commands the user has input in the current session.","lastModifiedDate":"2023-09-24"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"     * @param undoCount The number of commands to undo. If the input is null, undoes all past inputs.","lastModifiedDate":"2023-09-24"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"     * @param taskList The main TaskList of the program.","lastModifiedDate":"2023-09-24"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"     * @return The acknowledgement message to be displayed to the user.","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"    public String undo(Integer undoCount, TaskList taskList) throws OutOfRangeException {","lastModifiedDate":"2023-09-24"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"        if (undoCount \u003d\u003d null) {","lastModifiedDate":"2023-09-24"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"            taskList.mirror(history.get(0));","lastModifiedDate":"2023-09-24"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"            history.subList(1, history.size()).clear();","lastModifiedDate":"2023-09-24"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"            return \"All actions undone.\";","lastModifiedDate":"2023-09-24"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"        int undoIndex \u003d history.size() - undoCount - 1;","lastModifiedDate":"2023-09-24"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"        if (undoCount \u003c\u003d 0 || undoIndex \u003c 0) {","lastModifiedDate":"2023-09-24"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"            throw new OutOfRangeException();","lastModifiedDate":"2023-09-24"},{"lineNumber":49,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":50,"author":{"gitId":"kiatkat"},"content":"        taskList.mirror(history.get(undoIndex));","lastModifiedDate":"2023-09-24"},{"lineNumber":51,"author":{"gitId":"kiatkat"},"content":"        if (history.size() \u003e undoIndex) {","lastModifiedDate":"2023-09-24"},{"lineNumber":52,"author":{"gitId":"kiatkat"},"content":"            history.subList(undoIndex + 1, history.size()).clear();","lastModifiedDate":"2023-09-24"},{"lineNumber":53,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":54,"author":{"gitId":"kiatkat"},"content":"        return undoCount + \" actions undone.\";","lastModifiedDate":"2023-09-24"},{"lineNumber":55,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":56,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":57,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":58,"author":{"gitId":"kiatkat"},"content":"     * Returns a string representation of the history.","lastModifiedDate":"2023-09-24"},{"lineNumber":59,"author":{"gitId":"kiatkat"},"content":"     * @return A string representation of the history.","lastModifiedDate":"2023-09-24"},{"lineNumber":60,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":61,"author":{"gitId":"kiatkat"},"content":"    public String toString() {","lastModifiedDate":"2023-09-24"},{"lineNumber":62,"author":{"gitId":"kiatkat"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-09-24"},{"lineNumber":63,"author":{"gitId":"kiatkat"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-09-24"},{"lineNumber":64,"author":{"gitId":"kiatkat"},"content":"        for (TaskList taskList : history) {","lastModifiedDate":"2023-09-24"},{"lineNumber":65,"author":{"gitId":"kiatkat"},"content":"            stringBuilder.append(\"index \");","lastModifiedDate":"2023-09-24"},{"lineNumber":66,"author":{"gitId":"kiatkat"},"content":"            stringBuilder.append(i);","lastModifiedDate":"2023-09-24"},{"lineNumber":67,"author":{"gitId":"kiatkat"},"content":"            stringBuilder.append(\": \");","lastModifiedDate":"2023-09-24"},{"lineNumber":68,"author":{"gitId":"kiatkat"},"content":"            stringBuilder.append(taskList);","lastModifiedDate":"2023-09-24"},{"lineNumber":69,"author":{"gitId":"kiatkat"},"content":"            stringBuilder.append(\"\\n\");","lastModifiedDate":"2023-09-24"},{"lineNumber":70,"author":{"gitId":"kiatkat"},"content":"            i++;","lastModifiedDate":"2023-09-24"},{"lineNumber":71,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":72,"author":{"gitId":"kiatkat"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-09-24"},{"lineNumber":73,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":74,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":75,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-24"}],"authorContributionMap":{"kiatkat":75}},{"path":"src/main/java/prts/NewSaveFailedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":" * Signals that the save file failed to load, and furthermore, that PRTS attempted to create a new","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":" * save file, but failed.","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"public class NewSaveFailedException extends PrtsException {","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"     * Constructs a NewSaveFailedException.","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"    public NewSaveFailedException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"        super(\"Failed to load save file, new save file could not be created.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kiatkat":15}},{"path":"src/main/java/prts/OutOfRangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":" * Signals that the input value is out of range of the list.","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"public class OutOfRangeException extends PrtsException {","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"     * Constructs a OutOfRangeException.","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"    public OutOfRangeException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"        super(\"Please provide a number within range.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kiatkat":15}},{"path":"src/main/java/prts/Prts.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import prts.command.Command;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import prts.command.CommandParser;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":" * A chatbot and to-do list that can receive text input from the user, parse it, and execute","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":" * predefined commands.","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"public class Prts {","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"    private final Storage storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"    private final Ui ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"    private final History history;","lastModifiedDate":"2023-09-24"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"    private String fileName \u003d \"prts.PRTS.txt\";","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"    private String[] directories \u003d {\"data\"};","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"     * Constructs a PRTS object, and initializes its fields.","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"    public Prts() {","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"        history \u003d new History();","lastModifiedDate":"2023-09-24"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"        storage \u003d new Storage(fileName, directories);","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"            tasks \u003d storage.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"        } catch (CreateNewSaveException | NewSaveFailedException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"            ui.displayMessage(e.getMessage());","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"        history.addToHistory(tasks);","lastModifiedDate":"2023-09-24"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"     * Retrives the initialization message played when PRTS starts up.","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"     * @return The message to be displayed.","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"    public String getInitialMessage() {","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"        return ui.showWelcome();","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"     * Generates a response to the user input.","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"kiatkat"},"content":"            Command c \u003d CommandParser.parse(input);","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"kiatkat"},"content":"            if (c.isExit()) {","lastModifiedDate":"2023-09-22"},{"lineNumber":51,"author":{"gitId":"kiatkat"},"content":"                System.exit(0);","lastModifiedDate":"2023-09-22"},{"lineNumber":52,"author":{"gitId":"kiatkat"},"content":"            }","lastModifiedDate":"2023-09-22"},{"lineNumber":53,"author":{"gitId":"kiatkat"},"content":"            return c.execute(tasks, ui, storage, history);","lastModifiedDate":"2023-09-24"},{"lineNumber":54,"author":{"gitId":"kiatkat"},"content":"        } catch (PrtsException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"kiatkat"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kiatkat":59,"-":1}},{"path":"src/main/java/prts/PrtsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":" * A general exception for any errors that PRTS may encounter in its execution. All other custom","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":" * exceptions in PRTS extend from this class.","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"public class PrtsException extends Exception {","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"     * Constructs a PrtsException object.","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"    public PrtsException(String message) {","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"        super(message);","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kiatkat":17}},{"path":"src/main/java/prts/SaveToFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":" * Signals that an error occurred attempting to save the state of the TaskList to the save file.","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"public class SaveToFileException extends PrtsException {","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"     * Constructs a SaveToFileException.","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"    public SaveToFileException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"        super(\"Failed to save to save file.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kiatkat":15}},{"path":"src/main/java/prts/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import java.io.File;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":" * The class responsible for dealing with saving and loading the state of the TaskList to and from","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":" * a save file on the user\u0027s hard disk.","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"public class Storage {","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"    private File saveFile;","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"     * Constructs a Storage object. In addition, verifies if the specified file path for the save file","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"     * exists. If it does not exist, creates the necessary directory/directories and file.","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"     * @param fileName The name of the desired save file.","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"     * @param directories One or more desired directory names, to specify the path where the file","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"     *                    should be stored in. These extend off of \u003ccode\u003eSystem.getProperty(user.dir)","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"     *                    \u003c/code\u003e.","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"    public Storage(String fileName, String[] directories) {","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"        Path fileDirectoryPath \u003d Path.of(System.getProperty(\"user.dir\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"        File saveFileDirectory;","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"        for (String directory : directories) {","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"            fileDirectoryPath \u003d Paths.get(fileDirectoryPath.toString(), directory);","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"            saveFileDirectory \u003d new File(fileDirectoryPath.toUri());","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"            if (saveFileDirectory.exists()) {","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"                continue;","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"            if (saveFileDirectory.mkdir()) {","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"                System.out.println(\"Directory \" + fileDirectoryPath.toString() + \" created.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"        Path filePath \u003d Paths.get(fileDirectoryPath.toString(), fileName);","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"        saveFile \u003d new File(filePath.toUri());","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"        if (!saveFile.exists()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"            try {","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"                if (saveFile.createNewFile()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"kiatkat"},"content":"                    System.out.println(\"Save file could not be located, new file created\");","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"kiatkat"},"content":"                }","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"kiatkat"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"kiatkat"},"content":"                System.out.println(\"Error creating save file: \" + e.getMessage());","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"kiatkat"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"kiatkat"},"content":"     * Attempts to load the TaskList from the save file.","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"kiatkat"},"content":"     * @return The loaded TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"kiatkat"},"content":"     * @throws CreateNewSaveException If the file could not be located or read, and a new save file","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"kiatkat"},"content":"     *         was created.","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"kiatkat"},"content":"     * @throws NewSaveFailedException If the file could not be located or read, and a new save file","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"kiatkat"},"content":"     *         could not be created.","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"kiatkat"},"content":"    public TaskList load() throws CreateNewSaveException, NewSaveFailedException {","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"kiatkat"},"content":"        if (saveFile.length() \u003d\u003d 0) {","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"kiatkat"},"content":"            return new TaskList();","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"kiatkat"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"kiatkat"},"content":"            FileInputStream fis \u003d new FileInputStream(saveFile);","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"kiatkat"},"content":"            ObjectInputStream ois \u003d new ObjectInputStream(fis);","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"kiatkat"},"content":"            TaskList tasks \u003d (TaskList) ois.readObject();","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"kiatkat"},"content":"            ois.close();","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"kiatkat"},"content":"            return tasks;","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"kiatkat"},"content":"        } catch (IOException | ClassNotFoundException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"kiatkat"},"content":"            saveFile.delete();","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"kiatkat"},"content":"            try {","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"kiatkat"},"content":"                saveFile.createNewFile();","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"kiatkat"},"content":"                throw new CreateNewSaveException();","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"kiatkat"},"content":"            } catch (IOException ee) {","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"kiatkat"},"content":"                throw new NewSaveFailedException();","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"kiatkat"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"kiatkat"},"content":"     * Attempts to save the TaskList to the save file.","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"kiatkat"},"content":"     * @param tasks The current TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"kiatkat"},"content":"     * @throws SaveToFileException If the TaskList could not be successfully saved to the file.","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"kiatkat"},"content":"    public void save(TaskList tasks) throws SaveToFileException {","lastModifiedDate":"2023-09-07"},{"lineNumber":96,"author":{"gitId":"kiatkat"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"kiatkat"},"content":"            FileOutputStream fos \u003d new FileOutputStream(saveFile);","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"kiatkat"},"content":"            ObjectOutputStream oos \u003d new ObjectOutputStream(fos);","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"kiatkat"},"content":"            oos.writeObject(tasks);","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"kiatkat"},"content":"            oos.close();","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"kiatkat"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"kiatkat"},"content":"            throw new SaveToFileException();","lastModifiedDate":"2023-09-07"},{"lineNumber":103,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"kiatkat":106}},{"path":"src/main/java/prts/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import prts.task.AlreadyMarkedException;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import prts.task.AlreadyUnmarkedException;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import prts.task.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":" * Represents the list of Tasks the user has added in PRTS, and manages all modifications to this list.","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"public class TaskList implements Serializable {","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-24"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"     * Constructs a new, empty TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"     * Constructor that creates a deep copy of the input parameter.","lastModifiedDate":"2023-09-24"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"     * @param taskList The tasklist to copy.","lastModifiedDate":"2023-09-24"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"    public TaskList(TaskList taskList) {","lastModifiedDate":"2023-09-24"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"        this.tasks.addAll(taskList.tasks);","lastModifiedDate":"2023-09-24"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"     * Adds a new Task to the list.","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"     * @param task The Task to be added to the list.","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"     * @return A message to be displayed to the user as acknowledgement and indication of successful","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"     *         execution.","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"    public String add(Task task) {","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"        assert task !\u003d null : \"Task cannot be null!\";","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"        return task.getAddMessage() + \"\\n\" + task;","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"     * Deletes a Task from the list.","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"     * @param index The index of the Task to be deleted from the list.","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"     *              This is a number from 1 to the size of the list, or null if all items should be","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"     *              deleted.","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"kiatkat"},"content":"     * @return A message to be displayed to the user as acknowledgement and indication of successful","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"kiatkat"},"content":"     *         execution.","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"kiatkat"},"content":"     * @throws OutOfRangeException If the index provided is 0 or less, or greater than the size of","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"kiatkat"},"content":"     *         the list.","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"kiatkat"},"content":"    public String delete(Integer index) throws OutOfRangeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"kiatkat"},"content":"        if (index \u003d\u003d null) {","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"kiatkat"},"content":"            tasks.clear();","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"kiatkat"},"content":"            return \"Your task list has been cleared.\";","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"kiatkat"},"content":"        int i \u003d index - 1;","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"kiatkat"},"content":"        if (i \u003c 0 || i \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-09-24"},{"lineNumber":64,"author":{"gitId":"kiatkat"},"content":"            throw new OutOfRangeException();","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"kiatkat"},"content":"        Task task \u003d tasks.remove(i);","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"kiatkat"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"kiatkat"},"content":"        builder.append(\"As you wish. This task has been removed:\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"kiatkat"},"content":"        builder.append(task.toString());","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"kiatkat"},"content":"        builder.append(\"\\nYou now have \");","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"kiatkat"},"content":"        builder.append(tasks.size());","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"kiatkat"},"content":"        builder.append(\" tasks in your list.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"kiatkat"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"kiatkat"},"content":"            builder.append(\"\\nCongratulations!\");","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"kiatkat"},"content":"        return builder.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"kiatkat"},"content":"     * Marks an item in the list as done.","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"kiatkat"},"content":"     * @param index The index of the Task in the list to be marked.","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"kiatkat"},"content":"     *              This is a number from 1 to the size of the list, or null if all items should be","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"kiatkat"},"content":"     *              marked.","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"kiatkat"},"content":"     * @return A message to be displayed to the user as acknowledgement and indication of successful","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"kiatkat"},"content":"     *         execution.","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"kiatkat"},"content":"     * @throws OutOfRangeException If the index provided is 0 or less, or greater than the size of","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"kiatkat"},"content":"     *         the list.","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"kiatkat"},"content":"     * @throws AlreadyMarkedException If the item to be marked is already marked.","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"kiatkat"},"content":"    public String mark(Integer index) throws OutOfRangeException, AlreadyMarkedException {","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"kiatkat"},"content":"        if (index \u003d\u003d null) {","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"kiatkat"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"kiatkat"},"content":"                try {","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"kiatkat"},"content":"                    task.markDone();","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"kiatkat"},"content":"                } catch (AlreadyMarkedException ignored) {","lastModifiedDate":"2023-09-07"},{"lineNumber":101,"author":{"gitId":"kiatkat"},"content":"                    /*All AlreadyMarkedExceptions here can be safely ignored, as they are custom","lastModifiedDate":"2023-09-10"},{"lineNumber":102,"author":{"gitId":"kiatkat"},"content":"                    exceptions used to indicate to the user that they\u0027re marking a marked task.","lastModifiedDate":"2023-09-10"},{"lineNumber":103,"author":{"gitId":"kiatkat"},"content":"                    We don\u0027t want to display a bunch of exceptions in this case.*/","lastModifiedDate":"2023-09-10"},{"lineNumber":104,"author":{"gitId":"kiatkat"},"content":"                }","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"kiatkat"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"kiatkat"},"content":"            return \"All done.\";","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"kiatkat"},"content":"        int i \u003d index - 1;","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"kiatkat"},"content":"        if (i \u003c 0 || i \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"kiatkat"},"content":"            throw new OutOfRangeException();","lastModifiedDate":"2023-09-24"},{"lineNumber":113,"author":{"gitId":"kiatkat"},"content":"        } else {","lastModifiedDate":"2023-09-24"},{"lineNumber":114,"author":{"gitId":"kiatkat"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"kiatkat"},"content":"            task.markDone();","lastModifiedDate":"2023-09-05"},{"lineNumber":116,"author":{"gitId":"kiatkat"},"content":"            return \"Mission accomplished.\\n\" + task.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":122,"author":{"gitId":"kiatkat"},"content":"     * Marks an item in the list as not yet done.","lastModifiedDate":"2023-09-07"},{"lineNumber":123,"author":{"gitId":"kiatkat"},"content":"     * @param index The index of the Task in the list to be unmarked.","lastModifiedDate":"2023-09-07"},{"lineNumber":124,"author":{"gitId":"kiatkat"},"content":"     *              This is a number from 1 to the size of the list, or null if all items should be","lastModifiedDate":"2023-09-07"},{"lineNumber":125,"author":{"gitId":"kiatkat"},"content":"     *              unmarked.","lastModifiedDate":"2023-09-07"},{"lineNumber":126,"author":{"gitId":"kiatkat"},"content":"     * @return A message to be displayed to the user as acknowledgement and indication of successful","lastModifiedDate":"2023-09-07"},{"lineNumber":127,"author":{"gitId":"kiatkat"},"content":"     *         execution.","lastModifiedDate":"2023-09-07"},{"lineNumber":128,"author":{"gitId":"kiatkat"},"content":"     * @throws OutOfRangeException If the index provided is 0 or less, or greater than the size of","lastModifiedDate":"2023-09-07"},{"lineNumber":129,"author":{"gitId":"kiatkat"},"content":"     *         the list.","lastModifiedDate":"2023-09-07"},{"lineNumber":130,"author":{"gitId":"kiatkat"},"content":"     * @throws AlreadyUnmarkedException If the item to be unmarked is already unmarked.","lastModifiedDate":"2023-09-07"},{"lineNumber":131,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":132,"author":{"gitId":"kiatkat"},"content":"    public String unmark(Integer index) throws OutOfRangeException, AlreadyUnmarkedException {","lastModifiedDate":"2023-09-07"},{"lineNumber":133,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":134,"author":{"gitId":"kiatkat"},"content":"        if (index \u003d\u003d null) {","lastModifiedDate":"2023-09-05"},{"lineNumber":135,"author":{"gitId":"kiatkat"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-09-05"},{"lineNumber":136,"author":{"gitId":"kiatkat"},"content":"                try {","lastModifiedDate":"2023-09-05"},{"lineNumber":137,"author":{"gitId":"kiatkat"},"content":"                    task.markUndone();","lastModifiedDate":"2023-09-05"},{"lineNumber":138,"author":{"gitId":"kiatkat"},"content":"                } catch (AlreadyUnmarkedException ignored) {","lastModifiedDate":"2023-09-07"},{"lineNumber":139,"author":{"gitId":"kiatkat"},"content":"                    /*All AlreadyUnmarkedExceptions here can be safely ignored, as they are custom","lastModifiedDate":"2023-09-10"},{"lineNumber":140,"author":{"gitId":"kiatkat"},"content":"                    exceptions used to indicate to the user that they\u0027re unmarking an unmarked task.","lastModifiedDate":"2023-09-10"},{"lineNumber":141,"author":{"gitId":"kiatkat"},"content":"                    We don\u0027t want to display a bunch of exceptions in this case.*/","lastModifiedDate":"2023-09-10"},{"lineNumber":142,"author":{"gitId":"kiatkat"},"content":"                }","lastModifiedDate":"2023-09-05"},{"lineNumber":143,"author":{"gitId":"kiatkat"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":144,"author":{"gitId":"kiatkat"},"content":"            return \"All undone.\";","lastModifiedDate":"2023-09-05"},{"lineNumber":145,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":146,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":147,"author":{"gitId":"kiatkat"},"content":"        int i \u003d index - 1;","lastModifiedDate":"2023-09-07"},{"lineNumber":148,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":149,"author":{"gitId":"kiatkat"},"content":"        if (i \u003c 0 || i \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":150,"author":{"gitId":"kiatkat"},"content":"            throw new OutOfRangeException();","lastModifiedDate":"2023-09-24"},{"lineNumber":151,"author":{"gitId":"kiatkat"},"content":"        } else {","lastModifiedDate":"2023-09-24"},{"lineNumber":152,"author":{"gitId":"kiatkat"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-09-05"},{"lineNumber":153,"author":{"gitId":"kiatkat"},"content":"            task.markUndone();","lastModifiedDate":"2023-09-07"},{"lineNumber":154,"author":{"gitId":"kiatkat"},"content":"            return \"Uncharacteristic of you. More work has been added to the pile.\\n\" + task.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":155,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":156,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":157,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":158,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":159,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":160,"author":{"gitId":"kiatkat"},"content":"     * Returns a message depending on whether the list is empty. For personality only.","lastModifiedDate":"2023-09-07"},{"lineNumber":161,"author":{"gitId":"kiatkat"},"content":"     * @return A preset message.","lastModifiedDate":"2023-09-07"},{"lineNumber":162,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":163,"author":{"gitId":"kiatkat"},"content":"    public String docRest() {","lastModifiedDate":"2023-09-05"},{"lineNumber":164,"author":{"gitId":"kiatkat"},"content":"        boolean areAllTasksDone \u003d true;","lastModifiedDate":"2023-09-24"},{"lineNumber":165,"author":{"gitId":"kiatkat"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-24"},{"lineNumber":166,"author":{"gitId":"kiatkat"},"content":"            if (!task.isDone()) {","lastModifiedDate":"2023-09-24"},{"lineNumber":167,"author":{"gitId":"kiatkat"},"content":"                areAllTasksDone \u003d false;","lastModifiedDate":"2023-09-24"},{"lineNumber":168,"author":{"gitId":"kiatkat"},"content":"                break;","lastModifiedDate":"2023-09-24"},{"lineNumber":169,"author":{"gitId":"kiatkat"},"content":"            }","lastModifiedDate":"2023-09-24"},{"lineNumber":170,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":171,"author":{"gitId":"kiatkat"},"content":"        if (areAllTasksDone) {","lastModifiedDate":"2023-09-24"},{"lineNumber":172,"author":{"gitId":"kiatkat"},"content":"            return \"How\u0027d you even sleep while standing up... well, have a good rest.\";","lastModifiedDate":"2023-09-08"},{"lineNumber":173,"author":{"gitId":"kiatkat"},"content":"        } else {","lastModifiedDate":"2023-09-05"},{"lineNumber":174,"author":{"gitId":"kiatkat"},"content":"            return \"There\u0027s still lots of work that needs to be done. \"","lastModifiedDate":"2023-09-08"},{"lineNumber":175,"author":{"gitId":"kiatkat"},"content":"                    + \"We can\u0027t afford to have you resting.\";","lastModifiedDate":"2023-09-08"},{"lineNumber":176,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":177,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":178,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":179,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":180,"author":{"gitId":"kiatkat"},"content":"     * Returns the number of items in the list.","lastModifiedDate":"2023-09-07"},{"lineNumber":181,"author":{"gitId":"kiatkat"},"content":"     * @return The number of items in the list.","lastModifiedDate":"2023-09-07"},{"lineNumber":182,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":183,"author":{"gitId":"kiatkat"},"content":"    public int getSize() {","lastModifiedDate":"2023-09-05"},{"lineNumber":184,"author":{"gitId":"kiatkat"},"content":"        return tasks.size();","lastModifiedDate":"2023-09-05"},{"lineNumber":185,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":186,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":187,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":188,"author":{"gitId":"kiatkat"},"content":"     * Returns a string representation of the task list.","lastModifiedDate":"2023-09-07"},{"lineNumber":189,"author":{"gitId":"kiatkat"},"content":"     * @return the string representation of the task list.","lastModifiedDate":"2023-09-07"},{"lineNumber":190,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":191,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":192,"author":{"gitId":"kiatkat"},"content":"    public String toString() {","lastModifiedDate":"2023-09-05"},{"lineNumber":193,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":194,"author":{"gitId":"kiatkat"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":195,"author":{"gitId":"kiatkat"},"content":"            return \"...\\n\" + \"You don\u0027t have any tasks. Enjoy your day off.\";","lastModifiedDate":"2023-09-05"},{"lineNumber":196,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":197,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":198,"author":{"gitId":"kiatkat"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-09-05"},{"lineNumber":199,"author":{"gitId":"kiatkat"},"content":"        output.append(\"\\n\");","lastModifiedDate":"2023-09-24"},{"lineNumber":200,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":201,"author":{"gitId":"kiatkat"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-05"},{"lineNumber":202,"author":{"gitId":"kiatkat"},"content":"            output.append(i + 1).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":203,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":204,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":205,"author":{"gitId":"kiatkat"},"content":"        return output.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":206,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":207,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":208,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":209,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":210,"author":{"gitId":"kiatkat"},"content":"     * Searches through the list for all tasks containing the given string.","lastModifiedDate":"2023-09-07"},{"lineNumber":211,"author":{"gitId":"kiatkat"},"content":"     * @param searchTerm The term(s) to search for.","lastModifiedDate":"2023-09-07"},{"lineNumber":212,"author":{"gitId":"kiatkat"},"content":"     * @return A list of the tasks that contain the search term.","lastModifiedDate":"2023-09-07"},{"lineNumber":213,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":214,"author":{"gitId":"kiatkat"},"content":"    public String find(String searchTerm) {","lastModifiedDate":"2023-09-07"},{"lineNumber":215,"author":{"gitId":"kiatkat"},"content":"        assert searchTerm !\u003d null : \"The search term should not be null!\";","lastModifiedDate":"2023-09-10"},{"lineNumber":216,"author":{"gitId":"kiatkat"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-09-07"},{"lineNumber":217,"author":{"gitId":"kiatkat"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-07"},{"lineNumber":218,"author":{"gitId":"kiatkat"},"content":"            if (!task.contains(searchTerm)) {","lastModifiedDate":"2023-09-10"},{"lineNumber":219,"author":{"gitId":"kiatkat"},"content":"                continue;","lastModifiedDate":"2023-09-10"},{"lineNumber":220,"author":{"gitId":"kiatkat"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":221,"author":{"gitId":"kiatkat"},"content":"            stringBuilder.append(task.toString());","lastModifiedDate":"2023-09-07"},{"lineNumber":222,"author":{"gitId":"kiatkat"},"content":"            stringBuilder.append(\"\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":223,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":224,"author":{"gitId":"kiatkat"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":225,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":226,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":227,"author":{"gitId":"kiatkat"},"content":"    public void mirror(TaskList taskList) {","lastModifiedDate":"2023-09-24"},{"lineNumber":228,"author":{"gitId":"kiatkat"},"content":"        this.tasks \u003d taskList.tasks;","lastModifiedDate":"2023-09-24"},{"lineNumber":229,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":230,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":231,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"kiatkat":231}},{"path":"src/main/java/prts/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":" * The class responsible for all interaction with the user. User input and almost all program","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":" * output is managed by this class.","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"public class Ui {","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"    private final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"     * Displays the initial message on startup.","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"    public static String showWelcome() {","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"        return \"\\n...Fingerprint match found. Verification complete. Welcome home.\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"                + \"PRTS, at your service. What would you like to do today?\\n\";","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"     * Displays the farewell message upon exiting the program.","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"    public String showGoodbye() {","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"        return \"Farewell. See you again soon.\\n\";","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"     * Lists the current Tasks stored in the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"     * @param tasks The current state of the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"    public String listTasks(TaskList tasks) {","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"        assert tasks !\u003d null : \"The tasklist cannot be null!\";","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"        return \"Here are your tasks for today.\" + tasks + \"You now have \"","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"                + tasks.getSize() + \" tasks in your list.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"     * Prints a message to System.out.","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"    public void displayMessage(String message) {","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"        System.out.println(message);","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"kiatkat":48}},{"path":"src/main/java/prts/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import prts.History;","lastModifiedDate":"2023-09-24"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import prts.SaveToFileException;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import prts.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import prts.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import prts.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import prts.task.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":" * The general command used for adding a Task to the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":" * This Task can be any of the Task types.","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"    private Task taskToAdd;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"     * Constructs the AddCommand object with the Task to be added to the list.","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"        this.taskToAdd \u003d task;","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"     * Executes the addition of the Task to the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"     * @param tasks   The list of tasks currently stored.","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"     * @param ui      The UI object stored by PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"     * @param storage The Storage object stored by PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"     * @param history The history of past TaskLists stored by PRTS.","lastModifiedDate":"2023-09-24"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"     * @return The string to be displayed to the user upon successful execution.","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"     * @throws SaveToFileException If the Storage object fails to save the state of the TaskList","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"     *                             after the addition of the Task.","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage, History history) throws SaveToFileException {","lastModifiedDate":"2023-09-24"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"        String string \u003d tasks.add(taskToAdd);","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"        history.addToHistory(tasks);","lastModifiedDate":"2023-09-24"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"        return string;","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kiatkat":44}},{"path":"src/main/java/prts/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import prts.History;","lastModifiedDate":"2023-09-24"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import prts.OutOfRangeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import prts.SaveToFileException;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import prts.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import prts.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import prts.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import prts.task.AlreadyMarkedException;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import prts.task.AlreadyUnmarkedException;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":" * Represents a general command that the user has input to PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"     * Executes the command given by the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"     *","lastModifiedDate":"2023-09-24"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"     * @param tasks   The list of tasks currently stored.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"     * @param ui      The UI object stored by PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"     * @param storage The Storage object stored by PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"     * @param history The history of past TaskLists stored by PRTS.","lastModifiedDate":"2023-09-24"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"     * @return The string to be displayed to the user upon successful execution.","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"     * @throws SaveToFileException      If the program fails to save the state of the TaskList to the save","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"     *                                  file after the execution of TaskList-modifying commands.","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"     * @throws OutOfRangeException      If the execution encounters user input that falls outside valid ranges.","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"     * @throws AlreadyMarkedException   If the Task being marked is already marked.","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"     * @throws AlreadyUnmarkedException If the Task being unmarked is already unmarked.","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage, History history) throws SaveToFileException,","lastModifiedDate":"2023-09-24"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"            OutOfRangeException, AlreadyMarkedException, AlreadyUnmarkedException;","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"     * Returns true if the user command is to exit the program, and false otherwise.","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"     * @return true if this command is an ExitCommand, and false otherwise.","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"        return false;","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"    };","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kiatkat":42}},{"path":"src/main/java/prts/command/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import prts.task.Deadline;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import prts.task.Event;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import prts.task.Todo;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":" * The parser used to convert arbitrary user input into definite commands executable by PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":" * Specific keywords are required to signal to the CommandParser what command is input, and they must be","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":" * the first word input in the line.","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"public class CommandParser {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"     * Parses the user input, returning a Command.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"     * Recognizes predefined keywords if they occur at the start of the user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"     * Certain commands must follow predefined syntax to be parsed correctly.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"     * Whitespace is stripped and will not affect parsing.","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"     * @param fullCommand The raw user input received from the UI.","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"     * @return A Command that can be executed by PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"     * @throws ParsingException If an error is encountered when parsing user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"    public static Command parse(String fullCommand) throws ParsingException {","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"        // Splits the input to extract the user\u0027s primary command","lastModifiedDate":"2023-09-24"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"        // We cannot use splitAndStrip here as a single-word command is not improper format","lastModifiedDate":"2023-09-24"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"        String[] processedCommand \u003d fullCommand.strip().split(\" \", 2);","lastModifiedDate":"2023-09-24"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"        String command \u003d processedCommand[0].toLowerCase().strip();","lastModifiedDate":"2023-09-24"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"        String detail \u003d processedCommand.length \u003d\u003d 2 ? processedCommand[1].strip() : \"\";","lastModifiedDate":"2023-09-24"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"        switch (command) {","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"        case \"bye\":","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"            return addTodo(detail);","lastModifiedDate":"2023-09-24"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-24"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"            return addDeadline(detail);","lastModifiedDate":"2023-09-24"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"        case \"event\":","lastModifiedDate":"2023-09-24"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"            return addEvent(detail);","lastModifiedDate":"2023-09-24"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"        case \"mark\":","lastModifiedDate":"2023-09-24"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"            return markTask(detail);","lastModifiedDate":"2023-09-24"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"        case \"unmark\":","lastModifiedDate":"2023-09-24"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"            return unMarkTask(detail);","lastModifiedDate":"2023-09-24"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"        case \"list\":","lastModifiedDate":"2023-09-24"},{"lineNumber":49,"author":{"gitId":"kiatkat"},"content":"            return listTasks(detail);","lastModifiedDate":"2023-09-24"},{"lineNumber":50,"author":{"gitId":"kiatkat"},"content":"        case \"delete\":","lastModifiedDate":"2023-09-24"},{"lineNumber":51,"author":{"gitId":"kiatkat"},"content":"            return deleteTask(detail);","lastModifiedDate":"2023-09-24"},{"lineNumber":52,"author":{"gitId":"kiatkat"},"content":"        case \"find\":","lastModifiedDate":"2023-09-24"},{"lineNumber":53,"author":{"gitId":"kiatkat"},"content":"            return findTerm(detail);","lastModifiedDate":"2023-09-24"},{"lineNumber":54,"author":{"gitId":"kiatkat"},"content":"        case \"undo\":","lastModifiedDate":"2023-09-24"},{"lineNumber":55,"author":{"gitId":"kiatkat"},"content":"            return undoCommand(detail);","lastModifiedDate":"2023-09-24"},{"lineNumber":56,"author":{"gitId":"kiatkat"},"content":"        case \"thanks\":","lastModifiedDate":"2023-09-24"},{"lineNumber":57,"author":{"gitId":"kiatkat"},"content":"            return new MessageCommand(\"...No problem.\");","lastModifiedDate":"2023-09-24"},{"lineNumber":58,"author":{"gitId":"kiatkat"},"content":"        case \"zzz\":","lastModifiedDate":"2023-09-24"},{"lineNumber":59,"author":{"gitId":"kiatkat"},"content":"            return new DocRestCommand();","lastModifiedDate":"2023-09-24"},{"lineNumber":60,"author":{"gitId":"kiatkat"},"content":"        case \"hi\":","lastModifiedDate":"2023-09-24"},{"lineNumber":61,"author":{"gitId":"kiatkat"},"content":"            return new MessageCommand(\"Greetings.\");","lastModifiedDate":"2023-09-24"},{"lineNumber":62,"author":{"gitId":"kiatkat"},"content":"        default:","lastModifiedDate":"2023-09-24"},{"lineNumber":63,"author":{"gitId":"kiatkat"},"content":"            return new MessageCommand(\"Sorry, I didn\u0027t quite catch that. Are you having enough sleep?\");","lastModifiedDate":"2023-09-24"},{"lineNumber":64,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":65,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":66,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":67,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":68,"author":{"gitId":"kiatkat"},"content":"     * Splits a given string by a given regex, stripping the outputs of leading and trailing","lastModifiedDate":"2023-09-24"},{"lineNumber":69,"author":{"gitId":"kiatkat"},"content":"     * whitespace. The string is only split once, at the first instance of the regex.","lastModifiedDate":"2023-09-24"},{"lineNumber":70,"author":{"gitId":"kiatkat"},"content":"     * In the case of a non-existent regex, an IMPROPER_FORMAT ParsingException is thrown.","lastModifiedDate":"2023-09-24"},{"lineNumber":71,"author":{"gitId":"kiatkat"},"content":"     * @param string The string to split","lastModifiedDate":"2023-09-24"},{"lineNumber":72,"author":{"gitId":"kiatkat"},"content":"     * @param regex The regex to split by","lastModifiedDate":"2023-09-24"},{"lineNumber":73,"author":{"gitId":"kiatkat"},"content":"     * @return A String array of size 2, with index 0 containing the portion before the regex","lastModifiedDate":"2023-09-24"},{"lineNumber":74,"author":{"gitId":"kiatkat"},"content":"     *         and index 1 containing the portion after the regex.","lastModifiedDate":"2023-09-24"},{"lineNumber":75,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":76,"author":{"gitId":"kiatkat"},"content":"    private static String[] splitAndStrip(String string, String regex) throws ParsingException {","lastModifiedDate":"2023-09-24"},{"lineNumber":77,"author":{"gitId":"kiatkat"},"content":"        String[] splits \u003d string.strip().split(regex, 2);","lastModifiedDate":"2023-09-24"},{"lineNumber":78,"author":{"gitId":"kiatkat"},"content":"        String beforeRegex \u003d splits[0].strip();","lastModifiedDate":"2023-09-24"},{"lineNumber":79,"author":{"gitId":"kiatkat"},"content":"        if (splits.length \u003d\u003d 2) {","lastModifiedDate":"2023-09-24"},{"lineNumber":80,"author":{"gitId":"kiatkat"},"content":"            String afterRegex \u003d splits[1].strip();","lastModifiedDate":"2023-09-24"},{"lineNumber":81,"author":{"gitId":"kiatkat"},"content":"            return new String[] {beforeRegex, afterRegex};","lastModifiedDate":"2023-09-24"},{"lineNumber":82,"author":{"gitId":"kiatkat"},"content":"        } else {","lastModifiedDate":"2023-09-24"},{"lineNumber":83,"author":{"gitId":"kiatkat"},"content":"            throw new ParsingException(ParsingException.ExceptionType.IMPROPER_FORMAT);","lastModifiedDate":"2023-09-24"},{"lineNumber":84,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":85,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":86,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":88,"author":{"gitId":"kiatkat"},"content":"     * Creates an AddCommand that adds a To-do to the TaskList, based on user input.","lastModifiedDate":"2023-09-24"},{"lineNumber":89,"author":{"gitId":"kiatkat"},"content":"     * @param detail The description of the To-do.","lastModifiedDate":"2023-09-24"},{"lineNumber":90,"author":{"gitId":"kiatkat"},"content":"     * @return An AddCommand that will add the desired To-do to the list.","lastModifiedDate":"2023-09-24"},{"lineNumber":91,"author":{"gitId":"kiatkat"},"content":"     * @throws ParsingException If the To-do is not supplied with a description.","lastModifiedDate":"2023-09-24"},{"lineNumber":92,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":93,"author":{"gitId":"kiatkat"},"content":"    private static AddCommand addTodo(String detail) throws ParsingException {","lastModifiedDate":"2023-09-24"},{"lineNumber":94,"author":{"gitId":"kiatkat"},"content":"        if (detail.isBlank()) {","lastModifiedDate":"2023-09-08"},{"lineNumber":95,"author":{"gitId":"kiatkat"},"content":"            throw new ParsingException(ParsingException.ExceptionType.MISSING_DESCRIPTION);","lastModifiedDate":"2023-09-07"},{"lineNumber":96,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":97,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":98,"author":{"gitId":"kiatkat"},"content":"        return new AddCommand(new Todo(detail));","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":100,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":102,"author":{"gitId":"kiatkat"},"content":"     * Creates an AddCommand that adds a Deadline to the TaskList, based on user input.","lastModifiedDate":"2023-09-24"},{"lineNumber":103,"author":{"gitId":"kiatkat"},"content":"     * @param detail The details relevant to the Deadline.","lastModifiedDate":"2023-09-24"},{"lineNumber":104,"author":{"gitId":"kiatkat"},"content":"     * @return An AddCommand that will add the desired Deadline to the list.","lastModifiedDate":"2023-09-24"},{"lineNumber":105,"author":{"gitId":"kiatkat"},"content":"     * @throws ParsingException If either the description or the deadline of the Deadline are not","lastModifiedDate":"2023-09-24"},{"lineNumber":106,"author":{"gitId":"kiatkat"},"content":"     *                          supplied.","lastModifiedDate":"2023-09-24"},{"lineNumber":107,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":108,"author":{"gitId":"kiatkat"},"content":"    private static AddCommand addDeadline(String detail) throws ParsingException {","lastModifiedDate":"2023-09-24"},{"lineNumber":109,"author":{"gitId":"kiatkat"},"content":"        if (detail.isBlank()) {","lastModifiedDate":"2023-09-08"},{"lineNumber":110,"author":{"gitId":"kiatkat"},"content":"            throw new ParsingException(ParsingException.ExceptionType.MISSING_DESCRIPTION);","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":112,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":113,"author":{"gitId":"kiatkat"},"content":"        String[] processedDeadline \u003d splitAndStrip(detail, \"/by\");","lastModifiedDate":"2023-09-24"},{"lineNumber":114,"author":{"gitId":"kiatkat"},"content":"        if (processedDeadline[0].isBlank() || processedDeadline[1].isBlank()) {","lastModifiedDate":"2023-09-24"},{"lineNumber":115,"author":{"gitId":"kiatkat"},"content":"            throw new ParsingException(ParsingException.ExceptionType.MISSING_DESCRIPTION);","lastModifiedDate":"2023-09-07"},{"lineNumber":116,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":117,"author":{"gitId":"kiatkat"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"kiatkat"},"content":"            LocalDateTime deadlineDate \u003d LocalDateTime.parse(processedDeadline[1]);","lastModifiedDate":"2023-09-24"},{"lineNumber":119,"author":{"gitId":"kiatkat"},"content":"            return new AddCommand(new Deadline(processedDeadline[0], deadlineDate));","lastModifiedDate":"2023-09-24"},{"lineNumber":120,"author":{"gitId":"kiatkat"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"kiatkat"},"content":"            return new AddCommand(new Deadline(processedDeadline[0], processedDeadline[1]));","lastModifiedDate":"2023-09-24"},{"lineNumber":122,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":124,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":125,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":126,"author":{"gitId":"kiatkat"},"content":"     * Creates an AddCommand that adds an Event to the TaskList, based on user input.","lastModifiedDate":"2023-09-24"},{"lineNumber":127,"author":{"gitId":"kiatkat"},"content":"     * @param detail The details relevant to the Event.","lastModifiedDate":"2023-09-24"},{"lineNumber":128,"author":{"gitId":"kiatkat"},"content":"     * @return An AddCommand that will add the desired Event to the list.","lastModifiedDate":"2023-09-24"},{"lineNumber":129,"author":{"gitId":"kiatkat"},"content":"     * @throws ParsingException If either the description or the dates of the Event are not","lastModifiedDate":"2023-09-24"},{"lineNumber":130,"author":{"gitId":"kiatkat"},"content":"     *                          supplied.","lastModifiedDate":"2023-09-24"},{"lineNumber":131,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":132,"author":{"gitId":"kiatkat"},"content":"    private static AddCommand addEvent(String detail) throws ParsingException {","lastModifiedDate":"2023-09-24"},{"lineNumber":133,"author":{"gitId":"kiatkat"},"content":"        if (detail.isBlank()) {","lastModifiedDate":"2023-09-08"},{"lineNumber":134,"author":{"gitId":"kiatkat"},"content":"            throw new ParsingException(ParsingException.ExceptionType.MISSING_DESCRIPTION);","lastModifiedDate":"2023-09-07"},{"lineNumber":135,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":136,"author":{"gitId":"kiatkat"},"content":"        String[] processedEventDescription \u003d splitAndStrip(detail, \"/from\");","lastModifiedDate":"2023-09-24"},{"lineNumber":137,"author":{"gitId":"kiatkat"},"content":"        String[] processedEventDates \u003d splitAndStrip(processedEventDescription[1], \"/to\");","lastModifiedDate":"2023-09-24"},{"lineNumber":138,"author":{"gitId":"kiatkat"},"content":"        if (processedEventDescription[0].isBlank() || processedEventDates[0].isBlank()","lastModifiedDate":"2023-09-24"},{"lineNumber":139,"author":{"gitId":"kiatkat"},"content":"                || processedEventDates[1].isBlank()) {","lastModifiedDate":"2023-09-24"},{"lineNumber":140,"author":{"gitId":"kiatkat"},"content":"            throw new ParsingException(ParsingException.ExceptionType.MISSING_DETAIL);","lastModifiedDate":"2023-09-07"},{"lineNumber":141,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":142,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":143,"author":{"gitId":"kiatkat"},"content":"        System.out.println(\"Roger that. Preparations will be underway.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":144,"author":{"gitId":"kiatkat"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":145,"author":{"gitId":"kiatkat"},"content":"            LocalDateTime eventStartDate \u003d LocalDateTime.parse(processedEventDates[0]);","lastModifiedDate":"2023-09-24"},{"lineNumber":146,"author":{"gitId":"kiatkat"},"content":"            LocalDateTime eventEndDate \u003d LocalDateTime.parse(processedEventDates[1]);","lastModifiedDate":"2023-09-24"},{"lineNumber":147,"author":{"gitId":"kiatkat"},"content":"            return new AddCommand(new Event(processedEventDescription[0], eventStartDate, eventEndDate));","lastModifiedDate":"2023-09-24"},{"lineNumber":148,"author":{"gitId":"kiatkat"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":149,"author":{"gitId":"kiatkat"},"content":"            return new AddCommand(new Event(processedEventDescription[0], processedEventDates[0],","lastModifiedDate":"2023-09-24"},{"lineNumber":150,"author":{"gitId":"kiatkat"},"content":"                    processedEventDates[1]));","lastModifiedDate":"2023-09-24"},{"lineNumber":151,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":152,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":153,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":154,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":155,"author":{"gitId":"kiatkat"},"content":"     * Creates a MarkCommand based on user input.","lastModifiedDate":"2023-09-24"},{"lineNumber":156,"author":{"gitId":"kiatkat"},"content":"     * @param detail The index of the task to be marked. Allows for the string \"all\" to mark all tasks.","lastModifiedDate":"2023-09-24"},{"lineNumber":157,"author":{"gitId":"kiatkat"},"content":"     * @return A MarkCommand as specified by the user.","lastModifiedDate":"2023-09-24"},{"lineNumber":158,"author":{"gitId":"kiatkat"},"content":"     * @throws ParsingException If the provided string is neither \"all\" nor parseable as an integer.","lastModifiedDate":"2023-09-24"},{"lineNumber":159,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":160,"author":{"gitId":"kiatkat"},"content":"    private static MarkCommand markTask(String detail) throws ParsingException {","lastModifiedDate":"2023-09-24"},{"lineNumber":161,"author":{"gitId":"kiatkat"},"content":"        if (detail.isBlank()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":162,"author":{"gitId":"kiatkat"},"content":"            throw new ParsingException(ParsingException.ExceptionType.MISSING_INDEX);","lastModifiedDate":"2023-09-07"},{"lineNumber":163,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":164,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":165,"author":{"gitId":"kiatkat"},"content":"        if (detail.equalsIgnoreCase(\"all\")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":166,"author":{"gitId":"kiatkat"},"content":"            return new MarkCommand(null);","lastModifiedDate":"2023-09-05"},{"lineNumber":167,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":168,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":169,"author":{"gitId":"kiatkat"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":170,"author":{"gitId":"kiatkat"},"content":"            int index \u003d Integer.parseInt(detail);","lastModifiedDate":"2023-09-07"},{"lineNumber":171,"author":{"gitId":"kiatkat"},"content":"            return new MarkCommand(index);","lastModifiedDate":"2023-09-05"},{"lineNumber":172,"author":{"gitId":"kiatkat"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":173,"author":{"gitId":"kiatkat"},"content":"            throw new ParsingException(ParsingException.ExceptionType.NOT_A_NUMBER);","lastModifiedDate":"2023-09-07"},{"lineNumber":174,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":175,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":176,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":177,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":178,"author":{"gitId":"kiatkat"},"content":"     * Creates an UnmarkCommand based on user input.","lastModifiedDate":"2023-09-24"},{"lineNumber":179,"author":{"gitId":"kiatkat"},"content":"     * @param detail The index of the task to be unmarked. Allows for the string \"all\" to unmark all tasks.","lastModifiedDate":"2023-09-24"},{"lineNumber":180,"author":{"gitId":"kiatkat"},"content":"     * @return An UnmarkCommand as specified by the user.","lastModifiedDate":"2023-09-24"},{"lineNumber":181,"author":{"gitId":"kiatkat"},"content":"     * @throws ParsingException If the provided string is neither \"all\" nor parseable as an integer.","lastModifiedDate":"2023-09-24"},{"lineNumber":182,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":183,"author":{"gitId":"kiatkat"},"content":"    private static UnmarkCommand unMarkTask(String detail) throws ParsingException {","lastModifiedDate":"2023-09-24"},{"lineNumber":184,"author":{"gitId":"kiatkat"},"content":"        if (detail.isBlank()) {","lastModifiedDate":"2023-09-08"},{"lineNumber":185,"author":{"gitId":"kiatkat"},"content":"            throw new ParsingException(ParsingException.ExceptionType.MISSING_INDEX);","lastModifiedDate":"2023-09-07"},{"lineNumber":186,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":187,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":188,"author":{"gitId":"kiatkat"},"content":"        if (detail.equalsIgnoreCase(\"all\")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":189,"author":{"gitId":"kiatkat"},"content":"            return new UnmarkCommand(null);","lastModifiedDate":"2023-09-05"},{"lineNumber":190,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":191,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":192,"author":{"gitId":"kiatkat"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":193,"author":{"gitId":"kiatkat"},"content":"            int index \u003d Integer.parseInt(detail);","lastModifiedDate":"2023-09-07"},{"lineNumber":194,"author":{"gitId":"kiatkat"},"content":"            return new UnmarkCommand(index);","lastModifiedDate":"2023-09-05"},{"lineNumber":195,"author":{"gitId":"kiatkat"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":196,"author":{"gitId":"kiatkat"},"content":"            throw new ParsingException(ParsingException.ExceptionType.NOT_A_NUMBER);","lastModifiedDate":"2023-09-07"},{"lineNumber":197,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":198,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":199,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":200,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":201,"author":{"gitId":"kiatkat"},"content":"     * Creates a ListCommand.","lastModifiedDate":"2023-09-24"},{"lineNumber":202,"author":{"gitId":"kiatkat"},"content":"     * @param detail Unused in command creation, used only to identify if the user has formatted the","lastModifiedDate":"2023-09-24"},{"lineNumber":203,"author":{"gitId":"kiatkat"},"content":"     *               command properly. List should only be called with no further input.","lastModifiedDate":"2023-09-24"},{"lineNumber":204,"author":{"gitId":"kiatkat"},"content":"     * @return A ListCommand if the detail is blank.","lastModifiedDate":"2023-09-24"},{"lineNumber":205,"author":{"gitId":"kiatkat"},"content":"     * @throws ParsingException If the detail is nonempty, indicating that there is excess input and thus","lastModifiedDate":"2023-09-24"},{"lineNumber":206,"author":{"gitId":"kiatkat"},"content":"     *                          the command has not been formatted properly.","lastModifiedDate":"2023-09-24"},{"lineNumber":207,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":208,"author":{"gitId":"kiatkat"},"content":"    private static ListCommand listTasks(String detail) throws ParsingException {","lastModifiedDate":"2023-09-24"},{"lineNumber":209,"author":{"gitId":"kiatkat"},"content":"        if (detail.isBlank()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":210,"author":{"gitId":"kiatkat"},"content":"            return new ListCommand();","lastModifiedDate":"2023-09-05"},{"lineNumber":211,"author":{"gitId":"kiatkat"},"content":"        } else {","lastModifiedDate":"2023-09-06"},{"lineNumber":212,"author":{"gitId":"kiatkat"},"content":"            throw new ParsingException(ParsingException.ExceptionType.EXCESS_INPUT);","lastModifiedDate":"2023-09-07"},{"lineNumber":213,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":214,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":215,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":216,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":217,"author":{"gitId":"kiatkat"},"content":"     * Creates a DeleteCommand based on user input.","lastModifiedDate":"2023-09-24"},{"lineNumber":218,"author":{"gitId":"kiatkat"},"content":"     * @param detail The index of the task to be deleted. Allows for the string \"all\" to delete all tasks.","lastModifiedDate":"2023-09-24"},{"lineNumber":219,"author":{"gitId":"kiatkat"},"content":"     * @return A DeleteCommand as specified by the user.","lastModifiedDate":"2023-09-24"},{"lineNumber":220,"author":{"gitId":"kiatkat"},"content":"     * @throws ParsingException If the provided string is neither \"all\" nor parseable as an integer.","lastModifiedDate":"2023-09-24"},{"lineNumber":221,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":222,"author":{"gitId":"kiatkat"},"content":"    private static DeleteCommand deleteTask(String detail) throws ParsingException {","lastModifiedDate":"2023-09-24"},{"lineNumber":223,"author":{"gitId":"kiatkat"},"content":"        if (detail.isBlank()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":224,"author":{"gitId":"kiatkat"},"content":"            throw new ParsingException(ParsingException.ExceptionType.MISSING_INDEX);","lastModifiedDate":"2023-09-07"},{"lineNumber":225,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":226,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":227,"author":{"gitId":"kiatkat"},"content":"        if (detail.equalsIgnoreCase(\"all\")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":228,"author":{"gitId":"kiatkat"},"content":"            return new DeleteCommand(null);","lastModifiedDate":"2023-09-05"},{"lineNumber":229,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":230,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":231,"author":{"gitId":"kiatkat"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":232,"author":{"gitId":"kiatkat"},"content":"            int index \u003d Integer.parseInt(detail);","lastModifiedDate":"2023-09-07"},{"lineNumber":233,"author":{"gitId":"kiatkat"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2023-09-05"},{"lineNumber":234,"author":{"gitId":"kiatkat"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":235,"author":{"gitId":"kiatkat"},"content":"            throw new ParsingException(ParsingException.ExceptionType.NOT_A_NUMBER);","lastModifiedDate":"2023-09-07"},{"lineNumber":236,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":237,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":238,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":239,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":240,"author":{"gitId":"kiatkat"},"content":"     * Creates a FindCommand based on user input.","lastModifiedDate":"2023-09-24"},{"lineNumber":241,"author":{"gitId":"kiatkat"},"content":"     * @param detail The search term(s) the user inputs.","lastModifiedDate":"2023-09-24"},{"lineNumber":242,"author":{"gitId":"kiatkat"},"content":"     * @return A FindCommand specific to that search string.","lastModifiedDate":"2023-09-24"},{"lineNumber":243,"author":{"gitId":"kiatkat"},"content":"     * @throws ParsingException If the search string(s) are missing or unspecified.","lastModifiedDate":"2023-09-24"},{"lineNumber":244,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":245,"author":{"gitId":"kiatkat"},"content":"    private static FindCommand findTerm(String detail) throws ParsingException {","lastModifiedDate":"2023-09-24"},{"lineNumber":246,"author":{"gitId":"kiatkat"},"content":"        if (detail.isBlank()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":247,"author":{"gitId":"kiatkat"},"content":"            throw new ParsingException(ParsingException.ExceptionType.MISSING_DESCRIPTION);","lastModifiedDate":"2023-09-07"},{"lineNumber":248,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":249,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":250,"author":{"gitId":"kiatkat"},"content":"        return new FindCommand(detail.toLowerCase());","lastModifiedDate":"2023-09-07"},{"lineNumber":251,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":252,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":253,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":254,"author":{"gitId":"kiatkat"},"content":"     * Creates an UndoCommand given the details provided by the user.","lastModifiedDate":"2023-09-24"},{"lineNumber":255,"author":{"gitId":"kiatkat"},"content":"     * @param detail The number of commands to undo. The string \"all\" is accepted to undo all commands.","lastModifiedDate":"2023-09-24"},{"lineNumber":256,"author":{"gitId":"kiatkat"},"content":"     * @return An UndoCommand based on the user input.","lastModifiedDate":"2023-09-24"},{"lineNumber":257,"author":{"gitId":"kiatkat"},"content":"     * @throws ParsingException If the user input is not the string \"all\", and is not parseable as an","lastModifiedDate":"2023-09-24"},{"lineNumber":258,"author":{"gitId":"kiatkat"},"content":"     *                          integer.","lastModifiedDate":"2023-09-24"},{"lineNumber":259,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":260,"author":{"gitId":"kiatkat"},"content":"    private static UndoCommand undoCommand(String detail) throws ParsingException {","lastModifiedDate":"2023-09-24"},{"lineNumber":261,"author":{"gitId":"kiatkat"},"content":"        if (detail.isBlank()) {","lastModifiedDate":"2023-09-24"},{"lineNumber":262,"author":{"gitId":"kiatkat"},"content":"            return new UndoCommand(1);","lastModifiedDate":"2023-09-24"},{"lineNumber":263,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":264,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":265,"author":{"gitId":"kiatkat"},"content":"        if (detail.equalsIgnoreCase(\"all\")) {","lastModifiedDate":"2023-09-24"},{"lineNumber":266,"author":{"gitId":"kiatkat"},"content":"            return new UndoCommand(null);","lastModifiedDate":"2023-09-24"},{"lineNumber":267,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":268,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":269,"author":{"gitId":"kiatkat"},"content":"        try {","lastModifiedDate":"2023-09-24"},{"lineNumber":270,"author":{"gitId":"kiatkat"},"content":"            int index \u003d Integer.parseInt(detail);","lastModifiedDate":"2023-09-24"},{"lineNumber":271,"author":{"gitId":"kiatkat"},"content":"            return new UndoCommand(index);","lastModifiedDate":"2023-09-24"},{"lineNumber":272,"author":{"gitId":"kiatkat"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-24"},{"lineNumber":273,"author":{"gitId":"kiatkat"},"content":"            throw new ParsingException(ParsingException.ExceptionType.NOT_A_NUMBER);","lastModifiedDate":"2023-09-24"},{"lineNumber":274,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":275,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":276,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"kiatkat":276}},{"path":"src/main/java/prts/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import prts.History;","lastModifiedDate":"2023-09-24"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import prts.OutOfRangeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import prts.SaveToFileException;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import prts.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import prts.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import prts.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":" * The command for deletion of a Task from the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"    private Integer index;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"     * Constructs a DeleteCommand object, given the index of the task to be deleted.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"     * @param index The index of the task to be deleted. If all tasks are to be deleted,","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"     *              this is null.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"    public DeleteCommand(Integer index) {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"     * Executes the deletion of the Task from the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"     *","lastModifiedDate":"2023-09-24"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"     * @param tasks   The list of tasks currently stored.","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"     * @param ui      The UI object stored by PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"     * @param storage The Storage object stored by PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"     * @param history The history of past TaskLists stored by PRTS.","lastModifiedDate":"2023-09-24"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"     * @return The string to be displayed to the user upon successful execution.","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"     * @throws SaveToFileException If the Storage object fails to save the state of the TaskList","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"     *                             after the deletion of the Task.","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"     * @throws OutOfRangeException If the index provided falls out of the range of the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage, History history)","lastModifiedDate":"2023-09-24"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"            throws SaveToFileException, OutOfRangeException {","lastModifiedDate":"2023-09-24"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"        String ret \u003d tasks.delete(index);","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"        history.addToHistory(tasks);","lastModifiedDate":"2023-09-24"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"        return ret;","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kiatkat":46}},{"path":"src/main/java/prts/command/DocRestCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import prts.History;","lastModifiedDate":"2023-09-24"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import prts.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import prts.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import prts.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":" * A personality command that simply displays a message to the user depending on the state of the","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":" * TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"public class DocRestCommand extends Command {","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"     * Displays a message to the user that depends on whether the TaskList is currently empty.","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"     *","lastModifiedDate":"2023-09-24"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"     * @param tasks   The list of tasks currently stored.","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"     * @param ui      The UI object stored by PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"     * @param storage The Storage object stored by PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"     * @param history The history of past TaskLists stored by PRTS.","lastModifiedDate":"2023-09-24"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"     * @return The string to be displayed to the user upon successful execution.","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage, History history) {","lastModifiedDate":"2023-09-24"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"        return tasks.docRest();","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kiatkat":28}},{"path":"src/main/java/prts/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import prts.History;","lastModifiedDate":"2023-09-24"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import prts.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import prts.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import prts.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":" * The command for exiting PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"     * Does nothing. A concrete implementation is simply required as Command is abstract.","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"     *","lastModifiedDate":"2023-09-24"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"     * @param tasks   The list of tasks currently stored.","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"     * @param ui      The UI object stored by PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"     * @param storage The Storage object stored by PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"     * @param history The history of past TaskLists stored by PRTS.","lastModifiedDate":"2023-09-24"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"     * @return The string to be displayed to the user upon successful execution.","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage, History history) {","lastModifiedDate":"2023-09-24"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"        return ui.showGoodbye();","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"     * Returns true to signal that the program should exit.","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"     * @return True, always.","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"        return true;","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kiatkat":36}},{"path":"src/main/java/prts/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import prts.History;","lastModifiedDate":"2023-09-24"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import prts.OutOfRangeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import prts.SaveToFileException;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import prts.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import prts.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import prts.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":" * The command for finding a string within tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"    private final String searchTerm;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"     * Constructs a FindCommmand objet with the given search term.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"     * The search term is copied verbatim from the user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"     * Does not search for dates if the date is parsed into a Date.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"     * @param searchTerm The term to search for.","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"     * @return The string to be displayed to the user upon successful execution.","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"    public FindCommand(String searchTerm) {","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"        this.searchTerm \u003d searchTerm;","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage, History history) throws SaveToFileException,","lastModifiedDate":"2023-09-24"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"            OutOfRangeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"        return tasks.find(searchTerm);","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kiatkat":34}},{"path":"src/main/java/prts/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import prts.History;","lastModifiedDate":"2023-09-24"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import prts.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import prts.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import prts.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":" * The command for listing the current state of the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"     * Executes the list command.","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"     *","lastModifiedDate":"2023-09-24"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"     * @param tasks   The list of tasks currently stored.","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"     * @param ui      The UI object stored by PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"     * @param storage The Storage object stored by PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"     * @param history The history of past TaskLists stored by PRTS.","lastModifiedDate":"2023-09-24"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"     * @return The string to be displayed to the user upon successful execution.","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage, History history) {","lastModifiedDate":"2023-09-24"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"        return ui.listTasks(tasks);","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kiatkat":27}},{"path":"src/main/java/prts/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import prts.History;","lastModifiedDate":"2023-09-24"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import prts.OutOfRangeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import prts.SaveToFileException;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import prts.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import prts.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import prts.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import prts.task.AlreadyMarkedException;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":" * The command for marking a Task as complete.","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"    private Integer index;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"     * Constructs a MarkCommand object, given the index of the task to be deleted.","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"     * @param index The index of the task to be marked. If all tasks are to be marked,","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"     *              this is null.","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"    public MarkCommand(Integer index) {","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"     * Executes the marking of the Task as done.","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"     *","lastModifiedDate":"2023-09-24"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"     * @param tasks   The list of tasks currently stored.","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"     * @param ui      The UI object stored by PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"     * @param storage The Storage object stored by PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"     * @param history The history of past TaskLists stored by PRTS.","lastModifiedDate":"2023-09-24"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"     * @return The string to be displayed to the user upon successful execution.","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"     * @throws OutOfRangeException    If the index provided is out of range of the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"     * @throws AlreadyMarkedException If the Task indicated by the provided index is already marked","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"     *                                as complete.","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"     * @throws SaveToFileException    If the Storage object fails to save the state of the TaskList","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"     *                                after the marking of the Task.","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage, History history) throws OutOfRangeException,","lastModifiedDate":"2023-09-24"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"            AlreadyMarkedException, SaveToFileException {","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"        String ret \u003d tasks.mark(index);","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"        history.addToHistory(tasks);","lastModifiedDate":"2023-09-24"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"        return ret;","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kiatkat":50}},{"path":"src/main/java/prts/command/MessageCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import prts.History;","lastModifiedDate":"2023-09-24"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import prts.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import prts.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import prts.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":" * The general command for simply displaying a given message to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"public class MessageCommand extends Command {","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"    private String message;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"     * Constructs a MessageCommand object, given the string to be displayed.","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"    public MessageCommand(String message) {","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"     * Executes the displaying of the message.","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"     *","lastModifiedDate":"2023-09-24"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"     * @param tasks   The list of tasks currently stored.","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"     * @param ui      The UI object stored by PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"     * @param storage The Storage object stored by PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"     * @param history The history of past TaskLists stored by PRTS.","lastModifiedDate":"2023-09-24"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"     * @return The string to be displayed to the user upon successful execution.","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage, History history) {","lastModifiedDate":"2023-09-24"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"        return message;","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kiatkat":37}},{"path":"src/main/java/prts/command/ParsingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import prts.PrtsException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":" * Signals that an error has occurred when parsing the user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":" * This error can be of various types, and a different error message is displayed according to the","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":" * input type of error. A full list of error types is listed in the enum ExceptionType.","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"public class ParsingException extends PrtsException {","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"     * A list of all possible types of exceptions this class can represent.","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"    enum ExceptionType {","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"        IMPROPER_FORMAT,","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"        MISSING_DESCRIPTION,","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"        MISSING_DETAIL,","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"        MISSING_INDEX,","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"        NOT_A_NUMBER,","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"        EXCESS_INPUT;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"    private final ExceptionType exceptionType;","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"     * Constructs a ParsingException given the error type.","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"     * @param exceptionType The type of parsing error encountered.","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"    public ParsingException(ExceptionType exceptionType) {","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"        super(\"There was an error in parsing your input.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"        this.exceptionType \u003d exceptionType;","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"     * Returns an error message that changes depending on the type of parsing error this is.","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"     * @return The parsing error message.","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"    public String getMessage() {","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"        switch (exceptionType) {","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"        case IMPROPER_FORMAT:","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"            return \"Please format your description properly.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"        case MISSING_DESCRIPTION:","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"kiatkat"},"content":"            return \"I can\u0027t read your mind. Do add a description.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"kiatkat"},"content":"        case MISSING_DETAIL:","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"kiatkat"},"content":"            return \"I can\u0027t read your mind. Do add more details.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"kiatkat"},"content":"        case MISSING_INDEX:","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"kiatkat"},"content":"            return \"I can\u0027t read your mind. Provide a suitable index.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"kiatkat"},"content":"        case NOT_A_NUMBER:","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"kiatkat"},"content":"            return \"I can\u0027t understand that number.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"kiatkat"},"content":"        case EXCESS_INPUT:","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"kiatkat"},"content":"            return \"Sorry, you\u0027re speaking a little fast. Could you repeat just the first word?\";","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"kiatkat"},"content":"        default:","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"kiatkat"},"content":"            return \"Something went wrong.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kiatkat":69}},{"path":"src/main/java/prts/command/UndoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.command;","lastModifiedDate":"2023-09-24"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import prts.History;","lastModifiedDate":"2023-09-24"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import prts.OutOfRangeException;","lastModifiedDate":"2023-09-24"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import prts.Storage;","lastModifiedDate":"2023-09-24"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import prts.TaskList;","lastModifiedDate":"2023-09-24"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import prts.Ui;","lastModifiedDate":"2023-09-24"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-24"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":" * The command for undoing a past command.","lastModifiedDate":"2023-09-24"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-24"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2023-09-24"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"    private final Integer undoCount;","lastModifiedDate":"2023-09-24"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"    public UndoCommand(Integer undoCount) {","lastModifiedDate":"2023-09-24"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"        this.undoCount \u003d undoCount;","lastModifiedDate":"2023-09-24"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-09-24"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage, History history) throws OutOfRangeException {","lastModifiedDate":"2023-09-24"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"        return history.undo(undoCount, tasks);","lastModifiedDate":"2023-09-24"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-24"}],"authorContributionMap":{"kiatkat":24}},{"path":"src/main/java/prts/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import prts.History;","lastModifiedDate":"2023-09-24"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import prts.OutOfRangeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import prts.SaveToFileException;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import prts.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import prts.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import prts.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import prts.task.AlreadyUnmarkedException;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":" * The command for marking a Task as not yet complete.","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"    private Integer index;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"     * Constructs a UnmarkCommand object, given the index of the task to be deleted.","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"     * @param index The index of the task to be unmarked. If all tasks are to be unmarked,","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"     *              this is null.","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"    public UnmarkCommand(Integer index) {","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"     * Executes the marking of the Task as not yet done.","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"     *","lastModifiedDate":"2023-09-24"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"     * @param tasks   The list of tasks currently stored.","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"     * @param ui      The UI object stored by PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"     * @param storage The Storage object stored by PRTS.","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"     * @param history The history of past TaskLists stored by PRTS.","lastModifiedDate":"2023-09-24"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"     * @return The string to be displayed to the user upon successful execution.","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"     * @throws OutOfRangeException      If the index provided is out of range of the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"     * @throws AlreadyUnmarkedException If the Task indicated by the provided index is already marked","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"     *                                  as not yet complete.","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"     * @throws SaveToFileException      If the Storage object fails to save the state of the TaskList","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"     *                                  after the Task is unmarked.","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage, History history) throws AlreadyUnmarkedException,","lastModifiedDate":"2023-09-24"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"            OutOfRangeException, SaveToFileException {","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"        String ret \u003d tasks.unmark(index);","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"        history.addToHistory(tasks);","lastModifiedDate":"2023-09-24"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"        return ret;","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kiatkat":49}},{"path":"src/main/java/prts/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.gui;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"    private void flip() {","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"kiatkat"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"kiatkat"},"content":"     * Creates a dialog box for the user.","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"kiatkat"},"content":"     * @param text The user input.","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"kiatkat"},"content":"     * @param img The user image.","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"kiatkat"},"content":"     * @return The dialog box to be added to the scene.","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"kiatkat"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"kiatkat"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"kiatkat"},"content":"     * Creates a dialog box for PRTS.","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"kiatkat"},"content":"     * @param text PRTS\u0027 response.","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"kiatkat"},"content":"     * @param img PRTS\u0027 image.","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"kiatkat"},"content":"     * @return The dialog box to be added to the scene.","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"kiatkat"},"content":"    public static DialogBox getPrtsDialog(String text, Image img) {","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"kiatkat"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"kiatkat"},"content":"        db.flip();","lastModifiedDate":"2023-09-10"},{"lineNumber":71,"author":{"gitId":"kiatkat"},"content":"        return db;","lastModifiedDate":"2023-09-10"},{"lineNumber":72,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"kiatkat":73}},{"path":"src/main/java/prts/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.gui;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"public class Launcher {","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"kiatkat":12}},{"path":"src/main/java/prts/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.gui;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import prts.Prts;","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"    private final Prts prts \u003d new Prts();","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(prts);","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"            stage.show();","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"kiatkat":32}},{"path":"src/main/java/prts/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.gui;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import prts.Prts;","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"import prts.Ui;","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"    private Prts prts;","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"    private final Image docImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/doc.jpg\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"    private final Image prtsImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/prts.jpg\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"     * Initializes the main window, and sets the welcome dialog of PRTS.","lastModifiedDate":"2023-09-24"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getPrtsDialog(Ui.showWelcome(), prtsImage));","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"    public void setDuke(Prts d) {","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"        prts \u003d d;","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"kiatkat"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"kiatkat"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"kiatkat"},"content":"        String response \u003d prts.getResponse(input);","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"kiatkat"},"content":"        assert response !\u003d null : \"PRTS cannot have a null response!\";","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"kiatkat"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"kiatkat"},"content":"                DialogBox.getUserDialog(input, docImage),","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"kiatkat"},"content":"                DialogBox.getPrtsDialog(response, prtsImage)","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"kiatkat"},"content":"        );","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"kiatkat"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"kiatkat":59}},{"path":"src/main/java/prts/gui/PrtsGui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.gui;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"import prts.Prts;","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":" * A class that manages the GUI-related elements of PRTS. Includes methods to set up the scene and draw","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":" * new objects within it.","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"public class PrtsGui extends Application {","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"    private final Prts prts \u003d new Prts();","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"    private final Image doc \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"            this.getClass().getResourceAsStream(\"/images/doc.jpg\")));","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"    private final Image prtsImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"            this.getClass().getResourceAsStream(\"/images/prts.jpg\")));","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"     * Sets up the main layout, comprising a scroll window and a text input field.","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"     * @return The AnchorPane object containing the required nodes.","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"    private AnchorPane initializeScene() {","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"kiatkat"},"content":"        return mainLayout;","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"kiatkat"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing PRTS\u0027 reply and then appends them to","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"kiatkat"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"kiatkat"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"kiatkat"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"kiatkat"},"content":"                DialogBox.getUserDialog(userInput.getText(), doc),","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"kiatkat"},"content":"                DialogBox.getPrtsDialog(prts.getResponse(userInput.getText()), prtsImage)","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"kiatkat"},"content":"        );","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"kiatkat"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"kiatkat"},"content":"     * Sets the configurations of the given stage to be appropriate for display.","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"kiatkat"},"content":"     * @param stage The stage used for PRTS.","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"kiatkat"},"content":"    private void stageSetup(Stage stage) {","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"kiatkat"},"content":"        stage.setTitle(\"Prts\");","lastModifiedDate":"2023-09-10"},{"lineNumber":71,"author":{"gitId":"kiatkat"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-09-10"},{"lineNumber":72,"author":{"gitId":"kiatkat"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"kiatkat"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":74,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":75,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":76,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":77,"author":{"gitId":"kiatkat"},"content":"     * Configures the main layout of the scene (anchor pane, dialog container, scroll pane, user input).","lastModifiedDate":"2023-09-10"},{"lineNumber":78,"author":{"gitId":"kiatkat"},"content":"     * @param mainLayout The anchor pane holding the scene.","lastModifiedDate":"2023-09-10"},{"lineNumber":79,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":80,"author":{"gitId":"kiatkat"},"content":"    private void layoutSetup(AnchorPane mainLayout) {","lastModifiedDate":"2023-09-10"},{"lineNumber":81,"author":{"gitId":"kiatkat"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":82,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":83,"author":{"gitId":"kiatkat"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-09-10"},{"lineNumber":84,"author":{"gitId":"kiatkat"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-09-10"},{"lineNumber":85,"author":{"gitId":"kiatkat"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-09-10"},{"lineNumber":86,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":87,"author":{"gitId":"kiatkat"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":88,"author":{"gitId":"kiatkat"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-09-10"},{"lineNumber":89,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":90,"author":{"gitId":"kiatkat"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-09-10"},{"lineNumber":91,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":92,"author":{"gitId":"kiatkat"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":93,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":94,"author":{"gitId":"kiatkat"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":95,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":96,"author":{"gitId":"kiatkat"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":97,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":98,"author":{"gitId":"kiatkat"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":99,"author":{"gitId":"kiatkat"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":100,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":101,"author":{"gitId":"kiatkat"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":102,"author":{"gitId":"kiatkat"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":103,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":104,"author":{"gitId":"kiatkat"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-09-10"},{"lineNumber":105,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":106,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":107,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":108,"author":{"gitId":"kiatkat"},"content":"     * Initializes the scene and shows it on the configured stage.","lastModifiedDate":"2023-09-10"},{"lineNumber":109,"author":{"gitId":"kiatkat"},"content":"     * @param primaryStage the primary stage for this application, onto which","lastModifiedDate":"2023-09-10"},{"lineNumber":110,"author":{"gitId":"kiatkat"},"content":"     *        the application scene can be set.","lastModifiedDate":"2023-09-10"},{"lineNumber":111,"author":{"gitId":"kiatkat"},"content":"     *        Applications may create other stages, if needed, but they will not be","lastModifiedDate":"2023-09-10"},{"lineNumber":112,"author":{"gitId":"kiatkat"},"content":"     *        primary stages.","lastModifiedDate":"2023-09-10"},{"lineNumber":113,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":114,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":115,"author":{"gitId":"kiatkat"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2023-09-10"},{"lineNumber":116,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":117,"author":{"gitId":"kiatkat"},"content":"        PrtsGui prtsGui \u003d new PrtsGui();","lastModifiedDate":"2023-09-10"},{"lineNumber":118,"author":{"gitId":"kiatkat"},"content":"        AnchorPane mainLayout \u003d prtsGui.initializeScene();","lastModifiedDate":"2023-09-10"},{"lineNumber":119,"author":{"gitId":"kiatkat"},"content":"        Scene scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-09-10"},{"lineNumber":120,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":121,"author":{"gitId":"kiatkat"},"content":"        primaryStage.setScene(scene);","lastModifiedDate":"2023-09-10"},{"lineNumber":122,"author":{"gitId":"kiatkat"},"content":"        primaryStage.show();","lastModifiedDate":"2023-09-10"},{"lineNumber":123,"author":{"gitId":"kiatkat"},"content":"        prtsGui.stageSetup(primaryStage);","lastModifiedDate":"2023-09-10"},{"lineNumber":124,"author":{"gitId":"kiatkat"},"content":"        prtsGui.layoutSetup(mainLayout);","lastModifiedDate":"2023-09-10"},{"lineNumber":125,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":126,"author":{"gitId":"kiatkat"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-09-10"},{"lineNumber":127,"author":{"gitId":"kiatkat"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-10"},{"lineNumber":128,"author":{"gitId":"kiatkat"},"content":"        });","lastModifiedDate":"2023-09-10"},{"lineNumber":129,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":130,"author":{"gitId":"kiatkat"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-09-10"},{"lineNumber":131,"author":{"gitId":"kiatkat"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-10"},{"lineNumber":132,"author":{"gitId":"kiatkat"},"content":"        });","lastModifiedDate":"2023-09-10"},{"lineNumber":133,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":134,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":135,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":136,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"kiatkat":136}},{"path":"src/main/java/prts/task/AlreadyMarkedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import prts.PrtsException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":" * Signals that the user is trying to mark a task that is already marked.","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":" * Is only thrown by the \u003ccode\u003emark()\u003c/code\u003e function in the Task object.","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"public class AlreadyMarkedException extends PrtsException {","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"    public AlreadyMarkedException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"        super(\"It\u0027s already done.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kiatkat":13}},{"path":"src/main/java/prts/task/AlreadyUnmarkedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import prts.PrtsException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":" * Signals that the user is trying to unmark a task that already isn\u0027t marked.","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":" * Is only thrown by the \u003ccode\u003eunmark()\u003c/code\u003e function in the Task object.","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"public class AlreadyUnmarkedException extends PrtsException {","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"    public AlreadyUnmarkedException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"        super(\"This hasn\u0027t been done yet...\");","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"kiatkat":13}},{"path":"src/main/java/prts/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":" * Represents a deadline with a due date.","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":" * The date can be parsed if input in the form Day-Month-Year, with a short Month form.","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":" * If the date cannot be parsed, stores the user-input string as the due date.","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"    private String description;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"    private String addMessage \u003d \"Alright. I\u0027ll make sure you don\u0027t forget it.\";","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"     * Constructs a Deadline object given the description and due date, in the form of the user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"     * @param name The description of the deadline.","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"     * @param description The due date of the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"    public Deadline(String name, String description) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"        super(name);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"     * Constructs a Deadline object given the description and a due date.","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"     * @param name The description of the deadline.","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"     * @param deadline The due date of the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"    public Deadline(String name, LocalDateTime deadline) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"     * Returns the string representation of the Deadline object, for display to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"     * @return the string representation of the deadline.","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"        String detail \u003d description \u003d\u003d null","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"                ? deadline.format(DateTimeFormatter.ofPattern(\"hh\u0027:\u0027mma\u0027,\u0027 d MMM uuuu\u0027,\u0027 eee\"))","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"                : description;","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + detail + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"kiatkat"},"content":"     * Returns the message that should be displayed to the user upon addition of the Deadline to","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"kiatkat"},"content":"     * the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"kiatkat"},"content":"     * @return the message displayed to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"kiatkat"},"content":"    public String getAddMessage() {","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"kiatkat"},"content":"        return addMessage;","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"kiatkat"},"content":"     * Searches for a given search term in the name or the description strings.","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"kiatkat"},"content":"     * If there is no description string due to the Deadline being constructed with a Date, then","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"kiatkat"},"content":"     * only the name is searched.","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"kiatkat"},"content":"     * @param searchTerm The term to search for.","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"kiatkat"},"content":"     * @return True if the name or description contains the search term, false otherwise.","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"kiatkat"},"content":"    public boolean contains(String searchTerm) {","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"kiatkat"},"content":"        if (super.name.contains(searchTerm)) {","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"kiatkat"},"content":"            return true;","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"kiatkat"},"content":"        if (description !\u003d null) {","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"kiatkat"},"content":"            return description.contains(searchTerm);","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"kiatkat"},"content":"        return false;","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"kiatkat":80}},{"path":"src/main/java/prts/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":" * Represents an event with a start and end date.","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":" * This date can be recognized if input in the format Day-Month-Year, with short Month forms.","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":" * If a date cannot be parsed, then the string input is stored verbatim as the start/end date.","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"    private String description1;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"    private String description2;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"    private final String addMessage \u003d \"Roger that. Preparations will be underway.\";","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"    private LocalDateTime startDate;","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"    private LocalDateTime endDate;","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"     * Constructs an Event object, with user-input strings as the start and end dates.","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"     * @param name The description of the Event.","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"     * @param description1 The start date of the Event.","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"     * @param description2 The end date of the Event.","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"    public Event(String name, String description1, String description2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"        super(name);","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"        this.description1 \u003d description1;","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"        this.description2 \u003d description2;","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"     * Constructs an Event object, given dates parsed by the CommandParser.","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"     * @param name The description of the Event.","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"     * @param startDate The start date of the Event.","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"     * @param endDate The end date of the Event.","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"    public Event(String name, LocalDateTime startDate, LocalDateTime endDate) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"     * Returns the string representation of this Event object, for display to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"     * @return The string representation of the event.","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"kiatkat"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"kiatkat"},"content":"        String detail1 \u003d description1 \u003d\u003d null","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"kiatkat"},"content":"                ? startDate.format(DateTimeFormatter.ofPattern(\"hh\u0027:\u0027mma\u0027,\u0027 d MMM uuuu\u0027,\u0027 eee\"))","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"kiatkat"},"content":"                : description1;","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"kiatkat"},"content":"        String detail2 \u003d description2 \u003d\u003d null","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"kiatkat"},"content":"                ? endDate.format(DateTimeFormatter.ofPattern(\"hh\u0027:\u0027mma\u0027,\u0027 d MMM uuuu\u0027,\u0027 eee\"))","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"kiatkat"},"content":"                : description2;","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"kiatkat"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + detail1 + \" to: \" + detail2 + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"kiatkat"},"content":"     * Returns the message displayed to the user upon addition of an Event to the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"kiatkat"},"content":"     * @return The message displayed to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"kiatkat"},"content":"    public String getAddMessage() {","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"kiatkat"},"content":"        return addMessage;","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"kiatkat"},"content":"     * Searches for a given search term in the name or the description strings.","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"kiatkat"},"content":"     * If there is no description string due to the Event being constructed with Dates, then","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"kiatkat"},"content":"     * only the name is searched.","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"kiatkat"},"content":"     * @param searchTerm The term to search for.","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"kiatkat"},"content":"     * @return True if the name or descriptions contain the search term, false otherwise.","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"kiatkat"},"content":"    public boolean contains(String searchTerm) {","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"kiatkat"},"content":"        if (super.name.contains(searchTerm)) {","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"kiatkat"},"content":"            return true;","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"kiatkat"},"content":"        if (startDate !\u003d null) {","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"kiatkat"},"content":"            return description1.contains(searchTerm) || description2.contains(searchTerm);","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"kiatkat"},"content":"        return false;","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"kiatkat":89}},{"path":"src/main/java/prts/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":" * Represents an abstract Task item that can be added to the TaskList by the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":" * Keeps track of whether the task is completed, and stores a description that can","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":" * be displayed to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"public abstract class Task implements Serializable {","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"    protected String name;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"    private boolean isDone;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"     * Constructs a Task object. Always initializes the Task as not-yet-done.","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"     * @param name The description of the Task to be created.","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"     * Marks a Task as done.","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"     * @throws AlreadyMarkedException If the Task is already marked as done.","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"    public void markDone() throws AlreadyMarkedException {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"        if (!this.isDone) {","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"            throw new AlreadyMarkedException();","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"     * Marks a Task as not yet done.","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"     * @throws AlreadyUnmarkedException If the Task is already not yet done.","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"    public void markUndone() throws AlreadyUnmarkedException {","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"            throw new AlreadyUnmarkedException();","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"kiatkat"},"content":"     * Returns a string representation of a Task object, to be displayed to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"kiatkat"},"content":"     * @return The string representation displayed to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"kiatkat"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"kiatkat"},"content":"        return this.isDone ? \"[X] \" + name : \"[ ] \" + name;","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"kiatkat"},"content":"     * Returns the message that should be displayed to the user when this Task is added","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"kiatkat"},"content":"     * to the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"kiatkat"},"content":"     * @return The message displayed to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"kiatkat"},"content":"    public abstract String getAddMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"kiatkat"},"content":"     * Searches the description of the Task to find the given search term.","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"kiatkat"},"content":"     * @param searchTerm The term to search for.","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"kiatkat"},"content":"     * @return True if the search term is found, false otherwise.","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"kiatkat"},"content":"    public abstract boolean contains(String searchTerm);","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-24"},{"lineNumber":72,"author":{"gitId":"kiatkat"},"content":"     * Getter for the isDone field in the Task.","lastModifiedDate":"2023-09-24"},{"lineNumber":73,"author":{"gitId":"kiatkat"},"content":"     * @return True if the Task is marked as done, false if it is not.","lastModifiedDate":"2023-09-24"},{"lineNumber":74,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-24"},{"lineNumber":75,"author":{"gitId":"kiatkat"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-09-24"},{"lineNumber":76,"author":{"gitId":"kiatkat"},"content":"        return this.isDone;","lastModifiedDate":"2023-09-24"},{"lineNumber":77,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":78,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":79,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"kiatkat":79}},{"path":"src/main/java/prts/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":" * Represents a to-do task, with a description of the task to be done.","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"    private String addMessage \u003d \"Understood. No rest for the weary, eh?\";","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"     * Constructs a to-do object, given its description.","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"     * @param name The description of the to-do object, as will be represented in the list of tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"    public Todo(String name) {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"     * Returns the string representation of the to-do object.","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"     * @return A string representation for display to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"     * Returns a message to display to the user when this type of Task is added to the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"     * @return The message to display to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"    public String getAddMessage() {","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"        return addMessage;","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"     * Searches for a given search term in the name of the to-do.","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"     * @param searchTerm The term to search for.","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"     * @return True if the name contains the search term, false otherwise.","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"    public boolean contains(String searchTerm) {","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"        return super.name.contains(searchTerm);","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"kiatkat":47}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"kiatkat":15}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"prts.gui.MainWindow\"\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"kiatkat":18}},{"path":"src/test/java/prts/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"import prts.command.CommandParser;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"import prts.command.ListCommand;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"import prts.command.ParsingException;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"    public void parse_list_success() {","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"            assertEquals(CommandParser.parse(\"list\").getClass(), ListCommand.class);","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"        } catch (ParsingException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"            fail();","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"    public void parse_listCasing_success() {","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"            assertEquals(CommandParser.parse(\"lIsT\").getClass(), ListCommand.class);","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"        } catch (ParsingException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"            fail();","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"    public void parse_listMultipleWords_reject() {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"            assertEquals(CommandParser.parse(\"list list\").getClass(), ListCommand.class);","lastModifiedDate":"2023-09-24"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"            fail();","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"        } catch (ParsingException ignored) {","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"            // success case, ignore exception","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"kiatkat":43}},{"path":"src/test/java/prts/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kiatkat"},"content":"package prts;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"kiatkat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"kiatkat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"kiatkat"},"content":"import prts.task.Task;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"kiatkat"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"kiatkat"},"content":"    public void addTask_validInput_success() {","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"kiatkat"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"kiatkat"},"content":"        String output \u003d taskList.add(new Task(\"fakeTask\") {","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"kiatkat"},"content":"            @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"kiatkat"},"content":"            public String getAddMessage() {","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"kiatkat"},"content":"                return \"\";","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"kiatkat"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"kiatkat"},"content":"            @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"kiatkat"},"content":"            public boolean contains(String searchTerm) {","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"kiatkat"},"content":"                return false;","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"kiatkat"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"kiatkat"},"content":"        });","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"kiatkat"},"content":"        assertEquals(\"\\n[ ] fakeTask\", output);","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"kiatkat"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"kiatkat"},"content":"    public void deleteTask_onlyTask_success() throws OutOfRangeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"kiatkat"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"kiatkat"},"content":"        taskList.add(new Task(\"fakeTask\") {","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"kiatkat"},"content":"            @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"kiatkat"},"content":"            public String getAddMessage() {","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"kiatkat"},"content":"                return \"\";","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"kiatkat"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"kiatkat"},"content":"            @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"kiatkat"},"content":"            public boolean contains(String searchTerm) {","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"kiatkat"},"content":"                return false;","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"kiatkat"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"kiatkat"},"content":"        });","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"kiatkat"},"content":"        assertEquals(\"As you wish. This task has been removed:\\n[ ] fakeTask\"","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"kiatkat"},"content":"                        + \"\\nYou now have 0 tasks in your list.\\nCongratulations!\",","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"kiatkat"},"content":"                taskList.delete(1));","lastModifiedDate":"2023-09-24"},{"lineNumber":45,"author":{"gitId":"kiatkat"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"kiatkat"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"kiatkat"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"kiatkat":47}}]
