[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"    protected String by;","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"        super(description);","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"mfjkri":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"    static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"    static Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"        String logo \u003d","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"                \"    ,o888888o.    8 8888        8          .8.    8888888 8888888888 8888888 8888888888 `8.`8888.      ,8\u0027\\n\" +","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"                        \"   8888     `88.  8 8888        8         .888.         8 8888             8 8888        `8.`8888.    ,8\u0027\\n\" +","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"                        \",8 8888       `8. 8 8888        8        :88888.        8 8888             8 8888         `8.`8888.  ,8\u0027\\n\" +","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"                        \"88 8888           8 8888        8       . `88888.       8 8888             8 8888          `8.`8888.,8\u0027\\n\" +","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"                        \"88 8888           8 8888        8      .8. `88888.      8 8888             8 8888           `8.`88888\u0027\\n\" +","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"                        \"88 8888           8 8888        8     .8`8. `88888.     8 8888             8 8888            `8. 8888\\n\" +","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"                        \"88 8888           8 8888888888888    .8\u0027 `8. `88888.    8 8888             8 8888             `8 8888\\n\" +","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"                        \"`8 8888       .8\u0027 8 8888        8   .8\u0027   `8. `88888.   8 8888             8 8888              8 8888\\n\" +","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"                        \"   8888     ,88\u0027  8 8888        8  .888888888. `88888.  8 8888             8 8888              8 8888\\n\" +","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"                        \"    `8888888P\u0027    8 8888        8 .8\u0027       `8. `88888. 8 8888             8 8888              8 8888\\n\";","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"        System.out.println(\"------------------------------------------\");","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"        System.out.println(\"Hi!! I am\\n\" + logo);","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"        System.out.println(\"What brings you here today?\");","lastModifiedDate":"2023-08-19"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"        System.out.println(\"------------------------------------------\");","lastModifiedDate":"2023-08-19"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"        while (true) {","lastModifiedDate":"2023-08-19"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-19"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"            String[] tokens \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-19"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"            System.out.println(\"------------------------------------------\");","lastModifiedDate":"2023-08-19"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"            try {","lastModifiedDate":"2023-08-19"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"                String rootCmd \u003d tokens[0];","lastModifiedDate":"2023-08-19"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"                if (rootCmd.equals(\"list\")) {","lastModifiedDate":"2023-08-19"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"                    for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-19"},{"lineNumber":37,"author":{"gitId":"mfjkri"},"content":"                        System.out.println((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2023-08-19"},{"lineNumber":38,"author":{"gitId":"mfjkri"},"content":"                    }","lastModifiedDate":"2023-08-19"},{"lineNumber":39,"author":{"gitId":"mfjkri"},"content":"                } else if (rootCmd.equals(\"bye\")) {","lastModifiedDate":"2023-08-19"},{"lineNumber":40,"author":{"gitId":"mfjkri"},"content":"                    System.out.println(\"Oh.. bye\");","lastModifiedDate":"2023-08-19"},{"lineNumber":41,"author":{"gitId":"mfjkri"},"content":"                    break;","lastModifiedDate":"2023-08-19"},{"lineNumber":42,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":43,"author":{"gitId":"mfjkri"},"content":"                } else if (rootCmd.equals(\"delete\")) {","lastModifiedDate":"2023-08-19"},{"lineNumber":44,"author":{"gitId":"mfjkri"},"content":"                    int index \u003d validateTaskIndex(tokens[1]);","lastModifiedDate":"2023-08-19"},{"lineNumber":45,"author":{"gitId":"mfjkri"},"content":"                    Task task \u003d tasks.get(index);","lastModifiedDate":"2023-08-19"},{"lineNumber":46,"author":{"gitId":"mfjkri"},"content":"                    tasks.remove(index);","lastModifiedDate":"2023-08-19"},{"lineNumber":47,"author":{"gitId":"mfjkri"},"content":"                    System.out.printf(\"Noted. I\u0027ve removed this task:\\n\\t%s\\n\", task);","lastModifiedDate":"2023-08-19"},{"lineNumber":48,"author":{"gitId":"mfjkri"},"content":"                    System.out.printf(\"Now you have %d tasks in the list.\\n\", tasks.size());","lastModifiedDate":"2023-08-19"},{"lineNumber":49,"author":{"gitId":"mfjkri"},"content":"                } else if (rootCmd.equals(\"mark\")) {","lastModifiedDate":"2023-08-19"},{"lineNumber":50,"author":{"gitId":"mfjkri"},"content":"                    if (tokens.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-19"},{"lineNumber":51,"author":{"gitId":"mfjkri"},"content":"                        throw new DukeException(\"The task index of a task cannot be empty.\");","lastModifiedDate":"2023-08-19"},{"lineNumber":52,"author":{"gitId":"mfjkri"},"content":"                    }","lastModifiedDate":"2023-08-19"},{"lineNumber":53,"author":{"gitId":"mfjkri"},"content":"                    int index \u003d validateTaskIndex(tokens[1]);","lastModifiedDate":"2023-08-19"},{"lineNumber":54,"author":{"gitId":"mfjkri"},"content":"                    Task task \u003d tasks.get(index);","lastModifiedDate":"2023-08-19"},{"lineNumber":55,"author":{"gitId":"mfjkri"},"content":"                    task.setStatus(true);","lastModifiedDate":"2023-08-19"},{"lineNumber":56,"author":{"gitId":"mfjkri"},"content":"                } else if (rootCmd.equals(\"unmark\")) {","lastModifiedDate":"2023-08-19"},{"lineNumber":57,"author":{"gitId":"mfjkri"},"content":"                    if (tokens.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-19"},{"lineNumber":58,"author":{"gitId":"mfjkri"},"content":"                        throw new DukeException(\"The task index of a task cannot be empty.\");","lastModifiedDate":"2023-08-19"},{"lineNumber":59,"author":{"gitId":"mfjkri"},"content":"                    }","lastModifiedDate":"2023-08-19"},{"lineNumber":60,"author":{"gitId":"mfjkri"},"content":"                    int index \u003d validateTaskIndex(tokens[1]);","lastModifiedDate":"2023-08-19"},{"lineNumber":61,"author":{"gitId":"mfjkri"},"content":"                    Task task \u003d tasks.get(index);","lastModifiedDate":"2023-08-19"},{"lineNumber":62,"author":{"gitId":"mfjkri"},"content":"                    task.setStatus(false);","lastModifiedDate":"2023-08-19"},{"lineNumber":63,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":64,"author":{"gitId":"mfjkri"},"content":"                } else if (rootCmd.equals(\"todo\")) {","lastModifiedDate":"2023-08-19"},{"lineNumber":65,"author":{"gitId":"mfjkri"},"content":"                    if (tokens.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-19"},{"lineNumber":66,"author":{"gitId":"mfjkri"},"content":"                        throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-19"},{"lineNumber":67,"author":{"gitId":"mfjkri"},"content":"                    }","lastModifiedDate":"2023-08-19"},{"lineNumber":68,"author":{"gitId":"mfjkri"},"content":"                    String todoText \u003d input.substring(5);","lastModifiedDate":"2023-08-19"},{"lineNumber":69,"author":{"gitId":"mfjkri"},"content":"                    addTask(new Todo(todoText));","lastModifiedDate":"2023-08-19"},{"lineNumber":70,"author":{"gitId":"mfjkri"},"content":"                } else if (rootCmd.equals(\"deadline\")) {","lastModifiedDate":"2023-08-19"},{"lineNumber":71,"author":{"gitId":"mfjkri"},"content":"                    if (tokens.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-19"},{"lineNumber":72,"author":{"gitId":"mfjkri"},"content":"                        throw new DukeException(\"The description and due date of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-19"},{"lineNumber":73,"author":{"gitId":"mfjkri"},"content":"                    }","lastModifiedDate":"2023-08-19"},{"lineNumber":74,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":75,"author":{"gitId":"mfjkri"},"content":"                    String deadlineText \u003d tokens[1];","lastModifiedDate":"2023-08-19"},{"lineNumber":76,"author":{"gitId":"mfjkri"},"content":"                    String[] parts \u003d deadlineText.split(\"/by\", 2);","lastModifiedDate":"2023-08-19"},{"lineNumber":77,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":78,"author":{"gitId":"mfjkri"},"content":"                    if (parts.length \u003d\u003d 0) {","lastModifiedDate":"2023-08-19"},{"lineNumber":79,"author":{"gitId":"mfjkri"},"content":"                        throw new DukeException(\"The description and due date of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-19"},{"lineNumber":80,"author":{"gitId":"mfjkri"},"content":"                    } else if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-19"},{"lineNumber":81,"author":{"gitId":"mfjkri"},"content":"                        throw new DukeException(\"The due date of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-19"},{"lineNumber":82,"author":{"gitId":"mfjkri"},"content":"                    }","lastModifiedDate":"2023-08-19"},{"lineNumber":83,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":84,"author":{"gitId":"mfjkri"},"content":"                    String description \u003d parts[0].trim();","lastModifiedDate":"2023-08-19"},{"lineNumber":85,"author":{"gitId":"mfjkri"},"content":"                    String date \u003d parts[1].trim();","lastModifiedDate":"2023-08-19"},{"lineNumber":86,"author":{"gitId":"mfjkri"},"content":"                    addTask(new Deadline(description, date));","lastModifiedDate":"2023-08-19"},{"lineNumber":87,"author":{"gitId":"mfjkri"},"content":"                } else if (rootCmd.equals(\"event\")) {","lastModifiedDate":"2023-08-19"},{"lineNumber":88,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":89,"author":{"gitId":"mfjkri"},"content":"                    if (tokens.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-19"},{"lineNumber":90,"author":{"gitId":"mfjkri"},"content":"                        throw new DukeException(\"The description, start date/time and end date/time of an event cannot be empty.\");","lastModifiedDate":"2023-08-19"},{"lineNumber":91,"author":{"gitId":"mfjkri"},"content":"                    }","lastModifiedDate":"2023-08-19"},{"lineNumber":92,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":93,"author":{"gitId":"mfjkri"},"content":"                    String eventText \u003d tokens[1];","lastModifiedDate":"2023-08-19"},{"lineNumber":94,"author":{"gitId":"mfjkri"},"content":"                    String[] eventParts \u003d eventText.split(\"/from\", 2);","lastModifiedDate":"2023-08-19"},{"lineNumber":95,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":96,"author":{"gitId":"mfjkri"},"content":"                    if (eventParts.length \u003d\u003d 0) {","lastModifiedDate":"2023-08-19"},{"lineNumber":97,"author":{"gitId":"mfjkri"},"content":"                        throw new DukeException(\"The description, start date/time and end date/time of an event cannot be empty.\");","lastModifiedDate":"2023-08-19"},{"lineNumber":98,"author":{"gitId":"mfjkri"},"content":"                    } else if (eventParts.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-19"},{"lineNumber":99,"author":{"gitId":"mfjkri"},"content":"                        throw new DukeException(\"The start date/time and end date/time of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-19"},{"lineNumber":100,"author":{"gitId":"mfjkri"},"content":"                    }","lastModifiedDate":"2023-08-19"},{"lineNumber":101,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":102,"author":{"gitId":"mfjkri"},"content":"                    String description \u003d eventParts[0].trim();","lastModifiedDate":"2023-08-19"},{"lineNumber":103,"author":{"gitId":"mfjkri"},"content":"                    String[] fromToParts \u003d eventParts[1].split(\"/to\", 2);","lastModifiedDate":"2023-08-19"},{"lineNumber":104,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":105,"author":{"gitId":"mfjkri"},"content":"                    if (fromToParts.length \u003d\u003d 0) {","lastModifiedDate":"2023-08-19"},{"lineNumber":106,"author":{"gitId":"mfjkri"},"content":"                        throw new DukeException(\"The start date/time and end date/time of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-19"},{"lineNumber":107,"author":{"gitId":"mfjkri"},"content":"                    } else if (fromToParts.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-19"},{"lineNumber":108,"author":{"gitId":"mfjkri"},"content":"                        throw new DukeException(\"The end date/time of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-19"},{"lineNumber":109,"author":{"gitId":"mfjkri"},"content":"                    }","lastModifiedDate":"2023-08-19"},{"lineNumber":110,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":111,"author":{"gitId":"mfjkri"},"content":"                    String fromDate \u003d fromToParts[0].trim();","lastModifiedDate":"2023-08-19"},{"lineNumber":112,"author":{"gitId":"mfjkri"},"content":"                    String toTime \u003d fromToParts[1].trim();","lastModifiedDate":"2023-08-19"},{"lineNumber":113,"author":{"gitId":"mfjkri"},"content":"                    addTask(new Event(description, fromDate, toTime));","lastModifiedDate":"2023-08-19"},{"lineNumber":114,"author":{"gitId":"mfjkri"},"content":"                } else {","lastModifiedDate":"2023-08-19"},{"lineNumber":115,"author":{"gitId":"mfjkri"},"content":"                    throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-19"},{"lineNumber":116,"author":{"gitId":"mfjkri"},"content":"                }","lastModifiedDate":"2023-08-19"},{"lineNumber":117,"author":{"gitId":"mfjkri"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-19"},{"lineNumber":118,"author":{"gitId":"mfjkri"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-19"},{"lineNumber":119,"author":{"gitId":"mfjkri"},"content":"            }","lastModifiedDate":"2023-08-19"},{"lineNumber":120,"author":{"gitId":"mfjkri"},"content":"            System.out.println(\"------------------------------------------\");","lastModifiedDate":"2023-08-19"},{"lineNumber":121,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":122,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":123,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":124,"author":{"gitId":"mfjkri"},"content":"    private static int validateTaskIndex(String input) throws DukeException {","lastModifiedDate":"2023-08-19"},{"lineNumber":125,"author":{"gitId":"mfjkri"},"content":"        try {","lastModifiedDate":"2023-08-19"},{"lineNumber":126,"author":{"gitId":"mfjkri"},"content":"            int number \u003d Integer.parseInt(input);","lastModifiedDate":"2023-08-19"},{"lineNumber":127,"author":{"gitId":"mfjkri"},"content":"            if (number \u003c 1 || number \u003e 100) {","lastModifiedDate":"2023-08-19"},{"lineNumber":128,"author":{"gitId":"mfjkri"},"content":"                throw new DukeException(\"Please provide a task index that is 1 \u003c\u003d task index \u003c\u003d 100.\");","lastModifiedDate":"2023-08-19"},{"lineNumber":129,"author":{"gitId":"mfjkri"},"content":"            } else if (tasks.size() \u003c number) {","lastModifiedDate":"2023-08-19"},{"lineNumber":130,"author":{"gitId":"mfjkri"},"content":"                throw new DukeException(\"The given task index is higher than current task list: \" + tasks.size()  + \".\");","lastModifiedDate":"2023-08-19"},{"lineNumber":131,"author":{"gitId":"mfjkri"},"content":"            }","lastModifiedDate":"2023-08-19"},{"lineNumber":132,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":133,"author":{"gitId":"mfjkri"},"content":"            int index \u003d number - 1;","lastModifiedDate":"2023-08-19"},{"lineNumber":134,"author":{"gitId":"mfjkri"},"content":"            Task task \u003d tasks.get(index);","lastModifiedDate":"2023-08-19"},{"lineNumber":135,"author":{"gitId":"mfjkri"},"content":"            if (task \u003d\u003d null) {","lastModifiedDate":"2023-08-19"},{"lineNumber":136,"author":{"gitId":"mfjkri"},"content":"                throw new DukeException(\"There is no task at the given task index.\");","lastModifiedDate":"2023-08-19"},{"lineNumber":137,"author":{"gitId":"mfjkri"},"content":"            }","lastModifiedDate":"2023-08-19"},{"lineNumber":138,"author":{"gitId":"mfjkri"},"content":"            return index;","lastModifiedDate":"2023-08-19"},{"lineNumber":139,"author":{"gitId":"mfjkri"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-19"},{"lineNumber":140,"author":{"gitId":"mfjkri"},"content":"            throw new DukeException(\"Please provide a valid number format\");","lastModifiedDate":"2023-08-19"},{"lineNumber":141,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":143,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":144,"author":{"gitId":"mfjkri"},"content":"    private static void addTask(Task task) {","lastModifiedDate":"2023-08-19"},{"lineNumber":145,"author":{"gitId":"mfjkri"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-19"},{"lineNumber":146,"author":{"gitId":"mfjkri"},"content":"        System.out.printf(\"Got it. I\u0027ve added this task:\\n\\t%s\\n\", task);","lastModifiedDate":"2023-08-19"},{"lineNumber":147,"author":{"gitId":"mfjkri"},"content":"        System.out.printf(\"Now you have %d tasks in the list.\\n\", tasks.size());","lastModifiedDate":"2023-08-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":5,"mfjkri":144}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"        super(\" ☹ OOPS!!! + \" + message);","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"mfjkri":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"    protected String from;","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"    protected String to;","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"        super(description);","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"mfjkri":16}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"public class Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"    protected String description;","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"    public void setStatus(boolean status) {","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"        if (isDone) {","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"            System.out.printf(\"Nice! I\u0027ve marked this task as done:\\n\\t%s\\n\", this);","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"        } else {","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"            System.out.printf(\"OK, I\u0027ve marked this task as not done yet:\\n\\t%s\\n\", this);","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2023-08-19"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"mfjkri":29}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"        super(description);","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"mfjkri":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"todo read book","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"mark 1","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"mark 3","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"todo","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"unmark 100","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"unmark 200","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"unmark 0","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"unmark abc","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"unmark 3","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"delete 3","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"bye","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"mfjkri":17}}]
