[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"instructions on how to use it.","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"   first)","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"   in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"   code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"   like the below as the output:","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"mfjkri":10}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"mfjkri":1}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import duke.command.Command;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"import duke.error.DukeException;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"import duke.lib.UI;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"import duke.lib.Storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"    private final Storage storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"    private final UI ui;","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"        this.ui \u003d new UI();","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"        this.storage \u003d new Storage(\"data\", \"duke.txt\");","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"        try {","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"    public void run() {","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"        while (!isExit) {","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"            try {","lastModifiedDate":"2023-08-19"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"mfjkri"},"content":"                ui.showLine();","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"mfjkri"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"mfjkri"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"mfjkri"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"mfjkri"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"mfjkri"},"content":"                ui.showError(e);","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"mfjkri"},"content":"            } finally {","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"mfjkri"},"content":"                ui.showLine();","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"mfjkri"},"content":"            }","lastModifiedDate":"2023-08-19"},{"lineNumber":46,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":47,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":48,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"mfjkri":47}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.command;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import duke.error.DukeException;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"import duke.lib.Storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"import duke.lib.UI;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":" * Represents a command to add a task.","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"    private final Task task;","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"     * Constructs an AddCommand with the specified task to be added.","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"     * Executes the add command, adding the task to the task list, displaying a message, and saving to storage.","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"     * @param tasks   The task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"     * @param storage The storage handler.","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If there\u0027s an issue executing the command.","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"        // Add the task to the task list and display a message","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"        ui.showMessage(String.format(\"Got it. I\u0027ve added this task:\\n\\t%s\\n\", tasks.addTask(this.task)));","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"mfjkri"},"content":"        // Display the updated task list status","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"mfjkri"},"content":"        ui.showMessage(tasks.status());","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"mfjkri"},"content":"        // Save the updated task list to storage","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"mfjkri"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"mfjkri":43}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.command;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import duke.error.DukeException;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"import duke.lib.Storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"import duke.lib.UI;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":" * Represents an abstract command that can be executed by the Duke chatbot.","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"     * Executes the command with the given task list, user interface, and storage.","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"     * @param tasks   The task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"     * @param storage The storage handler.","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If there\u0027s an issue executing the command.","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"    public abstract void execute(TaskList tasks, UI ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"     * @return True if the command is an exit command, false otherwise.","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"        return false;","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"mfjkri":31}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.command;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import duke.error.DukeException;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"import duke.lib.Storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"import duke.lib.UI;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"    private final int index;","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"     * Constructs a DeleteCommand with the given task index.","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"     * Executes the delete command, removing the specified task from the task list. Notifies the user interface and","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"     * storage handler about the deletion.","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"     * @param tasks   The task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"     * @param storage The storage handler.","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If there\u0027s an issue executing the command.","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"        ui.showMessage(String.format(\"Noted. I\u0027ve removed this task:\\n\\t%s\\n\", tasks.deleteTask(this.index)));","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"        ui.showMessage(tasks.status());","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"mfjkri"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"mfjkri":39}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.command;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import duke.lib.Storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"import duke.lib.UI;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":" * Represents a command to exit the Duke chatbot application.","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"     * Executes the exit command, displaying a goodbye message on the user interface.","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"     * @param tasks   The task list (not used in this command).","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"     * @param storage The storage handler (not used in this command).","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"        ui.showGoodbye();","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"     * Indicates that this command is an exit command.","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"     * @return {@code true} to indicate that this command is an exit command.","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"        return true;","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"mfjkri":33}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.command;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import duke.lib.Storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"import duke.lib.UI;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":" * Represents a command to search for tasks containing a specified keyword.","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"    private String searchKeyword;","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"     * Constructs a FindCommand with the specified search keyword.","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"     * @param searchKeyword The keyword to search for in task descriptions.","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"    public FindCommand(String searchKeyword) {","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"        this.searchKeyword \u003d searchKeyword;","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"     * Executes the FindCommand by searching for tasks matching the specified keyword and displaying the results.","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"     * @param tasks   The TaskList containing tasks to search through.","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"     * @param ui      The UI for displaying messages to the user.","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"     * @param storage The Storage for saving task data.","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"        ui.showMessage(tasks.searchMatchingTasks(this.searchKeyword));","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"mfjkri":33}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.command;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import duke.lib.Storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"import duke.lib.UI;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"     * Executes the list command, displaying all tasks in the task list on the user interface.","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"     * @param tasks   The task list containing the tasks to be listed.","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"     * @param storage The storage handler (not used in this command).","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"        ui.showMessage(tasks.toString());","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"mfjkri":23}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.command;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import duke.error.DukeException;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"import duke.lib.Storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"import duke.lib.UI;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":" * Represents a command to mark a task as done in the task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"    private final int index;","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"     * Constructs a MarkCommand object with the specified task index.","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"     * Executes the mark command, marking the specified task as done and updating the task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"     * @param tasks   The task list containing the tasks.","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"     * @param ui      The user interface to display messages.","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"     * @param storage The storage handler to save the updated task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If there\u0027s an error marking the task or saving the task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"        ui.showMessage(String.format(\"Nice! I\u0027ve marked this task as done:\\n\\t%s\\n\", tasks.markTask(index)));","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"mfjkri":36}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.command;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import duke.error.DukeException;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"import duke.lib.Storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"import duke.lib.UI;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":" * Represents a command to mark a task as not done in the task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"    private final int index;","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"     * Constructs an UnmarkCommand object with the specified task index.","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"     * @param index The index of the task to be marked as not done.","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"     * Executes the unmark command, marking the specified task as not done and updating the task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"     * @param tasks   The task list containing the tasks.","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"     * @param ui      The user interface to display messages.","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"     * @param storage The storage handler to save the updated task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If there\u0027s an error unmarking the task or saving the task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"        ui.showMessage(String.format(\"OK, I\u0027ve marked this task as not done yet:\\n\\t%s\\n\",","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"                tasks.unmarkTask(this.index)));","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"mfjkri":37}},{"path":"src/main/java/duke/error/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.error;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":" * Represents an exception specific to the Duke application.","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":" * DukeException is thrown when there\u0027s an issue or error within the Duke application.","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"     * Constructs a DukeException with the specified error message.","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"     * @param message Error message indicating the nature of the exception.","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"        super(\" ☹ OOPS!!! \" + message);","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"mfjkri":17}},{"path":"src/main/java/duke/lib/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.lib;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import duke.error.DukeException;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"import java.io.File;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":" * Manages reading and writing tasks to a save file.","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"public class Storage {","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"    private File saveFile;","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"    private String directoryPath;","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"    private String fullFilePath;","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"     * Constructs a Storage object with the specified directory and file name.","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"     * @param directoryName Directory where the file will be stored.","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"     * @param fileName      Name of the save file.","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"    public Storage(String directoryName, String fileName) {","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"        this.directoryPath \u003d \"./\" + directoryName;","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"        this.fullFilePath \u003d this.directoryPath + \"/\" + fileName;","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"        this.saveFile \u003d new File(this.fullFilePath);","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"mfjkri"},"content":"     * Creates the directory and save file if they are missing.","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If an unexpected error occurs while creating the directory or file.","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"mfjkri"},"content":"    private void createIfMissing() throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"mfjkri"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"mfjkri"},"content":"            File directory \u003d new File(this.directoryPath);","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"mfjkri"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"mfjkri"},"content":"                directory.mkdir();","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"mfjkri"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"mfjkri"},"content":"            if (!this.saveFile.exists()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"mfjkri"},"content":"                this.saveFile.createNewFile();","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"mfjkri"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"mfjkri"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"mfjkri"},"content":"            throw new DukeException(\"Unexpected error occurred. Cannot create new save file!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"mfjkri"},"content":"     * Loads tasks from the save file.","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"mfjkri"},"content":"     * @return ArrayList of serialized task strings.","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If the file is corrupted or an error occurs during loading.","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"mfjkri"},"content":"    public ArrayList\u003cString\u003e load() throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"mfjkri"},"content":"        ArrayList\u003cString\u003e serializedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"mfjkri"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"mfjkri"},"content":"            Scanner saveFileReader \u003d new Scanner(this.saveFile);","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"mfjkri"},"content":"            while (saveFileReader.hasNextLine()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"mfjkri"},"content":"                serializedTasks.add(saveFileReader.nextLine());","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"mfjkri"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"mfjkri"},"content":"            saveFileReader.close();","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"mfjkri"},"content":"        } catch (FileNotFoundException e1) {","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"mfjkri"},"content":"            this.createIfMissing();","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"mfjkri"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"mfjkri"},"content":"            throw new DukeException(\"File save is corrupted\");","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"mfjkri"},"content":"        return serializedTasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"mfjkri"},"content":"     * Saves the tasks to the save file.","lastModifiedDate":"2023-08-26"},{"lineNumber":79,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":80,"author":{"gitId":"mfjkri"},"content":"     * @param tasks TaskList containing tasks to be saved.","lastModifiedDate":"2023-08-26"},{"lineNumber":81,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If an error occurs during saving.","lastModifiedDate":"2023-08-26"},{"lineNumber":82,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":83,"author":{"gitId":"mfjkri"},"content":"    public void save(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":84,"author":{"gitId":"mfjkri"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(this.fullFilePath))) {","lastModifiedDate":"2023-08-26"},{"lineNumber":85,"author":{"gitId":"mfjkri"},"content":"            tasks.save(writer);","lastModifiedDate":"2023-08-26"},{"lineNumber":86,"author":{"gitId":"mfjkri"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":87,"author":{"gitId":"mfjkri"},"content":"            throw new DukeException(\"Failed to save!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":88,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":89,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":90,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"mfjkri":90}},{"path":"src/main/java/duke/lib/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.lib;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import duke.error.DukeException;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":" * Represents the user interface of the Duke application.","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"public class UI {","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"     * Constructs a UI object and initializes the scanner for user input.","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"    public UI() {","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"     * Displays a welcome message to the user.","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"        String logo \u003d","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"                \"    ,o888888o.    8 8888        8          .8.    8888888 8888888888 8888888 8888888888 `8.`8888.      ,8\u0027\\n\" +","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"                        \"   8888     `88.  8 8888        8         .888.         8 8888             8 8888        `8.`8888.    ,8\u0027\\n\" +","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"                        \",8 8888       `8. 8 8888        8        :88888.        8 8888             8 8888         `8.`8888.  ,8\u0027\\n\" +","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"                        \"88 8888           8 8888        8       . `88888.       8 8888             8 8888          `8.`8888.,8\u0027\\n\" +","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"                        \"88 8888           8 8888        8      .8. `88888.      8 8888             8 8888           `8.`88888\u0027\\n\" +","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"                        \"88 8888           8 8888        8     .8`8. `88888.     8 8888             8 8888            `8. 8888\\n\" +","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"                        \"88 8888           8 8888888888888    .8\u0027 `8. `88888.    8 8888             8 8888             `8 8888\\n\" +","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"                        \"`8 8888       .8\u0027 8 8888        8   .8\u0027   `8. `88888.   8 8888             8 8888              8 8888\\n\" +","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"                        \"   8888     ,88\u0027  8 8888        8  .888888888. `88888.  8 8888             8 8888              8 8888\\n\" +","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"                        \"    `8888888P\u0027    8 8888        8 .8\u0027       `8. `88888. 8 8888             8 8888              8 8888\\n\";","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"mfjkri"},"content":"        System.out.println(\"------------------------------------------\");","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"mfjkri"},"content":"        System.out.println(\"Hi!! I am\\n\" + logo);","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"mfjkri"},"content":"        System.out.println(\"What brings you here today?\");","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"mfjkri"},"content":"        System.out.println(\"------------------------------------------\");","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"mfjkri"},"content":"     * Displays a goodbye message to the user.","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"mfjkri"},"content":"    public void showGoodbye() {","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"mfjkri"},"content":"        System.out.println(\"Oh.. bye\");","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"mfjkri"},"content":"     * Displays an error message for loading data from the save file.","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"mfjkri"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"mfjkri"},"content":"        System.out.println(\"Error reading from save file.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"mfjkri"},"content":"     * Reads and returns a user command input.","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"mfjkri"},"content":"     * @return The user\u0027s input command.","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"mfjkri"},"content":"    public String readCommand() {","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"mfjkri"},"content":"        return this.scanner.nextLine();","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"mfjkri"},"content":"     * Displays a separator line.","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"mfjkri"},"content":"    public void showLine() {","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"mfjkri"},"content":"        System.out.println(\"------------------------------------------\");","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"mfjkri"},"content":"     * Displays an error message.","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"mfjkri"},"content":"     * @param error The DukeException containing the error message.","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"mfjkri"},"content":"    public void showError(DukeException error) {","lastModifiedDate":"2023-08-26"},{"lineNumber":79,"author":{"gitId":"mfjkri"},"content":"        System.out.println(error.getMessage());","lastModifiedDate":"2023-08-26"},{"lineNumber":80,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":81,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":82,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":83,"author":{"gitId":"mfjkri"},"content":"     * Displays a message to the user.","lastModifiedDate":"2023-08-26"},{"lineNumber":84,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":85,"author":{"gitId":"mfjkri"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2023-08-26"},{"lineNumber":86,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":87,"author":{"gitId":"mfjkri"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2023-08-26"},{"lineNumber":88,"author":{"gitId":"mfjkri"},"content":"        System.out.println(message);","lastModifiedDate":"2023-08-26"},{"lineNumber":89,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":90,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"mfjkri":90}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.parser;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import duke.command.*;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"import duke.error.DukeException;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":" * Parses user input commands and creates corresponding Command objects.","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"public class Parser {","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"     * Parses the full user input command and returns the corresponding Command object.","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"     * @param fullCommand The full user input command.","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"     * @return The corresponding Command object.","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If there\u0027s an issue parsing the command.","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"        String[] tokens \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"        String rootCmd \u003d tokens[0];","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"        switch (rootCmd) {","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"            case \"list\":","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"                return new ListCommand();","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"            case \"bye\":","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"                return new ExitCommand();","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"            case \"delete\": {","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"                if (tokens.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"                    throwException(\"The task index of a task cannot be empty\", \"delete \u003ctask index\u003e\");","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"                int index \u003d Validate.validateNumber(tokens[1]);","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"                return new DeleteCommand(index);","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"            case \"mark\": {","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"mfjkri"},"content":"                if (tokens.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"mfjkri"},"content":"                    throwException(\"The task index of a task cannot be empty\", \"mark \u003ctask index\u003e\");","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"mfjkri"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"mfjkri"},"content":"                int index \u003d Validate.validateNumber(tokens[1]);","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"mfjkri"},"content":"                return new MarkCommand(index);","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"mfjkri"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"mfjkri"},"content":"            case \"unmark\": {","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"mfjkri"},"content":"                if (tokens.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"mfjkri"},"content":"                    throwException(\"The task index of a task cannot be empty\", \"unmark \u003ctask index\u003e\");","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"mfjkri"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"mfjkri"},"content":"                int index \u003d Validate.validateNumber(tokens[1]);","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"mfjkri"},"content":"                return new UnmarkCommand(index);","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"mfjkri"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"mfjkri"},"content":"            case \"find\": {","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"mfjkri"},"content":"                if (tokens.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"mfjkri"},"content":"                    throwException(\"The search keyword cannot be empty\", \"find \u003csearch keyword\u003e\");","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"mfjkri"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"mfjkri"},"content":"                return new FindCommand(tokens[1]);","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"mfjkri"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"mfjkri"},"content":"            case \"todo\":","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"mfjkri"},"content":"                if (fullCommand.length() \u003c 5) {","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"mfjkri"},"content":"                    throwException(\"The description of a todo cannot be empty\", \"todo \u003cdescription\u003e\");","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"mfjkri"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"mfjkri"},"content":"                String todoText \u003d fullCommand.substring(5);","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"mfjkri"},"content":"                if (todoText.trim().equals(\"\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"mfjkri"},"content":"                    throwException(\"The description of a todo cannot be empty\", \"todo \u003cdescription\u003e\");","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"mfjkri"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"mfjkri"},"content":"                return new AddCommand(new Todo(todoText));","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"mfjkri"},"content":"            case \"deadline\": {","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"mfjkri"},"content":"                String usageText \u003d \"deadline \u003cdescription\u003e /by \u003cdue date/time\u003e\";","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"mfjkri"},"content":"                if (tokens.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"mfjkri"},"content":"                    throwException(\"The description and due date of a deadline cannot be empty.\", usageText);","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"mfjkri"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"mfjkri"},"content":"                String deadlineText \u003d tokens[1];","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"mfjkri"},"content":"                String[] parts \u003d deadlineText.split(\"/by\", 2);","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"mfjkri"},"content":"                if (parts.length \u003d\u003d 0) {","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"mfjkri"},"content":"                    throwException(\"The description and due date of a deadline cannot be empty.\", usageText);","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"mfjkri"},"content":"                } else if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"mfjkri"},"content":"                    throwException(\"The due date of a deadline cannot be empty.\", usageText);","lastModifiedDate":"2023-08-26"},{"lineNumber":79,"author":{"gitId":"mfjkri"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":80,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":81,"author":{"gitId":"mfjkri"},"content":"                String description \u003d parts[0].trim();","lastModifiedDate":"2023-08-26"},{"lineNumber":82,"author":{"gitId":"mfjkri"},"content":"                String date \u003d parts[1].trim();","lastModifiedDate":"2023-08-26"},{"lineNumber":83,"author":{"gitId":"mfjkri"},"content":"                if (description.trim().equals(\"\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":84,"author":{"gitId":"mfjkri"},"content":"                    throwException(\"The description of a deadline cannot be empty.\", usageText);","lastModifiedDate":"2023-08-26"},{"lineNumber":85,"author":{"gitId":"mfjkri"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":86,"author":{"gitId":"mfjkri"},"content":"                if (date.trim().equals(\"\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":87,"author":{"gitId":"mfjkri"},"content":"                    throwException(\"The due date of a deadline cannot be empty.\", usageText);","lastModifiedDate":"2023-08-26"},{"lineNumber":88,"author":{"gitId":"mfjkri"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":89,"author":{"gitId":"mfjkri"},"content":"                return new AddCommand(new Deadline(description, Validate.validateLocalDateTime(date)));","lastModifiedDate":"2023-08-26"},{"lineNumber":90,"author":{"gitId":"mfjkri"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":91,"author":{"gitId":"mfjkri"},"content":"            case \"event\": {","lastModifiedDate":"2023-08-26"},{"lineNumber":92,"author":{"gitId":"mfjkri"},"content":"                String usageText \u003d \"event \u003cdescription\u003e /from \u003cstart date/time\u003e /to \u003cend date/time\u003e\";","lastModifiedDate":"2023-08-26"},{"lineNumber":93,"author":{"gitId":"mfjkri"},"content":"                if (tokens.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-26"},{"lineNumber":94,"author":{"gitId":"mfjkri"},"content":"                    throwException(\"The description, start date/time and end date/time of an event cannot be empty.\",","lastModifiedDate":"2023-08-26"},{"lineNumber":95,"author":{"gitId":"mfjkri"},"content":"                            usageText);","lastModifiedDate":"2023-08-26"},{"lineNumber":96,"author":{"gitId":"mfjkri"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":97,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":98,"author":{"gitId":"mfjkri"},"content":"                String eventText \u003d tokens[1];","lastModifiedDate":"2023-08-26"},{"lineNumber":99,"author":{"gitId":"mfjkri"},"content":"                String[] eventParts \u003d eventText.split(\"/from\", 2);","lastModifiedDate":"2023-08-26"},{"lineNumber":100,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":101,"author":{"gitId":"mfjkri"},"content":"                if (eventParts.length \u003d\u003d 0) {","lastModifiedDate":"2023-08-26"},{"lineNumber":102,"author":{"gitId":"mfjkri"},"content":"                    throwException(\"The description, start date/time and end date/time of an event cannot be empty.\",","lastModifiedDate":"2023-08-26"},{"lineNumber":103,"author":{"gitId":"mfjkri"},"content":"                            usageText);","lastModifiedDate":"2023-08-26"},{"lineNumber":104,"author":{"gitId":"mfjkri"},"content":"                } else if (eventParts.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-26"},{"lineNumber":105,"author":{"gitId":"mfjkri"},"content":"                    throwException(\"The start date/time and end date/time of an event cannot be empty.\", usageText);","lastModifiedDate":"2023-08-26"},{"lineNumber":106,"author":{"gitId":"mfjkri"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":107,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":108,"author":{"gitId":"mfjkri"},"content":"                String description \u003d eventParts[0].trim();","lastModifiedDate":"2023-08-26"},{"lineNumber":109,"author":{"gitId":"mfjkri"},"content":"                String[] fromToParts \u003d eventParts[1].split(\"/to\", 2);","lastModifiedDate":"2023-08-26"},{"lineNumber":110,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":111,"author":{"gitId":"mfjkri"},"content":"                if (fromToParts.length \u003d\u003d 0) {","lastModifiedDate":"2023-08-26"},{"lineNumber":112,"author":{"gitId":"mfjkri"},"content":"                    throwException(\"The start date/time and end date/time of an event cannot be empty.\", usageText);","lastModifiedDate":"2023-08-26"},{"lineNumber":113,"author":{"gitId":"mfjkri"},"content":"                } else if (fromToParts.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-26"},{"lineNumber":114,"author":{"gitId":"mfjkri"},"content":"                    throwException(\"The end date/time of an event cannot be empty.\", usageText);","lastModifiedDate":"2023-08-26"},{"lineNumber":115,"author":{"gitId":"mfjkri"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":116,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":117,"author":{"gitId":"mfjkri"},"content":"                String fromDate \u003d fromToParts[0].trim();","lastModifiedDate":"2023-08-26"},{"lineNumber":118,"author":{"gitId":"mfjkri"},"content":"                String toTime \u003d fromToParts[1].trim();","lastModifiedDate":"2023-08-26"},{"lineNumber":119,"author":{"gitId":"mfjkri"},"content":"                if (description.trim().equals(\"\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":120,"author":{"gitId":"mfjkri"},"content":"                    throwException(\"The description of an event cannot be empty.\", usageText);","lastModifiedDate":"2023-08-26"},{"lineNumber":121,"author":{"gitId":"mfjkri"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":122,"author":{"gitId":"mfjkri"},"content":"                if (fromDate.trim().equals(\"\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":123,"author":{"gitId":"mfjkri"},"content":"                    throwException(\"The start date/time of an event cannot be empty.\", usageText);","lastModifiedDate":"2023-08-26"},{"lineNumber":124,"author":{"gitId":"mfjkri"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":125,"author":{"gitId":"mfjkri"},"content":"                if (toTime.trim().equals(\"\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":126,"author":{"gitId":"mfjkri"},"content":"                    throwException(\"The end date/time of an event cannot be empty.\", usageText);","lastModifiedDate":"2023-08-26"},{"lineNumber":127,"author":{"gitId":"mfjkri"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":128,"author":{"gitId":"mfjkri"},"content":"                return new AddCommand(new Event(description,","lastModifiedDate":"2023-08-26"},{"lineNumber":129,"author":{"gitId":"mfjkri"},"content":"                        Validate.validateLocalDateTime(fromDate),","lastModifiedDate":"2023-08-26"},{"lineNumber":130,"author":{"gitId":"mfjkri"},"content":"                        Validate.validateLocalDateTime(toTime))","lastModifiedDate":"2023-08-26"},{"lineNumber":131,"author":{"gitId":"mfjkri"},"content":"                );","lastModifiedDate":"2023-08-26"},{"lineNumber":132,"author":{"gitId":"mfjkri"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":133,"author":{"gitId":"mfjkri"},"content":"            default:","lastModifiedDate":"2023-08-26"},{"lineNumber":134,"author":{"gitId":"mfjkri"},"content":"                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-26"},{"lineNumber":135,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":136,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":137,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":138,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":139,"author":{"gitId":"mfjkri"},"content":"     * Throws a DukeException with a formatted error message including usage information.","lastModifiedDate":"2023-08-26"},{"lineNumber":140,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":141,"author":{"gitId":"mfjkri"},"content":"     * @param message   The error message to display.","lastModifiedDate":"2023-08-26"},{"lineNumber":142,"author":{"gitId":"mfjkri"},"content":"     * @param usageText The usage information for the command.","lastModifiedDate":"2023-08-26"},{"lineNumber":143,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException The exception with the formatted error message.","lastModifiedDate":"2023-08-26"},{"lineNumber":144,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":145,"author":{"gitId":"mfjkri"},"content":"    private static void throwException(String message, String usageText) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":146,"author":{"gitId":"mfjkri"},"content":"        throw new DukeException(String.format(\"%s\\n\\n\\tUsage: %s\", message, usageText));","lastModifiedDate":"2023-08-26"},{"lineNumber":147,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":148,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"mfjkri":148}},{"path":"src/main/java/duke/parser/Validate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.parser;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import duke.error.DukeException;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":" * Provides validation methods for date-time and number formats.","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"public class Validate {","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"     * Validates and converts a string to a LocalDateTime object.","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"     * @param input The string to be validated and converted.","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"     * @return LocalDateTime object parsed from the input string.","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If the input has an invalid date-time format.","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"    public static LocalDateTime validateLocalDateTime(String input) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"            return LocalDateTime.parse(input, formatter);","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"        } catch (DateTimeParseException error) {","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"            throw new DukeException(\"Invalid date format. \u003cyyyy-MM-dd HH:mm\u003e expected\");","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"     * Validates and converts a string to an integer.","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"     * @param input The string to be validated and converted.","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"     * @return Integer value parsed from the input string.","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If the input is not a valid number format.","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"mfjkri"},"content":"    public static int validateNumber(String input) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"mfjkri"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"mfjkri"},"content":"            return Integer.parseInt(input);","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"mfjkri"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"mfjkri"},"content":"            throw new DukeException(\"Please provide a valid number format\");","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"mfjkri":44}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.task;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":" * Represents a task with a description and a due date.","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":" * Deadline tasks are tasks that need to be done before a specified due date.","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"     * Due date of the deadline task.","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"     * Constructs a Deadline object with the given description and due date.","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"     * @param by          Due date of the task.","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"        super(description);","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"     * Returns a string representation of the deadline task.","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"     * @return Formatted string showing the deadline\u0027s type, completion status, description, and due date.","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formatLocalDateTime(by) + \")\";","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":37,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"mfjkri"},"content":"     * Serializes the deadline task to a string format for saving.","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"mfjkri"},"content":"     * @return Serialized string representation of the deadline task.","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"mfjkri"},"content":"    public String serialize() {","lastModifiedDate":"2023-08-25"},{"lineNumber":44,"author":{"gitId":"mfjkri"},"content":"        return String.format(\"D | %d | %s | %s\", isDone ? 1 : 0, description, serializeLocalDateTime(by));","lastModifiedDate":"2023-08-25"},{"lineNumber":45,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":46,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"mfjkri":46}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.task;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":" * Represents an event task with a description, start time, and end time.","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":" * Event tasks are tasks that occur within a specified time frame.","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"     * Start time of the event.","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"     * End time of the event.","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"     * Constructs an Event object with the given description, start time, and end time.","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"     * @param description Description of the event.","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"     * @param from        Start time of the event.","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"     * @param to          End time of the event.","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-25"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"        super(description);","lastModifiedDate":"2023-08-19"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-19"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-19"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"     * Returns a string representation of the event task.","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"mfjkri"},"content":"     * @return Formatted string showing the event\u0027s type, completion status, description,","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"mfjkri"},"content":"     * and start and end times.","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":41,"author":{"gitId":"mfjkri"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":42,"author":{"gitId":"mfjkri"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + formatLocalDateTime(from) + \" to: \" + formatLocalDateTime(to) + \")\";","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":44,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":45,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"mfjkri"},"content":"     * Serializes the event task to a string format for saving.","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"mfjkri"},"content":"     * @return Serialized string representation of the event task.","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":51,"author":{"gitId":"mfjkri"},"content":"    public String serialize() {","lastModifiedDate":"2023-08-25"},{"lineNumber":52,"author":{"gitId":"mfjkri"},"content":"        return String.format(\"E | %d | %s | %s | %s\", isDone ? 1 : 0, description, serializeLocalDateTime(from), serializeLocalDateTime(to));","lastModifiedDate":"2023-08-25"},{"lineNumber":53,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":54,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"mfjkri":54}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.task;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":" * Represents a task with a description and completion status.","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":" * Tasks can be marked as done or undone.","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"     * Description of the task.","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"    protected String description;","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"     * Indicates whether the task is marked as done or not.","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"     * Constructs a Task object with the given description.","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-19"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-19"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-19"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"     * Gets the status icon representing whether the task is done or not.","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"     * @return A string representing the status icon (\"X\" for done, \" \" for not done).","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"mfjkri"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-19"},{"lineNumber":38,"author":{"gitId":"mfjkri"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-19"},{"lineNumber":39,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":40,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":41,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"mfjkri"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"mfjkri"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"mfjkri"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":47,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":48,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"mfjkri"},"content":"     * Marks the task as not done (undoes the markDone operation).","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"mfjkri"},"content":"    public void unmarkDone() {","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"mfjkri"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":54,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":55,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"mfjkri"},"content":"     * Returns a string representation of the task, including its completion status.","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"mfjkri"},"content":"     * @return A formatted string showing the task\u0027s status and description.","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":61,"author":{"gitId":"mfjkri"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":62,"author":{"gitId":"mfjkri"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2023-08-19"},{"lineNumber":63,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":64,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":65,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"mfjkri"},"content":"     * Serializes the task to a string format for saving.","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"mfjkri"},"content":"     * @return A serialized string representation of the task.","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"mfjkri"},"content":"    public abstract String serialize();","lastModifiedDate":"2023-08-25"},{"lineNumber":71,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":72,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"mfjkri"},"content":"     * Formats a LocalDateTime object to a string format suitable for serialization.","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"mfjkri"},"content":"     * @param date The LocalDateTime object to be formatted.","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"mfjkri"},"content":"     * @return A formatted string representing the LocalDateTime.","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"mfjkri"},"content":"    public String serializeLocalDateTime(LocalDateTime date) {","lastModifiedDate":"2023-08-25"},{"lineNumber":79,"author":{"gitId":"mfjkri"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2023-08-25"},{"lineNumber":80,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":81,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":82,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":83,"author":{"gitId":"mfjkri"},"content":"     * Formats a LocalDateTime object to a more human-readable string format.","lastModifiedDate":"2023-08-26"},{"lineNumber":84,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":85,"author":{"gitId":"mfjkri"},"content":"     * @param date The LocalDateTime object to be formatted.","lastModifiedDate":"2023-08-26"},{"lineNumber":86,"author":{"gitId":"mfjkri"},"content":"     * @return A formatted string representing the LocalDateTime.","lastModifiedDate":"2023-08-26"},{"lineNumber":87,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":88,"author":{"gitId":"mfjkri"},"content":"    public String formatLocalDateTime(LocalDateTime date) {","lastModifiedDate":"2023-08-25"},{"lineNumber":89,"author":{"gitId":"mfjkri"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\"));","lastModifiedDate":"2023-08-25"},{"lineNumber":90,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":91,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":92,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":93,"author":{"gitId":"mfjkri"},"content":"     * Checks whether the task\u0027s description contains the given keyword.","lastModifiedDate":"2023-08-26"},{"lineNumber":94,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":95,"author":{"gitId":"mfjkri"},"content":"     * @param keyword The keyword to search for in the task\u0027s description.","lastModifiedDate":"2023-08-26"},{"lineNumber":96,"author":{"gitId":"mfjkri"},"content":"     * @return True if the description contains the keyword, false otherwise.","lastModifiedDate":"2023-08-26"},{"lineNumber":97,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":98,"author":{"gitId":"mfjkri"},"content":"    public boolean containKeyword(String keyword) {","lastModifiedDate":"2023-08-26"},{"lineNumber":99,"author":{"gitId":"mfjkri"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2023-08-26"},{"lineNumber":100,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":101,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"mfjkri":101}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.task;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import duke.error.DukeException;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"import duke.parser.Validate;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":" * Represents a list of tasks that can be managed, including adding, deleting, marking, and unmarking tasks.","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"public class TaskList {","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"     * Constructs a TaskList from serialized tasks.","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"     * @param serializedTasks Serialized tasks in the form of strings.","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If there\u0027s an issue parsing the serialized tasks.","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"    public TaskList(ArrayList\u003cString\u003e serializedTasks) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"        for (String serializedTask : serializedTasks) {","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"            String[] tokens \u003d serializedTask.split(\" \\\\| \");","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"            String taskType \u003d tokens[0];","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"            boolean status \u003d tokens[1].equals(\"1\");","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"            String description \u003d tokens[2];","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"mfjkri"},"content":"            Task task \u003d null;","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"mfjkri"},"content":"            switch (taskType) {","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"mfjkri"},"content":"                case \"T\": {","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"mfjkri"},"content":"                    task \u003d this.addTodo(description);","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"mfjkri"},"content":"                    break;","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"mfjkri"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"mfjkri"},"content":"                case \"D\": {","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"mfjkri"},"content":"                    task \u003d this.addDeadline(description, tokens[3]);","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"mfjkri"},"content":"                    break;","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"mfjkri"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"mfjkri"},"content":"                case \"E\": {","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"mfjkri"},"content":"                    task \u003d this.addEvent(description, tokens[3], tokens[4]);","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"mfjkri"},"content":"                    break;","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"mfjkri"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"mfjkri"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"mfjkri"},"content":"            if (task !\u003d null \u0026\u0026 status) {","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"mfjkri"},"content":"                task.markDone();","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"mfjkri"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"mfjkri"},"content":"     * Validates and retrieves the real index from the given task index.","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"mfjkri"},"content":"     * @param index Task index to be validated.","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"mfjkri"},"content":"     * @return Validated real index of the task.","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If the provided index is invalid.","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"mfjkri"},"content":"    private int validateIndex(int index) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"mfjkri"},"content":"        if (index \u003c 1) {","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"mfjkri"},"content":"            throw new DukeException(\"Please provide a task index that is 1 \u003c\u003d task index \u003c\u003d 100.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"mfjkri"},"content":"        } else if (index \u003e this.tasks.size()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"mfjkri"},"content":"            throw new DukeException(\"The given task index is higher than current task list: \"","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"mfjkri"},"content":"                    + this.tasks.size() + \".\");","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"mfjkri"},"content":"        int realIndex \u003d index - 1;","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"mfjkri"},"content":"        Task task \u003d tasks.get(realIndex);","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"mfjkri"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"mfjkri"},"content":"            throw new DukeException(\"There is no task at the given task index.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":79,"author":{"gitId":"mfjkri"},"content":"        return realIndex;","lastModifiedDate":"2023-08-26"},{"lineNumber":80,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":81,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":82,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":83,"author":{"gitId":"mfjkri"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":84,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":85,"author":{"gitId":"mfjkri"},"content":"     * @param task Task to be added.","lastModifiedDate":"2023-08-26"},{"lineNumber":86,"author":{"gitId":"mfjkri"},"content":"     * @return The added task.","lastModifiedDate":"2023-08-26"},{"lineNumber":87,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":88,"author":{"gitId":"mfjkri"},"content":"    public Task addTask(Task task) {","lastModifiedDate":"2023-08-26"},{"lineNumber":89,"author":{"gitId":"mfjkri"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-08-26"},{"lineNumber":90,"author":{"gitId":"mfjkri"},"content":"        return task;","lastModifiedDate":"2023-08-26"},{"lineNumber":91,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":92,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":93,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":94,"author":{"gitId":"mfjkri"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":95,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":96,"author":{"gitId":"mfjkri"},"content":"     * @param index Index of the task to be deleted.","lastModifiedDate":"2023-08-26"},{"lineNumber":97,"author":{"gitId":"mfjkri"},"content":"     * @return The deleted task.","lastModifiedDate":"2023-08-26"},{"lineNumber":98,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If the provided index is invalid.","lastModifiedDate":"2023-08-26"},{"lineNumber":99,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":100,"author":{"gitId":"mfjkri"},"content":"    public Task deleteTask(int index) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":101,"author":{"gitId":"mfjkri"},"content":"        return this.tasks.remove(this.validateIndex(index));","lastModifiedDate":"2023-08-26"},{"lineNumber":102,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":103,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":104,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":105,"author":{"gitId":"mfjkri"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-08-26"},{"lineNumber":106,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":107,"author":{"gitId":"mfjkri"},"content":"     * @param index Index of the task to be marked.","lastModifiedDate":"2023-08-26"},{"lineNumber":108,"author":{"gitId":"mfjkri"},"content":"     * @return The marked task.","lastModifiedDate":"2023-08-26"},{"lineNumber":109,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If the provided index is invalid.","lastModifiedDate":"2023-08-26"},{"lineNumber":110,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":111,"author":{"gitId":"mfjkri"},"content":"    public Task markTask(int index) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":112,"author":{"gitId":"mfjkri"},"content":"        Task task \u003d this.tasks.get(this.validateIndex(index));","lastModifiedDate":"2023-08-26"},{"lineNumber":113,"author":{"gitId":"mfjkri"},"content":"        task.markDone();","lastModifiedDate":"2023-08-26"},{"lineNumber":114,"author":{"gitId":"mfjkri"},"content":"        return task;","lastModifiedDate":"2023-08-26"},{"lineNumber":115,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":116,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":117,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":118,"author":{"gitId":"mfjkri"},"content":"     * Unmarks a task (marks it as not done).","lastModifiedDate":"2023-08-26"},{"lineNumber":119,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":120,"author":{"gitId":"mfjkri"},"content":"     * @param index Index of the task to be unmarked.","lastModifiedDate":"2023-08-26"},{"lineNumber":121,"author":{"gitId":"mfjkri"},"content":"     * @return The unmarked task.","lastModifiedDate":"2023-08-26"},{"lineNumber":122,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If the provided index is invalid.","lastModifiedDate":"2023-08-26"},{"lineNumber":123,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":124,"author":{"gitId":"mfjkri"},"content":"    public Task unmarkTask(int index) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":125,"author":{"gitId":"mfjkri"},"content":"        Task task \u003d this.tasks.get(this.validateIndex(index));","lastModifiedDate":"2023-08-26"},{"lineNumber":126,"author":{"gitId":"mfjkri"},"content":"        task.unmarkDone();","lastModifiedDate":"2023-08-26"},{"lineNumber":127,"author":{"gitId":"mfjkri"},"content":"        return task;","lastModifiedDate":"2023-08-26"},{"lineNumber":128,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":129,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":130,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":131,"author":{"gitId":"mfjkri"},"content":"     * Adds a todo task to the task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":132,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":133,"author":{"gitId":"mfjkri"},"content":"     * @param desc Description of the todo task.","lastModifiedDate":"2023-08-26"},{"lineNumber":134,"author":{"gitId":"mfjkri"},"content":"     * @return The added todo task.","lastModifiedDate":"2023-08-26"},{"lineNumber":135,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":136,"author":{"gitId":"mfjkri"},"content":"    public Todo addTodo(String desc) {","lastModifiedDate":"2023-08-26"},{"lineNumber":137,"author":{"gitId":"mfjkri"},"content":"        Todo todo \u003d new Todo(desc);","lastModifiedDate":"2023-08-26"},{"lineNumber":138,"author":{"gitId":"mfjkri"},"content":"        this.addTask(todo);","lastModifiedDate":"2023-08-26"},{"lineNumber":139,"author":{"gitId":"mfjkri"},"content":"        return todo;","lastModifiedDate":"2023-08-26"},{"lineNumber":140,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":141,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":142,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":143,"author":{"gitId":"mfjkri"},"content":"     * Adds a deadline task to the task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":144,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":145,"author":{"gitId":"mfjkri"},"content":"     * @param desc Description of the deadline task.","lastModifiedDate":"2023-08-26"},{"lineNumber":146,"author":{"gitId":"mfjkri"},"content":"     * @param by   Deadline of the task.","lastModifiedDate":"2023-08-26"},{"lineNumber":147,"author":{"gitId":"mfjkri"},"content":"     * @return The added deadline task.","lastModifiedDate":"2023-08-26"},{"lineNumber":148,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If there\u0027s an issue with the deadline format.","lastModifiedDate":"2023-08-26"},{"lineNumber":149,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":150,"author":{"gitId":"mfjkri"},"content":"    public Deadline addDeadline(String desc, String by) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":151,"author":{"gitId":"mfjkri"},"content":"        Deadline deadline \u003d new Deadline(desc, Validate.validateLocalDateTime(by));","lastModifiedDate":"2023-08-26"},{"lineNumber":152,"author":{"gitId":"mfjkri"},"content":"        this.addTask(deadline);","lastModifiedDate":"2023-08-26"},{"lineNumber":153,"author":{"gitId":"mfjkri"},"content":"        return deadline;","lastModifiedDate":"2023-08-26"},{"lineNumber":154,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":155,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":156,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":157,"author":{"gitId":"mfjkri"},"content":"     * Adds an event task to the task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":158,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":159,"author":{"gitId":"mfjkri"},"content":"     * @param desc Description of the event task.","lastModifiedDate":"2023-08-26"},{"lineNumber":160,"author":{"gitId":"mfjkri"},"content":"     * @param from Start time of the event.","lastModifiedDate":"2023-08-26"},{"lineNumber":161,"author":{"gitId":"mfjkri"},"content":"     * @param to   End time of the event.","lastModifiedDate":"2023-08-26"},{"lineNumber":162,"author":{"gitId":"mfjkri"},"content":"     * @return The added event task.","lastModifiedDate":"2023-08-26"},{"lineNumber":163,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If there\u0027s an issue with the date-time formats.","lastModifiedDate":"2023-08-26"},{"lineNumber":164,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":165,"author":{"gitId":"mfjkri"},"content":"    public Event addEvent(String desc, String from, String to) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":166,"author":{"gitId":"mfjkri"},"content":"        Event event \u003d new Event(desc, Validate.validateLocalDateTime(from), Validate.validateLocalDateTime(to));","lastModifiedDate":"2023-08-26"},{"lineNumber":167,"author":{"gitId":"mfjkri"},"content":"        this.addTask(event);","lastModifiedDate":"2023-08-26"},{"lineNumber":168,"author":{"gitId":"mfjkri"},"content":"        return event;","lastModifiedDate":"2023-08-26"},{"lineNumber":169,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":170,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":171,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":172,"author":{"gitId":"mfjkri"},"content":"     * Saves the tasks in the task list to a BufferedWriter.","lastModifiedDate":"2023-08-26"},{"lineNumber":173,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":174,"author":{"gitId":"mfjkri"},"content":"     * @param writer BufferedWriter to write the tasks to.","lastModifiedDate":"2023-08-26"},{"lineNumber":175,"author":{"gitId":"mfjkri"},"content":"     * @throws IOException If there\u0027s an issue writing to the writer.","lastModifiedDate":"2023-08-26"},{"lineNumber":176,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":177,"author":{"gitId":"mfjkri"},"content":"    public void save(BufferedWriter writer) throws IOException {","lastModifiedDate":"2023-08-26"},{"lineNumber":178,"author":{"gitId":"mfjkri"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2023-08-26"},{"lineNumber":179,"author":{"gitId":"mfjkri"},"content":"            writer.write(task.serialize());","lastModifiedDate":"2023-08-26"},{"lineNumber":180,"author":{"gitId":"mfjkri"},"content":"            writer.newLine();","lastModifiedDate":"2023-08-26"},{"lineNumber":181,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":182,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":183,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":184,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":185,"author":{"gitId":"mfjkri"},"content":"     * Returns a summary of the number of tasks in the task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":186,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":187,"author":{"gitId":"mfjkri"},"content":"     * @return Summary of the number of tasks.","lastModifiedDate":"2023-08-26"},{"lineNumber":188,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":189,"author":{"gitId":"mfjkri"},"content":"    public String status() {","lastModifiedDate":"2023-08-26"},{"lineNumber":190,"author":{"gitId":"mfjkri"},"content":"        return String.format(\"You have %d tasks in the list.\", this.tasks.size());","lastModifiedDate":"2023-08-26"},{"lineNumber":191,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":192,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":193,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":194,"author":{"gitId":"mfjkri"},"content":"     * Retrieves a list of tasks containing a given keyword in their description.","lastModifiedDate":"2023-08-26"},{"lineNumber":195,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":196,"author":{"gitId":"mfjkri"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2023-08-26"},{"lineNumber":197,"author":{"gitId":"mfjkri"},"content":"     * @return An ArrayList of tasks that match the keyword.","lastModifiedDate":"2023-08-26"},{"lineNumber":198,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":199,"author":{"gitId":"mfjkri"},"content":"    public String searchMatchingTasks(String keyword) {","lastModifiedDate":"2023-08-26"},{"lineNumber":200,"author":{"gitId":"mfjkri"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-08-26"},{"lineNumber":201,"author":{"gitId":"mfjkri"},"content":"        StringBuilder str \u003d new StringBuilder(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-08-26"},{"lineNumber":202,"author":{"gitId":"mfjkri"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2023-08-26"},{"lineNumber":203,"author":{"gitId":"mfjkri"},"content":"            if (task.containKeyword(keyword)) {","lastModifiedDate":"2023-08-26"},{"lineNumber":204,"author":{"gitId":"mfjkri"},"content":"                str.append(count \u003e 0 ? \"\\n\" : \"\").append(count++).append(\".\").append(task);","lastModifiedDate":"2023-08-26"},{"lineNumber":205,"author":{"gitId":"mfjkri"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":206,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":207,"author":{"gitId":"mfjkri"},"content":"        return count \u003e 0 ? str.toString() : \"No matching results for search: \" + keyword;","lastModifiedDate":"2023-08-26"},{"lineNumber":208,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":209,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":210,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":211,"author":{"gitId":"mfjkri"},"content":"     * Returns a string representation of the task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":212,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":213,"author":{"gitId":"mfjkri"},"content":"     * @return String representation of the task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":214,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":215,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":216,"author":{"gitId":"mfjkri"},"content":"    public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":217,"author":{"gitId":"mfjkri"},"content":"        StringBuilder str \u003d new StringBuilder(this.status());","lastModifiedDate":"2023-08-26"},{"lineNumber":218,"author":{"gitId":"mfjkri"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-08-26"},{"lineNumber":219,"author":{"gitId":"mfjkri"},"content":"            str.append(i + 1).append(\".\").append(this.tasks.get(i)).append(","lastModifiedDate":"2023-08-26"},{"lineNumber":220,"author":{"gitId":"mfjkri"},"content":"                    i \u003c this.tasks.size() - 1 ? \"\\n\" : \"\");","lastModifiedDate":"2023-08-26"},{"lineNumber":221,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":222,"author":{"gitId":"mfjkri"},"content":"        return str.toString();","lastModifiedDate":"2023-08-26"},{"lineNumber":223,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":224,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"mfjkri":224}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.task;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":" * Represents a todo task with a description.","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":" * Todo tasks are tasks that need to be done without a specific time frame.","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"     * Constructs a Todo object with the given description.","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"     * @param description Description of the todo task.","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"        super(description);","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"     * Returns a string representation of the todo task.","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"     * @return Formatted string showing the todo\u0027s type, completion status, and description.","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-19"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"     * Serializes the todo task to a string format for saving.","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"     * @return Serialized string representation of the todo task.","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"    public String serialize() {","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"        return String.format(\"T | %d | %s\", isDone ? 1 : 0, description);","lastModifiedDate":"2023-08-25"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":37,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"mfjkri":37}},{"path":"src/test/java/duke/parser/ValidateTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.parser;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"import duke.error.DukeException;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"public class ValidateTest {","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"    public void testValidateLocalDateTimeValid() {","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"            LocalDateTime dateTime \u003d Validate.validateLocalDateTime(\"2023-08-26 15:30\");","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"            assertNotNull(dateTime);","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"            fail(\"Exception should not be thrown for valid date-time format\");","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"    public void testValidateLocalDateTimeInvalid() {","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"            Validate.validateLocalDateTime(\"2023-08-26\");","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"        });","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"    public void testValidateNumberValid() {","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"            int number \u003d Validate.validateNumber(\"42\");","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"            assertEquals(42, number);","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"            fail(\"Exception should not be thrown for valid number format\");","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"mfjkri"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"mfjkri"},"content":"    public void testValidateNumberInvalid() {","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"mfjkri"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"mfjkri"},"content":"            Validate.validateNumber(\"invalid\");","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"mfjkri"},"content":"        });","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"mfjkri":46}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"import duke.error.DukeException;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"    public void testMarkTask() {","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"            Todo todo \u003d taskList.addTodo(\"Buy groceries\");","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"            assertEquals(todo.getStatusIcon(), \" \");","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"            taskList.markTask(1);","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"            assertEquals(todo.getStatusIcon(), \"X\");","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"            fail(\"Exception should not be thrown for valid input\");","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"    public void testMarkTaskInvalidIndex() {","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"            taskList.markTask(1);  // Attempting to mark a task when the list is empty","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"        });","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"mfjkri":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"todo","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"todo read book","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"deadline  /by","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"deadline  /by Sunday","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"deadline return book /by","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"event  /from  /to","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"event project meeting /from  /to","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"event project meeting /from  /to 4pm","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"event project meeting /from Mon 2pm /to","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"event  /from  /to 4pm","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"event  /from Mon 2pm /to","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"mark 0","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"mark 10","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"mark abc","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"mark 1","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"mark 3","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"unmark 0","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"unmark 10","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"unmark abc","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"unmark 3","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"delete","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"delete 3","lastModifiedDate":"2023-08-19"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"bye","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"mfjkri":28}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"mfjkri":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"# delete output from previous runx","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"mfjkri":1}}]
