[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"instructions on how to use it.","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"   first)","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"   in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"   code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"   like the below as the output:","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"mfjkri":10}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"checkstyle {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"mfjkri"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"mfjkri"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"mfjkri":23}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"# Chatbot name","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"Chad","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"---","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"### List Command","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"Displays the list of tasks.","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"### Todo Command","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"Adds a new to-do task.","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"### Deadline Command","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"Adds a new task with a specific deadline.","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"### Event Command","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"Adds a new event task.","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"### Delete Command","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"Deletes a task from the list.","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"### Mark Command","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"Marks a task as completed.","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"### Unmark Command","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"mfjkri"},"content":"Unmarks a completed task.","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"mfjkri"},"content":"### Find Command","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"mfjkri"},"content":"Searches for tasks containing a specific keyword.","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"mfjkri"},"content":"### Exit Command","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"mfjkri"},"content":"Exits the application.","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"mfjkri"},"content":"### `list` - List Tasks","lastModifiedDate":"2023-09-15"},{"lineNumber":50,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":51,"author":{"gitId":"mfjkri"},"content":"Returns a list of tasks.","lastModifiedDate":"2023-09-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"mfjkri"},"content":"Format: `list`","lastModifiedDate":"2023-09-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"mfjkri"},"content":"```","lastModifiedDate":"2023-09-15"},{"lineNumber":58,"author":{"gitId":"mfjkri"},"content":"list","lastModifiedDate":"2023-09-15"},{"lineNumber":59,"author":{"gitId":"mfjkri"},"content":"```","lastModifiedDate":"2023-09-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"mfjkri"},"content":"```","lastModifiedDate":"2023-09-15"},{"lineNumber":64,"author":{"gitId":"mfjkri"},"content":"You have 4 tasks in the list.","lastModifiedDate":"2023-09-15"},{"lineNumber":65,"author":{"gitId":"mfjkri"},"content":"1.[T][X] borrow book","lastModifiedDate":"2023-09-15"},{"lineNumber":66,"author":{"gitId":"mfjkri"},"content":"2.[D][ ] return book (by: Dec 22 2019 18:00)","lastModifiedDate":"2023-09-15"},{"lineNumber":67,"author":{"gitId":"mfjkri"},"content":"3.[D][ ] get book back (by: Jan 11 2019 12:00)","lastModifiedDate":"2023-09-15"},{"lineNumber":68,"author":{"gitId":"mfjkri"},"content":"4.[E][ ] smth (from: Oct 10 2023 10:10 to: Dec 12 2023 12:12)","lastModifiedDate":"2023-09-15"},{"lineNumber":69,"author":{"gitId":"mfjkri"},"content":"```","lastModifiedDate":"2023-09-15"},{"lineNumber":70,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":71,"author":{"gitId":"mfjkri"},"content":"---","lastModifiedDate":"2023-09-15"},{"lineNumber":72,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":73,"author":{"gitId":"mfjkri"},"content":"### `todo` - Add Todo Task","lastModifiedDate":"2023-09-15"},{"lineNumber":74,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":75,"author":{"gitId":"mfjkri"},"content":"Adds a new todo task with the specified description.","lastModifiedDate":"2023-09-15"},{"lineNumber":76,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":77,"author":{"gitId":"mfjkri"},"content":"Format: `todo DESC`","lastModifiedDate":"2023-09-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":79,"author":{"gitId":"mfjkri"},"content":"Example of usage:","lastModifiedDate":"2023-09-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":81,"author":{"gitId":"mfjkri"},"content":"```","lastModifiedDate":"2023-09-15"},{"lineNumber":82,"author":{"gitId":"mfjkri"},"content":"todo Submit IP for CS2103T","lastModifiedDate":"2023-09-15"},{"lineNumber":83,"author":{"gitId":"mfjkri"},"content":"```","lastModifiedDate":"2023-09-15"},{"lineNumber":84,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":85,"author":{"gitId":"mfjkri"},"content":"Expected outcome:","lastModifiedDate":"2023-09-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":88,"author":{"gitId":"mfjkri"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-15"},{"lineNumber":89,"author":{"gitId":"mfjkri"},"content":"\t[T][ ] Submit IP for CS2103T","lastModifiedDate":"2023-09-15"},{"lineNumber":90,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":91,"author":{"gitId":"mfjkri"},"content":"You have 4 tasks in the list.","lastModifiedDate":"2023-09-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":94,"author":{"gitId":"mfjkri"},"content":"---","lastModifiedDate":"2023-09-15"},{"lineNumber":95,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":96,"author":{"gitId":"mfjkri"},"content":"### `deadline` - Add Deadline Task","lastModifiedDate":"2023-09-15"},{"lineNumber":97,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":98,"author":{"gitId":"mfjkri"},"content":"Adds a new deadline task with the specified description and deadline.","lastModifiedDate":"2023-09-15"},{"lineNumber":99,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":100,"author":{"gitId":"mfjkri"},"content":"Format: `deadline DESC /by DATETIME (yyyy-MM-dd HH:mm\u003e)`","lastModifiedDate":"2023-09-15"},{"lineNumber":101,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":102,"author":{"gitId":"mfjkri"},"content":"Example of usage:","lastModifiedDate":"2023-09-15"},{"lineNumber":103,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":104,"author":{"gitId":"mfjkri"},"content":"```","lastModifiedDate":"2023-09-15"},{"lineNumber":105,"author":{"gitId":"mfjkri"},"content":"deadline Submit TP submission /by 2023-09-15 23:59","lastModifiedDate":"2023-09-15"},{"lineNumber":106,"author":{"gitId":"mfjkri"},"content":"```","lastModifiedDate":"2023-09-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-09-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":110,"author":{"gitId":"mfjkri"},"content":"```","lastModifiedDate":"2023-09-15"},{"lineNumber":111,"author":{"gitId":"mfjkri"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-15"},{"lineNumber":112,"author":{"gitId":"mfjkri"},"content":"\t[D][ ] Submit TP submission (by: Sep 15 2023 23:59)","lastModifiedDate":"2023-09-15"},{"lineNumber":113,"author":{"gitId":"mfjkri"},"content":"```","lastModifiedDate":"2023-09-15"},{"lineNumber":114,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":115,"author":{"gitId":"mfjkri"},"content":"---","lastModifiedDate":"2023-09-15"},{"lineNumber":116,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":117,"author":{"gitId":"mfjkri"},"content":"### `event` - Add Event Task","lastModifiedDate":"2023-09-15"},{"lineNumber":118,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":119,"author":{"gitId":"mfjkri"},"content":"Adds a new event task with the specified description and duration.","lastModifiedDate":"2023-09-15"},{"lineNumber":120,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":121,"author":{"gitId":"mfjkri"},"content":"Format: `event DESC /from DATETIME (yyyy-MM-dd HH:mm\u003e) /to DATETIME (yyyy-MM-dd HH:mm\u003e)`","lastModifiedDate":"2023-09-15"},{"lineNumber":122,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":123,"author":{"gitId":"mfjkri"},"content":"Example of usage:","lastModifiedDate":"2023-09-15"},{"lineNumber":124,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":125,"author":{"gitId":"mfjkri"},"content":"```","lastModifiedDate":"2023-09-15"},{"lineNumber":126,"author":{"gitId":"mfjkri"},"content":"event CS2103T PE /from 2023-11-17 16:00 /to 2023-11-17 18:00","lastModifiedDate":"2023-09-15"},{"lineNumber":127,"author":{"gitId":"mfjkri"},"content":"```","lastModifiedDate":"2023-09-15"},{"lineNumber":128,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":129,"author":{"gitId":"mfjkri"},"content":"Expected outcome:","lastModifiedDate":"2023-09-15"},{"lineNumber":130,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":131,"author":{"gitId":"mfjkri"},"content":"```","lastModifiedDate":"2023-09-15"},{"lineNumber":132,"author":{"gitId":"mfjkri"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-15"},{"lineNumber":133,"author":{"gitId":"mfjkri"},"content":"\t[E][ ] CS2103T PE (from: Nov 17 2023 16:00 to: Nov 17 2023 18:00)","lastModifiedDate":"2023-09-15"},{"lineNumber":134,"author":{"gitId":"mfjkri"},"content":"```","lastModifiedDate":"2023-09-15"},{"lineNumber":135,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":136,"author":{"gitId":"mfjkri"},"content":"---","lastModifiedDate":"2023-09-15"},{"lineNumber":137,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":138,"author":{"gitId":"mfjkri"},"content":"### `delete` - Delete Task","lastModifiedDate":"2023-09-15"},{"lineNumber":139,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":140,"author":{"gitId":"mfjkri"},"content":"Deletes the specified task.","lastModifiedDate":"2023-09-15"},{"lineNumber":141,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":142,"author":{"gitId":"mfjkri"},"content":"Format: `delete INDEX`","lastModifiedDate":"2023-09-15"},{"lineNumber":143,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":144,"author":{"gitId":"mfjkri"},"content":"Example of usage:","lastModifiedDate":"2023-09-15"},{"lineNumber":145,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":146,"author":{"gitId":"mfjkri"},"content":"```","lastModifiedDate":"2023-09-15"},{"lineNumber":147,"author":{"gitId":"mfjkri"},"content":"delete 4","lastModifiedDate":"2023-09-15"},{"lineNumber":148,"author":{"gitId":"mfjkri"},"content":"```","lastModifiedDate":"2023-09-15"},{"lineNumber":149,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":150,"author":{"gitId":"mfjkri"},"content":"Expected outcome:","lastModifiedDate":"2023-09-15"},{"lineNumber":151,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":152,"author":{"gitId":"mfjkri"},"content":"```","lastModifiedDate":"2023-09-15"},{"lineNumber":153,"author":{"gitId":"mfjkri"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-09-15"},{"lineNumber":154,"author":{"gitId":"mfjkri"},"content":"\t[E][ ] smth (from: Oct 10 2023 10:10 to: Dec 12 2023 12:12)","lastModifiedDate":"2023-09-15"},{"lineNumber":155,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":156,"author":{"gitId":"mfjkri"},"content":"You have 3 tasks in the list.","lastModifiedDate":"2023-09-15"},{"lineNumber":157,"author":{"gitId":"mfjkri"},"content":"```","lastModifiedDate":"2023-09-15"},{"lineNumber":158,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":159,"author":{"gitId":"mfjkri"},"content":"---","lastModifiedDate":"2023-09-15"},{"lineNumber":160,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":161,"author":{"gitId":"mfjkri"},"content":"### `mark` - Mark Task","lastModifiedDate":"2023-09-15"},{"lineNumber":162,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":163,"author":{"gitId":"mfjkri"},"content":"Marks the specified task as completed.","lastModifiedDate":"2023-09-15"},{"lineNumber":164,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":165,"author":{"gitId":"mfjkri"},"content":"Format: `mark INDEX`","lastModifiedDate":"2023-09-15"},{"lineNumber":166,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":167,"author":{"gitId":"mfjkri"},"content":"Example of usage:","lastModifiedDate":"2023-09-15"},{"lineNumber":168,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":169,"author":{"gitId":"mfjkri"},"content":"```","lastModifiedDate":"2023-09-15"},{"lineNumber":170,"author":{"gitId":"mfjkri"},"content":"mark 2","lastModifiedDate":"2023-09-15"},{"lineNumber":171,"author":{"gitId":"mfjkri"},"content":"```","lastModifiedDate":"2023-09-15"},{"lineNumber":172,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":173,"author":{"gitId":"mfjkri"},"content":"Expected outcome:","lastModifiedDate":"2023-09-15"},{"lineNumber":174,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":175,"author":{"gitId":"mfjkri"},"content":"```","lastModifiedDate":"2023-09-15"},{"lineNumber":176,"author":{"gitId":"mfjkri"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-09-15"},{"lineNumber":177,"author":{"gitId":"mfjkri"},"content":"\t[D][X] return book (by: Dec 22 2019 18:00)","lastModifiedDate":"2023-09-15"},{"lineNumber":178,"author":{"gitId":"mfjkri"},"content":"```","lastModifiedDate":"2023-09-15"},{"lineNumber":179,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":180,"author":{"gitId":"mfjkri"},"content":"---","lastModifiedDate":"2023-09-15"},{"lineNumber":181,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":182,"author":{"gitId":"mfjkri"},"content":"### `unmark` - Unmark Task","lastModifiedDate":"2023-09-15"},{"lineNumber":183,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":184,"author":{"gitId":"mfjkri"},"content":"Unmarks the specified task as completed.","lastModifiedDate":"2023-09-15"},{"lineNumber":185,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":186,"author":{"gitId":"mfjkri"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2023-09-15"},{"lineNumber":187,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":188,"author":{"gitId":"mfjkri"},"content":"Example of usage:","lastModifiedDate":"2023-09-15"},{"lineNumber":189,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":190,"author":{"gitId":"mfjkri"},"content":"```","lastModifiedDate":"2023-09-15"},{"lineNumber":191,"author":{"gitId":"mfjkri"},"content":"unmark 2","lastModifiedDate":"2023-09-15"},{"lineNumber":192,"author":{"gitId":"mfjkri"},"content":"```","lastModifiedDate":"2023-09-15"},{"lineNumber":193,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":194,"author":{"gitId":"mfjkri"},"content":"Expected outcome:","lastModifiedDate":"2023-09-15"},{"lineNumber":195,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":196,"author":{"gitId":"mfjkri"},"content":"```","lastModifiedDate":"2023-09-15"},{"lineNumber":197,"author":{"gitId":"mfjkri"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-09-15"},{"lineNumber":198,"author":{"gitId":"mfjkri"},"content":"\t[D][ ] return book (by: Dec 22 2019 18:00)","lastModifiedDate":"2023-09-15"},{"lineNumber":199,"author":{"gitId":"mfjkri"},"content":"```","lastModifiedDate":"2023-09-15"},{"lineNumber":200,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":201,"author":{"gitId":"mfjkri"},"content":"---","lastModifiedDate":"2023-09-15"},{"lineNumber":202,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":203,"author":{"gitId":"mfjkri"},"content":"### `find` - Find Task","lastModifiedDate":"2023-09-15"},{"lineNumber":204,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":205,"author":{"gitId":"mfjkri"},"content":"Finds tasks containing the specified keyword.","lastModifiedDate":"2023-09-15"},{"lineNumber":206,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":207,"author":{"gitId":"mfjkri"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2023-09-15"},{"lineNumber":208,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":209,"author":{"gitId":"mfjkri"},"content":"Example of usage:","lastModifiedDate":"2023-09-15"},{"lineNumber":210,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":211,"author":{"gitId":"mfjkri"},"content":"```","lastModifiedDate":"2023-09-15"},{"lineNumber":212,"author":{"gitId":"mfjkri"},"content":"find book","lastModifiedDate":"2023-09-15"},{"lineNumber":213,"author":{"gitId":"mfjkri"},"content":"```","lastModifiedDate":"2023-09-15"},{"lineNumber":214,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":215,"author":{"gitId":"mfjkri"},"content":"Expected outcome:","lastModifiedDate":"2023-09-15"},{"lineNumber":216,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":217,"author":{"gitId":"mfjkri"},"content":"```","lastModifiedDate":"2023-09-15"},{"lineNumber":218,"author":{"gitId":"mfjkri"},"content":"Here are the matching tasks in your list:0.[T][X] borrow book","lastModifiedDate":"2023-09-15"},{"lineNumber":219,"author":{"gitId":"mfjkri"},"content":"1.[D][ ] return book (by: Dec 22 2019 18:00)","lastModifiedDate":"2023-09-15"},{"lineNumber":220,"author":{"gitId":"mfjkri"},"content":"2.[D][ ] get book back (by: Jan 11 2019 12:00)","lastModifiedDate":"2023-09-15"},{"lineNumber":221,"author":{"gitId":"mfjkri"},"content":"```","lastModifiedDate":"2023-09-15"},{"lineNumber":222,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":223,"author":{"gitId":"mfjkri"},"content":"---","lastModifiedDate":"2023-09-15"},{"lineNumber":224,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":225,"author":{"gitId":"mfjkri"},"content":"### `bye` - Exit Program","lastModifiedDate":"2023-09-15"},{"lineNumber":226,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":227,"author":{"gitId":"mfjkri"},"content":"Exits the program.","lastModifiedDate":"2023-09-15"},{"lineNumber":228,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":229,"author":{"gitId":"mfjkri"},"content":"Format: `bye`","lastModifiedDate":"2023-09-15"},{"lineNumber":230,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":231,"author":{"gitId":"mfjkri"},"content":"Example of usage:","lastModifiedDate":"2023-09-15"},{"lineNumber":232,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":233,"author":{"gitId":"mfjkri"},"content":"```","lastModifiedDate":"2023-09-15"},{"lineNumber":234,"author":{"gitId":"mfjkri"},"content":"bye","lastModifiedDate":"2023-09-15"},{"lineNumber":235,"author":{"gitId":"mfjkri"},"content":"```","lastModifiedDate":"2023-09-15"},{"lineNumber":236,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":237,"author":{"gitId":"mfjkri"},"content":"Expected outcome:","lastModifiedDate":"2023-09-15"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":239,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-15"},{"lineNumber":240,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2023-09-15"},{"lineNumber":241,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-15"},{"lineNumber":242,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":243,"author":{"gitId":"mfjkri"},"content":"---","lastModifiedDate":"2023-09-15"},{"lineNumber":244,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":245,"author":{"gitId":"mfjkri"},"content":"Note: Please replace `INDEX`, `DESC`, `KEYWORD`, `DATETIME` with actual values when using the commands.","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"-":34,"mfjkri":211}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import duke.command.Command;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"import duke.error.DukeException;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"import duke.lib.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"import duke.lib.UI;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":" * Duke is a simple task management application that allows users to add, list, and manage tasks. It provides a","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":" * command-line interface for interacting with tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"    private final Storage storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"    private final UI ui;","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"    private boolean hasExited;","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"     * Constructs a Duke instance with the specified file path for data storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"    public Duke() {","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"        this.ui \u003d new UI();","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"        this.storage \u003d new Storage(\"data\", \"duke.txt\");","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"        try {","lastModifiedDate":"2023-08-19"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-19"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"mfjkri"},"content":"     * Shows the welcome message for Duke.","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"mfjkri"},"content":"    public String init() {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"mfjkri"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"mfjkri"},"content":"        return ui.getStatus();","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"mfjkri"},"content":"     * Gets the exit status of Duke.","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"mfjkri"},"content":"    public boolean getExitStatus() {","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"mfjkri"},"content":"        return hasExited;","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":50,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":51,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"mfjkri"},"content":"     * Runs the Duke application, displaying a welcome message and processing user commands until the user exits.","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"mfjkri"},"content":"    public void run(String input) {","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"mfjkri"},"content":"        try {","lastModifiedDate":"2023-08-19"},{"lineNumber":56,"author":{"gitId":"mfjkri"},"content":"            ui.showLine();","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"mfjkri"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"mfjkri"},"content":"            hasExited \u003d c.isExit();","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"mfjkri"},"content":"            c.execute(tasks, ui, storage);","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"mfjkri"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"mfjkri"},"content":"            ui.showError(e);","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"mfjkri"},"content":"        } finally {","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"mfjkri"},"content":"            ui.showLine();","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":65,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":66,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":67,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"mfjkri"},"content":"     * You should have your own function to generate a response to user input. Replace this stub with your completed","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"mfjkri"},"content":"     * method.","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"mfjkri"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"mfjkri"},"content":"        run(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"mfjkri"},"content":"        return ui.getStatus();","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"mfjkri":73}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"public class Launcher {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"     * The main entry point for the application.","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"     * @param args The command-line arguments passed to the application.","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"mfjkri":17}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"            stage.setTitle(\"Chad\");","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"            stage.show();","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"mfjkri":32}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.command;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import duke.error.DukeException;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"import duke.lib.Storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"import duke.lib.UI;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":" * Represents a command to add a task.","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"public abstract class AddCommand extends Command {","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"    private final Task task;","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"     * Constructs an AddCommand with the specified task to be added.","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"    public AddCommand(Task task, String usageText) {","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"        super(usageText);","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"     * Executes the add command, adding the task to the task list, displaying a message, and saving to storage.","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"     * @param tasks   The task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"     * @param storage The storage handler.","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If there\u0027s an issue executing the command.","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"        // Add the task to the task list and display a message","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"        ui.showMessage(String.format(\"Got it. I\u0027ve added this task:\\n\\t%s\\n\", tasks.addTask(this.task)));","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"mfjkri"},"content":"        // Display the updated task list status","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"mfjkri"},"content":"        ui.showMessage(tasks.status());","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"mfjkri"},"content":"        // Save the updated task list to storage","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"mfjkri"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"mfjkri":44}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.command;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import duke.error.DukeException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"import duke.parser.Validate;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":" * Represents a command to add a task.","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"public class AddDeadlineCommand extends AddCommand {","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"    private static final String USAGE_TEXT \u003d \"deadline \u003cdesc\u003e /by \u003cdate time\u003e\"","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"        + \"\\n\\t\\td \u003cdesc\u003e /by \u003cdate time\u003e\";","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"     * Constructs a AddDeadlineCommand with the specified parameters.","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"     * @param params The parameters associated with the command.","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If there\u0027s an issue validating or retrieving the parameter.","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"    public AddDeadlineCommand(Params params) throws DukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"        super(new Deadline(params.getArgumentIfSet(\"desc\", USAGE_TEXT),","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"                Validate.validateLocalDateTime(params.getParamIfSet(\"by\", USAGE_TEXT))),","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"            USAGE_TEXT);","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"mfjkri":25}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.command;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import duke.error.DukeException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"import duke.parser.Validate;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":" * Represents a command to add a task.","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"public class AddEventCommand extends AddCommand {","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"    private static final String USAGE_TEXT \u003d \"event \u003cdesc\u003e /from \u003cdate time\u003e /to \u003cdate time\u003e\"","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"        + \"\\n\\t\\te \u003cdesc\u003e /from \u003cdate time\u003e /to \u003cdate time\u003e\";","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"     * Constructs a AddEventCommand with the specified parameters.","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"     * @param params The parameters associated with the command.","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If there\u0027s an issue validating or retrieving the parameter.","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"    public AddEventCommand(Params params) throws DukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"        super(new Event(params.getArgumentIfSet(\"desc\", USAGE_TEXT),","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"                Validate.validateLocalDateTime(params.getParamIfSet(\"from\", USAGE_TEXT)),","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"                Validate.validateLocalDateTime(params.getParamIfSet(\"to\", USAGE_TEXT))),","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"            USAGE_TEXT);","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"mfjkri":26}},{"path":"src/main/java/duke/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.command;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import duke.error.DukeException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":" * Represents a command to add a task.","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"public class AddTodoCommand extends AddCommand {","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"    private static final String USAGE_TEXT \u003d \"todo \u003cdesc\u003e | t \u003cdesc\u003e\";","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"     * Constructs a AddTodoCommand with the specified parameters.","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"     * @param params The parameters associated with the command.","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If there\u0027s an issue validating or retrieving the parameter.","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"    public AddTodoCommand(Params params) throws DukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"        super(new Todo(params.getArgumentIfSet(\"desc\", USAGE_TEXT)), USAGE_TEXT);","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"mfjkri":21}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.command;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import duke.error.DukeException;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"import duke.lib.Storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"import duke.lib.UI;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":" * Represents an abstract command that can be executed by the Duke chatbot.","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"    protected String usageText;","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"     * Constructs a Command object with the specified usage text.","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"     * @param usageText The usage text for the command.","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"    protected Command(String usageText) {","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"        this.usageText \u003d usageText;","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"     * Executes the command with the given task list, user interface, and storage.","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"     * @param tasks   The task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"     * @param storage The storage handler.","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If there\u0027s an issue executing the command.","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"    public abstract void execute(TaskList tasks, UI ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"     * @return True if the command is an exit command, false otherwise.","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"mfjkri"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"mfjkri"},"content":"        return false;","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"mfjkri"},"content":"    public String toString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"mfjkri"},"content":"        return String.format(\"Usage: %s\", this.usageText);","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"mfjkri":47}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.command;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import duke.error.DukeException;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"import duke.lib.Storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"import duke.lib.UI;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"import duke.parser.Validate;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"    private final int index;","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"     * Constructs a DeleteCommand with the specified parameters.","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"     * @param params The parameters associated with the command.","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If there\u0027s an issue validating or retrieving the parameter.","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"    public DeleteCommand(Params params) throws DukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"        super(\"delete \u003cindex\u003e | rm \u003cindex\u003e\");","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"        this.index \u003d Validate.validateNumber(params.getArgumentIfSet(\"index\", usageText));","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"     * Executes the delete command, removing the specified task from the task list. Notifies the user interface and","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"     * storage handler about the deletion.","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"     * @param tasks   The task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"     * @param storage The storage handler.","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If there\u0027s an issue executing the command.","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"mfjkri"},"content":"        ui.showMessage(String.format(\"Noted. I\u0027ve removed this task:\\n\\t%s\\n\", tasks.deleteTask(this.index)));","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"mfjkri"},"content":"        ui.showMessage(tasks.status());","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"mfjkri"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"mfjkri":41}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.command;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import duke.lib.Storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"import duke.lib.UI;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":" * Represents a command to exit the Duke chatbot application.","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"     * Constructs an ExitCommand object.","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"    public ExitCommand() {","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"        super(\"exit\");","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"     * Executes the exit command, displaying a goodbye message on the user interface.","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"     * @param tasks   The task list (not used in this command).","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"     * @param storage The storage handler (not used in this command).","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"        ui.showGoodbye();","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"     * Indicates that this command is an exit command.","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"     * @return {@code true} to indicate that this command is an exit command.","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"mfjkri"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"mfjkri"},"content":"        return true;","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"mfjkri":40}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.command;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import duke.error.DukeException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"import duke.lib.Storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"import duke.lib.UI;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":" * Represents a command to search for tasks containing a specified keyword.","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"    private final String searchKeyword;","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"     * Constructs a FindCommand with the specified parameters.","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"     * @param params The parameters associated with the command.","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If there\u0027s an issue validating or retrieving the parameter.","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"    public FindCommand(Params params) throws DukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"        super(\"find \u003csearch\u003e | f \u003csearch\u003e\");","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"        this.searchKeyword \u003d params.getArgumentIfSet(\"search\", usageText);","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"     * Executes the FindCommand by searching for tasks matching the specified keyword and displaying the results.","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"     * @param tasks   The TaskList containing tasks to search through.","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"     * @param ui      The UI for displaying messages to the user.","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"     * @param storage The Storage for saving task data.","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"        ui.showMessage(tasks.searchMatchingTasks(this.searchKeyword));","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"mfjkri":36}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.command;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import duke.lib.Storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"import duke.lib.UI;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"     * Constructs an ExitCommand object.","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"    public ListCommand() {","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"        super(\"list\\n\\tls\");","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"     * Executes the list command, displaying all tasks in the task list on the user interface.","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"     * @param tasks   The task list containing the tasks to be listed.","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"     * @param storage The storage handler (not used in this command).","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"        ui.showMessage(tasks.toString());","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"mfjkri":29}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.command;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import duke.error.DukeException;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"import duke.lib.Storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"import duke.lib.UI;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"import duke.parser.Validate;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":" * Represents a command to mark a task as done in the task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"    private final int index;","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"     * Constructs a MarkCommand with the specified parameters.","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"     * @param params The parameters associated with the command.","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If there\u0027s an issue validating or retrieving the parameter.","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"    public MarkCommand(Params params) throws DukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"        super(\"mark \u003cindex\u003e | m \u003cindex\u003e\");","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"        this.index \u003d Validate.validateNumber(params.getArgumentIfSet(\"index\", usageText));","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"     * Executes the mark command, marking the specified task as done and updating the task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"     * @param tasks   The task list containing the tasks.","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"     * @param ui      The user interface to display messages.","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"     * @param storage The storage handler to save the updated task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If there\u0027s an error marking the task or saving the task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"        ui.showMessage(String.format(\"Nice! I\u0027ve marked this task as done:\\n\\t%s\\n\", tasks.markTask(index)));","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"mfjkri"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"mfjkri":39}},{"path":"src/main/java/duke/command/Params.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.command;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"import java.util.Map;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"import duke.error.DukeException;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":" * Represents a set of parameters associated with a command. Parameters are stored as key-value pairs.","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"public class Params {","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"    public static final String ARGUMENT_KEY \u003d \"arg\";","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"     * Map containing parameter names as keys and their corresponding values as values.","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"    private final Map\u003cString, String\u003e paramMap;","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"     * Constructs a Params object with an empty parameter map.","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"    public Params() {","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"        this.paramMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"     * Retrieves the value associated with a specified parameter name.","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"     * @param paramName The name of the parameter.","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"     * @return The value of the parameter, or null if the parameter is not found.","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"    public String getParam(String paramName) {","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"        return paramMap.get(paramName);","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"    public String getArgument() {","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"        return paramMap.get(ARGUMENT_KEY);","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"mfjkri"},"content":"     * Retrieves the value associated with a specified parameter name.","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"mfjkri"},"content":"     * @param paramName The name of the parameter.","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"mfjkri"},"content":"     * @return The value of the parameter, or null if the parameter is not found.","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"mfjkri"},"content":"    public String getParamIfSet(String paramName, String usageText) throws DukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"mfjkri"},"content":"        String param \u003d getParam(paramName);","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"mfjkri"},"content":"        if (param \u003d\u003d null || param.equals(\"\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"mfjkri"},"content":"            throw new DukeException(String.format(\"%s cannot be empty\\n\\n\\tUsage: %s\", paramName, usageText));","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"mfjkri"},"content":"        return param;","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"mfjkri"},"content":"    public String getArgumentIfSet(String argumentLabel, String usageText) throws DukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"mfjkri"},"content":"        String param \u003d getArgument();","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"mfjkri"},"content":"        if (param \u003d\u003d null || param.equals(\"\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"mfjkri"},"content":"            throw new DukeException(String.format(","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"mfjkri"},"content":"                \"%s cannot be empty\\n\\n\\tUsage: %s\", argumentLabel, usageText));","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"mfjkri"},"content":"        return param;","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"mfjkri"},"content":"     * Sets a parameter with the specified name and value.","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"mfjkri"},"content":"     * @param paramName The name of the parameter.","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"mfjkri"},"content":"     * @param value     The value of the parameter.","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":68,"author":{"gitId":"mfjkri"},"content":"    public void setParam(String paramName, String value) throws DukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":69,"author":{"gitId":"mfjkri"},"content":"        if (paramName.equals(ARGUMENT_KEY)) {","lastModifiedDate":"2023-09-09"},{"lineNumber":70,"author":{"gitId":"mfjkri"},"content":"            throw new DukeException(String.format(\"%s is a reserved argument name!\", ARGUMENT_KEY));","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"mfjkri"},"content":"        paramMap.put(paramName, value);","lastModifiedDate":"2023-09-09"},{"lineNumber":73,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":74,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":75,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":76,"author":{"gitId":"mfjkri"},"content":"     * Sets a parameter with the specified name and value.","lastModifiedDate":"2023-09-09"},{"lineNumber":77,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":78,"author":{"gitId":"mfjkri"},"content":"     * @param value The value of the parameter.","lastModifiedDate":"2023-09-09"},{"lineNumber":79,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":80,"author":{"gitId":"mfjkri"},"content":"    public void setArgument(String value) {","lastModifiedDate":"2023-09-09"},{"lineNumber":81,"author":{"gitId":"mfjkri"},"content":"        paramMap.put(ARGUMENT_KEY, value);","lastModifiedDate":"2023-09-09"},{"lineNumber":82,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":83,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":85,"author":{"gitId":"mfjkri"},"content":"     * Returns a string representation of the parameters.","lastModifiedDate":"2023-09-09"},{"lineNumber":86,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":87,"author":{"gitId":"mfjkri"},"content":"     * @return A string representing the parameters in the format \"paramName1: paramValue1, ...\"","lastModifiedDate":"2023-09-15"},{"lineNumber":88,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":89,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":90,"author":{"gitId":"mfjkri"},"content":"    public String toString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":91,"author":{"gitId":"mfjkri"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-09-09"},{"lineNumber":92,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":93,"author":{"gitId":"mfjkri"},"content":"        for (Map.Entry\u003cString, String\u003e entry : paramMap.entrySet()) {","lastModifiedDate":"2023-09-09"},{"lineNumber":94,"author":{"gitId":"mfjkri"},"content":"            stringBuilder.append(entry.getKey()).append(\": \").append(entry.getValue()).append(\", \");","lastModifiedDate":"2023-09-09"},{"lineNumber":95,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":96,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":97,"author":{"gitId":"mfjkri"},"content":"        if (stringBuilder.length() \u003e 0) {","lastModifiedDate":"2023-09-09"},{"lineNumber":98,"author":{"gitId":"mfjkri"},"content":"            stringBuilder.setLength(stringBuilder.length() - 2);","lastModifiedDate":"2023-09-09"},{"lineNumber":99,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":100,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":101,"author":{"gitId":"mfjkri"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-09-09"},{"lineNumber":102,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":103,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"mfjkri":103}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.command;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import duke.error.DukeException;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"import duke.lib.Storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"import duke.lib.UI;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"import duke.parser.Validate;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":" * Represents a command to mark a task as not done in the task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"    private final int index;","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"     * Constructs an UnmarkCommand with the specified parameters.","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"     * @param params The parameters associated with the command.","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If there\u0027s an issue validating or retrieving the parameter.","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"    public UnmarkCommand(Params params) throws DukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"        super(\"unmark \u003cindex\u003e | um \u003cindex\u003e\");","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"        this.index \u003d Validate.validateNumber(params.getArgumentIfSet(\"index\", usageText));","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"     * Executes the unmark command, marking the specified task as not done and updating the task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"     * @param tasks   The task list containing the tasks.","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"     * @param ui      The user interface to display messages.","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"     * @param storage The storage handler to save the updated task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If there\u0027s an error unmarking the task or saving the task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"        ui.showMessage(String.format(\"OK, I\u0027ve marked this task as not done yet:\\n\\t%s\\n\",","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"mfjkri"},"content":"            tasks.unmarkTask(this.index)));","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"mfjkri"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"mfjkri":40}},{"path":"src/main/java/duke/error/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.error;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":" * Represents an exception specific to the Duke application.","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":" * DukeException is thrown when there\u0027s an issue or error within the Duke application.","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"     * Constructs a DukeException with the specified error message.","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"     * @param message Error message indicating the nature of the exception.","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"        super(\" ☹ OOPS!!! \" + message);","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"mfjkri":17}},{"path":"src/main/java/duke/lib/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.lib;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"import java.io.File;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"import duke.error.DukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":" * Manages reading and writing tasks to a save file.","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"public class Storage {","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"    private final File saveFile;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"    private final String directoryPath;","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"    private final String fullFilePath;","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"     * Constructs a Storage object with the specified directory and file name.","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"     * @param directoryName Directory where the file will be stored.","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"     * @param fileName      Name of the save file.","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"    public Storage(String directoryName, String fileName) {","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"        this.directoryPath \u003d \"./\" + directoryName;","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"        this.fullFilePath \u003d this.directoryPath + \"/\" + fileName;","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"        this.saveFile \u003d new File(this.fullFilePath);","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"mfjkri"},"content":"     * Creates the directory and save file if they are missing.","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If an unexpected error occurs while creating the directory or file.","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"mfjkri"},"content":"    private void createMissingSaveFiles() throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"mfjkri"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"mfjkri"},"content":"            File directory \u003d new File(this.directoryPath);","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"mfjkri"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"mfjkri"},"content":"                directory.mkdir();","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"mfjkri"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"mfjkri"},"content":"            if (!this.saveFile.exists()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"mfjkri"},"content":"                this.saveFile.createNewFile();","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"mfjkri"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"mfjkri"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"mfjkri"},"content":"            throw new DukeException(\"Unexpected error occurred. Cannot create new save file!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"mfjkri"},"content":"     * Loads tasks from the save file.","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"mfjkri"},"content":"     * @return ArrayList of serialized task strings.","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If the file is corrupted or an error occurs during loading.","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"mfjkri"},"content":"    public ArrayList\u003cString\u003e load() throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"mfjkri"},"content":"        ArrayList\u003cString\u003e serializedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"mfjkri"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"mfjkri"},"content":"            Scanner saveFileReader \u003d new Scanner(this.saveFile);","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"mfjkri"},"content":"            while (saveFileReader.hasNextLine()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"mfjkri"},"content":"                serializedTasks.add(saveFileReader.nextLine());","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"mfjkri"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"mfjkri"},"content":"            saveFileReader.close();","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"mfjkri"},"content":"        } catch (FileNotFoundException e1) {","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"mfjkri"},"content":"            this.createMissingSaveFiles();","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"mfjkri"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"mfjkri"},"content":"            throw new DukeException(\"File save is corrupted\");","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"mfjkri"},"content":"        return serializedTasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"mfjkri"},"content":"     * Saves the tasks to the save file.","lastModifiedDate":"2023-08-26"},{"lineNumber":79,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":80,"author":{"gitId":"mfjkri"},"content":"     * @param tasks TaskList containing tasks to be saved.","lastModifiedDate":"2023-08-26"},{"lineNumber":81,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If an error occurs during saving.","lastModifiedDate":"2023-08-26"},{"lineNumber":82,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":83,"author":{"gitId":"mfjkri"},"content":"    public void save(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":84,"author":{"gitId":"mfjkri"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(this.fullFilePath))) {","lastModifiedDate":"2023-08-26"},{"lineNumber":85,"author":{"gitId":"mfjkri"},"content":"            tasks.save(writer);","lastModifiedDate":"2023-08-26"},{"lineNumber":86,"author":{"gitId":"mfjkri"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":87,"author":{"gitId":"mfjkri"},"content":"            throw new DukeException(\"Failed to save!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":88,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":89,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":90,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"mfjkri":90}},{"path":"src/main/java/duke/lib/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.lib;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import duke.error.DukeException;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":" * Represents the user interface of the Duke application.","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"public class UI {","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"    private String currentStatus \u003d \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"    private void appendStatus(String status) {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"        currentStatus +\u003d status + \"\\n\";","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"     * Displays a welcome message to the user.","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"        String logo \u003d","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"                \"  ______  __    __       ___       _______  \\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"                        + \" /      ||  |  |  |     /   \\\\     |       \\\\ \\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"                        + \"|  ,----\u0027|  |__|  |    /  ^  \\\\    |  .--.  |\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"                        + \"|  |     |   __   |   /  /_\\\\  \\\\   |  |  |  |\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"                        + \"|  `----.|  |  |  |  /  _____  \\\\  |  \u0027--\u0027  |\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"                        + \" \\\\______||__|  |__| /__/     \\\\__\\\\ |_______/\\n\";","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"        showLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"        appendStatus(\"Hi!! I am\");","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"        appendStatus(logo);","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"        appendStatus(\"What brings you here today?\");","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"        showLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"mfjkri"},"content":"     * Displays a goodbye message to the user.","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"mfjkri"},"content":"    public void showGoodbye() {","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"mfjkri"},"content":"        appendStatus(\"Oh.. bye\");","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"mfjkri"},"content":"     * Displays an error message for loading data from the save file.","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"mfjkri"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"mfjkri"},"content":"        appendStatus(\"Error reading from save file.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"mfjkri"},"content":"     * Displays a separator line.","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"mfjkri"},"content":"    public void showLine() {","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"mfjkri"},"content":"        appendStatus(\"\");","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"mfjkri"},"content":"     * Displays an error message.","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"mfjkri"},"content":"     * @param error The DukeException containing the error message.","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"mfjkri"},"content":"    public void showError(DukeException error) {","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"mfjkri"},"content":"        appendStatus(error.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"mfjkri"},"content":"     * Displays a message to the user.","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"mfjkri"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"mfjkri"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"mfjkri"},"content":"        appendStatus(message);","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"mfjkri"},"content":"    public String getStatus() {","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"mfjkri"},"content":"        String tmp \u003d currentStatus;","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"mfjkri"},"content":"        this.currentStatus \u003d \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"mfjkri"},"content":"        return tmp;","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":80,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"mfjkri":80}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.parser;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import duke.command.AddDeadlineCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"import duke.command.AddEventCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"import duke.command.AddTodoCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"import duke.command.Params;","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"import duke.error.DukeException;","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":" * Parses user input commands and creates corresponding Command objects.","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"public class Parser {","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"     * Parses the full user input command and returns the corresponding Command object.","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"     * @param fullCommand The full user input command.","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"     * @return The corresponding Command object.","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If there\u0027s an issue parsing the command.","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"        String[] tokens \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"        String rootCmd \u003d tokens[0];","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"        Params params \u003d parseParams(tokens);","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"        switch (rootCmd) {","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"        case \"list\":","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"        case \"ls\":","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"            return new ListCommand();","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"mfjkri"},"content":"        case \"bye\":","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"mfjkri"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"mfjkri"},"content":"        case \"delete\":","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"mfjkri"},"content":"        case \"rm\":","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"mfjkri"},"content":"            return new DeleteCommand(params);","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"mfjkri"},"content":"        case \"mark\":","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"mfjkri"},"content":"        case \"m\":","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"mfjkri"},"content":"            return new MarkCommand(params);","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"mfjkri"},"content":"        case \"unmark\":","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"mfjkri"},"content":"        case \"um\":","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"mfjkri"},"content":"            return new UnmarkCommand(params);","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"mfjkri"},"content":"        case \"find\":","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"mfjkri"},"content":"        case \"f\":","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"mfjkri"},"content":"            return new FindCommand(params);","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"mfjkri"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"mfjkri"},"content":"        case \"t\":","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"mfjkri"},"content":"            return new AddTodoCommand(params);","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"mfjkri"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"mfjkri"},"content":"        case \"d\":","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"mfjkri"},"content":"            return new AddDeadlineCommand(params);","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"mfjkri"},"content":"        case \"event\":","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"mfjkri"},"content":"        case \"e\":","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"mfjkri"},"content":"            return new AddEventCommand(params);","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"mfjkri"},"content":"        default:","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"mfjkri"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"mfjkri"},"content":"    private static Params parseParams(String[] params) throws DukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"mfjkri"},"content":"        Params paramsMap \u003d new Params();","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"mfjkri"},"content":"        if (params.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-09"},{"lineNumber":68,"author":{"gitId":"mfjkri"},"content":"            return paramsMap;","lastModifiedDate":"2023-09-09"},{"lineNumber":69,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"mfjkri"},"content":"        String[] paramArray \u003d params[1].trim().split(\"\\\\s*/\");","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"mfjkri"},"content":"        String arg \u003d paramArray[0].trim();","lastModifiedDate":"2023-09-09"},{"lineNumber":74,"author":{"gitId":"mfjkri"},"content":"        paramsMap.setArgument(arg);","lastModifiedDate":"2023-09-09"},{"lineNumber":75,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"mfjkri"},"content":"        if (paramArray.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-15"},{"lineNumber":77,"author":{"gitId":"mfjkri"},"content":"            return paramsMap;","lastModifiedDate":"2023-09-15"},{"lineNumber":78,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":79,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":80,"author":{"gitId":"mfjkri"},"content":"        for (int i \u003d 1; i \u003c paramArray.length; i++) {","lastModifiedDate":"2023-09-09"},{"lineNumber":81,"author":{"gitId":"mfjkri"},"content":"            String[] keyValue \u003d paramArray[i].trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2023-09-09"},{"lineNumber":82,"author":{"gitId":"mfjkri"},"content":"            if (keyValue.length !\u003d 2) {","lastModifiedDate":"2023-09-15"},{"lineNumber":83,"author":{"gitId":"mfjkri"},"content":"                throw new DukeException(String.format(\"%s\\n\\n\\tUsage: %s\", \"Invalid parameter format\",","lastModifiedDate":"2023-09-15"},{"lineNumber":84,"author":{"gitId":"mfjkri"},"content":"                    \"command /param1 ... /param2 ... /param3 ...\"));","lastModifiedDate":"2023-09-15"},{"lineNumber":85,"author":{"gitId":"mfjkri"},"content":"            }","lastModifiedDate":"2023-09-15"},{"lineNumber":86,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":87,"author":{"gitId":"mfjkri"},"content":"            String key \u003d keyValue[0];","lastModifiedDate":"2023-09-09"},{"lineNumber":88,"author":{"gitId":"mfjkri"},"content":"            String value \u003d keyValue[1].trim();","lastModifiedDate":"2023-09-09"},{"lineNumber":89,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":90,"author":{"gitId":"mfjkri"},"content":"            paramsMap.setParam(key, value);","lastModifiedDate":"2023-09-09"},{"lineNumber":91,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":92,"author":{"gitId":"mfjkri"},"content":"        return paramsMap;","lastModifiedDate":"2023-09-09"},{"lineNumber":93,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":94,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"mfjkri":94}},{"path":"src/main/java/duke/parser/Validate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.parser;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"import duke.error.DukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":" * Provides validation methods for date-time and number formats.","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"public class Validate {","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"     * Validates and converts a string to a LocalDateTime object.","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"     * @param input The string to be validated and converted.","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"     * @return LocalDateTime object parsed from the input string.","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If the input has an invalid date-time format.","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"    public static LocalDateTime validateLocalDateTime(String input) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"            return LocalDateTime.parse(input, formatter);","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"        } catch (DateTimeParseException error) {","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"            throw new DukeException(\"Invalid date format. \u003cyyyy-MM-dd HH:mm\u003e expected\");","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"     * Validates and converts a string to an integer.","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"     * @param input The string to be validated and converted.","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"     * @return Integer value parsed from the input string.","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If the input is not a valid number format.","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"mfjkri"},"content":"    public static int validateNumber(String input) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"mfjkri"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"mfjkri"},"content":"            return Integer.parseInt(input);","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"mfjkri"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"mfjkri"},"content":"            throw new DukeException(\"Please provide a valid number format\");","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"mfjkri":44}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.task;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":" * Represents a task with a description and a due date. Deadline tasks are tasks that need to be done before a specified","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":" * due date.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"     * Due date of the deadline task.","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"    protected LocalDateTime dueDate;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"     * Constructs a Deadline object with the given description and due date.","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"     * @param dueDate     Due date of the task.","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"    public Deadline(String description, LocalDateTime dueDate) {","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"        super(description);","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"     * Returns a string representation of the deadline task.","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"     * @return Formatted string showing the deadline\u0027s type, completion status, description, and due date.","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formatLocalDateTime(dueDate) + \")\";","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":37,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"mfjkri"},"content":"     * Serializes the deadline task to a string format for saving.","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"mfjkri"},"content":"     * @return Serialized string representation of the deadline task.","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"mfjkri"},"content":"    public String serialize() {","lastModifiedDate":"2023-08-25"},{"lineNumber":44,"author":{"gitId":"mfjkri"},"content":"        return String.format(\"D | %d | %s | %s\", isDone ? 1 : 0, description, serializeLocalDateTime(dueDate));","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":46,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"mfjkri":46}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.task;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":" * Represents an event task with a description, start time, and end time. Event tasks are tasks that occur within a","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":" * specified time frame.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"     * Start time of the event.","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"     * End time of the event.","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"     * Constructs an Event object with the given description, start time, and end time.","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"     * @param description Description of the event.","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"     * @param from        Start time of the event.","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"     * @param to          End time of the event.","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-25"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"        super(description);","lastModifiedDate":"2023-08-19"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-19"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-19"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"     * Returns a string representation of the event task.","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"mfjkri"},"content":"     * @return Formatted string showing the event\u0027s type, completion status, description, and start and end times.","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":40,"author":{"gitId":"mfjkri"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":41,"author":{"gitId":"mfjkri"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + formatLocalDateTime(from) + \" to: \" + formatLocalDateTime(to)","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"mfjkri"},"content":"                + \")\";","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":44,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":45,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"mfjkri"},"content":"     * Serializes the event task to a string format for saving.","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"mfjkri"},"content":"     * @return Serialized string representation of the event task.","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":51,"author":{"gitId":"mfjkri"},"content":"    public String serialize() {","lastModifiedDate":"2023-08-25"},{"lineNumber":52,"author":{"gitId":"mfjkri"},"content":"        return String.format(\"E | %d | %s | %s | %s\", isDone ? 1 : 0, description, serializeLocalDateTime(from),","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"mfjkri"},"content":"                serializeLocalDateTime(to));","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":55,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"mfjkri":55}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.task;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":" * Represents a task with a description and completion status. Tasks can be marked as done or undone.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"     * Description of the task.","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"    protected String description;","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"     * Indicates whether the task is marked as done or not.","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"     * Constructs a Task object with the given description.","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-19"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-19"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-19"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"     * Gets the status icon representing whether the task is done or not.","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"     * @return A string representing the status icon (\"X\" for done, \" \" for not done).","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-19"},{"lineNumber":37,"author":{"gitId":"mfjkri"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-19"},{"lineNumber":38,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":39,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":40,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"mfjkri"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"mfjkri"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"mfjkri"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":46,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":47,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"mfjkri"},"content":"     * Marks the task as not done (undoes the markDone operation).","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"mfjkri"},"content":"    public void unmarkDone() {","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"mfjkri"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":53,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":54,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"mfjkri"},"content":"     * Returns a string representation of the task, including its completion status.","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"mfjkri"},"content":"     * @return A formatted string showing the task\u0027s status and description.","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":60,"author":{"gitId":"mfjkri"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":61,"author":{"gitId":"mfjkri"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2023-08-19"},{"lineNumber":62,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":63,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":64,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"mfjkri"},"content":"     * Serializes the task to a string format for saving.","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"mfjkri"},"content":"     * @return A serialized string representation of the task.","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"mfjkri"},"content":"    public abstract String serialize();","lastModifiedDate":"2023-08-25"},{"lineNumber":70,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":71,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"mfjkri"},"content":"     * Formats a LocalDateTime object to a string format suitable for serialization.","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"mfjkri"},"content":"     * @param date The LocalDateTime object to be formatted.","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"mfjkri"},"content":"     * @return A formatted string representing the LocalDateTime.","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"mfjkri"},"content":"    public String serializeLocalDateTime(LocalDateTime date) {","lastModifiedDate":"2023-08-25"},{"lineNumber":78,"author":{"gitId":"mfjkri"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2023-08-25"},{"lineNumber":79,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":80,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":81,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":82,"author":{"gitId":"mfjkri"},"content":"     * Formats a LocalDateTime object to a more human-readable string format.","lastModifiedDate":"2023-08-26"},{"lineNumber":83,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":84,"author":{"gitId":"mfjkri"},"content":"     * @param date The LocalDateTime object to be formatted.","lastModifiedDate":"2023-08-26"},{"lineNumber":85,"author":{"gitId":"mfjkri"},"content":"     * @return A formatted string representing the LocalDateTime.","lastModifiedDate":"2023-08-26"},{"lineNumber":86,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":87,"author":{"gitId":"mfjkri"},"content":"    public String formatLocalDateTime(LocalDateTime date) {","lastModifiedDate":"2023-08-25"},{"lineNumber":88,"author":{"gitId":"mfjkri"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\"));","lastModifiedDate":"2023-08-25"},{"lineNumber":89,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":90,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":91,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":92,"author":{"gitId":"mfjkri"},"content":"     * Checks whether the task\u0027s description contains the given keyword.","lastModifiedDate":"2023-08-26"},{"lineNumber":93,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":94,"author":{"gitId":"mfjkri"},"content":"     * @param keyword The keyword to search for in the task\u0027s description.","lastModifiedDate":"2023-08-26"},{"lineNumber":95,"author":{"gitId":"mfjkri"},"content":"     * @return True if the description contains the keyword, false otherwise.","lastModifiedDate":"2023-08-26"},{"lineNumber":96,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":97,"author":{"gitId":"mfjkri"},"content":"    public boolean containKeyword(String keyword) {","lastModifiedDate":"2023-08-26"},{"lineNumber":98,"author":{"gitId":"mfjkri"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2023-08-26"},{"lineNumber":99,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":100,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"mfjkri":100}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.task;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"import duke.error.DukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"import duke.parser.Validate;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":" * Represents a list of tasks that can be managed, including adding, deleting, marking, and unmarking tasks.","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"public class TaskList {","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"     * Constructs a TaskList from serialized tasks.","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"     * @param serializedTasks Serialized tasks in the form of strings.","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If there\u0027s an issue parsing the serialized tasks.","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"    public TaskList(ArrayList\u003cString\u003e serializedTasks) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"        for (String serializedTask : serializedTasks) {","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"            String[] tokens \u003d serializedTask.split(\" \\\\| \");","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"            String taskType \u003d tokens[0];","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"            boolean status \u003d tokens[1].equals(\"1\");","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"mfjkri"},"content":"            String description \u003d tokens[2];","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"mfjkri"},"content":"            Task task \u003d null;","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"mfjkri"},"content":"            switch (taskType) {","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"mfjkri"},"content":"            case \"T\": {","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"mfjkri"},"content":"                task \u003d this.addTodo(description);","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"mfjkri"},"content":"                break;","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"mfjkri"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"mfjkri"},"content":"            case \"D\": {","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"mfjkri"},"content":"                task \u003d this.addDeadline(description, tokens[3]);","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"mfjkri"},"content":"                break;","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"mfjkri"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"mfjkri"},"content":"            case \"E\": {","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"mfjkri"},"content":"                task \u003d this.addEvent(description, tokens[3], tokens[4]);","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"mfjkri"},"content":"                break;","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"mfjkri"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"mfjkri"},"content":"            default:","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"mfjkri"},"content":"                throw new DukeException(\"Unknown serialized task\");","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"mfjkri"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"mfjkri"},"content":"            if (task !\u003d null \u0026\u0026 status) {","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"mfjkri"},"content":"                task.markDone();","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"mfjkri"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"mfjkri"},"content":"     * Validates and retrieves the real index from the given task index.","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"mfjkri"},"content":"     * @param index Task index to be validated.","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"mfjkri"},"content":"     * @return Validated real index of the task.","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If the provided index is invalid.","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"mfjkri"},"content":"    private int validateIndex(int index) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"mfjkri"},"content":"        if (index \u003c 1) {","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"mfjkri"},"content":"            throw new DukeException(\"Please provide a task index that is 1 \u003c\u003d task index \u003c\u003d 100.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"mfjkri"},"content":"        } else if (index \u003e this.tasks.size()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"mfjkri"},"content":"            throw new DukeException(\"The given task index is higher than current task list: \"","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"mfjkri"},"content":"                    + this.tasks.size() + \".\");","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"mfjkri"},"content":"        int realIndex \u003d index - 1;","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"mfjkri"},"content":"        Task task \u003d tasks.get(realIndex);","lastModifiedDate":"2023-08-26"},{"lineNumber":79,"author":{"gitId":"mfjkri"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2023-08-26"},{"lineNumber":80,"author":{"gitId":"mfjkri"},"content":"            throw new DukeException(\"There is no task at the given task index.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":81,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":82,"author":{"gitId":"mfjkri"},"content":"        return realIndex;","lastModifiedDate":"2023-08-26"},{"lineNumber":83,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":84,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":85,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":86,"author":{"gitId":"mfjkri"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":87,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":88,"author":{"gitId":"mfjkri"},"content":"     * @param task Task to be added.","lastModifiedDate":"2023-08-26"},{"lineNumber":89,"author":{"gitId":"mfjkri"},"content":"     * @return The added task.","lastModifiedDate":"2023-08-26"},{"lineNumber":90,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":91,"author":{"gitId":"mfjkri"},"content":"    public Task addTask(Task task) {","lastModifiedDate":"2023-08-26"},{"lineNumber":92,"author":{"gitId":"mfjkri"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-08-26"},{"lineNumber":93,"author":{"gitId":"mfjkri"},"content":"        return task;","lastModifiedDate":"2023-08-26"},{"lineNumber":94,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":95,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":96,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":97,"author":{"gitId":"mfjkri"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":98,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":99,"author":{"gitId":"mfjkri"},"content":"     * @param index Index of the task to be deleted.","lastModifiedDate":"2023-08-26"},{"lineNumber":100,"author":{"gitId":"mfjkri"},"content":"     * @return The deleted task.","lastModifiedDate":"2023-08-26"},{"lineNumber":101,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If the provided index is invalid.","lastModifiedDate":"2023-08-26"},{"lineNumber":102,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":103,"author":{"gitId":"mfjkri"},"content":"    public Task deleteTask(int index) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":104,"author":{"gitId":"mfjkri"},"content":"        return this.tasks.remove(this.validateIndex(index));","lastModifiedDate":"2023-08-26"},{"lineNumber":105,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":106,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":107,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":108,"author":{"gitId":"mfjkri"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-08-26"},{"lineNumber":109,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":110,"author":{"gitId":"mfjkri"},"content":"     * @param index Index of the task to be marked.","lastModifiedDate":"2023-08-26"},{"lineNumber":111,"author":{"gitId":"mfjkri"},"content":"     * @return The marked task.","lastModifiedDate":"2023-08-26"},{"lineNumber":112,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If the provided index is invalid.","lastModifiedDate":"2023-08-26"},{"lineNumber":113,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":114,"author":{"gitId":"mfjkri"},"content":"    public Task markTask(int index) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":115,"author":{"gitId":"mfjkri"},"content":"        Task task \u003d this.tasks.get(this.validateIndex(index));","lastModifiedDate":"2023-08-26"},{"lineNumber":116,"author":{"gitId":"mfjkri"},"content":"        task.markDone();","lastModifiedDate":"2023-08-26"},{"lineNumber":117,"author":{"gitId":"mfjkri"},"content":"        return task;","lastModifiedDate":"2023-08-26"},{"lineNumber":118,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":119,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":120,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":121,"author":{"gitId":"mfjkri"},"content":"     * Unmarks a task (marks it as not done).","lastModifiedDate":"2023-08-26"},{"lineNumber":122,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":123,"author":{"gitId":"mfjkri"},"content":"     * @param index Index of the task to be unmarked.","lastModifiedDate":"2023-08-26"},{"lineNumber":124,"author":{"gitId":"mfjkri"},"content":"     * @return The unmarked task.","lastModifiedDate":"2023-08-26"},{"lineNumber":125,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If the provided index is invalid.","lastModifiedDate":"2023-08-26"},{"lineNumber":126,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":127,"author":{"gitId":"mfjkri"},"content":"    public Task unmarkTask(int index) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":128,"author":{"gitId":"mfjkri"},"content":"        Task task \u003d this.tasks.get(this.validateIndex(index));","lastModifiedDate":"2023-08-26"},{"lineNumber":129,"author":{"gitId":"mfjkri"},"content":"        task.unmarkDone();","lastModifiedDate":"2023-08-26"},{"lineNumber":130,"author":{"gitId":"mfjkri"},"content":"        return task;","lastModifiedDate":"2023-08-26"},{"lineNumber":131,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":132,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":133,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":134,"author":{"gitId":"mfjkri"},"content":"     * Adds a todo task to the task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":135,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":136,"author":{"gitId":"mfjkri"},"content":"     * @param desc Description of the todo task.","lastModifiedDate":"2023-08-26"},{"lineNumber":137,"author":{"gitId":"mfjkri"},"content":"     * @return The added todo task.","lastModifiedDate":"2023-08-26"},{"lineNumber":138,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":139,"author":{"gitId":"mfjkri"},"content":"    public Todo addTodo(String desc) {","lastModifiedDate":"2023-08-26"},{"lineNumber":140,"author":{"gitId":"mfjkri"},"content":"        Todo todo \u003d new Todo(desc);","lastModifiedDate":"2023-08-26"},{"lineNumber":141,"author":{"gitId":"mfjkri"},"content":"        this.addTask(todo);","lastModifiedDate":"2023-08-26"},{"lineNumber":142,"author":{"gitId":"mfjkri"},"content":"        return todo;","lastModifiedDate":"2023-08-26"},{"lineNumber":143,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":144,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":145,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":146,"author":{"gitId":"mfjkri"},"content":"     * Adds a deadline task to the task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":147,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":148,"author":{"gitId":"mfjkri"},"content":"     * @param desc Description of the deadline task.","lastModifiedDate":"2023-08-26"},{"lineNumber":149,"author":{"gitId":"mfjkri"},"content":"     * @param by   Deadline of the task.","lastModifiedDate":"2023-08-26"},{"lineNumber":150,"author":{"gitId":"mfjkri"},"content":"     * @return The added deadline task.","lastModifiedDate":"2023-08-26"},{"lineNumber":151,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If there\u0027s an issue with the deadline format.","lastModifiedDate":"2023-08-26"},{"lineNumber":152,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":153,"author":{"gitId":"mfjkri"},"content":"    public Deadline addDeadline(String desc, String by) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":154,"author":{"gitId":"mfjkri"},"content":"        Deadline deadline \u003d new Deadline(desc, Validate.validateLocalDateTime(by));","lastModifiedDate":"2023-08-26"},{"lineNumber":155,"author":{"gitId":"mfjkri"},"content":"        this.addTask(deadline);","lastModifiedDate":"2023-08-26"},{"lineNumber":156,"author":{"gitId":"mfjkri"},"content":"        return deadline;","lastModifiedDate":"2023-08-26"},{"lineNumber":157,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":158,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":159,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":160,"author":{"gitId":"mfjkri"},"content":"     * Adds an event task to the task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":161,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":162,"author":{"gitId":"mfjkri"},"content":"     * @param desc Description of the event task.","lastModifiedDate":"2023-08-26"},{"lineNumber":163,"author":{"gitId":"mfjkri"},"content":"     * @param from Start time of the event.","lastModifiedDate":"2023-08-26"},{"lineNumber":164,"author":{"gitId":"mfjkri"},"content":"     * @param to   End time of the event.","lastModifiedDate":"2023-08-26"},{"lineNumber":165,"author":{"gitId":"mfjkri"},"content":"     * @return The added event task.","lastModifiedDate":"2023-08-26"},{"lineNumber":166,"author":{"gitId":"mfjkri"},"content":"     * @throws DukeException If there\u0027s an issue with the date-time formats.","lastModifiedDate":"2023-08-26"},{"lineNumber":167,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":168,"author":{"gitId":"mfjkri"},"content":"    public Event addEvent(String desc, String from, String to) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":169,"author":{"gitId":"mfjkri"},"content":"        Event event \u003d new Event(desc, Validate.validateLocalDateTime(from), Validate.validateLocalDateTime(to));","lastModifiedDate":"2023-08-26"},{"lineNumber":170,"author":{"gitId":"mfjkri"},"content":"        this.addTask(event);","lastModifiedDate":"2023-08-26"},{"lineNumber":171,"author":{"gitId":"mfjkri"},"content":"        return event;","lastModifiedDate":"2023-08-26"},{"lineNumber":172,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":173,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":174,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":175,"author":{"gitId":"mfjkri"},"content":"     * Saves the tasks in the task list to a BufferedWriter.","lastModifiedDate":"2023-08-26"},{"lineNumber":176,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":177,"author":{"gitId":"mfjkri"},"content":"     * @param writer BufferedWriter to write the tasks to.","lastModifiedDate":"2023-08-26"},{"lineNumber":178,"author":{"gitId":"mfjkri"},"content":"     * @throws IOException If there\u0027s an issue writing to the writer.","lastModifiedDate":"2023-08-26"},{"lineNumber":179,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":180,"author":{"gitId":"mfjkri"},"content":"    public void save(BufferedWriter writer) throws IOException {","lastModifiedDate":"2023-08-26"},{"lineNumber":181,"author":{"gitId":"mfjkri"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2023-08-26"},{"lineNumber":182,"author":{"gitId":"mfjkri"},"content":"            writer.write(task.serialize());","lastModifiedDate":"2023-08-26"},{"lineNumber":183,"author":{"gitId":"mfjkri"},"content":"            writer.newLine();","lastModifiedDate":"2023-08-26"},{"lineNumber":184,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":185,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":186,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":187,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":188,"author":{"gitId":"mfjkri"},"content":"     * Returns a summary of the number of tasks in the task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":189,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":190,"author":{"gitId":"mfjkri"},"content":"     * @return Summary of the number of tasks.","lastModifiedDate":"2023-08-26"},{"lineNumber":191,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":192,"author":{"gitId":"mfjkri"},"content":"    public String status() {","lastModifiedDate":"2023-08-26"},{"lineNumber":193,"author":{"gitId":"mfjkri"},"content":"        return String.format(\"You have %d tasks in the list.\", this.tasks.size());","lastModifiedDate":"2023-08-26"},{"lineNumber":194,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":195,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":196,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":197,"author":{"gitId":"mfjkri"},"content":"     * Retrieves a list of tasks containing a given keyword in their description.","lastModifiedDate":"2023-08-26"},{"lineNumber":198,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":199,"author":{"gitId":"mfjkri"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2023-08-26"},{"lineNumber":200,"author":{"gitId":"mfjkri"},"content":"     * @return An ArrayList of tasks that match the keyword.","lastModifiedDate":"2023-08-26"},{"lineNumber":201,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":202,"author":{"gitId":"mfjkri"},"content":"    public String searchMatchingTasks(String keyword) {","lastModifiedDate":"2023-08-26"},{"lineNumber":203,"author":{"gitId":"mfjkri"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-08-26"},{"lineNumber":204,"author":{"gitId":"mfjkri"},"content":"        StringBuilder str \u003d new StringBuilder(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-08-26"},{"lineNumber":205,"author":{"gitId":"mfjkri"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2023-08-26"},{"lineNumber":206,"author":{"gitId":"mfjkri"},"content":"            if (task.containKeyword(keyword)) {","lastModifiedDate":"2023-08-26"},{"lineNumber":207,"author":{"gitId":"mfjkri"},"content":"                str.append(count \u003e 0 ? \"\\n\" : \"\").append(count++).append(\".\").append(task);","lastModifiedDate":"2023-08-26"},{"lineNumber":208,"author":{"gitId":"mfjkri"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":209,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":210,"author":{"gitId":"mfjkri"},"content":"        return count \u003e 0 ? str.toString() : \"No matching results for search: \" + keyword;","lastModifiedDate":"2023-08-26"},{"lineNumber":211,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":212,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":213,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":214,"author":{"gitId":"mfjkri"},"content":"     * Returns a string representation of the task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":215,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":216,"author":{"gitId":"mfjkri"},"content":"     * @return String representation of the task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":217,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":218,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":219,"author":{"gitId":"mfjkri"},"content":"    public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":220,"author":{"gitId":"mfjkri"},"content":"        StringBuilder str \u003d new StringBuilder(this.status() + \"\\n\");","lastModifiedDate":"2023-09-02"},{"lineNumber":221,"author":{"gitId":"mfjkri"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-08-26"},{"lineNumber":222,"author":{"gitId":"mfjkri"},"content":"            str.append(i + 1).append(\".\").append(this.tasks.get(i)).append(","lastModifiedDate":"2023-08-26"},{"lineNumber":223,"author":{"gitId":"mfjkri"},"content":"                    i \u003c this.tasks.size() - 1 ? \"\\n\" : \"\");","lastModifiedDate":"2023-08-26"},{"lineNumber":224,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":225,"author":{"gitId":"mfjkri"},"content":"        return str.toString();","lastModifiedDate":"2023-08-26"},{"lineNumber":226,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":227,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"mfjkri":227}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.task;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":" * Represents a todo task with a description.","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":" * Todo tasks are tasks that need to be done without a specific time frame.","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"     * Constructs a Todo object with the given description.","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"     * @param description Description of the todo task.","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"        super(description);","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"     * Returns a string representation of the todo task.","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"     * @return Formatted string showing the todo\u0027s type, completion status, and description.","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-19"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"     * Serializes the todo task to a string format for saving.","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"     * @return Serialized string representation of the todo task.","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"    public String serialize() {","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"        return String.format(\"T | %d | %s\", isDone ? 1 : 0, description);","lastModifiedDate":"2023-08-25"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":37,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"mfjkri":37}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":" * An example of a custom control using FXML. This control represents a dialog box consisting of an ImageView to","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":" * represent the speaker\u0027s face and a label containing text from the speaker.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"     * Creates a new instance of the DialogBox with the provided text and image.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"     * @param text The text to display in the dialog.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"     * @param img  The image to display in the dialog.","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"mfjkri"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"mfjkri"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"mfjkri"},"content":"            assert dialog !\u003d null : \"Dialog Label is not initialized\";","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"mfjkri"},"content":"            assert displayPicture !\u003d null : \"Display Picture ImageView is not initialized\";","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"mfjkri"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"mfjkri"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"mfjkri"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"mfjkri"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"mfjkri"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"mfjkri"},"content":"    private void flip() {","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"mfjkri"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"mfjkri"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"mfjkri"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"mfjkri"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"mfjkri"},"content":"     * Creates a DialogBox instance for a user message.","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"mfjkri"},"content":"     * @param text The text of the user\u0027s message.","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"mfjkri"},"content":"     * @param img  The user\u0027s display picture.","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"mfjkri"},"content":"     * @return A DialogBox representing the user\u0027s message.","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"mfjkri"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"mfjkri"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"mfjkri"},"content":"     * Creates a DialogBox instance for a Duke (chatbot) message.","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"mfjkri"},"content":"     * @param text The text of Duke\u0027s message.","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"mfjkri"},"content":"     * @param img  Duke\u0027s display picture.","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"mfjkri"},"content":"     * @return A DialogBox representing Duke\u0027s message.","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"mfjkri"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"mfjkri"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"mfjkri"},"content":"        db.flip();","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"mfjkri"},"content":"        return db;","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"mfjkri":83}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"    private Image userImage;","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"    private Image dukeImage;","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"     * Initializes the MainWindow. Binds the ScrollPane\u0027s vertical value to the height of the dialog container, ensuring","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"     * automatic scrolling as new messages are added.","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"mfjkri"},"content":"        assert scrollPane !\u003d null : \"ScrollPane is not initialized\";","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"mfjkri"},"content":"        assert dialogContainer !\u003d null : \"DialogContainer is not initialized\";","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"mfjkri"},"content":"        assert userInput !\u003d null : \"UserInput is not initialized\";","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"mfjkri"},"content":"        assert sendButton !\u003d null : \"SendButton is not initialized\";","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"mfjkri"},"content":"        java.io.InputStream userImagePath \u003d this.getClass().getResourceAsStream(\"/images/user.png\");","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"mfjkri"},"content":"        assert userImagePath !\u003d null : \"UserImage could not be loaded\";","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"mfjkri"},"content":"        userImage \u003d new Image(userImagePath);","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"mfjkri"},"content":"        java.io.InputStream dukeImagePath \u003d this.getClass().getResourceAsStream(\"/images/duke.png\");","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"mfjkri"},"content":"        assert dukeImagePath !\u003d null : \"DukeImage could not be loaded\";","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"mfjkri"},"content":"        dukeImage \u003d new Image(dukeImagePath);","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"mfjkri"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"mfjkri"},"content":"     * Sets the Duke instance for the UI to interact with and initializes the conversation with Duke\u0027s initial message.","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"mfjkri"},"content":"     * @param d The Duke instance.","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"mfjkri"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"mfjkri"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"mfjkri"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"mfjkri"},"content":"            DialogBox.getDukeDialog(duke.init(), dukeImage)","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"mfjkri"},"content":"        );","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"mfjkri"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"mfjkri"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"mfjkri"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"mfjkri"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"mfjkri"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"mfjkri"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"mfjkri"},"content":"        if (duke.getExitStatus()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"mfjkri"},"content":"            setTimeout(Platform::exit, 1000);","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"mfjkri"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"mfjkri"},"content":"            DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"mfjkri"},"content":"            DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"mfjkri"},"content":"        );","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"mfjkri"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":85,"author":{"gitId":"mfjkri"},"content":"     * Sets a timeout for executing a Runnable after a specified delay.","lastModifiedDate":"2023-09-08"},{"lineNumber":86,"author":{"gitId":"mfjkri"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":87,"author":{"gitId":"mfjkri"},"content":"     * @param runnable The code to be executed after the delay.","lastModifiedDate":"2023-09-08"},{"lineNumber":88,"author":{"gitId":"mfjkri"},"content":"     * @param delay    The delay in milliseconds before executing the Runnable.","lastModifiedDate":"2023-09-08"},{"lineNumber":89,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":90,"author":{"gitId":"mfjkri"},"content":"    public static void setTimeout(Runnable runnable, int delay) {","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"mfjkri"},"content":"        new Thread(() -\u003e {","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"mfjkri"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"mfjkri"},"content":"                Thread.sleep(delay);","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"mfjkri"},"content":"                runnable.run();","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"mfjkri"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"mfjkri"},"content":"                System.err.println(e);","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"mfjkri"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"mfjkri"},"content":"        }).start();","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"mfjkri":100}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"900.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"            \u003cFont name\u003d\"Noto Sans Mono Regular\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"mfjkri":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"            prefWidth\u003d\"800.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"            fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"700\"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"700\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"100\" text\u003d\"Send\"/\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" vbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"                    prefWidth\u003d\"800\"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" fillWidth\u003d\"true\" prefWidth\u003d\"800\"/\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"mfjkri":25}},{"path":"src/test/java/duke/parser/ValidateTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.parser;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"import duke.error.DukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"public class ValidateTest {","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"    public void testValidateLocalDateTimeValid() {","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"            LocalDateTime dateTime \u003d Validate.validateLocalDateTime(\"2023-08-26 15:30\");","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"            assertNotNull(dateTime);","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"            fail(\"Exception should not be thrown for valid date-time format\");","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"    public void testValidateLocalDateTimeInvalid() {","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"            Validate.validateLocalDateTime(\"2023-08-26\");","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"        });","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"    public void testValidateNumberValid() {","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"            int number \u003d Validate.validateNumber(\"42\");","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"mfjkri"},"content":"            assertEquals(42, number);","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"mfjkri"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"mfjkri"},"content":"            fail(\"Exception should not be thrown for valid number format\");","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"mfjkri"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"mfjkri"},"content":"    public void testValidateNumberInvalid() {","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"mfjkri"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"mfjkri"},"content":"            Validate.validateNumber(\"invalid\");","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"mfjkri"},"content":"        });","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"mfjkri":49}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package duke.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"import duke.error.DukeException;","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"    public void testMarkTask() {","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"            Todo todo \u003d taskList.addTodo(\"Buy groceries\");","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"            assertEquals(todo.getStatusIcon(), \" \");","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"            taskList.markTask(1);","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"            assertEquals(todo.getStatusIcon(), \"X\");","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"            fail(\"Exception should not be thrown for valid input\");","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"    public void testMarkTaskInvalidIndex() {","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"            taskList.markTask(1); // Attempting to mark a task when the list is empty","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"        });","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"mfjkri":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"todo","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"todo read book","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"deadline  /by","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"deadline  /by Sunday","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"deadline return book /by","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"event  /from  /to","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"event project meeting /from  /to","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"event project meeting /from  /to 4pm","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"event project meeting /from Mon 2pm /to","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"event  /from  /to 4pm","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"event  /from Mon 2pm /to","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"mark 0","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"mark 10","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"mark abc","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"mark 1","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"mark 3","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"unmark 0","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"unmark 10","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"unmark abc","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"unmark 3","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"delete","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"delete 3","lastModifiedDate":"2023-08-19"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"bye","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"mfjkri":28}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"mfjkri":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"# delete output from previous runx","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"mfjkri":1}}]
