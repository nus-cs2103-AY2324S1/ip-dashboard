[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"marioalvaro"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"marioalvaro"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"marioalvaro"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"marioalvaro"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"marioalvaro"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"marioalvaro"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"marioalvaro"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"marioalvaro"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"marioalvaro"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"marioalvaro"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"marioalvaro"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"marioalvaro"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"marioalvaro"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"marioalvaro"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"marioalvaro"},"content":"    mainClass.set(\"Duke\")","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"marioalvaro"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"marioalvaro"},"content":"checkstyle {","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"marioalvaro"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"marioalvaro"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"marioalvaro"},"content":"mainClassName \u003d \u0027Duke\u0027","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"marioalvaro":24,"-":41}},{"path":"data/TaskStorage.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"marioalvaro"},"content":"T / 0 / 2","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"marioalvaro"},"content":"E / 1 / Pinus / 2021-12-03 1034 / 2022-01-01 0056","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"marioalvaro"},"content":"T / 0 / 1","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"marioalvaro"},"content":"T / 0 / 2","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"marioalvaro"},"content":"T / 0 / 2","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"marioalvaro"},"content":"T / 0 / 2","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"marioalvaro"},"content":"T / 0 / 222","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"marioalvaro"},"content":"T / 0 / 3","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"marioalvaro"},"content":"T / 0 / 4","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"marioalvaro":9}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marioalvaro"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"marioalvaro"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"marioalvaro"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"marioalvaro"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"marioalvaro"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"marioalvaro"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"marioalvaro"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"marioalvaro"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"marioalvaro"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"marioalvaro"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"marioalvaro"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"marioalvaro"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"marioalvaro"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"marioalvaro"},"content":" * DialogBox for Duke and User.","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"marioalvaro"},"content":" *","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"marioalvaro"},"content":" * @author marioalvaro","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"marioalvaro"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"marioalvaro"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"marioalvaro"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"marioalvaro"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"marioalvaro"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"marioalvaro"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"marioalvaro"},"content":"     * Constructor for a DialogBox.","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"marioalvaro"},"content":"     * @param text the text contained in the dialog.","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"marioalvaro"},"content":"     * @param img The image of the user or Duke.","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"marioalvaro"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"marioalvaro"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"marioalvaro"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"marioalvaro"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"marioalvaro"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"marioalvaro"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"marioalvaro"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"marioalvaro"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"marioalvaro"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"marioalvaro"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"marioalvaro"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"marioalvaro"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"marioalvaro"},"content":"    private void flip() {","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"marioalvaro"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"marioalvaro"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"marioalvaro"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"marioalvaro"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"marioalvaro"},"content":"     * Get DialogBox of a user.","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"marioalvaro"},"content":"     * @param text The text message.","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"marioalvaro"},"content":"     * @param img the Image of the User.","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"marioalvaro"},"content":"     * @return A DialogBox with the information.","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"marioalvaro"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"marioalvaro"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"marioalvaro"},"content":"     * Get DialogBox of the Duke.","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"marioalvaro"},"content":"     * @param text The text message.","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"marioalvaro"},"content":"     * @param img the Image of Duke.","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"marioalvaro"},"content":"     * @return A DialogBox with the information.","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"marioalvaro"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"marioalvaro"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"marioalvaro"},"content":"        db.flip();","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"marioalvaro"},"content":"        return db;","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"marioalvaro"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"marioalvaro":80}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marioalvaro"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"marioalvaro"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marioalvaro"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marioalvaro"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marioalvaro"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"marioalvaro"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"marioalvaro"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"marioalvaro"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"marioalvaro"},"content":" * Class Duke for the chatbot","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"marioalvaro"},"content":" *","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"marioalvaro"},"content":" * @author marioalvaro","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"marioalvaro"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"marioalvaro"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"marioalvaro"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"marioalvaro"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"marioalvaro"},"content":"    private String response;","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"marioalvaro"},"content":"     * A Constructor to create Duke Chat bot.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"marioalvaro"},"content":"    public Duke() {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"marioalvaro"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"marioalvaro"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"marioalvaro"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"marioalvaro"},"content":"            storage.checkFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"marioalvaro"},"content":"            this.taskList \u003d new TaskList(storage.readFile());","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"marioalvaro"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"marioalvaro"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"marioalvaro"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"marioalvaro"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"marioalvaro"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"marioalvaro"},"content":"     * @param input input response in string.","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"marioalvaro"},"content":"     * @return Response message from Duke.","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"marioalvaro"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"marioalvaro"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"marioalvaro"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"marioalvaro"},"content":"            response \u003d c.execute(taskList, ui, storage);","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"marioalvaro"},"content":"            if (c instanceof ByeCommand) {","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"marioalvaro"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"marioalvaro"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"marioalvaro"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"marioalvaro"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"marioalvaro"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"marioalvaro"},"content":"        return response;","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":61,"author":{"gitId":"marioalvaro"},"content":"     * method to run the code.","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":63,"author":{"gitId":"marioalvaro"},"content":"    public void run() {","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"marioalvaro"},"content":"        ui.printGreet();","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"marioalvaro"},"content":"        while (true) {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"marioalvaro"},"content":"            Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-25"},{"lineNumber":68,"author":{"gitId":"marioalvaro"},"content":"            String s \u003d in.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":70,"author":{"gitId":"marioalvaro"},"content":"            if (s \u003d\u003d null) {","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"marioalvaro"},"content":"                s \u003d in.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"marioalvaro"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"marioalvaro"},"content":"            try {","lastModifiedDate":"2023-08-25"},{"lineNumber":75,"author":{"gitId":"marioalvaro"},"content":"                Command c \u003d Parser.parse(s);","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"marioalvaro"},"content":"                response \u003d c.execute(taskList, ui, storage);","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"marioalvaro"},"content":"                if (c instanceof ByeCommand) {","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"marioalvaro"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"marioalvaro"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"marioalvaro"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"marioalvaro"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"marioalvaro"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"marioalvaro"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"marioalvaro"},"content":"        storage.writeFile(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"marioalvaro"},"content":"        new Duke().run();","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"marioalvaro":89,"-":4}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marioalvaro"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"marioalvaro"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"marioalvaro"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"marioalvaro"},"content":" *","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"marioalvaro"},"content":" * @author marioalvaro","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"marioalvaro"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"marioalvaro"},"content":"public class Launcher {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"marioalvaro"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"marioalvaro"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"marioalvaro"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"marioalvaro":12}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marioalvaro"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"marioalvaro"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"marioalvaro"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"marioalvaro"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"marioalvaro"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"marioalvaro"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"marioalvaro"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"marioalvaro"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"marioalvaro"},"content":" *","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"marioalvaro"},"content":" * @author marioalvaro","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"marioalvaro"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"marioalvaro"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"marioalvaro"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"marioalvaro"},"content":"     * Method that start the Application","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"marioalvaro"},"content":"     * @param stage the primary stage for this application, onto which","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"marioalvaro"},"content":"     *              the application scene can be set.","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"marioalvaro"},"content":"     *              Applications may create other stages, if needed, but they will not be","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"marioalvaro"},"content":"     *              primary stages.","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"marioalvaro"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"marioalvaro"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"marioalvaro"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"marioalvaro"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"marioalvaro"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"marioalvaro"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"marioalvaro"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"marioalvaro"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"marioalvaro"},"content":"            stage.show();","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"marioalvaro"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"marioalvaro"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"marioalvaro"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"marioalvaro"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"marioalvaro":39}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marioalvaro"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"marioalvaro"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"marioalvaro"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"marioalvaro"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"marioalvaro"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"marioalvaro"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"marioalvaro"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"marioalvaro"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"marioalvaro"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"marioalvaro"},"content":" *","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"marioalvaro"},"content":" * @author marioalvaro","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"marioalvaro"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"marioalvaro"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"marioalvaro"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"marioalvaro"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"marioalvaro"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"marioalvaro"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"marioalvaro"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"marioalvaro"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"marioalvaro"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"marioalvaro"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"marioalvaro"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"marioalvaro"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"DaUser.jpg\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"marioalvaro"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"DaDuke.jpg\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"marioalvaro"},"content":"     * Method to initialize the application.","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"marioalvaro"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"marioalvaro"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"marioalvaro"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"marioalvaro"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"marioalvaro"},"content":"                DialogBox.getDukeDialog(\"     Hello! I\u0027m Siri\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"marioalvaro"},"content":"                        + \"     What can I do for you?\\n\", dukeImage));","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"marioalvaro"},"content":"     * set duke object.","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"marioalvaro"},"content":"     * @param d input duke","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"marioalvaro"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"marioalvaro"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"marioalvaro"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"marioalvaro"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"marioalvaro"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"marioalvaro"},"content":"    private void handleUserInput() throws InterruptedException {","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"marioalvaro"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"marioalvaro"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"marioalvaro"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"marioalvaro"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"marioalvaro"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"marioalvaro"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"marioalvaro"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"marioalvaro"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"marioalvaro"},"content":"            System.exit(1);","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"marioalvaro"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"marioalvaro"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"marioalvaro":67}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marioalvaro"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marioalvaro"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marioalvaro"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marioalvaro"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"marioalvaro"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"marioalvaro"},"content":" * A Command Class to execute gooodbye statement","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"marioalvaro"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"marioalvaro"},"content":" * @author marioalvaro","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"marioalvaro"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"marioalvaro"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"marioalvaro"},"content":"     * Method to execute the goodbye statement.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"marioalvaro"},"content":"     * @param taskList The used TaskList","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"marioalvaro"},"content":"     * @param ui The ui object","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"marioalvaro"},"content":"     * @param storage The storage used","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"marioalvaro"},"content":"     * @return Message response from running the command.","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"marioalvaro"},"content":"     * @throws Exception throw Exception from writeFile","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"marioalvaro"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"marioalvaro"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws Exception {","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"marioalvaro"},"content":"        storage.writeFile(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"marioalvaro"},"content":"        return ui.printBye();","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"marioalvaro"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"marioalvaro":27}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marioalvaro"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marioalvaro"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marioalvaro"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marioalvaro"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"marioalvaro"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"marioalvaro"},"content":" * Abstract class for the Command class","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"marioalvaro"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"marioalvaro"},"content":" * @author marioalvaro","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"marioalvaro"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"marioalvaro"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"marioalvaro"},"content":"     * Method to execute the command","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"marioalvaro"},"content":"     * @param taskList The used TaskList","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"marioalvaro"},"content":"     * @param ui The ui object","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"marioalvaro"},"content":"     * @param storage The storage used","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"marioalvaro"},"content":"     * @return Message response from running the command.","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"marioalvaro"},"content":"     * @throws Exception Throw Exception if needed","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"marioalvaro"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws Exception;","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"marioalvaro"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"marioalvaro":23}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marioalvaro"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marioalvaro"},"content":"import duke.exception.DukeInvalidDeleteException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marioalvaro"},"content":"import duke.exception.DukeInvalidMarkException;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"marioalvaro"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marioalvaro"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"marioalvaro"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"marioalvaro"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"marioalvaro"},"content":" * A Command Class to execute delete task.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"marioalvaro"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"marioalvaro"},"content":" * @author marioalvaro","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"marioalvaro"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"marioalvaro"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"marioalvaro"},"content":"    private String[] splitTask;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"marioalvaro"},"content":"     * Constructor that create DeleteCommand.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"marioalvaro"},"content":"     * @param splitTask Array of String that contains the index for the mark","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"marioalvaro"},"content":"    public DeleteCommand(String[] splitTask) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"marioalvaro"},"content":"        this.splitTask \u003d splitTask;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"marioalvaro"},"content":"     * Method to execute delete mechanism","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"marioalvaro"},"content":"     * @param taskList The used TaskList","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"marioalvaro"},"content":"     * @param ui The ui object","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"marioalvaro"},"content":"     * @param storage The storage used","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"marioalvaro"},"content":"     * @return Message response from running the command.","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"marioalvaro"},"content":"     * @throws Exception Throw Exception if index is incorrect","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"marioalvaro"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"marioalvaro"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws Exception {","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"marioalvaro"},"content":"        int index;","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"marioalvaro"},"content":"        String result;","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"marioalvaro"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"marioalvaro"},"content":"            index \u003d Integer.parseInt(splitTask[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"marioalvaro"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"marioalvaro"},"content":"            throw new DukeInvalidDeleteException(splitTask[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"marioalvaro"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"marioalvaro"},"content":"        if (index \u003e 0 \u0026\u0026 index \u003c\u003d taskList.size() \u0026\u0026 taskList.get(index - 1) !\u003d null) {","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"marioalvaro"},"content":"            result \u003d ui.printDeleteTask(taskList.get(index - 1), taskList.size() - 1);","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"marioalvaro"},"content":"            taskList.remove(index - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"marioalvaro"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"marioalvaro"},"content":"            throw new DukeInvalidMarkException(Integer.toString(index));","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"marioalvaro"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"marioalvaro"},"content":"        storage.writeFile(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"marioalvaro"},"content":"        return result;","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"marioalvaro"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"marioalvaro":56}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marioalvaro"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"marioalvaro"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"marioalvaro"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"marioalvaro"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"marioalvaro"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"marioalvaro"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"marioalvaro"},"content":" * A Command Class that helps to find tasks according to the keyword","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"marioalvaro"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"marioalvaro"},"content":" * @author marioalvaro","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"marioalvaro"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"marioalvaro"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"marioalvaro"},"content":"    private String[] splitTask;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"marioalvaro"},"content":"     * Constructor for FindCommand.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"marioalvaro"},"content":"     * @param splitTask array of String that contains the keyword","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"marioalvaro"},"content":"    public FindCommand(String[] splitTask) {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"marioalvaro"},"content":"        this.splitTask \u003d splitTask;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"marioalvaro"},"content":"     * Execute and find the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"marioalvaro"},"content":"     * @param taskList The original TaskList","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"marioalvaro"},"content":"     * @param ui The Ui","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"marioalvaro"},"content":"     * @param storage The storage object used","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"marioalvaro"},"content":"     * @return Message response from running the command.","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"marioalvaro"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"marioalvaro"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"marioalvaro"},"content":"        TaskList findTasks \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"marioalvaro"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"marioalvaro"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"marioalvaro"},"content":"            if (task.contains(this.splitTask[1])) {","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"marioalvaro"},"content":"                findTasks.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"marioalvaro"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"marioalvaro"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"marioalvaro"},"content":"        return ui.printTaskList(findTasks);","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"marioalvaro"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"marioalvaro":47}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marioalvaro"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marioalvaro"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marioalvaro"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marioalvaro"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"marioalvaro"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"marioalvaro"},"content":" * A Command Class to list out the Task","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"marioalvaro"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"marioalvaro"},"content":" * @author marioalvaro","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"marioalvaro"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"marioalvaro"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"marioalvaro"},"content":"     * Method to execute the list out.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"marioalvaro"},"content":"     * @param taskList The used TaskList","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"marioalvaro"},"content":"     * @param ui The ui object","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"marioalvaro"},"content":"     * @param storage The storage used","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"marioalvaro"},"content":"     * @return Message response from running the command.","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"marioalvaro"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"marioalvaro"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"marioalvaro"},"content":"        return ui.printTaskList(taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"marioalvaro"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"marioalvaro":26}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marioalvaro"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marioalvaro"},"content":"import duke.exception.DukeInvalidMarkException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marioalvaro"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marioalvaro"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marioalvaro"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"marioalvaro"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"marioalvaro"},"content":" * A Comment Class to mark a task","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"marioalvaro"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"marioalvaro"},"content":" * @author marioalvaro","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"marioalvaro"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"marioalvaro"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"marioalvaro"},"content":"    private String[] splitTask;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"marioalvaro"},"content":"     * A Constructor to make the MarkCommand.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"marioalvaro"},"content":"     * @param splitTask Array of String that contains the index for the mark","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"marioalvaro"},"content":"    public MarkCommand(String[] splitTask) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"marioalvaro"},"content":"        this.splitTask \u003d splitTask;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"marioalvaro"},"content":"     * Method to execute the marking mechanism","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"marioalvaro"},"content":"     * @param taskList The used TaskList","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"marioalvaro"},"content":"     * @param ui The ui object","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"marioalvaro"},"content":"     * @param storage The storage used","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"marioalvaro"},"content":"     * @return Message response from running the command.","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"marioalvaro"},"content":"     * @throws Exception If there is an incorrect marking index","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"marioalvaro"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"marioalvaro"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws Exception {","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"marioalvaro"},"content":"        int index;","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"marioalvaro"},"content":"        String result;","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"marioalvaro"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"marioalvaro"},"content":"            index \u003d Integer.parseInt(splitTask[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"marioalvaro"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"marioalvaro"},"content":"            throw new DukeInvalidMarkException(splitTask[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"marioalvaro"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"marioalvaro"},"content":"        if (index \u003e 0 \u0026\u0026 index \u003c\u003d taskList.size() \u0026\u0026 taskList.get(index - 1) !\u003d null) {","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"marioalvaro"},"content":"            taskList.get(index - 1).mark();","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"marioalvaro"},"content":"            result \u003d ui.printMark(taskList.get(index - 1));","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"marioalvaro"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"marioalvaro"},"content":"            throw new DukeInvalidMarkException(Integer.toString(index));","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"marioalvaro"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"marioalvaro"},"content":"        storage.writeFile(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"marioalvaro"},"content":"        return result;","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"marioalvaro"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"marioalvaro":56}},{"path":"src/main/java/duke/command/TaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marioalvaro"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marioalvaro"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marioalvaro"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marioalvaro"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marioalvaro"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"marioalvaro"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"marioalvaro"},"content":" * A Command Class that creates a class","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"marioalvaro"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"marioalvaro"},"content":" * @author marioalvaro","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"marioalvaro"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"marioalvaro"},"content":"public class TaskCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"marioalvaro"},"content":"    private String[] splitTask;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"marioalvaro"},"content":"     * A Constructor that create TaskCommand.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"marioalvaro"},"content":"     * @param splitTask Array of String that contains the index for the mark","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"marioalvaro"},"content":"    public TaskCommand(String[] splitTask) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"marioalvaro"},"content":"        this.splitTask \u003d splitTask;","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"marioalvaro"},"content":"     * Method to execute the delet mechanism.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"marioalvaro"},"content":"     * @param taskList The used TaskList","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"marioalvaro"},"content":"     * @param ui The ui object","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"marioalvaro"},"content":"     * @param storage The storage used","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"marioalvaro"},"content":"     * @return Message response from running the command.","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"marioalvaro"},"content":"     * @throws Exception If createTaskType and writeFile throw Exception","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"marioalvaro"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"marioalvaro"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws Exception {","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"marioalvaro"},"content":"        Task newTask \u003d Task.createTaskType(splitTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"marioalvaro"},"content":"        taskList.add(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"marioalvaro"},"content":"        int i \u003d taskList.indexOf(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"marioalvaro"},"content":"        storage.writeFile(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"marioalvaro"},"content":"        return ui.printAddTask(newTask, i + 1);","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"marioalvaro"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"marioalvaro":44}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marioalvaro"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marioalvaro"},"content":"import duke.exception.DukeInvalidMarkException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marioalvaro"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marioalvaro"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marioalvaro"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"marioalvaro"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"marioalvaro"},"content":" * A Comment Class to unmark a task","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"marioalvaro"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"marioalvaro"},"content":" * @author marioalvaro","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"marioalvaro"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"marioalvaro"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"marioalvaro"},"content":"    private String[] splitTask;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"marioalvaro"},"content":"     * A Constructor to make the UnmarkCommand.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"marioalvaro"},"content":"     * @param splitTask Array of String that contains the index for the mark","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"marioalvaro"},"content":"    public UnmarkCommand(String[] splitTask) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"marioalvaro"},"content":"        this.splitTask \u003d splitTask;","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"marioalvaro"},"content":"     * Method to execute the marking mechanism","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"marioalvaro"},"content":"     * @param taskList The used TaskList","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"marioalvaro"},"content":"     * @param ui The ui object","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"marioalvaro"},"content":"     * @param storage The storage used","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"marioalvaro"},"content":"     * @return Message response from running the command.","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"marioalvaro"},"content":"     * @throws Exception If there is an incorrect marking index","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"marioalvaro"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"marioalvaro"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws Exception {","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"marioalvaro"},"content":"        int index;","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"marioalvaro"},"content":"        String result;","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"marioalvaro"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"marioalvaro"},"content":"            index \u003d Integer.parseInt(splitTask[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"marioalvaro"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"marioalvaro"},"content":"            throw new DukeInvalidMarkException(splitTask[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"marioalvaro"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"marioalvaro"},"content":"        if (index \u003e 0 \u0026\u0026 index \u003c\u003d taskList.size() \u0026\u0026 taskList.get(index - 1) !\u003d null) {","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"marioalvaro"},"content":"            taskList.get(index - 1).unmark();","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"marioalvaro"},"content":"            result \u003d ui.printUnmark(taskList.get(index - 1));","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"marioalvaro"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"marioalvaro"},"content":"            throw new DukeInvalidMarkException(Integer.toString(index));","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"marioalvaro"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"marioalvaro"},"content":"        storage.writeFile(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"marioalvaro"},"content":"        return result;","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"marioalvaro"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"marioalvaro":55}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marioalvaro"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marioalvaro"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"marioalvaro"},"content":" * An Exception Class that handles specifically to Duke.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"marioalvaro"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"marioalvaro"},"content":" * @author marioalvaro","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"marioalvaro"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"marioalvaro"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"marioalvaro"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"marioalvaro"},"content":"     * @param e The Exception message","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"marioalvaro"},"content":"    public DukeException(String e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"marioalvaro"},"content":"        super(e);","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"marioalvaro"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"marioalvaro":18}},{"path":"src/main/java/duke/exception/DukeIndexOutOfBoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marioalvaro"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marioalvaro"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"marioalvaro"},"content":" * An Exception Class that handles Index out of Bound.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"marioalvaro"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"marioalvaro"},"content":" * @author marioalvaro","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"marioalvaro"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"marioalvaro"},"content":"public class DukeIndexOutOfBoundException extends DukeException {","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"marioalvaro"},"content":"     * Constructor for DukeIndexOutOfBoundException.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"marioalvaro"},"content":"     * @param e The Exception message","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"marioalvaro"},"content":"    public DukeIndexOutOfBoundException(String e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"marioalvaro"},"content":"        super(\"     ☹ OOPS!!! The description cannot be empty.\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"marioalvaro"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"marioalvaro":18}},{"path":"src/main/java/duke/exception/DukeInvalidDeleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marioalvaro"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marioalvaro"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"marioalvaro"},"content":" * An Exception Class that handles wrong index in Delete.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"marioalvaro"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"marioalvaro"},"content":" * @author marioalvaro","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"marioalvaro"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"marioalvaro"},"content":"public class DukeInvalidDeleteException extends DukeException {","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"marioalvaro"},"content":"     * Constructor for DukeInvalidDeleteException.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"marioalvaro"},"content":"     * @param e The Exception message","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"marioalvaro"},"content":"    public DukeInvalidDeleteException(String e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"marioalvaro"},"content":"        super(\"     ☹ OOPS!!! The index for deleting is invalid.\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"marioalvaro"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"marioalvaro":19}},{"path":"src/main/java/duke/exception/DukeInvalidMarkException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marioalvaro"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marioalvaro"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"marioalvaro"},"content":" * An Exception Class that handles invalid marking index.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"marioalvaro"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"marioalvaro"},"content":" * @author marioalvaro","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"marioalvaro"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"marioalvaro"},"content":"public class DukeInvalidMarkException extends DukeException {","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"marioalvaro"},"content":"     * Constructor for DukeInvalidMarkException.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"marioalvaro"},"content":"     * @param e The Exception message","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"marioalvaro"},"content":"    public DukeInvalidMarkException(String e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"marioalvaro"},"content":"        super(\"     ☹ OOPS!!! The index for marking is invalid.\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"marioalvaro"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"marioalvaro":18}},{"path":"src/main/java/duke/exception/DukeNoTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marioalvaro"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marioalvaro"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"marioalvaro"},"content":" * An Exception Class that handles incorrect time format.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"marioalvaro"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"marioalvaro"},"content":" * @author marioalvaro","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"marioalvaro"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"marioalvaro"},"content":"public class DukeNoTimeException extends DukeException {","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"marioalvaro"},"content":"     * Constructor for DukeNoTimeException.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"marioalvaro"},"content":"     * @param e The Exception message","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"marioalvaro"},"content":"    public DukeNoTimeException(String e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"marioalvaro"},"content":"        super(\"     ☹ OOPS!!! Please enter the correct duke.time format.\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"marioalvaro"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"marioalvaro":18}},{"path":"src/main/java/duke/exception/DukeNotTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marioalvaro"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marioalvaro"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"marioalvaro"},"content":" * An Exception Class that handles unknown command.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"marioalvaro"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"marioalvaro"},"content":" * @author marioalvaro","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"marioalvaro"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"marioalvaro"},"content":"public class DukeNotTaskException extends DukeException {","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"marioalvaro"},"content":"     * Constructor for DukeNotTaskException.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"marioalvaro"},"content":"     * @param e The Exception message","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"marioalvaro"},"content":"    public DukeNotTaskException(String e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"marioalvaro"},"content":"        super(\"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"marioalvaro"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"marioalvaro":18}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marioalvaro"},"content":"package duke.parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marioalvaro"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"marioalvaro"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"marioalvaro"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"marioalvaro"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"marioalvaro"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"marioalvaro"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"marioalvaro"},"content":"import duke.command.TaskCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"marioalvaro"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"marioalvaro"},"content":"import duke.exception.DukeNotTaskException;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"marioalvaro"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"marioalvaro"},"content":" * A Class that parse the command input.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"marioalvaro"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"marioalvaro"},"content":" * @author marioalvaro","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"marioalvaro"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"marioalvaro"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"marioalvaro"},"content":"     * Enum for all the possible command words","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"marioalvaro"},"content":"    enum CommandWord {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"marioalvaro"},"content":"        BYE,","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"marioalvaro"},"content":"        DELETE,","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"marioalvaro"},"content":"        LIST,","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"marioalvaro"},"content":"        MARK,","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"marioalvaro"},"content":"        UNMARK,","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"marioalvaro"},"content":"        TODO,","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"marioalvaro"},"content":"        DEADLINE,","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"marioalvaro"},"content":"        EVENT,","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"marioalvaro"},"content":"        FIND,","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"marioalvaro"},"content":"     * Method that parse the command input into different Command","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"marioalvaro"},"content":"     * @param input A String of command","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"marioalvaro"},"content":"     * @return A Command object that correlate to the input","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"marioalvaro"},"content":"     * @throws Exception thrown if the command is unknown","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"marioalvaro"},"content":"    public static Command parse(String input) throws Exception {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"marioalvaro"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"marioalvaro"},"content":"            CommandWord commandWord \u003d CommandWord.valueOf(input.split(\" \")[0].toUpperCase());","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"marioalvaro"},"content":"            String[] splitTask \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"marioalvaro"},"content":"            switch (commandWord) {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"marioalvaro"},"content":"            case BYE:","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"marioalvaro"},"content":"                return new ByeCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"marioalvaro"},"content":"            case DELETE:","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"marioalvaro"},"content":"                if (splitTask.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"marioalvaro"},"content":"                    return new DeleteCommand(splitTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"marioalvaro"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"marioalvaro"},"content":"                throw new DukeNotTaskException(\"\");","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"marioalvaro"},"content":"            case LIST:","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"marioalvaro"},"content":"                return new ListCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"marioalvaro"},"content":"            case MARK:","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"marioalvaro"},"content":"                if (splitTask.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"marioalvaro"},"content":"                    return new MarkCommand(splitTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"marioalvaro"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"marioalvaro"},"content":"                throw new DukeNotTaskException(\"\");","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"marioalvaro"},"content":"            case UNMARK:","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"marioalvaro"},"content":"                if (splitTask.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"marioalvaro"},"content":"                    return new UnmarkCommand(splitTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"marioalvaro"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"marioalvaro"},"content":"                throw new DukeNotTaskException(\"\");","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"marioalvaro"},"content":"            case TODO:","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"marioalvaro"},"content":"            case EVENT:","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"marioalvaro"},"content":"            case DEADLINE:","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"marioalvaro"},"content":"                if (splitTask.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"marioalvaro"},"content":"                    return new TaskCommand(splitTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"marioalvaro"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"marioalvaro"},"content":"                throw new DukeNotTaskException(\"\");","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"marioalvaro"},"content":"            case FIND:","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"marioalvaro"},"content":"                if (splitTask.length \u003d\u003d 2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"marioalvaro"},"content":"                    return new FindCommand(splitTask);","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"marioalvaro"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"marioalvaro"},"content":"                throw new DukeNotTaskException(\"\");","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"marioalvaro"},"content":"            default:","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"marioalvaro"},"content":"                throw new DukeNotTaskException(\"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"marioalvaro"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"marioalvaro"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"marioalvaro"},"content":"            throw new DukeNotTaskException(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"marioalvaro"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"marioalvaro"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"marioalvaro":84}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marioalvaro"},"content":"package duke.storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marioalvaro"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"marioalvaro"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"marioalvaro"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"marioalvaro"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"marioalvaro"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"marioalvaro"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"marioalvaro"},"content":"import duke.exception.DukeNotTaskException;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"marioalvaro"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"marioalvaro"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"marioalvaro"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"marioalvaro"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"marioalvaro"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"marioalvaro"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"marioalvaro"},"content":" * A Class to handle file reading and writing.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"marioalvaro"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"marioalvaro"},"content":" * @author marioalvaro","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"marioalvaro"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"marioalvaro"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"marioalvaro"},"content":"    private static final String PATH_FILE \u003d \"./data/TaskStorage.txt\";","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"marioalvaro"},"content":"    private File file \u003d new File(PATH_FILE);","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"marioalvaro"},"content":"     * A method to read the txt file","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"marioalvaro"},"content":"     * @return an ArrayList of Task","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"marioalvaro"},"content":"     * @throws Exception of the scanner and DukeNotTaskException","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"marioalvaro"},"content":"    public ArrayList\u003cTask\u003e readFile() throws Exception {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"marioalvaro"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"marioalvaro"},"content":"        ArrayList\u003cTask\u003e readFile \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"marioalvaro"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"marioalvaro"},"content":"            String scanned \u003d sc.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"marioalvaro"},"content":"            String[] singleTaskArray \u003d scanned.split(\" / \");","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"marioalvaro"},"content":"            //do a checking \u003c------","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"marioalvaro"},"content":"            Task task;","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"marioalvaro"},"content":"            switch (singleTaskArray[0]) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"marioalvaro"},"content":"            case \"T\":","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"marioalvaro"},"content":"                task \u003d new Todo(singleTaskArray[2]);","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"marioalvaro"},"content":"                break;","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"marioalvaro"},"content":"            case \"D\":","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"marioalvaro"},"content":"                task \u003d new Deadline(singleTaskArray[2], singleTaskArray[3]);","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"marioalvaro"},"content":"                break;","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"marioalvaro"},"content":"            case \"E\":","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"marioalvaro"},"content":"                task \u003d new Event(singleTaskArray[2], singleTaskArray[3], singleTaskArray[4]);","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"marioalvaro"},"content":"                break;","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"marioalvaro"},"content":"            default:","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"marioalvaro"},"content":"                throw new DukeNotTaskException(singleTaskArray[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"marioalvaro"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"marioalvaro"},"content":"            if (singleTaskArray[1].equals(\"1\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"marioalvaro"},"content":"                task.mark();","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"marioalvaro"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"marioalvaro"},"content":"            readFile.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"marioalvaro"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"marioalvaro"},"content":"        return readFile;","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"marioalvaro"},"content":"     * A method to write the file with the existing TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"marioalvaro"},"content":"     * @param taskList the taskList that want to be written","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"marioalvaro"},"content":"    public void writeFile(TaskList taskList) {","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"marioalvaro"},"content":"        String newData \u003d arrayToDataString(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"marioalvaro"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"marioalvaro"},"content":"            FileWriter fileWriter \u003d new FileWriter(PATH_FILE, false);","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"marioalvaro"},"content":"            BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"marioalvaro"},"content":"            bufferedWriter.write(newData);","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"marioalvaro"},"content":"            bufferedWriter.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"marioalvaro"},"content":"            fileWriter.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"marioalvaro"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"marioalvaro"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"marioalvaro"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"marioalvaro"},"content":"     * A method to check if the file exist. If not, create a new .txt file.","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"marioalvaro"},"content":"    public void checkFile() {","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"marioalvaro"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"marioalvaro"},"content":"            File directory \u003d new File(\"./data\");","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"marioalvaro"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"marioalvaro"},"content":"                directory.mkdirs();","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"marioalvaro"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"marioalvaro"},"content":"            File file \u003d new File(PATH_FILE);","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"marioalvaro"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"marioalvaro"},"content":"                boolean created \u003d file.createNewFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"marioalvaro"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"marioalvaro"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"marioalvaro"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"marioalvaro"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"marioalvaro"},"content":"     * Convert TaskList into String that compatible with the format of storing.","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"marioalvaro"},"content":"     * @param taskList The taskList that want to be written","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"marioalvaro"},"content":"     * @return a String with storing format","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"marioalvaro"},"content":"    public static String arrayToDataString(TaskList taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"marioalvaro"},"content":"        String dataString \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"marioalvaro"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"marioalvaro"},"content":"            dataString +\u003d taskList.get(i).toDataString() + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"marioalvaro"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"marioalvaro"},"content":"        return dataString;","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"marioalvaro"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"marioalvaro":123}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marioalvaro"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marioalvaro"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"marioalvaro"},"content":"import duke.time.Time;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"marioalvaro"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"marioalvaro"},"content":" * A Class that handle deadline","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"marioalvaro"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"marioalvaro"},"content":" * @author marioalvaro","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"marioalvaro"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"marioalvaro"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"marioalvaro"},"content":"     * the type Icon","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"marioalvaro"},"content":"    private static final String TYPE \u003d \"D\";","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"marioalvaro"},"content":"     * the duke.time the deadline must be finished","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"marioalvaro"},"content":"    private LocalDateTime time;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"marioalvaro"},"content":"     * constructor for crating Deadline","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"marioalvaro"},"content":"     * @param description the text stored","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"marioalvaro"},"content":"     * @param by the time the deadline must be finished","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":29,"author":{"gitId":"marioalvaro"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-25"},{"lineNumber":30,"author":{"gitId":"marioalvaro"},"content":"        super(description);","lastModifiedDate":"2023-08-25"},{"lineNumber":31,"author":{"gitId":"marioalvaro"},"content":"        this.time \u003d Time.toLocalDateTime(by);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":33,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":34,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"marioalvaro"},"content":"     * override the toString method.","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"marioalvaro"},"content":"     * @return a string","lastModifiedDate":"2023-08-25"},{"lineNumber":38,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":39,"author":{"gitId":"marioalvaro"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":40,"author":{"gitId":"marioalvaro"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":41,"author":{"gitId":"marioalvaro"},"content":"        return \"[\" + TYPE + \"]\" + super.toString()","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"marioalvaro"},"content":"                + \" (by: \" + Time.toString(this.time) + \")\";","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":44,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"marioalvaro"},"content":"     * Method to create string that in match with the storing format.","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"marioalvaro"},"content":"     * @return string that in match with the storing format.","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"marioalvaro"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"marioalvaro"},"content":"    public String toDataString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"marioalvaro"},"content":"        return TYPE + \" / \" + super.toDataString() + \" / \" + Time.toDataString(this.time);","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"marioalvaro"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"marioalvaro":54}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marioalvaro"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marioalvaro"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"marioalvaro"},"content":"import duke.time.Time;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"marioalvaro"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"marioalvaro"},"content":" * A Class that handle Event.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"marioalvaro"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"marioalvaro"},"content":" * @author marioalvaro","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"marioalvaro"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"marioalvaro"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"marioalvaro"},"content":"     * the type Icon","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"marioalvaro"},"content":"    private static final String TYPE \u003d \"E\";","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"marioalvaro"},"content":"     * start of the event","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"marioalvaro"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"marioalvaro"},"content":"     * end of the event","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"marioalvaro"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"marioalvaro"},"content":"     * A Constructor to create an Event","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"marioalvaro"},"content":"     * @param description the text description of the task","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"marioalvaro"},"content":"     * @param from The time the event starts","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"marioalvaro"},"content":"     * @param to The time the event ends","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":33,"author":{"gitId":"marioalvaro"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-25"},{"lineNumber":34,"author":{"gitId":"marioalvaro"},"content":"        super(description);","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"marioalvaro"},"content":"        this.from \u003d Time.toLocalDateTime(from);","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"marioalvaro"},"content":"        this.to \u003d Time.toLocalDateTime(to);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":38,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":39,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":40,"author":{"gitId":"marioalvaro"},"content":"     * override the toString method","lastModifiedDate":"2023-08-25"},{"lineNumber":41,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"marioalvaro"},"content":"     * @return a string","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":44,"author":{"gitId":"marioalvaro"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":45,"author":{"gitId":"marioalvaro"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":46,"author":{"gitId":"marioalvaro"},"content":"        return \"[\" + TYPE + \"]\" + super.toString()","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"marioalvaro"},"content":"                + \" (from: \" + Time.toString(this.from) + \" to: \" + Time.toString(this.to) + \")\";","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":49,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"marioalvaro"},"content":"     * Method to create string that in match with the storing format.","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"marioalvaro"},"content":"     * @return string that in match with the storing format.","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"marioalvaro"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"marioalvaro"},"content":"    public String toDataString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"marioalvaro"},"content":"        return this.TYPE + \" / \" + super.toDataString() + \" / \"","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"marioalvaro"},"content":"                + Time.toDataString(this.from) + \" / \" + Time.toDataString(this.to);","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"marioalvaro"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"marioalvaro":60}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marioalvaro"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marioalvaro"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marioalvaro"},"content":"import duke.exception.DukeIndexOutOfBoundException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marioalvaro"},"content":"import duke.exception.DukeNoTimeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marioalvaro"},"content":"import duke.exception.DukeNotTaskException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"marioalvaro"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"marioalvaro"},"content":" * A Class that handle task","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"marioalvaro"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"marioalvaro"},"content":" * @author marioalvaro","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"marioalvaro"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"marioalvaro"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"marioalvaro"},"content":"     * the task description","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"marioalvaro"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"marioalvaro"},"content":"     * variable to indicate if it is marked or not","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"marioalvaro"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"marioalvaro"},"content":"     * Constructor for duke.task.Task class","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"marioalvaro"},"content":"     * @param description the string of description that would like to be stored","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"marioalvaro"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"marioalvaro"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"marioalvaro"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":33,"author":{"gitId":"marioalvaro"},"content":"     * factory method to create duke.task based on the type","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"marioalvaro"},"content":"     * @param splitTask String array containing the type and description","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"marioalvaro"},"content":"     * @return new duke.task.Task object based on the types","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"marioalvaro"},"content":"     * @throws DukeException throws duke.exception.DukeException","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":38,"author":{"gitId":"marioalvaro"},"content":"    public static Task createTaskType(String[] splitTask) throws DukeException {","lastModifiedDate":"2023-08-25"},{"lineNumber":39,"author":{"gitId":"marioalvaro"},"content":"        String type \u003d splitTask[0];","lastModifiedDate":"2023-08-25"},{"lineNumber":40,"author":{"gitId":"marioalvaro"},"content":"        String description \u003d \"\";","lastModifiedDate":"2023-08-25"},{"lineNumber":41,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":42,"author":{"gitId":"marioalvaro"},"content":"        if (!(type.equals(\"deadline\") || type.equals(\"todo\") || type.equals(\"event\"))) {","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"marioalvaro"},"content":"            throw new DukeNotTaskException(type);","lastModifiedDate":"2023-08-25"},{"lineNumber":44,"author":{"gitId":"marioalvaro"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":45,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":46,"author":{"gitId":"marioalvaro"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":47,"author":{"gitId":"marioalvaro"},"content":"            description \u003d splitTask[1];","lastModifiedDate":"2023-08-25"},{"lineNumber":48,"author":{"gitId":"marioalvaro"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":49,"author":{"gitId":"marioalvaro"},"content":"            throw new DukeIndexOutOfBoundException(splitTask[0]);","lastModifiedDate":"2023-08-25"},{"lineNumber":50,"author":{"gitId":"marioalvaro"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":51,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":52,"author":{"gitId":"marioalvaro"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":53,"author":{"gitId":"marioalvaro"},"content":"            if (type.equals(\"deadline\")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":54,"author":{"gitId":"marioalvaro"},"content":"                String[] splitDesc \u003d description.split(\" /by \", 2);","lastModifiedDate":"2023-08-25"},{"lineNumber":55,"author":{"gitId":"marioalvaro"},"content":"                System.out.println(splitDesc[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"marioalvaro"},"content":"                return new Deadline(splitDesc[0], splitDesc[1]);","lastModifiedDate":"2023-08-25"},{"lineNumber":57,"author":{"gitId":"marioalvaro"},"content":"            } else if (type.equals(\"todo\")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":58,"author":{"gitId":"marioalvaro"},"content":"                return new Todo(description);","lastModifiedDate":"2023-08-25"},{"lineNumber":59,"author":{"gitId":"marioalvaro"},"content":"            } else {","lastModifiedDate":"2023-08-25"},{"lineNumber":60,"author":{"gitId":"marioalvaro"},"content":"                String[] splitDesc \u003d description.split(\" /from \", 2);","lastModifiedDate":"2023-08-25"},{"lineNumber":61,"author":{"gitId":"marioalvaro"},"content":"                String[] splitDesc2 \u003d splitDesc[1].split(\" /to \", 2);","lastModifiedDate":"2023-08-25"},{"lineNumber":62,"author":{"gitId":"marioalvaro"},"content":"                return new Event(splitDesc[0], splitDesc2[0], splitDesc2[1]);","lastModifiedDate":"2023-08-25"},{"lineNumber":63,"author":{"gitId":"marioalvaro"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":64,"author":{"gitId":"marioalvaro"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":65,"author":{"gitId":"marioalvaro"},"content":"            throw new DukeNoTimeException(type);","lastModifiedDate":"2023-08-25"},{"lineNumber":66,"author":{"gitId":"marioalvaro"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":67,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":68,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":69,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"marioalvaro"},"content":"     * return the status icon","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"marioalvaro"},"content":"     * @return the status icon","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"marioalvaro"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"marioalvaro"},"content":"        return (isDone ? \"X\" : \" \"); // mark done duke.task with X","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"marioalvaro"},"content":"     * mark the duke.task done","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"marioalvaro"},"content":"    public void mark() {","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"marioalvaro"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"marioalvaro"},"content":"     * mark the duke.task not done","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"marioalvaro"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"marioalvaro"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"marioalvaro"},"content":"     * return true if the description contains the input string.","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"marioalvaro"},"content":"     * @param str input string","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"marioalvaro"},"content":"     * @return true if the description contains the input string","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"marioalvaro"},"content":"    public boolean contains(String str) {","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"marioalvaro"},"content":"        return this.description.contains(str);","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"marioalvaro"},"content":"     * override the toString method","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"marioalvaro"},"content":"     * @return a string","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"marioalvaro"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"marioalvaro"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"marioalvaro"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"marioalvaro"},"content":"     * Convert task to string with storing format.","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"marioalvaro"},"content":"     * @return String with data format","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":114,"author":{"gitId":"marioalvaro"},"content":"    public String toDataString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"marioalvaro"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"marioalvaro"},"content":"            return \"1 / \" + this.description;","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"marioalvaro"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"marioalvaro"},"content":"            return \"0 / \" + this.description;","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"marioalvaro"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"marioalvaro"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"marioalvaro":122}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marioalvaro"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marioalvaro"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"marioalvaro"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"marioalvaro"},"content":" * A Class that acts as an array for storing all the tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"marioalvaro"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"marioalvaro"},"content":" * @author marioalvaro","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"marioalvaro"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"marioalvaro"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"marioalvaro"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"marioalvaro"},"content":"     * Constructor if the taskList has not been created","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"marioalvaro"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"marioalvaro"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"marioalvaro"},"content":"     * Constructor if there is an existing taskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"marioalvaro"},"content":"     * @param taskList ArrayList of task.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"marioalvaro"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"marioalvaro"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"marioalvaro"},"content":"     * Add a task into the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"marioalvaro"},"content":"     * @param task the task that want to be added","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"marioalvaro"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"marioalvaro"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"marioalvaro"},"content":"     * Remove a task from the TaskList","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"marioalvaro"},"content":"     * @param index The index of the task that want to be removes.","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"marioalvaro"},"content":"    public void remove(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"marioalvaro"},"content":"        this.taskList.remove(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"marioalvaro"},"content":"     * Get the task based on the index.","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"marioalvaro"},"content":"     * @param index of the task","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"marioalvaro"},"content":"     * @return the Task with the index","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"marioalvaro"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"marioalvaro"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"marioalvaro"},"content":"     * Get the size of the list","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"marioalvaro"},"content":"     * @return the size of the list","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"marioalvaro"},"content":"    public int size() {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"marioalvaro"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"marioalvaro"},"content":"     * Get the index of a task.","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"marioalvaro"},"content":"     * @param task The task","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"marioalvaro"},"content":"     * @return the index of the task","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"marioalvaro"},"content":"    public int indexOf(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"marioalvaro"},"content":"        return this.taskList.indexOf(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"marioalvaro"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"marioalvaro":76}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marioalvaro"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marioalvaro"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"marioalvaro"},"content":" * A Class that handle a todo task.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"marioalvaro"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"marioalvaro"},"content":" * @author marioalvaro","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"marioalvaro"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"marioalvaro"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"marioalvaro"},"content":"     * the type Icon","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"marioalvaro"},"content":"    private static final String TYPE \u003d \"T\";","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"marioalvaro"},"content":"     * constructor for duke.task.Event duke.task","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"marioalvaro"},"content":"     * @param description the text stored","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"marioalvaro"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"marioalvaro"},"content":"        super(description);","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"marioalvaro"},"content":"     * override the toString method","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"marioalvaro"},"content":"     * @return a string","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"marioalvaro"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"marioalvaro"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"marioalvaro"},"content":"        return \"[\" + TYPE + \"]\" + super.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":30,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"marioalvaro"},"content":"     * Method to create string that in match with the storing format.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"marioalvaro"},"content":"     * @return string that in match with the storing format.","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"marioalvaro"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"marioalvaro"},"content":"    public String toDataString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"marioalvaro"},"content":"        return TYPE + \" / \" + super.toDataString();","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"marioalvaro"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"marioalvaro":39}},{"path":"src/main/java/duke/time/Time.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marioalvaro"},"content":"package duke.time;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marioalvaro"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"marioalvaro"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"marioalvaro"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"marioalvaro"},"content":" * A Class that handles time formating","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"marioalvaro"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"marioalvaro"},"content":" * @author marioalvaro","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"marioalvaro"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"marioalvaro"},"content":"public class Time {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"marioalvaro"},"content":"     * Convert string of time into LocalDateTime.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"marioalvaro"},"content":"     * @param timeString the input string","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"marioalvaro"},"content":"     * @return A LocalDateTime representation of the string","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"marioalvaro"},"content":"    public static LocalDateTime toLocalDateTime(String timeString) {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"marioalvaro"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"marioalvaro"},"content":"        LocalDateTime time \u003d LocalDateTime.parse(timeString, formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"marioalvaro"},"content":"        return time;","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"marioalvaro"},"content":"     * Formatted string representation fo the LocalDateTime.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"marioalvaro"},"content":"     * @param time the LocalDateTime object","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"marioalvaro"},"content":"     * @return The String representation","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"marioalvaro"},"content":"    public static String toString(LocalDateTime time) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"marioalvaro"},"content":"        return time.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"marioalvaro"},"content":"     * Formatted string representation of the LocalDateTime to be stored.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"marioalvaro"},"content":"     * @param time the LocalDateTime object","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"marioalvaro"},"content":"     * @return The String representation for storage","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"marioalvaro"},"content":"    public static String toDataString(LocalDateTime time) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"marioalvaro"},"content":"        return time.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"marioalvaro"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"marioalvaro":44}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marioalvaro"},"content":"package duke.ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marioalvaro"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marioalvaro"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"marioalvaro"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"marioalvaro"},"content":" * A Class that handle the User Interaction","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"marioalvaro"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"marioalvaro"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"marioalvaro"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"marioalvaro"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"marioalvaro"},"content":"    private static final String HORIZONTAL_LINE \u003d \"    ____________________________________________________________\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"marioalvaro"},"content":"     * A method that print the message with the line.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"marioalvaro"},"content":"     * @param str the message in string","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"marioalvaro"},"content":"    public void printFinal(String str) {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"marioalvaro"},"content":"        System.out.println(this.HORIZONTAL_LINE + str + this.HORIZONTAL_LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"marioalvaro"},"content":"     * A method that print greeting message","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"marioalvaro"},"content":"     * @return Greeting statement.","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"marioalvaro"},"content":"    public String printGreet() {","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"marioalvaro"},"content":"        printFinal(\"     Hello! I\u0027m Siri\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"marioalvaro"},"content":"                + \"     What can I do for you?\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"marioalvaro"},"content":"        return \"     Hello! I\u0027m Siri\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"marioalvaro"},"content":"                + \"     What can I do for you?\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"marioalvaro"},"content":"     * A method that print goodbye message.","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"marioalvaro"},"content":"     * @return Goodbye message","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"marioalvaro"},"content":"    public String printBye() {","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"marioalvaro"},"content":"        printFinal(\"     Bye. Hope to see you again soon!\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"marioalvaro"},"content":"        return \"     Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"marioalvaro"},"content":"     * Print the message when adding a task.","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"marioalvaro"},"content":"     * @param newTask the newly added task","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"marioalvaro"},"content":"     * @param numberOfTask The number of tasks in the TaskList","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"marioalvaro"},"content":"     * @return Task added statement.","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"marioalvaro"},"content":"    public String printAddTask(Task newTask, int numberOfTask) {","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"marioalvaro"},"content":"        printFinal(\"     Got it. I\u0027ve added this duke.task:\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"marioalvaro"},"content":"                + \"      \" + newTask + \"\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"marioalvaro"},"content":"                + \"     Now you have \" + numberOfTask + \" tasks in the list.\" + \"\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"marioalvaro"},"content":"        return \"     Got it. I\u0027ve added this duke.task:\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"marioalvaro"},"content":"                + \"      \" + newTask + \"\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"marioalvaro"},"content":"                + \"     Now you have \" + numberOfTask + \" tasks in the list.\" + \"\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"marioalvaro"},"content":"     * Print the message when deleting a task.","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"marioalvaro"},"content":"     * @param deletedTask the deleted task","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"marioalvaro"},"content":"     * @param numberOfTask the number of tasks in the TaskList","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"marioalvaro"},"content":"     * @return delete message.","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"marioalvaro"},"content":"    public String printDeleteTask(Task deletedTask, int numberOfTask) {","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"marioalvaro"},"content":"        printFinal(\"     Noted. I\u0027ve removed this duke.task:\" + \"\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"marioalvaro"},"content":"                + \"       \" + deletedTask + \"\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"marioalvaro"},"content":"                + \"     Now you have \" + numberOfTask + \" tasks in the list.\" + \"\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"marioalvaro"},"content":"        return \"     Noted. I\u0027ve removed this duke.task:\" + \"\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"marioalvaro"},"content":"                + \"       \" + deletedTask + \"\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"marioalvaro"},"content":"                + \"     Now you have \" + numberOfTask + \" tasks in the list.\" + \"\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"marioalvaro"},"content":"     * Print all the task in the taskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"marioalvaro"},"content":"     * @param taskList the taskList that going to be printed.","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"marioalvaro"},"content":"     * @return all the task in the taskList.","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"marioalvaro"},"content":"    public String printTaskList(TaskList taskList) {","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"marioalvaro"},"content":"        String items \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"marioalvaro"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"marioalvaro"},"content":"            if (taskList.get(i) \u003d\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"marioalvaro"},"content":"                break;","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"marioalvaro"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"marioalvaro"},"content":"            items +\u003d \"     \" + (i + 1) + \".\" + taskList.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"marioalvaro"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"marioalvaro"},"content":"        printFinal(\"     Here are the tasks in your list:\\n\" + items);","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"marioalvaro"},"content":"        return \"     Here are the tasks in your list:\\n\" + items;","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"marioalvaro"},"content":"     * Print the message when marking a task.","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"marioalvaro"},"content":"     * @param task The marked task.","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"marioalvaro"},"content":"     * @return Marked task message.","lastModifiedDate":"2023-09-06"},{"lineNumber":103,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"marioalvaro"},"content":"    public String printMark(Task task) {","lastModifiedDate":"2023-09-06"},{"lineNumber":105,"author":{"gitId":"marioalvaro"},"content":"        printFinal(\"     Nice! I\u0027ve marked this duke.task as done:\" + \"\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"marioalvaro"},"content":"                + \"       \" + task + \"\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"marioalvaro"},"content":"        return \"     Nice! I\u0027ve marked this duke.task as done:\" + \"\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":109,"author":{"gitId":"marioalvaro"},"content":"                + \"       \" + task + \"\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":110,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"marioalvaro"},"content":"     * Print the message when unmarking a task.","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"marioalvaro"},"content":"     * @param task the unmark task","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"marioalvaro"},"content":"     * @return unmarked task message.","lastModifiedDate":"2023-09-06"},{"lineNumber":117,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"marioalvaro"},"content":"    public String printUnmark(Task task) {","lastModifiedDate":"2023-09-06"},{"lineNumber":119,"author":{"gitId":"marioalvaro"},"content":"        printFinal(\"     OK, I\u0027ve marked this duke.task as not done yet:\" + \"\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"marioalvaro"},"content":"                + \"       \" + task + \"\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":122,"author":{"gitId":"marioalvaro"},"content":"        return \"     OK, I\u0027ve marked this duke.task as not done yet:\" + \"\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":123,"author":{"gitId":"marioalvaro"},"content":"                + \"       \" + task + \"\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":124,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"marioalvaro"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"marioalvaro"},"content":"     * Print the error for DukeException","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"marioalvaro"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"marioalvaro"},"content":"     * @param e the error message.","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"marioalvaro"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"marioalvaro"},"content":"    public void printError(String e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"marioalvaro"},"content":"        printFinal(\"       \" + e + \"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"marioalvaro"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"marioalvaro":135}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"marioalvaro"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"marioalvaro"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"marioalvaro"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"marioalvaro"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"marioalvaro"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"marioalvaro"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"marioalvaro"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"600.0\" style\u003d\"-fx-background-color: e6f2f2;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"marioalvaro"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"marioalvaro"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" textFill\u003d\"#015753\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"marioalvaro"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"marioalvaro"},"content":"            \u003cFont name\u003d\"Tahoma\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"marioalvaro"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"marioalvaro"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"marioalvaro"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"marioalvaro"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"marioalvaro"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"marioalvaro"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"marioalvaro"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"marioalvaro":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"marioalvaro"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"marioalvaro"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"marioalvaro"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"marioalvaro"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"marioalvaro"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"marioalvaro"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"marioalvaro"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"marioalvaro"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"marioalvaro"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"524.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"marioalvaro"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"524.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"marioalvaro"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"600.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"marioalvaro"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"marioalvaro"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"588.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"marioalvaro"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"marioalvaro"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"marioalvaro"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"marioalvaro"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"marioalvaro":19}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marioalvaro"},"content":"package duke.parser;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marioalvaro"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"marioalvaro"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marioalvaro"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"marioalvaro"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"marioalvaro"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"marioalvaro"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"marioalvaro"},"content":"    public void unknownCommand_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"marioalvaro"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"marioalvaro"},"content":"            Command c \u003d Parser.parse(\"asdfghjkl\");","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"marioalvaro"},"content":"            fail();","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"marioalvaro"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"marioalvaro"},"content":"            assertEquals(\"    ____________________________________________________________\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"marioalvaro"},"content":"                    + \"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"marioalvaro"},"content":"                    + \"    ____________________________________________________________\\n\",","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"marioalvaro"},"content":"                    e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"marioalvaro"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"marioalvaro"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"marioalvaro"},"content":"    public void wrongIndex_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"marioalvaro"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"marioalvaro"},"content":"            Command c \u003d Parser.parse(\"mark r\");","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"marioalvaro"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"marioalvaro"},"content":"            assertEquals(\"    ____________________________________________________________\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"marioalvaro"},"content":"                    + \"     ☹ OOPS!!! The index for marking is invalid.\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"marioalvaro"},"content":"                    + \"    ____________________________________________________________\\n\",","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"marioalvaro"},"content":"                    e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"marioalvaro"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"marioalvaro"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"marioalvaro":36}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marioalvaro"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"marioalvaro"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"marioalvaro"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"marioalvaro"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"marioalvaro"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"marioalvaro"},"content":"public class EventTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"marioalvaro"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"marioalvaro"},"content":"    public void toString_validDate_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"marioalvaro"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"marioalvaro"},"content":"            Task event \u003d new Event(\"Supernova\", \"2024-04-05 1900\", \"2024-04-05 2200\");","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"marioalvaro"},"content":"            assertEquals(\"[E][ ] Supernova (from: Apr 05 2024 19:00 to: Apr 05 2024 22:00)\",","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"marioalvaro"},"content":"                    event.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"marioalvaro"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"marioalvaro"},"content":"            fail();","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"marioalvaro"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"marioalvaro"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"marioalvaro"},"content":"    public void toDataString_validFormat_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"marioalvaro"},"content":"        Task event \u003d new Event(\"Supernova\", \"2024-04-05 1900\", \"2024-04-05 2200\");","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"marioalvaro"},"content":"        assertEquals(\"E / 0 / Supernova / 2024-04-05 1900 / 2024-04-05 2200\", event.toDataString());","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"marioalvaro"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"marioalvaro"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"marioalvaro"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"marioalvaro":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"marioalvaro"},"content":"todo borrow book","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"marioalvaro"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"marioalvaro"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"marioalvaro"},"content":"mark 1","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"marioalvaro"},"content":"unmark 1","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"marioalvaro":5}}]
