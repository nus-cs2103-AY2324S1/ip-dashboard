[{"path":"Testing.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"  [T][ ]  poo","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"  [D][ ]  shit (by:12)","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"  [E][ ]  (from: 1 to: 2)","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"  [D][ ] shit (by:Oct 10 2019)","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"  [E][ ] poo (from: Oct 10 2019 to: Oct 10 2020)","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"LinWanLeii":5}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"    private String deadline;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"    private LocalDate deadDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"    public Deadline(String name, String deadline) {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":"        this.type \u003d \"D\";","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"    public Deadline(String name, LocalDate deadDate) {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"        super(name);","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"        this.type \u003d \"D\";","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"        this.deadDate \u003d deadDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"        return super.toString() + \"(by: \" + (deadline.isEmpty() ? deadDate : deadline) +\")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"LinWanLeii":22}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"    private ArrayList\u003cTask\u003e userList;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":"    private FileStorage fileStorage;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":"        this.fileStorage \u003d new FileStorage(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"            //System.out.println(\"here\");","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"            this.userList \u003d fileStorage.read();","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"            //System.out.println(\"new userlist\");","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"            this.userList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"            System.out.println(\"File Empty\");","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"        System.out.println(\"\\n \\n\" + \"Please Input the txt file you wish to access\");","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"        String textFile \u003d scanner.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"        new Duke(textFile).run();","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"   }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"LinWanLeii"},"content":"   public void run() {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"LinWanLeii"},"content":"       //System.out.print(fileStorage.getFile().exists());","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"LinWanLeii"},"content":"       //System.out.print(userList.size());","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"LinWanLeii"},"content":"       final String UNKNOWN_COMMAND \u003d \"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"LinWanLeii"},"content":"       final String NAME \u003d \"CathyTheChattyCat\";","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"LinWanLeii"},"content":"       String lineBreak \u003d \"\\n_________________________________________\\n\";","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"LinWanLeii"},"content":"       System.out.println(lineBreak + \"Hello! I\u0027m \" + NAME);","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"LinWanLeii"},"content":"       System.out.printf(\"What can I do for you?\" + lineBreak);","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"LinWanLeii"},"content":"       String message;","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"LinWanLeii"},"content":"       //ArrayList\u003cTask\u003e userList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"LinWanLeii"},"content":"       Scanner userInput \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"LinWanLeii"},"content":"       message \u003d userInput.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"LinWanLeii"},"content":"       while (!message.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"LinWanLeii"},"content":"           Task task \u003d new Task(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"LinWanLeii"},"content":"           // Listing things out","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"LinWanLeii"},"content":"           if (message.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"LinWanLeii"},"content":"               System.out.println(lineBreak);","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"LinWanLeii"},"content":"               System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"LinWanLeii"},"content":"               for (int i \u003d 0; i \u003c userList.size(); i++) {","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"LinWanLeii"},"content":"                   int index \u003d i + 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"LinWanLeii"},"content":"                   System.out.println(index + \". \" + userList.get(i));","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"LinWanLeii"},"content":"               }","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"LinWanLeii"},"content":"               System.out.println(lineBreak);","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"LinWanLeii"},"content":"               task.notTask();","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"LinWanLeii"},"content":"               task.isValid();","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"LinWanLeii"},"content":"           }","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"LinWanLeii"},"content":"           //marking tasks","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"LinWanLeii"},"content":"           if (message.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"LinWanLeii"},"content":"               int taskIndex \u003d Integer.parseInt(message.substring(5)) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"LinWanLeii"},"content":"               if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c userList.size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"LinWanLeii"},"content":"                   userList.get(taskIndex).markDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"LinWanLeii"},"content":"                   System.out.println(lineBreak + \"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"LinWanLeii"},"content":"                   System.out.println(\"  \" + userList.get(taskIndex) + lineBreak);","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"LinWanLeii"},"content":"               } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"LinWanLeii"},"content":"                   System.out.println(lineBreak + \"Invalid Task Number\" + lineBreak);","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"LinWanLeii"},"content":"               }","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"LinWanLeii"},"content":"               task.notTask();","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"LinWanLeii"},"content":"               task.isValid();","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"LinWanLeii"},"content":"               //userList.remove(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"LinWanLeii"},"content":"           }","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"LinWanLeii"},"content":"           //un marking task","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"LinWanLeii"},"content":"           if (message.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"LinWanLeii"},"content":"               int taskIndex \u003d Integer.parseInt(message.substring(7)) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"LinWanLeii"},"content":"               if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c userList.size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"LinWanLeii"},"content":"                   userList.get(taskIndex).unmarkDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"LinWanLeii"},"content":"                   System.out.println(lineBreak + \"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"LinWanLeii"},"content":"                   System.out.println(\"  \" + userList.get(taskIndex) + lineBreak);","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"LinWanLeii"},"content":"               } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"LinWanLeii"},"content":"                   System.out.println(lineBreak + \"Invalid Task Number\" + lineBreak);","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"LinWanLeii"},"content":"               }","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"LinWanLeii"},"content":"               task.notTask();","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"LinWanLeii"},"content":"               task.isValid();","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"LinWanLeii"},"content":"               //userList.remove(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"LinWanLeii"},"content":"           }","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"LinWanLeii"},"content":"           //deleting task","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"LinWanLeii"},"content":"           if (message.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"LinWanLeii"},"content":"               int taskIndex \u003d Integer.parseInt(message.substring(7)) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"LinWanLeii"},"content":"               if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c userList.size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"LinWanLeii"},"content":"                   Task removing \u003d userList.get(taskIndex);","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"LinWanLeii"},"content":"                   System.out.println(lineBreak + \"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"LinWanLeii"},"content":"                   System.out.println(\"  \" + removing);","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"LinWanLeii"},"content":"                   userList.remove(removing);","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"LinWanLeii"},"content":"                   System.out.println(\"Now you have \" + userList.size() + \" tasks in the list\" + lineBreak);","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"LinWanLeii"},"content":"               } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"LinWanLeii"},"content":"                   System.out.println(lineBreak + \"Invalid Task Number\" + lineBreak);","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"LinWanLeii"},"content":"               }","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"LinWanLeii"},"content":"               task.notTask();","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"LinWanLeii"},"content":"               task.isValid();","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"LinWanLeii"},"content":"           }","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"LinWanLeii"},"content":"           // it is a task then","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"LinWanLeii"},"content":"           try {","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"LinWanLeii"},"content":"               if (message.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"LinWanLeii"},"content":"                   String info \u003d message.substring(5);","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"LinWanLeii"},"content":"                   if (info.isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"LinWanLeii"},"content":"                       task.hasError();","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"LinWanLeii"},"content":"                       throw new DukeException(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"LinWanLeii"},"content":"                   }","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"LinWanLeii"},"content":"                   task \u003d new Todo(info);","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"LinWanLeii"},"content":"                   task.isValid();","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"LinWanLeii"},"content":"               }","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"LinWanLeii"},"content":"               if (message.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"LinWanLeii"},"content":"                   String info \u003d message.substring(9);","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"LinWanLeii"},"content":"                   String[] split \u003d info.split(\"/by \");","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"LinWanLeii"},"content":"                   if (split.length !\u003d 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"LinWanLeii"},"content":"                       task.hasError();","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"LinWanLeii"},"content":"                       throw new DukeException(\"â˜¹ OOPS!!! The description of a deadline is invalid.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"LinWanLeii"},"content":"                   }","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"LinWanLeii"},"content":"                   try {","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"LinWanLeii"},"content":"                       String deadDate \u003d LocalDate.parse(split[1]).format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"LinWanLeii"},"content":"                       task \u003d new Deadline(split[0], deadDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"LinWanLeii"},"content":"                       task.isValid();","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"LinWanLeii"},"content":"                   } catch (DateTimeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"LinWanLeii"},"content":"                       throw new DukeException(\"â˜¹ OOPS!!! The description of a time must be in yyyy-mm-dd\");","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"LinWanLeii"},"content":"                   }","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"LinWanLeii"},"content":"               }","lastModifiedDate":"2023-08-24"},{"lineNumber":126,"author":{"gitId":"LinWanLeii"},"content":"               if (message.startsWith(\"event\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":127,"author":{"gitId":"LinWanLeii"},"content":"                   String info \u003d message.substring(6);","lastModifiedDate":"2023-08-24"},{"lineNumber":128,"author":{"gitId":"LinWanLeii"},"content":"                   String[] split \u003d info.split(\"/from | /to \");","lastModifiedDate":"2023-08-24"},{"lineNumber":129,"author":{"gitId":"LinWanLeii"},"content":"                   if (split.length !\u003d 3) {","lastModifiedDate":"2023-08-24"},{"lineNumber":130,"author":{"gitId":"LinWanLeii"},"content":"                       task.hasError();","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"LinWanLeii"},"content":"                       throw new DukeException(\"â˜¹ OOPS!!! The description of a event is invalid.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":132,"author":{"gitId":"LinWanLeii"},"content":"                   }","lastModifiedDate":"2023-08-24"},{"lineNumber":133,"author":{"gitId":"LinWanLeii"},"content":"                   try {","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"LinWanLeii"},"content":"                       String startDate \u003d LocalDate.parse(split[1]).format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"LinWanLeii"},"content":"                       String endDate \u003d LocalDate.parse(split[2]).format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"LinWanLeii"},"content":"                       task \u003d new Event(split[0], startDate, endDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"LinWanLeii"},"content":"                       task.isValid();","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"LinWanLeii"},"content":"                   } catch (DateTimeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"LinWanLeii"},"content":"                       throw new DukeException(\"â˜¹ OOPS!!! The description of a time must be in yyyy-mm-dd\");","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"LinWanLeii"},"content":"                   }","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"LinWanLeii"},"content":"               }","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"LinWanLeii"},"content":"           } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"LinWanLeii"},"content":"               System.out.printf(lineBreak + e.getMessage() + lineBreak);","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"LinWanLeii"},"content":"           }","lastModifiedDate":"2023-08-24"},{"lineNumber":145,"author":{"gitId":"LinWanLeii"},"content":"           if (!task.isItValid()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"LinWanLeii"},"content":"               System.out.println(lineBreak + UNKNOWN_COMMAND + lineBreak);","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"LinWanLeii"},"content":"           }","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"LinWanLeii"},"content":"           if (!task.isItErrored() \u0026\u0026 task.isItTask() \u0026\u0026 task.isItValid()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"LinWanLeii"},"content":"               System.out.println(lineBreak + \"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":150,"author":{"gitId":"LinWanLeii"},"content":"               userList.add(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":151,"author":{"gitId":"LinWanLeii"},"content":"               int size \u003d userList.size();","lastModifiedDate":"2023-08-24"},{"lineNumber":152,"author":{"gitId":"LinWanLeii"},"content":"               System.out.println(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":153,"author":{"gitId":"LinWanLeii"},"content":"               System.out.println(\"Now you have \" + size + \" tasks in the list.\" + lineBreak);","lastModifiedDate":"2023-08-24"},{"lineNumber":154,"author":{"gitId":"LinWanLeii"},"content":"           }","lastModifiedDate":"2023-08-24"},{"lineNumber":155,"author":{"gitId":"LinWanLeii"},"content":"           message \u003d userInput.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"LinWanLeii"},"content":"       }","lastModifiedDate":"2023-08-24"},{"lineNumber":157,"author":{"gitId":"LinWanLeii"},"content":"       System.out.print(lineBreak + \"Bye. Hope to see you again soon!\" + lineBreak);","lastModifiedDate":"2023-08-24"},{"lineNumber":158,"author":{"gitId":"LinWanLeii"},"content":"       try {","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"LinWanLeii"},"content":"           fileStorage.write(userList);","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"LinWanLeii"},"content":"       } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"LinWanLeii"},"content":"           System.out.println(\"Duke Writing Error\");;","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"LinWanLeii"},"content":"       }","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"LinWanLeii"},"content":"       userInput.close();","lastModifiedDate":"2023-08-24"},{"lineNumber":164,"author":{"gitId":"LinWanLeii"},"content":"   }","lastModifiedDate":"2023-08-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":166,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"LinWanLeii":162,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"LinWanLeii":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"public class Event extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"    private String start;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"    private LocalDate startDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"    private String end;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"    private LocalDate endDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":"    public Event(String name, String start, String end) {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"        this.type \u003d \"E\";","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"    public Event(String name, LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"        super(name);","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"        this.type \u003d \"E\";","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"        return super.toString() + \"(from: \" + (start.isEmpty() ? startDate : start)","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"                + \" to: \" + (end.isEmpty() ? endDate : end) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"LinWanLeii":27}},{"path":"src/main/java/FileStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"public class FileStorage {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":"    private File fileData;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":"    public FileStorage(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"        this.fileData \u003d new File(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"    public File getFile() {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"        return fileData;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"    public void write(ArrayList\u003cTask\u003e userList) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"            FileWriter fw \u003d new FileWriter(this.fileData);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"            for (int i \u003d 0; i \u003c userList.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"                fw.write(userList.get(i).toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"                fw.write(\"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"            fw.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"LinWanLeii"},"content":"            throw new DukeException(\"Writing Error\");","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"LinWanLeii"},"content":"    public ArrayList\u003cTask\u003e read() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"LinWanLeii"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"LinWanLeii"},"content":"            ArrayList\u003cTask\u003e dataList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"LinWanLeii"},"content":"            Scanner scanner \u003d new Scanner(this.fileData);","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"LinWanLeii"},"content":"            Task task;","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"LinWanLeii"},"content":"            int count \u003d 0;","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"LinWanLeii"},"content":"            //System.out.println(\"reading\");","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"LinWanLeii"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"LinWanLeii"},"content":"                count++;","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"LinWanLeii"},"content":"                String inputs \u003d scanner.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"LinWanLeii"},"content":"                if (inputs.startsWith(\"  [T]\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"LinWanLeii"},"content":"                    String info \u003d inputs.substring(8);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"LinWanLeii"},"content":"                    task \u003d new Todo(info);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"LinWanLeii"},"content":"                    if (inputs.substring(6).startsWith(\"X\")) task.markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"LinWanLeii"},"content":"                    dataList.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"LinWanLeii"},"content":"                } else if (inputs.startsWith(\"  [D]\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"LinWanLeii"},"content":"                    String info \u003d inputs.substring(8);","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"LinWanLeii"},"content":"                    String[] split \u003d info.split(\"\\\\(by: |\\\\)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"LinWanLeii"},"content":"                    task \u003d new Deadline(split[0], split[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"LinWanLeii"},"content":"                    if (inputs.substring(6).startsWith(\"X\")) task.markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"LinWanLeii"},"content":"                    dataList.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"LinWanLeii"},"content":"                } else if (inputs.startsWith(\"  [E]\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"LinWanLeii"},"content":"                    String info \u003d inputs.substring(8);","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"LinWanLeii"},"content":"                    String[] split \u003d info.split(\"\\\\(from: | to: |\\\\)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"LinWanLeii"},"content":"                    task \u003d new Event(split[0], split[1], split[2]);","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"LinWanLeii"},"content":"                    if (inputs.substring(6).startsWith(\"X\")) task.markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"LinWanLeii"},"content":"                    dataList.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"LinWanLeii"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"LinWanLeii"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"LinWanLeii"},"content":"            scanner.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"LinWanLeii"},"content":"            //System.out.println(count);","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"LinWanLeii"},"content":"            return dataList;","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"LinWanLeii"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"LinWanLeii"},"content":"            throw new DukeException(\"Invalid file\");","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"LinWanLeii":68}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"    private String name;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"    private boolean marked;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"    private boolean hasError;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"    private boolean isTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"    private boolean isItValid;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"    public String type;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":"        this.marked \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":"        this.hasError \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":"        this.isTask \u003d true;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"        this.isItValid \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"        marked \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"    public void unmarkDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"        marked \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"    public boolean isMarked() {","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"        return marked;","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"    public void hasError() { hasError \u003d true; }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"    public boolean isItErrored() { return hasError; }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"    public void notTask() { isTask \u003d false; }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"LinWanLeii"},"content":"    public boolean isItTask() { return isTask; }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"LinWanLeii"},"content":"    public void isValid() { isItValid \u003d true; }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"LinWanLeii"},"content":"    public boolean isItValid() { return isItValid; }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"LinWanLeii"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"LinWanLeii"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"LinWanLeii"},"content":"        String s \u003d \"  [\" + type + \"]\" + \"[\" + (marked ? \"X\" : \" \") + \"] \" + name;","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"LinWanLeii"},"content":"        return s;","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"LinWanLeii":36}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"    public Todo(String name) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"        this.type \u003d \"T\";","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"//    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"//    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"//        return super.toString() + ;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"//    }","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"LinWanLeii":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"T | 0 | read book","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"T | 1 | join sports club","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"LinWanLeii":2}}]
