[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"# duke.Duke project template","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"LinWanLeii":2,"-":22}},{"path":"Testing.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"  [T][X] 1","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"  [T][X] 2","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"  [T][ ] 3","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"  [T][X] 4","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"  [T][ ] 5","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"  [T][ ] 6","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"LinWanLeii":6}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":"javafx {","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"    version \u003d \u002717.0.2\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"    modules \u003d [\u0027javafx.controls\u0027, \u0027javafx.fxml\u0027]","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"LinWanLeii"},"content":"    mainClass.set(\"main.duke.Main\")","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"LinWanLeii"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"LinWanLeii":9,"-":41}},{"path":"src/main/java/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"package command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"import filestorage.FileStorage;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"import list.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":" * The class that will execute the Bye command.","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":" * This class extends from the Command class.","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"     * Executes the Command of ending the Chat bot.","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"     * @param taskList The TaskLIst that contains all the tasks.","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"     * @param ui The user interface that will be shown to the user.","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"     * @param fileStorage The File that will be written and read from.","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"    public String execute(TaskList taskList, Ui ui, FileStorage fileStorage) {","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"        return ui.showGoodbye();","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"LinWanLeii":26}},{"path":"src/main/java/command/ClearCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"package command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"import filestorage.FileStorage;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"import list.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":" * The class that will execute the Clear command.","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":" * This class extends from the Command class.","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"     * Executes the Command of clearing all the task in the TaskList.","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"     * @param taskList The TaskLIst that contains all the tasks.","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"     * @param ui The user interface that will be shown to the user.","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"     * @param fileStorage The File that will be written and read from.","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"     * @throws DukeException If user inputs is invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"    public String execute(TaskList taskList, Ui ui, FileStorage fileStorage) throws DukeException {","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"        fileStorage.write(taskList.clear());","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"        return ui.showClearTask();","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"LinWanLeii":27}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"package command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"import filestorage.FileStorage;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"import list.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":" * An Abstract class that represents the action that will be done by the different command input","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":" * by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"    protected boolean isExit \u003d false;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"     * Returns whether the program should stop running as the end point \"bye\" is hit.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"     * @return A boolean value shows whether the program should be completed and exited.","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"        return isExit;","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"     *  Executes an abstract method that will execute the task provided depending on the user input.","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"LinWanLeii"},"content":"     * @param taskList The TaskLIst that contains all the tasks.","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"LinWanLeii"},"content":"     * @param ui The user interface that will be shown to the user.","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"LinWanLeii"},"content":"     * @param fileStorage The File that will be written and read from.","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"LinWanLeii"},"content":"     * @throws DukeException If user inputs is invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"LinWanLeii"},"content":"    public abstract String execute(TaskList taskList, Ui ui, FileStorage fileStorage) throws DukeException;","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"LinWanLeii":34}},{"path":"src/main/java/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"package command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"import filestorage.FileStorage;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"import list.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":" * The class that will execute the Deadline Task command.","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":" * This class extends from the Command class.","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"    private final String task;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"    private final String deadDate;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"     * Constructs the class.","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"     * @param task The task that is input by the user.","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"     * @param deadDate The deadline of the task.","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"    public DeadlineCommand(String task, String deadDate) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"        this.deadDate \u003d deadDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"LinWanLeii"},"content":"     * Executes the Command of creating a deadline task.","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"LinWanLeii"},"content":"     * @param taskList The TaskLIst that contains all the tasks.","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"LinWanLeii"},"content":"     * @param ui The user interface that will be shown to the user.","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"LinWanLeii"},"content":"     * @param fileStorage The File that will be written and read from.","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"LinWanLeii"},"content":"     * @throws DukeException If user inputs is invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"LinWanLeii"},"content":"    public String execute(TaskList taskList, Ui ui, FileStorage fileStorage) throws DukeException {","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"LinWanLeii"},"content":"        Deadline task \u003d new Deadline(this.task, this.deadDate);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"LinWanLeii"},"content":"        taskList.add(task);","lastModifiedDate":"2023-09-16"},{"lineNumber":39,"author":{"gitId":"LinWanLeii"},"content":"        fileStorage.write(taskList);","lastModifiedDate":"2023-09-16"},{"lineNumber":40,"author":{"gitId":"LinWanLeii"},"content":"        return ui.showTaskAdded(task, taskList);","lastModifiedDate":"2023-09-16"},{"lineNumber":41,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"LinWanLeii":42}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"package command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"import filestorage.FileStorage;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"import list.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":" * The class that will execute the Delete Task command.","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":" * This class extends from the Command class.","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"    private final int index;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"     * Constructs the class.","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"     * @param index The index used to determine the class.","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"     * Executes the Command of deleting a task from the TaskList.","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"LinWanLeii"},"content":"     * @param taskList The TaskLIst that contains all the tasks.","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"LinWanLeii"},"content":"     * @param ui The user interface that will be shown to the user.","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"LinWanLeii"},"content":"     * @param fileStorage The File that will be written and read from.","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"LinWanLeii"},"content":"     * @throws DukeException If user inputs is invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"LinWanLeii"},"content":"    public String execute(TaskList taskList, Ui ui, FileStorage fileStorage) throws DukeException {","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"LinWanLeii"},"content":"        Task task \u003d taskList.deleteTask(this.index);","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"LinWanLeii"},"content":"        fileStorage.write(taskList);","lastModifiedDate":"2023-09-16"},{"lineNumber":36,"author":{"gitId":"LinWanLeii"},"content":"        return ui.showDeleteTask(task, taskList);","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"LinWanLeii":38}},{"path":"src/main/java/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"package command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"import filestorage.FileStorage;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"import list.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"import tasks.Event;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":" * The class that will execute the Event Task command.","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":" * This class extends from the Command class.","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"    private final String task;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"    private final String startDate;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"    private final String endDate;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"     * Constructs the class.","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"     * @param task The task the user wants to do.","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"     * @param startDate The starting date.","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"     * @param endDate The ending date.","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"    public EventCommand(String task, String startDate, String endDate) {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"LinWanLeii"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"LinWanLeii"},"content":"     * Executes the Command of creating an event Task.","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"LinWanLeii"},"content":"     * @param taskList The TaskLIst that contains all the tasks.","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"LinWanLeii"},"content":"     * @param ui The user interface that will be shown to the user.","lastModifiedDate":"2023-09-16"},{"lineNumber":36,"author":{"gitId":"LinWanLeii"},"content":"     * @param fileStorage The File that will be written and read from.","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"LinWanLeii"},"content":"     * @throws DukeException If user inputs is invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"LinWanLeii"},"content":"    public String execute(TaskList taskList, Ui ui, FileStorage fileStorage) throws DukeException {","lastModifiedDate":"2023-09-16"},{"lineNumber":40,"author":{"gitId":"LinWanLeii"},"content":"        Event task \u003d new Event(this.task, this.startDate, this.endDate);","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"LinWanLeii"},"content":"        taskList.add(task);","lastModifiedDate":"2023-09-16"},{"lineNumber":42,"author":{"gitId":"LinWanLeii"},"content":"        fileStorage.write(taskList);","lastModifiedDate":"2023-09-16"},{"lineNumber":43,"author":{"gitId":"LinWanLeii"},"content":"        return ui.showTaskAdded(task, taskList);","lastModifiedDate":"2023-09-16"},{"lineNumber":44,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"LinWanLeii":45}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"package command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"import filestorage.FileStorage;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"import list.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":" * The class that will execute the Find similar word in Tasks command.","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":" * This class extends from the Command class.","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"    private final String word;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"     * Constructs the class.","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"     * @param word The word used to find similarity in classes.","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"    public FindCommand(String word) {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"        this.word \u003d word;","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"     * Executes the Command of finding task that has the similar words.","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"     * @param taskList The TaskLIst that contains all the tasks.","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"LinWanLeii"},"content":"     * @param ui The user interface that will be shown to the user.","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"LinWanLeii"},"content":"     * @param fileStorage The File that will be written and read from.","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"LinWanLeii"},"content":"     * @throws DukeException If user inputs is invalid.","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"LinWanLeii"},"content":"    public String execute(TaskList taskList, Ui ui, FileStorage fileStorage) throws DukeException {","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"LinWanLeii"},"content":"        TaskList newList \u003d new TaskList();","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"LinWanLeii"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"LinWanLeii"},"content":"            if (taskList.get(i).toString().contains(word)) {","lastModifiedDate":"2023-09-16"},{"lineNumber":36,"author":{"gitId":"LinWanLeii"},"content":"                newList.add(taskList.get(i));","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"LinWanLeii"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"LinWanLeii"},"content":"        return ui.showFoundResults(newList);","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"LinWanLeii":41}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"package command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"import filestorage.FileStorage;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"import list.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":" * The class that will execute the List Task command.","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":" * This class extends from the Command class.","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"     * Executes the Command of Listing all the task in the TaskList.","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"     * @param taskList The TaskLIst that contains all the tasks.","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"     * @param ui The user interface that will be shown to the user.","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"     * @param fileStorage The File that will be written and read from.","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"    public String execute(TaskList taskList, Ui ui, FileStorage fileStorage) {","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"        return ui.showList(taskList);","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"LinWanLeii":24}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"package command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"import filestorage.FileStorage;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"import list.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":" * The class that will execute the Mark Task command.","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":" * This class extends from the Command class.","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"    private final int index;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"     * Constructs the class.","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"     * @param index The index that will be marked.","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"LinWanLeii"},"content":"     * Executes the Command of Marking a task as done.","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"LinWanLeii"},"content":"     * @param taskList The TaskLIst that contains all the tasks.","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"LinWanLeii"},"content":"     * @param ui The user interface that will be shown to the user.","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"LinWanLeii"},"content":"     * @param fileStorage The File that will be written and read from.","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"LinWanLeii"},"content":"     * @throws DukeException If user inputs is invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"LinWanLeii"},"content":"    public String execute(TaskList taskList, Ui ui, FileStorage fileStorage) throws DukeException {","lastModifiedDate":"2023-09-16"},{"lineNumber":36,"author":{"gitId":"LinWanLeii"},"content":"        Task task \u003d taskList.markTask(this.index);","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"LinWanLeii"},"content":"        fileStorage.write(taskList);","lastModifiedDate":"2023-09-16"},{"lineNumber":38,"author":{"gitId":"LinWanLeii"},"content":"        return ui.showMarkedTask(task);","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"LinWanLeii":40}},{"path":"src/main/java/command/MultipleCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"package command;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"import filestorage.FileStorage;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"import list.TaskList;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":" * The class that will execute the Delete multipleTask command.","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":" * This class extends from the Command class.","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"public class MultipleCommand extends Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"    private final String indexes;","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"    private final String commandType;","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"     * Constructs the class.","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"     * @param indexes The index used to determine the class.","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"    public MultipleCommand(String indexes, String commandType) {","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"        this.indexes \u003d indexes;","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"LinWanLeii"},"content":"     * Executes the Command of deleting multiple task from the TaskList.","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"LinWanLeii"},"content":"     * @param taskList The TaskLIst that contains all the tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"LinWanLeii"},"content":"     * @param ui The user interface that will be shown to the user.","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"LinWanLeii"},"content":"     * @param fileStorage The File that will be written and read from.","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"LinWanLeii"},"content":"     * @throws DukeException If user inputs is invalid.","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"LinWanLeii"},"content":"    public String execute(TaskList taskList, Ui ui, FileStorage fileStorage) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"LinWanLeii"},"content":"        Result result \u003d getResult();","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"LinWanLeii"},"content":"        int[] reversedValues \u003d result.reversedValues;","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"LinWanLeii"},"content":"        for (int i \u003d 0; i \u003c reversedValues.length; i++) {","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"LinWanLeii"},"content":"            for (int j \u003d i + 1; j \u003c reversedValues.length; j++) {","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"LinWanLeii"},"content":"                if (reversedValues[i] \u003d\u003d reversedValues[j]) {","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"LinWanLeii"},"content":"                    throw new DukeException(\"Oh no, do not repeat the indexes\");","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"LinWanLeii"},"content":"                }","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"LinWanLeii"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"LinWanLeii"},"content":"        if (commandType.equals(\"del\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"LinWanLeii"},"content":"            for (int reversedValue : reversedValues) {","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"LinWanLeii"},"content":"                Task task \u003d taskList.deleteTask(reversedValue - 1);","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"LinWanLeii"},"content":"                result.newList.add(task);","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"LinWanLeii"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"LinWanLeii"},"content":"        if (commandType.equals(\"mark\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"LinWanLeii"},"content":"            for (int reversedValue : reversedValues) {","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"LinWanLeii"},"content":"                Task task \u003d taskList.markTask(reversedValue);","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"LinWanLeii"},"content":"                result.newList.add(task);","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"LinWanLeii"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"LinWanLeii"},"content":"        if (commandType.equals(\"unmark\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"LinWanLeii"},"content":"            for (int reversedValue : reversedValues) {","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"LinWanLeii"},"content":"                Task task \u003d taskList.unmarkTask(reversedValue);","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"LinWanLeii"},"content":"                result.newList.add(task);","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"LinWanLeii"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"LinWanLeii"},"content":"        fileStorage.write(taskList);","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"LinWanLeii"},"content":"        return ui.showNewList(result.newList, taskList, commandType);","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"LinWanLeii"},"content":"     * Reverses the array of indexes.","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"LinWanLeii"},"content":"     * @return A result class that contains the reversed list.","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"LinWanLeii"},"content":"    private Result getResult() {","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"LinWanLeii"},"content":"        String[] individual \u003d indexes.split(\",\");","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"LinWanLeii"},"content":"        for (int i \u003d 0; i \u003c individual.length; i++) {","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"LinWanLeii"},"content":"            String trimmed \u003d individual[i].trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"LinWanLeii"},"content":"            individual[i] \u003d trimmed;","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"LinWanLeii"},"content":"        TaskList newList \u003d new TaskList();","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"LinWanLeii"},"content":"        int[] values \u003d Stream.of(individual)","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"LinWanLeii"},"content":"                .mapToInt(Integer::parseInt)","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"LinWanLeii"},"content":"                .sorted()","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"LinWanLeii"},"content":"                .toArray();","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"LinWanLeii"},"content":"        int size \u003d values.length;","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"LinWanLeii"},"content":"        int[] reversedValues \u003d new int[size];","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"LinWanLeii"},"content":"        for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"LinWanLeii"},"content":"            reversedValues[i] \u003d values[size - 1 - i];","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"LinWanLeii"},"content":"        return new Result(newList, reversedValues);","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"LinWanLeii"},"content":"     * Helper class to reverse the array such that the deletion could be done.","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"LinWanLeii"},"content":"    private static class Result {","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"LinWanLeii"},"content":"        public final TaskList newList;","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"LinWanLeii"},"content":"        public final int[] reversedValues;","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"LinWanLeii"},"content":"        public Result(TaskList newList, int[] reversedValues) {","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"LinWanLeii"},"content":"            this.newList \u003d newList;","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"LinWanLeii"},"content":"            this.reversedValues \u003d reversedValues;","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":105,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":106,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"LinWanLeii":106}},{"path":"src/main/java/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"package command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"import filestorage.FileStorage;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"import list.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"import tasks.Todo;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":" * The class that will execute the Todo Task command.","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":" * This class extends from the Command class.","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"    private final String task;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"     * Constructs the class.","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"     * @param task The information of the task.","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"    public TodoCommand(String task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"     * Executes the Command of creating an todo Task.","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"LinWanLeii"},"content":"     * @param taskList The TaskLIst that contains all the tasks.","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"LinWanLeii"},"content":"     * @param ui The user interface that will be shown to the user.","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"LinWanLeii"},"content":"     * @param fileStorage The File that will be written and read from.","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"LinWanLeii"},"content":"     * @throws DukeException If user inputs is invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"LinWanLeii"},"content":"    public String execute(TaskList taskList, Ui ui, FileStorage fileStorage) throws DukeException {","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"LinWanLeii"},"content":"        Todo task \u003d new Todo(this.task);","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"LinWanLeii"},"content":"        taskList.add(task);","lastModifiedDate":"2023-09-16"},{"lineNumber":36,"author":{"gitId":"LinWanLeii"},"content":"        fileStorage.write(taskList);","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"LinWanLeii"},"content":"        return ui.showTaskAdded(task, taskList);","lastModifiedDate":"2023-09-16"},{"lineNumber":38,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"LinWanLeii":39}},{"path":"src/main/java/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"package command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"import filestorage.FileStorage;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"import list.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":" * The class that will execute the Unmark Task command.","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":" * This class extends from the Command class.","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"    private final int index;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"     * Constructs the class.","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"     * @param index The index that will be UnMarked.","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"     * Executes the Command of UnMarking a task.","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"     * @param taskList The TaskLIst that contains all the tasks.","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"LinWanLeii"},"content":"     * @param ui The user interface that will be shown to the user.","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"LinWanLeii"},"content":"     * @param fileStorage The File that will be written and read from.","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"LinWanLeii"},"content":"     * @throws DukeException If user inputs is invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"LinWanLeii"},"content":"    public String execute(TaskList taskList, Ui ui, FileStorage fileStorage) throws DukeException {","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"LinWanLeii"},"content":"        Task task \u003d taskList.unmarkTask(this.index);","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"LinWanLeii"},"content":"        fileStorage.write(taskList);","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"LinWanLeii"},"content":"        return ui.showUnMarkedTask(task);","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"LinWanLeii":37}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"package duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"LinWanLeii"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"LinWanLeii"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"LinWanLeii"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"LinWanLeii"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"LinWanLeii"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"LinWanLeii"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"LinWanLeii"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"LinWanLeii"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"LinWanLeii"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"LinWanLeii"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"LinWanLeii"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"LinWanLeii"},"content":"    private void flip() {","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"LinWanLeii"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"LinWanLeii"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"LinWanLeii"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"LinWanLeii"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"LinWanLeii"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"LinWanLeii"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"LinWanLeii"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"LinWanLeii"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"LinWanLeii"},"content":"        db.flip();","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"LinWanLeii"},"content":"        return db;","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"LinWanLeii":63}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"package duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"import command.Command;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"import filestorage.FileStorage;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"import list.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"import parser.Parser;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":" * The main program of the chat_bot.","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":" * Works with the MainWindow to provide inputs for GUI","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"    private TaskList userList;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"    private final FileStorage fileStorage;","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"    private final Ui userInterface;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"     * Initialises the Chat_Bot.","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"     * @param filePath The file that will be written or read from.","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"        this.userInterface \u003d new Ui();","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"LinWanLeii"},"content":"        this.fileStorage \u003d new FileStorage(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"LinWanLeii"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"LinWanLeii"},"content":"            userList \u003d new TaskList(fileStorage.read());","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"LinWanLeii"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"LinWanLeii"},"content":"            userList \u003d new TaskList();","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"LinWanLeii"},"content":"            System.out.println(\"File Empty\");","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"LinWanLeii"},"content":"     * Starts the class up.","lastModifiedDate":"2023-09-16"},{"lineNumber":39,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"LinWanLeii"},"content":"     * @param args The arguments use to start the program.","lastModifiedDate":"2023-09-16"},{"lineNumber":41,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"LinWanLeii"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"LinWanLeii"},"content":"        new Duke(\"Testing.txt\").run();","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"LinWanLeii"},"content":"     * Runs the UserInterface inputs and provide outputs.","lastModifiedDate":"2023-09-16"},{"lineNumber":48,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"LinWanLeii"},"content":"    public void run() {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"LinWanLeii"},"content":"        userInterface.showGreetings();","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"LinWanLeii"},"content":"        boolean isCmdExit \u003d false;","lastModifiedDate":"2023-09-16"},{"lineNumber":52,"author":{"gitId":"LinWanLeii"},"content":"        while (!isCmdExit) {","lastModifiedDate":"2023-09-16"},{"lineNumber":53,"author":{"gitId":"LinWanLeii"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"LinWanLeii"},"content":"                String fullCommand \u003d userInterface.readCommand();","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"LinWanLeii"},"content":"                userInterface.showLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"LinWanLeii"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"LinWanLeii"},"content":"                c.execute(userList, userInterface, fileStorage);","lastModifiedDate":"2023-09-16"},{"lineNumber":58,"author":{"gitId":"LinWanLeii"},"content":"                isCmdExit \u003d c.isExit();","lastModifiedDate":"2023-09-16"},{"lineNumber":59,"author":{"gitId":"LinWanLeii"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"LinWanLeii"},"content":"                userInterface.showError(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"LinWanLeii"},"content":"            } finally {","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"LinWanLeii"},"content":"                userInterface.showLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"LinWanLeii"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"LinWanLeii"},"content":"        userInterface.closeScanner();","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":69,"author":{"gitId":"LinWanLeii"},"content":"     * Gets the response from the chat box inputs.","lastModifiedDate":"2023-09-16"},{"lineNumber":70,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":71,"author":{"gitId":"LinWanLeii"},"content":"     * @param input The input users put in.","lastModifiedDate":"2023-09-16"},{"lineNumber":72,"author":{"gitId":"LinWanLeii"},"content":"     * @return A String output given out dependent on the input.","lastModifiedDate":"2023-09-16"},{"lineNumber":73,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":74,"author":{"gitId":"LinWanLeii"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"LinWanLeii"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":76,"author":{"gitId":"LinWanLeii"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"LinWanLeii"},"content":"            return c.execute(userList, userInterface, fileStorage);","lastModifiedDate":"2023-09-16"},{"lineNumber":78,"author":{"gitId":"LinWanLeii"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":79,"author":{"gitId":"LinWanLeii"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-08"},{"lineNumber":80,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":81,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":82,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":83,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":84,"author":{"gitId":"LinWanLeii"},"content":"     * Runs the greeting of the Chat Bot.","lastModifiedDate":"2023-09-16"},{"lineNumber":85,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":86,"author":{"gitId":"LinWanLeii"},"content":"     * @return A String that shows greetings.","lastModifiedDate":"2023-09-16"},{"lineNumber":87,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":88,"author":{"gitId":"LinWanLeii"},"content":"    public String start() {","lastModifiedDate":"2023-09-08"},{"lineNumber":89,"author":{"gitId":"LinWanLeii"},"content":"        return userInterface.showGreetings() + \"\\n Enter clear if you would like to start a new list\";","lastModifiedDate":"2023-09-08"},{"lineNumber":90,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":91,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"LinWanLeii":91,"-":1}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"package duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":" * The launcher class to work around classpath issues.","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"public class Launcher {","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"LinWanLeii":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"package duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":" * The GUI for Duke using FXML.","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"    private Duke duke \u003d new Duke(\"Testing.txt\");","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"            stage.show();","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"LinWanLeii"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"LinWanLeii":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"package duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"import java.util.concurrent.Executors;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"import java.util.concurrent.ScheduledExecutorService;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"LinWanLeii"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"LinWanLeii"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"LinWanLeii"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"LinWanLeii"},"content":"     * Starts the dialog box.","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"LinWanLeii"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"LinWanLeii"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"LinWanLeii"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"LinWanLeii"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"LinWanLeii"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"LinWanLeii"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"LinWanLeii"},"content":"                DialogBox.getUserDialog(duke.start(), dukeImage)","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"LinWanLeii"},"content":"        );","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"LinWanLeii"},"content":"    private void delayedExit() {","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"LinWanLeii"},"content":"        ScheduledExecutorService executorService \u003d Executors.newSingleThreadScheduledExecutor();","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"LinWanLeii"},"content":"        executorService.schedule(() -\u003e Platform.runLater(() -\u003e Platform.exit()), 3, TimeUnit.SECONDS);","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"LinWanLeii"},"content":"        executorService.shutdown();","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"LinWanLeii"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"LinWanLeii"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"LinWanLeii"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"LinWanLeii"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"LinWanLeii"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"LinWanLeii"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"LinWanLeii"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"LinWanLeii"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"LinWanLeii"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"LinWanLeii"},"content":"        );","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"LinWanLeii"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"LinWanLeii"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"LinWanLeii"},"content":"            delayedExit();","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":70,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"LinWanLeii":70}},{"path":"src/main/java/dukeexception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"package dukeexception;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":" * The Exceptional class for any errors faced by the user inputs.","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"     * Constructs the exception when a method creates it.","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":"     * @param message The message that we want to output to the user.","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"LinWanLeii":16}},{"path":"src/main/java/filestorage/FileStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"package filestorage;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":"import list.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"import tasks.Event;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"import tasks.Todo;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":" * Represents a class that will convey the user input to a file and also the other way around.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"public class FileStorage {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"    private final File fileData;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"    public FileStorage(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"        this.fileData \u003d new File(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"LinWanLeii"},"content":"     * Writes all the data from the taskList to the file.","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"LinWanLeii"},"content":"     * @param userList The List that contains all the tasks by the user.","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"LinWanLeii"},"content":"     * @throws DukeException If there is any situation where the FileWriter fails to write.","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"LinWanLeii"},"content":"    public void write(TaskList userList) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"LinWanLeii"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"LinWanLeii"},"content":"            FileWriter fw \u003d new FileWriter(fileData);","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"LinWanLeii"},"content":"            for (int i \u003d 0; i \u003c userList.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"LinWanLeii"},"content":"                fw.write(userList.get(i).toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"LinWanLeii"},"content":"                fw.write(\"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"LinWanLeii"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"LinWanLeii"},"content":"            fw.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"LinWanLeii"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"LinWanLeii"},"content":"            throw new DukeException(\"Writing Error\");","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"LinWanLeii"},"content":"     * Reads all the information on a textFile and load it back into the program","lastModifiedDate":"2023-09-16"},{"lineNumber":49,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"LinWanLeii"},"content":"     * @return ArrayList The list of all the task by user.","lastModifiedDate":"2023-09-16"},{"lineNumber":51,"author":{"gitId":"LinWanLeii"},"content":"     * @throws DukeException If the content on the file cannot be recognised.","lastModifiedDate":"2023-09-16"},{"lineNumber":52,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"LinWanLeii"},"content":"    public ArrayList\u003cTask\u003e read() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"LinWanLeii"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"LinWanLeii"},"content":"            ArrayList\u003cTask\u003e dataList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"LinWanLeii"},"content":"            Scanner scanner \u003d new Scanner(fileData);","lastModifiedDate":"2023-09-15"},{"lineNumber":57,"author":{"gitId":"LinWanLeii"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"LinWanLeii"},"content":"                Task task \u003d new Task();","lastModifiedDate":"2023-09-16"},{"lineNumber":59,"author":{"gitId":"LinWanLeii"},"content":"                String inputs \u003d scanner.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"LinWanLeii"},"content":"                String info \u003d inputs.substring(9);","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"LinWanLeii"},"content":"                assert !inputs.trim().startsWith(\"[ ]\") : \"There should be a allocated type for the task\";","lastModifiedDate":"2023-09-16"},{"lineNumber":62,"author":{"gitId":"LinWanLeii"},"content":"                if (inputs.trim().startsWith(\"[T]\")) {","lastModifiedDate":"2023-09-16"},{"lineNumber":63,"author":{"gitId":"LinWanLeii"},"content":"                    task \u003d new Todo(info);","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"LinWanLeii"},"content":"                } else if (inputs.trim().startsWith(\"  [D]\")) {","lastModifiedDate":"2023-09-16"},{"lineNumber":65,"author":{"gitId":"LinWanLeii"},"content":"                    String[] split \u003d info.split(\"\\\\(by: |\\\\)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"LinWanLeii"},"content":"                    task \u003d new Deadline(split[0], split[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"LinWanLeii"},"content":"                } else if (inputs.trim().startsWith(\"  [E]\")) {","lastModifiedDate":"2023-09-16"},{"lineNumber":68,"author":{"gitId":"LinWanLeii"},"content":"                    String[] split \u003d info.split(\"\\\\(from: | to: |\\\\)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"LinWanLeii"},"content":"                    task \u003d new Event(split[0], split[1], split[2]);","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"LinWanLeii"},"content":"                }","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"LinWanLeii"},"content":"                isTaskMarked(task, inputs);","lastModifiedDate":"2023-09-16"},{"lineNumber":72,"author":{"gitId":"LinWanLeii"},"content":"                if (!task.isItEmpty()) {","lastModifiedDate":"2023-09-16"},{"lineNumber":73,"author":{"gitId":"LinWanLeii"},"content":"                    dataList.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"LinWanLeii"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"LinWanLeii"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"LinWanLeii"},"content":"            scanner.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"LinWanLeii"},"content":"            return dataList;","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"LinWanLeii"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"LinWanLeii"},"content":"            throw new DukeException(\"Invalid file\");","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"LinWanLeii"},"content":"    private static void isTaskMarked(Task task, String inputs) {","lastModifiedDate":"2023-09-16"},{"lineNumber":84,"author":{"gitId":"LinWanLeii"},"content":"        if (inputs.substring(6).startsWith(\"X\")) {","lastModifiedDate":"2023-09-16"},{"lineNumber":85,"author":{"gitId":"LinWanLeii"},"content":"            task.markDone();","lastModifiedDate":"2023-09-16"},{"lineNumber":86,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":87,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":88,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"LinWanLeii":88}},{"path":"src/main/java/list/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"package list;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":" * The class that stores Tasks inside an Arraylist.","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"public class TaskList {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"     * Constructs method that will create a new TaskList.","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"    public TaskList(TaskList userList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"        this.taskList \u003d convert(userList);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"LinWanLeii"},"content":"     * Converts a TaskList to an ArrayList.","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"LinWanLeii"},"content":"     * @param userList The TaskList that is going to be converted.","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"LinWanLeii"},"content":"     * @return An Arraylist that is converted from TaskList.","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"LinWanLeii"},"content":"    public ArrayList\u003cTask\u003e convert(TaskList userList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"LinWanLeii"},"content":"        for (int i \u003d 0; i \u003c userList.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"LinWanLeii"},"content":"            taskList.add(i, userList.get(i));","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"LinWanLeii"},"content":"        return taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"LinWanLeii"},"content":"     * Returns the size of the TaskList.","lastModifiedDate":"2023-09-16"},{"lineNumber":43,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"LinWanLeii"},"content":"     * @return The size of the TaskList.","lastModifiedDate":"2023-09-16"},{"lineNumber":45,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"LinWanLeii"},"content":"    public int size() {","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"LinWanLeii"},"content":"        return taskList.size(); }","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"LinWanLeii"},"content":"     * Gets the task in the list.","lastModifiedDate":"2023-09-16"},{"lineNumber":51,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"LinWanLeii"},"content":"     * @param i The index of the task needed.","lastModifiedDate":"2023-09-16"},{"lineNumber":53,"author":{"gitId":"LinWanLeii"},"content":"     * @return The task that is called for.","lastModifiedDate":"2023-09-16"},{"lineNumber":54,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"LinWanLeii"},"content":"    public Task get(int i) {","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"LinWanLeii"},"content":"        return taskList.get(i); }","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"LinWanLeii"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2023-09-16"},{"lineNumber":61,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"LinWanLeii"},"content":"     * @param task The task that the user wants to add.","lastModifiedDate":"2023-09-16"},{"lineNumber":63,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"LinWanLeii"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"LinWanLeii"},"content":"        taskList.add(task); }","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"LinWanLeii"},"content":"     * Deletes a task depending on the index provided.","lastModifiedDate":"2023-09-16"},{"lineNumber":69,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"LinWanLeii"},"content":"     * @param i The index of the task.","lastModifiedDate":"2023-09-16"},{"lineNumber":71,"author":{"gitId":"LinWanLeii"},"content":"     * @return The task that has been removed.","lastModifiedDate":"2023-09-16"},{"lineNumber":72,"author":{"gitId":"LinWanLeii"},"content":"     * @throws DukeException If the index is out of bound.","lastModifiedDate":"2023-09-16"},{"lineNumber":73,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"LinWanLeii"},"content":"    public Task deleteTask(int i) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"LinWanLeii"},"content":"        if (i \u003e this.taskList.size() || i \u003c 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"LinWanLeii"},"content":"            throw new DukeException(\"Invalid Index provided.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"LinWanLeii"},"content":"        Task removing \u003d this.taskList.get(i - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"LinWanLeii"},"content":"        this.taskList.remove(i - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"LinWanLeii"},"content":"        return removing;","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"LinWanLeii"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-09-16"},{"lineNumber":85,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"LinWanLeii"},"content":"     * @param i The index of the task.","lastModifiedDate":"2023-09-16"},{"lineNumber":87,"author":{"gitId":"LinWanLeii"},"content":"     * @return The task that is marked.","lastModifiedDate":"2023-09-16"},{"lineNumber":88,"author":{"gitId":"LinWanLeii"},"content":"     * @throws DukeException If the index is out of bound.","lastModifiedDate":"2023-09-16"},{"lineNumber":89,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"LinWanLeii"},"content":"    public Task markTask(int i) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"LinWanLeii"},"content":"        if (i \u003e this.taskList.size() || i \u003c 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"LinWanLeii"},"content":"            throw new DukeException(\"Invalid Index provided.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"LinWanLeii"},"content":"        Task marking \u003d this.taskList.get(i - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"LinWanLeii"},"content":"        marking.markDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"LinWanLeii"},"content":"        return marking;","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"LinWanLeii"},"content":"     * UnMark a task as done.","lastModifiedDate":"2023-09-16"},{"lineNumber":101,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"LinWanLeii"},"content":"     * @param i The index of the task.","lastModifiedDate":"2023-09-16"},{"lineNumber":103,"author":{"gitId":"LinWanLeii"},"content":"     * @return The task that is unmarked.","lastModifiedDate":"2023-09-16"},{"lineNumber":104,"author":{"gitId":"LinWanLeii"},"content":"     * @throws DukeException If the index is out of bound.","lastModifiedDate":"2023-09-16"},{"lineNumber":105,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"LinWanLeii"},"content":"    public Task unmarkTask(int i) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"LinWanLeii"},"content":"        if (i \u003e this.taskList.size() || i \u003c 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"LinWanLeii"},"content":"            throw new DukeException(\"Invalid Index provided.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"LinWanLeii"},"content":"        Task unMarking \u003d this.taskList.get(i - 1);","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"LinWanLeii"},"content":"        unMarking.unmarkDone();","lastModifiedDate":"2023-09-07"},{"lineNumber":112,"author":{"gitId":"LinWanLeii"},"content":"        return unMarking;","lastModifiedDate":"2023-09-07"},{"lineNumber":113,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"LinWanLeii"},"content":"     * Clears the TaskList","lastModifiedDate":"2023-09-16"},{"lineNumber":117,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"LinWanLeii"},"content":"     * @return An empty list","lastModifiedDate":"2023-09-16"},{"lineNumber":119,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"LinWanLeii"},"content":"    public TaskList clear() {","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"LinWanLeii"},"content":"        this.taskList.clear();","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"LinWanLeii"},"content":"        return new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"LinWanLeii":124}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"package parser;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"import command.ByeCommand;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"import command.ClearCommand;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"import command.Command;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":"import command.DeadlineCommand;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":"import command.DeleteCommand;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":"import command.EventCommand;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"import command.FindCommand;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"import command.ListCommand;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"import command.MarkCommand;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"import command.MultipleCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"import command.TodoCommand;","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"import command.UnmarkCommand;","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":" * The parser that takes the input data and checks its syntax followed bt execute it.","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"public class Parser {","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"    //final String UNKNOWN_COMMAND \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"LinWanLeii"},"content":"     * Takes the user input and calls the right command for it.","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"LinWanLeii"},"content":"     * @param fullCommand The user command input.","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"LinWanLeii"},"content":"     * @return A command that will be executed base on the users input.","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"LinWanLeii"},"content":"     * @throws DukeException If the command is invalid in any ways.","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"LinWanLeii"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"LinWanLeii"},"content":"        String[] split \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"LinWanLeii"},"content":"        String commandAction \u003d split[0];","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"LinWanLeii"},"content":"        switch (commandAction) {","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"LinWanLeii"},"content":"        case \"list\":","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"LinWanLeii"},"content":"            return new ListCommand();","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"LinWanLeii"},"content":"        case \"mark\":","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"LinWanLeii"},"content":"            if (!split[1].contains(\",\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"LinWanLeii"},"content":"                if (split.length \u003e 2) {","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"LinWanLeii"},"content":"                    throw new DukeException(\"Please state in this format (mark 1)\");","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"LinWanLeii"},"content":"                }","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"LinWanLeii"},"content":"                try {","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"LinWanLeii"},"content":"                    return new MarkCommand(Integer.parseInt(split[1]));","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"LinWanLeii"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"LinWanLeii"},"content":"                    throw new DukeException(\"Invalid Index\");","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"LinWanLeii"},"content":"                }","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"LinWanLeii"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"LinWanLeii"},"content":"            return new MultipleCommand(split[1], \"mark\");","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"LinWanLeii"},"content":"        case \"unmark\":","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"LinWanLeii"},"content":"            if (!split[1].contains(\",\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"LinWanLeii"},"content":"                if (split.length \u003e 2) {","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"LinWanLeii"},"content":"                    throw new DukeException(\"Please state in this format (unmark 1)\");","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"LinWanLeii"},"content":"                }","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"LinWanLeii"},"content":"                try {","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"LinWanLeii"},"content":"                    return new UnmarkCommand(Integer.parseInt(split[1]));","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"LinWanLeii"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"LinWanLeii"},"content":"                    throw new DukeException(\"Invalid Index\");","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"LinWanLeii"},"content":"                }","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"LinWanLeii"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"LinWanLeii"},"content":"            return new MultipleCommand(split[1], \"unmark\");","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"LinWanLeii"},"content":"        case \"delete\":","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"LinWanLeii"},"content":"            if (!split[1].contains(\",\")) {","lastModifiedDate":"2023-09-16"},{"lineNumber":67,"author":{"gitId":"LinWanLeii"},"content":"                if (split.length \u003e 2) {","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"LinWanLeii"},"content":"                    throw new DukeException(\"Please state in this format (delete 1)\");","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"LinWanLeii"},"content":"                }","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"LinWanLeii"},"content":"                try {","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"LinWanLeii"},"content":"                    return new DeleteCommand(Integer.parseInt(split[1]));","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"LinWanLeii"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"LinWanLeii"},"content":"                    throw new DukeException(\"Invalid Index\");","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"LinWanLeii"},"content":"                }","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"LinWanLeii"},"content":"            }","lastModifiedDate":"2023-09-16"},{"lineNumber":76,"author":{"gitId":"LinWanLeii"},"content":"            return new MultipleCommand(split[1], \"del\");","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"LinWanLeii"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"LinWanLeii"},"content":"            if (split.length \u003c 2 || split[1].isEmpty()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"LinWanLeii"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"LinWanLeii"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"LinWanLeii"},"content":"            return new TodoCommand(split[1]);","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"LinWanLeii"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"LinWanLeii"},"content":"            if (split.length \u003c 2 || split[1].isEmpty()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"LinWanLeii"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a Tasks.Deadline cannot be empty.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"LinWanLeii"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"LinWanLeii"},"content":"            String[] info \u003d split[1].split(\"/by \");","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"LinWanLeii"},"content":"            if (info.length !\u003d 2) {","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"LinWanLeii"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a deadline is invalid.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"LinWanLeii"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"LinWanLeii"},"content":"            try {","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"LinWanLeii"},"content":"                String deadDate \u003d LocalDate.parse(info[1]).format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"LinWanLeii"},"content":"                return new DeadlineCommand(info[0], deadDate);","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"LinWanLeii"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"LinWanLeii"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a time must be in yyyy-mm-dd\");","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"LinWanLeii"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":96,"author":{"gitId":"LinWanLeii"},"content":"        case \"event\":","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"LinWanLeii"},"content":"            if (split.length \u003c 2 || split[1].isEmpty()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"LinWanLeii"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a Tasks.Event cannot be empty.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":99,"author":{"gitId":"LinWanLeii"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":100,"author":{"gitId":"LinWanLeii"},"content":"            String[] infoEvent \u003d split[1].split(\"/from | /to \");","lastModifiedDate":"2023-09-07"},{"lineNumber":101,"author":{"gitId":"LinWanLeii"},"content":"            if (infoEvent.length !\u003d 3) {","lastModifiedDate":"2023-09-07"},{"lineNumber":102,"author":{"gitId":"LinWanLeii"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a event is invalid.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":103,"author":{"gitId":"LinWanLeii"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":104,"author":{"gitId":"LinWanLeii"},"content":"            try {","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"LinWanLeii"},"content":"                String startDate \u003d LocalDate.parse(infoEvent[1]).format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":106,"author":{"gitId":"LinWanLeii"},"content":"                String endDate \u003d LocalDate.parse(infoEvent[2]).format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"LinWanLeii"},"content":"                return new EventCommand(infoEvent[0], startDate, endDate);","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"LinWanLeii"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"LinWanLeii"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a time must be in yyyy-mm-dd\");","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"LinWanLeii"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"LinWanLeii"},"content":"        case \"clear\":","lastModifiedDate":"2023-09-07"},{"lineNumber":112,"author":{"gitId":"LinWanLeii"},"content":"            return new ClearCommand();","lastModifiedDate":"2023-09-07"},{"lineNumber":113,"author":{"gitId":"LinWanLeii"},"content":"        case \"bye\":","lastModifiedDate":"2023-09-07"},{"lineNumber":114,"author":{"gitId":"LinWanLeii"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-09-07"},{"lineNumber":115,"author":{"gitId":"LinWanLeii"},"content":"        case \"find\":","lastModifiedDate":"2023-09-07"},{"lineNumber":116,"author":{"gitId":"LinWanLeii"},"content":"            return new FindCommand(split[1]);","lastModifiedDate":"2023-09-07"},{"lineNumber":117,"author":{"gitId":"LinWanLeii"},"content":"        default:","lastModifiedDate":"2023-09-07"},{"lineNumber":118,"author":{"gitId":"LinWanLeii"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-07"},{"lineNumber":119,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":120,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":121,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"LinWanLeii":121}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"package tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":" * The class that will create a deadline line task.","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":" * This class extends from the tasks class.","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"    private final String deadline;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":"     * Constructs the method.","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"     * @param deadline The deadline of the task.","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"    public Deadline(String name, String deadline) {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"        super(name);","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"        super.setType(\"D\");","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"     * Represent the task in string.","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"     * @return The syntax that will be shown to the user.","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"    public String toString() {","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"LinWanLeii"},"content":"        return super.toString() + \"(by: \" + deadline + \")\";","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"LinWanLeii":30}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"package tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":" * The class that will create an Event line task.","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":" * This class extends from the tasks class.","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"    private final String start;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"    private final String end;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":"     * Constructs the method.","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"     * @param start The start date of the task.","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"     * @param end The end date of the task.","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"    public Event(String name, String start, String end) {","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"        super(name);","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"        super.setType(\"E\");","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"     * Represents the task.","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"     * @return The syntax that will be shown to the user.","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"LinWanLeii"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"LinWanLeii"},"content":"    public String toString() {","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"LinWanLeii"},"content":"        return super.toString() + \"(from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"LinWanLeii":33}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"package tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":" * The parent class that represents the task that the user will input.","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"public class Task {","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"    private String type;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"    private String name;","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"    private boolean marked;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":"    private boolean isEmpty \u003d false;","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"     * Constructs the method for task.","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"    public Task(String name) {","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"        this.marked \u003d false;","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"    public Task() {","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"        this.isEmpty \u003d true;","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"    public boolean isItEmpty() { return isEmpty; }","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"    public void setType(String type) {","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"LinWanLeii"},"content":"     * Marks a task as marked.","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"LinWanLeii"},"content":"    public void markDone() {","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"LinWanLeii"},"content":"        marked \u003d true;","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"LinWanLeii"},"content":"     * UnMarks a task.","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"LinWanLeii"},"content":"    public void unmarkDone() {","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"LinWanLeii"},"content":"        marked \u003d false;","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"LinWanLeii"},"content":"     * Represent the task in String.","lastModifiedDate":"2023-09-16"},{"lineNumber":43,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"LinWanLeii"},"content":"     * @return The syntax that will be shown to the user.","lastModifiedDate":"2023-09-16"},{"lineNumber":45,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"LinWanLeii"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"LinWanLeii"},"content":"    public String toString() {","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"LinWanLeii"},"content":"        assert !type.equals(\" \") : \"Type must be a character related to its task type\";","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"LinWanLeii"},"content":"        return \"  [\" + type + \"]\" + \"[\" + (marked ? \"X\" : \" \") + \"] \" + name;","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"LinWanLeii":51}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"package tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":" * The class that will create a Todo line task.","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":" * This class extends from the tasks class.","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"     * Constructs the method.","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"    public Todo(String name) {","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"        super(name);","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"        super.setType(\"T\");","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"LinWanLeii":17}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"package ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"import list.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":" * The class that is used to show the user interface.","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"    private final Scanner scanner;","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"    private final String lineBreak \u003d \"\\n________________________________________\\n\";","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"     * Constructs the method to initialise the UI.","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"    public Ui() {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"     * Reads the user input and trims the spaces at both ends.","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"     * @return A string of the input.","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"LinWanLeii"},"content":"    public String readCommand() {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"LinWanLeii"},"content":"        return this.scanner.nextLine().trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"LinWanLeii"},"content":"     * Returns a line.","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"LinWanLeii"},"content":"    public void showLine() {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"LinWanLeii"},"content":"        System.out.println(lineBreak);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"LinWanLeii"},"content":"     * Returns out the error.","lastModifiedDate":"2023-09-16"},{"lineNumber":41,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"LinWanLeii"},"content":"     * @param e The error code produced.","lastModifiedDate":"2023-09-16"},{"lineNumber":43,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"LinWanLeii"},"content":"    public String showError(String e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"LinWanLeii"},"content":"        return e;","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"LinWanLeii"},"content":"     * Shows task being added.","lastModifiedDate":"2023-09-16"},{"lineNumber":50,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"LinWanLeii"},"content":"     * @param task The task to add.","lastModifiedDate":"2023-09-16"},{"lineNumber":52,"author":{"gitId":"LinWanLeii"},"content":"     * @param userList The TaskList to add to.","lastModifiedDate":"2023-09-16"},{"lineNumber":53,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"LinWanLeii"},"content":"    public String showTaskAdded(Task task, TaskList userList) {","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"LinWanLeii"},"content":"        String top \u003d (\"Got it. I\u0027ve added this task: \\n\" + task);","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"LinWanLeii"},"content":"        int size \u003d userList.size();","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"LinWanLeii"},"content":"        String bottom \u003d (\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"LinWanLeii"},"content":"        return top + \"\\n\" + bottom;","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"LinWanLeii"},"content":"     * Greets the user at the start.","lastModifiedDate":"2023-09-16"},{"lineNumber":63,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"LinWanLeii"},"content":"    public String showGreetings() {","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"LinWanLeii"},"content":"        String name \u003d \"CathyTheChattyCat\";","lastModifiedDate":"2023-09-16"},{"lineNumber":66,"author":{"gitId":"LinWanLeii"},"content":"        String top \u003d (lineBreak + \"Hello! I\u0027m \" + name);","lastModifiedDate":"2023-09-16"},{"lineNumber":67,"author":{"gitId":"LinWanLeii"},"content":"        String bottom \u003d (\"What can I do for you?\" + lineBreak);","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"LinWanLeii"},"content":"        return top + \"\\n\" + bottom;","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"LinWanLeii"},"content":"     * Shows that a task is marked.","lastModifiedDate":"2023-09-16"},{"lineNumber":73,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"LinWanLeii"},"content":"     * @param task The task being marked.","lastModifiedDate":"2023-09-16"},{"lineNumber":75,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"LinWanLeii"},"content":"    public String showMarkedTask(Task task) {","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"LinWanLeii"},"content":"        return (\"Nice! I\u0027ve marked this task as done: \\n\\t\" + task);","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"LinWanLeii"},"content":"     * Shows that a task is unmarked.","lastModifiedDate":"2023-09-16"},{"lineNumber":82,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"LinWanLeii"},"content":"     * @param task The task being unmarked.","lastModifiedDate":"2023-09-16"},{"lineNumber":84,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"LinWanLeii"},"content":"    public String showUnMarkedTask(Task task) {","lastModifiedDate":"2023-09-08"},{"lineNumber":86,"author":{"gitId":"LinWanLeii"},"content":"        return (\"OK, I\u0027ve unmarked this task as not done yet: \\n\\t\" + task);","lastModifiedDate":"2023-09-08"},{"lineNumber":87,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"LinWanLeii"},"content":"     * Shows that a task is deleted.","lastModifiedDate":"2023-09-16"},{"lineNumber":91,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"LinWanLeii"},"content":"     * @param task The task being deleted.","lastModifiedDate":"2023-09-16"},{"lineNumber":93,"author":{"gitId":"LinWanLeii"},"content":"     * @param userList The userList that is deleted from.","lastModifiedDate":"2023-09-16"},{"lineNumber":94,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"LinWanLeii"},"content":"    public String showDeleteTask(Task task, TaskList userList) {","lastModifiedDate":"2023-09-08"},{"lineNumber":96,"author":{"gitId":"LinWanLeii"},"content":"        String top \u003d (\"Noted. I\u0027ve removed this task: \\n\" + task);","lastModifiedDate":"2023-09-08"},{"lineNumber":97,"author":{"gitId":"LinWanLeii"},"content":"        String bottom \u003d (\"Now you have \" + userList.size() + \" tasks in the list\");","lastModifiedDate":"2023-09-08"},{"lineNumber":98,"author":{"gitId":"LinWanLeii"},"content":"        return top + \"\\n\" + bottom;","lastModifiedDate":"2023-09-08"},{"lineNumber":99,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"LinWanLeii"},"content":"     * Shows that the task is cleared.","lastModifiedDate":"2023-09-16"},{"lineNumber":103,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"LinWanLeii"},"content":"    public String showClearTask() {","lastModifiedDate":"2023-09-08"},{"lineNumber":105,"author":{"gitId":"LinWanLeii"},"content":"        return (\"Noted. I\u0027ve removed all the tasks.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":106,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"LinWanLeii"},"content":"     * Shows all the task in the list.","lastModifiedDate":"2023-09-16"},{"lineNumber":110,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"LinWanLeii"},"content":"     * @param userList The list the task is from.","lastModifiedDate":"2023-09-16"},{"lineNumber":112,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"LinWanLeii"},"content":"    public String showList(TaskList userList) {","lastModifiedDate":"2023-09-08"},{"lineNumber":114,"author":{"gitId":"LinWanLeii"},"content":"        //System.out.println(lineBreak);","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"LinWanLeii"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-09-08"},{"lineNumber":116,"author":{"gitId":"LinWanLeii"},"content":"        String top \u003d (\"Here are the tasks in your list:\");","lastModifiedDate":"2023-09-08"},{"lineNumber":117,"author":{"gitId":"LinWanLeii"},"content":"        for (int i \u003d 0; i \u003c userList.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"LinWanLeii"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"LinWanLeii"},"content":"            builder.append(index).append(\".\").append(userList.get(i)).append(\u0027\\n\u0027);","lastModifiedDate":"2023-09-16"},{"lineNumber":120,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"LinWanLeii"},"content":"        return top + \"\\n\" + builder;","lastModifiedDate":"2023-09-08"},{"lineNumber":122,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":125,"author":{"gitId":"LinWanLeii"},"content":"     * Returns an input that multiple changes has been made.","lastModifiedDate":"2023-09-16"},{"lineNumber":126,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":127,"author":{"gitId":"LinWanLeii"},"content":"     * @param changedList The tasks that has been modified.","lastModifiedDate":"2023-09-16"},{"lineNumber":128,"author":{"gitId":"LinWanLeii"},"content":"     * @param newList The TaskList after all the changes being applied.","lastModifiedDate":"2023-09-16"},{"lineNumber":129,"author":{"gitId":"LinWanLeii"},"content":"     * @param input The type of changes that was made.","lastModifiedDate":"2023-09-16"},{"lineNumber":130,"author":{"gitId":"LinWanLeii"},"content":"     * @return A string that has the relevant changes.","lastModifiedDate":"2023-09-16"},{"lineNumber":131,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":132,"author":{"gitId":"LinWanLeii"},"content":"    public String showNewList(TaskList changedList, TaskList newList, String input) {","lastModifiedDate":"2023-09-16"},{"lineNumber":133,"author":{"gitId":"LinWanLeii"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-09-16"},{"lineNumber":134,"author":{"gitId":"LinWanLeii"},"content":"        String delete \u003d (\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-09-16"},{"lineNumber":135,"author":{"gitId":"LinWanLeii"},"content":"        String marked \u003d (\"Nice! I\u0027ve marked this tasks as done:\");","lastModifiedDate":"2023-09-16"},{"lineNumber":136,"author":{"gitId":"LinWanLeii"},"content":"        String unMarked \u003d (\"OK, I\u0027ve unmarked this tasks as not done yet:\");","lastModifiedDate":"2023-09-16"},{"lineNumber":137,"author":{"gitId":"LinWanLeii"},"content":"        for (int i \u003d 0; i \u003c changedList.size(); i++) {","lastModifiedDate":"2023-09-16"},{"lineNumber":138,"author":{"gitId":"LinWanLeii"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2023-09-16"},{"lineNumber":139,"author":{"gitId":"LinWanLeii"},"content":"            builder.append(index).append(\".\").append(changedList.get(i)).append(\u0027\\n\u0027);","lastModifiedDate":"2023-09-16"},{"lineNumber":140,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":141,"author":{"gitId":"LinWanLeii"},"content":"        String bottom \u003d (\"Now you have \" + newList.size() + \" tasks in the list\");","lastModifiedDate":"2023-09-16"},{"lineNumber":142,"author":{"gitId":"LinWanLeii"},"content":"        if (input.equals(\"del\")) {","lastModifiedDate":"2023-09-16"},{"lineNumber":143,"author":{"gitId":"LinWanLeii"},"content":"            return delete + \"\\n\" + builder + bottom;","lastModifiedDate":"2023-09-16"},{"lineNumber":144,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":145,"author":{"gitId":"LinWanLeii"},"content":"        if (input.equals(\"mark\")) {","lastModifiedDate":"2023-09-16"},{"lineNumber":146,"author":{"gitId":"LinWanLeii"},"content":"            return marked + \"\\n\" + builder + bottom;","lastModifiedDate":"2023-09-16"},{"lineNumber":147,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":148,"author":{"gitId":"LinWanLeii"},"content":"        return unMarked + \"\\n\" + builder + bottom;","lastModifiedDate":"2023-09-16"},{"lineNumber":149,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":150,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":151,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"LinWanLeii"},"content":"     * Says BYE.","lastModifiedDate":"2023-09-16"},{"lineNumber":153,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"LinWanLeii"},"content":"    public String showGoodbye() {","lastModifiedDate":"2023-09-08"},{"lineNumber":155,"author":{"gitId":"LinWanLeii"},"content":"        return (\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-08"},{"lineNumber":156,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"LinWanLeii"},"content":"    public void closeScanner() {","lastModifiedDate":"2023-09-01"},{"lineNumber":158,"author":{"gitId":"LinWanLeii"},"content":"        scanner.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":160,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":161,"author":{"gitId":"LinWanLeii"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":162,"author":{"gitId":"LinWanLeii"},"content":"     * Shows the result found base on the word given.","lastModifiedDate":"2023-09-08"},{"lineNumber":163,"author":{"gitId":"LinWanLeii"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":164,"author":{"gitId":"LinWanLeii"},"content":"     * @param foundList The list of found tasks.","lastModifiedDate":"2023-09-16"},{"lineNumber":165,"author":{"gitId":"LinWanLeii"},"content":"     * @return A string of all the tasks.","lastModifiedDate":"2023-09-16"},{"lineNumber":166,"author":{"gitId":"LinWanLeii"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":167,"author":{"gitId":"LinWanLeii"},"content":"    public String showFoundResults(TaskList foundList) {","lastModifiedDate":"2023-09-08"},{"lineNumber":168,"author":{"gitId":"LinWanLeii"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-09-08"},{"lineNumber":169,"author":{"gitId":"LinWanLeii"},"content":"        String top \u003d (\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-09-08"},{"lineNumber":170,"author":{"gitId":"LinWanLeii"},"content":"        for (int i \u003d 0; i \u003c foundList.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":171,"author":{"gitId":"LinWanLeii"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":172,"author":{"gitId":"LinWanLeii"},"content":"            builder.append(index).append(\".\").append(foundList.get(i)).append(\"\\n\");","lastModifiedDate":"2023-09-16"},{"lineNumber":173,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":174,"author":{"gitId":"LinWanLeii"},"content":"        return top + \"\\n\" + builder;","lastModifiedDate":"2023-09-08"},{"lineNumber":175,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":176,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"LinWanLeii":176}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"LinWanLeii":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"            \u003cFont size\u003d\"17.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"LinWanLeii":23}},{"path":"src/test/java/seedu/duke/FileStorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"package seedu.duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"import filestorage.FileStorage;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":"public class FileStorageTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"    public void testingFileSuccess() {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"        FileStorage storage \u003d new FileStorage(\"testing.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"            assertEquals(storage.read().size(), 6);","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"            fail();","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"    public void emptyFile_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"        FileStorage storage \u003d new FileStorage(\"nothing.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"            assertEquals(storage.read().size(), 0);","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"LinWanLeii"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"LinWanLeii"},"content":"            fail();","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"LinWanLeii":32}},{"path":"src/test/java/seedu/duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"package seedu.duke;  //same package as the class being tested","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"LinWanLeii"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"LinWanLeii"},"content":"import parser.Parser;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"LinWanLeii"},"content":"import tasks.Todo;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"LinWanLeii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"LinWanLeii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"LinWanLeii"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"LinWanLeii"},"content":"public class TaskTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"LinWanLeii"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"LinWanLeii"},"content":"    public void simpleToDoTest(){","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"LinWanLeii"},"content":"        String str \u003d new Todo(\"book\").toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"LinWanLeii"},"content":"        assertEquals(str,\"  [T][ ] book\");","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"LinWanLeii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"LinWanLeii"},"content":"    public void exceptionTest() throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"LinWanLeii"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"LinWanLeii"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"LinWanLeii"},"content":"            Parser.parse(\"deadline book /by 10\");","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"LinWanLeii"},"content":"            fail();","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"LinWanLeii"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"LinWanLeii"},"content":"            assertEquals(e.getMessage(), \"☹ OOPS!!! The description of a time must be in yyyy-mm-dd\");","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"LinWanLeii"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"LinWanLeii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"LinWanLeii"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"LinWanLeii":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LinWanLeii"},"content":"T | 0 | read book","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"LinWanLeii"},"content":"T | 1 | join sports club","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"LinWanLeii":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"LinWanLeii"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"LinWanLeii":1,"-":20}}]
