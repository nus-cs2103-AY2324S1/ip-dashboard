[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"PetrichorPrecipice"},"content":"1. Open Intellij (if you are not in the welcome screen, click `FileHandler` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":23,"PetrichorPrecipice":1}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"PetrichorPrecipice"},"content":"    mainClass \u003d \"alpha.Alpha\"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"PetrichorPrecipice"},"content":"    archiveBaseName \u003d \"alpha\"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"PetrichorPrecipice"},"content":"    archiveFileName \u003d \"alpha.jar\"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"PetrichorPrecipice":3}},{"path":"src/main/java/alpha/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PetrichorPrecipice"},"content":"package alpha;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"PetrichorPrecipice"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"PetrichorPrecipice"},"content":"    private Task task;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"PetrichorPrecipice"},"content":"    public AddCommand(TaskList taskList, FileHandler fh, UI ui, Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"PetrichorPrecipice"},"content":"        super(taskList, fh, ui);","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"PetrichorPrecipice"},"content":"        isExit \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"PetrichorPrecipice"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"PetrichorPrecipice"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"PetrichorPrecipice"},"content":"    public void execute() {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"PetrichorPrecipice"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"PetrichorPrecipice"},"content":"            taskList.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"PetrichorPrecipice"},"content":"            fileHandler.saveToFile(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"PetrichorPrecipice"},"content":"            ui.taskAdded(task, taskList.size());","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"PetrichorPrecipice"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"PetrichorPrecipice":21}},{"path":"src/main/java/alpha/Alpha.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PetrichorPrecipice"},"content":"package alpha;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"PetrichorPrecipice"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"PetrichorPrecipice"},"content":" * The Chatbot Alpha is capable of tracking, marking, listing, and deleting events, to-dos, and deadlines.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"PetrichorPrecipice"},"content":" * It responds to commands like \"event,\" \"meeting,\" \"deadline,\" \"list,\" \"mark,\" \"unmark,\" and \"delete.\"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"PetrichorPrecipice"},"content":" * To end the Chatbot, type \"bye.\"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"PetrichorPrecipice"},"content":" *","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"PetrichorPrecipice"},"content":" * @author Wong Joon Hung","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"PetrichorPrecipice"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"PetrichorPrecipice"},"content":"public class Alpha {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"PetrichorPrecipice"},"content":"    private UI ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"PetrichorPrecipice"},"content":"    private FileHandler fileHandler;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"PetrichorPrecipice"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"PetrichorPrecipice"},"content":"    private Parser parser;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Constructor for the Alpha class. It reads existing tasks from \"data/alpha.txt\" and adds them to the taskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"PetrichorPrecipice"},"content":"    public Alpha() {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"PetrichorPrecipice"},"content":"        ui \u003d new UI();","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"PetrichorPrecipice"},"content":"        fileHandler \u003d new FileHandler();","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"PetrichorPrecipice"},"content":"        taskList \u003d fileHandler.readFromFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"PetrichorPrecipice"},"content":"        parser \u003d new Parser(fileHandler, taskList, ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"PetrichorPrecipice"},"content":"        fileHandler.checkAndCreate();","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Starts the Alpha ChatBot. Ends when \"bye\" is input.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"PetrichorPrecipice"},"content":"    public void run() {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"PetrichorPrecipice"},"content":"        ui.introduce();","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"PetrichorPrecipice"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"PetrichorPrecipice"},"content":"        while (!isExit) {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"PetrichorPrecipice"},"content":"            String input \u003d ui.read();","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"PetrichorPrecipice"},"content":"            Command command \u003d parser.parse(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"PetrichorPrecipice"},"content":"            command.execute();","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"PetrichorPrecipice"},"content":"            isExit \u003d command.isExit();","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"PetrichorPrecipice"},"content":"        ui.goodbye();","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"PetrichorPrecipice"},"content":"     * This is the main method that calls the run() function and starts Chatbot Alpha.","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @param args Unused.","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"PetrichorPrecipice"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"PetrichorPrecipice"},"content":"        new Alpha().run();","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"PetrichorPrecipice":49}},{"path":"src/main/java/alpha/AlphaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PetrichorPrecipice"},"content":"package alpha;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"PetrichorPrecipice"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"PetrichorPrecipice"},"content":" * A class to handle exceptions related to ChatBot Alpha.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"PetrichorPrecipice"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"PetrichorPrecipice"},"content":"public abstract class AlphaException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"PetrichorPrecipice"},"content":"    public AlphaException(String errorMessage) {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"PetrichorPrecipice"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"PetrichorPrecipice"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"PetrichorPrecipice":11}},{"path":"src/main/java/alpha/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PetrichorPrecipice"},"content":"package alpha;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"PetrichorPrecipice"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"PetrichorPrecipice"},"content":" * Class representation of an abstract Command. All other Commands inherit from this class.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"PetrichorPrecipice"},"content":" * Commands modify the task list in some way.","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"PetrichorPrecipice"},"content":" *","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"PetrichorPrecipice"},"content":" * @author Wong Joon Hung","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"PetrichorPrecipice"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"PetrichorPrecipice"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"PetrichorPrecipice"},"content":"    protected TaskList taskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"PetrichorPrecipice"},"content":"    protected FileHandler fileHandler;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"PetrichorPrecipice"},"content":"    protected UI ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"PetrichorPrecipice"},"content":"    protected boolean isExit;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Constructor for the Command class.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @param taskList    The taskList that the command will modify.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @param fileHandler The fileHandler that the command will modify.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @param ui          The user interface the command interacts with.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"PetrichorPrecipice"},"content":"    public Command(TaskList taskList, FileHandler fileHandler, UI ui) {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"PetrichorPrecipice"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"PetrichorPrecipice"},"content":"        this.fileHandler \u003d fileHandler;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"PetrichorPrecipice"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"PetrichorPrecipice"},"content":"    public abstract void execute();","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"PetrichorPrecipice"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"PetrichorPrecipice"},"content":"        return isExit;","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"PetrichorPrecipice"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"PetrichorPrecipice":34}},{"path":"src/main/java/alpha/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PetrichorPrecipice"},"content":"package alpha;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"PetrichorPrecipice"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"PetrichorPrecipice"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"PetrichorPrecipice"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"PetrichorPrecipice"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"PetrichorPrecipice"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"PetrichorPrecipice"},"content":" * Class representation of a deadline which has an ending time.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"PetrichorPrecipice"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"PetrichorPrecipice"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"PetrichorPrecipice"},"content":"    private LocalDate dateBy;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"PetrichorPrecipice"},"content":"    private LocalTime timeBy;","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"PetrichorPrecipice"},"content":"    private Deadline(String description, LocalDate dateBy) {","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"PetrichorPrecipice"},"content":"        super(description.trim());","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"PetrichorPrecipice"},"content":"        this.dateBy \u003d dateBy;","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"PetrichorPrecipice"},"content":"    private Deadline(String description, LocalDate dateBy, LocalTime timeBy) {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"PetrichorPrecipice"},"content":"        super(description.trim());","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"PetrichorPrecipice"},"content":"        this.dateBy \u003d dateBy;","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"PetrichorPrecipice"},"content":"        this.timeBy \u003d timeBy;","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"PetrichorPrecipice"},"content":"    public static Deadline makeDeadline(String description, String by) {","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"PetrichorPrecipice"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"PetrichorPrecipice"},"content":"            String trimmedDescription \u003d description.trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"PetrichorPrecipice"},"content":"            String trimmedBy \u003d by.trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"PetrichorPrecipice"},"content":"            if (trimmedDescription.length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"PetrichorPrecipice"},"content":"                throw new InvalidFormatException(\"Missing a description.\", TaskException.TaskType.DEADLINE);","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"PetrichorPrecipice"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"PetrichorPrecipice"},"content":"            String[] splitBy \u003d trimmedBy.split(\" \");","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"PetrichorPrecipice"},"content":"            if (splitBy.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"PetrichorPrecipice"},"content":"                return new Deadline(trimmedDescription, LocalDate.parse(splitBy[0]),","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"PetrichorPrecipice"},"content":"                        LocalTime.parse(splitBy[1], DateTimeFormatter.ofPattern(\"HHmm\")));","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"PetrichorPrecipice"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"PetrichorPrecipice"},"content":"                return new Deadline(trimmedDescription, LocalDate.parse(splitBy[0]));","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"PetrichorPrecipice"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"PetrichorPrecipice"},"content":"        } catch (DateTimeParseException e1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"PetrichorPrecipice"},"content":"            System.out.println(\"The date is in an invalid format! Enter the date in the format YYYY-MM-DD\");","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"PetrichorPrecipice"},"content":"        } catch (InvalidFormatException e2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"PetrichorPrecipice"},"content":"            System.out.println(e2.getMessage() + \" Please enter a description before the timing of the deadline.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"PetrichorPrecipice"},"content":"        return null;","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"PetrichorPrecipice"},"content":"    public String getDateBy() {","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"PetrichorPrecipice"},"content":"        return dateBy.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"PetrichorPrecipice"},"content":"    public String getTimeBy() {","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"PetrichorPrecipice"},"content":"        if (timeBy !\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"PetrichorPrecipice"},"content":"            return timeBy.format(DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"PetrichorPrecipice"},"content":"        return \"\";","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"PetrichorPrecipice"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"PetrichorPrecipice"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"PetrichorPrecipice"},"content":"        if (timeBy !\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"PetrichorPrecipice"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + dateBy.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) +","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"PetrichorPrecipice"},"content":"                    \" \" + timeBy.format(DateTimeFormatter.ofPattern(\"HH:mm\")) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"PetrichorPrecipice"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dateBy.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"PetrichorPrecipice"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"PetrichorPrecipice":68}},{"path":"src/main/java/alpha/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PetrichorPrecipice"},"content":"package alpha;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"PetrichorPrecipice"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"PetrichorPrecipice"},"content":"    private int index;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"PetrichorPrecipice"},"content":"    public DeleteCommand(TaskList taskList, FileHandler fileHandler, UI ui, int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"PetrichorPrecipice"},"content":"        super(taskList, fileHandler, ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"PetrichorPrecipice"},"content":"        isExit \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"PetrichorPrecipice"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"PetrichorPrecipice"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"PetrichorPrecipice"},"content":"    public void execute() {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"PetrichorPrecipice"},"content":"        ui.delete(taskList.delete(index), taskList.size());","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"PetrichorPrecipice"},"content":"        fileHandler.delete(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"PetrichorPrecipice"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"PetrichorPrecipice":18}},{"path":"src/main/java/alpha/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PetrichorPrecipice"},"content":"package alpha;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"PetrichorPrecipice"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"PetrichorPrecipice"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"PetrichorPrecipice"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"PetrichorPrecipice"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"PetrichorPrecipice"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"PetrichorPrecipice"},"content":" * Class representation of an event which has both a start and end time.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"PetrichorPrecipice"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"PetrichorPrecipice"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"PetrichorPrecipice"},"content":"    private LocalDate startDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"PetrichorPrecipice"},"content":"    private LocalDate endDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"PetrichorPrecipice"},"content":"    private LocalTime startTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"PetrichorPrecipice"},"content":"    private LocalTime endTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"PetrichorPrecipice"},"content":"    private Event(String description, LocalDate startDate, LocalTime startTime, LocalDate endDate, LocalTime endTime) {","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"PetrichorPrecipice"},"content":"        super(description);","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"PetrichorPrecipice"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"PetrichorPrecipice"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"PetrichorPrecipice"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"PetrichorPrecipice"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"PetrichorPrecipice"},"content":"    private Event(String description, LocalDate startDate, LocalDate endDate, LocalTime endTime) {","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"PetrichorPrecipice"},"content":"        super(description);","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"PetrichorPrecipice"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"PetrichorPrecipice"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"PetrichorPrecipice"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"PetrichorPrecipice"},"content":"    private Event(String description, LocalDate startDate, LocalTime startTime, LocalDate endDate) {","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"PetrichorPrecipice"},"content":"        super(description);","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"PetrichorPrecipice"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"PetrichorPrecipice"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"PetrichorPrecipice"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"PetrichorPrecipice"},"content":"    private Event(String description, LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"PetrichorPrecipice"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"PetrichorPrecipice"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"PetrichorPrecipice"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"PetrichorPrecipice"},"content":"    public static Event makeEvent(String description, String start, String end) {","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"PetrichorPrecipice"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"PetrichorPrecipice"},"content":"        String trimmedStart \u003d start.trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"PetrichorPrecipice"},"content":"        String trimmedEnd \u003d end.trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"PetrichorPrecipice"},"content":"        String[] splitStart \u003d trimmedStart.split(\" \");","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"PetrichorPrecipice"},"content":"        String[] splitEnd \u003d trimmedEnd.split(\" \");","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"PetrichorPrecipice"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"PetrichorPrecipice"},"content":"            if (trimmedDescription.length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"PetrichorPrecipice"},"content":"                throw new InvalidFormatException(\"Missing a description!\", TaskException.TaskType.EVENT);","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"PetrichorPrecipice"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"PetrichorPrecipice"},"content":"            if (splitStart.length \u003d\u003d 2 \u0026\u0026 splitEnd.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"PetrichorPrecipice"},"content":"                return new Event(trimmedDescription, LocalDate.parse(splitStart[0]), LocalTime.parse(splitStart[1],","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"PetrichorPrecipice"},"content":"                        DateTimeFormatter.ofPattern(\"HHmm\")), LocalDate.parse(splitEnd[0]),","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"PetrichorPrecipice"},"content":"                        LocalTime.parse(splitEnd[1], DateTimeFormatter.ofPattern(\"HHmm\")));","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"PetrichorPrecipice"},"content":"            } else if (splitStart.length \u003d\u003d 2 \u0026\u0026 splitEnd.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"PetrichorPrecipice"},"content":"                return new Event(trimmedDescription, LocalDate.parse(splitStart[0]), LocalTime.parse(splitStart[1],","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"PetrichorPrecipice"},"content":"                        DateTimeFormatter.ofPattern(\"HHmm\")), LocalDate.parse(splitEnd[0]));","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"PetrichorPrecipice"},"content":"            } else if (splitStart.length \u003d\u003d 1 \u0026\u0026 splitEnd.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"PetrichorPrecipice"},"content":"                return new Event(trimmedDescription, LocalDate.parse(splitStart[0]), LocalDate.parse(splitEnd[0]),","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"PetrichorPrecipice"},"content":"                        LocalTime.parse(splitEnd[1], DateTimeFormatter.ofPattern(\"HHmm\")));","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"PetrichorPrecipice"},"content":"            } else if (splitStart.length \u003d\u003d 1 \u0026\u0026 splitEnd.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"PetrichorPrecipice"},"content":"                return new Event(trimmedDescription, LocalDate.parse(splitStart[0]), LocalDate.parse(splitEnd[0]));","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"PetrichorPrecipice"},"content":"            } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"PetrichorPrecipice"},"content":"                return null;","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"PetrichorPrecipice"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"PetrichorPrecipice"},"content":"        } catch (DateTimeParseException e1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"PetrichorPrecipice"},"content":"            System.out.println(\"The date/time is in an invalid format! Enter\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"PetrichorPrecipice"},"content":"                    \" the date in the format YYYY-MM-DD HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"PetrichorPrecipice"},"content":"            return null;","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"PetrichorPrecipice"},"content":"        } catch (InvalidFormatException e2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"PetrichorPrecipice"},"content":"            System.out.println(e2.getMessage() + \" Please enter a description between \" +","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"PetrichorPrecipice"},"content":"                    \"the start and end timings of the event.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"PetrichorPrecipice"},"content":"            return null;","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"PetrichorPrecipice"},"content":"    public String getStart() {","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"PetrichorPrecipice"},"content":"        return startDate.toString() + getStartTime();","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"PetrichorPrecipice"},"content":"    public String getEnd() {","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"PetrichorPrecipice"},"content":"        return endDate.toString() + getEndTime();","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"PetrichorPrecipice"},"content":"    private String getStartTime() {","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"PetrichorPrecipice"},"content":"        if (startTime !\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"PetrichorPrecipice"},"content":"            return \" \" + startTime.format(DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":94,"author":{"gitId":"PetrichorPrecipice"},"content":"        return \"\";","lastModifiedDate":"2023-08-28"},{"lineNumber":95,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":97,"author":{"gitId":"PetrichorPrecipice"},"content":"    private String getEndTime() {","lastModifiedDate":"2023-08-28"},{"lineNumber":98,"author":{"gitId":"PetrichorPrecipice"},"content":"        if (endTime !\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"PetrichorPrecipice"},"content":"            return \" \" + endTime.format(DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":101,"author":{"gitId":"PetrichorPrecipice"},"content":"        return \"\";","lastModifiedDate":"2023-08-28"},{"lineNumber":102,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":103,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":104,"author":{"gitId":"PetrichorPrecipice"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":105,"author":{"gitId":"PetrichorPrecipice"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":106,"author":{"gitId":"PetrichorPrecipice"},"content":"        String output \u003d \"[E]\" + super.toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"PetrichorPrecipice"},"content":"        String startDate \u003d \" (from: \" + this.startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-08-28"},{"lineNumber":108,"author":{"gitId":"PetrichorPrecipice"},"content":"        String startTime \u003d (this.startTime !\u003d null) ? \" \" + this.startTime.format(DateTimeFormatter.ofPattern(\"HH:mm\")) : \"\";","lastModifiedDate":"2023-08-28"},{"lineNumber":109,"author":{"gitId":"PetrichorPrecipice"},"content":"        String endDate \u003d \" to: \" + this.endDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-08-28"},{"lineNumber":110,"author":{"gitId":"PetrichorPrecipice"},"content":"        String endTime \u003d (this.endTime !\u003d null) ? \" \" + this.endTime.format(DateTimeFormatter.ofPattern(\"HH:mm\")) + \")\" : \")\";","lastModifiedDate":"2023-08-28"},{"lineNumber":111,"author":{"gitId":"PetrichorPrecipice"},"content":"        return output + startDate + startTime + endDate + endTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":112,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":113,"author":{"gitId":"PetrichorPrecipice"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"PetrichorPrecipice":113}},{"path":"src/main/java/alpha/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PetrichorPrecipice"},"content":"package alpha;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"PetrichorPrecipice"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"PetrichorPrecipice"},"content":"    public ExitCommand(TaskList taskList, FileHandler fileHandler, UI ui) {","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"PetrichorPrecipice"},"content":"        super(taskList, fileHandler, ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"PetrichorPrecipice"},"content":"        isExit \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"PetrichorPrecipice"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"PetrichorPrecipice"},"content":"    public void execute() {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"PetrichorPrecipice"},"content":"        // No need to do anything here for an ExitCommand","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"PetrichorPrecipice"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"PetrichorPrecipice":14}},{"path":"src/main/java/alpha/FileHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PetrichorPrecipice"},"content":"package alpha;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"PetrichorPrecipice"},"content":"import java.io.File;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"PetrichorPrecipice"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"PetrichorPrecipice"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"PetrichorPrecipice"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"PetrichorPrecipice"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"PetrichorPrecipice"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"PetrichorPrecipice"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"PetrichorPrecipice"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"PetrichorPrecipice"},"content":" * Class that handles creating the file, reading from the file, storing tasks to the file and updating the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"PetrichorPrecipice"},"content":" *","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"PetrichorPrecipice"},"content":" * @author Wong Joon Hung","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"PetrichorPrecipice"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"PetrichorPrecipice"},"content":"public class FileHandler {","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"PetrichorPrecipice"},"content":"    private boolean isCreated \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"PetrichorPrecipice"},"content":"    private File alphaTxt \u003d new File(new File(System.getProperty(\"user.dir\")) +","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"PetrichorPrecipice"},"content":"            File.separator + \"data\" + File.separator + \"alpha.txt\");","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"PetrichorPrecipice"},"content":"    private FileWriter writer;","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"PetrichorPrecipice"},"content":"    private BufferedReader reader;","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"PetrichorPrecipice"},"content":"    public FileHandler() {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Checks for the existence of the data/alpha.txt file. Creates it if it does not exist.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"PetrichorPrecipice"},"content":"    public void checkAndCreate() {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"PetrichorPrecipice"},"content":"        boolean directoryExists \u003d java.nio.file.Files.exists(java.nio.file.Paths.get(\"data\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"PetrichorPrecipice"},"content":"        // Check if the file exists","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"PetrichorPrecipice"},"content":"        boolean dataExists \u003d java.nio.file.Files.exists(java.nio.file.Paths.get(\"data\", \"alpha.txt\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"PetrichorPrecipice"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"PetrichorPrecipice"},"content":"            if (!directoryExists) {","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"PetrichorPrecipice"},"content":"                new File(\"data\").mkdir();","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"PetrichorPrecipice"},"content":"                isCreated \u003d alphaTxt.createNewFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"PetrichorPrecipice"},"content":"            } else if (!dataExists) {","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"PetrichorPrecipice"},"content":"                isCreated \u003d alphaTxt.createNewFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"PetrichorPrecipice"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"PetrichorPrecipice"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"PetrichorPrecipice"},"content":"            System.out.println(\"There was a problem reading data from the file.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Checks if the file is created or not. If not, it reads any tasks from the file and adds them to the current","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"PetrichorPrecipice"},"content":"     * task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @return a new task list with tasks from the file added.","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"PetrichorPrecipice"},"content":"    public TaskList readFromFile() {","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"PetrichorPrecipice"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"PetrichorPrecipice"},"content":"        if (isCreated) {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"PetrichorPrecipice"},"content":"            return taskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"PetrichorPrecipice"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"PetrichorPrecipice"},"content":"            Scanner sc \u003d new Scanner(alphaTxt);","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"PetrichorPrecipice"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"PetrichorPrecipice"},"content":"                String input \u003d sc.nextLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"PetrichorPrecipice"},"content":"                String[] splitInput \u003d input.split(\"\\\\|\");","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"PetrichorPrecipice"},"content":"                String type \u003d splitInput[0];","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"PetrichorPrecipice"},"content":"                String checked \u003d splitInput[1];","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"PetrichorPrecipice"},"content":"                String description \u003d splitInput[2].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"PetrichorPrecipice"},"content":"                Task task;","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"PetrichorPrecipice"},"content":"                if (type.equals(\"T \")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"PetrichorPrecipice"},"content":"                    task \u003d ToDo.createToDo(description);","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"PetrichorPrecipice"},"content":"                } else if (type.equals(\"D \")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"PetrichorPrecipice"},"content":"                    task \u003d Deadline.makeDeadline(description, splitInput[3]);","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"PetrichorPrecipice"},"content":"                } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"PetrichorPrecipice"},"content":"                    task \u003d Event.makeEvent(description, splitInput[3], splitInput[4]);","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"PetrichorPrecipice"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"PetrichorPrecipice"},"content":"                if (checked.equals(\"X\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"PetrichorPrecipice"},"content":"                    assert task !\u003d null;","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"PetrichorPrecipice"},"content":"                    task.mark();","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"PetrichorPrecipice"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"PetrichorPrecipice"},"content":"                taskList.add(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"PetrichorPrecipice"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"PetrichorPrecipice"},"content":"            return taskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"PetrichorPrecipice"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"PetrichorPrecipice"},"content":"            System.out.println(\"The file could not be found\");","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"PetrichorPrecipice"},"content":"            return taskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Saves a task to the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @param task The task to add to the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"PetrichorPrecipice"},"content":"    // Saves Task to file whenever a Task is added","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"PetrichorPrecipice"},"content":"    public void saveToFile(Task task) {","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"PetrichorPrecipice"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"PetrichorPrecipice"},"content":"            writer \u003d new FileWriter(alphaTxt, true);","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"PetrichorPrecipice"},"content":"            if (alphaTxt.length() !\u003d 0) {","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"PetrichorPrecipice"},"content":"                writer.write(System.lineSeparator());","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"PetrichorPrecipice"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"PetrichorPrecipice"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"PetrichorPrecipice"},"content":"                writer.write(\"D |\" + task.getStatusIcon() + \"| \" + task.getDescription() + \" | \"","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"PetrichorPrecipice"},"content":"                        + ((Deadline) task).getDateBy() + \" \" + ((Deadline) task).getTimeBy());","lastModifiedDate":"2023-08-28"},{"lineNumber":101,"author":{"gitId":"PetrichorPrecipice"},"content":"            } else if (task instanceof ToDo) {","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"PetrichorPrecipice"},"content":"                writer.write(\"T |\" + task.getStatusIcon() + \"| \" + task.getDescription());","lastModifiedDate":"2023-08-27"},{"lineNumber":103,"author":{"gitId":"PetrichorPrecipice"},"content":"            } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"PetrichorPrecipice"},"content":"                writer.write(\"E |\" + task.getStatusIcon() + \"| \" + task.getDescription() + \" | \" + ((Event) task).getStart()","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"PetrichorPrecipice"},"content":"                        + \" | \" + ((Event) task).getEnd());","lastModifiedDate":"2023-08-27"},{"lineNumber":106,"author":{"gitId":"PetrichorPrecipice"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"PetrichorPrecipice"},"content":"            writer.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"PetrichorPrecipice"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"PetrichorPrecipice"},"content":"            System.out.println(\"I/O Exception\");","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Checks or unchecks a task in the file depending on the second boolean parameter.","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @param index The index of the task to be marked or unmarked.","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @param check Boolean of whether the task is to be checked or unchecked.","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"PetrichorPrecipice"},"content":"    // Checks or unchecks a task in the file. Does so by creating a temp file that copies everything over","lastModifiedDate":"2023-08-27"},{"lineNumber":120,"author":{"gitId":"PetrichorPrecipice"},"content":"    // except the task that is being checked/unchecked.","lastModifiedDate":"2023-08-27"},{"lineNumber":121,"author":{"gitId":"PetrichorPrecipice"},"content":"    public void checkOrUncheck(int index, boolean check) {","lastModifiedDate":"2023-08-27"},{"lineNumber":122,"author":{"gitId":"PetrichorPrecipice"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":123,"author":{"gitId":"PetrichorPrecipice"},"content":"            int temp_index \u003d index;","lastModifiedDate":"2023-08-27"},{"lineNumber":124,"author":{"gitId":"PetrichorPrecipice"},"content":"            File temp \u003d File.createTempFile(\"file\", \".txt\", alphaTxt.getParentFile());","lastModifiedDate":"2023-08-27"},{"lineNumber":125,"author":{"gitId":"PetrichorPrecipice"},"content":"            writer \u003d new FileWriter(temp, true);","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"PetrichorPrecipice"},"content":"            reader \u003d new BufferedReader(new FileReader(alphaTxt));","lastModifiedDate":"2023-08-27"},{"lineNumber":127,"author":{"gitId":"PetrichorPrecipice"},"content":"            String curr \u003d reader.readLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":128,"author":{"gitId":"PetrichorPrecipice"},"content":"            while (temp_index \u003e 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":129,"author":{"gitId":"PetrichorPrecipice"},"content":"                writer.write(curr);","lastModifiedDate":"2023-08-27"},{"lineNumber":130,"author":{"gitId":"PetrichorPrecipice"},"content":"                writer.write(System.lineSeparator());","lastModifiedDate":"2023-08-27"},{"lineNumber":131,"author":{"gitId":"PetrichorPrecipice"},"content":"                temp_index--;","lastModifiedDate":"2023-08-27"},{"lineNumber":132,"author":{"gitId":"PetrichorPrecipice"},"content":"                curr \u003d reader.readLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":133,"author":{"gitId":"PetrichorPrecipice"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":134,"author":{"gitId":"PetrichorPrecipice"},"content":"            String[] currSplit \u003d curr.split(\"\\\\|\");","lastModifiedDate":"2023-08-27"},{"lineNumber":135,"author":{"gitId":"PetrichorPrecipice"},"content":"            if (check) {","lastModifiedDate":"2023-08-27"},{"lineNumber":136,"author":{"gitId":"PetrichorPrecipice"},"content":"                currSplit[1] \u003d \"X\";","lastModifiedDate":"2023-08-27"},{"lineNumber":137,"author":{"gitId":"PetrichorPrecipice"},"content":"            } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":138,"author":{"gitId":"PetrichorPrecipice"},"content":"                currSplit[1] \u003d \" \";","lastModifiedDate":"2023-08-27"},{"lineNumber":139,"author":{"gitId":"PetrichorPrecipice"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":140,"author":{"gitId":"PetrichorPrecipice"},"content":"            curr \u003d String.join(\"|\", currSplit);","lastModifiedDate":"2023-08-27"},{"lineNumber":141,"author":{"gitId":"PetrichorPrecipice"},"content":"            writer.write(curr);","lastModifiedDate":"2023-08-27"},{"lineNumber":142,"author":{"gitId":"PetrichorPrecipice"},"content":"            while ((curr \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-27"},{"lineNumber":143,"author":{"gitId":"PetrichorPrecipice"},"content":"                writer.write(System.lineSeparator());","lastModifiedDate":"2023-08-27"},{"lineNumber":144,"author":{"gitId":"PetrichorPrecipice"},"content":"                writer.write(curr);","lastModifiedDate":"2023-08-27"},{"lineNumber":145,"author":{"gitId":"PetrichorPrecipice"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":146,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":147,"author":{"gitId":"PetrichorPrecipice"},"content":"            reader.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":148,"author":{"gitId":"PetrichorPrecipice"},"content":"            writer.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":149,"author":{"gitId":"PetrichorPrecipice"},"content":"            alphaTxt.delete();","lastModifiedDate":"2023-08-27"},{"lineNumber":150,"author":{"gitId":"PetrichorPrecipice"},"content":"            temp.renameTo(alphaTxt);","lastModifiedDate":"2023-08-27"},{"lineNumber":151,"author":{"gitId":"PetrichorPrecipice"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":152,"author":{"gitId":"PetrichorPrecipice"},"content":"            System.out.println(\"There was an issue!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":153,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":154,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":155,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":156,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":157,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Deletes a task from the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @param index Index of the task to be deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"PetrichorPrecipice"},"content":"    // Deletes a task by creating a temp file and copying everything but the deleted task over.","lastModifiedDate":"2023-08-27"},{"lineNumber":163,"author":{"gitId":"PetrichorPrecipice"},"content":"    public void delete(int index) {","lastModifiedDate":"2023-08-27"},{"lineNumber":164,"author":{"gitId":"PetrichorPrecipice"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":165,"author":{"gitId":"PetrichorPrecipice"},"content":"            int temp_index \u003d index;","lastModifiedDate":"2023-08-27"},{"lineNumber":166,"author":{"gitId":"PetrichorPrecipice"},"content":"            File temp \u003d File.createTempFile(\"file\", \".txt\", alphaTxt.getParentFile());","lastModifiedDate":"2023-08-27"},{"lineNumber":167,"author":{"gitId":"PetrichorPrecipice"},"content":"            writer \u003d new FileWriter(temp, true);","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"PetrichorPrecipice"},"content":"            reader \u003d new BufferedReader(new FileReader(alphaTxt));","lastModifiedDate":"2023-08-27"},{"lineNumber":169,"author":{"gitId":"PetrichorPrecipice"},"content":"            String curr;","lastModifiedDate":"2023-08-27"},{"lineNumber":170,"author":{"gitId":"PetrichorPrecipice"},"content":"            while ((curr \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-27"},{"lineNumber":171,"author":{"gitId":"PetrichorPrecipice"},"content":"                if (temp_index \u003d\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":172,"author":{"gitId":"PetrichorPrecipice"},"content":"                    temp_index--;","lastModifiedDate":"2023-08-27"},{"lineNumber":173,"author":{"gitId":"PetrichorPrecipice"},"content":"                    continue;","lastModifiedDate":"2023-08-27"},{"lineNumber":174,"author":{"gitId":"PetrichorPrecipice"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":175,"author":{"gitId":"PetrichorPrecipice"},"content":"                if (temp_index !\u003d index \u0026\u0026 index !\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":176,"author":{"gitId":"PetrichorPrecipice"},"content":"                    writer.write(System.lineSeparator());","lastModifiedDate":"2023-08-27"},{"lineNumber":177,"author":{"gitId":"PetrichorPrecipice"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":178,"author":{"gitId":"PetrichorPrecipice"},"content":"                writer.write(curr);","lastModifiedDate":"2023-08-27"},{"lineNumber":179,"author":{"gitId":"PetrichorPrecipice"},"content":"                temp_index--;","lastModifiedDate":"2023-08-27"},{"lineNumber":180,"author":{"gitId":"PetrichorPrecipice"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":181,"author":{"gitId":"PetrichorPrecipice"},"content":"            reader.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":182,"author":{"gitId":"PetrichorPrecipice"},"content":"            writer.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":183,"author":{"gitId":"PetrichorPrecipice"},"content":"            alphaTxt.delete();","lastModifiedDate":"2023-08-27"},{"lineNumber":184,"author":{"gitId":"PetrichorPrecipice"},"content":"            temp.renameTo(alphaTxt);","lastModifiedDate":"2023-08-27"},{"lineNumber":185,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":186,"author":{"gitId":"PetrichorPrecipice"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":187,"author":{"gitId":"PetrichorPrecipice"},"content":"            System.out.println(\"There was an error!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":188,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":189,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":190,"author":{"gitId":"PetrichorPrecipice"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"PetrichorPrecipice":190}},{"path":"src/main/java/alpha/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PetrichorPrecipice"},"content":"package alpha;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"PetrichorPrecipice"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"PetrichorPrecipice"},"content":"    private final String input;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"PetrichorPrecipice"},"content":"    public FindCommand(TaskList taskList, FileHandler fh, UI ui, String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"PetrichorPrecipice"},"content":"        super(taskList, fh, ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"PetrichorPrecipice"},"content":"        isExit \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"PetrichorPrecipice"},"content":"        this.input \u003d input.trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"PetrichorPrecipice"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"PetrichorPrecipice"},"content":"    public void execute() {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"PetrichorPrecipice"},"content":"        System.out.println(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"PetrichorPrecipice"},"content":"        TaskList newList \u003d taskList.search(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"PetrichorPrecipice"},"content":"        ui.list(newList);","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"PetrichorPrecipice"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"PetrichorPrecipice":18}},{"path":"src/main/java/alpha/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PetrichorPrecipice"},"content":"package alpha;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"PetrichorPrecipice"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"PetrichorPrecipice"},"content":"    public InvalidCommand(TaskList taskList, FileHandler fileHandler, UI ui) {","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"PetrichorPrecipice"},"content":"        super(taskList, fileHandler, ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"PetrichorPrecipice"},"content":"        isExit \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"PetrichorPrecipice"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"PetrichorPrecipice"},"content":"    public void execute() {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"PetrichorPrecipice"},"content":"        // Nothing to execute for an invalid command","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"PetrichorPrecipice"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"PetrichorPrecipice":14}},{"path":"src/main/java/alpha/InvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PetrichorPrecipice"},"content":"package alpha;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"PetrichorPrecipice"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"PetrichorPrecipice"},"content":" * Exception thrown when a task is input with an invalid format.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"PetrichorPrecipice"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"PetrichorPrecipice"},"content":"public class InvalidFormatException extends TaskException {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"PetrichorPrecipice"},"content":"    public InvalidFormatException(String errorMessage, TaskType task) {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"PetrichorPrecipice"},"content":"        super(errorMessage, task);","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"PetrichorPrecipice"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"PetrichorPrecipice":11}},{"path":"src/main/java/alpha/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PetrichorPrecipice"},"content":"package alpha;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"PetrichorPrecipice"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"PetrichorPrecipice"},"content":" * Exception thrown when using an invalid index to mark, delete, or unmark a task.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"PetrichorPrecipice"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"PetrichorPrecipice"},"content":"public class InvalidIndexException extends AlphaException {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"PetrichorPrecipice"},"content":"    public InvalidIndexException(String errorMessage) {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"PetrichorPrecipice"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"PetrichorPrecipice"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"PetrichorPrecipice":10}},{"path":"src/main/java/alpha/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PetrichorPrecipice"},"content":"package alpha;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"PetrichorPrecipice"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"PetrichorPrecipice"},"content":" * Exception thrown when an input is not recognized.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"PetrichorPrecipice"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"PetrichorPrecipice"},"content":"public class InvalidInputException extends AlphaException {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"PetrichorPrecipice"},"content":"    public InvalidInputException(String errorMessage) {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"PetrichorPrecipice"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"PetrichorPrecipice"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"PetrichorPrecipice":10}},{"path":"src/main/java/alpha/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PetrichorPrecipice"},"content":"package alpha;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"PetrichorPrecipice"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"PetrichorPrecipice"},"content":"    public ListCommand(TaskList taskList, FileHandler fileHandler, UI ui) {","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"PetrichorPrecipice"},"content":"        super(taskList, fileHandler, ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"PetrichorPrecipice"},"content":"        isExit \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"PetrichorPrecipice"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"PetrichorPrecipice"},"content":"    public void execute() {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"PetrichorPrecipice"},"content":"        ui.list(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"PetrichorPrecipice"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"PetrichorPrecipice":14}},{"path":"src/main/java/alpha/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PetrichorPrecipice"},"content":"package alpha;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"PetrichorPrecipice"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"PetrichorPrecipice"},"content":"    private int index;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"PetrichorPrecipice"},"content":"    public MarkCommand(TaskList taskList, FileHandler fileHandler, UI ui, int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"PetrichorPrecipice"},"content":"        super(taskList, fileHandler, ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"PetrichorPrecipice"},"content":"        isExit \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"PetrichorPrecipice"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"PetrichorPrecipice"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"PetrichorPrecipice"},"content":"    public void execute() {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"PetrichorPrecipice"},"content":"        ui.mark(taskList.mark(index));","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"PetrichorPrecipice"},"content":"        fileHandler.checkOrUncheck(index, true);","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"PetrichorPrecipice"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"PetrichorPrecipice":18}},{"path":"src/main/java/alpha/MissingIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PetrichorPrecipice"},"content":"package alpha;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"PetrichorPrecipice"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"PetrichorPrecipice"},"content":" * Exception thrown when using a missing index to mark, delete, or unmark a task.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"PetrichorPrecipice"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"PetrichorPrecipice"},"content":"public class MissingIndexException extends AlphaException {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"PetrichorPrecipice"},"content":"    public MissingIndexException(String errorMessage) {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"PetrichorPrecipice"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"PetrichorPrecipice"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"PetrichorPrecipice":10}},{"path":"src/main/java/alpha/MissingInfoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PetrichorPrecipice"},"content":"package alpha;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"PetrichorPrecipice"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"PetrichorPrecipice"},"content":" * Exception thrown when a task is inputted with missing information.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"PetrichorPrecipice"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"PetrichorPrecipice"},"content":"public class MissingInfoException extends TaskException {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"PetrichorPrecipice"},"content":"    public MissingInfoException(String errorMessage, TaskType task) {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"PetrichorPrecipice"},"content":"        super(errorMessage, task);","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"PetrichorPrecipice"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"PetrichorPrecipice":11}},{"path":"src/main/java/alpha/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PetrichorPrecipice"},"content":"package alpha;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"PetrichorPrecipice"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"PetrichorPrecipice"},"content":" * Class that handles the user\u0027s inputs and makes sense of them. Uses certain key phrases for different commands.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"PetrichorPrecipice"},"content":" *","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"PetrichorPrecipice"},"content":" * @author Wong Joon Hung","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"PetrichorPrecipice"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"PetrichorPrecipice"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"PetrichorPrecipice"},"content":"    private final static String END \u003d \"bye\";","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"PetrichorPrecipice"},"content":"    private final static String LIST \u003d \"list\";","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"PetrichorPrecipice"},"content":"    private final static String CHECK \u003d \"mark\";","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"PetrichorPrecipice"},"content":"    private final static String UNCHECK \u003d \"unmark\";","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"PetrichorPrecipice"},"content":"    private final static String TODO \u003d \"todo\";","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"PetrichorPrecipice"},"content":"    private final static String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"PetrichorPrecipice"},"content":"    private final static String EVENT \u003d \"event\";","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"PetrichorPrecipice"},"content":"    private final static String DELETE \u003d \"delete\";","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"PetrichorPrecipice"},"content":"    private final static String FIND \u003d \"find\";","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"PetrichorPrecipice"},"content":"    private FileHandler fileHandler;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"PetrichorPrecipice"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"PetrichorPrecipice"},"content":"    private UI ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Constructor for the class Parser.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @param fileHandler FileHandler to write to.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @param taskList    TaskList to add tasks to.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @param ui          User Interface to output responses for Alpha.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"PetrichorPrecipice"},"content":"    public Parser(FileHandler fileHandler, TaskList taskList, UI ui) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"PetrichorPrecipice"},"content":"        this.fileHandler \u003d fileHandler;","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"PetrichorPrecipice"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"PetrichorPrecipice"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Returns a command based on the user\u0027s input.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @param input User input to be parsed.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @return Command to be executed.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"PetrichorPrecipice"},"content":"    public Command parse(String input) {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"PetrichorPrecipice"},"content":"        String[] splitInput \u003d input.split(\" \"); // Splits string to check for \"mark\" or \"unmark\"","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"PetrichorPrecipice"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"PetrichorPrecipice"},"content":"            if (input.equals(LIST)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"PetrichorPrecipice"},"content":"                return this.list();","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"PetrichorPrecipice"},"content":"            } else if (splitInput[0].equals(CHECK)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"PetrichorPrecipice"},"content":"                return check(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"PetrichorPrecipice"},"content":"            } else if (splitInput[0].equals(UNCHECK)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"PetrichorPrecipice"},"content":"                return uncheck(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"PetrichorPrecipice"},"content":"            } else if (splitInput[0].equals(DEADLINE)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"PetrichorPrecipice"},"content":"                return addDeadline(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"PetrichorPrecipice"},"content":"            } else if (splitInput[0].equals(EVENT)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"PetrichorPrecipice"},"content":"                return addEvent(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"PetrichorPrecipice"},"content":"            } else if (splitInput[0].equals(TODO)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"PetrichorPrecipice"},"content":"                return addToDo(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"PetrichorPrecipice"},"content":"            } else if (input.equals(TODO)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"PetrichorPrecipice"},"content":"                return delete(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"PetrichorPrecipice"},"content":"            } else if (input.equals(END)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"PetrichorPrecipice"},"content":"                return new ExitCommand(taskList, fileHandler, ui);","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"PetrichorPrecipice"},"content":"            } else if (splitInput[0].equals(DELETE)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"PetrichorPrecipice"},"content":"                return delete(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"PetrichorPrecipice"},"content":"            } else if (splitInput[0].equals(FIND)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"PetrichorPrecipice"},"content":"                return find(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"PetrichorPrecipice"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"PetrichorPrecipice"},"content":"                throw new InvalidInputException(\"Invalid Input!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"PetrichorPrecipice"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"PetrichorPrecipice"},"content":"        } catch (MissingIndexException e1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"PetrichorPrecipice"},"content":"            System.out.println(e1.getMessage() + \" Please enter the index of the number you would like to mark.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"PetrichorPrecipice"},"content":"            return new InvalidCommand(taskList, fileHandler, ui);","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"PetrichorPrecipice"},"content":"        } catch (InvalidIndexException e2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"PetrichorPrecipice"},"content":"            System.out.println(e2.getMessage() + \" Please enter a valid index. To check all valid indices, \" +","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"PetrichorPrecipice"},"content":"                    \"type \\\"list\\\" and press ENTER\");","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"PetrichorPrecipice"},"content":"            return new InvalidCommand(taskList, fileHandler, ui);","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"PetrichorPrecipice"},"content":"        } catch (InvalidInputException e3) {","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"PetrichorPrecipice"},"content":"            System.out.println(e3.getMessage() + \" Please input something meaningful.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"PetrichorPrecipice"},"content":"            return new InvalidCommand(taskList, fileHandler, ui);","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"PetrichorPrecipice"},"content":"        } catch (NumberFormatException e4) {","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"PetrichorPrecipice"},"content":"            System.out.println(\"Please enter a number.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"PetrichorPrecipice"},"content":"            return new InvalidCommand(taskList, fileHandler, ui);","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"PetrichorPrecipice"},"content":"        } catch (InvalidFormatException | MissingInfoException e5) {","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"PetrichorPrecipice"},"content":"            if (e5.getTask() \u003d\u003d TaskException.TaskType.TODO) {","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"PetrichorPrecipice"},"content":"                System.out.println(e5.getMessage() + \" Please enter a todo in the \" +","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"PetrichorPrecipice"},"content":"                        \"format \\\"todo YOUR_DESCRIPTION\\\"\");","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"PetrichorPrecipice"},"content":"            } else if (e5.getTask() \u003d\u003d TaskException.TaskType.DEADLINE) {","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"PetrichorPrecipice"},"content":"                System.out.println(e5.getMessage() + \" Please enter a deadline in the format \" +","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"PetrichorPrecipice"},"content":"                        \"\\\"deadline YOUR_DESCRIPTION /by YOUR_TIME\\\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"PetrichorPrecipice"},"content":"            } else if (e5.getTask() \u003d\u003d TaskException.TaskType.EVENT) {","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"PetrichorPrecipice"},"content":"                System.out.println(e5.getMessage() + \" Please enter an event in the format \" +","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"PetrichorPrecipice"},"content":"                        \"\\\"event YOUR_DESCRIPTION \" +","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"PetrichorPrecipice"},"content":"                        \"/from START_TIME /to END_TIME\\\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"PetrichorPrecipice"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"PetrichorPrecipice"},"content":"            return new InvalidCommand(taskList, fileHandler, ui);","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Returns a list command.","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @return Command that lists all the stored tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"PetrichorPrecipice"},"content":"    public Command list() {","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"PetrichorPrecipice"},"content":"        return new ListCommand(taskList, fileHandler, ui);","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Returns a Command that adds an event based on an input.","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @return a Command that adds an event.","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @throws MissingInfoException   If length of splitInput \u003c 3","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @throws InvalidFormatException If /from and /to are not found within the input.","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"PetrichorPrecipice"},"content":"    public Command addEvent(String input) throws MissingInfoException, InvalidFormatException {","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"PetrichorPrecipice"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"PetrichorPrecipice"},"content":"        if (splitInput.length \u003c 3) {","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"PetrichorPrecipice"},"content":"            throw new MissingInfoException(\"Missing Information!\", TaskException.TaskType.EVENT);","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"PetrichorPrecipice"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"PetrichorPrecipice"},"content":"            String[] splitEvent \u003d input.split(\"/\");","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"PetrichorPrecipice"},"content":"            if (splitEvent[1].startsWith(\"from\") \u0026\u0026 splitEvent[2].startsWith(\"to\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"PetrichorPrecipice"},"content":"                Event event \u003d Event.makeEvent(splitEvent[0].substring(6),","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"PetrichorPrecipice"},"content":"                        splitEvent[1].substring(5),","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"PetrichorPrecipice"},"content":"                        splitEvent[2].substring(3));","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"PetrichorPrecipice"},"content":"                return new AddCommand(taskList, fileHandler, ui, event);","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"PetrichorPrecipice"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"PetrichorPrecipice"},"content":"                throw new InvalidFormatException(\"Invalid Format!\", TaskException.TaskType.EVENT);","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"PetrichorPrecipice"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Returns a Command that adds a ToDo based on an input.","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @return a Command that adds a ToDo.","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @throws MissingInfoException If length of splitInput \u003d\u003d 1","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"PetrichorPrecipice"},"content":"    public Command addToDo(String input) throws MissingInfoException {","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"PetrichorPrecipice"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"PetrichorPrecipice"},"content":"        if (splitInput.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"PetrichorPrecipice"},"content":"            throw new MissingInfoException(\"Missing Information!\", TaskException.TaskType.TODO);","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"PetrichorPrecipice"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"PetrichorPrecipice"},"content":"            ToDo todo \u003d ToDo.createToDo(input.substring(5));","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"PetrichorPrecipice"},"content":"            return new AddCommand(taskList, fileHandler, ui, todo);","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Returns a Command that adds a deadline based on an input.","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @return a Command that adds a ToDo.","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @throws MissingInfoException If length of splitInput \u003d\u003d 1","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"PetrichorPrecipice"},"content":"    public Command addDeadline(String input) throws MissingInfoException, InvalidFormatException {","lastModifiedDate":"2023-08-30"},{"lineNumber":154,"author":{"gitId":"PetrichorPrecipice"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"PetrichorPrecipice"},"content":"        if (splitInput.length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"PetrichorPrecipice"},"content":"            throw new MissingInfoException(\"Missing Information!\", TaskException.TaskType.DEADLINE);","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"PetrichorPrecipice"},"content":"        } else if (input.split(\"/by\").length !\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"PetrichorPrecipice"},"content":"            throw new InvalidFormatException(\"Invalid Format!\", TaskException.TaskType.DEADLINE);","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"PetrichorPrecipice"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"PetrichorPrecipice"},"content":"            String[] splitDeadline \u003d input.split(\"/by\");","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"PetrichorPrecipice"},"content":"            Deadline deadline \u003d Deadline.makeDeadline(splitDeadline[0].substring(9),","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"PetrichorPrecipice"},"content":"                    splitDeadline[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"PetrichorPrecipice"},"content":"            return new AddCommand(taskList, fileHandler, ui, deadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Returns a Command that deletes a task from storage based on an input.","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @return a Command that deletes a task.","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @throws MissingIndexException if the index is missing.","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @throws InvalidIndexException if the index exceeds or is lesser than the number of stored tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":173,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"PetrichorPrecipice"},"content":"    public Command delete(String input) throws MissingIndexException, InvalidIndexException {","lastModifiedDate":"2023-08-30"},{"lineNumber":175,"author":{"gitId":"PetrichorPrecipice"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":176,"author":{"gitId":"PetrichorPrecipice"},"content":"        if (splitInput.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":177,"author":{"gitId":"PetrichorPrecipice"},"content":"            throw new MissingIndexException(\"Missing Index!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":178,"author":{"gitId":"PetrichorPrecipice"},"content":"        } else if (Integer.parseInt(splitInput[1]) \u003e taskList.size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":179,"author":{"gitId":"PetrichorPrecipice"},"content":"            throw new InvalidIndexException(\"Invalid Index!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":180,"author":{"gitId":"PetrichorPrecipice"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":181,"author":{"gitId":"PetrichorPrecipice"},"content":"            return new DeleteCommand(taskList, fileHandler, ui, Integer.parseInt(splitInput[1]));","lastModifiedDate":"2023-08-30"},{"lineNumber":182,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":183,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":184,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":185,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":186,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Returns a Command that checks a task based on an index.","lastModifiedDate":"2023-08-31"},{"lineNumber":187,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":188,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @return a Command that checks a task.","lastModifiedDate":"2023-08-31"},{"lineNumber":189,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @throws MissingIndexException if the index is missing.","lastModifiedDate":"2023-08-31"},{"lineNumber":190,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @throws InvalidIndexException if the index exceeds or is lesser than the number of stored tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":191,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":192,"author":{"gitId":"PetrichorPrecipice"},"content":"    public Command check(String input) throws MissingIndexException, InvalidIndexException {","lastModifiedDate":"2023-08-30"},{"lineNumber":193,"author":{"gitId":"PetrichorPrecipice"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":194,"author":{"gitId":"PetrichorPrecipice"},"content":"        if (splitInput.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":195,"author":{"gitId":"PetrichorPrecipice"},"content":"            throw new MissingIndexException(\"Missing Index!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":196,"author":{"gitId":"PetrichorPrecipice"},"content":"        } else if (Integer.parseInt(splitInput[1]) \u003e taskList.size() || splitInput.length \u003e 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":197,"author":{"gitId":"PetrichorPrecipice"},"content":"            throw new InvalidIndexException(\"Invalid Index!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":198,"author":{"gitId":"PetrichorPrecipice"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":199,"author":{"gitId":"PetrichorPrecipice"},"content":"            return new MarkCommand(taskList, fileHandler, ui, Integer.parseInt(splitInput[1]));","lastModifiedDate":"2023-08-30"},{"lineNumber":200,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":201,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":202,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":203,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":204,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Returns a Command that unchecks a task based on an index.","lastModifiedDate":"2023-08-31"},{"lineNumber":205,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":206,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @return a Command that unchecks a task.","lastModifiedDate":"2023-08-31"},{"lineNumber":207,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @throws MissingIndexException if the index is missing.","lastModifiedDate":"2023-08-31"},{"lineNumber":208,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @throws InvalidIndexException if the index exceeds or is lesser than the number of stored tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":209,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":210,"author":{"gitId":"PetrichorPrecipice"},"content":"    public Command uncheck(String input) throws MissingIndexException, InvalidIndexException {","lastModifiedDate":"2023-08-30"},{"lineNumber":211,"author":{"gitId":"PetrichorPrecipice"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":212,"author":{"gitId":"PetrichorPrecipice"},"content":"        if (splitInput.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":213,"author":{"gitId":"PetrichorPrecipice"},"content":"            throw new MissingIndexException(\"Missing Index!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":214,"author":{"gitId":"PetrichorPrecipice"},"content":"        } else if (Integer.parseInt(splitInput[1]) \u003e taskList.size() || splitInput.length \u003e 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":215,"author":{"gitId":"PetrichorPrecipice"},"content":"            throw new InvalidIndexException(\"Invalid Index!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":216,"author":{"gitId":"PetrichorPrecipice"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":217,"author":{"gitId":"PetrichorPrecipice"},"content":"            return new UnmarkCommand(taskList, fileHandler, ui, Integer.parseInt(splitInput[1]));","lastModifiedDate":"2023-08-31"},{"lineNumber":218,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":219,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":220,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":221,"author":{"gitId":"PetrichorPrecipice"},"content":"    public Command find(String input) throws MissingIndexException {","lastModifiedDate":"2023-08-31"},{"lineNumber":222,"author":{"gitId":"PetrichorPrecipice"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":223,"author":{"gitId":"PetrichorPrecipice"},"content":"        if (splitInput.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":224,"author":{"gitId":"PetrichorPrecipice"},"content":"            throw new MissingIndexException(\"Missing Index!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":225,"author":{"gitId":"PetrichorPrecipice"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":226,"author":{"gitId":"PetrichorPrecipice"},"content":"            splitInput[0] \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":227,"author":{"gitId":"PetrichorPrecipice"},"content":"            return new FindCommand(taskList, fileHandler, ui, String.join(\" \", splitInput));","lastModifiedDate":"2023-08-31"},{"lineNumber":228,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":229,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":230,"author":{"gitId":"PetrichorPrecipice"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"PetrichorPrecipice":230}},{"path":"src/main/java/alpha/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PetrichorPrecipice"},"content":"package alpha;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"PetrichorPrecipice"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"PetrichorPrecipice"},"content":" * Class representation of a task.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"PetrichorPrecipice"},"content":" *","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"PetrichorPrecipice"},"content":" * @author Wong Joon Hung","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"PetrichorPrecipice"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"PetrichorPrecipice"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"PetrichorPrecipice"},"content":"    private String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"PetrichorPrecipice"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Constructor for Task class. Sets isDone to false since tasks are entered unchecked.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"PetrichorPrecipice"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"PetrichorPrecipice"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"PetrichorPrecipice"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @return Description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"PetrichorPrecipice"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"PetrichorPrecipice"},"content":"        return description;","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Returns the marked/unmarked status of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @return \"X\" if marked, \" \" if not.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"PetrichorPrecipice"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"PetrichorPrecipice"},"content":"        return isDone ? \"X\" : \" \"; // Mark task done with X","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"PetrichorPrecipice"},"content":"    public void mark() {","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"PetrichorPrecipice"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"PetrichorPrecipice"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"PetrichorPrecipice"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Returns the String representation of a task, including its marked status and description.","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @return String representation of a task.","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"PetrichorPrecipice"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"PetrichorPrecipice"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"PetrichorPrecipice"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"PetrichorPrecipice"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"PetrichorPrecipice":64}},{"path":"src/main/java/alpha/TaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PetrichorPrecipice"},"content":"package alpha;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"PetrichorPrecipice"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"PetrichorPrecipice"},"content":" * Class to handle exceptions related to entering tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"PetrichorPrecipice"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"PetrichorPrecipice"},"content":"public abstract class TaskException extends AlphaException {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Enumeration of task types.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"PetrichorPrecipice"},"content":"    public enum TaskType {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"PetrichorPrecipice"},"content":"        DEADLINE,","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"PetrichorPrecipice"},"content":"        TODO,","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"PetrichorPrecipice"},"content":"        EVENT","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"PetrichorPrecipice"},"content":"    private TaskType task;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Constructor for TaskException class.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @param errorMessage The error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @param task         The type of task.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"PetrichorPrecipice"},"content":"    public TaskException(String errorMessage, TaskType task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"PetrichorPrecipice"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"PetrichorPrecipice"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Return the type of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @return The task type.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"PetrichorPrecipice"},"content":"    public TaskType getTask() {","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"PetrichorPrecipice"},"content":"        return task;","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"PetrichorPrecipice"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"PetrichorPrecipice":38}},{"path":"src/main/java/alpha/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PetrichorPrecipice"},"content":"package alpha;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"PetrichorPrecipice"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"PetrichorPrecipice"},"content":"import java.util.Locale;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"PetrichorPrecipice"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"PetrichorPrecipice"},"content":" * Class that stores the current list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"PetrichorPrecipice"},"content":" *","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"PetrichorPrecipice"},"content":" * @author Wong Joon Hung","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"PetrichorPrecipice"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"PetrichorPrecipice"},"content":"public class TaskList {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"PetrichorPrecipice"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Constructor for TaskList class. Creates a new ArrayList.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"PetrichorPrecipice"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"PetrichorPrecipice"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Returns the current size of the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @return the current size of the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"PetrichorPrecipice"},"content":"    public int size() {","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"PetrichorPrecipice"},"content":"        return taskList.size();","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Adds a task to the current task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"PetrichorPrecipice"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"PetrichorPrecipice"},"content":"        taskList.add(task);","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Returns the task at the given index.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @param i The index of the returned task.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @return The task at the given index.","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"PetrichorPrecipice"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"PetrichorPrecipice"},"content":"        return taskList.get(i);","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Marks a task at the given index and returns it.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @param index The index of the marked and returned task.","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @return The marked task at the given index.","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"PetrichorPrecipice"},"content":"    public Task mark(int index) {","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"PetrichorPrecipice"},"content":"        Task curr \u003d getTask(index - 1); // Decrement by 1 to match display index","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"PetrichorPrecipice"},"content":"        curr.mark();","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"PetrichorPrecipice"},"content":"        return curr;","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Unmarks a task at the given index and returns it.","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @param index The index of the unmarked and returned task.","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @return The unmarked task at the given index.","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"PetrichorPrecipice"},"content":"    public Task unmark(int index) {","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"PetrichorPrecipice"},"content":"        Task curr \u003d getTask(index - 1); // Decrement by 1 to match display index","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"PetrichorPrecipice"},"content":"        curr.unmark();","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"PetrichorPrecipice"},"content":"        return curr;","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Deletes a task at the given index and returns it.","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @param index The index of the deleted and returned task.","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @return The deleted task at the given index.","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"PetrichorPrecipice"},"content":"    public Task delete(int index) {","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"PetrichorPrecipice"},"content":"        Task curr \u003d taskList.get(index - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"PetrichorPrecipice"},"content":"        taskList.remove(index - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"PetrichorPrecipice"},"content":"        return curr;","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"PetrichorPrecipice"},"content":"    public TaskList search(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"PetrichorPrecipice"},"content":"        TaskList newList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"PetrichorPrecipice"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"PetrichorPrecipice"},"content":"            Task curr \u003d taskList.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"PetrichorPrecipice"},"content":"            if (curr.getDescription().toUpperCase().contains(input.toUpperCase())) {","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"PetrichorPrecipice"},"content":"                newList.add(curr);","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"PetrichorPrecipice"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"PetrichorPrecipice"},"content":"        return newList;","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"PetrichorPrecipice"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"PetrichorPrecipice":97}},{"path":"src/main/java/alpha/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PetrichorPrecipice"},"content":"package alpha;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"PetrichorPrecipice"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"PetrichorPrecipice"},"content":" * Class representation of a ToDo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"PetrichorPrecipice"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"PetrichorPrecipice"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Creates a ToDo instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @return A new ToDo instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"PetrichorPrecipice"},"content":"    public static ToDo createToDo(String description) {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"PetrichorPrecipice"},"content":"        return new ToDo(description);","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"PetrichorPrecipice"},"content":"    private ToDo(String description) {","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"PetrichorPrecipice"},"content":"        super(description.trim());","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"PetrichorPrecipice"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"PetrichorPrecipice"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"PetrichorPrecipice"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"PetrichorPrecipice"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"PetrichorPrecipice":26}},{"path":"src/main/java/alpha/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PetrichorPrecipice"},"content":"package alpha;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"PetrichorPrecipice"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"PetrichorPrecipice"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"PetrichorPrecipice"},"content":" * Class that handles ChatBot Alpha\u0027s inputs and outputs with the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"PetrichorPrecipice"},"content":" * Author: Wong Joon Hung","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"PetrichorPrecipice"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"PetrichorPrecipice"},"content":"public class UI {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"PetrichorPrecipice"},"content":"    private static final String LINE_SEPARATOR \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"PetrichorPrecipice"},"content":"    private String intro \u003d LINE_SEPARATOR + \"\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"PetrichorPrecipice"},"content":"            \" Hello! I\u0027m Alpha\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"PetrichorPrecipice"},"content":"            \" What can I do for you?\\n\" + LINE_SEPARATOR;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"PetrichorPrecipice"},"content":"    // Outro message","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"PetrichorPrecipice"},"content":"    private String end \u003d LINE_SEPARATOR + \"\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"PetrichorPrecipice"},"content":"            \" Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"PetrichorPrecipice"},"content":"            LINE_SEPARATOR;","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"PetrichorPrecipice"},"content":"    public UI() {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Outputs Chatbot Alpha\u0027s Introduction message.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"PetrichorPrecipice"},"content":"    public void introduce() {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"PetrichorPrecipice"},"content":"        System.out.println(intro);","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Outputs Chatbot Alpha\u0027s Goodbye message.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"PetrichorPrecipice"},"content":"    public void goodbye() {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"PetrichorPrecipice"},"content":"        System.out.println(end);","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Outputs a message to inform the user that a task was added.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @param task Task that is being added.","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @param size Current size of the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"PetrichorPrecipice"},"content":"    public void taskAdded(Task task, int size) {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"PetrichorPrecipice"},"content":"        System.out.println(LINE_SEPARATOR + \"\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"PetrichorPrecipice"},"content":"                \"Alright! I\u0027ve added this task:\\n \" + \" \" + task","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"PetrichorPrecipice"},"content":"                + \"\\nNow you have \" + size + \" tasks in the list.\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"PetrichorPrecipice"},"content":"                LINE_SEPARATOR);","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Outputs a message to tell the user a task has been marked.","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @param task Task that is being marked.","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"PetrichorPrecipice"},"content":"    public void mark(Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"PetrichorPrecipice"},"content":"        System.out.println(LINE_SEPARATOR + \"\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"PetrichorPrecipice"},"content":"                \"Nice! I\u0027ve marked this task as done:\\n\" + \"  \" +","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"PetrichorPrecipice"},"content":"                task +","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"PetrichorPrecipice"},"content":"                \"\\n\" + LINE_SEPARATOR);","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Outputs a message to tell the user a task has been unmarked.","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @param task Task that is being unmarked.","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"PetrichorPrecipice"},"content":"    public void unmark(Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"PetrichorPrecipice"},"content":"        System.out.println(LINE_SEPARATOR + \"\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"PetrichorPrecipice"},"content":"                \"Cool! I\u0027ve marked this task as not done yet:\\n\" + \"  \" +","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"PetrichorPrecipice"},"content":"                task +","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"PetrichorPrecipice"},"content":"                \"\\n\" + LINE_SEPARATOR);","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Outputs a message to tell the user a task has been deleted and the size of the remaining list.","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @param task Task that is being marked.","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @param size Remaining size of the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"PetrichorPrecipice"},"content":"    public void delete(Task task, int size) {","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"PetrichorPrecipice"},"content":"        System.out.println(LINE_SEPARATOR + \"\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"PetrichorPrecipice"},"content":"                \"Noted. I\u0027ve removed this task:\\n\" + \"  \" + task + \"\\n Now You have \" + size +","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"PetrichorPrecipice"},"content":"                \" tasks in the list.\" + \"\\n\" + LINE_SEPARATOR);","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Outputs a display of the current list.","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @param taskList Current taskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"PetrichorPrecipice"},"content":"    public void list(TaskList taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"PetrichorPrecipice"},"content":"        int size \u003d taskList.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"PetrichorPrecipice"},"content":"        if (size \u003d\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"PetrichorPrecipice"},"content":"            System.out.println(LINE_SEPARATOR + \"\\n\" + \"There are no tasks in your list.\" + \"\\n\" + LINE_SEPARATOR);","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"PetrichorPrecipice"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"PetrichorPrecipice"},"content":"            System.out.println(LINE_SEPARATOR + \"\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"PetrichorPrecipice"},"content":"                    \"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"PetrichorPrecipice"},"content":"            for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"PetrichorPrecipice"},"content":"                int plusOne \u003d i + 1; // Increment by one so starting display index is 1","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"PetrichorPrecipice"},"content":"                System.out.println(plusOne + \". \" + taskList.getTask(i));","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"PetrichorPrecipice"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"PetrichorPrecipice"},"content":"            System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Returns the current user input.","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @return the current user input.","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"PetrichorPrecipice"},"content":"    public String read() {","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"PetrichorPrecipice"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"PetrichorPrecipice"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"PetrichorPrecipice"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"PetrichorPrecipice":118}},{"path":"src/main/java/alpha/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PetrichorPrecipice"},"content":"package alpha;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"PetrichorPrecipice"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"PetrichorPrecipice"},"content":"    private final int index;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"PetrichorPrecipice"},"content":"    public UnmarkCommand(TaskList taskList, FileHandler fh, UI ui, int index) {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"PetrichorPrecipice"},"content":"        super(taskList, fh, ui);","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"PetrichorPrecipice"},"content":"        isExit \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"PetrichorPrecipice"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"PetrichorPrecipice"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"PetrichorPrecipice"},"content":"    public void execute() {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"PetrichorPrecipice"},"content":"        Task unmarkedTask \u003d taskList.unmark(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"PetrichorPrecipice"},"content":"        ui.unmark(unmarkedTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"PetrichorPrecipice"},"content":"        fileHandler.checkOrUncheck(index, false);","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"PetrichorPrecipice"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"PetrichorPrecipice":19}},{"path":"src/test/java/alpha/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PetrichorPrecipice"},"content":"package alpha;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PetrichorPrecipice"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"PetrichorPrecipice"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"PetrichorPrecipice"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"PetrichorPrecipice"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"PetrichorPrecipice"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"PetrichorPrecipice"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"PetrichorPrecipice"},"content":"public class EventTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"PetrichorPrecipice"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"PetrichorPrecipice"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"PetrichorPrecipice"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"PetrichorPrecipice"},"content":"    public void makeEvent_invalidDate_dateTimeParse_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"PetrichorPrecipice"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"PetrichorPrecipice"},"content":"        Event.makeEvent(\"meeting\", \"2022-15-01\", \"2022-20-01\");","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"PetrichorPrecipice"},"content":"        assertEquals(\"The date/time is in an invalid format! Enter the date in the format YYYY-MM-DD HHmm\\n\",","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"PetrichorPrecipice"},"content":"                outContent.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"PetrichorPrecipice"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"PetrichorPrecipice"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"PetrichorPrecipice"},"content":"    public void makeEvent_invalidTime_dateTimeParse_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"PetrichorPrecipice"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"PetrichorPrecipice"},"content":"        Event.makeEvent(\"meeting\", \"2022-01-01 2500\", \"2022-01-01\");","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"PetrichorPrecipice"},"content":"        assertEquals(\"The date/time is in an invalid format! Enter the date in the format YYYY-MM-DD HHmm\\n\",","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"PetrichorPrecipice"},"content":"                outContent.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"PetrichorPrecipice"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"PetrichorPrecipice"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"PetrichorPrecipice"},"content":"    public void makeEvent_missingDescription_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"PetrichorPrecipice"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"PetrichorPrecipice"},"content":"        Event.makeEvent(\"     \", \"2022-01-01\", \"2022-01-01\");","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"PetrichorPrecipice"},"content":"        assertEquals(\"Missing a description! Please enter a description between \" +","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"PetrichorPrecipice"},"content":"                        \"the start and end timings of the event.\\n\", outContent.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"PetrichorPrecipice"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"PetrichorPrecipice"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"PetrichorPrecipice":42}},{"path":"src/test/java/alpha/ParseTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PetrichorPrecipice"},"content":"package alpha;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"PetrichorPrecipice"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"PetrichorPrecipice"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"PetrichorPrecipice"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"PetrichorPrecipice"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"PetrichorPrecipice"},"content":"public class ParseTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"PetrichorPrecipice"},"content":"    private Parser parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"PetrichorPrecipice"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"PetrichorPrecipice"},"content":"    public void addDeadline_invalidFormat_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"PetrichorPrecipice"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"PetrichorPrecipice"},"content":"            parser \u003d new Parser(new FileHandler(), new TaskList(), new UI());","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"PetrichorPrecipice"},"content":"            assertEquals(Deadline.makeDeadline(\".\", \"2022-10-12 1200\"),","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"PetrichorPrecipice"},"content":"                    (parser.addDeadline(\"deadline meeting /by\")));","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"PetrichorPrecipice"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"PetrichorPrecipice"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"PetrichorPrecipice"},"content":"            assertEquals(\"Invalid Format!\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"PetrichorPrecipice"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"PetrichorPrecipice"},"content":"    public void addEvent_invalidFormat_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"PetrichorPrecipice"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"PetrichorPrecipice"},"content":"            parser \u003d new Parser(new FileHandler(), new TaskList(), new UI());","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"PetrichorPrecipice"},"content":"            assertEquals(\"0\", parser.addEvent(\"event meeting /fro 2022-10-10 1200 /to 2022-10-10\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"PetrichorPrecipice"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"PetrichorPrecipice"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"PetrichorPrecipice"},"content":"            assertEquals(\"Invalid Format!\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"PetrichorPrecipice"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"PetrichorPrecipice"},"content":"    public void addEvent_missingInfo_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"PetrichorPrecipice"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"PetrichorPrecipice"},"content":"            parser \u003d new Parser(new FileHandler(), new TaskList(), new UI());","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"PetrichorPrecipice"},"content":"            assertEquals(Event.makeEvent(\".\", \" \", \"  \"), (parser.addEvent(\"event meeting\")));","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"PetrichorPrecipice"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"PetrichorPrecipice"},"content":"            assertEquals(\"Missing Information!\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"PetrichorPrecipice"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"PetrichorPrecipice":46}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"PetrichorPrecipice"},"content":"eat","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"PetrichorPrecipice"},"content":"todo sleep","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"PetrichorPrecipice"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"PetrichorPrecipice"},"content":"deadline work /by 5 pm","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"PetrichorPrecipice"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"PetrichorPrecipice"},"content":"event meeting /from 6pm /to 8pm","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"PetrichorPrecipice"},"content":"unmark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"PetrichorPrecipice"},"content":"delete 2","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"PetrichorPrecipice"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"PetrichorPrecipice"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"PetrichorPrecipice":10}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"PetrichorPrecipice"},"content":"java -classpath ../bin Alpha \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"PetrichorPrecipice":1}}]
