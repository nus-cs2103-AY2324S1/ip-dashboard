[{"path":"data/blip.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"maypfv"},"content":"D | 0 | eat | 2023-10-03 14:00","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"maypfv"},"content":"T | 0 | sleep","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"maypfv"},"content":"E | 0 | project meeting | 2023-10-03 10:00 | 2023-10-04 12:00","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"maypfv":3}},{"path":"src/main/java/Blip.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maypfv"},"content":"import java.util.*;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"maypfv"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"maypfv"},"content":"import java.io.*;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"maypfv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"maypfv"},"content":"import java.nio.file.*;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"maypfv"},"content":"public class Blip {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"maypfv"},"content":"    // File path for tasks","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"maypfv"},"content":"    private static String FILE_PATH \u003d \"./data/blip.txt\";","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"maypfv"},"content":"    private static void saveToFile(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"maypfv"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"maypfv"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"maypfv"},"content":"            File fileDirectory \u003d file.getParentFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"maypfv"},"content":"            if (!fileDirectory.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"maypfv"},"content":"                fileDirectory.mkdirs();","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"maypfv"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"maypfv"},"content":"            FileWriter fileWriter \u003d new FileWriter(file);","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"maypfv"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"maypfv"},"content":"                fileWriter.write(task.saveToFileString() + \"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"maypfv"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"maypfv"},"content":"            fileWriter.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"maypfv"},"content":"        } catch (IOException e2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"maypfv"},"content":"            System.out.println(\"Error saving to file: \" + e2.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"maypfv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"maypfv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"maypfv"},"content":"    private static ArrayList\u003cTask\u003e loadFile()  {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"maypfv"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"maypfv"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"maypfv"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"maypfv"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"maypfv"},"content":"            return tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"maypfv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"maypfv"},"content":"        FileReader fileReader \u003d new FileReader(file);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"maypfv"},"content":"        BufferedReader finalReader \u003d new BufferedReader(fileReader);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"maypfv"},"content":"        String lineToRead;","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"maypfv"},"content":"        while ((lineToRead \u003d finalReader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"maypfv"},"content":"            Task task \u003d Task.loadTaskFromFile(lineToRead);","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"maypfv"},"content":"            tasks.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"maypfv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"maypfv"},"content":"        finalReader.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"maypfv"},"content":"        } catch (IOException e2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"maypfv"},"content":"            System.out.println(\"Error reading line: \" + e2.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"maypfv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"maypfv"},"content":"        return tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"maypfv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"maypfv"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"maypfv"},"content":"        // Intro message by Blip.","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"maypfv"},"content":"        String intro \u003d \"Hello! I\u0027m Blip\\n\"","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"maypfv"},"content":"                + \"What can I do for you?\";","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"maypfv"},"content":"        // Outro message by Blip.","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"maypfv"},"content":"        String outro \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"maypfv"},"content":"        // Constant end trigger word to end the chat with outro.","lastModifiedDate":"2023-08-21"},{"lineNumber":61,"author":{"gitId":"maypfv"},"content":"        String END_TRIGGER \u003d \"bye\";","lastModifiedDate":"2023-08-21"},{"lineNumber":62,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":63,"author":{"gitId":"maypfv"},"content":"        // Constant list trigger word to display back stored text.","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"maypfv"},"content":"        String LIST_TRIGGER \u003d \"list\";","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"maypfv"},"content":"        // Constant mark trigger word to update status of task.","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"maypfv"},"content":"        String MARK_TRIGGER \u003d \"mark\";","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"maypfv"},"content":"        // Constant unmark trigger word to update status of task.","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"maypfv"},"content":"        String UNMARK_TRIGGER \u003d \"unmark\";","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"maypfv"},"content":"        // Constant deadline trigger word to create new task with deadline.","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"maypfv"},"content":"        String DEADLINE_TRIGGER \u003d \"deadline\";","lastModifiedDate":"2023-08-22"},{"lineNumber":74,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":75,"author":{"gitId":"maypfv"},"content":"        // Constant event trigger word to create new task with deadline.","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"maypfv"},"content":"        String EVENT_TRIGGER \u003d \"event\";","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":78,"author":{"gitId":"maypfv"},"content":"        // Constant to do trigger word to create new task with deadline.","lastModifiedDate":"2023-08-22"},{"lineNumber":79,"author":{"gitId":"maypfv"},"content":"        String TODO_TRIGGER \u003d \"todo\";","lastModifiedDate":"2023-08-22"},{"lineNumber":80,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":81,"author":{"gitId":"maypfv"},"content":"        // Constant delete trigger to delete task from list.","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"maypfv"},"content":"        String DELETE_TRIGGER \u003d \"delete\";","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"maypfv"},"content":"        // Constant empty string for exception handling.","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"maypfv"},"content":"        String EMPTY \u003d \"\";","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":90,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":91,"author":{"gitId":"maypfv"},"content":"        // Bot starts here!","lastModifiedDate":"2023-08-22"},{"lineNumber":92,"author":{"gitId":"maypfv"},"content":"        System.out.println(intro);","lastModifiedDate":"2023-08-21"},{"lineNumber":93,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":94,"author":{"gitId":"maypfv"},"content":"        ArrayList\u003cTask\u003e tasks \u003d loadFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"maypfv"},"content":"        String userInput;","lastModifiedDate":"2023-08-21"},{"lineNumber":97,"author":{"gitId":"maypfv"},"content":"        Scanner scanIn \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-21"},{"lineNumber":98,"author":{"gitId":"maypfv"},"content":"        userInput \u003d scanIn.nextLine();","lastModifiedDate":"2023-08-21"},{"lineNumber":99,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":100,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":101,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"maypfv"},"content":"        while (!userInput.equals(END_TRIGGER)) {","lastModifiedDate":"2023-08-21"},{"lineNumber":103,"author":{"gitId":"maypfv"},"content":"            try {","lastModifiedDate":"2023-08-23"},{"lineNumber":104,"author":{"gitId":"maypfv"},"content":"                if (!userInput.equals(LIST_TRIGGER)) {","lastModifiedDate":"2023-08-22"},{"lineNumber":105,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"maypfv"},"content":"                    // To mark a task.","lastModifiedDate":"2023-08-22"},{"lineNumber":107,"author":{"gitId":"maypfv"},"content":"                    if (userInput.split(\" \")[0].equals(MARK_TRIGGER)) {","lastModifiedDate":"2023-08-22"},{"lineNumber":108,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":109,"author":{"gitId":"maypfv"},"content":"                        // Missing task number to mark.","lastModifiedDate":"2023-08-23"},{"lineNumber":110,"author":{"gitId":"maypfv"},"content":"                        if (userInput.split(\"\\\\s+\", 2).length \u003c 2) {","lastModifiedDate":"2023-08-23"},{"lineNumber":111,"author":{"gitId":"maypfv"},"content":"                            throw new EmptyTaskNumberException(\"!!! Missing Task Number Error !!!\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":112,"author":{"gitId":"maypfv"},"content":"                        }","lastModifiedDate":"2023-08-23"},{"lineNumber":113,"author":{"gitId":"maypfv"},"content":"                        int taskNum \u003d Integer.parseInt(userInput.split(\" \")[1]) - 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":114,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":115,"author":{"gitId":"maypfv"},"content":"                        // Task number does not exist.","lastModifiedDate":"2023-08-23"},{"lineNumber":116,"author":{"gitId":"maypfv"},"content":"                        if (taskNum \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"maypfv"},"content":"                            throw new WrongNumberException(\"!!! Wrong Task Number Error !!!\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":118,"author":{"gitId":"maypfv"},"content":"                        }","lastModifiedDate":"2023-08-23"},{"lineNumber":119,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":120,"author":{"gitId":"maypfv"},"content":"                        Task taskToUpdate \u003d tasks.get(taskNum);","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"maypfv"},"content":"                        taskToUpdate.markStatus();","lastModifiedDate":"2023-08-22"},{"lineNumber":122,"author":{"gitId":"maypfv"},"content":"                        saveToFile(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"maypfv"},"content":"                        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + taskToUpdate.toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":124,"author":{"gitId":"maypfv"},"content":"                        userInput \u003d scanIn.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":125,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":126,"author":{"gitId":"maypfv"},"content":"                    // To unmark a task.","lastModifiedDate":"2023-08-22"},{"lineNumber":127,"author":{"gitId":"maypfv"},"content":"                    } else if (userInput.split(\" \")[0].equals(UNMARK_TRIGGER)) {","lastModifiedDate":"2023-08-22"},{"lineNumber":128,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":129,"author":{"gitId":"maypfv"},"content":"                        // Missing task number to unmark.","lastModifiedDate":"2023-08-23"},{"lineNumber":130,"author":{"gitId":"maypfv"},"content":"                        if (userInput.split(\"\\\\s+\", 2).length \u003c 2) {","lastModifiedDate":"2023-08-23"},{"lineNumber":131,"author":{"gitId":"maypfv"},"content":"                            throw new EmptyTaskNumberException(\"!!! Missing Task Number error !!!\");","lastModifiedDate":"2023-08-23"},{"lineNumber":132,"author":{"gitId":"maypfv"},"content":"                        }","lastModifiedDate":"2023-08-23"},{"lineNumber":133,"author":{"gitId":"maypfv"},"content":"                        int taskNum \u003d Integer.parseInt(userInput.split(\" \")[1]) - 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":134,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":135,"author":{"gitId":"maypfv"},"content":"                        // Task number does not exist.","lastModifiedDate":"2023-08-23"},{"lineNumber":136,"author":{"gitId":"maypfv"},"content":"                        if (taskNum \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"maypfv"},"content":"                            throw new WrongNumberException(\"!!! Wrong Task Number Error !!!\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":138,"author":{"gitId":"maypfv"},"content":"                        }","lastModifiedDate":"2023-08-23"},{"lineNumber":139,"author":{"gitId":"maypfv"},"content":"                        Task taskToUpdate \u003d tasks.get(taskNum);","lastModifiedDate":"2023-08-23"},{"lineNumber":140,"author":{"gitId":"maypfv"},"content":"                        taskToUpdate.unmarkStatus();","lastModifiedDate":"2023-08-22"},{"lineNumber":141,"author":{"gitId":"maypfv"},"content":"                        saveToFile(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"maypfv"},"content":"                        System.out.println(\"Ok, I\u0027ve marked this task as not done yet:\\n\" + taskToUpdate.toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":143,"author":{"gitId":"maypfv"},"content":"                        userInput \u003d scanIn.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":144,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"maypfv"},"content":"                    // To delete a task","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"maypfv"},"content":"                    } else if (userInput.split(\" \")[0].equals(DELETE_TRIGGER)) {","lastModifiedDate":"2023-08-23"},{"lineNumber":148,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":149,"author":{"gitId":"maypfv"},"content":"                        // Missing task number to delete.","lastModifiedDate":"2023-08-23"},{"lineNumber":150,"author":{"gitId":"maypfv"},"content":"                        if (userInput.split(\"\\\\s+\", 2).length \u003c 2) {","lastModifiedDate":"2023-08-23"},{"lineNumber":151,"author":{"gitId":"maypfv"},"content":"                            throw new EmptyTaskNumberException(\"!!! Missing Task Number error !!!\");","lastModifiedDate":"2023-08-23"},{"lineNumber":152,"author":{"gitId":"maypfv"},"content":"                        }","lastModifiedDate":"2023-08-23"},{"lineNumber":153,"author":{"gitId":"maypfv"},"content":"                        int taskNum \u003d Integer.parseInt(userInput.split(\" \")[1]) - 1;","lastModifiedDate":"2023-08-23"},{"lineNumber":154,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":155,"author":{"gitId":"maypfv"},"content":"                        // Task number does not exist.","lastModifiedDate":"2023-08-23"},{"lineNumber":156,"author":{"gitId":"maypfv"},"content":"                        if (taskNum \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"maypfv"},"content":"                            throw new WrongNumberException(\"!!! Wrong Task Number Error !!!\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":158,"author":{"gitId":"maypfv"},"content":"                        }","lastModifiedDate":"2023-08-23"},{"lineNumber":159,"author":{"gitId":"maypfv"},"content":"                        Task taskToDelete \u003d tasks.get(taskNum);","lastModifiedDate":"2023-08-23"},{"lineNumber":160,"author":{"gitId":"maypfv"},"content":"                        System.out.println(\"Ok, I\u0027ve removed this task:\\n\" + taskToDelete.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":161,"author":{"gitId":"maypfv"},"content":"                        tasks.remove(taskNum);","lastModifiedDate":"2023-08-23"},{"lineNumber":162,"author":{"gitId":"maypfv"},"content":"                        saveToFile(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"maypfv"},"content":"                        userInput \u003d scanIn.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":164,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"maypfv"},"content":"                    // For a deadline task","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"maypfv"},"content":"                    } else if (userInput.split(\" \")[0].equals(DEADLINE_TRIGGER)) {","lastModifiedDate":"2023-08-22"},{"lineNumber":168,"author":{"gitId":"maypfv"},"content":"                        String[] test \u003d userInput.split(\"\\\\s+\", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":169,"author":{"gitId":"maypfv"},"content":"                        // Missing Deadline Description.","lastModifiedDate":"2023-08-23"},{"lineNumber":170,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":171,"author":{"gitId":"maypfv"},"content":"                        if (test.length \u003c 2 || test[1].equals(EMPTY)) {","lastModifiedDate":"2023-08-23"},{"lineNumber":172,"author":{"gitId":"maypfv"},"content":"                            throw new EmptyDescriptionException(\"!!! Missing DEADLINE Description !!!\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":173,"author":{"gitId":"maypfv"},"content":"                        }","lastModifiedDate":"2023-08-23"},{"lineNumber":174,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":175,"author":{"gitId":"maypfv"},"content":"                        String[] deadlineInfo \u003d test[1].split(\"\\\\s*/by\\\\s*\");","lastModifiedDate":"2023-08-30"},{"lineNumber":176,"author":{"gitId":"maypfv"},"content":"                        LocalDateTime deadlineDateTime \u003d DateConverter.convertToDateTime(deadlineInfo[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"maypfv"},"content":"                        Deadline newDeadlineTask \u003d new Deadline(deadlineInfo[0], deadlineDateTime, false);","lastModifiedDate":"2023-08-31"},{"lineNumber":178,"author":{"gitId":"maypfv"},"content":"                        tasks.add(newDeadlineTask);","lastModifiedDate":"2023-08-23"},{"lineNumber":179,"author":{"gitId":"maypfv"},"content":"                        saveToFile(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":180,"author":{"gitId":"maypfv"},"content":"                        System.out.println(\"Alright! I\u0027ve added this task:\\n \" + newDeadlineTask.toString()","lastModifiedDate":"2023-08-22"},{"lineNumber":181,"author":{"gitId":"maypfv"},"content":"                                + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":182,"author":{"gitId":"maypfv"},"content":"                        userInput \u003d scanIn.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":183,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":184,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":185,"author":{"gitId":"maypfv"},"content":"                    // For an event task","lastModifiedDate":"2023-08-30"},{"lineNumber":186,"author":{"gitId":"maypfv"},"content":"                    } else if (userInput.split(\" \")[0].equals(EVENT_TRIGGER)) {","lastModifiedDate":"2023-08-22"},{"lineNumber":187,"author":{"gitId":"maypfv"},"content":"                        String[] test \u003d userInput.split(\"\\\\s+\", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":188,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":189,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":190,"author":{"gitId":"maypfv"},"content":"                        // Missing Event Description.","lastModifiedDate":"2023-08-23"},{"lineNumber":191,"author":{"gitId":"maypfv"},"content":"                        if (test.length \u003c 2 || test[1].equals(EMPTY)) {","lastModifiedDate":"2023-08-23"},{"lineNumber":192,"author":{"gitId":"maypfv"},"content":"                            throw new EmptyDescriptionException(\"!!! Missing EVENT Description !!!\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":193,"author":{"gitId":"maypfv"},"content":"                        }","lastModifiedDate":"2023-08-23"},{"lineNumber":194,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":195,"author":{"gitId":"maypfv"},"content":"                        String[] eventInfo \u003d test[1].split(\" /from | /to \");","lastModifiedDate":"2023-08-30"},{"lineNumber":196,"author":{"gitId":"maypfv"},"content":"                        if (eventInfo.length \u003c 3) {","lastModifiedDate":"2023-08-30"},{"lineNumber":197,"author":{"gitId":"maypfv"},"content":"                            throw new InvalidCommandException(\"!!! Your command is incomplete !!!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":198,"author":{"gitId":"maypfv"},"content":"                        }","lastModifiedDate":"2023-08-30"},{"lineNumber":199,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":200,"author":{"gitId":"maypfv"},"content":"                        LocalDateTime eventFrom \u003d DateConverter.convertToDateTime(eventInfo[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":201,"author":{"gitId":"maypfv"},"content":"                        LocalDateTime eventTo \u003d DateConverter.convertToDateTime(eventInfo[2]);","lastModifiedDate":"2023-08-31"},{"lineNumber":202,"author":{"gitId":"maypfv"},"content":"                        Event newEventTask \u003d new Event(eventInfo[0], eventFrom, eventTo, false);","lastModifiedDate":"2023-08-31"},{"lineNumber":203,"author":{"gitId":"maypfv"},"content":"                        tasks.add(newEventTask);","lastModifiedDate":"2023-08-23"},{"lineNumber":204,"author":{"gitId":"maypfv"},"content":"                        saveToFile(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":205,"author":{"gitId":"maypfv"},"content":"                        System.out.println(\"Alright! I\u0027ve added this task:\\n \" + newEventTask.toString()","lastModifiedDate":"2023-08-22"},{"lineNumber":206,"author":{"gitId":"maypfv"},"content":"                                + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":207,"author":{"gitId":"maypfv"},"content":"                        userInput \u003d scanIn.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":208,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":209,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":210,"author":{"gitId":"maypfv"},"content":"                    // For to do task","lastModifiedDate":"2023-08-30"},{"lineNumber":211,"author":{"gitId":"maypfv"},"content":"                    } else if (userInput.split(\" \")[0].equals(TODO_TRIGGER)) {","lastModifiedDate":"2023-08-22"},{"lineNumber":212,"author":{"gitId":"maypfv"},"content":"                        String[] test \u003d userInput.split(\"\\\\s+\", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":213,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":214,"author":{"gitId":"maypfv"},"content":"                        // Missing TO DO Description.","lastModifiedDate":"2023-08-23"},{"lineNumber":215,"author":{"gitId":"maypfv"},"content":"                        if (test.length \u003c 2 || test[1].equals(EMPTY)) {","lastModifiedDate":"2023-08-23"},{"lineNumber":216,"author":{"gitId":"maypfv"},"content":"                            throw new EmptyDescriptionException(\"!!! Missing TO DO Description !!!\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":217,"author":{"gitId":"maypfv"},"content":"                        }","lastModifiedDate":"2023-08-23"},{"lineNumber":218,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":219,"author":{"gitId":"maypfv"},"content":"                        ToDo newToDoTask \u003d new ToDo(test[1], false);","lastModifiedDate":"2023-08-30"},{"lineNumber":220,"author":{"gitId":"maypfv"},"content":"                        tasks.add(newToDoTask);","lastModifiedDate":"2023-08-23"},{"lineNumber":221,"author":{"gitId":"maypfv"},"content":"                        saveToFile(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":222,"author":{"gitId":"maypfv"},"content":"                        // if tasks \u003d null then assign tasks \u003d new ArrayList\u003cTask\u003e()","lastModifiedDate":"2023-08-31"},{"lineNumber":223,"author":{"gitId":"maypfv"},"content":"                        System.out.println(\"Alright! I\u0027ve added this task:\\n \" + newToDoTask.toString()","lastModifiedDate":"2023-08-22"},{"lineNumber":224,"author":{"gitId":"maypfv"},"content":"                                + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":225,"author":{"gitId":"maypfv"},"content":"                        userInput \u003d scanIn.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":226,"author":{"gitId":"maypfv"},"content":"                    } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":227,"author":{"gitId":"maypfv"},"content":"                        throw new InvalidCommandException(\"!!! Your command is invalid !!!\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":228,"author":{"gitId":"maypfv"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":229,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":230,"author":{"gitId":"maypfv"},"content":"                    // To list out tasks.","lastModifiedDate":"2023-08-22"},{"lineNumber":231,"author":{"gitId":"maypfv"},"content":"                } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":232,"author":{"gitId":"maypfv"},"content":"                    System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":233,"author":{"gitId":"maypfv"},"content":"                    for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":234,"author":{"gitId":"maypfv"},"content":"                        System.out.println((i + 1) + \".\" + tasks.get(i).toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":235,"author":{"gitId":"maypfv"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":236,"author":{"gitId":"maypfv"},"content":"                    userInput \u003d scanIn.nextLine();","lastModifiedDate":"2023-08-21"},{"lineNumber":237,"author":{"gitId":"maypfv"},"content":"                }","lastModifiedDate":"2023-08-21"},{"lineNumber":238,"author":{"gitId":"maypfv"},"content":"            } catch (EmptyTaskNumberException e1) {","lastModifiedDate":"2023-08-23"},{"lineNumber":239,"author":{"gitId":"maypfv"},"content":"                System.out.println(e1.getMessage() + \"\\nOh no! The task number cannot be empty.\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":240,"author":{"gitId":"maypfv"},"content":"                        \"Please key in the task number you would like to mark/unmark.\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":241,"author":{"gitId":"maypfv"},"content":"                userInput \u003d scanIn.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":242,"author":{"gitId":"maypfv"},"content":"            } catch (WrongNumberException e2) {","lastModifiedDate":"2023-08-23"},{"lineNumber":243,"author":{"gitId":"maypfv"},"content":"                System.out.println(e2.getMessage() + \"Oh no! The task number does not exist.\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":244,"author":{"gitId":"maypfv"},"content":"                        \"You can find out the tasks and their numbers by typing list.\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":245,"author":{"gitId":"maypfv"},"content":"                        \"Please re-enter the correct task number to mark/unmark.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":246,"author":{"gitId":"maypfv"},"content":"                userInput \u003d scanIn.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":247,"author":{"gitId":"maypfv"},"content":"            } catch (EmptyDescriptionException e3) {","lastModifiedDate":"2023-08-23"},{"lineNumber":248,"author":{"gitId":"maypfv"},"content":"                System.out.println(e3.getMessage() + \"Oh no! The task description cannot be empty.\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":249,"author":{"gitId":"maypfv"},"content":"                        \"Please key in the task description, with timings where applicable.\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":250,"author":{"gitId":"maypfv"},"content":"                userInput \u003d scanIn.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":251,"author":{"gitId":"maypfv"},"content":"            } catch (InvalidCommandException e4) {","lastModifiedDate":"2023-08-23"},{"lineNumber":252,"author":{"gitId":"maypfv"},"content":"                System.out.println(e4.getMessage() + \"Oh no! I don\u0027t understand what you mean. Please key in either\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":253,"author":{"gitId":"maypfv"},"content":"                        \"1. deadline [task description] /by [deadline datetime]\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":254,"author":{"gitId":"maypfv"},"content":"                        \"2. event [task description] /from [start datetime] /to [end datetime]\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":255,"author":{"gitId":"maypfv"},"content":"                        \"3. todo [task description].\");","lastModifiedDate":"2023-08-23"},{"lineNumber":256,"author":{"gitId":"maypfv"},"content":"                userInput \u003d scanIn.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":257,"author":{"gitId":"maypfv"},"content":"            } catch (IOException e5) {","lastModifiedDate":"2023-08-31"},{"lineNumber":258,"author":{"gitId":"maypfv"},"content":"                System.out.println(\"Error loading file: \" + e5.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":259,"author":{"gitId":"maypfv"},"content":"                userInput \u003d scanIn.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":260,"author":{"gitId":"maypfv"},"content":"            } catch (DateTimeFormatException e6) {","lastModifiedDate":"2023-08-31"},{"lineNumber":261,"author":{"gitId":"maypfv"},"content":"                System.out.println(\"Error with date time format: \" + e6.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":262,"author":{"gitId":"maypfv"},"content":"                userInput \u003d scanIn.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":263,"author":{"gitId":"maypfv"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":264,"author":{"gitId":"maypfv"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":265,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":266,"author":{"gitId":"maypfv"},"content":"            // If \"bye\" is triggered, exit while loop and print outro message.","lastModifiedDate":"2023-08-22"},{"lineNumber":267,"author":{"gitId":"maypfv"},"content":"            System.out.println(outro);","lastModifiedDate":"2023-08-22"},{"lineNumber":268,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":269,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":270,"author":{"gitId":"maypfv"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":271,"author":{"gitId":"maypfv"},"content":"    }","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"maypfv":271}},{"path":"src/main/java/DateConverter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maypfv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"maypfv"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"maypfv"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"maypfv"},"content":"public class DateConverter {","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"maypfv"},"content":"    private static String DATE_REGEX \u003d \"\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{2}:\\\\d{2}\";","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"maypfv"},"content":"    public static boolean isCorrectFormat(String dateTimeString) {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"maypfv"},"content":"        Pattern pattern \u003d Pattern.compile(DATE_REGEX);","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"maypfv"},"content":"        Matcher matcher \u003d pattern.matcher(dateTimeString);","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"maypfv"},"content":"        return matcher.matches();","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"maypfv"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"maypfv"},"content":"    public static LocalDateTime convertToDateTime(String dateTimeString) throws DateTimeFormatException{","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"maypfv"},"content":"        if (isCorrectFormat(dateTimeString)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"maypfv"},"content":"            dateTimeString \u003d dateTimeString.trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"maypfv"},"content":"            String[] dateTimeParts \u003d dateTimeString.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"maypfv"},"content":"            String[] dateParts \u003d dateTimeParts[0].split(\"-\");","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"maypfv"},"content":"            String[] timeParts \u003d dateTimeParts[1].split(\":\");","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"maypfv"},"content":"            LocalDateTime localDateTime \u003d LocalDateTime.of(Integer.parseInt(dateParts[0]),","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"maypfv"},"content":"                    Integer.parseInt(dateParts[1]),","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"maypfv"},"content":"                    Integer.parseInt(dateParts[2]),","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"maypfv"},"content":"                    Integer.parseInt(timeParts[0]),","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"maypfv"},"content":"                    Integer.parseInt(timeParts[1]));","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"maypfv"},"content":"            return localDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"maypfv"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"maypfv"},"content":"            throw new DateTimeFormatException(\"Please format your date time to be yyyy-mm-dd HH:mm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"maypfv"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"maypfv"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"maypfv"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"maypfv":31}},{"path":"src/main/java/DateTimeFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maypfv"},"content":"public class DateTimeFormatException extends Exception {","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"maypfv"},"content":"    public DateTimeFormatException(String message) { super(message); }","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"maypfv"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"maypfv":3}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maypfv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"maypfv"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"maypfv"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"maypfv"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"maypfv"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"maypfv"},"content":"    public Deadline(String description, LocalDateTime deadline, boolean isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"maypfv"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"maypfv"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"maypfv"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"maypfv"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"maypfv"},"content":"    public String saveToFileString(){","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"maypfv"},"content":"        return \"D \" + (super.isDone ? \"| 1 | \" : \"| 0 | \") + super.toString() + \" | \"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"maypfv"},"content":"                + this.deadline.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"maypfv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"maypfv"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"maypfv"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"maypfv"},"content":"        return \"[D]\" + super.getStatusIcon() + super.toString() + \" (by: \"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"maypfv"},"content":"                + this.deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\")) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"maypfv"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"maypfv"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"maypfv":25}},{"path":"src/main/java/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maypfv"},"content":"public class EmptyDescriptionException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"maypfv"},"content":"    public EmptyDescriptionException(String message) { super(message); }","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"maypfv"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"maypfv":4}},{"path":"src/main/java/EmptyTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maypfv"},"content":"public class EmptyTaskNumberException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"maypfv"},"content":"    public EmptyTaskNumberException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"maypfv"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"maypfv"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"maypfv"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"maypfv":7}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maypfv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"maypfv"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"maypfv"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"maypfv"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"maypfv"},"content":"    protected LocalDateTime eventFrom;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"maypfv"},"content":"    protected LocalDateTime eventTo;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"maypfv"},"content":"    public Event(String description, LocalDateTime eventFrom, LocalDateTime eventTo, boolean isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"maypfv"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"maypfv"},"content":"        this.eventFrom \u003d eventFrom;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"maypfv"},"content":"        this.eventTo \u003d eventTo;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"maypfv"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"maypfv"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"maypfv"},"content":"    public String saveToFileString(){","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"maypfv"},"content":"        return \"E \" + (super.isDone ? \"| 1 | \" : \"| 0 | \") + super.toString() + \" | \"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"maypfv"},"content":"                + this.eventFrom.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"))","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"maypfv"},"content":"                + \" | \"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"maypfv"},"content":"                + this.eventTo.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"maypfv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"maypfv"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"maypfv"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"maypfv"},"content":"        return \"[E]\" + super.getStatusIcon()  + super.toString() + \" (from: \"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"maypfv"},"content":"                + this.eventFrom.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\"))","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"maypfv"},"content":"                + \" to: \"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"maypfv"},"content":"                + this.eventTo.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\"))","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"maypfv"},"content":"                + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"maypfv"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"maypfv"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"maypfv":31}},{"path":"src/main/java/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maypfv"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"maypfv"},"content":"    public InvalidCommandException(String message) { super(message); }","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"maypfv"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"maypfv":4}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maypfv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"maypfv"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"maypfv"},"content":"        protected String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"maypfv"},"content":"        protected boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"maypfv"},"content":"        protected boolean isSplit;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"maypfv"},"content":"        public Task(String description, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"maypfv"},"content":"            this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"maypfv"},"content":"            this.isDone \u003d isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"maypfv"},"content":"            this.isSplit \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"maypfv"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"maypfv"},"content":"        public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"maypfv"},"content":"            return (isDone ? \"[X] \" : \"[ ] \");","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"maypfv"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"maypfv"},"content":"        public void markStatus() {","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"maypfv"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"maypfv"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"maypfv"},"content":"        public void unmarkStatus() {","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"maypfv"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"maypfv"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"maypfv"},"content":"        public abstract String saveToFileString();","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"maypfv"},"content":"        @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"maypfv"},"content":"        public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"maypfv"},"content":"            return this.description;","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"maypfv"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"maypfv"},"content":"        public static Task loadTaskFromFile(String lineToLoad) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"maypfv"},"content":"            String[] taskComponents \u003d lineToLoad.split(\" \\\\| \");","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"maypfv"},"content":"            String taskType \u003d taskComponents[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"maypfv"},"content":"            boolean isDone \u003d taskComponents[1].equals(\"1\");","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"maypfv"},"content":"            String taskDescription \u003d taskComponents[2];","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"maypfv"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"maypfv"},"content":"                if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"maypfv"},"content":"                    return new ToDo(taskDescription, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"maypfv"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"maypfv"},"content":"                if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"maypfv"},"content":"/*                    String deadline \u003d taskComponents[3];*/","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"maypfv"},"content":"                    LocalDateTime deadlineDateTime \u003d DateConverter.convertToDateTime(taskComponents[3]);","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"maypfv"},"content":"                    Deadline newDeadlineTask \u003d new Deadline(taskDescription, deadlineDateTime, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"maypfv"},"content":"                    return newDeadlineTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"maypfv"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"maypfv"},"content":"                if (taskType.equals(\"E\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"maypfv"},"content":"/*                    String eventFrom \u003d taskComponents[3];","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"maypfv"},"content":"                    String eventTo \u003d taskComponents[4];*/","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"maypfv"},"content":"                    LocalDateTime eventFrom \u003d DateConverter.convertToDateTime(taskComponents[3]);","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"maypfv"},"content":"                    LocalDateTime eventTo \u003d DateConverter.convertToDateTime(taskComponents[4]);","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"maypfv"},"content":"                    Event newEventTask \u003d new Event(taskDescription, eventFrom, eventTo, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"maypfv"},"content":"                    return newEventTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"maypfv"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"maypfv"},"content":"            } catch (DateTimeFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"maypfv"},"content":"                System.out.println(\"Error with date time format in file: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"maypfv"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"maypfv"},"content":"            return null;","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"maypfv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"maypfv"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"maypfv":66}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maypfv"},"content":"public class ToDo extends Task{","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"maypfv"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"maypfv"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"maypfv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"maypfv"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"maypfv"},"content":"    public String saveToFileString(){","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"maypfv"},"content":"        return \"T \" + (super.isDone ? \"| 1 | \" : \"| 0 | \") + super.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"maypfv"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"maypfv"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"maypfv"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"maypfv"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"maypfv"},"content":"        return \"[T]\" + super.getStatusIcon() + super.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"maypfv"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"maypfv"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"maypfv":16}},{"path":"src/main/java/WrongNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maypfv"},"content":"public class WrongNumberException extends Exception{","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"maypfv"},"content":"    public WrongNumberException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"maypfv"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"maypfv"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"maypfv"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"maypfv":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"maypfv"},"content":"todo eat","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"maypfv"},"content":"deadline sleep /by 10pm","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"maypfv"},"content":"event meeting /from 4pm /to 6pm","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"maypfv"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"maypfv"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"maypfv"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"maypfv"},"content":"unmark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"maypfv"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"maypfv":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"maypfv"},"content":"java -classpath ..\\bin Blip \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"maypfv":1,"-":20}}]
