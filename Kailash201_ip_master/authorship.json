[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Kailash201":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"checkstyle {","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"    mainClass.set(\"duke.Main\")","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Kailash201":21,"-":41}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"# Mr Red","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"### Notes about the command format","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"1. All the command word at the start of the ","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"input are all lower cased.","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"2. Words starting with \"/\" are key command attribute and is needed for the command to be valid. eg ```/by```","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"3. The datetime format it can take is dd/mm/yyyy tttt where time is 24 hrs clock eg. ``22/02/2023 2200``","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"### Adding todo task - ```todo```","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"Adds simple todo task to keep track off.","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"### Adding deadline task - ```deadline```","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"Adds deadline task to keep track of tasks that have a due datetime.","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"### Adding event task - ```event```","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"Adds event task to keep track of tasks that have a start and end datetime.","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"### Adding todotime task - ```todotime```","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"Adds todotime task to keep track of tasks that have a duration.","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"### Setting the task as done - ```mark```","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"Marks a task as done.","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"### Setting the task as not done - ```unmark```","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"Unmarks a task as not done.","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"### Deleting a task - ```delete```","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"Deletes a task from the list. ","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"### Listing all the tasks - ```list```","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"Shows a list of all tasks.","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"### Searching for task - ```find```","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"Searches a task based on the word type.","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"### Existing the program - ```bye```","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"Exits the program.","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"### Getting help - ```help```","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"Lists down all the commands that can be used and its examples.","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"Kailash201"},"content":"### `todo` - Add todo task","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"Kailash201"},"content":"Format: `todo task`","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"Kailash201"},"content":"- task is the name of the task.","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"Kailash201"},"content":"Example of usage: ","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"Kailash201"},"content":"`todo do laundry`","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"Kailash201"},"content":"### `deadline` - Add deadline task","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"Kailash201"},"content":"Format: `deadline task /by dd/mm/yyyy tttt`","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"Kailash201"},"content":"- task is the name of the task.","lastModifiedDate":"2023-09-18"},{"lineNumber":57,"author":{"gitId":"Kailash201"},"content":"- datetime after /by is the due date of the task.","lastModifiedDate":"2023-09-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-09-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"Kailash201"},"content":"`deadline cs2102 project /by 22/09/2023 1200`","lastModifiedDate":"2023-09-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":63,"author":{"gitId":"Kailash201"},"content":"### `event` - Add event task","lastModifiedDate":"2023-09-18"},{"lineNumber":64,"author":{"gitId":"Kailash201"},"content":"Format: `event task /from dd/mm/yyyy tttt /to dd/mm/yyyy tttt`","lastModifiedDate":"2023-09-18"},{"lineNumber":65,"author":{"gitId":"Kailash201"},"content":"- task is the name of the task.","lastModifiedDate":"2023-09-18"},{"lineNumber":66,"author":{"gitId":"Kailash201"},"content":"- datetime after /from is the start time.","lastModifiedDate":"2023-09-18"},{"lineNumber":67,"author":{"gitId":"Kailash201"},"content":"- datetime after /to is the end time.","lastModifiedDate":"2023-09-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":69,"author":{"gitId":"Kailash201"},"content":"Example of usage:","lastModifiedDate":"2023-09-18"},{"lineNumber":70,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":71,"author":{"gitId":"Kailash201"},"content":"`event zoom meeting /from 22/09/2023 1200 /to 22/09/2023 1400`","lastModifiedDate":"2023-09-18"},{"lineNumber":72,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":73,"author":{"gitId":"Kailash201"},"content":"### `todotime` - Add todotime task","lastModifiedDate":"2023-09-18"},{"lineNumber":74,"author":{"gitId":"Kailash201"},"content":"Format: `todotime task /for N [hours/minutes]`","lastModifiedDate":"2023-09-18"},{"lineNumber":75,"author":{"gitId":"Kailash201"},"content":"- task is the name of the task.","lastModifiedDate":"2023-09-18"},{"lineNumber":76,"author":{"gitId":"Kailash201"},"content":"- N is a number.","lastModifiedDate":"2023-09-18"},{"lineNumber":77,"author":{"gitId":"Kailash201"},"content":"- [hours/minutes], can only be either.","lastModifiedDate":"2023-09-18"},{"lineNumber":78,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":79,"author":{"gitId":"Kailash201"},"content":"Example of usage: ","lastModifiedDate":"2023-09-18"},{"lineNumber":80,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":81,"author":{"gitId":"Kailash201"},"content":"`todotime read books /for 2 hours`","lastModifiedDate":"2023-09-18"},{"lineNumber":82,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":83,"author":{"gitId":"Kailash201"},"content":"`todotime read books /for 45 minutes`","lastModifiedDate":"2023-09-18"},{"lineNumber":84,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":85,"author":{"gitId":"Kailash201"},"content":"### `list` - Lists all the tasks","lastModifiedDate":"2023-09-18"},{"lineNumber":86,"author":{"gitId":"Kailash201"},"content":"Format: `list`","lastModifiedDate":"2023-09-18"},{"lineNumber":87,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":88,"author":{"gitId":"Kailash201"},"content":"Example of usage: ","lastModifiedDate":"2023-09-18"},{"lineNumber":89,"author":{"gitId":"Kailash201"},"content":"`list`","lastModifiedDate":"2023-09-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":91,"author":{"gitId":"Kailash201"},"content":"### `delete` - Deletes task","lastModifiedDate":"2023-09-18"},{"lineNumber":92,"author":{"gitId":"Kailash201"},"content":"Format: `delete index`","lastModifiedDate":"2023-09-18"},{"lineNumber":93,"author":{"gitId":"Kailash201"},"content":"- index is the position of the task after `list` command.","lastModifiedDate":"2023-09-18"},{"lineNumber":94,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":95,"author":{"gitId":"Kailash201"},"content":"Example of usage: ","lastModifiedDate":"2023-09-18"},{"lineNumber":96,"author":{"gitId":"Kailash201"},"content":"`delete 3`","lastModifiedDate":"2023-09-18"},{"lineNumber":97,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":98,"author":{"gitId":"Kailash201"},"content":"### `mark` - Marks tasks","lastModifiedDate":"2023-09-18"},{"lineNumber":99,"author":{"gitId":"Kailash201"},"content":"Format: `mark index`","lastModifiedDate":"2023-09-18"},{"lineNumber":100,"author":{"gitId":"Kailash201"},"content":"- index is the position of the task after `list` command.","lastModifiedDate":"2023-09-18"},{"lineNumber":101,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":102,"author":{"gitId":"Kailash201"},"content":"Example of usage: ","lastModifiedDate":"2023-09-18"},{"lineNumber":103,"author":{"gitId":"Kailash201"},"content":"`mark 2`","lastModifiedDate":"2023-09-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":105,"author":{"gitId":"Kailash201"},"content":"### `unmark` - Unmarks tasks","lastModifiedDate":"2023-09-18"},{"lineNumber":106,"author":{"gitId":"Kailash201"},"content":"Format: `unmark index`","lastModifiedDate":"2023-09-18"},{"lineNumber":107,"author":{"gitId":"Kailash201"},"content":"- index is the position of the task after `list` command.","lastModifiedDate":"2023-09-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":110,"author":{"gitId":"Kailash201"},"content":"`unmark 2`","lastModifiedDate":"2023-09-18"},{"lineNumber":111,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":112,"author":{"gitId":"Kailash201"},"content":"### `find` - Finds tasks","lastModifiedDate":"2023-09-18"},{"lineNumber":113,"author":{"gitId":"Kailash201"},"content":"Format: `find keyword`","lastModifiedDate":"2023-09-18"},{"lineNumber":114,"author":{"gitId":"Kailash201"},"content":"- Keyword is the word/substring to be search for.","lastModifiedDate":"2023-09-18"},{"lineNumber":115,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":116,"author":{"gitId":"Kailash201"},"content":"Example of usage: ","lastModifiedDate":"2023-09-18"},{"lineNumber":117,"author":{"gitId":"Kailash201"},"content":"`find book`","lastModifiedDate":"2023-09-18"},{"lineNumber":118,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":119,"author":{"gitId":"Kailash201"},"content":"`find bo`","lastModifiedDate":"2023-09-18"},{"lineNumber":120,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":121,"author":{"gitId":"Kailash201"},"content":"### `help` - List available commands that can be used","lastModifiedDate":"2023-09-18"},{"lineNumber":122,"author":{"gitId":"Kailash201"},"content":"Format: `help`","lastModifiedDate":"2023-09-18"},{"lineNumber":123,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":124,"author":{"gitId":"Kailash201"},"content":"Example of usage: ","lastModifiedDate":"2023-09-18"},{"lineNumber":125,"author":{"gitId":"Kailash201"},"content":"`help`","lastModifiedDate":"2023-09-18"},{"lineNumber":126,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":127,"author":{"gitId":"Kailash201"},"content":"### `bye` - Exits program","lastModifiedDate":"2023-09-18"},{"lineNumber":128,"author":{"gitId":"Kailash201"},"content":"Format: `bye`","lastModifiedDate":"2023-09-18"},{"lineNumber":129,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":130,"author":{"gitId":"Kailash201"},"content":"Example of usage: ","lastModifiedDate":"2023-09-18"},{"lineNumber":131,"author":{"gitId":"Kailash201"},"content":"`bye`","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"Kailash201":111,"-":20}},{"path":"src/main/java/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import storage.DataFile;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":" * Represents a type of command that can be read by the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"     * Executes the bye command.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"     * @param dF The file to be edited on.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"    public String execute(TaskList tasks, DataFile dF) {","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"        return this.toString();","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"     * Returns true as this is an exit command.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"     * @return True.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"        return true;","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"     * Returns the string representation of bye command.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"     * @return String representation of bye command.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"        Platform.exit();","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"    public static String help() {","lastModifiedDate":"2023-09-17"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"        return \"Bye command is used to end the program.\\n\"","lastModifiedDate":"2023-09-17"},{"lineNumber":43,"author":{"gitId":"Kailash201"},"content":"                + \"Eg. of Usage:\\n\" + \"bye\\n\";","lastModifiedDate":"2023-09-17"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":45,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Kailash201":45}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import storage.DataFile;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":" * Represents a command that can be read by the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"     * Abstract method to implemented.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"     * @param dF The file to be edited on.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"    public abstract String execute(TaskList tasks , DataFile dF);","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"     * Returns a boolean depending the command.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"     * Default is false.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"     * @return False, as that is the default.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Kailash201":26}},{"path":"src/main/java/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"import duke.CustomDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"import storage.DataFile;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"import tasks.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":" * Represents a type of command that can be read by the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"    private final ArrayList\u003cString\u003e texts;","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"     * DeadlineCommand constructor that takes in an ArrayList.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"     * @param texts ArrayList of texts needed for deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"    public DeadlineCommand(ArrayList\u003cString\u003e texts) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"        this.texts \u003d texts;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"     * Executes the deadline command.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"     * @param dF The file to be edited on.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"    public String execute(TaskList tasks , DataFile dF) {","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"        CustomDate cD \u003d new CustomDate();","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"        Task dL \u003d new Deadline(texts.get(0), cD.strToDateTime(texts.get(1)));","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"        tasks.addTask(dL);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"            dF.writeToFile(dL);","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Kailash201"},"content":"        assert !texts.isEmpty();","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"        return cmdToString(dL.toString(), tasks.getSize());","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Kailash201"},"content":"     * Returns the string representation of deadline command.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Kailash201"},"content":"     * @param task String representation of Task.","lastModifiedDate":"2023-09-11"},{"lineNumber":50,"author":{"gitId":"Kailash201"},"content":"     * @param size Size of the taskList.","lastModifiedDate":"2023-09-11"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"     * @return String representation of deadline command.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Kailash201"},"content":"    public String cmdToString(String task, int size) {","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"Kailash201"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + task","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Kailash201"},"content":"                + \"\\nNow you have \" + size + \" tasks in the list.\";","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":58,"author":{"gitId":"Kailash201"},"content":"    public static String help() {","lastModifiedDate":"2023-09-17"},{"lineNumber":59,"author":{"gitId":"Kailash201"},"content":"        return \"Deadline command is used to add deadline task.\\n\"","lastModifiedDate":"2023-09-17"},{"lineNumber":60,"author":{"gitId":"Kailash201"},"content":"                + \"Eg. of Usage:\\n\" + \"deadline study /by 2/3/2023 1000\\n\";","lastModifiedDate":"2023-09-17"},{"lineNumber":61,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":62,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Kailash201":62}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"import storage.DataFile;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"import tasks.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":" * Represents a type of command that can be read by the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"    private final int index;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"     * DeleteCommand constructor that takes in an int.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"     * @param index Index of the task to be deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"     * Executes the delete command.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"     * @param dF The file to be edited on.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"    public String execute(TaskList tasks, DataFile dF) throws DukeException {","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"        if (tasks.isTaskListEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"List is already empty, nothing to delete\");","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"        if (index \u003e\u003d tasks.getSize() || index \u003c\u003d 0) {","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"Delete out of range\");","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"        Task task \u003d tasks.remTask(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"            dF.deleteTaskFromFile(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Kailash201"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Kailash201"},"content":"        return cmdToString(task.toString(), tasks.getSize());","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Kailash201"},"content":"     * Returns the string representation of delete command.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Kailash201"},"content":"     * @param task String representation of Task.","lastModifiedDate":"2023-09-11"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"     * @param size Size of the taskList.","lastModifiedDate":"2023-09-11"},{"lineNumber":52,"author":{"gitId":"Kailash201"},"content":"     * @return String representation of delete command.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Kailash201"},"content":"    public String cmdToString(String task, int size) {","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"Kailash201"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + task","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Kailash201"},"content":"                + \"\\nNow you have \" + size + \" tasks in the list.\";","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":59,"author":{"gitId":"Kailash201"},"content":"    public static String help() {","lastModifiedDate":"2023-09-17"},{"lineNumber":60,"author":{"gitId":"Kailash201"},"content":"        return \"Delete command is used to delete a task by its position.\\n\"","lastModifiedDate":"2023-09-17"},{"lineNumber":61,"author":{"gitId":"Kailash201"},"content":"                + \"Eg. of Usage:\\n\" + \"delete 2\\n\";","lastModifiedDate":"2023-09-17"},{"lineNumber":62,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":63,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Kailash201":63}},{"path":"src/main/java/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"import duke.CustomDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"import storage.DataFile;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"import tasks.Event;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"import tasks.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":" * Represents a type of command that can be read by the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"    private final ArrayList\u003cString\u003e texts;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"     * EventCommand constructor that takes in an ArrayList.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"     * @param texts ArrayList of texts needed for event.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"    public EventCommand(ArrayList\u003cString\u003e texts) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"        this.texts \u003d texts;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"     * Executes the event command.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"     * @param dF The file to be edited on.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"    public String execute(TaskList tasks , DataFile dF) {","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"        CustomDate cD \u003d new CustomDate();","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"        Task event \u003d new Event(texts.get(0),","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"                cD.strToDateTime(texts.get(1)), cD.strToDateTime(texts.get(2)));","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"        tasks.addTask(event);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"            dF.writeToFile(event);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"        assert !texts.isEmpty();","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"Kailash201"},"content":"        return cmdToString(event.toString(), tasks.getSize());","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Kailash201"},"content":"     * Returns the string representation of event command.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Kailash201"},"content":"     * @param task String representation of Task.","lastModifiedDate":"2023-09-11"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"     * @param size Size of the taskList.","lastModifiedDate":"2023-09-11"},{"lineNumber":52,"author":{"gitId":"Kailash201"},"content":"     * @return String representation of event command.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Kailash201"},"content":"    public String cmdToString(String task, int size) {","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"Kailash201"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + task","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Kailash201"},"content":"                + \"\\nNow you have \" + size + \" tasks in the list.\";","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":59,"author":{"gitId":"Kailash201"},"content":"    public static String help() {","lastModifiedDate":"2023-09-17"},{"lineNumber":60,"author":{"gitId":"Kailash201"},"content":"        return \"Event command is used to add event task.\\n\"","lastModifiedDate":"2023-09-17"},{"lineNumber":61,"author":{"gitId":"Kailash201"},"content":"                + \"Eg. of Usage:\\n\" + \"event meeting /from 2/3/2023 1000 /to 2/3/2023 1200\\n\";","lastModifiedDate":"2023-09-17"},{"lineNumber":62,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":63,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Kailash201":63}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package commands;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import storage.DataFile;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":" * Represents a type of command that can be read by the chatbot.","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"    private final String keyWord;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"     * FindCommand constructor that takes in a String.","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"     * @param keyWord The word to be searched.","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"    public FindCommand(String keyWord) {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"        this.keyWord \u003d keyWord;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"     * Executes the find command.","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"     * @param dF The file to be edited on.","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"    public String execute(TaskList tasks, DataFile dF) {","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"        StringBuilder sB \u003d new StringBuilder();","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"        sB.append(\"Here are the matching tasks from you list:\");","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"            if (tasks.getTask(i).getDesc().contains(keyWord)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"                String tmp \u003d i + 1 + \".\" + tasks.getTask(i);","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"                System.out.println(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"                sB.append(System.lineSeparator()).append(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"        return sB.toString();","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"    public static String help() {","lastModifiedDate":"2023-09-17"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"        return \"Find command is used to find a task by its subtext/keyword.\\n\"","lastModifiedDate":"2023-09-17"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"                + \"Eg. of Usage:\\n\" + \"find book\\nfind bo\\n\";","lastModifiedDate":"2023-09-17"},{"lineNumber":43,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Kailash201":44}},{"path":"src/main/java/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package commands;","lastModifiedDate":"2023-09-17"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import storage.DataFile;","lastModifiedDate":"2023-09-17"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-17"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-09-17"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"    public String execute(TaskList tasks, DataFile dF) {","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"        return getHelpFromAllCommands();","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"    public static String help() {","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"        return \"Help command is used to get all the command usages.\\n\"","lastModifiedDate":"2023-09-17"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"                + \"Eg. of Usage:\\n\" + \"help\\n\";","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"    private String getHelpFromAllCommands() {","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"        return DeadlineCommand.help() + \"\\n\"","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"                + DeleteCommand.help() + \"\\n\"","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"                + EventCommand.help() + \"\\n\"","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"                + FindCommand.help() + \"\\n\"","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"                + ListCommand.help() + \"\\n\"","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"                + MarkCommand.help() + \"\\n\"","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"                + TodoCommand.help() + \"\\n\"","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"                + TodoTimeCommand.help() + \"\\n\"","lastModifiedDate":"2023-09-17"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"                + UnmarkCommand.help() + \"\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"                + HelpCommand.help() + \"\\n\";","lastModifiedDate":"2023-09-17"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-09-17"}],"authorContributionMap":{"Kailash201":30}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import storage.DataFile;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":" * Represents a type of command that can be read by the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"     * Executes the list command.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"     * @param dF The file to be edited on.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"    public String execute(TaskList tasks, DataFile dF) {","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"        StringBuilder sB \u003d new StringBuilder();","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"        sB.append(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"            String tmp \u003d i + 1 + \".\" + tasks.getTask(i);","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"            System.out.println(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"            sB.append(System.lineSeparator()).append(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"        return sB.toString();","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"    public static String help() {","lastModifiedDate":"2023-09-17"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"        return \"List command is used to list all the tasks.\\n\"","lastModifiedDate":"2023-09-17"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"                + \"Eg. of Usage:\\n\" + \"list\\n\";","lastModifiedDate":"2023-09-17"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Kailash201":32}},{"path":"src/main/java/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"import storage.DataFile;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"import tasks.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":" * Represents a type of command that can be read by the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"    private final int index;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"     * MarkCommand constructor that takes in an int.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"     * @param index Index of the task to be marked.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"     * Executes the mark command.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"     * @param dF The file to be edited on.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"    public String execute(TaskList tasks, DataFile dF) throws DukeException {","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"        if (tasks.isTaskListEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"List is empty, nothing to mark\");","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"        if (index \u003e\u003d tasks.getSize() || index \u003c\u003d 0) {","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"Mark out of range\");","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"        Task task \u003d tasks.getTask(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"        task.taskCompleted();","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"            dF.editFileAtLineN(index, \u00271\u0027);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Kailash201"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Kailash201"},"content":"        return cmdToString(task.toString());","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Kailash201"},"content":"     * Returns the string representation of mark command.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Kailash201"},"content":"     * @param task String representation of Task.","lastModifiedDate":"2023-09-11"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"     * @return String representation of mark command.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Kailash201"},"content":"    public String cmdToString(String task) {","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"Kailash201"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + task;","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":57,"author":{"gitId":"Kailash201"},"content":"    public static String help() {","lastModifiedDate":"2023-09-17"},{"lineNumber":58,"author":{"gitId":"Kailash201"},"content":"        return \"Mark command is used to mark a task as done.\\n\"","lastModifiedDate":"2023-09-17"},{"lineNumber":59,"author":{"gitId":"Kailash201"},"content":"                + \"Eg. of Usage:\\n\" + \"mark 2\\n\";","lastModifiedDate":"2023-09-17"},{"lineNumber":60,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":61,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Kailash201":61}},{"path":"src/main/java/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"import storage.DataFile;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"import tasks.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"import tasks.Todo;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":" * Represents a type of command that can be read by the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"    private final ArrayList\u003cString\u003e texts;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"     * TodoCommand constructor that takes in an ArrayList.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"     * @param texts ArrayList of texts needed for todo.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"    public TodoCommand(ArrayList\u003cString\u003e texts) {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"        this.texts \u003d texts;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"     * Executes the todo command.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"     * @param dF The file to be edited on.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"    public String execute(TaskList tasks, DataFile dF) {","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"        Task todo \u003d new Todo(texts.get(0));","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"            dF.writeToFile(todo);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"        assert !texts.isEmpty();","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"        return cmdToString(todo.toString(), tasks.getSize());","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Kailash201"},"content":"     * Returns the string representation of todo command.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Kailash201"},"content":"     * @param task String representation of Task.","lastModifiedDate":"2023-09-11"},{"lineNumber":48,"author":{"gitId":"Kailash201"},"content":"     * @param size Size of the taskList.","lastModifiedDate":"2023-09-11"},{"lineNumber":49,"author":{"gitId":"Kailash201"},"content":"     * @return String representation of todo command.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"    public String cmdToString(String task, int size) {","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"Kailash201"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + task","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Kailash201"},"content":"                + \"\\nNow you have \" + size + \" tasks in the list.\";","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":56,"author":{"gitId":"Kailash201"},"content":"    public static String help() {","lastModifiedDate":"2023-09-17"},{"lineNumber":57,"author":{"gitId":"Kailash201"},"content":"        return \"Todo command is used to add todo task.\\n\"","lastModifiedDate":"2023-09-17"},{"lineNumber":58,"author":{"gitId":"Kailash201"},"content":"                + \"Eg. of Usage:\\n\" + \"todo study\\n\";","lastModifiedDate":"2023-09-17"},{"lineNumber":59,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":60,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Kailash201":60}},{"path":"src/main/java/commands/TodoTimeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package commands;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"import storage.DataFile;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"import tasks.TodoTime;","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":" * Represents a type of command that can be read by the chatbot.","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"public class TodoTimeCommand extends Command {","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"    private final ArrayList\u003cString\u003e texts;","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"    public TodoTimeCommand(ArrayList\u003cString\u003e texts) {","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"        this.texts \u003d texts;","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"    public String execute(TaskList tasks, DataFile dF) {","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"        Task task \u003d new TodoTime(texts.get(0), texts.get(1));","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"        tasks.addTask(task);","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"        try {","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"            dF.writeToFile(task);","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"        assert !texts.isEmpty();","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"        return cmdToString(task.toString(), tasks.getSize());","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"     * Returns the string representation of todoTime command.","lastModifiedDate":"2023-09-11"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"     * @param task String representation of Task.","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"     * @param size Size of the taskList.","lastModifiedDate":"2023-09-11"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"     * @return String representation of todoTime command.","lastModifiedDate":"2023-09-11"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"    public String cmdToString(String task, int size) {","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + task","lastModifiedDate":"2023-09-11"},{"lineNumber":43,"author":{"gitId":"Kailash201"},"content":"                + \"\\nNow you have \" + size + \" tasks in the list.\";","lastModifiedDate":"2023-09-11"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":45,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":46,"author":{"gitId":"Kailash201"},"content":"    public static String help() {","lastModifiedDate":"2023-09-17"},{"lineNumber":47,"author":{"gitId":"Kailash201"},"content":"        return \"TodoTime command is used to add todotime task.\\n\"","lastModifiedDate":"2023-09-17"},{"lineNumber":48,"author":{"gitId":"Kailash201"},"content":"                + \"Eg. of Usage:\\n\" + \"todotime study /for 2 hours\\ntodotime study /for 45 minutes\\n\";","lastModifiedDate":"2023-09-17"},{"lineNumber":49,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":50,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"Kailash201":50}},{"path":"src/main/java/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"import storage.DataFile;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"import tasks.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":" * Represents a type of command that can be read by the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"    private final int index;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"     * DeleteCommand constructor that takes in an int.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"     * @param index Index of the task to be unmarked.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"     * Executes the unmark command.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"     * @param dF The file to be edited on.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"    public String execute(TaskList tasks, DataFile dF) throws DukeException {","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"        if (tasks.isTaskListEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"List is empty, nothing to unmark\");","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"        if (index \u003e\u003d tasks.getSize() || index \u003c\u003d 0) {","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"Unmark out of range\");","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"        Task selTask \u003d tasks.getTask(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"        selTask.taskNotCompleted();","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"            dF.editFileAtLineN(index, \u00270\u0027);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Kailash201"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Kailash201"},"content":"        return cmdToString(selTask.toString());","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Kailash201"},"content":"     * Returns the string representation of unmark command.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"     * @param task String representation of Task.","lastModifiedDate":"2023-09-11"},{"lineNumber":52,"author":{"gitId":"Kailash201"},"content":"     * @return String representation of unmark command.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Kailash201"},"content":"    public String cmdToString(String task) {","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"Kailash201"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + task;","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":58,"author":{"gitId":"Kailash201"},"content":"    public static String help() {","lastModifiedDate":"2023-09-17"},{"lineNumber":59,"author":{"gitId":"Kailash201"},"content":"        return \"Unmark command is used to unmark a task as undone.\\n\"","lastModifiedDate":"2023-09-17"},{"lineNumber":60,"author":{"gitId":"Kailash201"},"content":"                + \"Eg. of Usage:\\n\" + \"unmark 2\\n\";","lastModifiedDate":"2023-09-17"},{"lineNumber":61,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":62,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":63,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Kailash201":63}},{"path":"src/main/java/duke/CustomDate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"import parser.Parser;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":" * Converts the string input of date into date and time objects.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"public class CustomDate {","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"     * Returns the LocaleDateTime from a string.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"     * @param text Date, time in string.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"     * @return LocaleDateTime from the string.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"    public LocalDateTime strToDateTime(String text) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"        ArrayList\u003cString\u003e texts \u003d p.splitter(text, \"/\");","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"        ArrayList\u003cString\u003e yearNTime \u003d p.splitter(texts.get(2), \" \");","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"        String year \u003d addZeroFront(yearNTime.get(0));","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"        String mon \u003d addZeroFront(texts.get(1));","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"        String day \u003d addZeroFront(texts.get(0));","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"        String time \u003d formatTime(yearNTime.get(1));","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"            LocalDateTime dOne \u003d LocalDateTime.parse(year + \"-\" + mon + \"-\" + day + \"T\" + time);","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"            return dOne;","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"The date or time given does not make sense\");","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"     * Add zero to the front of a string that is 1 in length.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"     * @param text Text to be edited.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"     * @return Text with a zero in front.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"    public String addZeroFront(String text) {","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"        return text.length() \u003d\u003d 1 ? 0 + text : text;","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Kailash201"},"content":"     * Returns formatted time string.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Kailash201"},"content":"     * @param str Time in string.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Kailash201"},"content":"     * @return Formatted time string.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Kailash201"},"content":"    public String formatTime(String str) {","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"        return str.substring(0, 2) + \":\" + str.substring(2, 4);","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"Kailash201"},"content":"    public boolean isWrongFormat(String input) {","lastModifiedDate":"2023-09-11"},{"lineNumber":55,"author":{"gitId":"Kailash201"},"content":"        Pattern datePattern \u003d Pattern.compile(\"^\\\\d{1,2}/\\\\d{1,2}/\\\\d{4} \\\\d{4}$\");","lastModifiedDate":"2023-09-11"},{"lineNumber":56,"author":{"gitId":"Kailash201"},"content":"        return !datePattern.matcher(input).find();","lastModifiedDate":"2023-09-11"},{"lineNumber":57,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":58,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":59,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Kailash201":59}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"import commands.Command;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"import parser.Parser;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"import storage.DataFile;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"import tasks.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":" * The programme that runs the Duke chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"    private final DataFile dataFile;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"     * Duke constructor that takes a String, String and initialises","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"     * class variables.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"     * @param filePath Name of the path.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"     * @param fileName Name of the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"    public Duke(String filePath, String fileName) {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"        dataFile \u003d new DataFile(filePath, fileName);","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"            taskList \u003d new TaskList(dataFile.fileToObjects());","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"            taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"     * Returns the intended response after reading the command.","lastModifiedDate":"2023-09-11"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"     * @param input User\u0027s input","lastModifiedDate":"2023-09-11"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"     * @return Returns the intended response after reading the command.","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"    public String response(String input) {","lastModifiedDate":"2023-09-11"},{"lineNumber":43,"author":{"gitId":"Kailash201"},"content":"        Command c \u003d new Parser().getCommand(input);","lastModifiedDate":"2023-09-11"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"        return c.execute(taskList, dataFile);","lastModifiedDate":"2023-09-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Kailash201":43,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":" * Exceptions that are unique to the duke programme.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"     * DukeException constructor that takes in a String.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"     * @param errMes Duke\u0027s error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"    public DukeException(String errMes) {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"        super(errMes);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Kailash201":16}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"import ui.MainWindow;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":" * Starts up the GUI of the app.","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"    private final String filePath \u003d \"./data/\";","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"    private final String fileName \u003d \"trying.txt\";","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"    private final Duke duke \u003d new Duke(filePath, fileName);","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"     * Uses JavaFX to load up the GUI.","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"     * @param stage The stage used in JavaFX.","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"            stage.setTitle(\"Mr Red\");","lastModifiedDate":"2023-09-17"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"            stage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"Kailash201":39}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package parser;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"import commands.*;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"import duke.CustomDate;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":" * This class handles all string manipulation needed","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":" * to read user inputs.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"public class Parser {","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"    private String type \u003d \"\";","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"    private enum Commands {","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"        bye,","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"        list,","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"        mark,","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"        unmark,","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"        deadline,","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"        event,","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"        todo,","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"        delete,","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"        find,","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"        todotime,","lastModifiedDate":"2023-09-17"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"        help;","lastModifiedDate":"2023-09-17"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"     * Parser empty constructor.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"    public Parser() {","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"     * Parser constructor that takes in a String.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"     * @param type The type of task.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Kailash201"},"content":"    public Parser(String type) {","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Kailash201"},"content":"     * Returns the intended command after reading the user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Kailash201"},"content":"     * @param input Input from the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Kailash201"},"content":"     * @return The intended command.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"     * @throws DukeException If user typed invalid commands.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Kailash201"},"content":"    public Command getCommand(String input) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Kailash201"},"content":"        String userCommand \u003d this.splitter(input, \" \").get(0);","lastModifiedDate":"2023-09-11"},{"lineNumber":55,"author":{"gitId":"Kailash201"},"content":"        Commands command;","lastModifiedDate":"2023-09-11"},{"lineNumber":56,"author":{"gitId":"Kailash201"},"content":"        try {","lastModifiedDate":"2023-09-11"},{"lineNumber":57,"author":{"gitId":"Kailash201"},"content":"            command \u003d Commands.valueOf(userCommand);","lastModifiedDate":"2023-09-11"},{"lineNumber":58,"author":{"gitId":"Kailash201"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-09-11"},{"lineNumber":59,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"Invalid command\");","lastModifiedDate":"2023-09-11"},{"lineNumber":60,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":61,"author":{"gitId":"Kailash201"},"content":"        switch (command) {","lastModifiedDate":"2023-09-11"},{"lineNumber":62,"author":{"gitId":"Kailash201"},"content":"        case bye: {","lastModifiedDate":"2023-09-11"},{"lineNumber":63,"author":{"gitId":"Kailash201"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":65,"author":{"gitId":"Kailash201"},"content":"        case list: {","lastModifiedDate":"2023-09-11"},{"lineNumber":66,"author":{"gitId":"Kailash201"},"content":"            return new ListCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"Kailash201"},"content":"        case unmark: {","lastModifiedDate":"2023-09-11"},{"lineNumber":69,"author":{"gitId":"Kailash201"},"content":"            return parseUnmark(input);","lastModifiedDate":"2023-09-11"},{"lineNumber":70,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"Kailash201"},"content":"        case mark: {","lastModifiedDate":"2023-09-11"},{"lineNumber":72,"author":{"gitId":"Kailash201"},"content":"            return parseMark(input);","lastModifiedDate":"2023-09-11"},{"lineNumber":73,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"Kailash201"},"content":"        case deadline: {","lastModifiedDate":"2023-09-11"},{"lineNumber":75,"author":{"gitId":"Kailash201"},"content":"            return parseDeadline(input);","lastModifiedDate":"2023-09-11"},{"lineNumber":76,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"Kailash201"},"content":"        case event: {","lastModifiedDate":"2023-09-11"},{"lineNumber":78,"author":{"gitId":"Kailash201"},"content":"            return parseEvent(input);","lastModifiedDate":"2023-09-11"},{"lineNumber":79,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"Kailash201"},"content":"        case todo: {","lastModifiedDate":"2023-09-11"},{"lineNumber":81,"author":{"gitId":"Kailash201"},"content":"            return parseTodo(input);","lastModifiedDate":"2023-09-11"},{"lineNumber":82,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"Kailash201"},"content":"        case delete: {","lastModifiedDate":"2023-09-11"},{"lineNumber":84,"author":{"gitId":"Kailash201"},"content":"            return parseDelete(input);","lastModifiedDate":"2023-09-11"},{"lineNumber":85,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"Kailash201"},"content":"        case find: {","lastModifiedDate":"2023-09-11"},{"lineNumber":87,"author":{"gitId":"Kailash201"},"content":"            return parseFind(input);","lastModifiedDate":"2023-09-11"},{"lineNumber":88,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"Kailash201"},"content":"        case todotime: {","lastModifiedDate":"2023-09-11"},{"lineNumber":90,"author":{"gitId":"Kailash201"},"content":"            return parseTodoTime(input);","lastModifiedDate":"2023-09-11"},{"lineNumber":91,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":92,"author":{"gitId":"Kailash201"},"content":"        case help: {","lastModifiedDate":"2023-09-17"},{"lineNumber":93,"author":{"gitId":"Kailash201"},"content":"            return parseHelp(input);","lastModifiedDate":"2023-09-17"},{"lineNumber":94,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":95,"author":{"gitId":"Kailash201"},"content":"        default: {","lastModifiedDate":"2023-09-11"},{"lineNumber":96,"author":{"gitId":"Kailash201"},"content":"            assert false;","lastModifiedDate":"2023-09-11"},{"lineNumber":97,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"Something went wrong here\");","lastModifiedDate":"2023-09-11"},{"lineNumber":98,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"Kailash201"},"content":"     * Converts the user input of different type of tasks into ArrayList.","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"Kailash201"},"content":"     * @param input User input of the tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"Kailash201"},"content":"     * @return Required data of task from the user input in ArrayList.","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"Kailash201"},"content":"     * @throws DukeException If user typed invalid tasks commands.","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"Kailash201"},"content":"    public ArrayList\u003cString\u003e convertTaskInput(String input) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"Kailash201"},"content":"        switch (type) {","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"Kailash201"},"content":"        case \"E\": {","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"Kailash201"},"content":"            return extractEvent(input);","lastModifiedDate":"2023-09-11"},{"lineNumber":112,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":113,"author":{"gitId":"Kailash201"},"content":"        case \"D\": {","lastModifiedDate":"2023-09-11"},{"lineNumber":114,"author":{"gitId":"Kailash201"},"content":"            return extractDeadline(input);","lastModifiedDate":"2023-09-11"},{"lineNumber":115,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":116,"author":{"gitId":"Kailash201"},"content":"        case \"T\": {","lastModifiedDate":"2023-09-11"},{"lineNumber":117,"author":{"gitId":"Kailash201"},"content":"            return extractTodo(input);","lastModifiedDate":"2023-09-11"},{"lineNumber":118,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":119,"author":{"gitId":"Kailash201"},"content":"        case \"P\": {","lastModifiedDate":"2023-09-11"},{"lineNumber":120,"author":{"gitId":"Kailash201"},"content":"            return extractFind(input);","lastModifiedDate":"2023-09-11"},{"lineNumber":121,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":122,"author":{"gitId":"Kailash201"},"content":"        case \"TT\": {","lastModifiedDate":"2023-09-11"},{"lineNumber":123,"author":{"gitId":"Kailash201"},"content":"            return extractTodoTime(input);","lastModifiedDate":"2023-09-11"},{"lineNumber":124,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":125,"author":{"gitId":"Kailash201"},"content":"        default: {","lastModifiedDate":"2023-09-11"},{"lineNumber":126,"author":{"gitId":"Kailash201"},"content":"            assert false : type;","lastModifiedDate":"2023-09-11"},{"lineNumber":127,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"Something went wrong here\");","lastModifiedDate":"2023-09-11"},{"lineNumber":128,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":129,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":130,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":131,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":132,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":133,"author":{"gitId":"Kailash201"},"content":"     * Separating words from a string that has a divider between it and store the words in","lastModifiedDate":"2023-09-11"},{"lineNumber":134,"author":{"gitId":"Kailash201"},"content":"     * ArrayList.","lastModifiedDate":"2023-09-11"},{"lineNumber":135,"author":{"gitId":"Kailash201"},"content":"     * @param text The text to split.","lastModifiedDate":"2023-09-11"},{"lineNumber":136,"author":{"gitId":"Kailash201"},"content":"     * @param cutOff The divider to cut the string.","lastModifiedDate":"2023-09-11"},{"lineNumber":137,"author":{"gitId":"Kailash201"},"content":"     * @return Separated words stored in ArrayList from a string that was merged with a divider.","lastModifiedDate":"2023-09-11"},{"lineNumber":138,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":139,"author":{"gitId":"Kailash201"},"content":"    public ArrayList\u003cString\u003e splitter(String text, String cutOff) {","lastModifiedDate":"2023-09-11"},{"lineNumber":140,"author":{"gitId":"Kailash201"},"content":"        ArrayList\u003cString\u003e res \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-11"},{"lineNumber":141,"author":{"gitId":"Kailash201"},"content":"        String resStrAftCutting \u003d text;","lastModifiedDate":"2023-09-11"},{"lineNumber":142,"author":{"gitId":"Kailash201"},"content":"        while (resStrAftCutting.contains(cutOff)) {","lastModifiedDate":"2023-09-11"},{"lineNumber":143,"author":{"gitId":"Kailash201"},"content":"            String sub \u003d resStrAftCutting.substring(0, resStrAftCutting.indexOf(cutOff));","lastModifiedDate":"2023-09-11"},{"lineNumber":144,"author":{"gitId":"Kailash201"},"content":"            res.add(sub);","lastModifiedDate":"2023-09-11"},{"lineNumber":145,"author":{"gitId":"Kailash201"},"content":"            resStrAftCutting \u003d resStrAftCutting.substring(resStrAftCutting.indexOf(cutOff) + 1);","lastModifiedDate":"2023-09-11"},{"lineNumber":146,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":147,"author":{"gitId":"Kailash201"},"content":"        res.add(resStrAftCutting);","lastModifiedDate":"2023-09-11"},{"lineNumber":148,"author":{"gitId":"Kailash201"},"content":"        return res;","lastModifiedDate":"2023-09-11"},{"lineNumber":149,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":150,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":151,"author":{"gitId":"Kailash201"},"content":"    private ArrayList\u003cString\u003e extractTodoTime(String input) throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":152,"author":{"gitId":"Kailash201"},"content":"        ArrayList\u003cString\u003e texts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-11"},{"lineNumber":153,"author":{"gitId":"Kailash201"},"content":"        if (input.indexOf(\"/for\") - 1 \u003c 8) {","lastModifiedDate":"2023-09-11"},{"lineNumber":154,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"Your TodoTime name is blank\");","lastModifiedDate":"2023-09-11"},{"lineNumber":155,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":156,"author":{"gitId":"Kailash201"},"content":"        String desc \u003d input.substring(8, input.indexOf(\"/for\") - 1);","lastModifiedDate":"2023-09-11"},{"lineNumber":157,"author":{"gitId":"Kailash201"},"content":"        if (desc.isBlank() || desc.isEmpty()) {","lastModifiedDate":"2023-09-11"},{"lineNumber":158,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"Your Event name is blank\");","lastModifiedDate":"2023-09-11"},{"lineNumber":159,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":160,"author":{"gitId":"Kailash201"},"content":"        texts.add(desc);","lastModifiedDate":"2023-09-11"},{"lineNumber":161,"author":{"gitId":"Kailash201"},"content":"        String duration \u003d input.substring(input.indexOf(\"/for\") + 5);","lastModifiedDate":"2023-09-11"},{"lineNumber":162,"author":{"gitId":"Kailash201"},"content":"        Pattern pattern \u003d Pattern.compile(\"(\\\\d.)((?:hours|minutes|hour|minute)\\\\b$)\");","lastModifiedDate":"2023-09-11"},{"lineNumber":163,"author":{"gitId":"Kailash201"},"content":"        if (!pattern.matcher(duration).find()) {","lastModifiedDate":"2023-09-11"},{"lineNumber":164,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"Invalid format for duration\");","lastModifiedDate":"2023-09-11"},{"lineNumber":165,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":166,"author":{"gitId":"Kailash201"},"content":"        texts.add(duration);","lastModifiedDate":"2023-09-11"},{"lineNumber":167,"author":{"gitId":"Kailash201"},"content":"        return texts;","lastModifiedDate":"2023-09-11"},{"lineNumber":168,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":169,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":170,"author":{"gitId":"Kailash201"},"content":"    private ArrayList\u003cString\u003e extractEvent(String input) throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":171,"author":{"gitId":"Kailash201"},"content":"        CustomDate cD \u003d new CustomDate();","lastModifiedDate":"2023-09-11"},{"lineNumber":172,"author":{"gitId":"Kailash201"},"content":"        ArrayList\u003cString\u003e texts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-11"},{"lineNumber":173,"author":{"gitId":"Kailash201"},"content":"        if (input.indexOf(\"/from\") - 1 \u003c 6) {","lastModifiedDate":"2023-09-10"},{"lineNumber":174,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"Your Event name is blank\");","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"Kailash201"},"content":"        String desc \u003d input.substring(6, input.indexOf(\"/from\") - 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":177,"author":{"gitId":"Kailash201"},"content":"        if (desc.isBlank() || desc.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":178,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"Your Event name is blank\");","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"Kailash201"},"content":"        texts.add(desc);","lastModifiedDate":"2023-08-27"},{"lineNumber":181,"author":{"gitId":"Kailash201"},"content":"        String from \u003d input.substring(input.indexOf(\"/from\") + 6, input.indexOf(\"/to\") - 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":182,"author":{"gitId":"Kailash201"},"content":"        if (cD.isWrongFormat(from)) {","lastModifiedDate":"2023-09-18"},{"lineNumber":183,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"Invalid format for /from date time, its dd/mm/yyyy tttt\");","lastModifiedDate":"2023-09-18"},{"lineNumber":184,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":185,"author":{"gitId":"Kailash201"},"content":"        texts.add((from));","lastModifiedDate":"2023-08-27"},{"lineNumber":186,"author":{"gitId":"Kailash201"},"content":"        String to \u003d input.substring(input.indexOf(\"/to\") + 4);","lastModifiedDate":"2023-08-27"},{"lineNumber":187,"author":{"gitId":"Kailash201"},"content":"        if (cD.isWrongFormat(to)) {","lastModifiedDate":"2023-09-18"},{"lineNumber":188,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"Invalid format for /to date time, its dd/mm/yyyy tttt\");","lastModifiedDate":"2023-09-18"},{"lineNumber":189,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":190,"author":{"gitId":"Kailash201"},"content":"        texts.add(to);","lastModifiedDate":"2023-08-27"},{"lineNumber":191,"author":{"gitId":"Kailash201"},"content":"        return texts;","lastModifiedDate":"2023-09-11"},{"lineNumber":192,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":193,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":194,"author":{"gitId":"Kailash201"},"content":"    private ArrayList\u003cString\u003e extractDeadline(String input) throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":195,"author":{"gitId":"Kailash201"},"content":"        CustomDate cD \u003d new CustomDate();","lastModifiedDate":"2023-09-11"},{"lineNumber":196,"author":{"gitId":"Kailash201"},"content":"        ArrayList\u003cString\u003e texts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-11"},{"lineNumber":197,"author":{"gitId":"Kailash201"},"content":"        if (input.indexOf(\"/by\") - 1 \u003c 9) {","lastModifiedDate":"2023-08-31"},{"lineNumber":198,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"Your Deadline name is blank\");","lastModifiedDate":"2023-08-31"},{"lineNumber":199,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":200,"author":{"gitId":"Kailash201"},"content":"        String desc \u003d input.substring(9, input.indexOf(\"/by\") - 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":201,"author":{"gitId":"Kailash201"},"content":"        if (desc.isBlank() || desc.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":202,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"Your Deadline name is blank\");","lastModifiedDate":"2023-08-31"},{"lineNumber":203,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":204,"author":{"gitId":"Kailash201"},"content":"        texts.add(desc);","lastModifiedDate":"2023-08-27"},{"lineNumber":205,"author":{"gitId":"Kailash201"},"content":"        String by \u003d input.substring(input.indexOf(\"/by\") + 4);","lastModifiedDate":"2023-08-27"},{"lineNumber":206,"author":{"gitId":"Kailash201"},"content":"        if (cD.isWrongFormat(by)) {","lastModifiedDate":"2023-09-18"},{"lineNumber":207,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"Invalid format for date time, its dd/mm/yyyy tttt\");","lastModifiedDate":"2023-09-11"},{"lineNumber":208,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":209,"author":{"gitId":"Kailash201"},"content":"        texts.add(by);","lastModifiedDate":"2023-08-27"},{"lineNumber":210,"author":{"gitId":"Kailash201"},"content":"        return texts;","lastModifiedDate":"2023-09-11"},{"lineNumber":211,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":212,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":213,"author":{"gitId":"Kailash201"},"content":"    private ArrayList\u003cString\u003e extractTodo(String input) throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":214,"author":{"gitId":"Kailash201"},"content":"        ArrayList\u003cString\u003e texts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-11"},{"lineNumber":215,"author":{"gitId":"Kailash201"},"content":"        String desc \u003d input.substring(input.indexOf(\"todo\") + 5);","lastModifiedDate":"2023-08-27"},{"lineNumber":216,"author":{"gitId":"Kailash201"},"content":"        if (desc.isBlank() || desc.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":217,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"Your Todo name is blank\");","lastModifiedDate":"2023-08-31"},{"lineNumber":218,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":219,"author":{"gitId":"Kailash201"},"content":"        texts.add(desc);","lastModifiedDate":"2023-08-27"},{"lineNumber":220,"author":{"gitId":"Kailash201"},"content":"        return texts;","lastModifiedDate":"2023-09-11"},{"lineNumber":221,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":222,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":223,"author":{"gitId":"Kailash201"},"content":"    private ArrayList\u003cString\u003e extractFind(String input) {","lastModifiedDate":"2023-09-11"},{"lineNumber":224,"author":{"gitId":"Kailash201"},"content":"        ArrayList\u003cString\u003e texts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-11"},{"lineNumber":225,"author":{"gitId":"Kailash201"},"content":"        String keyWord \u003d splitter(input, \" \").get(1);","lastModifiedDate":"2023-09-01"},{"lineNumber":226,"author":{"gitId":"Kailash201"},"content":"        texts.add(keyWord);","lastModifiedDate":"2023-09-01"},{"lineNumber":227,"author":{"gitId":"Kailash201"},"content":"        return texts;","lastModifiedDate":"2023-09-11"},{"lineNumber":228,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":229,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":230,"author":{"gitId":"Kailash201"},"content":"    private Command parseMark(String input) throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":231,"author":{"gitId":"Kailash201"},"content":"        if (input.equals(Commands.mark.toString())) {","lastModifiedDate":"2023-09-11"},{"lineNumber":232,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"mark cannot be empty\");","lastModifiedDate":"2023-09-11"},{"lineNumber":233,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":234,"author":{"gitId":"Kailash201"},"content":"        if (input.charAt(4) !\u003d \u0027 \u0027) {","lastModifiedDate":"2023-09-11"},{"lineNumber":235,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"Invalid command\");","lastModifiedDate":"2023-09-11"},{"lineNumber":236,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":237,"author":{"gitId":"Kailash201"},"content":"        Pattern markFormat \u003d Pattern.compile(\"mark \\\\d+$\");","lastModifiedDate":"2023-09-15"},{"lineNumber":238,"author":{"gitId":"Kailash201"},"content":"        if (!markFormat.matcher(input).find()) {","lastModifiedDate":"2023-09-11"},{"lineNumber":239,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"Invalid mark format\");","lastModifiedDate":"2023-09-11"},{"lineNumber":240,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":241,"author":{"gitId":"Kailash201"},"content":"        int selected \u003d Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2023-09-11"},{"lineNumber":242,"author":{"gitId":"Kailash201"},"content":"        return new MarkCommand(selected);","lastModifiedDate":"2023-09-11"},{"lineNumber":243,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":244,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":245,"author":{"gitId":"Kailash201"},"content":"    private Command parseUnmark(String input) throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":246,"author":{"gitId":"Kailash201"},"content":"        if (input.equals(Commands.unmark.toString())) {","lastModifiedDate":"2023-09-11"},{"lineNumber":247,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"unmark cannot be empty\");","lastModifiedDate":"2023-09-11"},{"lineNumber":248,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":249,"author":{"gitId":"Kailash201"},"content":"        if (input.charAt(6) !\u003d \u0027 \u0027) {","lastModifiedDate":"2023-09-11"},{"lineNumber":250,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"Invalid command\");","lastModifiedDate":"2023-09-11"},{"lineNumber":251,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":252,"author":{"gitId":"Kailash201"},"content":"        Pattern unmarkFormat \u003d Pattern.compile(\"unmark \\\\d+$\");","lastModifiedDate":"2023-09-15"},{"lineNumber":253,"author":{"gitId":"Kailash201"},"content":"        if (!unmarkFormat.matcher(input).find()) {","lastModifiedDate":"2023-09-11"},{"lineNumber":254,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"Invalid unmark format\");","lastModifiedDate":"2023-09-11"},{"lineNumber":255,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":256,"author":{"gitId":"Kailash201"},"content":"        int selected \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2023-09-11"},{"lineNumber":257,"author":{"gitId":"Kailash201"},"content":"        return new UnmarkCommand(selected);","lastModifiedDate":"2023-09-20"},{"lineNumber":258,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":259,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":260,"author":{"gitId":"Kailash201"},"content":"    private Command parseDelete(String input) throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":261,"author":{"gitId":"Kailash201"},"content":"        if (input.equals(Commands.delete.toString())) {","lastModifiedDate":"2023-09-11"},{"lineNumber":262,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"delete cannot be empty\");","lastModifiedDate":"2023-09-11"},{"lineNumber":263,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":264,"author":{"gitId":"Kailash201"},"content":"        if (input.charAt(6) !\u003d \u0027 \u0027) {","lastModifiedDate":"2023-09-11"},{"lineNumber":265,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"Invalid command\");","lastModifiedDate":"2023-09-11"},{"lineNumber":266,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":267,"author":{"gitId":"Kailash201"},"content":"        Pattern delFormat \u003d Pattern.compile(\"delete \\\\d+$\");","lastModifiedDate":"2023-09-15"},{"lineNumber":268,"author":{"gitId":"Kailash201"},"content":"        if (!delFormat.matcher(input).find()) {","lastModifiedDate":"2023-09-11"},{"lineNumber":269,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"Invalid delete format\");","lastModifiedDate":"2023-09-11"},{"lineNumber":270,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":271,"author":{"gitId":"Kailash201"},"content":"        int selected \u003d Integer.parseInt(input.substring(input.indexOf(\"delete\") + 7)) - 1;","lastModifiedDate":"2023-09-11"},{"lineNumber":272,"author":{"gitId":"Kailash201"},"content":"        return new DeleteCommand(selected);","lastModifiedDate":"2023-09-11"},{"lineNumber":273,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":274,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":275,"author":{"gitId":"Kailash201"},"content":"    private Command parseFind(String input) throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":276,"author":{"gitId":"Kailash201"},"content":"        if (input.equals(Commands.find.toString())) {","lastModifiedDate":"2023-09-11"},{"lineNumber":277,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"find cannot be empty\");","lastModifiedDate":"2023-09-11"},{"lineNumber":278,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":279,"author":{"gitId":"Kailash201"},"content":"        if (input.charAt(4) !\u003d \u0027 \u0027) {","lastModifiedDate":"2023-09-11"},{"lineNumber":280,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"Invalid command\");","lastModifiedDate":"2023-09-11"},{"lineNumber":281,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":282,"author":{"gitId":"Kailash201"},"content":"        Parser parser \u003d new Parser(\"P\");","lastModifiedDate":"2023-09-11"},{"lineNumber":283,"author":{"gitId":"Kailash201"},"content":"        ArrayList\u003cString\u003e texts \u003d parser.convertTaskInput(input);","lastModifiedDate":"2023-09-11"},{"lineNumber":284,"author":{"gitId":"Kailash201"},"content":"        return new FindCommand(texts.get(0));","lastModifiedDate":"2023-09-11"},{"lineNumber":285,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":286,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":287,"author":{"gitId":"Kailash201"},"content":"    private Command parseTodo(String input) throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":288,"author":{"gitId":"Kailash201"},"content":"        if (input.equals(Commands.todo.toString())) {","lastModifiedDate":"2023-09-11"},{"lineNumber":289,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"Empty todo\");","lastModifiedDate":"2023-09-11"},{"lineNumber":290,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":291,"author":{"gitId":"Kailash201"},"content":"        if (input.charAt(4) !\u003d \u0027 \u0027) {","lastModifiedDate":"2023-09-11"},{"lineNumber":292,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"Invalid command\");","lastModifiedDate":"2023-09-11"},{"lineNumber":293,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":294,"author":{"gitId":"Kailash201"},"content":"        Parser parser \u003d new Parser(\"T\");","lastModifiedDate":"2023-09-11"},{"lineNumber":295,"author":{"gitId":"Kailash201"},"content":"        ArrayList\u003cString\u003e texts \u003d parser.convertTaskInput(input);","lastModifiedDate":"2023-09-11"},{"lineNumber":296,"author":{"gitId":"Kailash201"},"content":"        return new TodoCommand(texts);","lastModifiedDate":"2023-09-11"},{"lineNumber":297,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":298,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":299,"author":{"gitId":"Kailash201"},"content":"    private Command parseEvent(String input) throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":300,"author":{"gitId":"Kailash201"},"content":"        if (input.equals(Commands.event.toString())) {","lastModifiedDate":"2023-09-11"},{"lineNumber":301,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"Empty event\");","lastModifiedDate":"2023-09-11"},{"lineNumber":302,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":303,"author":{"gitId":"Kailash201"},"content":"        if (input.charAt(5) !\u003d \u0027 \u0027) {","lastModifiedDate":"2023-09-11"},{"lineNumber":304,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"Invalid command\");","lastModifiedDate":"2023-09-11"},{"lineNumber":305,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":306,"author":{"gitId":"Kailash201"},"content":"        Pattern eventPattern \u003d Pattern.compile(\"\\\\s/from.+/to.+\");","lastModifiedDate":"2023-09-20"},{"lineNumber":307,"author":{"gitId":"Kailash201"},"content":"        if (!eventPattern.matcher(input).find()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":308,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"Invalid event format\");","lastModifiedDate":"2023-09-20"},{"lineNumber":309,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":310,"author":{"gitId":"Kailash201"},"content":"        Parser parser \u003d new Parser(\"E\");","lastModifiedDate":"2023-09-11"},{"lineNumber":311,"author":{"gitId":"Kailash201"},"content":"        ArrayList\u003cString\u003e texts \u003d parser.convertTaskInput(input);","lastModifiedDate":"2023-09-11"},{"lineNumber":312,"author":{"gitId":"Kailash201"},"content":"        return new EventCommand(texts);","lastModifiedDate":"2023-09-11"},{"lineNumber":313,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":314,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":315,"author":{"gitId":"Kailash201"},"content":"    private Command parseDeadline(String input) throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":316,"author":{"gitId":"Kailash201"},"content":"        if (input.equals(Commands.deadline.toString())) {","lastModifiedDate":"2023-09-11"},{"lineNumber":317,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"Empty deadline\");","lastModifiedDate":"2023-09-11"},{"lineNumber":318,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":319,"author":{"gitId":"Kailash201"},"content":"        if (input.charAt(8) !\u003d \u0027 \u0027) {","lastModifiedDate":"2023-09-11"},{"lineNumber":320,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"Invalid command\");","lastModifiedDate":"2023-09-11"},{"lineNumber":321,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":322,"author":{"gitId":"Kailash201"},"content":"        Pattern deadlinePattern \u003d Pattern.compile(\"\\\\s/by.+\");","lastModifiedDate":"2023-09-20"},{"lineNumber":323,"author":{"gitId":"Kailash201"},"content":"        if (!deadlinePattern.matcher(input).find()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":324,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"Invalid deadline format\");","lastModifiedDate":"2023-09-20"},{"lineNumber":325,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":326,"author":{"gitId":"Kailash201"},"content":"        Parser parser \u003d new Parser(\"D\");","lastModifiedDate":"2023-09-11"},{"lineNumber":327,"author":{"gitId":"Kailash201"},"content":"        ArrayList\u003cString\u003e texts \u003d parser.convertTaskInput(input);","lastModifiedDate":"2023-09-11"},{"lineNumber":328,"author":{"gitId":"Kailash201"},"content":"        return new DeadlineCommand(texts);","lastModifiedDate":"2023-09-11"},{"lineNumber":329,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":330,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":331,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":332,"author":{"gitId":"Kailash201"},"content":"    private Command parseTodoTime(String input) throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":333,"author":{"gitId":"Kailash201"},"content":"        if (input.equals(Commands.todotime.toString())) {","lastModifiedDate":"2023-09-11"},{"lineNumber":334,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"Empty TodoTime\");","lastModifiedDate":"2023-09-11"},{"lineNumber":335,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":336,"author":{"gitId":"Kailash201"},"content":"        if (input.charAt(8) !\u003d \u0027 \u0027) {","lastModifiedDate":"2023-09-11"},{"lineNumber":337,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"Invalid command\");","lastModifiedDate":"2023-09-11"},{"lineNumber":338,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":339,"author":{"gitId":"Kailash201"},"content":"        Pattern todoTimePattern \u003d Pattern.compile(\"\\\\s/for.+\");","lastModifiedDate":"2023-09-20"},{"lineNumber":340,"author":{"gitId":"Kailash201"},"content":"        if (!todoTimePattern.matcher(input).find()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":341,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"Invalid todotime format\");","lastModifiedDate":"2023-09-20"},{"lineNumber":342,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":343,"author":{"gitId":"Kailash201"},"content":"        Parser parser \u003d new Parser(\"TT\");","lastModifiedDate":"2023-09-11"},{"lineNumber":344,"author":{"gitId":"Kailash201"},"content":"        ArrayList\u003cString\u003e texts \u003d parser.convertTaskInput(input);","lastModifiedDate":"2023-09-11"},{"lineNumber":345,"author":{"gitId":"Kailash201"},"content":"        return new TodoTimeCommand(texts);","lastModifiedDate":"2023-09-11"},{"lineNumber":346,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":347,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":348,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":349,"author":{"gitId":"Kailash201"},"content":"    private Command parseHelp(String input) throws DukeException {","lastModifiedDate":"2023-09-17"},{"lineNumber":350,"author":{"gitId":"Kailash201"},"content":"        if (!input.equals(Commands.help.toString())) {","lastModifiedDate":"2023-09-17"},{"lineNumber":351,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"Invalid help format, Just type \\\"help\\\" to get \"","lastModifiedDate":"2023-09-17"},{"lineNumber":352,"author":{"gitId":"Kailash201"},"content":"                    + \"all available commands\");","lastModifiedDate":"2023-09-17"},{"lineNumber":353,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":354,"author":{"gitId":"Kailash201"},"content":"        return new HelpCommand();","lastModifiedDate":"2023-09-17"},{"lineNumber":355,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":356,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":357,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":358,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":359,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Kailash201":359}},{"path":"src/main/java/storage/DataFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import java.io.File;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"import tasks.*;","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":" * Handles all the manipulation of the file that is stored","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":" * locally.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"public class DataFile {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"    private final String filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"    private final String fileName;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"    private File file;","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"     * DateFile constructor that takes in String, String.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"     * @param filePath Name of the path.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"     * @param fileName Name of the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"    public DataFile(String filePath, String fileName) {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"        createDirectoryNFileIfFileDoNotExists();","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"        assert file.exists();","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"     * Writes data into file.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"     * @param task The task that is being written into the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"     * @throws IOException If any file issues exists.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"    public void writeToFile(Task task) throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"        FileWriter fW \u003d new FileWriter(file, true);","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"        String div \u003d \"*|,\";","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Kailash201"},"content":"        String encodedTask \u003d \"\";","lastModifiedDate":"2023-09-11"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"Kailash201"},"content":"            encodedTask \u003d encodeTodo(div, task);","lastModifiedDate":"2023-09-11"},{"lineNumber":46,"author":{"gitId":"Kailash201"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"Kailash201"},"content":"            encodedTask \u003d encodeDeadline(div, task);","lastModifiedDate":"2023-09-11"},{"lineNumber":48,"author":{"gitId":"Kailash201"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"Kailash201"},"content":"            encodedTask \u003d encodeEvent(div, task);","lastModifiedDate":"2023-09-11"},{"lineNumber":50,"author":{"gitId":"Kailash201"},"content":"        } else if (task instanceof TodoTime) {","lastModifiedDate":"2023-09-11"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"            encodedTask \u003d encodedTodoTime(div, task);","lastModifiedDate":"2023-09-11"},{"lineNumber":52,"author":{"gitId":"Kailash201"},"content":"        } else {","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"Kailash201"},"content":"            assert false;","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"Kailash201"},"content":"        fW.write(encodedTask);","lastModifiedDate":"2023-09-11"},{"lineNumber":56,"author":{"gitId":"Kailash201"},"content":"        fW.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"Kailash201"},"content":"     * Edit the marks or unmarks of a task in the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"Kailash201"},"content":"     * @param n The line to be edited.","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"Kailash201"},"content":"     * @param newChar The mark to be replaced.","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"Kailash201"},"content":"     * @throws IOException If any file issues exists.","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"Kailash201"},"content":"    public void editFileAtLineN(int n, char newChar) throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"Kailash201"},"content":"        // n starts from 0","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"Kailash201"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"Kailash201"},"content":"        String line \u003d reader.readLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"Kailash201"},"content":"        StringBuilder oldContent \u003d new StringBuilder();","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"Kailash201"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"Kailash201"},"content":"        while (line !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"Kailash201"},"content":"            if (i \u003d\u003d n) {","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"Kailash201"},"content":"                StringBuilder sB \u003d new StringBuilder(line);","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"Kailash201"},"content":"                sB.setCharAt(line.length() - 1, newChar);","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"Kailash201"},"content":"                line \u003d sB.toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"Kailash201"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"Kailash201"},"content":"            oldContent.append(line).append(System.lineSeparator());","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"Kailash201"},"content":"            line \u003d reader.readLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"Kailash201"},"content":"            i++;","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"Kailash201"},"content":"        FileWriter fW \u003d new FileWriter(filePath + \"/\" + fileName);","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"Kailash201"},"content":"        fW.write(oldContent.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"Kailash201"},"content":"        fW.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"Kailash201"},"content":"        assert !oldContent.toString().isEmpty();","lastModifiedDate":"2023-09-10"},{"lineNumber":85,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":87,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"Kailash201"},"content":"     * Deletes a task from the file at line n.","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"Kailash201"},"content":"     * @param n The line to be deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"Kailash201"},"content":"     * @throws IOException If any file issues exists.","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"Kailash201"},"content":"    public void deleteTaskFromFile(int n) throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"Kailash201"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"Kailash201"},"content":"        String line \u003d reader.readLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"Kailash201"},"content":"        StringBuilder oldContent \u003d new StringBuilder();","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"Kailash201"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"Kailash201"},"content":"        while (line !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"Kailash201"},"content":"            if (i !\u003d n) {","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"Kailash201"},"content":"                oldContent.append(line).append(System.lineSeparator());","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"Kailash201"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"Kailash201"},"content":"            line \u003d reader.readLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"Kailash201"},"content":"            i++;","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"Kailash201"},"content":"        FileWriter fW \u003d new FileWriter(file);","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"Kailash201"},"content":"        fW.write(oldContent.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"Kailash201"},"content":"        fW.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":109,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"Kailash201"},"content":"     * Read the data from the file and convert it to list of Tasks object.","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"Kailash201"},"content":"     * @return List of Tasks in ArrayList.","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"Kailash201"},"content":"     * @throws IOException If any file issues exists.","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"Kailash201"},"content":"    public ArrayList\u003cTask\u003e fileToObjects() throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"Kailash201"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"Kailash201"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"Kailash201"},"content":"        String line \u003d reader.readLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"Kailash201"},"content":"        String div \u003d \"*|,\";","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"Kailash201"},"content":"        Task task \u003d new Task(\"empty\");","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"Kailash201"},"content":"        while (line !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"Kailash201"},"content":"            if (line.charAt(0) \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"Kailash201"},"content":"                task \u003d decodeTodo(line, div);","lastModifiedDate":"2023-09-11"},{"lineNumber":123,"author":{"gitId":"Kailash201"},"content":"            } else if (line.charAt(0) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"Kailash201"},"content":"                task \u003d decodeDeadline(line, div);","lastModifiedDate":"2023-09-11"},{"lineNumber":125,"author":{"gitId":"Kailash201"},"content":"            } else if (line.charAt(0) \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"Kailash201"},"content":"                task \u003d decodeEvent(line, div);","lastModifiedDate":"2023-09-11"},{"lineNumber":127,"author":{"gitId":"Kailash201"},"content":"            } else if (line.charAt(0) \u003d\u003d \u0027L\u0027) {","lastModifiedDate":"2023-09-11"},{"lineNumber":128,"author":{"gitId":"Kailash201"},"content":"                task \u003d decodeTodoTime(line, div);","lastModifiedDate":"2023-09-11"},{"lineNumber":129,"author":{"gitId":"Kailash201"},"content":"            } else {","lastModifiedDate":"2023-09-10"},{"lineNumber":130,"author":{"gitId":"Kailash201"},"content":"                assert false;","lastModifiedDate":"2023-09-10"},{"lineNumber":131,"author":{"gitId":"Kailash201"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"Kailash201"},"content":"            // check if task is completed","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"Kailash201"},"content":"            if (line.charAt(line.length() - 1) \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"Kailash201"},"content":"                task.taskCompleted();","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"Kailash201"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"Kailash201"},"content":"                task.taskNotCompleted();","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"Kailash201"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"Kailash201"},"content":"            tasks.add(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"Kailash201"},"content":"            line \u003d reader.readLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"Kailash201"},"content":"        return tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":145,"author":{"gitId":"Kailash201"},"content":"     * Checks if file or directory exists. If it does not","lastModifiedDate":"2023-09-11"},{"lineNumber":146,"author":{"gitId":"Kailash201"},"content":"     * exist, makes a new file or directory.","lastModifiedDate":"2023-09-11"},{"lineNumber":147,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":148,"author":{"gitId":"Kailash201"},"content":"    private void createDirectoryNFileIfFileDoNotExists() {","lastModifiedDate":"2023-09-11"},{"lineNumber":149,"author":{"gitId":"Kailash201"},"content":"        File directory \u003d new File(filePath);","lastModifiedDate":"2023-09-11"},{"lineNumber":150,"author":{"gitId":"Kailash201"},"content":"        File localFile \u003d new File(filePath + \"/\" + fileName);","lastModifiedDate":"2023-09-11"},{"lineNumber":151,"author":{"gitId":"Kailash201"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2023-09-11"},{"lineNumber":152,"author":{"gitId":"Kailash201"},"content":"            directory.mkdir();","lastModifiedDate":"2023-09-11"},{"lineNumber":153,"author":{"gitId":"Kailash201"},"content":"            try {","lastModifiedDate":"2023-09-11"},{"lineNumber":154,"author":{"gitId":"Kailash201"},"content":"                new FileWriter(filePath + \"/\" + fileName);","lastModifiedDate":"2023-09-11"},{"lineNumber":155,"author":{"gitId":"Kailash201"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-11"},{"lineNumber":156,"author":{"gitId":"Kailash201"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-09-11"},{"lineNumber":157,"author":{"gitId":"Kailash201"},"content":"            }","lastModifiedDate":"2023-09-11"},{"lineNumber":158,"author":{"gitId":"Kailash201"},"content":"            file \u003d new File(filePath + \"/\" + fileName);","lastModifiedDate":"2023-09-11"},{"lineNumber":159,"author":{"gitId":"Kailash201"},"content":"        } else if (!localFile.exists()) {","lastModifiedDate":"2023-09-11"},{"lineNumber":160,"author":{"gitId":"Kailash201"},"content":"            try {","lastModifiedDate":"2023-09-11"},{"lineNumber":161,"author":{"gitId":"Kailash201"},"content":"                new FileWriter(filePath + \"/\" + fileName);","lastModifiedDate":"2023-09-11"},{"lineNumber":162,"author":{"gitId":"Kailash201"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-11"},{"lineNumber":163,"author":{"gitId":"Kailash201"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-09-11"},{"lineNumber":164,"author":{"gitId":"Kailash201"},"content":"            }","lastModifiedDate":"2023-09-11"},{"lineNumber":165,"author":{"gitId":"Kailash201"},"content":"            file \u003d new File(filePath + \"/\" + fileName);","lastModifiedDate":"2023-09-11"},{"lineNumber":166,"author":{"gitId":"Kailash201"},"content":"        } else {","lastModifiedDate":"2023-09-11"},{"lineNumber":167,"author":{"gitId":"Kailash201"},"content":"            file \u003d localFile;","lastModifiedDate":"2023-09-11"},{"lineNumber":168,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":169,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":170,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":171,"author":{"gitId":"Kailash201"},"content":"    private Task decodeTodoTime(String line, String div) {","lastModifiedDate":"2023-09-11"},{"lineNumber":172,"author":{"gitId":"Kailash201"},"content":"        String sub \u003d line.substring(div.length() + 1);","lastModifiedDate":"2023-09-11"},{"lineNumber":173,"author":{"gitId":"Kailash201"},"content":"        String desc \u003d sub.substring(0, sub.indexOf(div));","lastModifiedDate":"2023-09-11"},{"lineNumber":174,"author":{"gitId":"Kailash201"},"content":"        int firstLine \u003d sub.indexOf(div) + div.length();","lastModifiedDate":"2023-09-11"},{"lineNumber":175,"author":{"gitId":"Kailash201"},"content":"        String duration \u003d sub.substring(firstLine, sub.indexOf(div, firstLine));","lastModifiedDate":"2023-09-11"},{"lineNumber":176,"author":{"gitId":"Kailash201"},"content":"        return new TodoTime(desc, duration);","lastModifiedDate":"2023-09-11"},{"lineNumber":177,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":178,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":179,"author":{"gitId":"Kailash201"},"content":"    private Task decodeTodo(String line, String div) {","lastModifiedDate":"2023-09-11"},{"lineNumber":180,"author":{"gitId":"Kailash201"},"content":"        String desc \u003d line.substring(div.length() + 1, line.lastIndexOf(div));","lastModifiedDate":"2023-09-11"},{"lineNumber":181,"author":{"gitId":"Kailash201"},"content":"        return new Todo(desc);","lastModifiedDate":"2023-09-11"},{"lineNumber":182,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":183,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":184,"author":{"gitId":"Kailash201"},"content":"    private Task decodeDeadline(String line, String div) {","lastModifiedDate":"2023-09-11"},{"lineNumber":185,"author":{"gitId":"Kailash201"},"content":"        String sub \u003d line.substring(div.length() + 1);","lastModifiedDate":"2023-09-11"},{"lineNumber":186,"author":{"gitId":"Kailash201"},"content":"        String desc \u003d sub.substring(0, sub.indexOf(div));","lastModifiedDate":"2023-09-11"},{"lineNumber":187,"author":{"gitId":"Kailash201"},"content":"        int firstLine \u003d sub.indexOf(div) + div.length();","lastModifiedDate":"2023-09-11"},{"lineNumber":188,"author":{"gitId":"Kailash201"},"content":"        String by \u003d sub.substring(firstLine, sub.indexOf(div, firstLine));","lastModifiedDate":"2023-09-11"},{"lineNumber":189,"author":{"gitId":"Kailash201"},"content":"        return new Deadline(desc, LocalDateTime.parse(by));","lastModifiedDate":"2023-09-11"},{"lineNumber":190,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":191,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":192,"author":{"gitId":"Kailash201"},"content":"    private Task decodeEvent(String line, String div) {","lastModifiedDate":"2023-09-11"},{"lineNumber":193,"author":{"gitId":"Kailash201"},"content":"        String sub \u003d line.substring(div.length() + 1);","lastModifiedDate":"2023-09-11"},{"lineNumber":194,"author":{"gitId":"Kailash201"},"content":"        String desc \u003d sub.substring(0, sub.indexOf(div));","lastModifiedDate":"2023-09-11"},{"lineNumber":195,"author":{"gitId":"Kailash201"},"content":"        int firstLine \u003d sub.indexOf(div) + div.length();","lastModifiedDate":"2023-09-11"},{"lineNumber":196,"author":{"gitId":"Kailash201"},"content":"        String from \u003d sub.substring(firstLine, sub.indexOf(div, firstLine));","lastModifiedDate":"2023-09-11"},{"lineNumber":197,"author":{"gitId":"Kailash201"},"content":"        int secLine \u003d sub.indexOf(div, firstLine) + div.length();","lastModifiedDate":"2023-09-11"},{"lineNumber":198,"author":{"gitId":"Kailash201"},"content":"        String to \u003d sub.substring(secLine, sub.indexOf(div, secLine));","lastModifiedDate":"2023-09-11"},{"lineNumber":199,"author":{"gitId":"Kailash201"},"content":"        return new Event(desc, LocalDateTime.parse(from), LocalDateTime.parse(to));","lastModifiedDate":"2023-09-11"},{"lineNumber":200,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":201,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":202,"author":{"gitId":"Kailash201"},"content":"    private String encodedTodoTime(String div, Task task) {","lastModifiedDate":"2023-09-11"},{"lineNumber":203,"author":{"gitId":"Kailash201"},"content":"        StringBuilder custom \u003d new StringBuilder();","lastModifiedDate":"2023-09-11"},{"lineNumber":204,"author":{"gitId":"Kailash201"},"content":"        TodoTime tt \u003d (TodoTime) task;","lastModifiedDate":"2023-09-11"},{"lineNumber":205,"author":{"gitId":"Kailash201"},"content":"        custom.append(\"L\").append(div).append(tt.getDesc()).append(div)","lastModifiedDate":"2023-09-11"},{"lineNumber":206,"author":{"gitId":"Kailash201"},"content":"                .append(tt.getDuration()).append(div)","lastModifiedDate":"2023-09-11"},{"lineNumber":207,"author":{"gitId":"Kailash201"},"content":"                .append(tt.getStatus().equals(\"X\") ? 1 : 0)","lastModifiedDate":"2023-09-11"},{"lineNumber":208,"author":{"gitId":"Kailash201"},"content":"                .append(System.lineSeparator());","lastModifiedDate":"2023-09-11"},{"lineNumber":209,"author":{"gitId":"Kailash201"},"content":"        return custom.toString();","lastModifiedDate":"2023-09-11"},{"lineNumber":210,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":211,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":212,"author":{"gitId":"Kailash201"},"content":"    private String encodeTodo(String div, Task task) {","lastModifiedDate":"2023-09-11"},{"lineNumber":213,"author":{"gitId":"Kailash201"},"content":"        StringBuilder custom \u003d new StringBuilder();","lastModifiedDate":"2023-09-11"},{"lineNumber":214,"author":{"gitId":"Kailash201"},"content":"        Todo td \u003d (Todo) task;","lastModifiedDate":"2023-09-11"},{"lineNumber":215,"author":{"gitId":"Kailash201"},"content":"        custom.append(\"T\").append(div).append(td.getDesc()).append(div)","lastModifiedDate":"2023-09-11"},{"lineNumber":216,"author":{"gitId":"Kailash201"},"content":"                .append(td.getStatus().equals(\"X\") ? 1 : 0)","lastModifiedDate":"2023-09-11"},{"lineNumber":217,"author":{"gitId":"Kailash201"},"content":"                .append(System.lineSeparator());","lastModifiedDate":"2023-09-11"},{"lineNumber":218,"author":{"gitId":"Kailash201"},"content":"        return custom.toString();","lastModifiedDate":"2023-09-11"},{"lineNumber":219,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":220,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":221,"author":{"gitId":"Kailash201"},"content":"    private String encodeDeadline(String div, Task task) {","lastModifiedDate":"2023-09-11"},{"lineNumber":222,"author":{"gitId":"Kailash201"},"content":"        StringBuilder custom \u003d new StringBuilder();","lastModifiedDate":"2023-09-11"},{"lineNumber":223,"author":{"gitId":"Kailash201"},"content":"        Deadline dl \u003d (Deadline) task;","lastModifiedDate":"2023-09-11"},{"lineNumber":224,"author":{"gitId":"Kailash201"},"content":"        custom.append(\"D\").append(div).append(dl.getDesc()).append(div).append(dl.getBy()).append(div)","lastModifiedDate":"2023-09-11"},{"lineNumber":225,"author":{"gitId":"Kailash201"},"content":"                .append(dl.getStatus().equals(\"X\") ? 1 : 0)","lastModifiedDate":"2023-09-11"},{"lineNumber":226,"author":{"gitId":"Kailash201"},"content":"                .append(System.lineSeparator());","lastModifiedDate":"2023-09-11"},{"lineNumber":227,"author":{"gitId":"Kailash201"},"content":"        return custom.toString();","lastModifiedDate":"2023-09-11"},{"lineNumber":228,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":229,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":230,"author":{"gitId":"Kailash201"},"content":"    private String encodeEvent(String div, Task task) {","lastModifiedDate":"2023-09-11"},{"lineNumber":231,"author":{"gitId":"Kailash201"},"content":"        StringBuilder custom \u003d new StringBuilder();","lastModifiedDate":"2023-09-11"},{"lineNumber":232,"author":{"gitId":"Kailash201"},"content":"        Event eve \u003d (Event) task;","lastModifiedDate":"2023-09-11"},{"lineNumber":233,"author":{"gitId":"Kailash201"},"content":"        custom.append(\"E\").append(div).append(eve.getDesc()).append(div)","lastModifiedDate":"2023-09-11"},{"lineNumber":234,"author":{"gitId":"Kailash201"},"content":"                .append(eve.getFrom()).append(div).append(eve.getTo()).append(div)","lastModifiedDate":"2023-09-11"},{"lineNumber":235,"author":{"gitId":"Kailash201"},"content":"                .append(eve.getStatus().equals(\"X\") ? 1 : 0)","lastModifiedDate":"2023-09-11"},{"lineNumber":236,"author":{"gitId":"Kailash201"},"content":"                .append(System.lineSeparator());","lastModifiedDate":"2023-09-11"},{"lineNumber":237,"author":{"gitId":"Kailash201"},"content":"        return custom.toString();","lastModifiedDate":"2023-09-11"},{"lineNumber":238,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":239,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":240,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":241,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Kailash201":241}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":" * Represents a deadline task that can be tracked in","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":" * the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"     * Deadline constructor that takes in a String and LocalDateTime.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"     * @param desc Description of the deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"     * @param by The due date of the deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"    public Deadline(String desc, LocalDateTime by) {","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"        super(desc);","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"     * Returns The date and time of the deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"     * @return The date and time of the deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"        return by;","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"     * Returns The string representation of Deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"     * @return String representation of deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"                + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \")\";","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Kailash201":41}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":" * Represents an event task that can be tracked in","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":" * the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"     * Event constructor that takes in String, LocalDateTime, LocalDateTime.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"     * @param desc Description of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"     * @param from The starting date and time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"     * @param to The ending date and time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"    public Event(String desc, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"        super(desc);","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"     * Returns the starting date and time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"     * @return Starting date and time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"        return from;","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"     * Returns the ending date and time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"     * @return ending date and time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"        return to;","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"     * Returns the string representation of an event.","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Kailash201"},"content":"     * @return The string representation of an event.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"Kailash201"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"Kailash201"},"content":"        return \"[E]\" + super.toString() + \" (from: \"","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"Kailash201"},"content":"                + from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \" \"","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"                + \"- \" + to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \")\";","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Kailash201":53}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":" * Represents a task object that will be used to keep track in","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":" * the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"    private final String desc;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"    private boolean isCompleted;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"     * Constructor for Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"     * @param desc Description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"    public Task(String desc) {","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"     * Marks the task completed.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"    public void taskCompleted() {","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"     * Marks the task not completed.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"    public void taskNotCompleted() {","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"     * Returns the marked status of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"     * @return Marked status.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"    public String getStatus() {","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"        return isCompleted ? \"X\" : \" \";","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Kailash201"},"content":"     * @return Task\u0027s description.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Kailash201"},"content":"    public String getDesc() {","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"Kailash201"},"content":"        return desc;","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Kailash201"},"content":"     * Returns the string representation of task.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Kailash201"},"content":"     * @return String representation of task.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"Kailash201"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"Kailash201"},"content":"        return \"[\" + getStatus() + \"]\" + \" \" + this.desc;","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Kailash201":59}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":" * Represents a list of Tasks object.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"public class TaskList {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"     * TaskList constructor that takes in an ArrayList\u003cTask\u003e.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"     * @param tasks Arraylist of tasks object.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"     * Removes a task from the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"     * @param n Index position of the task in the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"     * @return The removed task.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"    public Task remTask(int n) {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"        return tasks.remove(n);","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"     * Adds a task into the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"     * @param task The task that is being added.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"     * Checks if the list is empty.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"     * @return True if the list is empty.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"    public boolean isTaskListEmpty() {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Kailash201"},"content":"     * Gets a task from the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Kailash201"},"content":"     * @param n Index position of the wanted task in the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Kailash201"},"content":"     * @return The wanted task.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Kailash201"},"content":"    public Task getTask (int n) {","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"        return tasks.get(n);","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Kailash201"},"content":"     * Returns the size of the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Kailash201"},"content":"     * @return List\u0027s size.","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Kailash201"},"content":"    public int getSize() {","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"Kailash201"},"content":"        return tasks.size();","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Kailash201":61}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":" * Represents a todo task that can be tracked in","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":" * the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"     * Todo Constructor that takes in a String.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"     * @param desc Description of the todo.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"    public Todo(String desc) {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"        super(desc);","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"     * Returns the string representation of a todo.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"     * @return The string representation of a todo.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Kailash201":25}},{"path":"src/main/java/tasks/TodoTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package tasks;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"public class TodoTime extends Task {","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"    private final String duration;","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"    public TodoTime(String desc, String duration) {","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"        super(desc);","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"    public String getDuration() {","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"        return duration;","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"     * Returns The string representation of TodoTime.","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"     * @return String representation of TodoTime.","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"    public String toString() {","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"        return \"[TT]\" + super.toString() + \" (needs \" + duration + \")\";","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"Kailash201":24}},{"path":"src/main/java/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"import javafx.scene.shape.Rectangle;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":" * A class that represents the dialog box of the user and Mr Red","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":" * when a command has entered.","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"    private Label name;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"     * DialogBox constructor that takes in String, Image, int.","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"     * @param l The string to display on the dialog box.","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"     * @param iv The image to display on the dialog box.","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"     * @param u Checks if it is user or Mr Red.","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"    public DialogBox(String l, Image iv, int u) {","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"        customUserHeader(iv, u);","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"        customTextDisplay(l, u);","lastModifiedDate":"2023-09-11"},{"lineNumber":43,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"Kailash201"},"content":"     * Returns a string indicating the user or Mr Red.","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"Kailash201"},"content":"     * @param i int representing user or Mr Red.","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"Kailash201"},"content":"     * @return The type.","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"Kailash201"},"content":"    public String user(int i) {","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"        if (i \u003d\u003d 0) {","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"Kailash201"},"content":"            return \"You\";","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"Kailash201"},"content":"        } else {","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"Kailash201"},"content":"            return \"Mr Red\";","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":58,"author":{"gitId":"Kailash201"},"content":"    private void customUserHeader(Image iv, int u) {","lastModifiedDate":"2023-09-11"},{"lineNumber":59,"author":{"gitId":"Kailash201"},"content":"        name.setText(user(u));","lastModifiedDate":"2023-09-11"},{"lineNumber":60,"author":{"gitId":"Kailash201"},"content":"        Rectangle clip \u003d new Rectangle(","lastModifiedDate":"2023-09-11"},{"lineNumber":61,"author":{"gitId":"Kailash201"},"content":"                displayPicture.getFitWidth(), displayPicture.getFitWidth()","lastModifiedDate":"2023-09-11"},{"lineNumber":62,"author":{"gitId":"Kailash201"},"content":"        );","lastModifiedDate":"2023-09-11"},{"lineNumber":63,"author":{"gitId":"Kailash201"},"content":"        clip.setArcHeight(200);","lastModifiedDate":"2023-09-11"},{"lineNumber":64,"author":{"gitId":"Kailash201"},"content":"        clip.setArcWidth(200);","lastModifiedDate":"2023-09-11"},{"lineNumber":65,"author":{"gitId":"Kailash201"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2023-09-11"},{"lineNumber":66,"author":{"gitId":"Kailash201"},"content":"        displayPicture.setImage(iv);","lastModifiedDate":"2023-09-11"},{"lineNumber":67,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":68,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":69,"author":{"gitId":"Kailash201"},"content":"    private void customTextDisplay(String l, int u) {","lastModifiedDate":"2023-09-11"},{"lineNumber":70,"author":{"gitId":"Kailash201"},"content":"        dialog.setText(l);","lastModifiedDate":"2023-09-11"},{"lineNumber":71,"author":{"gitId":"Kailash201"},"content":"        if (u \u003d\u003d 0) {","lastModifiedDate":"2023-09-11"},{"lineNumber":72,"author":{"gitId":"Kailash201"},"content":"            dialog.setStyle(\"-fx-background-color: #c2dadf;\"","lastModifiedDate":"2023-09-11"},{"lineNumber":73,"author":{"gitId":"Kailash201"},"content":"                    + \"-fx-padding: 10px;\" + \"-fx-background-radius: 20px;\");","lastModifiedDate":"2023-09-11"},{"lineNumber":74,"author":{"gitId":"Kailash201"},"content":"        } else {","lastModifiedDate":"2023-09-11"},{"lineNumber":75,"author":{"gitId":"Kailash201"},"content":"            dialog.setStyle(\"-fx-background-color: #f9c9c4;\"","lastModifiedDate":"2023-09-11"},{"lineNumber":76,"author":{"gitId":"Kailash201"},"content":"                    + \"-fx-padding: 10px;\" + \"-fx-background-radius: 20px;\");","lastModifiedDate":"2023-09-11"},{"lineNumber":77,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":78,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":79,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"Kailash201":79}},{"path":"src/main/java/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/blue.png\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/red.png\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"        dialogContainer.getChildren().add(new DialogBox(\"Hello! I\u0027m Mr Red\\nWhat can I do for you?\\n\"","lastModifiedDate":"2023-09-17"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"                + \"Type help to get all available commands\",","lastModifiedDate":"2023-09-17"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"                dukeImage, 1));","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"Kailash201"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"Kailash201"},"content":"    public String getUserInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"Kailash201"},"content":"        return userInput.getText();","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"Kailash201"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"Kailash201"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"Kailash201"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"Kailash201"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"Kailash201"},"content":"            runUserInput();","lastModifiedDate":"2023-09-11"},{"lineNumber":58,"author":{"gitId":"Kailash201"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-11"},{"lineNumber":59,"author":{"gitId":"Kailash201"},"content":"            errMessageResponse(e);","lastModifiedDate":"2023-09-11"},{"lineNumber":60,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":61,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":62,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":63,"author":{"gitId":"Kailash201"},"content":"    private void runUserInput() {","lastModifiedDate":"2023-09-11"},{"lineNumber":64,"author":{"gitId":"Kailash201"},"content":"        String input \u003d getUserInput();","lastModifiedDate":"2023-09-11"},{"lineNumber":65,"author":{"gitId":"Kailash201"},"content":"        String response \u003d duke.response(input);","lastModifiedDate":"2023-09-11"},{"lineNumber":66,"author":{"gitId":"Kailash201"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"Kailash201"},"content":"                new DialogBox(input, userImage, 0),","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"Kailash201"},"content":"                new DialogBox(response, dukeImage, 1)","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"Kailash201"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"Kailash201"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":72,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":73,"author":{"gitId":"Kailash201"},"content":"    private void errMessageResponse(DukeException e) {","lastModifiedDate":"2023-09-11"},{"lineNumber":74,"author":{"gitId":"Kailash201"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"Kailash201"},"content":"                new DialogBox(userInput.getText(), userImage, 0),","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"Kailash201"},"content":"                new DialogBox(e.getMessage(), dukeImage, 1)","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"Kailash201"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"Kailash201"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"Kailash201":80}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/19.0.4\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"    \u003cVBox\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"            \u003cHBox alignment\u003d\"TOP_RIGHT\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"                    \u003cLabel fx:id\u003d\"name\" text\u003d\"Label\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"                  \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"                     \u003cInsets right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"                  \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"                    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"25.0\" fitWidth\u003d\"25.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"                  \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"                     \u003cInsets /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"                  \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"                \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"          \u003cStackPane fx:id\u003d\"rect\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"             \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"                  \u003cLabel fx:id\u003d\"dialog\" minWidth\u003d\"90.0\" text\u003d\"Label\" wrapText\u003d\"true\" alignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"             \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"          \u003c/StackPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"        \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"            \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"Kailash201":35}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"702.0\" prefWidth\u003d\"502.0\" style\u003d\"fx-background-colour: blue\" xmlns\u003d\"http://javafx.com/javafx/19.0.4\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"ui.MainWindow\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"        \u003cHBox layoutY\u003d\"650.0\" style\u003d\"-fx-background-color: #FFFFF0;-fx-border-color: #FFFFF0;\"\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"50.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-radius: 30 30 30 30; -fx-background-color: #FAEBDB; -fx-border-radius: 30 30 30 30; -fx-border-color: #835B5B;\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"400.0\" layoutY\u003d\"650.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"50.0\" prefWidth\u003d\"100\" style\u003d\"-fx-border-radius: 20 20 20 20; -fx-background-radius: 20 20 20 20; -fx-background-color: #FBE1CB; -fx-border-color: #835B5B;\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"650.0\" prefWidth\u003d\"500.0\" style\u003d\"-fx-background: #FFFFF0;-fx-background-color:transparent;\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"500.0\" /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"Kailash201":22}},{"path":"src/test/data/existing.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"D*|,Study*|,2019-04-04T03:00*|,0","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"D*|,Study*|,2019-04-04T03:00*|,0","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"Kailash201":2}},{"path":"src/test/java/duke/CustomDateTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"public class CustomDateTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"    public void strToDateTime_checkDate_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"        assertEquals(\"2019-04-04T02:00\",","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"                new CustomDate().strToDateTime(\"4/4/2019 0200\").toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Kailash201":15}},{"path":"src/test/java/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"    public void convertTaskInput_deadlineCommand_success() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"        assertEqualsConvertTaskInput(\"deadline Do notes /by 2/2/2019 2222\");","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"    public void convertTaskInput_missingNameDeadlineCommand_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"            String input \u003d \"deadline /by 2/2/2019 2222\";","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"            new Parser(\"D\").convertTaskInput(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"            assertEquals(\"Your Deadline name is blank\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"    public void getCommand_invalidCommandNotEmpty_throwDukeException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"            assertEquals(\" \", new Parser().getCommand(\"sdfsfsdf\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"            assertEquals(\"Invalid command\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"    public void getCommand_invalidCommandTodo_throwDukeException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"            assertEquals(\" \", new Parser().getCommand(\"todooo\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Kailash201"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Kailash201"},"content":"            assertEquals(\"Invalid command\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Kailash201"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Kailash201"},"content":"    public void getCommand_invalidCommandDl_throwDukeException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Kailash201"},"content":"            assertEquals(\" \", new Parser().getCommand(\"deadlinesad\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Kailash201"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Kailash201"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Kailash201"},"content":"            assertEquals(\"Invalid command\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Kailash201"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Kailash201"},"content":"    public void getCommand_invalidCommandEvent_throwDukeException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Kailash201"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Kailash201"},"content":"            assertEquals(\" \", new Parser().getCommand(\"eventsdf\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Kailash201"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Kailash201"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"Kailash201"},"content":"            assertEquals(\"Invalid command\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"Kailash201"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"Kailash201"},"content":"    public void getCommand_invalidCommandEmpty_throwDukeException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"Kailash201"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"Kailash201"},"content":"            assertEquals(\" \", new Parser().getCommand(\"\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"Kailash201"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"Kailash201"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"Kailash201"},"content":"            assertEquals(\"Invalid command\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"Kailash201"},"content":"    /*","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"Kailash201"},"content":"    Helper methods","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"Kailash201"},"content":"    // deadline eat /by 2/2/2019 2222","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"Kailash201"},"content":"    public void assertEqualsConvertTaskInput(String input) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"Kailash201"},"content":"        ArrayList\u003cString\u003e texts \u003d new Parser(\"D\").convertTaskInput(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"Kailash201"},"content":"        assertEquals(\"Do notes\", texts.get(0));","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"Kailash201"},"content":"        assertEquals(\"2/2/2019 2222\", texts.get(1));","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Kailash201":89}},{"path":"src/test/java/storage/DataFileTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"public class DataFileTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"    public void writeToFile_writeDeadline_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"        DataFile dF \u003d new DataFile(\"src/test/data\", \"existing.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"        Task task \u003d new Deadline(\"Study\", LocalDateTime.parse(\"2019-04-04T03:00\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"            dF.writeToFile(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(\"src/test/data/existing.txt\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"            String line \u003d br.readLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"            assertEquals(\"D*|,Study*|,2019-04-04T03:00*|,0\", line);","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"    public void deleteTaskFromFile_remDeadline_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"        DataFile dF \u003d new DataFile(\"src/test/data\", \"tmp_del_task.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"        Task task \u003d new Deadline(\"Study\", LocalDateTime.parse(\"2019-04-04T03:00\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"            dF.writeToFile(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"            dF.deleteTaskFromFile(0);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(\"src/test/data/tmp_del_task.txt\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"            String line \u003d br.readLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"            assertNull(line);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Kailash201"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Kailash201"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Kailash201":48}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"todo borrow book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"unmark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"delete 2","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Kailash201":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Kailash201":1,"-":20}}]
