[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Kailash201":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Kailash201":1,"-":41}},{"path":"src/main/java/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import storage.DataFile;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":" * Represents a type of command that can be read by the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"     * Executes the bye command.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"     * @param dF The file to be edited on.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"    public void execute(TaskList tasks, DataFile dF) {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"        System.out.println(this);","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"     * Returns true as this is an exit command.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"     * @return True.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"        return true;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"     * Returns the string representation of bye command.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"     * @return String representation of bye command.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Kailash201":38}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import storage.DataFile;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":" * Represents a command that can be read by the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"abstract public class Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"     * Abstract method to implemented.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"     * @param dF The file to be edited on.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"    abstract public void execute(TaskList tasks , DataFile dF);","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"     * Returns a boolean depending the command.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"     * Default is false.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"     * @return False, as that is the default.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Kailash201":26}},{"path":"src/main/java/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import duke.CustomDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import storage.DataFile;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"import tasks.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":" * Represents a type of command that can be read by the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"    private final ArrayList\u003cString\u003e texts;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"    private Task task;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"    private int size;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"     * DeadlineCommand constructor that takes in an ArrayList.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"     * @param texts ArrayList of texts needed for deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"    public DeadlineCommand(ArrayList\u003cString\u003e texts) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"        this.texts \u003d texts;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"     * Executes the deadline command.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"     * @param dF The file to be edited on.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"    public void execute(TaskList tasks , DataFile dF) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"        CustomDate cD \u003d new CustomDate();","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"        Task dL \u003d new Deadline(texts.get(0), cD.strToDateTime(texts.get(1)));","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"        tasks.addTask(dL);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"        task \u003d dL;","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"        size \u003d tasks.getSize();","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"        System.out.println(this);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"            dF.writeToFile(dL);","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Kailash201"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Kailash201"},"content":"     * Returns the string representation of deadline command.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Kailash201"},"content":"     * @return String representation of deadline command.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Kailash201"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Kailash201"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + task","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Kailash201"},"content":"                + \"\\nNow you have \" + size + \" tasks in the list.\";","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Kailash201":57}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import storage.DataFile;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"import tasks.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":" * Represents a type of command that can be read by the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"    private final int index;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"    private int size \u003d -1;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"    private Task task;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"     * DeleteCommand constructor that takes in an int.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"     * @param index Index of the task to be deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"     * Executes the delete command.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"     * @param dF The file to be edited on.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"    public void execute(TaskList tasks, DataFile dF) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"        if (tasks.isTaskListEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"List is already empty, nothing to catch\");","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"        Task task \u003d tasks.remTask(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"        size \u003d tasks.getSize();","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + task","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"                + \"\\nNow you have \" + tasks.getSize()  + \" tasks in the list.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Kailash201"},"content":"            dF.deleteTaskFromFile(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Kailash201"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"     * Returns the string representation of delete command.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Kailash201"},"content":"     * @return String representation of delete command.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Kailash201"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Kailash201"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + task","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Kailash201"},"content":"                + \"\\nNow you have \" + size  + \" tasks in the list.\";","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Kailash201":59}},{"path":"src/main/java/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import duke.CustomDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import storage.DataFile;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"import tasks.Event;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"import tasks.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":" * Represents a type of command that can be read by the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"    private final ArrayList\u003cString\u003e texts;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"    private Task task;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"    private int size;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"     * EventCommand constructor that takes in an ArrayList.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"     * @param texts ArrayList of texts needed for event.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"    public EventCommand(ArrayList\u003cString\u003e texts) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"        this.texts \u003d texts;","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"     * Executes the event command.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"     * @param dF The file to be edited on.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"    public void execute(TaskList tasks , DataFile dF) {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"        CustomDate cD \u003d new CustomDate();","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"        Task event \u003d new Event(texts.get(0),","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"                cD.strToDateTime(texts.get(1)), cD.strToDateTime(texts.get(2)));","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"        tasks.addTask(event);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"        task \u003d event;","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"        size \u003d tasks.getSize();","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"        System.out.println(this);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Kailash201"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"            dF.writeToFile(event);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Kailash201"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Kailash201"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"     * Returns the string representation of event command.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Kailash201"},"content":"     * @return String representation of event command.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Kailash201"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Kailash201"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + task","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Kailash201"},"content":"                + \"\\nNow you have \" + size  + \" tasks in the list.\";","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Kailash201":59}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package commands;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import storage.DataFile;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"    private final String keyWord;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"    public FindCommand(String keyWord) {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"        this.keyWord \u003d keyWord;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"    public void execute(TaskList tasks, DataFile dF) {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"        System.out.println(this);","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"            if (tasks.getTask(i).getDesc().contains(keyWord)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"                System.out.println(i + 1 + \".\" + tasks.getTask(i));","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"        return \"Here are the matching tasks from you list:\";","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Kailash201":27}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import storage.DataFile;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":" * Represents a type of command that can be read by the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"     * Executes the list command.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"     * @param dF The file to be edited on.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"    public void execute(TaskList tasks, DataFile dF) {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"        System.out.println(this);","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"            System.out.println(i + 1 + \".\" + tasks.getTask(i));","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"     * Returns the string representation of list command.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"     * @return String representation of list command.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"        return \"Here are the tasks in your list:\";","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Kailash201":32}},{"path":"src/main/java/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import storage.DataFile;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"import tasks.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":" * Represents a type of command that can be read by the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"    private Task task;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"    private final int index;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"     * MarkCommand constructor that takes in an int.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"     * @param index Index of the task to be marked.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"     * Executes the mark command.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"     * @param dF The file to be edited on.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"    public void execute(TaskList tasks, DataFile dF) throws DukeException{","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"        if (tasks.isTaskListEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"List is empty, nothing to mark\");","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"        Task task \u003d tasks.getTask(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"        task.taskCompleted();","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"        System.out.println(this);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"            dF.editFileAtLineN(index, \u00271\u0027);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Kailash201"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Kailash201"},"content":"     * Returns the string representation of mark command.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Kailash201"},"content":"     * @return String representation of mark command.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Kailash201"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Kailash201"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + task;","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Kailash201":55}},{"path":"src/main/java/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import storage.DataFile;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import tasks.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"import tasks.Todo;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":" * Represents a type of command that can be read by the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"    private final ArrayList\u003cString\u003e texts;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"    private Task task;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"    private int size;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"     * TodoCommand constructor that takes in an ArrayList.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"     * @param texts ArrayList of texts needed for todo.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"    public TodoCommand(ArrayList\u003cString\u003e texts) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"        this.texts \u003d texts;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"     * Executes the todo command.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"     * @param dF The file to be edited on.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"    public void execute(TaskList tasks, DataFile dF) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"        Task todo \u003d new Todo(texts.get(0));","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"        task \u003d todo;","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"        size \u003d tasks.getSize();","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"        System.out.println(this);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"            dF.writeToFile(todo);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Kailash201"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Kailash201"},"content":"     * Returns the string representation of todo command.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Kailash201"},"content":"     * @return String representation of todo command.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Kailash201"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Kailash201"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + task","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Kailash201"},"content":"                + \"\\nNow you have \" + size  + \" tasks in the list.\";","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Kailash201":56}},{"path":"src/main/java/commands/UnmarkComment.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import storage.DataFile;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"import tasks.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":" * Represents a type of command that can be read by the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"public class UnmarkComment extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"    private final int index;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"    private Task task;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"     * DeleteCommand constructor that takes in an int.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"     * @param index Index of the task to be unmarked.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"    public UnmarkComment(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"     * Executes the unmark command.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"     * @param dF The file to be edited on.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"    public void execute(TaskList tasks, DataFile dF) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"        if (tasks.isTaskListEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"List is empty, nothing to unmark\");","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"        Task selTask \u003d tasks.getTask(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"        selTask.taskNotCompleted();","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"        task \u003d selTask;","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"        System.out.println(this);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"            dF.editFileAtLineN(index, \u00270\u0027);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Kailash201"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Kailash201"},"content":"     * Returns the string representation of unmark command.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Kailash201"},"content":"     * @return String representation of unmark command.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Kailash201"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Kailash201"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + task;","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Kailash201":55}},{"path":"src/main/java/duke/CustomDate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import parser.Parser;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":" * Converts the string input of date into date and time objects.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"public class CustomDate {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"     * Returns the LocaleDateTime from a string.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"     * @param text Date, time in string.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"     * @return LocaleDateTime from the string.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"    public LocalDateTime strToDateTime(String text) {","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"        ArrayList\u003cString\u003e texts \u003d p.splitter(text, \"/\");","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"        ArrayList\u003cString\u003e yearNTime \u003d p.splitter(texts.get(2), \" \");","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"        String year \u003d addZeroFront(yearNTime.get(0));","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"        String mon \u003d addZeroFront(texts.get(1));","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"        String day \u003d addZeroFront(texts.get(0));","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"        String time \u003d formatTime(yearNTime.get(1));","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"        LocalDateTime dOne \u003d LocalDateTime.parse(year + \"-\" + mon + \"-\" + day + \"T\" + time);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"        return dOne;","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"     * Add zero to the front of a string that is 1 in length.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"     * @param text Text to be edited.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"     * @return Text with a zero in front.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"    public String addZeroFront(String text) {","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"        return text.length() \u003d\u003d 1 ? 0 + text : text;","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"     * Returns formatted time string.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"     * @param str Time in string.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"     * @return Formatted time string.","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"    public String formatTime(String str) {","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"Kailash201"},"content":"        return str.substring(0, 2) + \":\" + str.substring(2, 4);","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Kailash201":48}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import commands.Command;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import parser.Parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"import storage.DataFile;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"import tasks.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"import java.io.*;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":" * The programme that runs the Duke chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"    private final Ui ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"    private final DataFile dataFile;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"     * Duke constructor that takes a String, String and initialises","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"     * class variables.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"     * @param filePath Name of the path.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"     * @param fileName Name of the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"    public Duke(String filePath, String fileName) {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"        dataFile \u003d new DataFile(filePath, fileName);","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"            taskList \u003d new TaskList(dataFile.fileToObjects());","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"            taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"     * The main method.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"     * @param args Unused.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Kailash201"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"        String filePath \u003d \"./data/\";","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"Kailash201"},"content":"        String fileName \u003d \"trying.txt\";","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"Kailash201"},"content":"        new Duke(filePath, fileName).run();","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Kailash201"},"content":"     * The run logic of the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Kailash201"},"content":"    public void run() {","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"Kailash201"},"content":"        ui.welcomeMsg();","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"Kailash201"},"content":"        boolean run \u003d true;","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"Kailash201"},"content":"        while (run) {","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"Kailash201"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"Kailash201"},"content":"                String command \u003d ui.readCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"Kailash201"},"content":"                Command c \u003d new Parser().getCommand(command);","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Kailash201"},"content":"                c.execute(taskList, dataFile);","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"Kailash201"},"content":"                run \u003d !c.isExit();","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"Kailash201"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Kailash201"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"Kailash201"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Kailash201":63,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":" * Exceptions that are unique to the duke programme.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"     * DukeException constructor that takes in a String.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"     * @param errMes Duke\u0027s error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"    public DukeException(String errMes) {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"        super(errMes);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Kailash201":16}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package parser;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import commands.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":" * This class handles all string manipulation needed","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":" * to read user inputs.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"public class Parser {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"    private String type \u003d \"\";","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"    private enum command {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"        bye(\"bye\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"        list(\"list\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"        mark(\"mark\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"        unmark(\"unmark\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"        deadline(\"deadline\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"        event(\"event\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"        todo(\"todo\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"        delete(\"delete\"),","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"        find(\"find\");","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"        private final String command;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"        command(String command) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"            this.command \u003d command;","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"        @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"        public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"            return command;","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"     * Parser empty constructor.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"    public Parser(){","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Kailash201"},"content":"     * Parser constructor that takes in a String.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Kailash201"},"content":"     * @param type The type of task.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Kailash201"},"content":"    public Parser(String type) {","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"Kailash201"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Kailash201"},"content":"     * Returns the intended command after reading the user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Kailash201"},"content":"     * @param input Input from the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Kailash201"},"content":"     * @return The intended command.","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Kailash201"},"content":"     * @throws DukeException If user typed invalid commands.","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"Kailash201"},"content":"    public Command getCommand(String input) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Kailash201"},"content":"        if (input.equals(command.bye.toString())) {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Kailash201"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Kailash201"},"content":"        } else if (input.equals(command.list.toString())) {","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Kailash201"},"content":"            return new ListCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"Kailash201"},"content":"        } else if (input.contains(command.unmark.toString())) {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"Kailash201"},"content":"            int selected \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"Kailash201"},"content":"            return new UnmarkComment(selected);","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"Kailash201"},"content":"        } else if (input.contains(command.mark.toString())) {","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"Kailash201"},"content":"            int selected \u003d Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"Kailash201"},"content":"            return new MarkCommand(selected);","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"Kailash201"},"content":"        } else if (input.contains(command.deadline.toString())) {","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"Kailash201"},"content":"            if (input.equals(command.deadline.toString())) {","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"Kailash201"},"content":"                throw new DukeException(\"Empty deadline\");","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"Kailash201"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"Kailash201"},"content":"            if (input.charAt(8) !\u003d \u0027 \u0027) {","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"Kailash201"},"content":"                throw new DukeException(\"Invalid command\");","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"Kailash201"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"Kailash201"},"content":"            if (!input.contains(\"/by\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"Kailash201"},"content":"                throw new DukeException(\"Deadline does not contain /by\");","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"Kailash201"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"Kailash201"},"content":"            Parser parser \u003d new Parser(\"D\");","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"Kailash201"},"content":"            ArrayList\u003cString\u003e texts \u003d parser.convertTaskInput(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"Kailash201"},"content":"            return new DeadlineCommand(texts);","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"Kailash201"},"content":"        } else if (input.contains(command.event.toString())) {","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"Kailash201"},"content":"            if (input.equals(command.event.toString())) {","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"Kailash201"},"content":"                throw new DukeException(\"Empty event\");","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"Kailash201"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"Kailash201"},"content":"            if (input.charAt(5) !\u003d \u0027 \u0027) {","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"Kailash201"},"content":"                throw new DukeException(\"Invalid command\");","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"Kailash201"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"Kailash201"},"content":"            if (!input.contains(\"to\") || !input.contains(\"from\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"Kailash201"},"content":"                throw new DukeException(\"Event does not contain to or from\");","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"Kailash201"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"Kailash201"},"content":"            Parser parser \u003d new Parser(\"E\");","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"Kailash201"},"content":"            ArrayList\u003cString\u003e texts \u003d parser.convertTaskInput(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"Kailash201"},"content":"            return new EventCommand(texts);","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"Kailash201"},"content":"        } else if (input.contains(command.todo.toString())) {","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"Kailash201"},"content":"            if (input.equals(command.todo.toString())) {","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"Kailash201"},"content":"                throw new DukeException(\"Empty todo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"Kailash201"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"Kailash201"},"content":"            if (input.charAt(4) !\u003d \u0027 \u0027) {","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"Kailash201"},"content":"                throw new DukeException(\"Invalid command\");","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"Kailash201"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"Kailash201"},"content":"            Parser parser \u003d new Parser(\"T\");","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"Kailash201"},"content":"            ArrayList\u003cString\u003e texts \u003d parser.convertTaskInput(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"Kailash201"},"content":"            return new TodoCommand(texts);","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"Kailash201"},"content":"        } else if (input.contains(command.delete.toString())) {","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"Kailash201"},"content":"            int selected \u003d Integer.parseInt(input.substring(input.indexOf(\"delete\") + 7)) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"Kailash201"},"content":"            return new DeleteCommand(selected);","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"Kailash201"},"content":"        } else if (input.contains(command.find.toString())) {","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"Kailash201"},"content":"            if (input.equals(command.find.toString())) {","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"Kailash201"},"content":"                throw new DukeException(\"find cannot be empty\");","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"Kailash201"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"Kailash201"},"content":"            if (input.charAt(4) !\u003d \u0027 \u0027) {","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"Kailash201"},"content":"                throw new DukeException(\"Invalid command\");","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"Kailash201"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"Kailash201"},"content":"            Parser parser \u003d new Parser(\"P\");","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"Kailash201"},"content":"            ArrayList\u003cString\u003e texts \u003d parser.convertTaskInput(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"Kailash201"},"content":"            return new FindCommand(texts.get(0));","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"Kailash201"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"Kailash201"},"content":"            throw new DukeException(\"Invalid command\");","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"Kailash201"},"content":"     * Converts the user input of different type of tasks into ArrayList.","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"Kailash201"},"content":"     * @param input User input of the tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"Kailash201"},"content":"     * @return Required data of task from the user input in ArrayList.","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"Kailash201"},"content":"     * @throws DukeException If user typed invalid tasks commands.","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"Kailash201"},"content":"    public ArrayList\u003cString\u003e convertTaskInput(String input) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"Kailash201"},"content":"        ArrayList\u003cString\u003e texts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":139,"author":{"gitId":"Kailash201"},"content":"        switch (type) {","lastModifiedDate":"2023-08-27"},{"lineNumber":140,"author":{"gitId":"Kailash201"},"content":"        case \"E\": {","lastModifiedDate":"2023-08-27"},{"lineNumber":141,"author":{"gitId":"Kailash201"},"content":"            if (input.indexOf(\"/by\") - 1 \u003c 6) {","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"Kailash201"},"content":"                throw new DukeException(\"Your Event name is blank\");","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"Kailash201"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"Kailash201"},"content":"            String desc \u003d input.substring(6, input.indexOf(\"/from\") - 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":145,"author":{"gitId":"Kailash201"},"content":"            if (desc.isBlank() || desc.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"Kailash201"},"content":"                throw new DukeException(\"Your Event name is blank\");","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"Kailash201"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"Kailash201"},"content":"            texts.add(desc);","lastModifiedDate":"2023-08-27"},{"lineNumber":149,"author":{"gitId":"Kailash201"},"content":"            String from \u003d input.substring(input.indexOf(\"/from\") + 6, input.indexOf(\"/to\") - 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":150,"author":{"gitId":"Kailash201"},"content":"            texts.add((from));","lastModifiedDate":"2023-08-27"},{"lineNumber":151,"author":{"gitId":"Kailash201"},"content":"            String to \u003d input.substring(input.indexOf(\"/to\") + 4);","lastModifiedDate":"2023-08-27"},{"lineNumber":152,"author":{"gitId":"Kailash201"},"content":"            texts.add(to);","lastModifiedDate":"2023-08-27"},{"lineNumber":153,"author":{"gitId":"Kailash201"},"content":"            break;","lastModifiedDate":"2023-08-27"},{"lineNumber":154,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":155,"author":{"gitId":"Kailash201"},"content":"        case \"D\": {","lastModifiedDate":"2023-08-27"},{"lineNumber":156,"author":{"gitId":"Kailash201"},"content":"            if (input.indexOf(\"/by\") - 1 \u003c 9) {","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"Kailash201"},"content":"                throw new DukeException(\"Your Deadline name is blank\");","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"Kailash201"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"Kailash201"},"content":"            String desc \u003d input.substring(9, input.indexOf(\"/by\") - 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":160,"author":{"gitId":"Kailash201"},"content":"            if (desc.isBlank() || desc.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"Kailash201"},"content":"                throw new DukeException(\"Your Deadline name is blank\");","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"Kailash201"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"Kailash201"},"content":"            texts.add(desc);","lastModifiedDate":"2023-08-27"},{"lineNumber":164,"author":{"gitId":"Kailash201"},"content":"            String by \u003d input.substring(input.indexOf(\"/by\") + 4);","lastModifiedDate":"2023-08-27"},{"lineNumber":165,"author":{"gitId":"Kailash201"},"content":"            texts.add(by);","lastModifiedDate":"2023-08-27"},{"lineNumber":166,"author":{"gitId":"Kailash201"},"content":"            break;","lastModifiedDate":"2023-08-27"},{"lineNumber":167,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":168,"author":{"gitId":"Kailash201"},"content":"        case \"T\": {","lastModifiedDate":"2023-08-27"},{"lineNumber":169,"author":{"gitId":"Kailash201"},"content":"            String desc \u003d input.substring(input.indexOf(\"todo\") + 5);","lastModifiedDate":"2023-08-27"},{"lineNumber":170,"author":{"gitId":"Kailash201"},"content":"            if (desc.isBlank() || desc.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"Kailash201"},"content":"                throw new DukeException(\"Your Todo name is blank\");","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"Kailash201"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":173,"author":{"gitId":"Kailash201"},"content":"            texts.add(desc);","lastModifiedDate":"2023-08-27"},{"lineNumber":174,"author":{"gitId":"Kailash201"},"content":"            break;","lastModifiedDate":"2023-08-27"},{"lineNumber":175,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":176,"author":{"gitId":"Kailash201"},"content":"        case \"P\": {","lastModifiedDate":"2023-09-01"},{"lineNumber":177,"author":{"gitId":"Kailash201"},"content":"            String keyWord \u003d splitter(input, \" \").get(1);","lastModifiedDate":"2023-09-01"},{"lineNumber":178,"author":{"gitId":"Kailash201"},"content":"            texts.add(keyWord);","lastModifiedDate":"2023-09-01"},{"lineNumber":179,"author":{"gitId":"Kailash201"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":180,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":181,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":182,"author":{"gitId":"Kailash201"},"content":"       return texts;","lastModifiedDate":"2023-08-27"},{"lineNumber":183,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":184,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":185,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":186,"author":{"gitId":"Kailash201"},"content":"     * Separating words from a string that has a divider between it and store the words in","lastModifiedDate":"2023-09-01"},{"lineNumber":187,"author":{"gitId":"Kailash201"},"content":"     * ArrayList.","lastModifiedDate":"2023-09-01"},{"lineNumber":188,"author":{"gitId":"Kailash201"},"content":"     * @param text The text to split.","lastModifiedDate":"2023-09-01"},{"lineNumber":189,"author":{"gitId":"Kailash201"},"content":"     * @param cutOff The divider to cut the string.","lastModifiedDate":"2023-09-01"},{"lineNumber":190,"author":{"gitId":"Kailash201"},"content":"     * @return Separated words stored in ArrayList from a string that was merged with a divider.","lastModifiedDate":"2023-09-01"},{"lineNumber":191,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":192,"author":{"gitId":"Kailash201"},"content":"    public ArrayList\u003cString\u003e splitter(String text, String cutOff) {","lastModifiedDate":"2023-08-28"},{"lineNumber":193,"author":{"gitId":"Kailash201"},"content":"        ArrayList\u003cString\u003e res \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":194,"author":{"gitId":"Kailash201"},"content":"        String resStrAftCutting \u003d text;","lastModifiedDate":"2023-08-28"},{"lineNumber":195,"author":{"gitId":"Kailash201"},"content":"        while (resStrAftCutting.contains(cutOff)) {","lastModifiedDate":"2023-08-28"},{"lineNumber":196,"author":{"gitId":"Kailash201"},"content":"            String sub \u003d resStrAftCutting.substring(0, resStrAftCutting.indexOf(cutOff));","lastModifiedDate":"2023-08-28"},{"lineNumber":197,"author":{"gitId":"Kailash201"},"content":"            res.add(sub);","lastModifiedDate":"2023-08-28"},{"lineNumber":198,"author":{"gitId":"Kailash201"},"content":"            resStrAftCutting \u003d resStrAftCutting.substring(resStrAftCutting.indexOf(cutOff) + 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":199,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":200,"author":{"gitId":"Kailash201"},"content":"        res.add(resStrAftCutting);","lastModifiedDate":"2023-08-28"},{"lineNumber":201,"author":{"gitId":"Kailash201"},"content":"        return res;","lastModifiedDate":"2023-08-28"},{"lineNumber":202,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":203,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":204,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Kailash201":204}},{"path":"src/main/java/storage/DataFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import java.io.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"import tasks.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"import tasks.Todo;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"import tasks.Event;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":" * Handles all the manipulation of the file that is stored","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":" * locally.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"public class DataFile {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"    private final String filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"    private final String fileName;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"    private final File file;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"     * DateFile constructor that takes in String, String.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"     * @param filePath Name of the path.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"     * @param fileName Name of the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"    public DataFile(String filePath, String fileName) {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"        File directory \u003d new File(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"        File localFile \u003d new File(filePath + \"/\" + fileName);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"        if (!directory.exists() ) {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"            directory.mkdir();","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"                new FileWriter(filePath + \"/\" + fileName);","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"            file \u003d new File(filePath + \"/\" + fileName);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"        } else if (!localFile.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"                new FileWriter(filePath + \"/\" + fileName);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Kailash201"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"Kailash201"},"content":"            file \u003d new File(filePath + \"/\" + fileName);","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"Kailash201"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Kailash201"},"content":"            file \u003d localFile;","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Kailash201"},"content":"     * Writes data into file.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Kailash201"},"content":"     * @param task The task that is being written into the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Kailash201"},"content":"     * @throws IOException If any file issues exists.","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Kailash201"},"content":"    public void writeToFile(Task task) throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"Kailash201"},"content":"        FileWriter fW \u003d new FileWriter(file, true);","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"Kailash201"},"content":"        String div \u003d \"*|,\";","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"Kailash201"},"content":"        StringBuilder custom \u003d new StringBuilder();","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"Kailash201"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"Kailash201"},"content":"            Todo td \u003d (Todo) task;","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"Kailash201"},"content":"            custom.append(\"T\").append(div).append(td.getDesc()).append(div)","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"Kailash201"},"content":"                    .append(td.getStatus().equals(\"X\") ? 1 : 0)","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"Kailash201"},"content":"                    .append(System.lineSeparator());","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"Kailash201"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"Kailash201"},"content":"            Deadline dl \u003d (Deadline) task;","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"Kailash201"},"content":"            custom.append(\"D\").append(div).append(dl.getDesc()).append(div).append(dl.getBy()).append(div)","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"Kailash201"},"content":"                    .append(dl.getStatus().equals(\"X\") ? 1 : 0)","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"Kailash201"},"content":"                    .append(System.lineSeparator());","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"Kailash201"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"Kailash201"},"content":"            Event eve \u003d (Event) task;","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"Kailash201"},"content":"            custom.append(\"E\").append(div).append(eve.getDesc()).append(div)","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"Kailash201"},"content":"                    .append(eve.getFrom()).append(div).append(eve.getTo()).append(div)","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"Kailash201"},"content":"                    .append(eve.getStatus().equals(\"X\") ? 1 : 0)","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"Kailash201"},"content":"                    .append(System.lineSeparator());;","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"Kailash201"},"content":"        fW.write(custom.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"Kailash201"},"content":"        fW.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"Kailash201"},"content":"     * Edit the marks or unmarks of a task in the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"Kailash201"},"content":"     * @param n The line to be edited.","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"Kailash201"},"content":"     * @param newChar The mark to be replaced.","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"Kailash201"},"content":"     * @throws IOException If any file issues exists.","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"Kailash201"},"content":"    public void editFileAtLineN(int n, char newChar) throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"Kailash201"},"content":"        // n starts from 0","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"Kailash201"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"Kailash201"},"content":"        String line \u003d reader.readLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"Kailash201"},"content":"        StringBuilder oldContent \u003d new StringBuilder();","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"Kailash201"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"Kailash201"},"content":"        while (line !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"Kailash201"},"content":"            if (i \u003d\u003d n) {","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"Kailash201"},"content":"                StringBuilder sB \u003d new StringBuilder(line);","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"Kailash201"},"content":"                sB.setCharAt(line.length() - 1, newChar);","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"Kailash201"},"content":"                line \u003d sB.toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"Kailash201"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"Kailash201"},"content":"            oldContent.append(line).append(System.lineSeparator());","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"Kailash201"},"content":"            line \u003d reader.readLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"Kailash201"},"content":"            i++;","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"Kailash201"},"content":"        FileWriter fW \u003d new FileWriter(filePath + \"/\" + fileName);","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"Kailash201"},"content":"        fW.write(oldContent.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"Kailash201"},"content":"        fW.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"Kailash201"},"content":"    ","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"Kailash201"},"content":"     * Deletes a task from the file at line n.","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"Kailash201"},"content":"     * @param n The line to be deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"Kailash201"},"content":"     * @throws IOException If any file issues exists.","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"Kailash201"},"content":"    public void deleteTaskFromFile(int n) throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"Kailash201"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"Kailash201"},"content":"        String line \u003d reader.readLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"Kailash201"},"content":"        StringBuilder oldContent \u003d new StringBuilder();","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"Kailash201"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"Kailash201"},"content":"        while (line !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"Kailash201"},"content":"            if (i !\u003d n) {","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"Kailash201"},"content":"                oldContent.append(line).append(System.lineSeparator());","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"Kailash201"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"Kailash201"},"content":"            line \u003d reader.readLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"Kailash201"},"content":"            i++;","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"Kailash201"},"content":"        FileWriter fW \u003d new FileWriter(file);","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"Kailash201"},"content":"        fW.write(oldContent.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"Kailash201"},"content":"        fW.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"Kailash201"},"content":"     * Read the data from the file and convert it to list of Tasks object.","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"Kailash201"},"content":"     * @return List of Tasks in ArrayList.","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"Kailash201"},"content":"     * @throws IOException If any file issues exists.","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"Kailash201"},"content":"    public ArrayList\u003cTask\u003e fileToObjects() throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"Kailash201"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"Kailash201"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"Kailash201"},"content":"        String line \u003d reader.readLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"Kailash201"},"content":"        String div \u003d \"*|,\";","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"Kailash201"},"content":"        Task task \u003d new Task(\"empty\");","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"Kailash201"},"content":"        while (line !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"Kailash201"},"content":"            if (line.charAt(0) \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"Kailash201"},"content":"                String desc \u003d line.substring(div.length() + 1, line.lastIndexOf(div));","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"Kailash201"},"content":"                task \u003d new Todo(desc);","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"Kailash201"},"content":"            } else if (line.charAt(0) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2023-08-29"},{"lineNumber":148,"author":{"gitId":"Kailash201"},"content":"                String sub \u003d line.substring(div.length() + 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":149,"author":{"gitId":"Kailash201"},"content":"                String desc \u003d sub.substring(0, sub.indexOf(div));","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"Kailash201"},"content":"                int firstLine \u003d sub.indexOf(div) + div.length();","lastModifiedDate":"2023-08-29"},{"lineNumber":151,"author":{"gitId":"Kailash201"},"content":"                String by \u003d sub.substring(firstLine, sub.indexOf(div, firstLine));","lastModifiedDate":"2023-08-29"},{"lineNumber":152,"author":{"gitId":"Kailash201"},"content":"                task \u003d new Deadline(desc, LocalDateTime.parse(by));","lastModifiedDate":"2023-08-29"},{"lineNumber":153,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"Kailash201"},"content":"            } else if (line.charAt(0) \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"Kailash201"},"content":"                String sub \u003d line.substring(div.length() + 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"Kailash201"},"content":"                String desc \u003d sub.substring(0, sub.indexOf(div));","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"Kailash201"},"content":"                int firstLine \u003d sub.indexOf(div) + div.length();","lastModifiedDate":"2023-08-29"},{"lineNumber":158,"author":{"gitId":"Kailash201"},"content":"                String from \u003d sub.substring(firstLine, sub.indexOf(div, firstLine));","lastModifiedDate":"2023-08-29"},{"lineNumber":159,"author":{"gitId":"Kailash201"},"content":"                int secLine \u003d sub.indexOf(div, firstLine) + div.length();","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"Kailash201"},"content":"                String to \u003d sub.substring(secLine, sub.indexOf(div, secLine));","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"Kailash201"},"content":"                task \u003d new Event(desc, LocalDateTime.parse(from), LocalDateTime.parse(to));","lastModifiedDate":"2023-08-29"},{"lineNumber":162,"author":{"gitId":"Kailash201"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":163,"author":{"gitId":"Kailash201"},"content":"            // check if task is completed","lastModifiedDate":"2023-08-29"},{"lineNumber":164,"author":{"gitId":"Kailash201"},"content":"            if (line.charAt(line.length() - 1) \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2023-08-29"},{"lineNumber":165,"author":{"gitId":"Kailash201"},"content":"                task.taskCompleted();","lastModifiedDate":"2023-08-29"},{"lineNumber":166,"author":{"gitId":"Kailash201"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":167,"author":{"gitId":"Kailash201"},"content":"                task.taskNotCompleted();","lastModifiedDate":"2023-08-29"},{"lineNumber":168,"author":{"gitId":"Kailash201"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":169,"author":{"gitId":"Kailash201"},"content":"            tasks.add(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":170,"author":{"gitId":"Kailash201"},"content":"            line \u003d reader.readLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":171,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":172,"author":{"gitId":"Kailash201"},"content":"        return tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":173,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":174,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":175,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Kailash201":175}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":" * Represents a deadline task that can be tracked in","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":" * the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"     * Deadline constructor that takes in a String and LocalDateTime.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"     * @param desc Description of the deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"     * @param by The due date of the deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"    public Deadline(String desc, LocalDateTime by) {","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"        super(desc);","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"     * Returns The date and time of the deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"     * @return The date and time of the deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"        return by;","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"     * Returns The string representation of Deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"     * @return String representation of deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"                + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \")\";","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Kailash201":41}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":" * Represents an event task that can be tracked in","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":" * the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"     * Event constructor that takes in String, LocalDateTime, LocalDateTime.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"     * @param desc Description of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"     * @param from The starting date and time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"     * @param to The ending date and time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"    public Event(String desc, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"        super(desc);","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"        this.from \u003d  from;","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"     * Returns the starting date and time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"     * @return Starting date and time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"        return from;","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"     * Returns the ending date and time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"     * @return ending date and time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"        return to;","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"     * Returns the string representation of an event.","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Kailash201"},"content":"     * @return The string representation of an event.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"Kailash201"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"Kailash201"},"content":"        return \"[E]\" + super.toString() + \" (from: \"","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"Kailash201"},"content":"                + from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \" \"","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"                + \"- \" + to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \")\";","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Kailash201":53}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":" * Represents a task object that will be used to keep track in","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":" * the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"    private final String desc;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"    private boolean isCompleted;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"     * Constructor for Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"     * @param desc Description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"    public Task(String desc) {","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"     * Marks the task completed.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"    public void taskCompleted() {","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"     * Marks the task not completed.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"    public void taskNotCompleted() {","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"     * Returns the marked status of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"     * @return Marked status.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"    public String getStatus() {","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"        return isCompleted ? \"X\" : \" \";","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Kailash201"},"content":"     * @return Task\u0027s description.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Kailash201"},"content":"    public String getDesc() {","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"Kailash201"},"content":"        return desc;","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Kailash201"},"content":"     * Returns the string representation of task.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Kailash201"},"content":"     * @return String representation of task.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"Kailash201"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"Kailash201"},"content":"        return \"[\" + getStatus() + \"]\" + \" \" + this.desc;","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Kailash201":59}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":" * Represents a list of Tasks object.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"public class TaskList {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"    ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"     * TaskList constructor that takes in an ArrayList\u003cTask\u003e.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"     * @param tasks Arraylist of tasks object.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks){","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"     * Removes a task from the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"     * @param n Index position of the task in the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"     * @return The removed task.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"    public Task remTask(int n) {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"        return tasks.remove(n);","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"     * Adds a task into the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"     * @param task The task that is being added.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"     *Checks if the list is empty.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"     * @return True if the list is empty.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"    public boolean isTaskListEmpty() {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Kailash201"},"content":"     * Gets a task from the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Kailash201"},"content":"     * @param n Index position of the wanted task in the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Kailash201"},"content":"     * @return The wanted task.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Kailash201"},"content":"    public Task getTask (int n) {","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"        return tasks.get(n);","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Kailash201"},"content":"     * Returns the size of the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Kailash201"},"content":"     * @return List\u0027s size.","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Kailash201"},"content":"    public int getSize() {","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"Kailash201"},"content":"        return tasks.size();","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Kailash201":61}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":" * Represents a todo task that can be tracked in","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":" * the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"     * Todo Constructor that takes in a String.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"     * @param desc Description of the todo.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"    public Todo(String desc) {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"        super(desc);","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"     * Returns the string representation of a todo.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"     * @return The string representation of a todo.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Kailash201":25}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":" * The programme that interacts with the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"public class Ui {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"     * Returns the user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"     * @return User input.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"    public String readCommand() {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"     * Displays welcome message to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"    public void welcomeMsg() {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"        System.out.println(\"Hello! I\u0027m Red\\nWhat can I do for you?\");","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Kailash201":26}},{"path":"src/test/java/Storage/DataFileTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import storage.DataFile;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"import tasks.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"public class DataFileTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"    public void writeToFile_writeDeadline_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"        DataFile dF \u003d new DataFile(\"src/test/data\", \"existing.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"        Task task \u003d new Deadline(\"Study\", LocalDateTime.parse(\"2019-04-04T03:00\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"            dF.writeToFile(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(\"src/test/data/existing.txt\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"            String line \u003d br.readLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"            assertEquals(\"D*|,Study*|,2019-04-04T03:00*|,0\",line);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"    public void deleteTaskFromFile_remDeadline_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"        DataFile dF \u003d new DataFile(\"src/test/data\", \"tmp_del_task.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"        Task task \u003d new Deadline(\"Study\", LocalDateTime.parse(\"2019-04-04T03:00\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"            dF.writeToFile(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"            dF.deleteTaskFromFile(0);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(\"src/test/data/tmp_del_task.txt\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"            String line \u003d br.readLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"            assertNull(line);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Kailash201"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Kailash201":46}},{"path":"src/test/java/duke/CustomDateTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"public class CustomDateTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"    public void strToDateTime_checkDate_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"        assertEquals(\"2019-04-04T02:00\",","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"                new CustomDate().strToDateTime(\"4/4/2019 0200\").toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Kailash201":14}},{"path":"src/test/java/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"package parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Kailash201"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Kailash201"},"content":"    public void convertTaskInput_deadlineCommand_success() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Kailash201"},"content":"        assertEqualsConvertTaskInput(\"deadline Do notes /by 2/2/2019 2222\");","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Kailash201"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"    public void convertTaskInput_missingNameDeadlineCommand_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Kailash201"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Kailash201"},"content":"            String input \u003d \"deadline /by 2/2/2019 2222\";","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Kailash201"},"content":"            new Parser(\"D\").convertTaskInput(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Kailash201"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Kailash201"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Kailash201"},"content":"            assertEquals(\"Your Deadline name is blank\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Kailash201"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Kailash201"},"content":"    public void getCommand_invalidCommandNotEmpty_throwDukeException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Kailash201"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Kailash201"},"content":"            assertEquals(\" \", new Parser().getCommand(\"sdfsfsdf\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Kailash201"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Kailash201"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Kailash201"},"content":"            assertEquals(\"Invalid command\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Kailash201"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Kailash201"},"content":"    public void getCommand_invalidCommandTodo_throwDukeException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Kailash201"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Kailash201"},"content":"            assertEquals(\" \", new Parser().getCommand(\"todooo\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Kailash201"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Kailash201"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Kailash201"},"content":"            assertEquals(\"Invalid command\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Kailash201"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Kailash201"},"content":"    public void getCommand_invalidCommandDl_throwDukeException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Kailash201"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Kailash201"},"content":"            assertEquals(\" \", new Parser().getCommand(\"deadlinesad\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Kailash201"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Kailash201"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Kailash201"},"content":"            assertEquals(\"Invalid command\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Kailash201"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Kailash201"},"content":"    public void getCommand_invalidCommandEvent_throwDukeException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Kailash201"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Kailash201"},"content":"            assertEquals(\" \", new Parser().getCommand(\"eventsdf\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Kailash201"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Kailash201"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Kailash201"},"content":"            assertEquals(\"Invalid command\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"Kailash201"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"Kailash201"},"content":"    public void getCommand_invalidCommandEmpty_throwDukeException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"Kailash201"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"Kailash201"},"content":"            assertEquals(\" \", new Parser().getCommand(\"\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"Kailash201"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"Kailash201"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"Kailash201"},"content":"            assertEquals(\"Invalid command\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"Kailash201"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"Kailash201"},"content":"/*","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"Kailash201"},"content":"Helper methods","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"Kailash201"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"Kailash201"},"content":"    // deadline eat /by 2/2/2019 2222","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"Kailash201"},"content":"    public void assertEqualsConvertTaskInput(String input) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"Kailash201"},"content":"        ArrayList\u003cString\u003e texts \u003d new Parser(\"D\").convertTaskInput(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"Kailash201"},"content":"        assertEquals(\"Do notes\", texts.get(0));","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"Kailash201"},"content":"        assertEquals(\"2/2/2019 2222\", texts.get(1));","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"Kailash201"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"Kailash201"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"Kailash201"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Kailash201":88}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Kailash201"},"content":"todo borrow book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"Kailash201"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"Kailash201"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"Kailash201"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"Kailash201"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"Kailash201"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"Kailash201"},"content":"unmark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"Kailash201"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"Kailash201"},"content":"delete 2","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Kailash201"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Kailash201"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Kailash201":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Kailash201"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Kailash201":1,"-":20}}]
