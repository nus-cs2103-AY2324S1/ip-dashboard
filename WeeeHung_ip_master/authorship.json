[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"WeeeHung"},"content":"jar {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"WeeeHung"},"content":"    manifest {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"WeeeHung"},"content":"        attributes \u0027Main-Class\u0027: \u0027com.example.MainClass\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"WeeeHung"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"WeeeHung"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter-api:5.10.0\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":42,"WeeeHung":7}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WeeeHung"},"content":"T|0|lol ","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"WeeeHung"},"content":"D|1|lol1 |2023-08-28 15:20:45","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"WeeeHung"},"content":"T|0|lol2","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"WeeeHung"},"content":"E|0|lol4 |2023-09-30 15:20:45|2023-09-30 19:20:45","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"WeeeHung"},"content":"D|1|something |2023-09-30 15:20:45","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"WeeeHung"},"content":"E|1|something |2023-09-30 15:20:45|2023-09-30 17:20:45","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"WeeeHung"},"content":"T|1|something again","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"WeeeHung"},"content":"T|0|2109s pset","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"WeeeHung"},"content":"D|0|email TA |2023-09-01 19:20:45","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"WeeeHung":9}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeeeHung"},"content":"import DukePackage.ChatUI;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"WeeeHung"},"content":"import DukePackage.Parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"WeeeHung"},"content":"import DukePackage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"WeeeHung"},"content":"import DukePackage.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"WeeeHung"},"content":"import DukePackage.TaskType;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"WeeeHung"},"content":"import java.util.Objects;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"WeeeHung"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"WeeeHung"},"content":" * The Duke class is the main class that runs the Duke chatbot application.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"WeeeHung"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"WeeeHung"},"content":"     * The main method that starts the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"WeeeHung"},"content":"     * @param args The command-line arguments passed to the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"WeeeHung"},"content":"        // standard response","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"WeeeHung"},"content":"        String horizontalLine \u003d \"   ------------------------------------------------------------------------\";","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"WeeeHung"},"content":"        String noDescError \u003d \"     ☹ OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"WeeeHung"},"content":"        String noCommandError \u003d \"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"WeeeHung"},"content":"        // initialise","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"WeeeHung"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"WeeeHung"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"WeeeHung"},"content":"        ChatUI ui \u003d new ChatUI();","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"WeeeHung"},"content":"        // read from txt file and create tasks and put into storage","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"WeeeHung"},"content":"        storage.loadListFromFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"WeeeHung"},"content":"        ui.printIntro();","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"WeeeHung"},"content":"        while (true) {","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"WeeeHung"},"content":"            String input \u003d parser.getInput();","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"WeeeHung"},"content":"            String[] parts \u003d input.split(\" \");","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"WeeeHung"},"content":"            ui.printDivider();","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"WeeeHung"},"content":"            switch (parts[0]) {","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"WeeeHung"},"content":"                case \"bye\":","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"WeeeHung"},"content":"                    ui.printOutro();","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"WeeeHung"},"content":"                    ui.printDivider();","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"WeeeHung"},"content":"                    // write the changes into the file duke.txt","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"WeeeHung"},"content":"                    storage.writeTasksToFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"WeeeHung"},"content":"                    return;","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"WeeeHung"},"content":"                case \"list\":","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"WeeeHung"},"content":"                    storage.printTaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"WeeeHung"},"content":"                    break;","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"WeeeHung"},"content":"                case \"mark\":","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"WeeeHung"},"content":"                    int id \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"WeeeHung"},"content":"                    try {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"WeeeHung"},"content":"                        storage.changeTaskMarking(id, true);","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"WeeeHung"},"content":"                        storage.printTaskMarking(id);","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"WeeeHung"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"WeeeHung"},"content":"                        System.out.print(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"WeeeHung"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"WeeeHung"},"content":"                    break;","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"WeeeHung"},"content":"                case \"unmark\":","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"WeeeHung"},"content":"                    int id2 \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"WeeeHung"},"content":"                    try {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"WeeeHung"},"content":"                        storage.changeTaskMarking(id2, false);","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"WeeeHung"},"content":"                        storage.printTaskMarking(id2);","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"WeeeHung"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"WeeeHung"},"content":"                        System.out.print(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"WeeeHung"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"WeeeHung"},"content":"                    break;","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"WeeeHung"},"content":"                case \"delete\":","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"WeeeHung"},"content":"                    int id3 \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"WeeeHung"},"content":"                    storage.deleteTask(id3);","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"WeeeHung"},"content":"                    break;","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"WeeeHung"},"content":"                case \"find\":","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"WeeeHung"},"content":"                    int indexOfFind \u003d input.indexOf(\"find\");","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"WeeeHung"},"content":"                    String toFindString \u003d input.substring(indexOfFind + 5);","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"WeeeHung"},"content":"                    storage.printMatchingList(toFindString);","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"WeeeHung"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"WeeeHung"},"content":"                case \"todo\":","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"WeeeHung"},"content":"                    int indexOfTodo \u003d input.indexOf(\"todo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"WeeeHung"},"content":"                    String taskDesc \u003d input.substring(indexOfTodo + 5);","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"WeeeHung"},"content":"                    if (Objects.equals(taskDesc, \"\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"WeeeHung"},"content":"                        System.out.println(horizontalLine);","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"WeeeHung"},"content":"                        System.out.println(noDescError);","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"WeeeHung"},"content":"                        System.out.println(horizontalLine);","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"WeeeHung"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"WeeeHung"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"WeeeHung"},"content":"                    Task task \u003d new Task(taskDesc, TaskType.TODO, \"\", \"\");","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"WeeeHung"},"content":"                    storage.addList(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"WeeeHung"},"content":"                    storage.printTaskEntry(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"WeeeHung"},"content":"                    break;","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"WeeeHung"},"content":"                case \"deadline\":","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"WeeeHung"},"content":"                    int indexOfDeadline \u003d input.indexOf(\"deadline\");","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"WeeeHung"},"content":"                    int indexOfBy \u003d input.indexOf(\"/by\");","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"WeeeHung"},"content":"                    taskDesc \u003d input.substring(indexOfDeadline + 9, indexOfBy);","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"WeeeHung"},"content":"                    String deadlinePart \u003d \"\";","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"WeeeHung"},"content":"                    deadlinePart \u003d input.substring(indexOfBy + 3).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"WeeeHung"},"content":"                    task \u003d new Task(taskDesc, TaskType.DEADLINE, deadlinePart, \"\");","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"WeeeHung"},"content":"                    storage.addList(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"WeeeHung"},"content":"                    storage.printTaskEntry(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"WeeeHung"},"content":"                    break;","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"WeeeHung"},"content":"                case \"event\":","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"WeeeHung"},"content":"                    int indexOfEvent \u003d input.indexOf(\"event\");","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"WeeeHung"},"content":"                    int indexOfFrom \u003d input.indexOf(\"/from\");","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"WeeeHung"},"content":"                    int indexOfTo \u003d input.indexOf(\"/to\");","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"WeeeHung"},"content":"                    taskDesc \u003d input.substring(indexOfEvent + 6, indexOfFrom);","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"WeeeHung"},"content":"                    String fromPart \u003d \"\";","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"WeeeHung"},"content":"                    fromPart \u003d input.substring(indexOfFrom + 5, indexOfTo).trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"WeeeHung"},"content":"                    String toPart \u003d \"\";","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"WeeeHung"},"content":"                    toPart \u003d input.substring(indexOfTo + 3).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"WeeeHung"},"content":"                    task \u003d new Task(taskDesc, TaskType.EVENT, fromPart, toPart);","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"WeeeHung"},"content":"                    storage.addList(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"WeeeHung"},"content":"                    storage.printTaskEntry(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"WeeeHung"},"content":"                    break;","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"WeeeHung"},"content":"                default:","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"WeeeHung"},"content":"                    System.out.println(noCommandError);","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"WeeeHung"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"WeeeHung"},"content":"            ui.printDivider();","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"WeeeHung"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":4,"WeeeHung":113}},{"path":"src/main/java/DukePackage/ChatUI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeeeHung"},"content":"package DukePackage;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"WeeeHung"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"WeeeHung"},"content":" * The ChatUI class represents the user interface for the chatbot application.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"WeeeHung"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"WeeeHung"},"content":"public class ChatUI {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"WeeeHung"},"content":"    private final String HORIZONTAL_LINE \u003d \"   ------------------------------------------------------------------------\";","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"WeeeHung"},"content":"    private final String INTRO \u003d \"    Hello! I\u0027m iPbot \\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"WeeeHung"},"content":"            \"    What can I do for you?\";","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"WeeeHung"},"content":"    private final String OUTRO \u003d \"    Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"WeeeHung"},"content":"     * Constructs a new ChatUI object.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"WeeeHung"},"content":"    public ChatUI() {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"WeeeHung"},"content":"        // Constructor body (if needed)","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"WeeeHung"},"content":"     * Prints a horizontal line divider.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"WeeeHung"},"content":"    public void printDivider() {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"WeeeHung"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"WeeeHung"},"content":"     * Prints the introduction message.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"WeeeHung"},"content":"    public void printIntro() {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"WeeeHung"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"WeeeHung"},"content":"        System.out.println(INTRO);","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"WeeeHung"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"WeeeHung"},"content":"     * Prints the outro message.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"WeeeHung"},"content":"    public void printOutro() {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"WeeeHung"},"content":"        System.out.println(OUTRO);","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"WeeeHung"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"WeeeHung":42}},{"path":"src/main/java/DukePackage/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeeeHung"},"content":"package DukePackage;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"WeeeHung"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"WeeeHung"},"content":" * The DukeException class represents an exception specific to the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"WeeeHung"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"WeeeHung"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"WeeeHung"},"content":"     * Constructs a new DukeException object with the specified error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"WeeeHung"},"content":"     * @param message The error message associated with the exception.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"WeeeHung"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"WeeeHung"},"content":"        super(message);","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"WeeeHung"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"WeeeHung":15}},{"path":"src/main/java/DukePackage/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeeeHung"},"content":"package DukePackage;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"WeeeHung"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"WeeeHung"},"content":"//function to retrieve string that the user input","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"WeeeHung"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"WeeeHung"},"content":" * The Parser class is responsible for retrieving user input from the console.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"WeeeHung"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"WeeeHung"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"WeeeHung"},"content":"    Scanner scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"WeeeHung"},"content":"     * Constructs a new Parser object.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"WeeeHung"},"content":"    public Parser() {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"WeeeHung"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"WeeeHung"},"content":"     * Retrieves the user input as a string.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"WeeeHung"},"content":"     * @return The user input as a string.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"WeeeHung"},"content":"    public String getInput() {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"WeeeHung"},"content":"        Scanner scanner \u003d this.scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"WeeeHung"},"content":"        // Prompt the user for input","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"WeeeHung"},"content":"        System.out.print(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"WeeeHung"},"content":"        // Read and return the user input","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"WeeeHung"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"WeeeHung"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"WeeeHung":34}},{"path":"src/main/java/DukePackage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeeeHung"},"content":"package DukePackage;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"WeeeHung"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"WeeeHung"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"WeeeHung"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"WeeeHung"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"WeeeHung"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"WeeeHung"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"WeeeHung"},"content":"import java.util.Objects;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"WeeeHung"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"WeeeHung"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"WeeeHung"},"content":" * The Storage class is responsible for managing the storage of tasks in a task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"WeeeHung"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"WeeeHung"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"WeeeHung"},"content":"     * The list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"WeeeHung"},"content":"    protected ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"WeeeHung"},"content":"    protected final String MATCHING_STRING \u003d \"     Here are the matching tasks in your list:\";","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"WeeeHung"},"content":"     * Constructs a Storage object with an empty task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"WeeeHung"},"content":"    public Storage() {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"WeeeHung"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"WeeeHung"},"content":"     * Retrieves the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"WeeeHung"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"WeeeHung"},"content":"     * @return The task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"WeeeHung"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"WeeeHung"},"content":"        return this.taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"WeeeHung"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"WeeeHung"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"WeeeHung"},"content":"     * @param t The task to be added.","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"WeeeHung"},"content":"    public void addList(Task t) {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"WeeeHung"},"content":"        this.taskList.add(t);","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"WeeeHung"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"WeeeHung"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"WeeeHung"},"content":"     * @param id The index of the task to be deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"WeeeHung"},"content":"    public void deleteTask(int id) {","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"WeeeHung"},"content":"        System.out.println(\"     Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"WeeeHung"},"content":"        Task t \u003d this.taskList.get(id);","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"WeeeHung"},"content":"        t.printMarking(false);","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"WeeeHung"},"content":"        this.taskList.remove(id);","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"WeeeHung"},"content":"        int size \u003d this.taskList.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"WeeeHung"},"content":"        System.out.printf(\"\\n     Now you have %d tasks in the list.\\n\", size);","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"WeeeHung"},"content":"     * Writes the task list to a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"WeeeHung"},"content":"    public void writeTasksToFile() {","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"WeeeHung"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"WeeeHung"},"content":"            FileWriter fileWriter \u003d new FileWriter(\"data/duke.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"WeeeHung"},"content":"            BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"WeeeHung"},"content":"            for (Task tasking : this.taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"WeeeHung"},"content":"                // format the string","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"WeeeHung"},"content":"                String formattedString \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"WeeeHung"},"content":"                Integer priority \u003d tasking.isDone","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"WeeeHung"},"content":"                        ? 1","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"WeeeHung"},"content":"                        : 0;","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"WeeeHung"},"content":"                switch (tasking.type) {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"WeeeHung"},"content":"                    case TODO:","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"WeeeHung"},"content":"                        formattedString \u003d String.format(\"%c|%d|%s\",","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"WeeeHung"},"content":"                                \u0027T\u0027, priority, tasking.description);","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"WeeeHung"},"content":"                        break;","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"WeeeHung"},"content":"                    case DEADLINE:","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"WeeeHung"},"content":"                        formattedString \u003d String.format(\"%c|%d|%s|%s\",","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"WeeeHung"},"content":"                                \u0027D\u0027, priority, tasking.description,","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"WeeeHung"},"content":"                                tasking.startTime.toString().replace(\"T\", \" \"));","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"WeeeHung"},"content":"                        break;","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"WeeeHung"},"content":"                    case EVENT:","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"WeeeHung"},"content":"                        formattedString \u003d String.format(\"%c|%d|%s|%s|%s\",","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"WeeeHung"},"content":"                                \u0027E\u0027, priority, tasking.description,","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"WeeeHung"},"content":"                                tasking.startTime.toString().replace(\"T\", \" \"),","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"WeeeHung"},"content":"                                tasking.endTime.toString().replace(\"T\", \" \"));","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"WeeeHung"},"content":"                        break;","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"WeeeHung"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"WeeeHung"},"content":"                bufferedWriter.write(formattedString);","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"WeeeHung"},"content":"                bufferedWriter.newLine(); // Move to the next line","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"WeeeHung"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"WeeeHung"},"content":"            bufferedWriter.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"WeeeHung"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"WeeeHung"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"WeeeHung"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"WeeeHung"},"content":"     * Loads the task list from a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"WeeeHung"},"content":"    public void loadListFromFile() {","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"WeeeHung"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(\"data/duke.txt\"))) {","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"WeeeHung"},"content":"            File file \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"WeeeHung"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"WeeeHung"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"WeeeHung"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"WeeeHung"},"content":"            FileReader fileReader \u003d new FileReader(file); // append mode","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"WeeeHung"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(fileReader);","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"WeeeHung"},"content":"            String line;","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"WeeeHung"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"WeeeHung"},"content":"                // Assuming your line contains comma-separated values","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"WeeeHung"},"content":"                String[] values \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"WeeeHung"},"content":"                // Create your Java object based on the parsed values","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"WeeeHung"},"content":"                TaskType type \u003d Objects.equals(values[0], \"T\")","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"WeeeHung"},"content":"                        ? TaskType.TODO","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"WeeeHung"},"content":"                        : Objects.equals(values[0], \"D\")","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"WeeeHung"},"content":"                        ? TaskType.DEADLINE","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"WeeeHung"},"content":"                        : TaskType.EVENT;","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"WeeeHung"},"content":"                String start \u003d \"\", end \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"WeeeHung"},"content":"                try {","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"WeeeHung"},"content":"                    start \u003d values[3];","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"WeeeHung"},"content":"                } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"WeeeHung"},"content":"                    start \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"WeeeHung"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"WeeeHung"},"content":"                try {","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"WeeeHung"},"content":"                    end \u003d values[4];","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"WeeeHung"},"content":"                } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"WeeeHung"},"content":"                    end \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"WeeeHung"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"WeeeHung"},"content":"                Task obj \u003d new Task(values[2], type, start, end); // Instantiate with appropriate arguments","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"WeeeHung"},"content":"                obj.setStatus(!Objects.equals(values[1], \"0\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"WeeeHung"},"content":"                // Store the object in your storage instance","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"WeeeHung"},"content":"                addList(obj);","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"WeeeHung"},"content":"                bufferedReader.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"WeeeHung"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"WeeeHung"},"content":"            bufferedReader.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"WeeeHung"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"WeeeHung"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"WeeeHung"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"WeeeHung"},"content":"     * Prints the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"WeeeHung"},"content":"    public void printTaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"WeeeHung"},"content":"        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"WeeeHung"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"WeeeHung"},"content":"            Task t \u003d this.taskList.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"WeeeHung"},"content":"            System.out.printf(\"     %d.[%s][%s] %s\", index, t.getTypeIcon(), t.getStatusIcon(), t.description);","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"WeeeHung"},"content":"            if (!Objects.isNull(t.startTime) \u0026\u0026 !Objects.isNull(t.endTime)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"WeeeHung"},"content":"                System.out.printf(\" (from: %s to: %s)%n\", t.startTime.toString().replace(\"T\", \" \"), t.endTime.toString().replace(\"T\", \" \"));","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"WeeeHung"},"content":"            } else if (!Objects.isNull(t.startTime)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"WeeeHung"},"content":"                System.out.printf(\" (by: %s)%n\", t.startTime.toString().replace(\"T\", \" \"));","lastModifiedDate":"2023-09-01"},{"lineNumber":158,"author":{"gitId":"WeeeHung"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"WeeeHung"},"content":"                System.out.print(\"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"WeeeHung"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"WeeeHung"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":165,"author":{"gitId":"WeeeHung"},"content":"     * Prints the marking for a task.","lastModifiedDate":"2023-09-01"},{"lineNumber":166,"author":{"gitId":"WeeeHung"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":167,"author":{"gitId":"WeeeHung"},"content":"     * @param i The index of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":168,"author":{"gitId":"WeeeHung"},"content":"     * @throws DukeException If the task index is invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":169,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":170,"author":{"gitId":"WeeeHung"},"content":"    public void printTaskMarking(int i) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":171,"author":{"gitId":"WeeeHung"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"WeeeHung"},"content":"            Task t \u003d this.taskList.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":173,"author":{"gitId":"WeeeHung"},"content":"            t.printMarking(true);","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"WeeeHung"},"content":"            System.out.println();","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"WeeeHung"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"WeeeHung"},"content":"            throw new DukeException(\"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"WeeeHung"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":178,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":181,"author":{"gitId":"WeeeHung"},"content":"     * Changes the marking of a task.","lastModifiedDate":"2023-09-01"},{"lineNumber":182,"author":{"gitId":"WeeeHung"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":183,"author":{"gitId":"WeeeHung"},"content":"     * @param i      The index of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":184,"author":{"gitId":"WeeeHung"},"content":"     * @param isDone The new marking status.","lastModifiedDate":"2023-09-01"},{"lineNumber":185,"author":{"gitId":"WeeeHung"},"content":"     * @throws DukeException If the task index is invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":186,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":187,"author":{"gitId":"WeeeHung"},"content":"    public void changeTaskMarking(int i, boolean isDone) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":188,"author":{"gitId":"WeeeHung"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":189,"author":{"gitId":"WeeeHung"},"content":"            Task t \u003d this.taskList.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":190,"author":{"gitId":"WeeeHung"},"content":"            t.setStatus(isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":191,"author":{"gitId":"WeeeHung"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":192,"author":{"gitId":"WeeeHung"},"content":"            throw new DukeException(\"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-31"},{"lineNumber":193,"author":{"gitId":"WeeeHung"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":194,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":195,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":196,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":197,"author":{"gitId":"WeeeHung"},"content":"     * Prints the entry of a task.","lastModifiedDate":"2023-09-01"},{"lineNumber":198,"author":{"gitId":"WeeeHung"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":199,"author":{"gitId":"WeeeHung"},"content":"     * @param t The task.","lastModifiedDate":"2023-09-01"},{"lineNumber":200,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":201,"author":{"gitId":"WeeeHung"},"content":"    public void printTaskEntry(Task t) {","lastModifiedDate":"2023-09-01"},{"lineNumber":202,"author":{"gitId":"WeeeHung"},"content":"        t.printDescription();","lastModifiedDate":"2023-09-01"},{"lineNumber":203,"author":{"gitId":"WeeeHung"},"content":"        int size \u003d this.taskList.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":204,"author":{"gitId":"WeeeHung"},"content":"        System.out.printf(\"\\n     Now you have %d tasks in the list.\\n\", size);","lastModifiedDate":"2023-08-31"},{"lineNumber":205,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":206,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":207,"author":{"gitId":"WeeeHung"},"content":"    public void printMatchingList(String toFindString) {","lastModifiedDate":"2023-09-01"},{"lineNumber":208,"author":{"gitId":"WeeeHung"},"content":"        System.out.println(MATCHING_STRING);","lastModifiedDate":"2023-09-01"},{"lineNumber":209,"author":{"gitId":"WeeeHung"},"content":"        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":210,"author":{"gitId":"WeeeHung"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":211,"author":{"gitId":"WeeeHung"},"content":"            Task t \u003d this.taskList.get(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":212,"author":{"gitId":"WeeeHung"},"content":"            if (t.getDescription().contains(toFindString)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":213,"author":{"gitId":"WeeeHung"},"content":"                System.out.printf(\"     %d.[%s][%s] %s\", index, t.getTypeIcon(), t.getStatusIcon(), t.description);","lastModifiedDate":"2023-09-01"},{"lineNumber":214,"author":{"gitId":"WeeeHung"},"content":"                if (!Objects.isNull(t.startTime) \u0026\u0026 !Objects.isNull(t.endTime)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":215,"author":{"gitId":"WeeeHung"},"content":"                    System.out.printf(\" (from: %s to: %s)%n\", t.startTime.toString().replace(\"T\", \" \"), t.endTime.toString().replace(\"T\", \" \"));","lastModifiedDate":"2023-09-01"},{"lineNumber":216,"author":{"gitId":"WeeeHung"},"content":"                } else if (!Objects.isNull(t.startTime)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":217,"author":{"gitId":"WeeeHung"},"content":"                    System.out.printf(\" (by: %s)%n\", t.startTime.toString().replace(\"T\", \" \"));","lastModifiedDate":"2023-09-01"},{"lineNumber":218,"author":{"gitId":"WeeeHung"},"content":"                } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":219,"author":{"gitId":"WeeeHung"},"content":"                    System.out.print(\"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":220,"author":{"gitId":"WeeeHung"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":221,"author":{"gitId":"WeeeHung"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":222,"author":{"gitId":"WeeeHung"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":223,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":224,"author":{"gitId":"WeeeHung"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"WeeeHung":224}},{"path":"src/main/java/DukePackage/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeeeHung"},"content":"package DukePackage;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"WeeeHung"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"WeeeHung"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"WeeeHung"},"content":"import java.util.Objects;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"WeeeHung"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"WeeeHung"},"content":" * The Task class represents a task with a description, status, type, start time, and end time.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"WeeeHung"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"WeeeHung"},"content":"public class Task {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"WeeeHung"},"content":"     * The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"WeeeHung"},"content":"    protected String description;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"WeeeHung"},"content":"     * The status of the task (done or not done).","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"WeeeHung"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"WeeeHung"},"content":"     * The type of the task (TODO, DEADLINE, or EVENT).","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"WeeeHung"},"content":"    protected TaskType type;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"WeeeHung"},"content":"     * The start time of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"WeeeHung"},"content":"    protected LocalDateTime startTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"WeeeHung"},"content":"     * The end time of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"WeeeHung"},"content":"    protected LocalDateTime endTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"WeeeHung"},"content":"     * The string displayed when the task is marked as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"WeeeHung"},"content":"    protected final String MARKED_STRING \u003d \"    Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"WeeeHung"},"content":"     * The string displayed when the task is marked as not done yet.","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"WeeeHung"},"content":"    protected final String UNMARKED_STRING \u003d \"     OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"WeeeHung"},"content":"     * Constructs a Task object with the given description, type, start time, and end time.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"WeeeHung"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"WeeeHung"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"WeeeHung"},"content":"     * @param type        The type of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"WeeeHung"},"content":"     * @param start       The start time of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"WeeeHung"},"content":"     * @param end         The end time of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"WeeeHung"},"content":"    public Task(String description, TaskType type, String start, String end) {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"WeeeHung"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"WeeeHung"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"WeeeHung"},"content":"        // set to-do as the default type","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"WeeeHung"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"WeeeHung"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\");","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"WeeeHung"},"content":"        this.startTime \u003d Objects.equals(start, \"\")","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"WeeeHung"},"content":"                ? null","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"WeeeHung"},"content":"                : LocalDateTime.parse(start, formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"WeeeHung"},"content":"        this.endTime \u003d Objects.equals(end, \"\")","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"WeeeHung"},"content":"                ? null","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"WeeeHung"},"content":"                : LocalDateTime.parse(end, formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"WeeeHung"},"content":"     * Retrieves the description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"WeeeHung"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"WeeeHung"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"WeeeHung"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"WeeeHung"},"content":"        return this.description;","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"WeeeHung"},"content":"     * Retrieves the status icon of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"WeeeHung"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"WeeeHung"},"content":"     * @return The status icon of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"WeeeHung"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"WeeeHung"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"WeeeHung"},"content":"     * Retrieves the type icon of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"WeeeHung"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"WeeeHung"},"content":"     * @return The type icon of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"WeeeHung"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"WeeeHung"},"content":"        switch (this.type) {","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"WeeeHung"},"content":"            case TODO:","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"WeeeHung"},"content":"                return \"T\";","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"WeeeHung"},"content":"            case DEADLINE:","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"WeeeHung"},"content":"                return \"D\";","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"WeeeHung"},"content":"            case EVENT:","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"WeeeHung"},"content":"                return \"E\";","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"WeeeHung"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"WeeeHung"},"content":"        return null;","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"WeeeHung"},"content":"     * Sets the status of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"WeeeHung"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"WeeeHung"},"content":"     * @param checked The new status of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"WeeeHung"},"content":"    public void setStatus(Boolean checked) {","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"WeeeHung"},"content":"        this.isDone \u003d checked;","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"WeeeHung"},"content":"     * Prints the description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"WeeeHung"},"content":"    public void printDescription() {","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"WeeeHung"},"content":"        String initStatement \u003d \"     Got it. I\u0027ve added this task:\";","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"WeeeHung"},"content":"        System.out.println(initStatement);","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"WeeeHung"},"content":"        this.printMarking(false);","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"WeeeHung"},"content":"     * Prints the marking of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"WeeeHung"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"WeeeHung"},"content":"     * @param mark Indicates whether to display the marking or not.","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"WeeeHung"},"content":"    public void printMarking(boolean mark) {","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"WeeeHung"},"content":"        if (mark) {","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"WeeeHung"},"content":"            if (this.isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"WeeeHung"},"content":"                System.out.println(MARKED_STRING);","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"WeeeHung"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"WeeeHung"},"content":"                System.out.println(UNMARKED_STRING);","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"WeeeHung"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"WeeeHung"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"WeeeHung"},"content":"        System.out.printf(\"       [%s][%s] %s\", this.getTypeIcon(), this.getStatusIcon(), this.description);","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"WeeeHung"},"content":"        if (!Objects.isNull(this.startTime) \u0026\u0026 !Objects.isNull(this.endTime)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"WeeeHung"},"content":"            System.out.printf(\" (from: %s to: %s)\", this.startTime.toString().replace(\"T\", \" \"), this.endTime.toString().replace(\"T\", \" \"));","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"WeeeHung"},"content":"        } else if (!Objects.isNull(this.startTime)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"WeeeHung"},"content":"            System.out.printf(\" (by: %s)\", this.startTime.toString().replace(\"T\", \" \"));","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"WeeeHung"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"WeeeHung"},"content":"            return;","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"WeeeHung"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"WeeeHung"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"WeeeHung":144}},{"path":"src/main/java/DukePackage/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeeeHung"},"content":"package DukePackage;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"WeeeHung"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"WeeeHung"},"content":" * The TaskType enum represents the types of tasks that can be used in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"WeeeHung"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"WeeeHung"},"content":"public enum TaskType {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"WeeeHung"},"content":"     * Represents a todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"WeeeHung"},"content":"    TODO,","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"WeeeHung"},"content":"     * Represents a deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"WeeeHung"},"content":"    DEADLINE,","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"WeeeHung"},"content":"     * Represents an event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"WeeeHung"},"content":"    EVENT","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"WeeeHung"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"WeeeHung":22}},{"path":"src/main/java/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeeeHung"},"content":"import DukePackage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"WeeeHung"},"content":"import DukePackage.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"WeeeHung"},"content":"import DukePackage.TaskType;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"WeeeHung"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"WeeeHung"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"WeeeHung"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"WeeeHung"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"WeeeHung"},"content":" * The StorageTest class is a JUnit test class for testing the Storage class.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"WeeeHung"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"WeeeHung"},"content":"public class StorageTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"WeeeHung"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"WeeeHung"},"content":"     * Sets up the test environment before each test case.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"WeeeHung"},"content":"    @BeforeEach","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"WeeeHung"},"content":"    public void setUp() {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"WeeeHung"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"WeeeHung"},"content":"     * Tests the addList() method of the Storage class.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"WeeeHung"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"WeeeHung"},"content":"    public void testAddList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"WeeeHung"},"content":"        Task task \u003d new Task(\"Test task\", TaskType.TODO, \"\", \"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"WeeeHung"},"content":"        storage.addList(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"WeeeHung"},"content":"        assertEquals(1, storage.getTaskList().size());","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"WeeeHung"},"content":"        assertEquals(\"Test task\", storage.getTaskList().get(0).getDescription());","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"WeeeHung"},"content":"     * Tests the delete() method of the Storage class.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"WeeeHung"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"WeeeHung"},"content":"    public void testDelete() {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"WeeeHung"},"content":"        Task task1 \u003d new Task(\"Task 1\", TaskType.TODO, \"\", \"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"WeeeHung"},"content":"        Task task2 \u003d new Task(\"Task 2\", TaskType.TODO, \"\", \"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"WeeeHung"},"content":"        storage.addList(task1);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"WeeeHung"},"content":"        storage.addList(task2);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"WeeeHung"},"content":"        storage.deleteTask(0);","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"WeeeHung"},"content":"        assertEquals(1, storage.getTaskList().size());","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"WeeeHung"},"content":"        assertEquals(\"Task 2\", storage.getTaskList().get(0).getDescription());","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"WeeeHung"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"WeeeHung":48}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WeeeHung"},"content":"todo task1","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"WeeeHung"},"content":"event task2 /from tue /to fri","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"WeeeHung"},"content":"event task2 /from tue /to fri","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"WeeeHung"},"content":"list","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"WeeeHung":4}}]
