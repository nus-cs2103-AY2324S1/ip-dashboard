{"authorDailyContributionsMap":{"shyanyong":[{"date":"2023-08-22","commitResults":[{"hash":"c7fc58319f6719f1a5d9fb0b5e582c279799db04","isMergeCommit":false,"messageTitle":"Level 0. Rename, Greet, Exit (a) Give your chatbot a new name, to differentiate it from the placeholder name Duke.","messageBody":"(b) Implement an initial skeletal version of the it that simply greets the user and exits.\n","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"4267d6d4f5751178bb63250f2a06001cf5ff22aa","isMergeCommit":false,"messageTitle":"Level 1. Echo Improve the skeletal version of Duke so that it echos commands entered by the user, and exits when the user types the command bye.","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":1}}},{"hash":"abc9088f4bc9c2e66901cdce30a2b965bed3923a","isMergeCommit":false,"messageTitle":"Level 2. Add, List Add the ability to store whatever text entered by the user and display them back to the user when requested.","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":3}}},{"hash":"4cf5cfcc9bee956c0130baf7a2f4f89d19c4a6a2","isMergeCommit":false,"messageTitle":"Level 3. Mark as Done Add the ability to mark tasks as done. Optionally, add the ability to change the status back to not done.","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":63,"deletions":4}}}]},{"date":"2023-08-23","commitResults":[{"hash":"514816e3f1fb74aafff5deab861cb30cb7f52971","isMergeCommit":false,"messageTitle":"Level 4. ToDos, Events, Deadlines Add support for tracking three types of tasks:","messageBody":"ToDos: tasks without any date/time attached to it e.g., visit new theme park\nDeadlines: tasks that need to be done before a specific date/time e.g., submit report by 11/10/2019 5pm\nEvents: tasks that start at a specific date/time and ends at a specific date/time\ne.g., (a) team project meeting 2/10/2019 2-4pm (b) orientation week 4/10/2019 to 11/10/2019\n\nAdded support for all the tasks\n","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":98,"deletions":4}}},{"hash":"e9e7993c1b480376a75495581c941e43d222630f","isMergeCommit":false,"messageTitle":"Use the input/output redirection technique to semi-automate the testing of Duke.","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"bat":{"insertions":1,"deletions":1}}},{"hash":"dc88fe0a47abc880cde97af163c24e82d1fcdc94","isMergeCommit":false,"messageTitle":"Updated automatated testing","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":1}}},{"hash":"3a0506f45474781d7bd6a7b5f13fff3b55788f3d","isMergeCommit":false,"messageTitle":"Level 5. Handle Errors Teach the chatbot to deal with errors such as incorrect inputs entered by the user.","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":0}}},{"hash":"b70b5944850d3410ad4d355966eafe2caf69359d","isMergeCommit":false,"messageTitle":"Level 6. Delete Add support for deleting tasks from the list.","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":0}}},{"hash":"f7b2a195dd513582134b5f4894f089512009881f","isMergeCommit":false,"messageTitle":"Updated tests","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":1}}}]},{"date":"2023-08-29","commitResults":[{"hash":"85b46860eaf1f3d52e41997546485eacde75f542","isMergeCommit":false,"messageTitle":"Level-7: Implement automatic task data saving and loading from disk This commit introduces the feature of automatically saving tasks to the hard disk whenever the task list undergoes changes. Additionally, it enables the loading of task data from the hard disk during the chatbot\u0027s startup. The file name and relative path are hard-coded from the project root. The data is stored in a format designed for efficient storage and retrieval. This feature enhances the user experience by ensuring that task data persists across chatbot sessions and remains consistent even in the event of interruptions.","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{"java":{"insertions":97,"deletions":0}}},{"hash":"e2244219e44fb061beb1509298cb22d52068e627","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-7\u0027","messageBody":"","fileTypesAndContributionMap":{}}]},{"date":"2023-08-30","commitResults":[{"hash":"316c6cf964d8c6a5247437e983f002259a7a4174","isMergeCommit":false,"messageTitle":"Level-8: Dates and Times This commit implements date and time understanding for tasks.","messageBody":"This commit enhances the chatbot\u0027s capability to intelligently interpret dates and times provided in commands. When processing task inputs like \"deadline return book /by 2/12/2019 1800\", the chatbot now comprehends the date \"2/12/2019\" as 2nd of December 2019 and the time \"1800\" as 6pm. The parsed dates are stored as java.time.LocalDate or java.time.LocalDateTime objects in task instances.\n\nAdditionally, the chatbot accepts dates in the yyyy-mm-dd format (e.g., 2019-10-15) and presents them in a more readable format such as MMM dd yyyy (e.g., Oct 15 2019) when displaying task details. This improvement elevates the user experience by enabling more natural and intuitive interaction with date and time information.\n","tags":["Level-8"],"fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":0},"java":{"insertions":109,"deletions":37}}},{"hash":"60b9f38fcb7f4e880183fa1543f6dd0187492e7b","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-8\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"10066f92891f7237efadb02234eef54dfc134078","isMergeCommit":false,"messageTitle":"A-MoreOOP: Rewrote brotherman chatbot in OOP style.  Added new classes to encapsulate commands as well as Ui, Storage and TaskList.","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":447,"deletions":278}}},{"hash":"c148d1538c5d03d1831b2086a5ee1198e6101c4a","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-MoreOOP\u0027","messageBody":"Merge MoreOOP.  OOP the files.  Created new classes to encapsulate commands, parsing, ui and storage.\n","fileTypesAndContributionMap":{}},{"hash":"06661f8dbdda7f20e368a4875ac3f5d0638e3f5f","isMergeCommit":false,"messageTitle":"A-Packages:","messageBody":"Added packages into Brotherman.  Added Commands, exceptions, parser, storage, tasks, ui.\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"70b3e0eba288d92f0cb9828069660806427722d8","isMergeCommit":false,"messageTitle":"A-Packages:","messageBody":"Added packages into Brotherman.  Added Commands, exceptions, parser, storage, tasks, ui.\n","tags":["A-Packages"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":1},"java":{"insertions":74,"deletions":13}}},{"hash":"d9344230d5c51176f0de63b81aef27123f5fb5ab","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Packages\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"9157fc2b18cd913f0f486ea83329a73cc378cfe0","isMergeCommit":true,"messageTitle":"Merge branch \u0027add-gradle-support\u0027 into branch-Gradle","messageBody":"","fileTypesAndContributionMap":{}}]},{"date":"2023-08-31","commitResults":[{"hash":"209042ef8d538120562c4f8f15c85b61de805cd5","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Gradle\u0027","messageBody":"","tags":["A-Jar","A-Gradle"],"fileTypesAndContributionMap":{}},{"hash":"9a69eefdb5710d96744ee3f14766719417ecf0b3","isMergeCommit":false,"messageTitle":"Add JUnit tests for Parser class and Ui class.","messageBody":"Sure, I can help you write a GitHub commit message where JUnit tests have been added to test the code. Here is an example of a commit message:\n\nAdd JUnit tests for Parser class\n\nThis commit adds JUnit tests for the parseTodo() and ShowWelcomeMessage()\n","tags":["A-JUnit","A-CodingStandard"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":0},"java":{"insertions":111,"deletions":26}}},{"hash":"876f9aec41978dbb8bb6167e35e2386fe338166b","isMergeCommit":false,"messageTitle":"Add Javadocs to all files","messageBody":"This commit adds Javadocs to all files in the project. Javadocs are documentation comments that can be used to describe the purpose of a class, method, or field. They can be helpful for understanding the code and for debugging.\n","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":405,"deletions":6}}},{"hash":"a84a100c074082fe63ebf4bb9303786377f2b2fe","isMergeCommit":false,"messageTitle":"Add FindCommand class","messageBody":"This commit adds the FindCommand class, which allows users to find tasks with a specified keyword.\n\nThe FindCommand class is a subclass of the Command class. It has a constructor that takes the keyword as a parameter. The execute() method of the FindCommand class calls the getTasksByKeyword() method of the TaskList class to get the tasks that match the keyword. The showTaskList() method of the Ui class is then called to display the list of tasks to the user.\n","tags":["Level-9","A-Level-9"],"fileTypesAndContributionMap":{"java":{"insertions":56,"deletions":2}}},{"hash":"9b55c129b9bb6bd8491af46960ccd9f0b94086f6","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JavaDoc\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"965d0a379ccf7087f14bac9de2953c84f9cf280e","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-9\u0027","messageBody":"# Conflicts:\n#\tsrc/main/java/brotherman/tasks/TaskList.java\n#\tsrc/main/java/brotherman/ui/Ui.java\n","fileTypesAndContributionMap":{}}]},{"date":"2023-09-06","commitResults":[{"hash":"6e9757e8c424bc8d49e3b929c507569c3baf4789","isMergeCommit":false,"messageTitle":"Add Checkstyle to project and resolve all Checkstyle issues","messageBody":"In this commit, we introduce Checkstyle to our project to enforce consistent coding style and maintain code quality. The following changes have been made:\n\n- Added Checkstyle plugin to IntelliJ IDEA for integrated code analysis.\n- Configured Checkstyle with a custom checkstyle.xml configuration file tailored to our project\u0027s coding standards.\n- Resolved all Checkstyle issues identified in the codebase, ensuring adherence to the coding guidelines.\n\nThis implementation helps us maintain a cleaner and more consistent codebase, making it easier to collaborate and maintain the project in the long run.\n","fileTypesAndContributionMap":{"gradle":{"insertions":5,"deletions":0},"java":{"insertions":108,"deletions":64}}},{"hash":"5fc81e417a848604d1e76b9f0819312e6bce5dd7","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Checkstyle\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"7f7706fc54ca569d6eeed8eee226c64362da7961","isMergeCommit":false,"messageTitle":"Resolve Parsing and general Code Cleanup","messageBody":"   - Improved parsing logic for date and time strings to handle a wider range of formats.\n\n- Conducted a thorough code review and performed extensive code cleanup.\n   - Removed redundant code, optimized data structures, and enhanced code readability.\n   - Applied consistent coding standards and naming conventions across the project.\n","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"java":{"insertions":24,"deletions":18}}}]}]},"authorFileTypeContributionMap":{"shyanyong":{"java":1233,"md":0,"fxml":0,"sh":0,"bat":1,"gradle":7,"txt":4}},"authorContributionVariance":{"shyanyong":58373.176},"authorDisplayNameMap":{"shyanyong":"CS2103T-T15-2 WONG..YONG"}}
