[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"checkstyle {","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"    toolVersion \u003d 10.2","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"nknguyenhc":6,"-":41}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import duke.parse.Parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import duke.parse.command.Command;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":" * Main class, where the user interacts with the bot.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":" * The bot accesses the storage through the Storage class,","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":" * standard in and out through the UI class,","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":" * manage the current task list through the TaskList class.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"    private final String myName \u003d \"Quack-NKN\";","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"    private TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"    private final Storage storage \u003d new Storage(\"task-list.txt\");","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"    private final UI userInterface \u003d new UI(\"Quack, \", \"!\");","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"     * Instantiate the bot, and starts the interaction immediately.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"    public Duke() {","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"        interact();","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"     * Invoked at the start before interaction.","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"     * Reads data from file and save to the list of task.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"     * If file is corrupted, the exception thrown from Storage instance is thrown.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"     * If there is IO error, handle the exception gracefully,","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"     * and continue with an empty task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"    private void readFromDisk() throws Storage.FileCorruptedException {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"        this.userInterface.notifyDataLoading();","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"            ArrayList\u003cTask\u003e taskList \u003d this.storage.readFromDisk();","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"            this.taskList \u003d new TaskList(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"            this.userInterface.notifyDataLoaded();","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"        } catch (Storage.FileIoException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"            this.userInterface.notifyLoadingIoError();","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"     * Leaves an exit message.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"    public void exit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"        this.userInterface.exit();","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"     * Main programme to allow user to input and respond accordingly.","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"     * Available commands:","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"     * - bye/exit: to exit the programme","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"     * - list: to list out the current task list","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"     * - list {date}: to list out all events happening on that date or deadlines before/on that date","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"     * - list {todo/deadline/event}: list out all todo items / deadline items / event items","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"     * - list -d: list out all tasks not done","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"     * - mark {number}: to mark the task with the corresponding index in the list as done","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"     * - unmark {number}: to mark the task with the corresponding index in the list as not done","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"nknguyenhc"},"content":"     * - todo {taskname}: to add a new task as a to-do item (no deadline or time)","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"     * - event {taskname} /from {starttime} /to {endtime}: to add a new task as an event (with start time and end time)","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"     * - deadline {taskname} /by {time}: to add a new task as a deadline (with deadline time)","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"     * Note that for list, a combination of options can be used, by separating them by space characters.","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"     * If there is an error in the input from user, notify the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"     * Datetime format: \"{date} {time}\"","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"     * Date format: either \"today\", \"tmr\", \"tomorrow\", or DD/MM/YYYY","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"nknguyenhc"},"content":"     * Time format: either \"{HH:MM}\", \"{HH}am\", \"{HH}pm\", \"{HH:MM}am\" or \"{HH:MM}pm\"","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"    private void interact() {","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"nknguyenhc"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"nknguyenhc"},"content":"            this.readFromDisk();","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"nknguyenhc"},"content":"        } catch (Storage.FileCorruptedException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"nknguyenhc"},"content":"            boolean isContinuing \u003d this.userInterface.handleFileCorrupted();","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"nknguyenhc"},"content":"            if (!isContinuing) {","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"nknguyenhc"},"content":"                return;","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"nknguyenhc"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"nknguyenhc"},"content":"        this.userInterface.start(this.myName);","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"nknguyenhc"},"content":"        boolean isContinuing \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"nknguyenhc"},"content":"        while (isContinuing) {","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"nknguyenhc"},"content":"            // receive input","lastModifiedDate":"2023-08-22"},{"lineNumber":90,"author":{"gitId":"nknguyenhc"},"content":"            String input \u003d this.userInterface.takeInput(\"In: \");","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"nknguyenhc"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"nknguyenhc"},"content":"                Command command \u003d Parser.parse(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"nknguyenhc"},"content":"                isContinuing \u003d command.execute(this);","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"nknguyenhc"},"content":"            } catch (Parser.ParseError e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"nknguyenhc"},"content":"                this.userInterface.notifyError(e.getMessage());","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"nknguyenhc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":98,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":99,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":101,"author":{"gitId":"nknguyenhc"},"content":"     * Shows the list of task to the user, with the options included.","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"nknguyenhc"},"content":"     * This does not filter task type (todo/deadline/event)","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"nknguyenhc"},"content":"     * @param isExcludingDone whether to exclude tasks already done","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"nknguyenhc"},"content":"     * @param date date to display the deadlines before and events happening on,","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"nknguyenhc"},"content":"     *             null if to not exclude any task by date","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":107,"author":{"gitId":"nknguyenhc"},"content":"    public void showList(boolean isExcludingDone, LocalDate date) {","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"nknguyenhc"},"content":"        this.userInterface.notifyList(UI.Type.DEFAULT, isExcludingDone, date);","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"nknguyenhc"},"content":"        this.taskList.displayTasks(isExcludingDone, date);","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"nknguyenhc"},"content":"     * Shows all to-do tasks with the given filters.","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"nknguyenhc"},"content":"     * @param isExcludingDone whether to exclude tasks already done","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"nknguyenhc"},"content":"    public void showTodos(boolean isExcludingDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"nknguyenhc"},"content":"        this.userInterface.notifyList(UI.Type.TODO, isExcludingDone, null);","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"nknguyenhc"},"content":"        this.taskList.displayTodos(isExcludingDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"nknguyenhc"},"content":"     * Shows all deadlines with the given filters.","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"nknguyenhc"},"content":"     * @param isExcludingDone whether to exclude tasks already done","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"nknguyenhc"},"content":"     * @param date the date to display deadlines before","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"nknguyenhc"},"content":"    public void showDeadlines(boolean isExcludingDone, LocalDate date) {","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"nknguyenhc"},"content":"        this.userInterface.notifyList(UI.Type.DEADLINE, isExcludingDone, date);","lastModifiedDate":"2023-09-05"},{"lineNumber":128,"author":{"gitId":"nknguyenhc"},"content":"        this.taskList.displayDeadlines(isExcludingDone, date);","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"nknguyenhc"},"content":"     * Shows all events with the given filters.","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"nknguyenhc"},"content":"     * @param isExcludingDone whether to exclude tasks already done","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"nknguyenhc"},"content":"     * @param date the date to display events happening on","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"nknguyenhc"},"content":"    public void showEvents(boolean isExcludingDone, LocalDate date) {","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"nknguyenhc"},"content":"        this.userInterface.notifyList(UI.Type.EVENT, isExcludingDone, date);","lastModifiedDate":"2023-09-05"},{"lineNumber":138,"author":{"gitId":"nknguyenhc"},"content":"        this.taskList.displayEvents(isExcludingDone, date);","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":140,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"nknguyenhc"},"content":"     * Adds a task to","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"nknguyenhc"},"content":"     * @param task","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"nknguyenhc"},"content":"    public void addTaskToList(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"nknguyenhc"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"nknguyenhc"},"content":"        this.userInterface.notifyAdded(task);","lastModifiedDate":"2023-09-05"},{"lineNumber":148,"author":{"gitId":"nknguyenhc"},"content":"        this.userInterface.showTaskCount(this.taskList.size());","lastModifiedDate":"2023-09-05"},{"lineNumber":149,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":150,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":151,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":152,"author":{"gitId":"nknguyenhc"},"content":"     * Mark a task with corresponding index as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"nknguyenhc"},"content":"     * Handles the case where task index is out of range.","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"nknguyenhc"},"content":"     * @param index the index of task to remove","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":156,"author":{"gitId":"nknguyenhc"},"content":"    public void markTaskAsDone(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"nknguyenhc"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"nknguyenhc"},"content":"            Task task \u003d this.taskList.markTaskAsDone(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"nknguyenhc"},"content":"            this.userInterface.notifyMarkDone(task);","lastModifiedDate":"2023-09-05"},{"lineNumber":160,"author":{"gitId":"nknguyenhc"},"content":"        } catch (TaskList.TaskIndexOutOfRange e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"nknguyenhc"},"content":"            this.userInterface.notifyError(\"invalid task index\");","lastModifiedDate":"2023-09-05"},{"lineNumber":162,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":164,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":165,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":166,"author":{"gitId":"nknguyenhc"},"content":"     * Mark a task with corresponding index as not done.","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"nknguyenhc"},"content":"     * Handles the case where task index is out of range.","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"nknguyenhc"},"content":"     * @param index the index of task to remove","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":170,"author":{"gitId":"nknguyenhc"},"content":"    public void markTaskAsNotDone(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"nknguyenhc"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":172,"author":{"gitId":"nknguyenhc"},"content":"            Task task \u003d this.taskList.markTaskAsNotDone(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":173,"author":{"gitId":"nknguyenhc"},"content":"            this.userInterface.notifyMarkNotDone(task);","lastModifiedDate":"2023-09-05"},{"lineNumber":174,"author":{"gitId":"nknguyenhc"},"content":"        } catch (TaskList.TaskIndexOutOfRange e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":175,"author":{"gitId":"nknguyenhc"},"content":"            this.userInterface.notifyError(\"invalid task index\");","lastModifiedDate":"2023-09-05"},{"lineNumber":176,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":177,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":178,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":179,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":180,"author":{"gitId":"nknguyenhc"},"content":"     * Delete the task with the given index.","lastModifiedDate":"2023-08-31"},{"lineNumber":181,"author":{"gitId":"nknguyenhc"},"content":"     * Handles the case where the task index is out of range.","lastModifiedDate":"2023-08-31"},{"lineNumber":182,"author":{"gitId":"nknguyenhc"},"content":"     * @param index the index of the task","lastModifiedDate":"2023-08-31"},{"lineNumber":183,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":184,"author":{"gitId":"nknguyenhc"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":185,"author":{"gitId":"nknguyenhc"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":186,"author":{"gitId":"nknguyenhc"},"content":"            Task taskDeleted \u003d this.taskList.deleteTask(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":187,"author":{"gitId":"nknguyenhc"},"content":"            this.userInterface.notifyRemoved(taskDeleted);","lastModifiedDate":"2023-09-05"},{"lineNumber":188,"author":{"gitId":"nknguyenhc"},"content":"        } catch (TaskList.TaskIndexOutOfRange e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":189,"author":{"gitId":"nknguyenhc"},"content":"            this.userInterface.notifyError(\"invalid task index\");","lastModifiedDate":"2023-09-05"},{"lineNumber":190,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":191,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":192,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":193,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":194,"author":{"gitId":"nknguyenhc"},"content":"     * Save data to hard disk, with the current task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":195,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":196,"author":{"gitId":"nknguyenhc"},"content":"    public void saveData() {","lastModifiedDate":"2023-08-31"},{"lineNumber":197,"author":{"gitId":"nknguyenhc"},"content":"        this.userInterface.notifyDataSaving();","lastModifiedDate":"2023-09-05"},{"lineNumber":198,"author":{"gitId":"nknguyenhc"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":199,"author":{"gitId":"nknguyenhc"},"content":"            this.taskList.saveData(this.storage);","lastModifiedDate":"2023-09-05"},{"lineNumber":200,"author":{"gitId":"nknguyenhc"},"content":"            this.userInterface.notifyDataSaved();","lastModifiedDate":"2023-09-05"},{"lineNumber":201,"author":{"gitId":"nknguyenhc"},"content":"        } catch (Storage.FileIoException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":202,"author":{"gitId":"nknguyenhc"},"content":"            this.userInterface.notifyError(\"an error has occurred while writing to hard disk\");","lastModifiedDate":"2023-09-05"},{"lineNumber":203,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":204,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":205,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":206,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":207,"author":{"gitId":"nknguyenhc"},"content":"     * Echo command back to the user.","lastModifiedDate":"2023-08-23"},{"lineNumber":208,"author":{"gitId":"nknguyenhc"},"content":"     * @param input the input from the user","lastModifiedDate":"2023-08-31"},{"lineNumber":209,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":210,"author":{"gitId":"nknguyenhc"},"content":"    public void echo(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":211,"author":{"gitId":"nknguyenhc"},"content":"        this.userInterface.echo(input);","lastModifiedDate":"2023-09-05"},{"lineNumber":212,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":213,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":214,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":215,"author":{"gitId":"nknguyenhc"},"content":"     * Finds a task based on the command from the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":216,"author":{"gitId":"nknguyenhc"},"content":"     * @param input the input from the user","lastModifiedDate":"2023-08-31"},{"lineNumber":217,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":218,"author":{"gitId":"nknguyenhc"},"content":"    public void find(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":219,"author":{"gitId":"nknguyenhc"},"content":"        this.userInterface.notifyFind(input);","lastModifiedDate":"2023-09-05"},{"lineNumber":220,"author":{"gitId":"nknguyenhc"},"content":"        this.taskList.showResults(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":221,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":222,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":223,"author":{"gitId":"nknguyenhc"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-22"},{"lineNumber":224,"author":{"gitId":"nknguyenhc"},"content":"        new Duke();","lastModifiedDate":"2023-08-22"},{"lineNumber":225,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nknguyenhc":224,"-":2}},{"path":"src/main/java/duke/parse/DateTimeManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package duke.parse;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":" * Contains methods to deal with datetime,","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":" * including methods to convert java date and time to readable string and string for storage,","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":" * and vice versa.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"public class DateTimeManager {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"     * Thrown when the date string given by the user cannot be parsed properly.","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"    public static class DateParseException extends Exception {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"        private DateParseException() {}","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"     * Transforms a String input of datetime to a LocalDateTime instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"     * The string must be in the format \"dd/mm/yyyy hh:mm\"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"     * @param input the input string","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"     * @return the LocalDateTime object that corresponds to the input string","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"     * @throws DateParseException if the input string is in a wrong format","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"    public static LocalDateTime inputToDate(String input) throws DateParseException {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"        String[] splitBySpace \u003d input.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"        if (splitBySpace.length !\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"            throw new DateParseException();","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"        LocalDate date \u003d DateTimeManager.parseDate(splitBySpace[0]);","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"        LocalTime time \u003d DateTimeManager.parseTime(splitBySpace[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"        return LocalDateTime.of(date, time);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"     * Parses the string and return a LocalDate instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"     * @param input the raw string","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"     * @return the LocalDate instance that corresponds to the input","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"     * @throws DateParseException when the input string cannot be parsed properly","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"    public static LocalDate parseDate(String input) throws DateParseException {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"        String[] dateData \u003d input.split(\"/\");","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"        if (dateData.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"            switch (dateData[0]) {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"            case \"today\":","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"                return LocalDate.now();","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"            case \"tomorrow\":","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"            case \"tmr\":","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"                return LocalDate.now().plusDays(1);","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"            default:","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"                throw new DateParseException();","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"        } else if (dateData.length \u003d\u003d 3) {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"            for (String data : dateData) {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"                if (data.matches(\"0+\") || !data.matches(\"\\\\d+\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"                    throw new DateParseException();","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"                return LocalDate.of(","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"                        Integer.parseInt(dateData[2]),","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"nknguyenhc"},"content":"                        Integer.parseInt(dateData[1]),","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"                        Integer.parseInt(dateData[0])","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"                );","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"                throw new DateParseException();","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"nknguyenhc"},"content":"            throw new DateParseException();","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"nknguyenhc"},"content":"     * Reads the given input indicating a time and return a LocalTime instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"nknguyenhc"},"content":"     * @param input the raw input string","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"nknguyenhc"},"content":"     * @return the LocalTime instance that corresponds to the string","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"nknguyenhc"},"content":"     * @throws DateParseException when the string cannot be parsed properly to interpret a time","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"nknguyenhc"},"content":"    public static LocalTime parseTime(String input) throws DateParseException {","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"nknguyenhc"},"content":"        String possibleAmPm \u003d input.substring(input.length() - 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"nknguyenhc"},"content":"        boolean isPm \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"nknguyenhc"},"content":"        boolean isAm \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"nknguyenhc"},"content":"        if (possibleAmPm.equals(\"am\") || possibleAmPm.equals(\"pm\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"nknguyenhc"},"content":"            if (possibleAmPm.equals(\"pm\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"nknguyenhc"},"content":"                isPm \u003d true;","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"nknguyenhc"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"nknguyenhc"},"content":"            if (possibleAmPm.equals(\"am\")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"nknguyenhc"},"content":"                isAm \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"nknguyenhc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"nknguyenhc"},"content":"            input \u003d input.substring(0, input.length() - 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"nknguyenhc"},"content":"        String[] timeData \u003d input.split(\":\");","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"nknguyenhc"},"content":"        if (timeData.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"nknguyenhc"},"content":"            if (!timeData[0].matches(\"\\\\d+\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"nknguyenhc"},"content":"                throw new DateParseException();","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"nknguyenhc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"nknguyenhc"},"content":"            int hour \u003d Integer.parseInt(timeData[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"nknguyenhc"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"nknguyenhc"},"content":"                return LocalTime.of((hour \u003d\u003d 12 ? (isAm ? 0 : isPm ? 0 : 12) : hour) + (isPm ? 12 : 0), 0);","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"nknguyenhc"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"nknguyenhc"},"content":"                throw new DateParseException();","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"nknguyenhc"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"nknguyenhc"},"content":"        } else if (timeData.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"nknguyenhc"},"content":"            for (String data : timeData) {","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"nknguyenhc"},"content":"                if (!data.matches(\"\\\\d+\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"nknguyenhc"},"content":"                    throw new DateParseException();","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"nknguyenhc"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"nknguyenhc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"nknguyenhc"},"content":"            int hour \u003d Integer.parseInt(timeData[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"nknguyenhc"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"nknguyenhc"},"content":"                return LocalTime.of((hour \u003d\u003d 12 ? (isAm ? 0 : isPm ? 0 : 12) : hour) + (isPm ? 12 : 0),","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"nknguyenhc"},"content":"                        Integer.parseInt(timeData[1])","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"nknguyenhc"},"content":"                );","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"nknguyenhc"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"nknguyenhc"},"content":"                throw new DateParseException();","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"nknguyenhc"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"nknguyenhc"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"nknguyenhc"},"content":"            throw new DateParseException();","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"nknguyenhc"},"content":"     * Converts the given datetime to string for storage","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"nknguyenhc"},"content":"     * @param dateTime the instance of LocalDateTime to convert","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"nknguyenhc"},"content":"     * @return the string containing the data of the datetime","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"nknguyenhc"},"content":"    public static String dateToStringData(LocalDateTime dateTime) {","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"nknguyenhc"},"content":"        return DateTimeManager.dateToStringData(dateTime.toLocalDate()) + \" \"","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"nknguyenhc"},"content":"                + DateTimeManager.timeDataFrom(dateTime.toLocalTime());","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"nknguyenhc"},"content":"     * Converts the given date to string data for storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"nknguyenhc"},"content":"     * @param date the instance of LocalDate to convert","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"nknguyenhc"},"content":"     * @return the string containing data of the date","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"nknguyenhc"},"content":"    public static String dateToStringData(LocalDate date) {","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"nknguyenhc"},"content":"        return date.getDayOfMonth() + \"/\"","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"nknguyenhc"},"content":"                + date.getMonthValue() + \"/\"","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"nknguyenhc"},"content":"                + date.getYear();","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"nknguyenhc"},"content":"     * Converts the given time to string data for storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"nknguyenhc"},"content":"     * @param time the instance of LocalTime to convert","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"nknguyenhc"},"content":"     * @return the string containing the data of the time","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"nknguyenhc"},"content":"    public static String timeDataFrom(LocalTime time) {","lastModifiedDate":"2023-08-30"},{"lineNumber":154,"author":{"gitId":"nknguyenhc"},"content":"        return time.getHour() + \":\" + time.getMinute();","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"nknguyenhc"},"content":"     * Converts a datetime to readable form, for display in UI.","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"nknguyenhc"},"content":"     * @param dateTime the instance of LocalDateTime to display","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"nknguyenhc"},"content":"     * @return the string representing the datetime to be displayed","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"nknguyenhc"},"content":"    public static String dateToDisplay(LocalDateTime dateTime) {","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"nknguyenhc"},"content":"        return DateTimeManager.dateToDisplay(dateTime.toLocalDate()) + \" \"","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"nknguyenhc"},"content":"                + DateTimeManager.timeDisplayFrom(dateTime.toLocalTime());","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"nknguyenhc"},"content":"     * Converts the date given to readable form, for display in UI.","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"nknguyenhc"},"content":"     * @param date the instance of LocalDate to display","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"nknguyenhc"},"content":"     * @return the string representing the date to be displayed","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"nknguyenhc"},"content":"    public static String dateToDisplay(LocalDate date) {","lastModifiedDate":"2023-08-30"},{"lineNumber":173,"author":{"gitId":"nknguyenhc"},"content":"        if (date.equals(LocalDate.now())) {","lastModifiedDate":"2023-08-30"},{"lineNumber":174,"author":{"gitId":"nknguyenhc"},"content":"            return \"today\";","lastModifiedDate":"2023-08-30"},{"lineNumber":175,"author":{"gitId":"nknguyenhc"},"content":"        } else if (date.equals(LocalDate.now().plusDays(1))) {","lastModifiedDate":"2023-08-30"},{"lineNumber":176,"author":{"gitId":"nknguyenhc"},"content":"            return \"tomorrow\";","lastModifiedDate":"2023-08-30"},{"lineNumber":177,"author":{"gitId":"nknguyenhc"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":178,"author":{"gitId":"nknguyenhc"},"content":"            return dateToStringData(date);","lastModifiedDate":"2023-08-30"},{"lineNumber":179,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":180,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":181,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":182,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":183,"author":{"gitId":"nknguyenhc"},"content":"     * Converts the time to readable form, for display in UI.","lastModifiedDate":"2023-08-31"},{"lineNumber":184,"author":{"gitId":"nknguyenhc"},"content":"     * @param time the instance of LocalTime to convert","lastModifiedDate":"2023-08-31"},{"lineNumber":185,"author":{"gitId":"nknguyenhc"},"content":"     * @return the string representing the time to be displayed","lastModifiedDate":"2023-08-31"},{"lineNumber":186,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":187,"author":{"gitId":"nknguyenhc"},"content":"    public static String timeDisplayFrom(LocalTime time) {","lastModifiedDate":"2023-08-30"},{"lineNumber":188,"author":{"gitId":"nknguyenhc"},"content":"        if (time.getHour() \u003c 12) {","lastModifiedDate":"2023-08-30"},{"lineNumber":189,"author":{"gitId":"nknguyenhc"},"content":"            return (time.getHour() \u003d\u003d 0","lastModifiedDate":"2023-08-30"},{"lineNumber":190,"author":{"gitId":"nknguyenhc"},"content":"                        ? \"12\"","lastModifiedDate":"2023-08-30"},{"lineNumber":191,"author":{"gitId":"nknguyenhc"},"content":"                        : DateTimeManager.twoDecimalPlaces(time.getHour())","lastModifiedDate":"2023-08-30"},{"lineNumber":192,"author":{"gitId":"nknguyenhc"},"content":"                    ) + \":\" + DateTimeManager.twoDecimalPlaces(time.getMinute()) + \"am\";","lastModifiedDate":"2023-08-30"},{"lineNumber":193,"author":{"gitId":"nknguyenhc"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":194,"author":{"gitId":"nknguyenhc"},"content":"            return (time.getHour() \u003d\u003d 12","lastModifiedDate":"2023-08-30"},{"lineNumber":195,"author":{"gitId":"nknguyenhc"},"content":"                        ? \"12\"","lastModifiedDate":"2023-08-30"},{"lineNumber":196,"author":{"gitId":"nknguyenhc"},"content":"                        : DateTimeManager.twoDecimalPlaces(time.getHour() - 12)","lastModifiedDate":"2023-08-30"},{"lineNumber":197,"author":{"gitId":"nknguyenhc"},"content":"                    ) + \":\" + DateTimeManager.twoDecimalPlaces(time.getMinute()) + \"pm\";","lastModifiedDate":"2023-08-30"},{"lineNumber":198,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":199,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":200,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":201,"author":{"gitId":"nknguyenhc"},"content":"    private static String twoDecimalPlaces(int number) {","lastModifiedDate":"2023-08-30"},{"lineNumber":202,"author":{"gitId":"nknguyenhc"},"content":"        return number \u003c 10 ? \"0\" + number : Integer.toString(number);","lastModifiedDate":"2023-08-30"},{"lineNumber":203,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":204,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"nknguyenhc":204}},{"path":"src/main/java/duke/parse/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package duke.parse;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import duke.parse.command.AddCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import duke.parse.command.Command;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import duke.parse.command.DeleteCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import duke.parse.command.EchoCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"import duke.parse.command.EmptyCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import duke.parse.command.ExitCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"import duke.parse.command.FindCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"import duke.parse.command.ListCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"import duke.parse.command.MarkCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"import duke.parse.command.SaveCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":" * Deals with parsing input from user.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"     * Thrown when the input from user cannot be parsed properly.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"    public static class ParseError extends Exception {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"        private ParseError(String message) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"            super(message);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"     * Parse a given input.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"     * Available commands:","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"     * - bye/exit: to exit the programme","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"     * - list: to list out the current task list","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"     * - list {date}: to list out all events happening on that date or deadlines before/on that date","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"     * - list {todo/deadline/event}: list out all todo items / deadline items / event items","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"     * - list -d: list out all tasks not done","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"     * - mark {number}: to mark the task with the corresponding index in the list as done","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"     * - unmark {number}: to mark the task with the corresponding index in the list as not done","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"     * - todo {taskname}: to add a new task as a to-do item (no deadline or time)","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"     * - event {taskname} /from {starttime} /to {endtime}: to add a new task as an event (with start time and end time)","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"     * - deadline {taskname} /by {time}: to add a new task as a deadline (with deadline time)","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"     * Note that for list, a combination of options can be used, by separating them by space characters.","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"     * @param input the input from the user","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"     * @return the command to be executed on the bot","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"     * @throws ParseError when the input cannot be properly interpreted","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"    public static Command parse(String input) throws ParseError {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"        String[] commandArgs \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"        int index;","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"        switch (commandArgs[0]) {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"        case \"\":","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"            return new EmptyCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"        case \"exit\":","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"        case \"bye\":","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"        // show list","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"        case \"list\":","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"            if (commandArgs.length !\u003d 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"                String[] args \u003d commandArgs[1].split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"nknguyenhc"},"content":"                boolean isExcludingDone \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"                LocalDate date \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"                for (String arg: args) {","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"                    switch (arg) {","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"                    case \"todo\":","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"                    case \"deadline\":","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"                    case \"event\":","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"nknguyenhc"},"content":"                        break;","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"nknguyenhc"},"content":"                    case \"-d\":","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"                        isExcludingDone \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"nknguyenhc"},"content":"                        break;","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"nknguyenhc"},"content":"                    default:","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"nknguyenhc"},"content":"                        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"nknguyenhc"},"content":"                            date \u003d DateTimeManager.parseDate(arg);","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"nknguyenhc"},"content":"                        } catch (DateTimeManager.DateParseException | DateTimeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"nknguyenhc"},"content":"                            throw new ParseError(\"unrecognised \\\"\" + arg + \"\\\"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"nknguyenhc"},"content":"                        }","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"nknguyenhc"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"nknguyenhc"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"nknguyenhc"},"content":"                switch (args[0]) {","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"nknguyenhc"},"content":"                case \"todo\":","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"nknguyenhc"},"content":"                    return new ListCommand(isExcludingDone, date, ListCommand.Type.TODO);","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"nknguyenhc"},"content":"                case \"deadline\":","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"nknguyenhc"},"content":"                    return new ListCommand(isExcludingDone, date, ListCommand.Type.DEADLINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"nknguyenhc"},"content":"                case \"event\":","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"nknguyenhc"},"content":"                    return new ListCommand(isExcludingDone, date, ListCommand.Type.EVENT);","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"nknguyenhc"},"content":"                default:","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"nknguyenhc"},"content":"                    return new ListCommand(isExcludingDone, date, ListCommand.Type.DEFAULT);","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"nknguyenhc"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"nknguyenhc"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"nknguyenhc"},"content":"                return new ListCommand(false, null, ListCommand.Type.DEFAULT);","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"nknguyenhc"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"nknguyenhc"},"content":"        // mark as done","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"nknguyenhc"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"nknguyenhc"},"content":"            index \u003d Parser.getTaskIndexFromCommand(commandArgs);","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"nknguyenhc"},"content":"            return new MarkCommand(true, index);","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"nknguyenhc"},"content":"        // mark as not done","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"nknguyenhc"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"nknguyenhc"},"content":"            index \u003d Parser.getTaskIndexFromCommand(commandArgs);","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"nknguyenhc"},"content":"            return new MarkCommand(false, index);","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"nknguyenhc"},"content":"        // add to-do","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"nknguyenhc"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"nknguyenhc"},"content":"            if (commandArgs.length !\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"nknguyenhc"},"content":"                throw new ParseError(\"no to-do task provided\");","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"nknguyenhc"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"nknguyenhc"},"content":"            if (commandArgs[1].equals(\"\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"nknguyenhc"},"content":"                throw new ParseError(\"empty to-do task\");","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"nknguyenhc"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"nknguyenhc"},"content":"            return new AddCommand(new ToDo(commandArgs[1]));","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"nknguyenhc"},"content":"        // add event","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"nknguyenhc"},"content":"        case \"event\":","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"nknguyenhc"},"content":"            // number of arguments","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"nknguyenhc"},"content":"            if (commandArgs.length !\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"nknguyenhc"},"content":"                throw new ParseError(\"no event provided\");","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"nknguyenhc"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"nknguyenhc"},"content":"            // /from keyword","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"nknguyenhc"},"content":"            String[] separateByFrom \u003d commandArgs[1].split(\" /from \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"nknguyenhc"},"content":"            // no empty event","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"nknguyenhc"},"content":"            if (separateByFrom[0].equals(\"\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"nknguyenhc"},"content":"                throw new ParseError(\"empty event\");","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"nknguyenhc"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"nknguyenhc"},"content":"            // /from keyword must exist","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"nknguyenhc"},"content":"            if (separateByFrom.length !\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"nknguyenhc"},"content":"                throw new ParseError(\"keyword \u0027/from\u0027 not found\");","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"nknguyenhc"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"nknguyenhc"},"content":"            // /to keyword","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"nknguyenhc"},"content":"            String[] separateByTo \u003d separateByFrom[1].split(\" /to \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"nknguyenhc"},"content":"            // no empty start time","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"nknguyenhc"},"content":"            if (separateByTo[0].equals(\"\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"nknguyenhc"},"content":"                throw new ParseError(\"empty start time\");","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"nknguyenhc"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"nknguyenhc"},"content":"            // /to keyword must exist","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"nknguyenhc"},"content":"            if (separateByTo.length !\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"nknguyenhc"},"content":"                throw new ParseError(\"keyword \u0027/to\u0027 not found\");","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"nknguyenhc"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"nknguyenhc"},"content":"            // no empty end time","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"nknguyenhc"},"content":"            if (separateByTo[1].equals(\"\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"nknguyenhc"},"content":"                throw new ParseError(\"empty end time\");","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"nknguyenhc"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"nknguyenhc"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"nknguyenhc"},"content":"                LocalDateTime startTime \u003d DateTimeManager.inputToDate(separateByTo[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"nknguyenhc"},"content":"                LocalDateTime endTime \u003d DateTimeManager.inputToDate(separateByTo[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"nknguyenhc"},"content":"                return new AddCommand(new Event(separateByFrom[0], startTime, endTime));","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"nknguyenhc"},"content":"            } catch (DateTimeManager.DateParseException | DateTimeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"nknguyenhc"},"content":"                throw new ParseError(\"invalid datetime\");","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"nknguyenhc"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"nknguyenhc"},"content":"        // add deadline","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"nknguyenhc"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"nknguyenhc"},"content":"            // number of arguments","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"nknguyenhc"},"content":"            if (commandArgs.length !\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"nknguyenhc"},"content":"                throw new ParseError(\"no deadline found\");","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"nknguyenhc"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"nknguyenhc"},"content":"            String[] separateByBy \u003d commandArgs[1].split(\" /by \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"nknguyenhc"},"content":"            // /by keyword must exist","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"nknguyenhc"},"content":"            if (separateByBy.length !\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"nknguyenhc"},"content":"                throw new ParseError(\"keyword \u0027/by\u0027 not found\");","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"nknguyenhc"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":173,"author":{"gitId":"nknguyenhc"},"content":"            // no empty deadline","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"nknguyenhc"},"content":"            if (separateByBy[0].equals(\"\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"nknguyenhc"},"content":"                throw new ParseError(\"empty deadline task\");","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"nknguyenhc"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"nknguyenhc"},"content":"            // no empty end time","lastModifiedDate":"2023-08-31"},{"lineNumber":178,"author":{"gitId":"nknguyenhc"},"content":"            if (separateByBy[1].equals(\"\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"nknguyenhc"},"content":"                throw new ParseError(\"empty deadline time\");","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"nknguyenhc"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":181,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":182,"author":{"gitId":"nknguyenhc"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":183,"author":{"gitId":"nknguyenhc"},"content":"                LocalDateTime dateTime \u003d DateTimeManager.inputToDate(separateByBy[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":184,"author":{"gitId":"nknguyenhc"},"content":"                return new AddCommand(new Deadline(separateByBy[0], dateTime));","lastModifiedDate":"2023-08-31"},{"lineNumber":185,"author":{"gitId":"nknguyenhc"},"content":"            } catch (DateTimeManager.DateParseException | DateTimeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":186,"author":{"gitId":"nknguyenhc"},"content":"                throw new ParseError(\"invalid datetime\");","lastModifiedDate":"2023-08-31"},{"lineNumber":187,"author":{"gitId":"nknguyenhc"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":188,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":189,"author":{"gitId":"nknguyenhc"},"content":"        // delete task","lastModifiedDate":"2023-08-31"},{"lineNumber":190,"author":{"gitId":"nknguyenhc"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-31"},{"lineNumber":191,"author":{"gitId":"nknguyenhc"},"content":"            index \u003d getTaskIndexFromCommand(commandArgs);","lastModifiedDate":"2023-08-31"},{"lineNumber":192,"author":{"gitId":"nknguyenhc"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":193,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":194,"author":{"gitId":"nknguyenhc"},"content":"        // save data to hard disk","lastModifiedDate":"2023-08-31"},{"lineNumber":195,"author":{"gitId":"nknguyenhc"},"content":"        case \"save\":","lastModifiedDate":"2023-08-31"},{"lineNumber":196,"author":{"gitId":"nknguyenhc"},"content":"            return new SaveCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":197,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":198,"author":{"gitId":"nknguyenhc"},"content":"        // find task containing given description","lastModifiedDate":"2023-08-31"},{"lineNumber":199,"author":{"gitId":"nknguyenhc"},"content":"        case \"find\":","lastModifiedDate":"2023-08-31"},{"lineNumber":200,"author":{"gitId":"nknguyenhc"},"content":"            String query \u003d commandArgs[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":201,"author":{"gitId":"nknguyenhc"},"content":"            return new FindCommand(query);","lastModifiedDate":"2023-08-31"},{"lineNumber":202,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":203,"author":{"gitId":"nknguyenhc"},"content":"        // anything else","lastModifiedDate":"2023-08-31"},{"lineNumber":204,"author":{"gitId":"nknguyenhc"},"content":"        default:","lastModifiedDate":"2023-08-31"},{"lineNumber":205,"author":{"gitId":"nknguyenhc"},"content":"            return new EchoCommand(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":206,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":207,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":208,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":209,"author":{"gitId":"nknguyenhc"},"content":"    private static int getTaskIndexFromCommand(String[] commandArgs) throws ParseError {","lastModifiedDate":"2023-08-31"},{"lineNumber":210,"author":{"gitId":"nknguyenhc"},"content":"        // check for number of arguments","lastModifiedDate":"2023-08-31"},{"lineNumber":211,"author":{"gitId":"nknguyenhc"},"content":"        if (commandArgs.length !\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":212,"author":{"gitId":"nknguyenhc"},"content":"            throw new ParseError(\"you have provided wrong number of arguments!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":213,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":214,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":215,"author":{"gitId":"nknguyenhc"},"content":"        // check if second argument is positive integer","lastModifiedDate":"2023-08-31"},{"lineNumber":216,"author":{"gitId":"nknguyenhc"},"content":"        String indexString \u003d commandArgs[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":217,"author":{"gitId":"nknguyenhc"},"content":"        if (indexString.matches(\"0+\") || !indexString.matches(\"\\\\d+\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":218,"author":{"gitId":"nknguyenhc"},"content":"            throw new ParseError(\"you need to provide a positive integer!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":219,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":220,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":221,"author":{"gitId":"nknguyenhc"},"content":"        return Integer.parseInt(indexString) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":222,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":223,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"nknguyenhc":223}},{"path":"src/main/java/duke/parse/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package duke.parse.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import duke.Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":" * Represents a command to add a task.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"public class AddCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"    private Task task;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"     * Instantiates a command to add the given task","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"     * @param task the task to add","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"     * Commands the bot to add the task to its list.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"     * @param bot the bot to add the task","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"     * @return true, as it allows the user to continue the programme","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"    public boolean execute(Duke bot) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"        bot.addTaskToList(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"        return true;","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"     * Checks whether this command is the same as another, for testing purposes.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"     * It is equal if the tasks to be added are the same.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"     * @param another the object to compare against","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"     * @return whether this command is the same as another","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"    public boolean equals(Object another) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"        if (another instanceof AddCommand) {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"            AddCommand anotherAdd \u003d (AddCommand) another;","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"            return this.task.equals(anotherAdd.task);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"nknguyenhc":45}},{"path":"src/main/java/duke/parse/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package duke.parse.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import duke.Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":" * Represents a parsed command from the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":" * The base class for a command, to be implemented by other classes.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"public interface Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"     * Executes the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"     * @return whether the execution allows the program to continue,","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"     *     true if it can, false means the program must exit","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"    boolean execute(Duke bot);","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"nknguyenhc":16}},{"path":"src/main/java/duke/parse/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package duke.parse.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import duke.Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":" * Represents a command to delete the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"    private int taskIndex;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"     * Instantiates the command to delete the task with the given index.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"     * @param taskIndex the index of the task to be deleted","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"     * Commands the bot to delete the task with the given index.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"     * @param bot the bot to execute the command","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"     * @return true, as this allows the user to continue the programme","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"    public boolean execute(Duke bot) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"        bot.deleteTask(this.taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"        return true;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"     * Checks whether this delete command is the same as another command, for testing purposes.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"     * It is equal if the tasks to be deleted are the same.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"     * @param another the object to compare with","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"     * @return whether this delete command is the same as another","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"    public boolean equals(Object another) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"        if (another instanceof DeleteCommand) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"            DeleteCommand anotherDelete \u003d (DeleteCommand) another;","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"            return this.taskIndex \u003d\u003d anotherDelete.taskIndex;","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"nknguyenhc":44}},{"path":"src/main/java/duke/parse/command/EchoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package duke.parse.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import duke.Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":" * Represents a command to echo the input from user back to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"public class EchoCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"    private String command;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"     * Instantiates the echo command with the given input from the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"     * @param command the input from the user","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"    public EchoCommand(String command) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"     * Commands the bot to echo the input back to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"     * @param bot the bot to execute the command","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"     * @return true, as it allows the user to continue the programme","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"    public boolean execute(Duke bot) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"        bot.echo(this.command);","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"        return true;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"     * Checks whether this echo command is the same as another command, for testing purposes.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"     * They are the same if the input from user is the same.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"     * @param another","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"     * @return","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"    public boolean equals(Object another) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"        if (another instanceof EchoCommand) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"            EchoCommand anotherEcho \u003d (EchoCommand) another;","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"            return this.command.equals(anotherEcho.command);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"nknguyenhc":44}},{"path":"src/main/java/duke/parse/command/EmptyCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package duke.parse.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import duke.Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":" * Represents an empty command.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"public class EmptyCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"     * Instantiates an empty command.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"    public EmptyCommand() {}","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"     * Does nothing","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"     * @param bot the bot to execute the command","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"     * @return true, as the user can continue with the programme afterwards","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"    public boolean execute(Duke bot) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"        return true;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"     * Checks if this empty command is the same as another.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"     * They are the same as long as both are empty commands.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"     * @param another the object to compare with","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"     * @return true, as this allows the user to continue with the programme","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"    public boolean equals(Object another) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"        return another instanceof EmptyCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"nknguyenhc":34}},{"path":"src/main/java/duke/parse/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package duke.parse.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import duke.Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":" * Represents an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"public class ExitCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"     * Instantiates an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"    public ExitCommand() {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"     * Commands the bot to exit the interaction.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"     * @param bot the bot to execute the command","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"     * @return false, as this means the user will be exited out of the programme","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"    public boolean execute(Duke bot) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"        bot.exit();","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"     * Checks whether this exit command is the same as another, for testing purposes.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"     * They are the same as long as the other object is also an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"     * @param another the object to compare with","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"     * @return whether this exit command is the same as another","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"    public boolean equals(Object another) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"        return another instanceof ExitCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"nknguyenhc":36}},{"path":"src/main/java/duke/parse/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package duke.parse.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import duke.Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":" * Represents a find command.","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":" * Contains the search parameter given by the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"    private String query;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"     * Instantiates a find command with the given query.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"     * @param query the search parameter","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"    public FindCommand(String query) {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"        this.query \u003d query;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"     * Commands the bot to find the tasks matching the query.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"     * @param bot the bot to execute the command","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"     * @return true, as it allows the user to continue the programme","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"    public boolean execute(Duke bot) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"        bot.find(this.query);","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"        return true;","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"nknguyenhc":30}},{"path":"src/main/java/duke/parse/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package duke.parse.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":" * Represents a list command.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":" * Contains the filters as requested by user.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":" * Filters include: whether to exclude tasks done, date to match tasks, and type of task.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"    private boolean isExcludingDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"    private LocalDate date;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"    private Type type;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"     * Denotes the type of task to be listed.","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"     * If there is no filter on type of task, the type indicated should be DEFAULT.","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"    public enum Type {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"        TODO,","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"        DEADLINE,","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"        EVENT,","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"        DEFAULT,","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"     * Instantiates a list task with the given filter","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"     * @param isExcludingDone whether to exclude tasks already done","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"     * @param date the date to filter in deadlines before / events happening on,","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"     *             null if not filtering by date","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"     * @param type the type of task to include,","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"     *             DEFAULT if not filtering by task type","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"    public ListCommand(boolean isExcludingDone, LocalDate date, Type type) {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"        this.isExcludingDone \u003d isExcludingDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"     * Commands the bot to list out the task with the given filters.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"     * @param bot the bot to execute the command","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"     * @return true, as this allows the user to continue with the programme","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"    public boolean execute(Duke bot) {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"        switch (this.type) {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"        case TODO:","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"            bot.showTodos(this.isExcludingDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"        case DEADLINE:","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"            bot.showDeadlines(this.isExcludingDone, this.date);","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"        case EVENT:","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"            bot.showEvents(this.isExcludingDone, this.date);","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"        default:","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"            bot.showList(this.isExcludingDone, this.date);","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"        return true;","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"nknguyenhc"},"content":"     * Checks whether this list command is the same as another, for testing purposes.","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"     * True if both are list commands, and the filters are the same.","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"     * @param another the object to compare with","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"     * @return whether this list command is the same as another","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"    public boolean equals(Object another) {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"nknguyenhc"},"content":"        if (another instanceof ListCommand) {","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"nknguyenhc"},"content":"            ListCommand anotherList \u003d (ListCommand) another;","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"            return this.isExcludingDone \u003d\u003d anotherList.isExcludingDone","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"nknguyenhc"},"content":"                    \u0026\u0026 ((this.date \u003d\u003d null \u0026\u0026 anotherList.date \u003d\u003d null)","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"nknguyenhc"},"content":"                        || this.date.equals(anotherList.date))","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"nknguyenhc"},"content":"                    \u0026\u0026 this.type.equals(anotherList.type);","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"nknguyenhc"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"nknguyenhc":83}},{"path":"src/main/java/duke/parse/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package duke.parse.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import duke.Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":" * Represents a command to mark a task as done / not done.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"    private int index;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"     * Instantiates the mark command","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"     * @param isDone whether the target task should be mark done,","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"     *               true if it is, false if to be marked not done","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"     * @param index the index of the task in the task list","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"    public MarkCommand(boolean isDone, int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"     * Commands the bot to list out the tasks with the given filters","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"     * @param bot the bot to execute this command","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"     * @return true, as this allows the user to continue the programme","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"    public boolean execute(Duke bot) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"            bot.markTaskAsDone(this.index);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"            bot.markTaskAsNotDone(this.index);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"        return true;","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"     * Checks whether this mark command is the same as another, for testing purposes.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"     * They are the same if both are to mark the same task,","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"     * and both mark the task in the same way (done / not done).","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"     * @param another the object to compare against","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"     * @return whether this mark command is the same as another","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"    public boolean equals(Object another) {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"        if (another instanceof MarkCommand) {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"            MarkCommand anotherMark \u003d (MarkCommand) another;","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"            return this.isDone \u003d\u003d anotherMark.isDone","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"                    \u0026\u0026 this.index \u003d\u003d anotherMark.index;","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"nknguyenhc":54}},{"path":"src/main/java/duke/parse/command/SaveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package duke.parse.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import duke.Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":" * Represents a command to save data to disk.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"public class SaveCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"     * Instantiates a save command.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"    public SaveCommand() {}","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"     * Command the bot to save its current data to disk.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"     * @param bot the bot to execute the command","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"     * @return true, as it allows user to continue with the programme","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"    public boolean execute(Duke bot) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"        bot.saveData();","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"        return true;","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"     * Checks whether this save command is the same as another, for testing purposes.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"     * It is the same as long as the other is also a save command.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"     * @param another the object to compare with","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"     * @return whether this save command is the same as another","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"    public boolean equals(Object another) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"        return another instanceof SaveCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"nknguyenhc":35}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package duke.storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import duke.parse.DateTimeManager;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":" * Handles access to the storage, both read and write.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"     * Thrown when the file is found to be corrupted, and data cannot be read properly.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"    public class FileCorruptedException extends Exception {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"        public FileCorruptedException() {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"            super();","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"     * Thrown where there is an IO error.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"    public class FileIoException extends IOException {","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"        public FileIoException() {","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"            super();","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"    private String fileName;","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"     * Instantiates a storage that monitors a file with the given file name.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"     * @param fileName the file name to monitor","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"    public Storage(String fileName) {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"     * Reads data from disk and return a list of task recorded.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"     * @return the list of task in order","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"     * @throws FileCorruptedException when file is corrupted","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"     * @throws FileIoException when there is an IO error","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"    public ArrayList\u003cTask\u003e readFromDisk() throws FileCorruptedException, FileIoException {","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"        File f \u003d new File(this.fileName);","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"            ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"            Scanner fileScanner \u003d new Scanner(f);","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"            while (fileScanner.hasNext()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"                String[] line \u003d fileScanner.nextLine().split(\" \", 3);","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"                if (line.length \u003d\u003d 0 \u0026\u0026 !fileScanner.hasNext()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"                if (line.length !\u003d 3) {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"nknguyenhc"},"content":"                    throw new FileCorruptedException();","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"                Task task;","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"                switch (line[0]) {","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"                case \"T\":","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"                    task \u003d new ToDo(line[2]);","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"nknguyenhc"},"content":"                case \"D\":","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"nknguyenhc"},"content":"                    String[] split \u003d line[2].split(\" /by \", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"                    if (split.length !\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"nknguyenhc"},"content":"                        throw new FileCorruptedException();","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"nknguyenhc"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"nknguyenhc"},"content":"                    try {","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"nknguyenhc"},"content":"                        LocalDateTime dateTime \u003d DateTimeManager.inputToDate(split[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"nknguyenhc"},"content":"                        task \u003d new Deadline(split[0], dateTime);","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"nknguyenhc"},"content":"                    } catch (DateTimeManager.DateParseException | DateTimeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"nknguyenhc"},"content":"                        throw new FileCorruptedException();","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"nknguyenhc"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"nknguyenhc"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"nknguyenhc"},"content":"                case \"E\":","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"nknguyenhc"},"content":"                    String[] separateByFrom \u003d line[2].split(\" /from \", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"nknguyenhc"},"content":"                    if (separateByFrom.length !\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"nknguyenhc"},"content":"                        throw new FileCorruptedException();","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"nknguyenhc"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"nknguyenhc"},"content":"                    String[] separateByTo \u003d separateByFrom[1].split(\" /to \", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"nknguyenhc"},"content":"                    if (separateByTo.length !\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"nknguyenhc"},"content":"                        throw new FileCorruptedException();","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"nknguyenhc"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"nknguyenhc"},"content":"                    try {","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"nknguyenhc"},"content":"                        LocalDateTime startTime \u003d DateTimeManager.inputToDate(separateByTo[0]);","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"nknguyenhc"},"content":"                        LocalDateTime endTime \u003d DateTimeManager.inputToDate(separateByTo[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"nknguyenhc"},"content":"                        task \u003d new Event(separateByFrom[0], startTime, endTime);","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"nknguyenhc"},"content":"                    } catch (DateTimeManager.DateParseException | DateTimeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"nknguyenhc"},"content":"                        throw new FileCorruptedException();","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"nknguyenhc"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"nknguyenhc"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"nknguyenhc"},"content":"                default:","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"nknguyenhc"},"content":"                    throw new FileCorruptedException();","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"nknguyenhc"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"nknguyenhc"},"content":"                if (line[1].equals(\"1\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"nknguyenhc"},"content":"                    task.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"nknguyenhc"},"content":"                } else if (line[1].equals(\"0\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"nknguyenhc"},"content":"                    task.markAsNotDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"nknguyenhc"},"content":"                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"nknguyenhc"},"content":"                    throw new FileCorruptedException();","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"nknguyenhc"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"nknguyenhc"},"content":"                taskList.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"nknguyenhc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"nknguyenhc"},"content":"            fileScanner.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"nknguyenhc"},"content":"            return taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"nknguyenhc"},"content":"        } catch (FileNotFoundException fileError) {","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"nknguyenhc"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"nknguyenhc"},"content":"                f.createNewFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"nknguyenhc"},"content":"                return new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"nknguyenhc"},"content":"            } catch (IOException ioError) {","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"nknguyenhc"},"content":"                throw new FileIoException();","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"nknguyenhc"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"nknguyenhc"},"content":"     * Save data to disk","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"nknguyenhc"},"content":"     * @param data the data to save","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"nknguyenhc"},"content":"     * @throws FileIoException when there is an IO error","lastModifiedDate":"2023-09-05"},{"lineNumber":131,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"nknguyenhc"},"content":"    public void saveData(String data) throws FileIoException {","lastModifiedDate":"2023-09-05"},{"lineNumber":133,"author":{"gitId":"nknguyenhc"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"nknguyenhc"},"content":"            FileWriter writer \u003d new FileWriter(this.fileName);","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"nknguyenhc"},"content":"            writer.write(data);","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"nknguyenhc"},"content":"            writer.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"nknguyenhc"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"nknguyenhc"},"content":"            throw new FileIoException();","lastModifiedDate":"2023-09-05"},{"lineNumber":139,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"nknguyenhc":141}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import duke.parse.DateTimeManager;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":" * Represents a deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":" * A deadline contains an end time.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"     * Instantiates a deadline with the given content and the end time","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"     * @param name the content of the task","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"     * @param deadline the end time of the deadline","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"    public Deadline(String name, LocalDateTime deadline) {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"        super(name);","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"     * Data representation of the task, to be stored in the disk","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"     * @return data representation of the task to be stored in the disk","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"    public String data() {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"        return \"D \" + super.data() + \" /by \" + DateTimeManager.dateToStringData(this.deadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"     * Checks whether this deadline ends before or on the given date.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"     * @param date the datetime to check against","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"     * @return whether this deadline ends before or on the given date","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"    public boolean containsDate(LocalDate date) {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"        return this.deadline.toLocalDate().isBefore(date) || this.deadline.toLocalDate().equals(date);","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"     * String representation of the task, to be displayed in UI.","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"     * @return the string representation of the task to be displayed in UI","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"                + DateTimeManager.dateToDisplay(this.deadline) + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"     * Checks whether this deadline is the same as another task, for testing purposes.","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"     * It is the same if content is the same, and end time is the same.","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"     * @param another the object to compare with","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"     * @return whether this deadline is the same as another task","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"    public boolean equals(Object another) {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"        if (another instanceof Deadline) {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"            Deadline anotherDeadline \u003d (Deadline) another;","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"            return super.equals(anotherDeadline)","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"                    \u0026\u0026 this.deadline.equals(anotherDeadline.deadline);","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"nknguyenhc"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nknguyenhc":69}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import duke.parse.DateTimeManager;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":" * A class to represent an event.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":" * An event has a start time and an end time.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"    private LocalDateTime start;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"    private LocalDateTime end;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"     * Instantiates an event with the given content, start time and end time.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"     * @param name the content of the event","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"     * @param start the start time of the event","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"     * @param end the end time of the event","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"    public Event(String name, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"        super(name);","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"     * Data representation of the event, to be stored in the disk.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"     * @return data representation of the event to be stored in disk","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"    public String data() {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"        return \"E \" + super.data()","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"                + \" /from \" + DateTimeManager.dateToStringData(this.start)","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"                + \" /to \" + DateTimeManager.dateToStringData(this.end);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"     * Checks whether this event is happening on the given date.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"     * @param date the datetime to check against","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"     * @return whether the event is happening on the given date","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"    public boolean containsDate(LocalDate date) {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"        return (this.start.toLocalDate().isBefore(date) || this.start.toLocalDate().equals(date))","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"                \u0026\u0026 (this.end.toLocalDate().isAfter(date) || this.end.toLocalDate().equals(date));","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"     * String representation of this event, to be printed in UI.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"     * @return string representation of this event to be printed in UI","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"                + \" (from: \" + DateTimeManager.dateToDisplay(this.start)","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"                + \" to: \" + DateTimeManager.dateToDisplay(this.end) + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"     * Checks whether this event is the same as another task.","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"     * It is the same if it is the same event, with same content, start and end time.","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"     * @param another the object to compare with","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"     * @return whether this event is the same as another task","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"    public boolean equals(Object another) {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"        if (another instanceof Event) {","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"            Event anotherEvent \u003d (Event) another;","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"            return super.equals(another)","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"                    \u0026\u0026 this.start.equals(anotherEvent.start)","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"                    \u0026\u0026 this.end.equals(anotherEvent.end);","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"nknguyenhc"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nknguyenhc":77}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":" * Represent a task that the user requested to add.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":" * Three possible types of task: todo, deadline and event.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":" * This is a base class, to be inherited.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"    private String name;","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"     * Instantiates the task with the given name.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"     * @param name content of the task","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"     * Marks the task as having been done.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"     * Marks the task as having not been done.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"     * Checks whether the task has been done.","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"     * @return whether the task has been done","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"     * Converts the current task to a string that can be stored in the disk.","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"     * @return the string to be stored in disk","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"    public String data() {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"        return (this.isDone ? \"1 \" : \"0 \") + this.name;","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"     * Checks whether this task \"contains\" the date.","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"     * Definition of \"contains\" to be decided by child classes.","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"     * @param dateTime the datetime to check against","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"     * @return whether this task contains the date","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"    public boolean containsDate(LocalDate dateTime) {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"     * Checks if this task content contains the input.","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"     * @param string the input to check against","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"     * @return whether this task content contains the input","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"nknguyenhc"},"content":"    public boolean containsString(String string) {","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"        return this.name.contains(string);","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"     * String representation of this task, to be printed in UI.","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"     * @return the string representation to be printed in UI","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"nknguyenhc"},"content":"        return \"[\" + (this.isDone ? \"X\" : \" \") + \"] \" + this.name;","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":79,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"nknguyenhc"},"content":"     * Checks whether this task is the same as another task, for testing purposes.","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"nknguyenhc"},"content":"     * @param another the object to compare with","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"nknguyenhc"},"content":"     * @return whether this task is the same as the given task","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"nknguyenhc"},"content":"    public boolean equals(Object another) {","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"nknguyenhc"},"content":"        if (another instanceof Task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"nknguyenhc"},"content":"            Task anotherTask \u003d (Task) another;","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"nknguyenhc"},"content":"            return this.name.equals(anotherTask.name)","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"nknguyenhc"},"content":"                    \u0026\u0026 this.isDone \u003d\u003d anotherTask.isDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"nknguyenhc"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"nknguyenhc":94}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":" * Represents and organises a list of task.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"     * Thrown if a function is trying to access a task index out of range.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"    public static class TaskIndexOutOfRange extends Exception {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"        private TaskIndexOutOfRange() {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"            super();","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"     * Instantiates the task list with no task.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"     * Creates a new empty task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"     * Instantiates the task list with the given task.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"     * @param taskList the task list to start with","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"     * Adds a task to the end of the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"     * @param task the task to add","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"     * Marks a task with the given index as done","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"     * @param index the task index to mark done","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"     * @return the task that has been marked done","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"     * @throws TaskIndexOutOfRange if the task index given is out of range","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"    public Task markTaskAsDone(int index) throws TaskIndexOutOfRange {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"            this.taskList.get(index).markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"            return this.taskList.get(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"            throw new TaskIndexOutOfRange();","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"     * Marks a task with the given index as not done.","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"     * @param index the task index to mark as not done","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"     * @return the task that has been marked not done","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"     * @throws TaskIndexOutOfRange if the task index given is out of range","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"    public Task markTaskAsNotDone(int index) throws TaskIndexOutOfRange {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"            this.taskList.get(index).markAsNotDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"            return this.taskList.get(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"            throw new TaskIndexOutOfRange();","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"nknguyenhc"},"content":"     * Deletes a task with the given index.","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"nknguyenhc"},"content":"     * @param index the task index to delete","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"nknguyenhc"},"content":"     * @return the task that has been deleted","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"nknguyenhc"},"content":"     * @throws TaskIndexOutOfRange if the task index given is out of range","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"nknguyenhc"},"content":"    public Task deleteTask(int index) throws TaskIndexOutOfRange {","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"nknguyenhc"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"nknguyenhc"},"content":"            Task task \u003d this.taskList.get(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"nknguyenhc"},"content":"            this.taskList.remove(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"nknguyenhc"},"content":"            return task;","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"nknguyenhc"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"nknguyenhc"},"content":"            throw new TaskIndexOutOfRange();","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"nknguyenhc"},"content":"     * Displays the list of task with the given filters.","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"nknguyenhc"},"content":"     * @param taskList the task list to display","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"nknguyenhc"},"content":"     * @param isExcludingDone whether to exclude tasks already done","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"nknguyenhc"},"content":"     * @param date the date to include deadlines before and events happening on,","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"nknguyenhc"},"content":"     *             null if to not filter by date","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"nknguyenhc"},"content":"    private static void displayTasks(ArrayList\u003cTask\u003e taskList, boolean isExcludingDone, LocalDate date) {","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"nknguyenhc"},"content":"        if (isExcludingDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"nknguyenhc"},"content":"            taskList.removeIf(Task::isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"nknguyenhc"},"content":"        if (date !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"nknguyenhc"},"content":"            taskList.removeIf(task -\u003e !task.containsDate(date));","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"nknguyenhc"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"nknguyenhc"},"content":"            System.out.println((i + 1) + \". \" + taskList.get(i));","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"nknguyenhc"},"content":"     * Displays tasks with the given filters.","lastModifiedDate":"2023-09-05"},{"lineNumber":114,"author":{"gitId":"nknguyenhc"},"content":"     * Assume that there is no filtering by task type (todo/deadline/event)","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"nknguyenhc"},"content":"     * @param isExcludingDone whether to exclude tasks already done","lastModifiedDate":"2023-09-05"},{"lineNumber":116,"author":{"gitId":"nknguyenhc"},"content":"     * @param date the date to filter in deadlines before and events happening on","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"nknguyenhc"},"content":"    public void displayTasks(boolean isExcludingDone, LocalDate date) {","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"nknguyenhc"},"content":"        ArrayList\u003cTask\u003e taskList \u003d (ArrayList\u003cTask\u003e) this.taskList.clone();","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"nknguyenhc"},"content":"        TaskList.displayTasks(taskList, isExcludingDone, date);","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"nknguyenhc"},"content":"     * Displays to-do tasks with the given filters.","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"nknguyenhc"},"content":"     * @param isExcludingDone whether to filter out tasks already done","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"nknguyenhc"},"content":"    public void displayTodos(boolean isExcludingDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"nknguyenhc"},"content":"        ArrayList\u003cTask\u003e taskList \u003d (ArrayList\u003cTask\u003e) this.taskList.clone();","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"nknguyenhc"},"content":"        taskList.removeIf(task -\u003e !(task instanceof ToDo));","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"nknguyenhc"},"content":"        TaskList.displayTasks(taskList, isExcludingDone, null);","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"nknguyenhc"},"content":"     * Displays deadlines with the given filters.","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"nknguyenhc"},"content":"     * @param isExcludingDone whether to filter out tasks already done","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"nknguyenhc"},"content":"     * @param date the date to choose deadlines with end time before,","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"nknguyenhc"},"content":"     *             null if to not filter by date","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"nknguyenhc"},"content":"    public void displayDeadlines(boolean isExcludingDone, LocalDate date) {","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"nknguyenhc"},"content":"        ArrayList\u003cTask\u003e taskList \u003d (ArrayList\u003cTask\u003e) this.taskList.clone();","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"nknguyenhc"},"content":"        taskList.removeIf(task -\u003e !(task instanceof Deadline));","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"nknguyenhc"},"content":"        TaskList.displayTasks(taskList, isExcludingDone, date);","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"nknguyenhc"},"content":"     * Displays events with the given filters.","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"nknguyenhc"},"content":"     * @param isExcludingDone whether to filter out tasks already done","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"nknguyenhc"},"content":"     * @param date the date to choose events happening on,","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"nknguyenhc"},"content":"     *             null if to not filter by date","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"nknguyenhc"},"content":"    public void displayEvents(boolean isExcludingDone, LocalDate date) {","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"nknguyenhc"},"content":"        ArrayList\u003cTask\u003e taskList \u003d (ArrayList\u003cTask\u003e) this.taskList.clone();","lastModifiedDate":"2023-08-30"},{"lineNumber":153,"author":{"gitId":"nknguyenhc"},"content":"        taskList.removeIf(task -\u003e !(task instanceof Event));","lastModifiedDate":"2023-08-30"},{"lineNumber":154,"author":{"gitId":"nknguyenhc"},"content":"        TaskList.displayTasks(taskList, isExcludingDone, date);","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"nknguyenhc"},"content":"     * Returns the number of tasks in this task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"nknguyenhc"},"content":"     * @return number of tasks in this task list","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"nknguyenhc"},"content":"    public int size() {","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"nknguyenhc"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"nknguyenhc"},"content":"     * Save data to a given storage,","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"nknguyenhc"},"content":"     * by first converting this list of task to storage-readable form.","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"nknguyenhc"},"content":"     * @param storage the storage to save data to","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"nknguyenhc"},"content":"     * @throws Storage.FileIoException if there is an IO error","lastModifiedDate":"2023-09-05"},{"lineNumber":170,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"nknguyenhc"},"content":"    public void saveData(Storage storage) throws Storage.FileIoException {","lastModifiedDate":"2023-09-05"},{"lineNumber":172,"author":{"gitId":"nknguyenhc"},"content":"        StringBuilder data \u003d new StringBuilder();","lastModifiedDate":"2023-08-30"},{"lineNumber":173,"author":{"gitId":"nknguyenhc"},"content":"        for (Task task: this.taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":174,"author":{"gitId":"nknguyenhc"},"content":"            data.append(task.data()).append(\"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":175,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":176,"author":{"gitId":"nknguyenhc"},"content":"        storage.saveData(data.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":177,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":178,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"nknguyenhc"},"content":"     * Display the tasks that match the given input.","lastModifiedDate":"2023-08-31"},{"lineNumber":181,"author":{"gitId":"nknguyenhc"},"content":"     * @param input the search parameter","lastModifiedDate":"2023-08-31"},{"lineNumber":182,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":183,"author":{"gitId":"nknguyenhc"},"content":"    public void showResults(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":184,"author":{"gitId":"nknguyenhc"},"content":"        ArrayList\u003cTask\u003e list \u003d (ArrayList\u003cTask\u003e) this.taskList.clone();","lastModifiedDate":"2023-08-31"},{"lineNumber":185,"author":{"gitId":"nknguyenhc"},"content":"        list.removeIf(task -\u003e !task.containsString(input));","lastModifiedDate":"2023-08-31"},{"lineNumber":186,"author":{"gitId":"nknguyenhc"},"content":"        TaskList.displayTasks(list, false, null);","lastModifiedDate":"2023-08-31"},{"lineNumber":187,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":188,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"nknguyenhc":188}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":" * Represent a to-do task.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":" * A to-do task does not have a start or end time.","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"     * Instantiates the to-do task with the given content.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"     * @param name the content of the task","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"    public ToDo(String name) {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"        super(name);","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"     * Data representation of this to-do task, to be stored in disk.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"     * @return the string representation of this task in disk","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"    public String data() {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"        return \"T \" + super.data();","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"     * String representation of this to-do task to be printed in UI.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"     * @return the string representation of this task to be printed in UI","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"     * Checks whether this to-do task is the same as another task, for testing purposes.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"     * @param another the object to compare with","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"     * @return whether this to-do task is the same as the given other task","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"    public boolean equals(Object another) {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"        if (another instanceof ToDo) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"            return super.equals(another);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nknguyenhc":46}},{"path":"src/main/java/duke/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package duke.ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import duke.parse.DateTimeManager;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":" * Deals with standard input and output.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":" * Prints out the output and takes in input as requested.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"public class UI {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"    private static final String HORIZONTAL_LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"    private final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"    private final String errorPrepend;","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"    private final String errorAppend;","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"     * Instantiates a UI, with a string to prepend and a string to append every error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"     * @param errorPrepend the string to prepend every error message","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"     * @param errorAppend the string to append every error message","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"    public UI(String errorPrepend, String errorAppend) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"        this.errorPrepend \u003d errorPrepend;","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"        this.errorAppend \u003d errorAppend;","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"     * Invoked at the start of the interaction, to greet the user,","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"     * after data has been loaded / error has been handled.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"     * @param name the name of the bot","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"    public void start(String name) {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"        System.out.println(UI.HORIZONTAL_LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"        System.out.print(\"Hello from \");","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"        System.out.println(name);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"     * Invoked when data is being loaded.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"    public void notifyDataLoading() {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"        System.out.println(UI.HORIZONTAL_LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"        System.out.println(\"Loading data from hard disk ...\");","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"     * Invoked when data has been loaded.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"    public void notifyDataLoaded() {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"        System.out.println(\"Done loading.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"     * Invoked when there is an IO error upon loading","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"    public void notifyLoadingIoError() {","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"        System.out.println(\"Quack, an error has occurred while trying to save data to hard disk.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"        System.out.println(\"Starting with an empty task list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"     * Notifies that file is corrupted and cannot be loaded,","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"nknguyenhc"},"content":"     * and ask the user on the course of action to take.","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"     * @return whether the user has decided to exit the program.","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"    public boolean handleFileCorrupted() {","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"        System.out.println(\"Quack, memory was found to be corrupted!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"        System.out.println(\"What do you wish to do?\");","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"        System.out.println(\"1. Quit, let me restore the data manually\");","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"nknguyenhc"},"content":"        System.out.println(\"2. Continue with an empty task list\");","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"        while (true) {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"nknguyenhc"},"content":"            String response \u003d this.takeInput(\"Please indicate your option (1/2): \");","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"nknguyenhc"},"content":"            switch (response) {","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"nknguyenhc"},"content":"            case \"1\":","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"nknguyenhc"},"content":"                this.exit();","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"nknguyenhc"},"content":"                return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"nknguyenhc"},"content":"            case \"2\":","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"nknguyenhc"},"content":"                return true;","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"nknguyenhc"},"content":"            default:","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"nknguyenhc"},"content":"                System.out.print(\"Quack, I do not understand your option, please indicate again (1/2): \");","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"nknguyenhc"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"nknguyenhc"},"content":"     * Takes input from the user","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"nknguyenhc"},"content":"     * @return the input from the user","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"nknguyenhc"},"content":"    public String takeInput(String prompt) {","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"nknguyenhc"},"content":"        System.out.println(UI.HORIZONTAL_LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"nknguyenhc"},"content":"        System.out.print(prompt);","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"nknguyenhc"},"content":"        String input \u003d this.scanner.nextLine();","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"nknguyenhc"},"content":"        System.out.println(UI.HORIZONTAL_LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"nknguyenhc"},"content":"        return input;","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"nknguyenhc"},"content":"     * Invoked at the end of the programme, to leave an exit message to user.","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"nknguyenhc"},"content":"    public void exit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"nknguyenhc"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"nknguyenhc"},"content":"        System.out.println(UI.HORIZONTAL_LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"nknguyenhc"},"content":"        this.scanner.close();","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"nknguyenhc"},"content":"     * Notifies user of a user-input error.","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"nknguyenhc"},"content":"    public void notifyError(String message) {","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"nknguyenhc"},"content":"        System.out.println(this.errorPrepend + message + this.errorAppend);","lastModifiedDate":"2023-09-05"},{"lineNumber":116,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"nknguyenhc"},"content":"     * Notifies user that a task has been marked done","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"nknguyenhc"},"content":"     * @param task the task to notify","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"nknguyenhc"},"content":"    public void notifyMarkDone(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"nknguyenhc"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"nknguyenhc"},"content":"        System.out.println(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"nknguyenhc"},"content":"     * Notifies user that a task has been marked not done","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"nknguyenhc"},"content":"     * @param task the task to notify","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"nknguyenhc"},"content":"    public void notifyMarkNotDone(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"nknguyenhc"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"nknguyenhc"},"content":"        System.out.println(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"nknguyenhc"},"content":"     * Notifies user that a task has been removed","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"nknguyenhc"},"content":"     * @param task the task removed","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"nknguyenhc"},"content":"    public void notifyRemoved(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"nknguyenhc"},"content":"        System.out.println(\"Noted, I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"nknguyenhc"},"content":"        System.out.println(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":146,"author":{"gitId":"nknguyenhc"},"content":"     * Denotes the type of task to be indicated.","lastModifiedDate":"2023-09-05"},{"lineNumber":147,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":148,"author":{"gitId":"nknguyenhc"},"content":"    public enum Type {","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"nknguyenhc"},"content":"        TODO,","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"nknguyenhc"},"content":"        DEADLINE,","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"nknguyenhc"},"content":"        EVENT,","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"nknguyenhc"},"content":"        DEFAULT","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"nknguyenhc"},"content":"     * Notifies that a list of task is going to be displayed.","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"nknguyenhc"},"content":"     * Does not display the tasks itself.","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"nknguyenhc"},"content":"     * @param type type of task (todo/deadline/event)","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"nknguyenhc"},"content":"     * @param isExcludingDone whether to exclude tasks already done","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"nknguyenhc"},"content":"     * @param date the date before which to display deadlines before or events happening on,","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"nknguyenhc"},"content":"     *             null if not to filter by date","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"nknguyenhc"},"content":"    public void notifyList(Type type, boolean isExcludingDone, LocalDate date) {","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"nknguyenhc"},"content":"        String typeString;","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"nknguyenhc"},"content":"        switch (type) {","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"nknguyenhc"},"content":"        case TODO:","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"nknguyenhc"},"content":"            typeString \u003d \"to-do tasks\";","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"nknguyenhc"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"nknguyenhc"},"content":"        case DEADLINE:","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"nknguyenhc"},"content":"            typeString \u003d \"deadlines\";","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"nknguyenhc"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"nknguyenhc"},"content":"        case EVENT:","lastModifiedDate":"2023-08-31"},{"lineNumber":173,"author":{"gitId":"nknguyenhc"},"content":"            typeString \u003d \"events\";","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"nknguyenhc"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"nknguyenhc"},"content":"        default:","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"nknguyenhc"},"content":"            typeString \u003d \"tasks\";","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"nknguyenhc"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":178,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"nknguyenhc"},"content":"        System.out.println(","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"nknguyenhc"},"content":"                \"Alright, here is your list of \"","lastModifiedDate":"2023-08-31"},{"lineNumber":181,"author":{"gitId":"nknguyenhc"},"content":"                + typeString","lastModifiedDate":"2023-08-31"},{"lineNumber":182,"author":{"gitId":"nknguyenhc"},"content":"                + (isExcludingDone ? \" not done\" : \"\")","lastModifiedDate":"2023-08-31"},{"lineNumber":183,"author":{"gitId":"nknguyenhc"},"content":"                + (date !\u003d null","lastModifiedDate":"2023-08-31"},{"lineNumber":184,"author":{"gitId":"nknguyenhc"},"content":"                        ? (type \u003d\u003d Type.DEADLINE","lastModifiedDate":"2023-08-31"},{"lineNumber":185,"author":{"gitId":"nknguyenhc"},"content":"                            ? \" before \"","lastModifiedDate":"2023-08-31"},{"lineNumber":186,"author":{"gitId":"nknguyenhc"},"content":"                            : type \u003d\u003d Type.EVENT","lastModifiedDate":"2023-08-31"},{"lineNumber":187,"author":{"gitId":"nknguyenhc"},"content":"                            ? \" happening on \"","lastModifiedDate":"2023-08-31"},{"lineNumber":188,"author":{"gitId":"nknguyenhc"},"content":"                            : \" for \"","lastModifiedDate":"2023-08-31"},{"lineNumber":189,"author":{"gitId":"nknguyenhc"},"content":"                        ) + DateTimeManager.dateToDisplay(date)","lastModifiedDate":"2023-08-31"},{"lineNumber":190,"author":{"gitId":"nknguyenhc"},"content":"                        : \"\"","lastModifiedDate":"2023-08-31"},{"lineNumber":191,"author":{"gitId":"nknguyenhc"},"content":"                ) + \":\"","lastModifiedDate":"2023-08-31"},{"lineNumber":192,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-08-31"},{"lineNumber":193,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":194,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":195,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":196,"author":{"gitId":"nknguyenhc"},"content":"     * Notifies the user that a task has been added.","lastModifiedDate":"2023-08-31"},{"lineNumber":197,"author":{"gitId":"nknguyenhc"},"content":"     * @param task the task added","lastModifiedDate":"2023-08-31"},{"lineNumber":198,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":199,"author":{"gitId":"nknguyenhc"},"content":"    public void notifyAdded(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":200,"author":{"gitId":"nknguyenhc"},"content":"        System.out.println(\"Got it, I\u0027ve added this task to the list:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":201,"author":{"gitId":"nknguyenhc"},"content":"        System.out.println(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":202,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":203,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":204,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":205,"author":{"gitId":"nknguyenhc"},"content":"     * Echoes an input back to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":206,"author":{"gitId":"nknguyenhc"},"content":"     * @param input the input from the user","lastModifiedDate":"2023-08-31"},{"lineNumber":207,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":208,"author":{"gitId":"nknguyenhc"},"content":"    public void echo(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":209,"author":{"gitId":"nknguyenhc"},"content":"        if (input.equals(\"quack\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":210,"author":{"gitId":"nknguyenhc"},"content":"            System.out.println(\"Quack quack quack\");","lastModifiedDate":"2023-08-31"},{"lineNumber":211,"author":{"gitId":"nknguyenhc"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":212,"author":{"gitId":"nknguyenhc"},"content":"            System.out.println(\"Quack, what do you mean when you say \" + input);","lastModifiedDate":"2023-08-31"},{"lineNumber":213,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":214,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":215,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":216,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":217,"author":{"gitId":"nknguyenhc"},"content":"     * Notifies the user that data is in the process of being saved to disk.","lastModifiedDate":"2023-08-31"},{"lineNumber":218,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":219,"author":{"gitId":"nknguyenhc"},"content":"    public void notifyDataSaving() {","lastModifiedDate":"2023-08-31"},{"lineNumber":220,"author":{"gitId":"nknguyenhc"},"content":"        System.out.println(\"Saving data ...\");","lastModifiedDate":"2023-08-31"},{"lineNumber":221,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":222,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":223,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":224,"author":{"gitId":"nknguyenhc"},"content":"     * Notifies the user that data has been saved to disk.","lastModifiedDate":"2023-08-31"},{"lineNumber":225,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":226,"author":{"gitId":"nknguyenhc"},"content":"    public void notifyDataSaved() {","lastModifiedDate":"2023-08-31"},{"lineNumber":227,"author":{"gitId":"nknguyenhc"},"content":"        System.out.println(\"Done saving\");","lastModifiedDate":"2023-08-31"},{"lineNumber":228,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":229,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":230,"author":{"gitId":"nknguyenhc"},"content":"    public void showTaskCount(int count) {","lastModifiedDate":"2023-08-31"},{"lineNumber":231,"author":{"gitId":"nknguyenhc"},"content":"        System.out.println(\"Now you have \" + count + \" in the list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":232,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":233,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":234,"author":{"gitId":"nknguyenhc"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":235,"author":{"gitId":"nknguyenhc"},"content":"     * Notify the user of the search result.","lastModifiedDate":"2023-08-31"},{"lineNumber":236,"author":{"gitId":"nknguyenhc"},"content":"     * @param input the search parameter","lastModifiedDate":"2023-08-31"},{"lineNumber":237,"author":{"gitId":"nknguyenhc"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":238,"author":{"gitId":"nknguyenhc"},"content":"    public void notifyFind(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":239,"author":{"gitId":"nknguyenhc"},"content":"        System.out.println(\"Here are the tasks that match \\\"\" + input + \"\\\"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":240,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":241,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"nknguyenhc":241}},{"path":"src/test/java/duke/parse/DateTimeManagerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package duke.parse;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"public class DateTimeManagerTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"    private void notifyError() {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"        fail(\"should not throw exception\");","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"    public void parseInputTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"            assertEquals(","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"                    LocalDateTime.of(","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"                            LocalDate.now(),","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"                            LocalTime.of(22, 13)","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"                    ),","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"                    DateTimeManager.inputToDate(\"today 22:13\")","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"            assertEquals(","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"                    LocalDateTime.of(","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"                            LocalDate.now(),","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"                            LocalTime.of(22, 13)","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"                    ),","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"                    DateTimeManager.inputToDate(\"today 10:13pm\")","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"            assertEquals(","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"                    LocalDateTime.of(","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"                            LocalDate.of(2023, 12, 20),","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"                            LocalTime.of(12, 13)","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"                    ),","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"                    DateTimeManager.inputToDate(\"20/12/2023 12:13pm\")","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"            assertThrows(","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"                    DateTimeManager.DateParseException.class, () -\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"                            DateTimeManager.inputToDate(\"today 13pm\")","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"            assertThrows(","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"                    DateTimeManager.DateParseException.class, () -\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"                            DateTimeManager.inputToDate(\"30/2/2024 10am\")","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"            assertThrows(","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"                    DateTimeManager.DateParseException.class, () -\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"                            DateTimeManager.inputToDate(\"10/2/2024 10:70am\")","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"        } catch (DateTimeManager.DateParseException | DateTimeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"            notifyError();","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"    public void parseDateTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"            assertEquals(","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"                    LocalDate.now(),","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"                    DateTimeManager.parseDate(\"today\")","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"nknguyenhc"},"content":"            assertEquals(","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"                    LocalDate.now().plusDays(1),","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"                    DateTimeManager.parseDate(\"tmr\")","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"            assertEquals(","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"                    LocalDate.of(2023, 9, 10),","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"                    DateTimeManager.parseDate(\"10/9/2023\")","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"nknguyenhc"},"content":"            assertEquals(","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"                    LocalDate.of(2023, 1, 1),","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"nknguyenhc"},"content":"                    DateTimeManager.parseDate(\"1/1/2023\")","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"nknguyenhc"},"content":"            assertThrows(","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"nknguyenhc"},"content":"                    DateTimeManager.DateParseException.class, () -\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"nknguyenhc"},"content":"                            DateTimeManager.parseDate(\"31/9/2023\")","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"nknguyenhc"},"content":"        } catch (DateTimeManager.DateParseException | DateTimeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"nknguyenhc"},"content":"            notifyError();","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"nknguyenhc"},"content":"    public void parseTimeTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"nknguyenhc"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"nknguyenhc"},"content":"            assertEquals(","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"nknguyenhc"},"content":"                    LocalTime.of(22, 0),","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"nknguyenhc"},"content":"                    DateTimeManager.parseTime(\"10pm\")","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"nknguyenhc"},"content":"            assertEquals(","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"nknguyenhc"},"content":"                    LocalTime.of(16, 33),","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"nknguyenhc"},"content":"                    DateTimeManager.parseTime(\"4:33pm\")","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"nknguyenhc"},"content":"            assertEquals(","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"nknguyenhc"},"content":"                    LocalTime.of(16, 33),","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"nknguyenhc"},"content":"                    DateTimeManager.parseTime(\"16:33\")","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"nknguyenhc"},"content":"            assertThrows(","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"nknguyenhc"},"content":"                    DateTimeManager.DateParseException.class, () -\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"nknguyenhc"},"content":"                            DateTimeManager.parseTime(\"24:13\")","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"nknguyenhc"},"content":"            assertThrows(","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"nknguyenhc"},"content":"                    DateTimeManager.DateParseException.class, () -\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"nknguyenhc"},"content":"                            DateTimeManager.parseTime(\"15:00pm\")","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"nknguyenhc"},"content":"        } catch (DateTimeManager.DateParseException | DateTimeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"nknguyenhc"},"content":"            notifyError();","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"nknguyenhc"},"content":"    public void dateToStringDataTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"nknguyenhc"},"content":"                \"12/9/2023 12:0\",","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"nknguyenhc"},"content":"                DateTimeManager.dateToStringData(LocalDateTime.of(2023, 9, 12, 12, 0))","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"nknguyenhc"},"content":"                \"12/9/2023 14:27\",","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"nknguyenhc"},"content":"                DateTimeManager.dateToStringData(LocalDateTime.of(2023, 9, 12, 14, 27))","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"nknguyenhc"},"content":"                \"1/10/2023 0:0\",","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"nknguyenhc"},"content":"                DateTimeManager.dateToStringData(LocalDateTime.of(2023, 10, 1, 0, 0))","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"nknguyenhc"},"content":"    public void dateDisplayTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"nknguyenhc"},"content":"                \"today 10:11am\",","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"nknguyenhc"},"content":"                DateTimeManager.dateToDisplay(","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"nknguyenhc"},"content":"                        LocalDateTime.of(","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"nknguyenhc"},"content":"                                LocalDate.now(),","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"nknguyenhc"},"content":"                                LocalTime.of(10, 11)","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"nknguyenhc"},"content":"                        )","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"nknguyenhc"},"content":"                )","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"nknguyenhc"},"content":"                \"tomorrow 12:13am\",","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"nknguyenhc"},"content":"                DateTimeManager.dateToDisplay(","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"nknguyenhc"},"content":"                        LocalDateTime.of(","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"nknguyenhc"},"content":"                                LocalDate.now(),","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"nknguyenhc"},"content":"                                LocalTime.of(0, 13)","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"nknguyenhc"},"content":"                        ).plusDays(1)","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"nknguyenhc"},"content":"                )","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"nknguyenhc"},"content":"                \"5/9/2023 12:07pm\",","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"nknguyenhc"},"content":"                DateTimeManager.dateToDisplay(","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"nknguyenhc"},"content":"                        LocalDateTime.of(2023, 9, 5, 12, 7)","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"nknguyenhc"},"content":"                )","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"nknguyenhc"},"content":"        assertEquals(","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"nknguyenhc"},"content":"                \"2/9/2023 02:00pm\",","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"nknguyenhc"},"content":"                DateTimeManager.dateToDisplay(","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"nknguyenhc"},"content":"                        LocalDateTime.of(2023, 9, 2, 14, 0)","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"nknguyenhc"},"content":"                )","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"nknguyenhc"},"content":"        );","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"nknguyenhc":165}},{"path":"src/test/java/duke/parse/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package duke.parse;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"import duke.parse.command.AddCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"import duke.parse.command.EchoCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"import duke.parse.command.EmptyCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"import duke.parse.command.ExitCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"import duke.parse.command.ListCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"import duke.parse.command.MarkCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"import duke.parse.command.SaveCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"    private void notifyError() {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"        fail(\"should not throw any error\");","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"    public void emptyTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"            assertEquals(new EmptyCommand(), Parser.parse(\"\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"        } catch (Parser.ParseError e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"            notifyError();","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"    public void exitTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"            assertEquals(new ExitCommand(), Parser.parse(\"exit\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"            assertEquals(new ExitCommand(), Parser.parse(\"bye\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"        } catch (Parser.ParseError e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"            notifyError();","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"    public void listTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"            assertEquals(","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"                    new ListCommand(false, null, ListCommand.Type.DEFAULT),","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"                    Parser.parse(\"list\")","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"            assertEquals(","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"                    new ListCommand(false, LocalDate.now(), ListCommand.Type.DEFAULT),","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"                    Parser.parse(\"list today\")","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"            assertEquals(","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"                    new ListCommand(true, null, ListCommand.Type.DEFAULT),","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"                    Parser.parse(\"list -d\")","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"            assertEquals(","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"                    new ListCommand(false, null, ListCommand.Type.TODO),","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"                    Parser.parse(\"list todo\")","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"nknguyenhc"},"content":"            assertEquals(","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"                    new ListCommand(true, null, ListCommand.Type.TODO),","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"                    Parser.parse(\"list todo -d\")","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"            assertEquals(","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"                    new ListCommand(true, LocalDate.now().plusDays(1), ListCommand.Type.DEADLINE),","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"                    Parser.parse(\"list deadline tmr -d\")","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"nknguyenhc"},"content":"            assertEquals(","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"                    new ListCommand(false, LocalDate.of(2023, 9, 5), ListCommand.Type.EVENT),","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"nknguyenhc"},"content":"                    Parser.parse(\"list event 5/9/2023\")","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"nknguyenhc"},"content":"            assertThrows(","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"nknguyenhc"},"content":"                    Parser.ParseError.class, () -\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"nknguyenhc"},"content":"                            Parser.parse(\"list event 31/9/2023\")","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"nknguyenhc"},"content":"            assertThrows(","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"nknguyenhc"},"content":"                    Parser.ParseError.class, () -\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"nknguyenhc"},"content":"                            Parser.parse(\"list event 12-12\")","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"nknguyenhc"},"content":"        } catch (Parser.ParseError e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"nknguyenhc"},"content":"            notifyError();","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"nknguyenhc"},"content":"    public void markTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"nknguyenhc"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"nknguyenhc"},"content":"            assertEquals(","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"nknguyenhc"},"content":"                    new MarkCommand(true, 1),","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"nknguyenhc"},"content":"                    Parser.parse(\"mark 2\")","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"nknguyenhc"},"content":"            assertEquals(","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"nknguyenhc"},"content":"                    new MarkCommand(true, 4),","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"nknguyenhc"},"content":"                    Parser.parse(\"mark 5\")","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"nknguyenhc"},"content":"            assertEquals(","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"nknguyenhc"},"content":"                    new MarkCommand(false, 3),","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"nknguyenhc"},"content":"                    Parser.parse(\"unmark 4\")","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"nknguyenhc"},"content":"            assertThrows(","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"nknguyenhc"},"content":"                    Parser.ParseError.class, () -\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"nknguyenhc"},"content":"                            Parser.parse(\"mark 0\")","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"nknguyenhc"},"content":"            assertThrows(","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"nknguyenhc"},"content":"                    Parser.ParseError.class, () -\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"nknguyenhc"},"content":"                            Parser.parse(\"unmark -1\")","lastModifiedDate":"2023-09-05"},{"lineNumber":114,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"nknguyenhc"},"content":"        } catch (Parser.ParseError e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"nknguyenhc"},"content":"            notifyError();","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"nknguyenhc"},"content":"    public void addTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"nknguyenhc"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"nknguyenhc"},"content":"            assertEquals(","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"nknguyenhc"},"content":"                    new AddCommand(new ToDo(\"do sth\")),","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"nknguyenhc"},"content":"                    Parser.parse(\"todo do sth\")","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"nknguyenhc"},"content":"            assertEquals(","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"nknguyenhc"},"content":"                    new AddCommand(new Deadline(","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"nknguyenhc"},"content":"                            \"do sth\",","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"nknguyenhc"},"content":"                            LocalDateTime.of(LocalDate.now(), LocalTime.of(22, 0))","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"nknguyenhc"},"content":"                    )),","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"nknguyenhc"},"content":"                    Parser.parse(\"deadline do sth /by today 10pm\")","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"nknguyenhc"},"content":"            assertEquals(","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"nknguyenhc"},"content":"                    new AddCommand(new Event(","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"nknguyenhc"},"content":"                            \"attend sth\",","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"nknguyenhc"},"content":"                            LocalDateTime.of(LocalDate.now(), LocalTime.of(10, 0)),","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"nknguyenhc"},"content":"                            LocalDateTime.of(2023, 9, 5, 21, 2)","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"nknguyenhc"},"content":"                    )),","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"nknguyenhc"},"content":"                    Parser.parse(\"event attend sth /from today 10am /to 5/9/2023 9:02pm\")","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"nknguyenhc"},"content":"            assertThrows(","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"nknguyenhc"},"content":"                    Parser.ParseError.class, () -\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":144,"author":{"gitId":"nknguyenhc"},"content":"                            Parser.parse(\"event /from today 10am /to tmr 9pm\")","lastModifiedDate":"2023-09-05"},{"lineNumber":145,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"nknguyenhc"},"content":"            assertThrows(","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"nknguyenhc"},"content":"                    Parser.ParseError.class, () -\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":148,"author":{"gitId":"nknguyenhc"},"content":"                            Parser.parse(\"event do sth /from today 19:70 /to tmr 10am\")","lastModifiedDate":"2023-09-05"},{"lineNumber":149,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"nknguyenhc"},"content":"        } catch (Parser.ParseError e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"nknguyenhc"},"content":"            notifyError();","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"nknguyenhc"},"content":"    public void saveTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"nknguyenhc"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"nknguyenhc"},"content":"            assertEquals(","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"nknguyenhc"},"content":"                    new SaveCommand(),","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"nknguyenhc"},"content":"                    Parser.parse(\"save\")","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"nknguyenhc"},"content":"        } catch (Parser.ParseError e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"nknguyenhc"},"content":"            notifyError();","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"nknguyenhc"},"content":"    public void echoTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"nknguyenhc"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"nknguyenhc"},"content":"            assertEquals(","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"nknguyenhc"},"content":"                    new EchoCommand(\"quack\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"nknguyenhc"},"content":"                    Parser.parse(\"quack\")","lastModifiedDate":"2023-08-31"},{"lineNumber":173,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"nknguyenhc"},"content":"            assertEquals(","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"nknguyenhc"},"content":"                    new EchoCommand(\"fevwnqbo\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"nknguyenhc"},"content":"                    Parser.parse(\"fevwnqbo\")","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":178,"author":{"gitId":"nknguyenhc"},"content":"        } catch (Parser.ParseError e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"nknguyenhc"},"content":"            notifyError();","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":181,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":182,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"nknguyenhc":182}},{"path":"src/test/java/duke/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"package duke.storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"public class StorageTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"    private void notifyError() {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"        fail(\"file should not be corrupted!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"    private void notifyIO() {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"        fail(\"IO error encountered\");","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"    private void writeBeforeTest(String fileName, String content) throws IOException {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"        FileWriter writer \u003d new FileWriter(fileName);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"        writer.write(content);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"        writer.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"    public void normalReadTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"            writeBeforeTest(","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"                    \"task-list.txt\",","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"                    \"T 0 task 1\" + \"\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"                    + \"D 1 task 2 /by 10/12/2023 15:0\" + \"\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"                    + \"E 0 task 3 /from 30/8/2023 0:30 /to 30/9/2023 12:12\"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"            ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"            ToDo todo \u003d new ToDo(\"task 1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"            Deadline deadline \u003d new Deadline(","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"                    \"task 2\",","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"                    LocalDateTime.of(2023, 12, 10, 15, 0)","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"            deadline.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"            Event event \u003d new Event(","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"                    \"task 3\",","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"                    LocalDateTime.of(2023, 8, 30, 0, 30),","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"                    LocalDateTime.of(2023, 9, 30, 12, 12)","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"            list.add(todo);","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"            list.add(deadline);","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"            list.add(event);","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"            assertEquals(","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"                    list,","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"                    new Storage(\"task-list.txt\").readFromDisk()","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"        } catch (Storage.FileCorruptedException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"            notifyError();","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"nknguyenhc"},"content":"            notifyIO();","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"    public void corruptedReadTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"nknguyenhc"},"content":"            writeBeforeTest(","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"nknguyenhc"},"content":"                    \"task-list.txt\",","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"                    \"fnewopvnqwpiniw bjweipgjqwpjp\"","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"nknguyenhc"},"content":"            assertThrows(","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"nknguyenhc"},"content":"                    Storage.FileCorruptedException.class, () -\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"nknguyenhc"},"content":"                            new Storage(\"task-list.txt\").readFromDisk()","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"nknguyenhc"},"content":"            writeBeforeTest(","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"nknguyenhc"},"content":"                    \"task-list.txt\",","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"nknguyenhc"},"content":"                    \"T t task 7\"","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"nknguyenhc"},"content":"            assertThrows(","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"nknguyenhc"},"content":"                    Storage.FileCorruptedException.class, () -\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"nknguyenhc"},"content":"                            new Storage(\"task-list.txt\").readFromDisk()","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"nknguyenhc"},"content":"            writeBeforeTest(","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"nknguyenhc"},"content":"                    \"task-list.txt\",","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"nknguyenhc"},"content":"                    \"D 0 no end time\"","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"nknguyenhc"},"content":"            assertThrows(","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"nknguyenhc"},"content":"                    Storage.FileCorruptedException.class, () -\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"nknguyenhc"},"content":"                            new Storage(\"task-list.txt\").readFromDisk()","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"nknguyenhc"},"content":"            );","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"nknguyenhc"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"nknguyenhc"},"content":"            notifyIO();","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"nknguyenhc"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"nknguyenhc"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"nknguyenhc"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"nknguyenhc":104}},{"path":"text-ui-test/expected/add-task-error.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"Loading data from hard disk ...","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"Done loading.","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"Hello from Quack-NKN","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"What can I do for you?","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"[T][ ] do task 1","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"Now you have 1 in the list.","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"Quack, keyword \u0027/from\u0027 not found. It must be present for me to mark the start time!","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"Quack, no empty event please!","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"Quack, no empty event please!","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"Quack, no empty start time please!","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"Quack, no empty end time please!","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"1. [T][ ] do task 1","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"Quack, keyword \u0027/by\u0027 not found.It must be present for me to mark the deadline time!","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"Quack, no empty deadline time please!","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"Quack, no empty deadline task please!","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"1. [T][ ] do task 1","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nknguyenhc":45}},{"path":"text-ui-test/expected/delete-task.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"Loading data from hard disk ...","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"Done loading.","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"Hello from Quack-NKN","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"What can I do for you?","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"[T][ ] do some stuff quack","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"Now you have 1 in the list.","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"[E][ ] hello (from: 8pm tday to: 8pm tmr)","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"Now you have 2 in the list.","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"[D][ ] finish some stuff (by: this Sunday)","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"Now you have 3 in the list.","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"1. [T][ ] do some stuff quack","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"2. [E][ ] hello (from: 8pm tday to: 8pm tmr)","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"3. [D][ ] finish some stuff (by: this Sunday)","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"Quack, the task number you provide does not exist!","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"1. [T][ ] do some stuff quack","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"2. [E][ ] hello (from: 8pm tday to: 8pm tmr)","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"3. [D][ ] finish some stuff (by: this Sunday)","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"Noted, I\u0027ve removed this task:","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"[T][ ] do some stuff quack","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"Now you have 2 in the list.","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"1. [E][ ] hello (from: 8pm tday to: 8pm tmr)","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"2. [D][ ] finish some stuff (by: this Sunday)","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"[D][X] finish some stuff (by: this Sunday)","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"Noted, I\u0027ve removed this task:","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"[D][X] finish some stuff (by: this Sunday)","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"Now you have 1 in the list.","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"1. [E][ ] hello (from: 8pm tday to: 8pm tmr)","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nknguyenhc":59}},{"path":"text-ui-test/expected/mark-as-done.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"Loading data from hard disk ...","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"Done loading.","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"Hello from Quack-NKN","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"What can I do for you?","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"[T][ ] do task 1","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"Now you have 1 in the list.","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"[T][ ] do task 2","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"Now you have 2 in the list.","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"1. [T][ ] do task 1","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"2. [T][ ] do task 2","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"[T][ ] task3","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"Now you have 3 in the list.","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"[T][X] do task 2","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"1. [T][ ] do task 1","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"2. [T][X] do task 2","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"3. [T][ ] task3","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"[T][X] task3","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"1. [T][ ] do task 1","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"2. [T][X] do task 2","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"3. [T][X] task3","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"[T][ ] do task 2","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"1. [T][ ] do task 1","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"2. [T][ ] do task 2","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"3. [T][X] task3","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"Quack, the task number you provide does not exist!","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"1. [T][ ] do task 1","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"2. [T][ ] do task 2","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"3. [T][X] task3","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"Quack, the task number you provide does not exist!","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"1. [T][ ] do task 1","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"nknguyenhc"},"content":"2. [T][ ] do task 2","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"3. [T][X] task3","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nknguyenhc":72}},{"path":"text-ui-test/expected/task-type.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"Loading data from hard disk ...","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"Done loading.","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"Hello from Quack-NKN","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"What can I do for you?","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"[T][ ] buy grocery","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"Now you have 1 in the list.","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"[E][ ] Orbital splashdown (from: tday 6pm to: tday 9pm)","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"Now you have 2 in the list.","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"[D][ ] finish this project (by: Thurs 2359)","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"Now you have 3 in the list.","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"[E][ ] GDG-workshop (from: tmr 7.30pm to: tmr 9.30pm)","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"Now you have 4 in the list.","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"1. [T][ ] buy grocery","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"2. [E][ ] Orbital splashdown (from: tday 6pm to: tday 9pm)","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"3. [D][ ] finish this project (by: Thurs 2359)","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"4. [E][ ] GDG-workshop (from: tmr 7.30pm to: tmr 9.30pm)","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":"Quack, the task number you provide does not exist!","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"[E][X] GDG-workshop (from: tmr 7.30pm to: tmr 9.30pm)","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"1. [T][ ] buy grocery","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"2. [E][ ] Orbital splashdown (from: tday 6pm to: tday 9pm)","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":"3. [D][ ] finish this project (by: Thurs 2359)","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"4. [E][X] GDG-workshop (from: tmr 7.30pm to: tmr 9.30pm)","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"Quack, keyword \u0027/by\u0027 not found.It must be present for me to mark the deadline time!","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":"[D][ ] CS2109S PS0 (by: 26 Aug)","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":"Now you have 5 in the list.","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"Quack, keyword \u0027/to\u0027 not found. It must be present after the \u0027/from\u0027 keyword for me to mark the end time!","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"Quack, keyword \u0027/to\u0027 not found. It must be present after the \u0027/from\u0027 keyword for me to mark the end time!","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"[E][ ] cchess training (from: 7pm Mon to: 9pm)","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"Now you have 6 in the list.","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"nknguyenhc"},"content":"1. [T][ ] buy grocery","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"2. [E][ ] Orbital splashdown (from: tday 6pm to: tday 9pm)","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"3. [D][ ] finish this project (by: Thurs 2359)","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"4. [E][X] GDG-workshop (from: tmr 7.30pm to: tmr 9.30pm)","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"5. [D][ ] CS2109S PS0 (by: 26 Aug)","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"6. [E][ ] cchess training (from: 7pm Mon to: 9pm)","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"nknguyenhc"},"content":"In: ____________________________________________________________","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"nknguyenhc"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"____________________________________________________________","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nknguyenhc":76}},{"path":"text-ui-test/input/add-task-error.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"todo do task 1","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"event event tday","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"event  /from 9pm /to 11pm","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"event  /from  /to 9pm","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"event talk /from  /to ","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"event talk /from 12am /to ","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"deadline  /from 9pm","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"deadline do sth /by ","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"deadline  /by 9pm","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nknguyenhc":12}},{"path":"text-ui-test/input/delete-task.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"todo do some stuff quack","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"event hello /from 8pm tday /to 8pm tmr","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"deadline finish some stuff /by this Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"delete 4","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"delete 1","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"delete 2","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nknguyenhc":12}},{"path":"text-ui-test/input/mark-as-done.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"todo do task 1","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"todo do task 2","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"todo task3","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"mark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"unmark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"mark 4","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"unmark 6","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nknguyenhc":15}},{"path":"text-ui-test/input/task-type.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"todo buy grocery","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"event Orbital splashdown /from tday 6pm /to tday 9pm","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"deadline finish this project /by Thurs 2359","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"event GDG-workshop /from tmr 7.30pm /to tmr 9.30pm","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"mark 10","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"mark 4","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"deadline CS2109S PS0","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"deadline CS2109S PS0 /by 26 Aug","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"event cchess training /to 9pm Mon /from 7pm Mon","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"event cchess training /from 7pm Mon /t 9pm","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"event cchess training /from 7pm Mon /to 9pm","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nknguyenhc":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"java -classpath ..\\bin Duke \u003c .\\input\\mark-as-done.txt \u003e .\\actual\\mark-as-done.txt","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"FC .\\actual\\mark-as-done.txt .\\expected\\mark-as-done.txt","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"java -classpath ..\\bin Duke \u003c .\\input\\task-type.txt \u003e .\\actual\\task-type.txt","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"FC .\\actual\\task-type.txt .\\expected\\task-type.txt","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"java -classpath ..\\bin Duke \u003c .\\input\\add-task-error.txt \u003e .\\actual\\add-task-error.txt","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":"FC .\\actual\\add-task-error.txt .\\expected\\add-task-error.txt","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"java -classpath ..\\bin Duke \u003c .\\input\\delete-task.txt \u003e .\\actual\\delete-task.txt","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"FC .\\actual\\delete-task.txt .\\expected\\delete-task.txt","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"nknguyenhc":10,"-":17}}]
