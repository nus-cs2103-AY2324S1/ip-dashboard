[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"# SHIBA-BOT project template","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"This is a project template for a greenfield Java project. It\u0027s inspired by the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"3. After that, locate the `src/main/java/Shiba.java` file, right-click it, and choose `Run Shiba.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see a window pop up with SHIBA-BOT greeting you.","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"-":13,"Bombbird2001":3}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"javafx {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"    version \u003d \"17.0.7\"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.graphics\u0027 ]","lastModifiedDate":"2023-09-23"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"    runtimeOnly \"org.openjfx:javafx-graphics:$javafx.version:win\"","lastModifiedDate":"2023-09-23"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"    runtimeOnly \"org.openjfx:javafx-graphics:$javafx.version:mac\"","lastModifiedDate":"2023-09-23"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"    runtimeOnly \"org.openjfx:javafx-graphics:$javafx.version:linux\"","lastModifiedDate":"2023-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"    mainClass.set(\"shiba.Shiba\")","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"    archiveBaseName \u003d \"SHIBA-BOT\"","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"Bombbird2001"},"content":"checkstyle {","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"Bombbird2001"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"Bombbird2001"},"content":"tasks.withType(JavaCompile).configureEach {","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"Bombbird2001"},"content":"    options.release \u003d 11","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"-":40,"Bombbird2001":21}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"# SHIBA-BOT User Guide","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"### Feature - Command line interface","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"Manage your tasks quickly by typing commands.","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"### Feature - Adding, deleting tasks","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"Add or remove tasks from your personal task list.","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"### Feature - 3 different task types","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"- Todo tasks with no deadline","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"- Deadline tasks that must be completed by a date/time","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"- Event tasks that happen between 2 points in time","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"### Feature - Marking tasks as done/not done","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"Mark tasks as done or not done to keep track of your progress.","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"### Feature - Finding tasks","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"Find tasks by searching for keyword.","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"### Feature - Saved tasks","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"Tasks are saved automatically and loaded when you start the program.","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"### Feature - Fun commands for SHIBA lovers","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"Play with SHIBA-BOT with a few in-built commands!","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"### `list` - List tasks","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"Lists all tasks stored in your task list.","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"`list`","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"A numbered list of all tasks stored in your task list.","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"Bombbird2001"},"content":"1. [T][X] read book","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"Bombbird2001"},"content":"2. [D][ ] return book (by: 22 Sep 2023)","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"Bombbird2001"},"content":"3. [E][ ] project meeting (from: 19 Sep 2023 2:00pm to 19 Sep 2023 4:00pm)","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"Bombbird2001"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"Bombbird2001"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"Bombbird2001"},"content":"### `mark` - Mark a task as done","lastModifiedDate":"2023-09-18"},{"lineNumber":57,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":58,"author":{"gitId":"Bombbird2001"},"content":"Marks the task as completed.","lastModifiedDate":"2023-09-18"},{"lineNumber":59,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":60,"author":{"gitId":"Bombbird2001"},"content":"Example of usage:","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":62,"author":{"gitId":"Bombbird2001"},"content":"`mark \u003ctask number\u003e`","lastModifiedDate":"2023-09-18"},{"lineNumber":63,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":64,"author":{"gitId":"Bombbird2001"},"content":"Expected outcome:","lastModifiedDate":"2023-09-18"},{"lineNumber":65,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":66,"author":{"gitId":"Bombbird2001"},"content":"The task with the task number will be marked as done.","lastModifiedDate":"2023-09-18"},{"lineNumber":67,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":68,"author":{"gitId":"Bombbird2001"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":69,"author":{"gitId":"Bombbird2001"},"content":"Woof! I\u0027ve marked this task as done:","lastModifiedDate":"2023-09-18"},{"lineNumber":70,"author":{"gitId":"Bombbird2001"},"content":"  [D][X] return book (by: 22 Sep 2023)","lastModifiedDate":"2023-09-18"},{"lineNumber":71,"author":{"gitId":"Bombbird2001"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":72,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":73,"author":{"gitId":"Bombbird2001"},"content":"SHIBA-BOT will inform you if the task is already marked as done.","lastModifiedDate":"2023-09-18"},{"lineNumber":74,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":75,"author":{"gitId":"Bombbird2001"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":76,"author":{"gitId":"Bombbird2001"},"content":"Woof! This task is already done!","lastModifiedDate":"2023-09-18"},{"lineNumber":77,"author":{"gitId":"Bombbird2001"},"content":"  [T][X] read book","lastModifiedDate":"2023-09-18"},{"lineNumber":78,"author":{"gitId":"Bombbird2001"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":79,"author":{"gitId":"Bombbird2001"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":80,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":81,"author":{"gitId":"Bombbird2001"},"content":"### `unmark` - Mark a task as not done","lastModifiedDate":"2023-09-18"},{"lineNumber":82,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":83,"author":{"gitId":"Bombbird2001"},"content":"Marks the task as not completed.","lastModifiedDate":"2023-09-18"},{"lineNumber":84,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":85,"author":{"gitId":"Bombbird2001"},"content":"Example of usage:","lastModifiedDate":"2023-09-18"},{"lineNumber":86,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":87,"author":{"gitId":"Bombbird2001"},"content":"`unmark \u003ctask number\u003e`","lastModifiedDate":"2023-09-18"},{"lineNumber":88,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":89,"author":{"gitId":"Bombbird2001"},"content":"Expected outcome:","lastModifiedDate":"2023-09-18"},{"lineNumber":90,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":91,"author":{"gitId":"Bombbird2001"},"content":"The task with the task number will be marked as not done.","lastModifiedDate":"2023-09-18"},{"lineNumber":92,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":93,"author":{"gitId":"Bombbird2001"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":94,"author":{"gitId":"Bombbird2001"},"content":"Woof! I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-09-18"},{"lineNumber":95,"author":{"gitId":"Bombbird2001"},"content":"  [T][ ] read book","lastModifiedDate":"2023-09-18"},{"lineNumber":96,"author":{"gitId":"Bombbird2001"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":97,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":98,"author":{"gitId":"Bombbird2001"},"content":"SHIBA-BOT will inform you if the task is already marked as not done.","lastModifiedDate":"2023-09-18"},{"lineNumber":99,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":100,"author":{"gitId":"Bombbird2001"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":101,"author":{"gitId":"Bombbird2001"},"content":"Woof! You have not done this task yet!","lastModifiedDate":"2023-09-18"},{"lineNumber":102,"author":{"gitId":"Bombbird2001"},"content":"  [D][ ] return book (by: 22 Sep 2023)","lastModifiedDate":"2023-09-18"},{"lineNumber":103,"author":{"gitId":"Bombbird2001"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":104,"author":{"gitId":"Bombbird2001"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":105,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":106,"author":{"gitId":"Bombbird2001"},"content":"### `todo` - Add a todo task","lastModifiedDate":"2023-09-18"},{"lineNumber":107,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":108,"author":{"gitId":"Bombbird2001"},"content":"Adds a todo task to your task list.","lastModifiedDate":"2023-09-18"},{"lineNumber":109,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":110,"author":{"gitId":"Bombbird2001"},"content":"Example of usage:","lastModifiedDate":"2023-09-18"},{"lineNumber":111,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":112,"author":{"gitId":"Bombbird2001"},"content":"`todo \u003ctask description\u003e`","lastModifiedDate":"2023-09-18"},{"lineNumber":113,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":114,"author":{"gitId":"Bombbird2001"},"content":"Expected outcome:","lastModifiedDate":"2023-09-18"},{"lineNumber":115,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":116,"author":{"gitId":"Bombbird2001"},"content":"The todo task with the description will be added to your task list.","lastModifiedDate":"2023-09-18"},{"lineNumber":117,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":118,"author":{"gitId":"Bombbird2001"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":119,"author":{"gitId":"Bombbird2001"},"content":"Woof! I\u0027ve added this task:","lastModifiedDate":"2023-09-18"},{"lineNumber":120,"author":{"gitId":"Bombbird2001"},"content":"  [T][ ] play game","lastModifiedDate":"2023-09-18"},{"lineNumber":121,"author":{"gitId":"Bombbird2001"},"content":"You now have 3 tasks in your list. Now gimme some treats.","lastModifiedDate":"2023-09-18"},{"lineNumber":122,"author":{"gitId":"Bombbird2001"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":123,"author":{"gitId":"Bombbird2001"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":124,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":125,"author":{"gitId":"Bombbird2001"},"content":"### `deadline` - Add a deadline task","lastModifiedDate":"2023-09-18"},{"lineNumber":126,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":127,"author":{"gitId":"Bombbird2001"},"content":"Adds a deadline task to your task list.","lastModifiedDate":"2023-09-18"},{"lineNumber":128,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":129,"author":{"gitId":"Bombbird2001"},"content":"Example of usage:","lastModifiedDate":"2023-09-18"},{"lineNumber":130,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":131,"author":{"gitId":"Bombbird2001"},"content":"`deadline \u003ctask description\u003e /by \u003cdate/time\u003e`","lastModifiedDate":"2023-09-18"},{"lineNumber":132,"author":{"gitId":"Bombbird2001"},"content":"- Date/time must be in the format `YYYY-MM-DD` or `YYYY-MM-DD HH:mm`.","lastModifiedDate":"2023-09-18"},{"lineNumber":133,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":134,"author":{"gitId":"Bombbird2001"},"content":"Expected outcome:","lastModifiedDate":"2023-09-18"},{"lineNumber":135,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":136,"author":{"gitId":"Bombbird2001"},"content":"The deadline task with the description and date/time will be added to your task list.","lastModifiedDate":"2023-09-18"},{"lineNumber":137,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":138,"author":{"gitId":"Bombbird2001"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":139,"author":{"gitId":"Bombbird2001"},"content":"Woof! I\u0027ve added this task:","lastModifiedDate":"2023-09-18"},{"lineNumber":140,"author":{"gitId":"Bombbird2001"},"content":"  [D][ ] clean room (by: 22 Sep 2023 8:00PM)","lastModifiedDate":"2023-09-18"},{"lineNumber":141,"author":{"gitId":"Bombbird2001"},"content":"You now have 4 tasks in your list. Now gimme some treats.","lastModifiedDate":"2023-09-18"},{"lineNumber":142,"author":{"gitId":"Bombbird2001"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":143,"author":{"gitId":"Bombbird2001"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":144,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":145,"author":{"gitId":"Bombbird2001"},"content":"### `event` - Add an event task","lastModifiedDate":"2023-09-18"},{"lineNumber":146,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":147,"author":{"gitId":"Bombbird2001"},"content":"Adds an event to your task list.","lastModifiedDate":"2023-09-18"},{"lineNumber":148,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":149,"author":{"gitId":"Bombbird2001"},"content":"Example of usage:","lastModifiedDate":"2023-09-18"},{"lineNumber":150,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":151,"author":{"gitId":"Bombbird2001"},"content":"`event \u003ctask description\u003e /from \u003cstart date/time\u003e /to \u003cend date/time\u003e`","lastModifiedDate":"2023-09-18"},{"lineNumber":152,"author":{"gitId":"Bombbird2001"},"content":"- Date/time must be in the format `YYYY-MM-DD` or `YYYY-MM-DD HH:mm`.","lastModifiedDate":"2023-09-18"},{"lineNumber":153,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":154,"author":{"gitId":"Bombbird2001"},"content":"Expected outcome:","lastModifiedDate":"2023-09-18"},{"lineNumber":155,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":156,"author":{"gitId":"Bombbird2001"},"content":"The event task with the description and start, end date/time will be added to your task list.","lastModifiedDate":"2023-09-18"},{"lineNumber":157,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":158,"author":{"gitId":"Bombbird2001"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":159,"author":{"gitId":"Bombbird2001"},"content":"Woof! I\u0027ve added this task:","lastModifiedDate":"2023-09-18"},{"lineNumber":160,"author":{"gitId":"Bombbird2001"},"content":"  [E][ ] badminton (from: 25 Sep 2023 10:00AM to 25 Sep 2023 12:00PM)","lastModifiedDate":"2023-09-18"},{"lineNumber":161,"author":{"gitId":"Bombbird2001"},"content":"You now have 5 tasks in your list. Now gimme some treats.","lastModifiedDate":"2023-09-18"},{"lineNumber":162,"author":{"gitId":"Bombbird2001"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":163,"author":{"gitId":"Bombbird2001"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":164,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":165,"author":{"gitId":"Bombbird2001"},"content":"### `delete` - Delete a task","lastModifiedDate":"2023-09-18"},{"lineNumber":166,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":167,"author":{"gitId":"Bombbird2001"},"content":"Deletes a task from your task list.","lastModifiedDate":"2023-09-18"},{"lineNumber":168,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":169,"author":{"gitId":"Bombbird2001"},"content":"Example of usage:","lastModifiedDate":"2023-09-18"},{"lineNumber":170,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":171,"author":{"gitId":"Bombbird2001"},"content":"`delete \u003ctask number\u003e`","lastModifiedDate":"2023-09-18"},{"lineNumber":172,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":173,"author":{"gitId":"Bombbird2001"},"content":"Expected outcome:","lastModifiedDate":"2023-09-18"},{"lineNumber":174,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":175,"author":{"gitId":"Bombbird2001"},"content":"The task with the task number will be deleted from your task list.","lastModifiedDate":"2023-09-18"},{"lineNumber":176,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":177,"author":{"gitId":"Bombbird2001"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":178,"author":{"gitId":"Bombbird2001"},"content":"Woof! I\u0027ve deleted this task:","lastModifiedDate":"2023-09-18"},{"lineNumber":179,"author":{"gitId":"Bombbird2001"},"content":"  [T][ ] play game","lastModifiedDate":"2023-09-18"},{"lineNumber":180,"author":{"gitId":"Bombbird2001"},"content":"You now have 4 tasks in your list. Some headpats please?","lastModifiedDate":"2023-09-18"},{"lineNumber":181,"author":{"gitId":"Bombbird2001"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":182,"author":{"gitId":"Bombbird2001"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":183,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":184,"author":{"gitId":"Bombbird2001"},"content":"### `find` - Find tasks","lastModifiedDate":"2023-09-18"},{"lineNumber":185,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":186,"author":{"gitId":"Bombbird2001"},"content":"Finds tasks that contain the keyword.","lastModifiedDate":"2023-09-18"},{"lineNumber":187,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":188,"author":{"gitId":"Bombbird2001"},"content":"Example of usage:","lastModifiedDate":"2023-09-18"},{"lineNumber":189,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":190,"author":{"gitId":"Bombbird2001"},"content":"`find \u003ckeyword\u003e`","lastModifiedDate":"2023-09-18"},{"lineNumber":191,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":192,"author":{"gitId":"Bombbird2001"},"content":"Expected outcome:","lastModifiedDate":"2023-09-18"},{"lineNumber":193,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":194,"author":{"gitId":"Bombbird2001"},"content":"A list of tasks that contain the keyword will be displayed.","lastModifiedDate":"2023-09-18"},{"lineNumber":195,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":196,"author":{"gitId":"Bombbird2001"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":197,"author":{"gitId":"Bombbird2001"},"content":"Woof! Here are the tasks containing the keyword!","lastModifiedDate":"2023-09-18"},{"lineNumber":198,"author":{"gitId":"Bombbird2001"},"content":"  1. [T][ ] read book","lastModifiedDate":"2023-09-18"},{"lineNumber":199,"author":{"gitId":"Bombbird2001"},"content":"  2. [D][ ] return book (by: 22 Sep 2023)","lastModifiedDate":"2023-09-18"},{"lineNumber":200,"author":{"gitId":"Bombbird2001"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":201,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":202,"author":{"gitId":"Bombbird2001"},"content":"If there are no matching tasks, SHIBA-BOT will inform you.","lastModifiedDate":"2023-09-18"},{"lineNumber":203,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":204,"author":{"gitId":"Bombbird2001"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":205,"author":{"gitId":"Bombbird2001"},"content":"Woof! No tasks containing keyword found!","lastModifiedDate":"2023-09-18"},{"lineNumber":206,"author":{"gitId":"Bombbird2001"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":207,"author":{"gitId":"Bombbird2001"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":208,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":209,"author":{"gitId":"Bombbird2001"},"content":"### `bye` - Exit the program","lastModifiedDate":"2023-09-18"},{"lineNumber":210,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":211,"author":{"gitId":"Bombbird2001"},"content":"Exits the program.","lastModifiedDate":"2023-09-18"},{"lineNumber":212,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":213,"author":{"gitId":"Bombbird2001"},"content":"Example of usage:","lastModifiedDate":"2023-09-18"},{"lineNumber":214,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":215,"author":{"gitId":"Bombbird2001"},"content":"`bye`","lastModifiedDate":"2023-09-18"},{"lineNumber":216,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":217,"author":{"gitId":"Bombbird2001"},"content":"Expected outcome:","lastModifiedDate":"2023-09-18"},{"lineNumber":218,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":219,"author":{"gitId":"Bombbird2001"},"content":"SHIBA-BOT will bid you farewell and exit the program after a few seconds.","lastModifiedDate":"2023-09-18"},{"lineNumber":220,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":221,"author":{"gitId":"Bombbird2001"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":222,"author":{"gitId":"Bombbird2001"},"content":"Woof! Hope to bark at you again soon!","lastModifiedDate":"2023-09-18"},{"lineNumber":223,"author":{"gitId":"Bombbird2001"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":224,"author":{"gitId":"Bombbird2001"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":225,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":226,"author":{"gitId":"Bombbird2001"},"content":"### `help` - View help","lastModifiedDate":"2023-09-18"},{"lineNumber":227,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":228,"author":{"gitId":"Bombbird2001"},"content":"Displays a list of commands and their usage, or displays specific information about a command.","lastModifiedDate":"2023-09-18"},{"lineNumber":229,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":230,"author":{"gitId":"Bombbird2001"},"content":"Example of usage:","lastModifiedDate":"2023-09-18"},{"lineNumber":231,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":232,"author":{"gitId":"Bombbird2001"},"content":"`help (optional command name)`","lastModifiedDate":"2023-09-18"},{"lineNumber":233,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":234,"author":{"gitId":"Bombbird2001"},"content":"Expected outcome:","lastModifiedDate":"2023-09-18"},{"lineNumber":235,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":236,"author":{"gitId":"Bombbird2001"},"content":"If no command name is specified, a list of commands and their usage will be displayed.","lastModifiedDate":"2023-09-18"},{"lineNumber":237,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":238,"author":{"gitId":"Bombbird2001"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":239,"author":{"gitId":"Bombbird2001"},"content":"Woof! Here are all the commands I can understand:","lastModifiedDate":"2023-09-18"},{"lineNumber":240,"author":{"gitId":"Bombbird2001"},"content":"  bye","lastModifiedDate":"2023-09-18"},{"lineNumber":241,"author":{"gitId":"Bombbird2001"},"content":"  list","lastModifiedDate":"2023-09-18"},{"lineNumber":242,"author":{"gitId":"Bombbird2001"},"content":"  mark","lastModifiedDate":"2023-09-18"},{"lineNumber":243,"author":{"gitId":"Bombbird2001"},"content":"  unmark","lastModifiedDate":"2023-09-18"},{"lineNumber":244,"author":{"gitId":"Bombbird2001"},"content":"  ...","lastModifiedDate":"2023-09-18"},{"lineNumber":245,"author":{"gitId":"Bombbird2001"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":246,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":247,"author":{"gitId":"Bombbird2001"},"content":"If a command name is specified, specific information about the command will be displayed.","lastModifiedDate":"2023-09-18"},{"lineNumber":248,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":249,"author":{"gitId":"Bombbird2001"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":250,"author":{"gitId":"Bombbird2001"},"content":"Woof! Here\u0027s the help message for the mark command:","lastModifiedDate":"2023-09-18"},{"lineNumber":251,"author":{"gitId":"Bombbird2001"},"content":"  mark \u003ctask number\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":252,"author":{"gitId":"Bombbird2001"},"content":"  Marks the task as done.","lastModifiedDate":"2023-09-18"},{"lineNumber":253,"author":{"gitId":"Bombbird2001"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":254,"author":{"gitId":"Bombbird2001"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":255,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":256,"author":{"gitId":"Bombbird2001"},"content":"### `pat` - Pat SHIBA-BOT","lastModifiedDate":"2023-09-18"},{"lineNumber":257,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":258,"author":{"gitId":"Bombbird2001"},"content":"Pats SHIBA-BOT.","lastModifiedDate":"2023-09-18"},{"lineNumber":259,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":260,"author":{"gitId":"Bombbird2001"},"content":"Example of usage:","lastModifiedDate":"2023-09-18"},{"lineNumber":261,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":262,"author":{"gitId":"Bombbird2001"},"content":"`pat`","lastModifiedDate":"2023-09-18"},{"lineNumber":263,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":264,"author":{"gitId":"Bombbird2001"},"content":"Expected outcome:","lastModifiedDate":"2023-09-18"},{"lineNumber":265,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":266,"author":{"gitId":"Bombbird2001"},"content":"SHIBA-BOT will respond favourably to the headpats.","lastModifiedDate":"2023-09-18"},{"lineNumber":267,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":268,"author":{"gitId":"Bombbird2001"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":269,"author":{"gitId":"Bombbird2001"},"content":"\u003cHappy Shiba noises\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":270,"author":{"gitId":"Bombbird2001"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":271,"author":{"gitId":"Bombbird2001"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":272,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":273,"author":{"gitId":"Bombbird2001"},"content":"### `bellyrub` - Rub SHIBA-BOT\u0027s belly","lastModifiedDate":"2023-09-18"},{"lineNumber":274,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":275,"author":{"gitId":"Bombbird2001"},"content":"Rubs SHIBA-BOT\u0027s belly.","lastModifiedDate":"2023-09-18"},{"lineNumber":276,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":277,"author":{"gitId":"Bombbird2001"},"content":"Example of usage:","lastModifiedDate":"2023-09-18"},{"lineNumber":278,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":279,"author":{"gitId":"Bombbird2001"},"content":"`bellyrub`","lastModifiedDate":"2023-09-18"},{"lineNumber":280,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":281,"author":{"gitId":"Bombbird2001"},"content":"Expected outcome:","lastModifiedDate":"2023-09-18"},{"lineNumber":282,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":283,"author":{"gitId":"Bombbird2001"},"content":"SHIBA-BOT will respond very favourably to the belly rubs.","lastModifiedDate":"2023-09-18"},{"lineNumber":284,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":285,"author":{"gitId":"Bombbird2001"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":286,"author":{"gitId":"Bombbird2001"},"content":"Woof! More please!","lastModifiedDate":"2023-09-18"},{"lineNumber":287,"author":{"gitId":"Bombbird2001"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":288,"author":{"gitId":"Bombbird2001"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":289,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":290,"author":{"gitId":"Bombbird2001"},"content":"### `boop` - Boop SHIBA-BOT\u0027s nose","lastModifiedDate":"2023-09-18"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":292,"author":{"gitId":"Bombbird2001"},"content":"Boops SHIBA-BOT\u0027s nose.","lastModifiedDate":"2023-09-18"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":296,"author":{"gitId":"Bombbird2001"},"content":"`boop`","lastModifiedDate":"2023-09-18"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":300,"author":{"gitId":"Bombbird2001"},"content":"SHIBA-BOT will boop you back.","lastModifiedDate":"2023-09-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":302,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":303,"author":{"gitId":"Bombbird2001"},"content":"\u003cBoops you back\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":304,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"-":28,"Bombbird2001":276}},{"path":"src/main/java/shiba/Shiba.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import shiba.parsers.CommandParser;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import shiba.tasks.FilePersistentTaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import shiba.ui.MainWindow;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"import shiba.ui.Replier;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":" * Represents the main class of the Shiba chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"public class Shiba {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"    private final String name;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"    private final CommandParser parser;","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"     * Creates a new Shiba object.","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"     * @param name The name of the bot.","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"     * @param dataPath Path to the file where tasks are saved.","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"    public Shiba(String name, String dataPath) {","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"        parser \u003d new CommandParser(new FilePersistentTaskList(dataPath));","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"     * Starts the bot.","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"    public void start() {","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"        Replier.printGreeting(name);","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"    private void stop() {","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"        Replier.printBye();","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"     * Processes the user input received from UI window.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"     * @param input The user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"    public void processUserInput(String input) {","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"        boolean isQuitRequested \u003d parser.processUserInput(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"        MainWindow mainWindow \u003d MainWindow.getInstance();","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"        if (isQuitRequested \u0026\u0026 mainWindow !\u003d null) {","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"            stop();","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"Bombbird2001"},"content":"            mainWindow.close();","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"Bombbird2001"},"content":"    public String getName() {","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"Bombbird2001"},"content":"        return name;","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"Bombbird2001"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Bombbird2001"},"content":"        Application.launch(MainWindow.class);","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"Bombbird2001"},"content":"        MainWindow.getInstance().cleanUp();","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Bombbird2001":61}},{"path":"src/main/java/shiba/commands/BellyRubCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.commands;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import java.util.Random;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import shiba.tasks.PersistentTaskList;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import shiba.ui.Replier;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":" * Represents a command that gives the bot belly rubs.","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"public class BellyRubCommand extends ShibaCommand {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"    private static final Random RANDOM \u003d new Random();","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"    private static final String REPLY_MSG_1 \u003d \"Woof! More please!\";","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"    private static final String REPLY_MSG_2 \u003d \"\u003cHappy Shiba noises\u003e\";","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"     * Constructor for BellyRubCommand.","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"     * @param tasks Current state of task list","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"    public BellyRubCommand(PersistentTaskList tasks) {","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"        super(tasks);","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"    public void execute() {","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"        Replier.printWithNoIndents(RANDOM.nextBoolean() ? REPLY_MSG_1 : REPLY_MSG_2);","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"        Replier.reply();","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"Bombbird2001":33}},{"path":"src/main/java/shiba/commands/BoopCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.commands;","lastModifiedDate":"2023-09-17"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import java.util.Random;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import shiba.exceptions.ShibaException;","lastModifiedDate":"2023-09-17"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import shiba.tasks.PersistentTaskList;","lastModifiedDate":"2023-09-17"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"import shiba.ui.Replier;","lastModifiedDate":"2023-09-17"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":" * Represents a command that gives SHIBA-BOT a nose boop.","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"public class BoopCommand extends ShibaCommand {","lastModifiedDate":"2023-09-17"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"    private static final Random RANDOM \u003d new Random();","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"    private static final String REPLY_MSG_1 \u003d \"\u003cNuzzles you\u003e\";","lastModifiedDate":"2023-09-17"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"    private static final String REPLY_MSG_2 \u003d \"\u003cBoops you back\u003e\";","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"     * Constructor for BoopCommand.","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"     * @param tasks Current state of task list","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"    public BoopCommand(PersistentTaskList tasks) {","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"        super(tasks);","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-17"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-09-17"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"    public void execute() throws ShibaException {","lastModifiedDate":"2023-09-17"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"        Replier.printWithNoIndents(RANDOM.nextBoolean() ? REPLY_MSG_1 : REPLY_MSG_2);","lastModifiedDate":"2023-09-17"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"        Replier.reply();","lastModifiedDate":"2023-09-17"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-09-17"}],"authorContributionMap":{"Bombbird2001":34}},{"path":"src/main/java/shiba/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.commands;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import shiba.exceptions.ShibaException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import shiba.tasks.DeadlineTask;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import shiba.tasks.PersistentTaskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":" * Represents a command to add a deadline task","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"public class DeadlineCommand extends ShibaCommand {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"    private final String fullCmd;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"     * Constructor for DeadlineCommand, which adds a task of type deadline","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"     * @param tasks Current state of task list","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"     * @param cmd  Full command string","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"    public DeadlineCommand(PersistentTaskList tasks, String cmd) {","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"        super(tasks);","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"        fullCmd \u003d cmd;","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"    public void execute() throws ShibaException {","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"        DeadlineTask deadline \u003d DeadlineTask.fromCmd(fullCmd);","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"        addTask(deadline);","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Bombbird2001":32}},{"path":"src/main/java/shiba/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.commands;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import shiba.exceptions.ShibaException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import shiba.tasks.PersistentTaskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import shiba.tasks.ShibaTask;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import shiba.ui.Replier;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":" * Represents a command to delete a task from the task list","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"public class DeleteCommand extends ShibaCommand {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"    private final String[] params;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"     * Constructor for DeleteCommand, which deletes a task from the task list","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"     * @param tasks Current state of task list","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"     * @param cmd Full command string","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"    public DeleteCommand(PersistentTaskList tasks, String cmd) {","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"        super(tasks);","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"        params \u003d cmd.split(\" \");","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"    public void execute() throws ShibaException {","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"        int taskNumber \u003d checkTaskNumber(params);","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"        ShibaTask task \u003d tasks.removeIndex(taskNumber - 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"        Replier.printWithNoIndents(\"Woof! I\u0027ve deleted this task:\");","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"        Replier.printWithOneIndent(task.toString());","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"        String taskWord \u003d tasks.size() \u003d\u003d 1 ? \" task\" : \" tasks\";","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"        Replier.printWithNoIndents(\"You now have \" + tasks.size() + taskWord","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"                + \" in the list. Some headpats please?\");","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"        Replier.reply();","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"        tasks.save();","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Bombbird2001":42}},{"path":"src/main/java/shiba/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.commands;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import shiba.exceptions.ShibaException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import shiba.tasks.EventTask;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import shiba.tasks.PersistentTaskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":" * Represents a command to add an event task","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"public class EventCommand extends ShibaCommand {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"    private final String fullCmd;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"     * Constructor for EventCommand, which adds a task of type event","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"     * @param tasks Current state of task list","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"     * @param cmd Full command string","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"    public EventCommand(PersistentTaskList tasks, String cmd) {","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"        super(tasks);","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"        fullCmd \u003d cmd;","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"    public void execute() throws ShibaException {","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"        EventTask event \u003d EventTask.fromCmd(fullCmd);","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"        addTask(event);","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Bombbird2001":32}},{"path":"src/main/java/shiba/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import java.util.List;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import shiba.exceptions.InvalidCommandException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import shiba.exceptions.ShibaException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"import shiba.tasks.PersistentTaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"import shiba.tasks.ShibaTask;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"import shiba.ui.Replier;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":" * Represents a command to find tasks with a keyword.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"public class FindCommand extends ShibaCommand {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"    private final String fullCmd;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"     * Constructs a FindCommand.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"     * @param tasks Current state of task list","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"     * @param cmd Full command string","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"    public FindCommand(PersistentTaskList tasks, String cmd) {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"        super(tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"        fullCmd \u003d cmd;","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"    public void execute() throws ShibaException {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"        String[] params \u003d fullCmd.split(\" \", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"        if (params.length \u003c 2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"            throw new InvalidCommandException(\"Please enter a keyword to search for!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"        String keyword \u003d params[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"        List\u003cShibaTask\u003e matchingTasks \u003d tasks.findTasksWithKeyword(keyword);","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"            Replier.printWithNoIndents(\"Woof! No tasks containing keyword found!\");","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"            Replier.printWithNoIndents(\"Woof! Here are the tasks containing the keyword!\");","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"                Replier.printWithOneIndent((i + 1) + \". \" + matchingTasks.get(i));","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"Bombbird2001"},"content":"        Replier.reply();","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Bombbird2001":50}},{"path":"src/main/java/shiba/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.commands;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import shiba.exceptions.ShibaException;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import shiba.tasks.PersistentTaskList;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"import shiba.ui.Replier;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":" * Represents a command to display help messages.","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"public class HelpCommand extends ShibaCommand {","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"     * Represents the help information for a command.","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"    public static class HelpInfo {","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"        public final String commandFormat;","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"        public final String commandDescription;","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"        /**","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"         * Creates a new HelpInfo object.","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"         *","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"         * @param commandFormat The format of the command.","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"         * @param commandDescription The description of the command and what it does.","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"         */","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"        public HelpInfo(String commandFormat, String commandDescription) {","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"            this.commandFormat \u003d commandFormat;","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"            this.commandDescription \u003d commandDescription;","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"    private static final HashMap\u003cCommandType, HelpInfo\u003e HELP_INFO_MAP \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"    private static final String COMMAND_DOES_NOT_EXIST_MSG \u003d \"Woof! This command does not exist!\";","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"    static {","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"        HELP_INFO_MAP.put(CommandType.BYE,","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"                new HelpInfo(\"bye\", \"Exits the program.\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"        HELP_INFO_MAP.put(CommandType.LIST,","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"                new HelpInfo(\"list\", \"Lists all tasks.\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"        HELP_INFO_MAP.put(CommandType.MARK,","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"                new HelpInfo(\"mark \u003ctask number\u003e\", \"Marks the task as done.\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"        HELP_INFO_MAP.put(CommandType.UNMARK,","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"                new HelpInfo(\"unmark \u003ctask number\u003e\", \"Marks the task as not done.\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"        HELP_INFO_MAP.put(CommandType.TODO,","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"                new HelpInfo(\"todo \u003cdescription\u003e\", \"Adds a todo task.\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"        HELP_INFO_MAP.put(CommandType.DEADLINE,","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"                new HelpInfo(\"deadline \u003cdescription\u003e /by \u003cdate\u003e\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"Bombbird2001"},"content":"                        + \"Date should be in YYYY-MM-DD or YYYY-MM-DD HH:mm format\", \"Adds a deadline task.\"));","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"        HELP_INFO_MAP.put(CommandType.EVENT,","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"Bombbird2001"},"content":"                new HelpInfo(\"event \u003cdescription\u003e /from \u003cdate\u003e /to \u003cdate\u003e\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"Bombbird2001"},"content":"                        + \"Date should be in YYYY-MM-DD or YYYY-MM-DD HH:mm format\", \"Adds an event task.\"));","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"Bombbird2001"},"content":"        HELP_INFO_MAP.put(CommandType.DELETE,","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"Bombbird2001"},"content":"                new HelpInfo(\"delete \u003ctask number\u003e\", \"Deletes the task.\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"Bombbird2001"},"content":"        HELP_INFO_MAP.put(CommandType.FIND,","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"Bombbird2001"},"content":"                new HelpInfo(\"find \u003ckeyword\u003e\", \"Finds tasks containing the keyword.\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"Bombbird2001"},"content":"        HELP_INFO_MAP.put(CommandType.PAT,","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"Bombbird2001"},"content":"                new HelpInfo(\"pat\", \"Pats SHIBA-BOT.\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"Bombbird2001"},"content":"        HELP_INFO_MAP.put(CommandType.BELLYRUB,","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"Bombbird2001"},"content":"                new HelpInfo(\"bellyrub\", \"Gives SHIBA-BOT a belly rub.\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"Bombbird2001"},"content":"        HELP_INFO_MAP.put(CommandType.HELP,","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"Bombbird2001"},"content":"                new HelpInfo(\"help \u003coptional command name\u003e\",","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"Bombbird2001"},"content":"                        \"Displays the help message for the command, \"","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"Bombbird2001"},"content":"                                + \"or lists all commands if no command is specified.\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"Bombbird2001"},"content":"        HELP_INFO_MAP.put(CommandType.BOOP,","lastModifiedDate":"2023-09-17"},{"lineNumber":65,"author":{"gitId":"Bombbird2001"},"content":"                new HelpInfo(\"boop\", \"Boops SHIBA-BOT\u0027s nose.\"));","lastModifiedDate":"2023-09-17"},{"lineNumber":66,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":67,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"Bombbird2001"},"content":"    private final String fullCmd;","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":71,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":72,"author":{"gitId":"Bombbird2001"},"content":"     * Creates a new HelpCommand object.","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":74,"author":{"gitId":"Bombbird2001"},"content":"     * @param tasks Current state of task list","lastModifiedDate":"2023-09-10"},{"lineNumber":75,"author":{"gitId":"Bombbird2001"},"content":"     * @param cmd Full command string","lastModifiedDate":"2023-09-10"},{"lineNumber":76,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":77,"author":{"gitId":"Bombbird2001"},"content":"    public HelpCommand(PersistentTaskList tasks, String cmd) {","lastModifiedDate":"2023-09-10"},{"lineNumber":78,"author":{"gitId":"Bombbird2001"},"content":"        super(tasks);","lastModifiedDate":"2023-09-10"},{"lineNumber":79,"author":{"gitId":"Bombbird2001"},"content":"        fullCmd \u003d cmd;","lastModifiedDate":"2023-09-10"},{"lineNumber":80,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":81,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":82,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":83,"author":{"gitId":"Bombbird2001"},"content":"    public void execute() throws ShibaException {","lastModifiedDate":"2023-09-10"},{"lineNumber":84,"author":{"gitId":"Bombbird2001"},"content":"        String[] cmdSplit \u003d fullCmd.split(\" \", 2);","lastModifiedDate":"2023-09-10"},{"lineNumber":85,"author":{"gitId":"Bombbird2001"},"content":"        if (cmdSplit.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-10"},{"lineNumber":86,"author":{"gitId":"Bombbird2001"},"content":"            printAllCommands();","lastModifiedDate":"2023-09-10"},{"lineNumber":87,"author":{"gitId":"Bombbird2001"},"content":"        } else {","lastModifiedDate":"2023-09-10"},{"lineNumber":88,"author":{"gitId":"Bombbird2001"},"content":"            printCommandHelp(cmdSplit[1].toLowerCase());","lastModifiedDate":"2023-09-10"},{"lineNumber":89,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":90,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":91,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":92,"author":{"gitId":"Bombbird2001"},"content":"    /** Prints the help message when no command is specified - lists out all commands. */","lastModifiedDate":"2023-09-10"},{"lineNumber":93,"author":{"gitId":"Bombbird2001"},"content":"    private void printAllCommands() {","lastModifiedDate":"2023-09-10"},{"lineNumber":94,"author":{"gitId":"Bombbird2001"},"content":"        Replier.printWithNoIndents(\"Woof! Here are all the commands I can understand:\\n\");","lastModifiedDate":"2023-09-10"},{"lineNumber":95,"author":{"gitId":"Bombbird2001"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-10"},{"lineNumber":96,"author":{"gitId":"Bombbird2001"},"content":"        for (CommandType command : CommandType.values()) {","lastModifiedDate":"2023-09-10"},{"lineNumber":97,"author":{"gitId":"Bombbird2001"},"content":"            sb.append(command.name().toLowerCase()).append(\"\\n\");","lastModifiedDate":"2023-09-10"},{"lineNumber":98,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":99,"author":{"gitId":"Bombbird2001"},"content":"        Replier.printWithOneIndent(sb.toString());","lastModifiedDate":"2023-09-10"},{"lineNumber":100,"author":{"gitId":"Bombbird2001"},"content":"        Replier.printWithNoIndents(\"For more information on a command, type \\\"help \u003ccommand name\u003e\\\".\");","lastModifiedDate":"2023-09-10"},{"lineNumber":101,"author":{"gitId":"Bombbird2001"},"content":"        Replier.reply();","lastModifiedDate":"2023-09-10"},{"lineNumber":102,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":103,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":104,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":105,"author":{"gitId":"Bombbird2001"},"content":"     * Prints the help message for a specific command.","lastModifiedDate":"2023-09-10"},{"lineNumber":106,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":107,"author":{"gitId":"Bombbird2001"},"content":"     * @param commandName The name of the command to print help for.","lastModifiedDate":"2023-09-10"},{"lineNumber":108,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":109,"author":{"gitId":"Bombbird2001"},"content":"    private void printCommandHelp(String commandName) {","lastModifiedDate":"2023-09-10"},{"lineNumber":110,"author":{"gitId":"Bombbird2001"},"content":"        CommandType commandType;","lastModifiedDate":"2023-09-10"},{"lineNumber":111,"author":{"gitId":"Bombbird2001"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":112,"author":{"gitId":"Bombbird2001"},"content":"            commandType \u003d CommandType.valueOf(commandName.toUpperCase());","lastModifiedDate":"2023-09-10"},{"lineNumber":113,"author":{"gitId":"Bombbird2001"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":114,"author":{"gitId":"Bombbird2001"},"content":"            Replier.printWithNoIndents(COMMAND_DOES_NOT_EXIST_MSG);","lastModifiedDate":"2023-09-10"},{"lineNumber":115,"author":{"gitId":"Bombbird2001"},"content":"            Replier.replyError();","lastModifiedDate":"2023-09-17"},{"lineNumber":116,"author":{"gitId":"Bombbird2001"},"content":"            return;","lastModifiedDate":"2023-09-10"},{"lineNumber":117,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":118,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":119,"author":{"gitId":"Bombbird2001"},"content":"        HelpInfo helpInfo \u003d HELP_INFO_MAP.get(commandType);","lastModifiedDate":"2023-09-10"},{"lineNumber":120,"author":{"gitId":"Bombbird2001"},"content":"        if (helpInfo \u003d\u003d null) {","lastModifiedDate":"2023-09-10"},{"lineNumber":121,"author":{"gitId":"Bombbird2001"},"content":"            Replier.printWithNoIndents(COMMAND_DOES_NOT_EXIST_MSG);","lastModifiedDate":"2023-09-10"},{"lineNumber":122,"author":{"gitId":"Bombbird2001"},"content":"            Replier.replyError();","lastModifiedDate":"2023-09-17"},{"lineNumber":123,"author":{"gitId":"Bombbird2001"},"content":"            return;","lastModifiedDate":"2023-09-10"},{"lineNumber":124,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":125,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":126,"author":{"gitId":"Bombbird2001"},"content":"        Replier.printWithNoIndents(\"Woof! Here\u0027s the help message for the \" + commandName + \" command:\");","lastModifiedDate":"2023-09-10"},{"lineNumber":127,"author":{"gitId":"Bombbird2001"},"content":"        Replier.printWithOneIndent(helpInfo.commandFormat);","lastModifiedDate":"2023-09-10"},{"lineNumber":128,"author":{"gitId":"Bombbird2001"},"content":"        Replier.printWithOneIndent(helpInfo.commandDescription);","lastModifiedDate":"2023-09-10"},{"lineNumber":129,"author":{"gitId":"Bombbird2001"},"content":"        Replier.reply();","lastModifiedDate":"2023-09-10"},{"lineNumber":130,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":131,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"Bombbird2001":131}},{"path":"src/main/java/shiba/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.commands;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import shiba.tasks.PersistentTaskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import shiba.ui.Replier;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":" * Represents a command that lists all tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"public class ListCommand extends ShibaCommand {","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"     * Constructor for ListCommand, which lists all tasks","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"     * @param tasks Current state of task list","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"    public ListCommand(PersistentTaskList tasks) {","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"        super(tasks);","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"    public void execute() {","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"            Replier.printWithNoIndents((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"            Replier.printWithNoIndents(\"Woof! You have no tasks in the list - go browse some Reddit!\");","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"        Replier.reply();","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Bombbird2001":32}},{"path":"src/main/java/shiba/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.commands;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import shiba.exceptions.ShibaException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import shiba.tasks.PersistentTaskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import shiba.tasks.ShibaTask;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import shiba.ui.Replier;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":" * Represents a command to mark a task as done","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"public class MarkCommand extends ShibaCommand {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"    private final String[] params;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"     * Constructor for MarkCommand, which marks a task as done","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"     * @param tasks Current state of task list","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"     * @param cmd Full command string","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"    public MarkCommand(PersistentTaskList tasks, String cmd) {","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"        super(tasks);","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"        params \u003d cmd.split(\" \");","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"    public void execute() throws ShibaException {","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"        int taskNumber \u003d checkTaskNumber(params);","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"        ShibaTask task \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"        boolean res \u003d task.markDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"        if (res) {","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"            Replier.printWithNoIndents(\"Woof! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"        } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"            Replier.printWithNoIndents(\"Woof! This task is already done!\");","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"        Replier.printWithOneIndent(task.toString());","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"        Replier.reply();","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"        tasks.save();","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Bombbird2001":44}},{"path":"src/main/java/shiba/commands/PatCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.commands;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import java.util.Random;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import shiba.tasks.PersistentTaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import shiba.ui.Replier;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":" * Represents a command that pats the bot","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"public class PatCommand extends ShibaCommand {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"    private static final Random RANDOM \u003d new Random();","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"    private static final String REPLY_MSG_1 \u003d \"Woof! I\u0027m so happy!\";","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"    private static final String REPLY_MSG_2 \u003d \"\u003cHappy Shiba noises\u003e\";","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"     * Constructor for PatCommand","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"     * @param tasks Current state of task list","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"    public PatCommand(PersistentTaskList tasks) {","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"        super(tasks);","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"    public void execute() {","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"        Replier.printWithNoIndents(RANDOM.nextBoolean() ? REPLY_MSG_1 : REPLY_MSG_2);","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"        Replier.reply();","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"Bombbird2001":33}},{"path":"src/main/java/shiba/commands/ShibaCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.commands;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import shiba.exceptions.EmptyTasksException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import shiba.exceptions.InvalidCommandException;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import shiba.exceptions.ShibaException;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import shiba.tasks.PersistentTaskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"import shiba.tasks.ShibaTask;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"import shiba.ui.Replier;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":" * Represents a command that the user can give to Shiba.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"public abstract class ShibaCommand {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"     * The types of commands that Shiba can execute.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"    public enum CommandType {","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"        BYE,","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"        LIST,","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"        MARK,","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"        UNMARK,","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"        TODO,","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"        DEADLINE,","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"        EVENT,","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"        DELETE,","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"        FIND,","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"        PAT,","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"        BELLYRUB,","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"        HELP,","lastModifiedDate":"2023-09-17"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"        BOOP","lastModifiedDate":"2023-09-17"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"    protected final PersistentTaskList tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"    protected ShibaCommand(PersistentTaskList tasks) {","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"     * Executes the command.","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"     * @throws ShibaException If there is an error executing the command.","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"    public abstract void execute() throws ShibaException;","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"     * Checks if the task number is valid in the command. It should be present","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"Bombbird2001"},"content":"     * as the 2nd parameter.","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"Bombbird2001"},"content":"     * @param cmd The command parameters, split by spaces.","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"Bombbird2001"},"content":"     * @return The task number if valid.","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"Bombbird2001"},"content":"     * @throws ShibaException If the task number is missing, invalid, or there are no tasks in the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"Bombbird2001"},"content":"    protected int checkTaskNumber(String[] cmd) throws ShibaException {","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"Bombbird2001"},"content":"        if (cmd.length \u003c 2) {","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"Bombbird2001"},"content":"            throw new InvalidCommandException(\"Please specify a task number!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"Bombbird2001"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"Bombbird2001"},"content":"            int taskNumber \u003d Integer.parseInt(cmd[1]);","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"Bombbird2001"},"content":"            if (taskNumber \u003c 1 || taskNumber \u003e tasks.size()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"Bombbird2001"},"content":"                if (taskNumber \u003e tasks.size() \u0026\u0026 tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"Bombbird2001"},"content":"                    throw new EmptyTasksException();","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"Bombbird2001"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"Bombbird2001"},"content":"                throw new InvalidCommandException(\"Please specify a valid task number!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"Bombbird2001"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"Bombbird2001"},"content":"            return taskNumber;","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"Bombbird2001"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"Bombbird2001"},"content":"            throw new InvalidCommandException(\"Invalid task number! Please enter a positive integer.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"Bombbird2001"},"content":"     * Adds a task to the list.","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"Bombbird2001"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"Bombbird2001"},"content":"     * @throws ShibaException If there is an error saving the task after adding it.","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"Bombbird2001"},"content":"    protected void addTask(ShibaTask task) throws ShibaException {","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"Bombbird2001"},"content":"        tasks.addTask(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"Bombbird2001"},"content":"        Replier.printWithNoIndents(\"Woof! I\u0027ve added this task:\");","lastModifiedDate":"2023-09-04"},{"lineNumber":83,"author":{"gitId":"Bombbird2001"},"content":"        Replier.printWithOneIndent(task.toString());","lastModifiedDate":"2023-09-04"},{"lineNumber":84,"author":{"gitId":"Bombbird2001"},"content":"        String taskWord \u003d tasks.size() \u003d\u003d 1 ? \" task\" : \" tasks\";","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"Bombbird2001"},"content":"        Replier.printWithNoIndents(\"You now have \" + tasks.size() + taskWord","lastModifiedDate":"2023-09-04"},{"lineNumber":86,"author":{"gitId":"Bombbird2001"},"content":"                + \" in the list. Now gimme some treats.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"Bombbird2001"},"content":"        Replier.reply();","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":89,"author":{"gitId":"Bombbird2001"},"content":"        tasks.save();","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Bombbird2001":91}},{"path":"src/main/java/shiba/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.commands;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import shiba.exceptions.ShibaException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import shiba.tasks.PersistentTaskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import shiba.tasks.TodoTask;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":" * Represents a command to add a todo task","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"public class TodoCommand extends ShibaCommand {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"    private final String fullCmd;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"     * Constructor for TodoCommand, which adds a task of type todo","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"     * @param tasks Current state of task list","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"     * @param cmd Full command string","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"    public TodoCommand(PersistentTaskList tasks, String cmd) {","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"        super(tasks);","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"        fullCmd \u003d cmd;","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"    public void execute() throws ShibaException {","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"        TodoTask todo \u003d TodoTask.fromCmd(fullCmd);","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"        addTask(todo);","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Bombbird2001":32}},{"path":"src/main/java/shiba/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.commands;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import shiba.exceptions.ShibaException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import shiba.tasks.PersistentTaskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import shiba.tasks.ShibaTask;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import shiba.ui.Replier;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":" * Represents a command to mark a task as not done","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"public class UnmarkCommand extends ShibaCommand {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"    private final String[] params;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"     * Constructor for UnmarkCommand, which marks a task as not done","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"     * @param tasks Current state of task list","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"     * @param cmd Full command string","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"    public UnmarkCommand(PersistentTaskList tasks, String cmd) {","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"        super(tasks);","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"        params \u003d cmd.split(\" \");","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"    public void execute() throws ShibaException {","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"        int taskNumber \u003d checkTaskNumber(params);","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"        ShibaTask task \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"        boolean res \u003d task.markNotDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"        if (res) {","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"            Replier.printWithNoIndents(\"Woof! I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"        } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"            Replier.printWithNoIndents(\"Woof! You have not done this task yet!\");","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"        Replier.printWithOneIndent(task.toString());","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"        Replier.reply();","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"        tasks.save();","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Bombbird2001":44}},{"path":"src/main/java/shiba/datetimeformats/DateOptionalTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.datetimeformats;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"import shiba.exceptions.InvalidCommandException;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":" * Represents a date with an optional time.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"public class DateOptionalTime implements Comparable\u003cDateOptionalTime\u003e {","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"    private static final String DATE_DISPLAY_FORMAT \u003d \"d LLL yyyy\";","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"    private static final String DATE_TIME_DISPLAY_FORMAT \u003d \"d LLL yyyy h:mma\";","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"    private LocalDate date;","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"     * Constructs a DateOptionalTime object from a string. Accepts formats are the default ISO,","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"     * default ISO with T replaced as space, and default ISO date only.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"     * @param dateOptionalTime The string to parse.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"     * @throws InvalidCommandException If the string is not in any of the accepted formats.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"    public DateOptionalTime(String dateOptionalTime) throws InvalidCommandException {","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"        String strippedString \u003d dateOptionalTime.strip();","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"        // Try with the default ISO format first","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"            dateTime \u003d LocalDateTime.parse(strippedString);","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"            return;","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"        } catch (DateTimeParseException ignored) {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"            // Ignore exception, try to parse with next format","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"        // Try with the T removed","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"            dateTime \u003d LocalDateTime.parse(strippedString, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"            return;","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"        } catch (DateTimeParseException ignored) {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"            // Ignore exception, try to parse with next format","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"        // Try with default ISO date only format","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"Bombbird2001"},"content":"            date \u003d LocalDate.parse(strippedString);","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"Bombbird2001"},"content":"            throw new InvalidCommandException(\"Invalid date! Must be a valid date in the format\"","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"Bombbird2001"},"content":"                    + \" YYYY-MM-DD or YYYY-MM-DD HH:mm.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"Bombbird2001"},"content":"     * Gets a readable string representation (day month year hour min am/pm)","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"Bombbird2001"},"content":"     * of a DateOptionalTime object for display.","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"Bombbird2001"},"content":"     * @return The string representation of the DateOptionalTime object.","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"Bombbird2001"},"content":"    public String getDisplayRepr() {","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"Bombbird2001"},"content":"        if (dateTime !\u003d null) {","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"Bombbird2001"},"content":"            return dateTime.format(DateTimeFormatter.ofPattern(DATE_TIME_DISPLAY_FORMAT));","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"Bombbird2001"},"content":"        return date.format(DateTimeFormatter.ofPattern(DATE_DISPLAY_FORMAT));","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"Bombbird2001"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"Bombbird2001"},"content":"    public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"Bombbird2001"},"content":"        if (dateTime !\u003d null) {","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"Bombbird2001"},"content":"            return dateTime.toString();","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"Bombbird2001"},"content":"        return date.toString();","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":79,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":80,"author":{"gitId":"Bombbird2001"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-18"},{"lineNumber":81,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":82,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":83,"author":{"gitId":"Bombbird2001"},"content":"    public int compareTo(DateOptionalTime o) {","lastModifiedDate":"2023-09-18"},{"lineNumber":84,"author":{"gitId":"Bombbird2001"},"content":"        // Case 1: Both are dates","lastModifiedDate":"2023-09-18"},{"lineNumber":85,"author":{"gitId":"Bombbird2001"},"content":"        if (date !\u003d null \u0026\u0026 o.date !\u003d null) {","lastModifiedDate":"2023-09-18"},{"lineNumber":86,"author":{"gitId":"Bombbird2001"},"content":"            return date.compareTo(o.date);","lastModifiedDate":"2023-09-18"},{"lineNumber":87,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":88,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":89,"author":{"gitId":"Bombbird2001"},"content":"        // Case 2: Both are datetimes","lastModifiedDate":"2023-09-18"},{"lineNumber":90,"author":{"gitId":"Bombbird2001"},"content":"        if (dateTime !\u003d null \u0026\u0026 o.dateTime !\u003d null) {","lastModifiedDate":"2023-09-18"},{"lineNumber":91,"author":{"gitId":"Bombbird2001"},"content":"            return dateTime.compareTo(o.dateTime);","lastModifiedDate":"2023-09-18"},{"lineNumber":92,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":93,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":94,"author":{"gitId":"Bombbird2001"},"content":"        // Case 3: One is a date, other is datetime - convert datetime to date","lastModifiedDate":"2023-09-18"},{"lineNumber":95,"author":{"gitId":"Bombbird2001"},"content":"        if (date !\u003d null \u0026\u0026 o.dateTime !\u003d null) {","lastModifiedDate":"2023-09-18"},{"lineNumber":96,"author":{"gitId":"Bombbird2001"},"content":"            return date.compareTo(o.dateTime.toLocalDate());","lastModifiedDate":"2023-09-18"},{"lineNumber":97,"author":{"gitId":"Bombbird2001"},"content":"        } else if (dateTime !\u003d null \u0026\u0026 o.date !\u003d null) {","lastModifiedDate":"2023-09-18"},{"lineNumber":98,"author":{"gitId":"Bombbird2001"},"content":"            return dateTime.toLocalDate().compareTo(o.date);","lastModifiedDate":"2023-09-18"},{"lineNumber":99,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":100,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":101,"author":{"gitId":"Bombbird2001"},"content":"        assert false;","lastModifiedDate":"2023-09-18"},{"lineNumber":102,"author":{"gitId":"Bombbird2001"},"content":"        return 0;","lastModifiedDate":"2023-09-18"},{"lineNumber":103,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":104,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"Bombbird2001":104}},{"path":"src/main/java/shiba/exceptions/EmptyTasksException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.exceptions;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":" * Represents an exception that occurs when an operation is performed on an empty list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"public class EmptyTasksException extends ShibaException {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"    public EmptyTasksException() {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"        super(\"You don\u0027t have any tasks yet!\");","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Bombbird2001":10}},{"path":"src/main/java/shiba/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.exceptions;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":" * Represents an exception that occurs when an invalid command is given.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"public class InvalidCommandException extends ShibaException {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"    public InvalidCommandException(String msg) {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"        super(msg);","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Bombbird2001":10}},{"path":"src/main/java/shiba/exceptions/ShibaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.exceptions;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":" * Represents an exception that occurs when an error occurs in Shiba.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"public class ShibaException extends Exception {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"    public ShibaException(String message) {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"        super(message);","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Bombbird2001":10}},{"path":"src/main/java/shiba/filehandler/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.filehandler;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import java.io.File;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"import java.util.List;","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"import shiba.exceptions.ShibaException;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"import shiba.parsers.SpaceSeparatedValuesParser;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"import shiba.tasks.ShibaTask;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"import shiba.ui.Replier;","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":" * Handles the saving and reading of tasks to and from the disk.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"public class Storage {","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"    private final String dataPath;","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"     * Creates a new Storage object.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"     * @param dataPath Path to the file to be used for saving and reading tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"    public Storage(String dataPath) {","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"        this.dataPath \u003d dataPath;","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"     * Saves the tasks to the disk, creating the file if it does not exist.","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"     * @param tasks List of tasks to be saved.","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"     * @throws ShibaException If there is an error saving the tasks.","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"    public void saveTasks(List\u003cShibaTask\u003e tasks) throws ShibaException {","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"            File file \u003d new File(dataPath);","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"            assert file.exists();","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"            throw new ShibaException(\"Error creating save file!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"Bombbird2001"},"content":"        try (FileWriter fw \u003d new FileWriter(dataPath, StandardCharsets.UTF_8)) {","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"Bombbird2001"},"content":"            boolean isFirstLineWritten \u003d false;","lastModifiedDate":"2023-09-17"},{"lineNumber":52,"author":{"gitId":"Bombbird2001"},"content":"            for (ShibaTask task : tasks) {","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"Bombbird2001"},"content":"                if (isFirstLineWritten) {","lastModifiedDate":"2023-09-17"},{"lineNumber":54,"author":{"gitId":"Bombbird2001"},"content":"                    fw.write(\"\\n\");","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"Bombbird2001"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"Bombbird2001"},"content":"                fw.write(task.toSaveString());","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"Bombbird2001"},"content":"                isFirstLineWritten \u003d true;","lastModifiedDate":"2023-09-17"},{"lineNumber":58,"author":{"gitId":"Bombbird2001"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"Bombbird2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"Bombbird2001"},"content":"            throw new ShibaException(\"Error saving tasks to file!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"Bombbird2001"},"content":"     * Reads the saved tasks from the disk.","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"Bombbird2001"},"content":"     * @return List of tasks read from the disk.","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"Bombbird2001"},"content":"     * @throws ShibaException If there is an error reading the tasks.","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"Bombbird2001"},"content":"    public List\u003cShibaTask\u003e readSavedTasks() throws ShibaException {","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"Bombbird2001"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"Bombbird2001"},"content":"            File file \u003d new File(dataPath);","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"Bombbird2001"},"content":"            ArrayList\u003cShibaTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"Bombbird2001"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"Bombbird2001"},"content":"                return tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"Bombbird2001"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":79,"author":{"gitId":"Bombbird2001"},"content":"            boolean isErrorEncountered \u003d false;","lastModifiedDate":"2023-09-18"},{"lineNumber":80,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":81,"author":{"gitId":"Bombbird2001"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(dataPath, StandardCharsets.UTF_8));","lastModifiedDate":"2023-09-18"},{"lineNumber":82,"author":{"gitId":"Bombbird2001"},"content":"            String nextLine \u003d br.readLine();","lastModifiedDate":"2023-09-18"},{"lineNumber":83,"author":{"gitId":"Bombbird2001"},"content":"            while (nextLine !\u003d null) {","lastModifiedDate":"2023-09-18"},{"lineNumber":84,"author":{"gitId":"Bombbird2001"},"content":"                ShibaTask taskParsed \u003d ShibaTask.fromSaveParams(SpaceSeparatedValuesParser.parse(nextLine));","lastModifiedDate":"2023-09-18"},{"lineNumber":85,"author":{"gitId":"Bombbird2001"},"content":"                if (taskParsed !\u003d null) {","lastModifiedDate":"2023-08-26"},{"lineNumber":86,"author":{"gitId":"Bombbird2001"},"content":"                    tasks.add(taskParsed);","lastModifiedDate":"2023-08-26"},{"lineNumber":87,"author":{"gitId":"Bombbird2001"},"content":"                } else {","lastModifiedDate":"2023-09-18"},{"lineNumber":88,"author":{"gitId":"Bombbird2001"},"content":"                    isErrorEncountered \u003d true;","lastModifiedDate":"2023-09-18"},{"lineNumber":89,"author":{"gitId":"Bombbird2001"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":90,"author":{"gitId":"Bombbird2001"},"content":"                nextLine \u003d br.readLine();","lastModifiedDate":"2023-09-18"},{"lineNumber":91,"author":{"gitId":"Bombbird2001"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":92,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":93,"author":{"gitId":"Bombbird2001"},"content":"            if (isErrorEncountered) {","lastModifiedDate":"2023-09-18"},{"lineNumber":94,"author":{"gitId":"Bombbird2001"},"content":"                Replier.printWithNoIndents(\"Woof! One or more tasks could not be read from save file!\");","lastModifiedDate":"2023-09-18"},{"lineNumber":95,"author":{"gitId":"Bombbird2001"},"content":"                Replier.replyError();","lastModifiedDate":"2023-09-18"},{"lineNumber":96,"author":{"gitId":"Bombbird2001"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":97,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":98,"author":{"gitId":"Bombbird2001"},"content":"            return tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":99,"author":{"gitId":"Bombbird2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":100,"author":{"gitId":"Bombbird2001"},"content":"            throw new ShibaException(\"Error reading tasks from save file! Consider running this program \"","lastModifiedDate":"2023-09-18"},{"lineNumber":101,"author":{"gitId":"Bombbird2001"},"content":"                    + \"from another directory.\");","lastModifiedDate":"2023-09-18"},{"lineNumber":102,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":103,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":104,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"Bombbird2001":104}},{"path":"src/main/java/shiba/parsers/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.parsers;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import shiba.commands.BellyRubCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import shiba.commands.BoopCommand;","lastModifiedDate":"2023-09-17"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import shiba.commands.DeadlineCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import shiba.commands.DeleteCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"import shiba.commands.EventCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"import shiba.commands.FindCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"import shiba.commands.HelpCommand;","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"import shiba.commands.ListCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"import shiba.commands.MarkCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"import shiba.commands.PatCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"import shiba.commands.ShibaCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"import shiba.commands.TodoCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"import shiba.commands.UnmarkCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"import shiba.exceptions.ShibaException;","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"import shiba.tasks.PersistentTaskList;","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"import shiba.ui.Replier;","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":" * Parses user input and executes the corresponding commands.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"public class CommandParser {","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"    private final PersistentTaskList tasks;","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"     * Creates a new CommandParser object.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"     * @param tasks TaskList object to be used by the parser.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"    public CommandParser(PersistentTaskList tasks) {","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"     * Processes user input continuously until bye command is issued","lastModifiedDate":"2023-09-17"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"     * @return True if the bye command is issued, false otherwise.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"    public boolean processUserInput(String input) {","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"        String commandStr \u003d input.split(\" \")[0];","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"            ShibaCommand.CommandType command \u003d ShibaCommand.CommandType.valueOf(","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"                    commandStr.toUpperCase());","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"            ShibaCommand shibaCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"            switch (command) {","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"            case LIST:","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"Bombbird2001"},"content":"                shibaCommand \u003d new ListCommand(tasks);","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"                break;","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"Bombbird2001"},"content":"            case MARK:","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"Bombbird2001"},"content":"                shibaCommand \u003d new MarkCommand(tasks, input);","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"Bombbird2001"},"content":"                break;","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"Bombbird2001"},"content":"            case UNMARK:","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"Bombbird2001"},"content":"                shibaCommand \u003d new UnmarkCommand(tasks, input);","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"Bombbird2001"},"content":"                break;","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"Bombbird2001"},"content":"            case TODO:","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"Bombbird2001"},"content":"                shibaCommand \u003d new TodoCommand(tasks, input);","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"Bombbird2001"},"content":"                break;","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"Bombbird2001"},"content":"            case DEADLINE:","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"Bombbird2001"},"content":"                shibaCommand \u003d new DeadlineCommand(tasks, input);","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"Bombbird2001"},"content":"                break;","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"Bombbird2001"},"content":"            case EVENT:","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"Bombbird2001"},"content":"                shibaCommand \u003d new EventCommand(tasks, input);","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"Bombbird2001"},"content":"                break;","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"Bombbird2001"},"content":"            case DELETE:","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"Bombbird2001"},"content":"                shibaCommand \u003d new DeleteCommand(tasks, input);","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"Bombbird2001"},"content":"                break;","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"Bombbird2001"},"content":"            case FIND:","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"Bombbird2001"},"content":"                shibaCommand \u003d new FindCommand(tasks, input);","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"Bombbird2001"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"Bombbird2001"},"content":"            case PAT:","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"Bombbird2001"},"content":"                shibaCommand \u003d new PatCommand(tasks);","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"Bombbird2001"},"content":"                break;","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"Bombbird2001"},"content":"            case BELLYRUB:","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"Bombbird2001"},"content":"                shibaCommand \u003d new BellyRubCommand(tasks);","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"Bombbird2001"},"content":"                break;","lastModifiedDate":"2023-09-04"},{"lineNumber":77,"author":{"gitId":"Bombbird2001"},"content":"            case HELP:","lastModifiedDate":"2023-09-10"},{"lineNumber":78,"author":{"gitId":"Bombbird2001"},"content":"                shibaCommand \u003d new HelpCommand(tasks, input);","lastModifiedDate":"2023-09-10"},{"lineNumber":79,"author":{"gitId":"Bombbird2001"},"content":"                break;","lastModifiedDate":"2023-09-10"},{"lineNumber":80,"author":{"gitId":"Bombbird2001"},"content":"            case BOOP:","lastModifiedDate":"2023-09-17"},{"lineNumber":81,"author":{"gitId":"Bombbird2001"},"content":"                shibaCommand \u003d new BoopCommand(tasks);","lastModifiedDate":"2023-09-17"},{"lineNumber":82,"author":{"gitId":"Bombbird2001"},"content":"                break;","lastModifiedDate":"2023-09-17"},{"lineNumber":83,"author":{"gitId":"Bombbird2001"},"content":"            case BYE:","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"Bombbird2001"},"content":"                return true;","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"Bombbird2001"},"content":"            default:","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"Bombbird2001"},"content":"                throw new IllegalArgumentException();","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"Bombbird2001"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"Bombbird2001"},"content":"            shibaCommand.execute();","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"Bombbird2001"},"content":"        } catch (ShibaException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"Bombbird2001"},"content":"            Replier.printException(e);","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"Bombbird2001"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"Bombbird2001"},"content":"            Replier.printUnknownCommand(commandStr);","lastModifiedDate":"2023-09-18"},{"lineNumber":93,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"Bombbird2001"},"content":"        return false;","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Bombbird2001":97}},{"path":"src/main/java/shiba/parsers/SpaceSeparatedValuesParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.parsers;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import java.util.List;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":" * Parses space-separated values.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"public class SpaceSeparatedValuesParser {","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"     * Converts the given parameters into an escaped space-separated string.","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"     * @param params Vararg array of parameters to be converted.","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"     * @return A space-separated string of the given parameters.","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"    public static String convert(String... params) {","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"        for (String param : params) {","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"            if (sb.length() !\u003d 0) {","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"                sb.append(\" \");","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"            sb.append(param.replace(\" \", \"\\\\ \"));","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"        return sb.toString();","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"     * Parses the given space-separated string into a list of strings.","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"     * @param line The space-separated string to be parsed.","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"     * @return A list of strings parsed from the given space-separated string.","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"    public static List\u003cString\u003e parse(String line) {","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"        ArrayList\u003cString\u003e params \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"        int index \u003d 0;","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"        while (index \u003c line.length()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"            char c \u003d line.charAt(index);","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"            if (c \u003d\u003d \u0027\\\\\u0027 \u0026\u0026 index \u003c line.length() - 1 \u0026\u0026 line.charAt(index + 1) \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"                sb.append(\u0027 \u0027);","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"                index +\u003d 2;","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"            } else if (c \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"                params.add(sb.toString());","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"                sb.setLength(0);","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"                index++;","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"            } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"Bombbird2001"},"content":"                sb.append(c);","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"                index++;","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"Bombbird2001"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"Bombbird2001"},"content":"        if (sb.length() !\u003d 0) {","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"Bombbird2001"},"content":"            params.add(sb.toString());","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"Bombbird2001"},"content":"        return params;","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"Bombbird2001":58}},{"path":"src/main/java/shiba/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import shiba.datetimeformats.DateOptionalTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"import shiba.exceptions.InvalidCommandException;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"import shiba.parsers.SpaceSeparatedValuesParser;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":" * Represents a task with a datetime deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"public class DeadlineTask extends ShibaTask {","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"    private static final Pattern DEADLINE_REGEX \u003d Pattern.compile(\"(.+?) /by (.+)\");","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"    private final DateOptionalTime deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"     * Creates a DeadlineTask.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"     * @param deadline The deadline of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"     * @throws InvalidCommandException If the command is invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"    public DeadlineTask(String name, String deadline) throws InvalidCommandException {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"        super(name, TaskType.DEADLINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"        this.deadline \u003d new DateOptionalTime(deadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"        return SpaceSeparatedValuesParser.convert(\"D\", isDone ? \"1\" : \"0\", name, deadline.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"        return super.toString() + \" (by: \" + deadline.getDisplayRepr() + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"     * Parses a DeadlineTask from a command.","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"     * @param cmd The command to be parsed.","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"Bombbird2001"},"content":"     * @return The DeadlineTask parsed from the command, or null if the command is invalid.","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"Bombbird2001"},"content":"     * @throws InvalidCommandException If the command is invalid.","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"Bombbird2001"},"content":"    public static DeadlineTask fromCmd(String cmd) throws InvalidCommandException {","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"Bombbird2001"},"content":"        String[] cmdSplit \u003d cmd.split(\" \", 2);","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"Bombbird2001"},"content":"        if (cmdSplit.length !\u003d 2) {","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"Bombbird2001"},"content":"            throw new InvalidCommandException(\"Deadline name should not be empty!\");","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"Bombbird2001"},"content":"        Matcher matcher1 \u003d DEADLINE_REGEX.matcher(cmdSplit[1]);","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"Bombbird2001"},"content":"        if (matcher1.find()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"Bombbird2001"},"content":"            return new DeadlineTask(matcher1.group(1), matcher1.group(2));","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"Bombbird2001"},"content":"        throw new InvalidCommandException(\"Invalid deadline format! Deadline name,\"","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"Bombbird2001"},"content":"                + \" /by parameter must be present and not empty.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Bombbird2001":67}},{"path":"src/main/java/shiba/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import shiba.datetimeformats.DateOptionalTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"import shiba.exceptions.InvalidCommandException;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"import shiba.parsers.SpaceSeparatedValuesParser;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":" * Represents a task that starts at a specific datetime and ends at a specific datetime.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"public class EventTask extends ShibaTask {","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"    private static final Pattern OPTION_1_REGEX \u003d Pattern.compile(\"(.+?) /from (.+?) /to (.+)\");","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"    private static final Pattern OPTION_2_REGEX \u003d Pattern.compile(\"(.+?) /to (.+?) /from (.+)\");","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"    private final DateOptionalTime startTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"    private final DateOptionalTime endTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"     * Creates a new EventTask.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"     * @param from The start time of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"     * @param to The end time of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"     * @throws InvalidCommandException If the command is invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"    public EventTask(String name, String from, String to) throws InvalidCommandException {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"        super(name, TaskType.EVENT);","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"        startTime \u003d new DateOptionalTime(from);","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"        endTime \u003d new DateOptionalTime(to);","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"        if (startTime.compareTo(endTime) \u003e 0) {","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"            throw new InvalidCommandException(\"Start time cannot be after end time!\");","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"        return SpaceSeparatedValuesParser.convert(\"E\", isDone ? \"1\" : \"0\", name,","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"                startTime.toString(), endTime.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Bombbird2001"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Bombbird2001"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Bombbird2001"},"content":"        return super.toString() + \" (from: \" + startTime.getDisplayRepr() + \" to: \"","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Bombbird2001"},"content":"                + endTime.getDisplayRepr() + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"Bombbird2001"},"content":"     * Parses a EventTask from a command.","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"Bombbird2001"},"content":"     * @param cmd The command to be parsed.","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"Bombbird2001"},"content":"     * @return The EventTask parsed from the command, or null if the command is invalid.","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"Bombbird2001"},"content":"     * @throws InvalidCommandException If the command is invalid.","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"Bombbird2001"},"content":"    public static EventTask fromCmd(String cmd) throws InvalidCommandException {","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"Bombbird2001"},"content":"        String[] cmdSplit \u003d cmd.split(\" \", 2);","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"Bombbird2001"},"content":"        if (cmdSplit.length !\u003d 2) {","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"Bombbird2001"},"content":"            throw new InvalidCommandException(\"Event name should not be empty!\");","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"Bombbird2001"},"content":"        Matcher matcher1 \u003d OPTION_1_REGEX.matcher(cmdSplit[1]);","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"Bombbird2001"},"content":"        if (matcher1.find()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"Bombbird2001"},"content":"            return new EventTask(matcher1.group(1), matcher1.group(2), matcher1.group(3));","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":74,"author":{"gitId":"Bombbird2001"},"content":"        Matcher matcher2 \u003d OPTION_2_REGEX.matcher(cmdSplit[1]);","lastModifiedDate":"2023-09-10"},{"lineNumber":75,"author":{"gitId":"Bombbird2001"},"content":"        if (matcher2.find()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"Bombbird2001"},"content":"            return new EventTask(matcher2.group(1), matcher2.group(3), matcher2.group(2));","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":78,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":79,"author":{"gitId":"Bombbird2001"},"content":"        throw new InvalidCommandException(\"Invalid event format! Event name, /from and\"","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"Bombbird2001"},"content":"                + \" /to parameters must be present and not empty.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":82,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Bombbird2001":82}},{"path":"src/main/java/shiba/tasks/FilePersistentTaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import java.util.List;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"import shiba.exceptions.ShibaException;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"import shiba.filehandler.Storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"import shiba.ui.Replier;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":" * Implementation of a persistent task list that saves tasks to a file.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"public class FilePersistentTaskList implements PersistentTaskList {","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"    private final ArrayList\u003cShibaTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"    private final Storage storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"     * Constructs a FilePersistentTaskList object.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"     * @param dataPath Path to the file where tasks are saved.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"    public FilePersistentTaskList(String dataPath) {","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"        storage \u003d new Storage(dataPath);","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"            tasks.addAll(storage.readSavedTasks());","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"        } catch (ShibaException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"            Replier.printException(e);","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"    public void addTask(ShibaTask task) {","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"    public ShibaTask removeIndex(int index) {","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"        return tasks.remove(index);","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Bombbird2001"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"Bombbird2001"},"content":"    public ShibaTask get(int index) {","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"Bombbird2001"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Bombbird2001"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"Bombbird2001"},"content":"    public int size() {","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"Bombbird2001"},"content":"        return tasks.size();","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"Bombbird2001"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"Bombbird2001"},"content":"    public void save() throws ShibaException {","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"Bombbird2001"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"Bombbird2001"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"Bombbird2001"},"content":"    public List\u003cShibaTask\u003e findTasksWithKeyword(String keyword) {","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"Bombbird2001"},"content":"        return tasks.stream().filter(task -\u003e task.containsKeyword(keyword)).collect(Collectors.toList());","lastModifiedDate":"2023-09-09"},{"lineNumber":79,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Bombbird2001":80}},{"path":"src/main/java/shiba/tasks/PersistentTaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.tasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import java.util.List;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import shiba.exceptions.ShibaException;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":" * Interface for a persistent task list, that is, tasks can be saved between","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":" * runs of the program.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"public interface PersistentTaskList {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"     * Adds a task to the list.","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"     * @param task The task to add.","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"    void addTask(ShibaTask task);","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"     * Removes the task at the specified index.","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"     * @param index Index of the task to remove.","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"    ShibaTask removeIndex(int index);","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"     * Gets the task at the specified index.","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"     * @param index Index of the task to get.","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"    ShibaTask get(int index);","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"     * Gets the number of tasks in the list.","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"    int size();","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"     * Saves the current task list state to storage.","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"     * @throws ShibaException If there is an error saving the tasks.","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"    void save() throws ShibaException;","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"     * Finds tasks containing the specified keyword.","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"Bombbird2001"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"Bombbird2001"},"content":"     * @return A list of tasks containing the specified keyword.","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"Bombbird2001"},"content":"    List\u003cShibaTask\u003e findTasksWithKeyword(String keyword);","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Bombbird2001":55}},{"path":"src/main/java/shiba/tasks/ShibaTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import java.util.List;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import shiba.exceptions.InvalidCommandException;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":" * Represents a task that can be added to the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"public abstract class ShibaTask {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"    protected enum TaskType {","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"        TODO,","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"        DEADLINE,","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"        EVENT","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"    protected final String name;","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"    private final TaskType type;","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"    protected ShibaTask(String name, TaskType type) {","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"        this.name \u003d name.strip();","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"     * Marks the task as done, if not already done.","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"     * @return True if the task was not already done, else false.","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"    public boolean markDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"        if (isDone) {","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"            return false;","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"        return true;","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"     * Marks the task as not done, if already done.","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"     * @return True if the task was already done, else false.","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"    public boolean markNotDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"        if (!isDone) {","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"            return false;","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"Bombbird2001"},"content":"        return true;","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"Bombbird2001"},"content":"     * Gets the label in the form of [X] for the task type.","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"Bombbird2001"},"content":"     * @return The label for the task type.","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"Bombbird2001"},"content":"    private String getTaskLabel() {","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"Bombbird2001"},"content":"        switch (type) {","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"Bombbird2001"},"content":"        case TODO:","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"Bombbird2001"},"content":"            return \"[T]\";","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"Bombbird2001"},"content":"        case DEADLINE:","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"Bombbird2001"},"content":"            return \"[D]\";","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"Bombbird2001"},"content":"        case EVENT:","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"Bombbird2001"},"content":"            return \"[E]\";","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"Bombbird2001"},"content":"        default:","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"Bombbird2001"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"Bombbird2001"},"content":"        return \"[?]\";","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"Bombbird2001"},"content":"     * Converts the task to a string to be saved to disk.","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"Bombbird2001"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"Bombbird2001"},"content":"    public abstract String toSaveString();","lastModifiedDate":"2023-08-26"},{"lineNumber":79,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":80,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":81,"author":{"gitId":"Bombbird2001"},"content":"     * Parses a task from the provided string parameters.","lastModifiedDate":"2023-08-26"},{"lineNumber":82,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":83,"author":{"gitId":"Bombbird2001"},"content":"     * @param params List of string parameters to parse tasks from.","lastModifiedDate":"2023-08-26"},{"lineNumber":84,"author":{"gitId":"Bombbird2001"},"content":"     * @return The parsed task, or null if the task cannot be parsed from the provided parameters","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"Bombbird2001"},"content":"     *     due to insufficient or incorrect parameters.","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":87,"author":{"gitId":"Bombbird2001"},"content":"    public static ShibaTask fromSaveParams(List\u003cString\u003e params) {","lastModifiedDate":"2023-08-26"},{"lineNumber":88,"author":{"gitId":"Bombbird2001"},"content":"        if (params.size() \u003c 3) {","lastModifiedDate":"2023-08-26"},{"lineNumber":89,"author":{"gitId":"Bombbird2001"},"content":"            return null;","lastModifiedDate":"2023-08-26"},{"lineNumber":90,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":91,"author":{"gitId":"Bombbird2001"},"content":"        ShibaTask parsedTask;","lastModifiedDate":"2023-08-26"},{"lineNumber":92,"author":{"gitId":"Bombbird2001"},"content":"        boolean isDone \u003d params.get(1).equals(\"1\");","lastModifiedDate":"2023-08-26"},{"lineNumber":93,"author":{"gitId":"Bombbird2001"},"content":"        String name \u003d params.get(2);","lastModifiedDate":"2023-08-26"},{"lineNumber":94,"author":{"gitId":"Bombbird2001"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":95,"author":{"gitId":"Bombbird2001"},"content":"            switch (params.get(0)) {","lastModifiedDate":"2023-08-26"},{"lineNumber":96,"author":{"gitId":"Bombbird2001"},"content":"            case \"T\":","lastModifiedDate":"2023-08-26"},{"lineNumber":97,"author":{"gitId":"Bombbird2001"},"content":"                parsedTask \u003d new TodoTask(name);","lastModifiedDate":"2023-08-26"},{"lineNumber":98,"author":{"gitId":"Bombbird2001"},"content":"                break;","lastModifiedDate":"2023-08-26"},{"lineNumber":99,"author":{"gitId":"Bombbird2001"},"content":"            case \"D\":","lastModifiedDate":"2023-08-26"},{"lineNumber":100,"author":{"gitId":"Bombbird2001"},"content":"                if (params.size() \u003c 4) {","lastModifiedDate":"2023-08-26"},{"lineNumber":101,"author":{"gitId":"Bombbird2001"},"content":"                    return null;","lastModifiedDate":"2023-08-26"},{"lineNumber":102,"author":{"gitId":"Bombbird2001"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":103,"author":{"gitId":"Bombbird2001"},"content":"                parsedTask \u003d new DeadlineTask(name, params.get(3));","lastModifiedDate":"2023-08-26"},{"lineNumber":104,"author":{"gitId":"Bombbird2001"},"content":"                break;","lastModifiedDate":"2023-08-26"},{"lineNumber":105,"author":{"gitId":"Bombbird2001"},"content":"            case \"E\":","lastModifiedDate":"2023-08-26"},{"lineNumber":106,"author":{"gitId":"Bombbird2001"},"content":"                if (params.size() \u003c 5) {","lastModifiedDate":"2023-08-26"},{"lineNumber":107,"author":{"gitId":"Bombbird2001"},"content":"                    return null;","lastModifiedDate":"2023-08-26"},{"lineNumber":108,"author":{"gitId":"Bombbird2001"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":109,"author":{"gitId":"Bombbird2001"},"content":"                parsedTask \u003d new EventTask(name, params.get(3), params.get(4));","lastModifiedDate":"2023-08-26"},{"lineNumber":110,"author":{"gitId":"Bombbird2001"},"content":"                break;","lastModifiedDate":"2023-08-26"},{"lineNumber":111,"author":{"gitId":"Bombbird2001"},"content":"            default:","lastModifiedDate":"2023-08-26"},{"lineNumber":112,"author":{"gitId":"Bombbird2001"},"content":"                return null;","lastModifiedDate":"2023-08-26"},{"lineNumber":113,"author":{"gitId":"Bombbird2001"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":114,"author":{"gitId":"Bombbird2001"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":115,"author":{"gitId":"Bombbird2001"},"content":"            return null;","lastModifiedDate":"2023-08-26"},{"lineNumber":116,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":117,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":118,"author":{"gitId":"Bombbird2001"},"content":"        if (isDone) {","lastModifiedDate":"2023-08-26"},{"lineNumber":119,"author":{"gitId":"Bombbird2001"},"content":"            parsedTask.markDone();","lastModifiedDate":"2023-08-26"},{"lineNumber":120,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":121,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":122,"author":{"gitId":"Bombbird2001"},"content":"        return parsedTask;","lastModifiedDate":"2023-08-26"},{"lineNumber":123,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":124,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":125,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"Bombbird2001"},"content":"     * Checks if the task name contains the specified keyword.","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"Bombbird2001"},"content":"     * @param keyword The keyword to check for.","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"Bombbird2001"},"content":"     * @return True if the task name contains the keyword, else false.","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"Bombbird2001"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"Bombbird2001"},"content":"        return name.toLowerCase().contains(keyword.toLowerCase());","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"Bombbird2001"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":139,"author":{"gitId":"Bombbird2001"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":140,"author":{"gitId":"Bombbird2001"},"content":"        return getTaskLabel() + \"[\" + (isDone ? \"X\" : \" \") + \"] \" + name;","lastModifiedDate":"2023-08-26"},{"lineNumber":141,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":142,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Bombbird2001":142}},{"path":"src/main/java/shiba/tasks/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import shiba.exceptions.InvalidCommandException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import shiba.parsers.SpaceSeparatedValuesParser;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":" * Represents a task with no date, time constraints.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"public class TodoTask extends ShibaTask {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"     * Creates a TodoTask.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"    public TodoTask(String name) {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"        super(name, TaskType.TODO);","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"        return SpaceSeparatedValuesParser.convert(\"T\", isDone ? \"1\" : \"0\", name);","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"        return super.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"     * Parses a TodoTask from a command.","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"     * @param cmd The command to be parsed.","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"     * @return The TodoTask parsed from the command, or null if the command is invalid.","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"     * @throws InvalidCommandException If the command is invalid.","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"    public static TodoTask fromCmd(String cmd) throws InvalidCommandException {","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"        String[] cmdSplit \u003d cmd.split(\" \", 2);","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"        if (!cmdSplit[0].toUpperCase().equals(TaskType.TODO.name())) {","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"            throw new InvalidCommandException(\"Expected todo command!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"        if (cmdSplit.length !\u003d 2) {","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"Bombbird2001"},"content":"            throw new InvalidCommandException(\"Todo name should not be empty!\");","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"Bombbird2001"},"content":"        return new TodoTask(cmdSplit[1]);","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Bombbird2001":55}},{"path":"src/main/java/shiba/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import java.util.Timer;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import java.util.TimerTask;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"import shiba.Shiba;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"import shiba.ui.components.CommandInput;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"import shiba.ui.components.DialogBox;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"import shiba.ui.components.DialogNode;","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"import shiba.ui.components.KeyInputHandler;","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"import shiba.ui.components.SendButton;","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":" * Main JavaFX window for displaying the application UI.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"public class MainWindow extends Application {","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"    private static final int WINDOW_HEIGHT_CORRECTION \u003d 40;","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"    private static MainWindow singleton;","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"    private Shiba shiba;","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"    private DialogBox dialogBox;","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"    private Timer timer;","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"    private CommandInput userInput;","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"        AnchorPane root \u003d new AnchorPane();","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"        primaryStage.setScene(new Scene(root));","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"        // Dialog box","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"        dialogBox \u003d new DialogBox();","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"        root.getChildren().add(dialogBox);","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"        // Text input field","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"        userInput \u003d new CommandInput();","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"        root.getChildren().add(userInput);","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"Bombbird2001"},"content":"        // Send button","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"        Button sendButton \u003d new SendButton((event -\u003e sendInput()));","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"Bombbird2001"},"content":"        root.getChildren().add(sendButton);","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"Bombbird2001"},"content":"        // Setup key input handler, timer","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"Bombbird2001"},"content":"        primaryStage.getScene().setOnKeyPressed(new KeyInputHandler(this::sendInput));","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"Bombbird2001"},"content":"        timer \u003d new Timer();","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"Bombbird2001"},"content":"        primaryStage.setResizable(true);","lastModifiedDate":"2023-09-17"},{"lineNumber":57,"author":{"gitId":"Bombbird2001"},"content":"        primaryStage.setMinHeight(800 + WINDOW_HEIGHT_CORRECTION);","lastModifiedDate":"2023-09-17"},{"lineNumber":58,"author":{"gitId":"Bombbird2001"},"content":"        primaryStage.setMinWidth(500);","lastModifiedDate":"2023-09-17"},{"lineNumber":59,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"Bombbird2001"},"content":"        primaryStage.show();","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"Bombbird2001"},"content":"        assert singleton \u003d\u003d null : \"Multiple instances of MainWindow detected!\";","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"Bombbird2001"},"content":"        singleton \u003d this;","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"Bombbird2001"},"content":"        shiba \u003d new Shiba(\"SHIBA-BOT\", \"./shibaData/tasks.txt\");","lastModifiedDate":"2023-09-18"},{"lineNumber":66,"author":{"gitId":"Bombbird2001"},"content":"        shiba.start();","lastModifiedDate":"2023-09-18"},{"lineNumber":67,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":68,"author":{"gitId":"Bombbird2001"},"content":"        primaryStage.setTitle(shiba.getName());","lastModifiedDate":"2023-09-18"},{"lineNumber":69,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"Bombbird2001"},"content":"     * Adds a dialog node to the dialog box with the bot\u0027s reply.","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"Bombbird2001"},"content":"     * @param boxTexts Bot text nodes to be displayed in the dialog box","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"Bombbird2001"},"content":"     * @param isError Whether the bot\u0027s reply is an error message","lastModifiedDate":"2023-09-17"},{"lineNumber":76,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"Bombbird2001"},"content":"    public void addBotDialogNode(ArrayList\u003cDialogNode.SubNode\u003e boxTexts, boolean isError) {","lastModifiedDate":"2023-09-17"},{"lineNumber":78,"author":{"gitId":"Bombbird2001"},"content":"        dialogBox.addDialogNode(new DialogNode(false, isError, boxTexts));","lastModifiedDate":"2023-09-17"},{"lineNumber":79,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"Bombbird2001"},"content":"     * Closes the UI window after 1.5s.","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"Bombbird2001"},"content":"    public void close() {","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"Bombbird2001"},"content":"        timer.schedule(new TimerTask() {","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"Bombbird2001"},"content":"            @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"Bombbird2001"},"content":"            public void run() {","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"Bombbird2001"},"content":"                Platform.exit();","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"Bombbird2001"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"Bombbird2001"},"content":"        }, 1500);","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"Bombbird2001"},"content":"    public Timer getTimer() {","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"Bombbird2001"},"content":"        return timer;","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":98,"author":{"gitId":"Bombbird2001"},"content":"     * Cleans up the UI window, stopping any resources that may be preventing the program from terminating.","lastModifiedDate":"2023-09-04"},{"lineNumber":99,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":100,"author":{"gitId":"Bombbird2001"},"content":"    public void cleanUp() {","lastModifiedDate":"2023-09-04"},{"lineNumber":101,"author":{"gitId":"Bombbird2001"},"content":"        timer.cancel();","lastModifiedDate":"2023-09-04"},{"lineNumber":102,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":103,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":104,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":105,"author":{"gitId":"Bombbird2001"},"content":"     * Gets the input in the text field box and sends it to the bot.","lastModifiedDate":"2023-09-04"},{"lineNumber":106,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":107,"author":{"gitId":"Bombbird2001"},"content":"    private void sendInput() {","lastModifiedDate":"2023-09-04"},{"lineNumber":108,"author":{"gitId":"Bombbird2001"},"content":"        String input \u003d userInput.getText().trim();","lastModifiedDate":"2023-09-10"},{"lineNumber":109,"author":{"gitId":"Bombbird2001"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":110,"author":{"gitId":"Bombbird2001"},"content":"            return;","lastModifiedDate":"2023-09-04"},{"lineNumber":111,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":112,"author":{"gitId":"Bombbird2001"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-04"},{"lineNumber":113,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":114,"author":{"gitId":"Bombbird2001"},"content":"        ArrayList\u003cDialogNode.SubNode\u003e textNodes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-04"},{"lineNumber":115,"author":{"gitId":"Bombbird2001"},"content":"        textNodes.add(new DialogNode.SubNode(1, input));","lastModifiedDate":"2023-09-04"},{"lineNumber":116,"author":{"gitId":"Bombbird2001"},"content":"        dialogBox.addDialogNode(new DialogNode(true, false, textNodes));","lastModifiedDate":"2023-09-17"},{"lineNumber":117,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":118,"author":{"gitId":"Bombbird2001"},"content":"        // Simulate a delay","lastModifiedDate":"2023-09-04"},{"lineNumber":119,"author":{"gitId":"Bombbird2001"},"content":"        timer.schedule(new TimerTask() {","lastModifiedDate":"2023-09-04"},{"lineNumber":120,"author":{"gitId":"Bombbird2001"},"content":"            @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":121,"author":{"gitId":"Bombbird2001"},"content":"            public void run() {","lastModifiedDate":"2023-09-04"},{"lineNumber":122,"author":{"gitId":"Bombbird2001"},"content":"                shiba.processUserInput(input);","lastModifiedDate":"2023-09-18"},{"lineNumber":123,"author":{"gitId":"Bombbird2001"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":124,"author":{"gitId":"Bombbird2001"},"content":"        }, 1500);","lastModifiedDate":"2023-09-04"},{"lineNumber":125,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":126,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":127,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":128,"author":{"gitId":"Bombbird2001"},"content":"     * Returns the singleton instance of MainWindow.","lastModifiedDate":"2023-09-03"},{"lineNumber":129,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":130,"author":{"gitId":"Bombbird2001"},"content":"     * @return The singleton instance of MainWindow.","lastModifiedDate":"2023-09-03"},{"lineNumber":131,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":132,"author":{"gitId":"Bombbird2001"},"content":"    public static MainWindow getInstance() {","lastModifiedDate":"2023-09-03"},{"lineNumber":133,"author":{"gitId":"Bombbird2001"},"content":"        return singleton;","lastModifiedDate":"2023-09-03"},{"lineNumber":134,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":135,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"Bombbird2001":135}},{"path":"src/main/java/shiba/ui/Replier.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import shiba.exceptions.ShibaException;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"import shiba.ui.components.DialogNode;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":" * Represents a class that prints messages to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"public class Replier {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"    private static final ArrayList\u003cDialogNode.SubNode\u003e cumulativeSubNodes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"     * Prints the greeting message.","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"    public static void printGreeting(String botName) {","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"        printWithNoIndents(\"Woof! I\u0027m \" + botName);","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"        printWithNoIndents(\"What can I bark at you?\");","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"        reply();","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"     * Prints the bye message","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"    public static void printBye() {","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"        printWithNoIndents(\"Woof! Hope to bark at you again soon!\");","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"        reply();","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"     * Prints the unknown command message.","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"    public static void printUnknownCommand(String command) {","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"        printWithNoIndents(\"Woof! I don\u0027t know what command \\\"\" + command + \"\\\" is!\");","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"        replyError();","lastModifiedDate":"2023-09-17"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"     * Prints the invalid command message.","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"     * @param e The ShibaException whose message is to be printed.","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"    public static void printException(ShibaException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"        printWithNoIndents(\"Woof! \" + e.getMessage());","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"        replyError();","lastModifiedDate":"2023-09-17"},{"lineNumber":48,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"Bombbird2001"},"content":"     * Prints the given message with no indents.","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"Bombbird2001"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"Bombbird2001"},"content":"    public static void printWithNoIndents(String message) {","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"Bombbird2001"},"content":"        printWithIndents(message, 0);","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"Bombbird2001"},"content":"     * Prints the given message with 1 indent.","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"Bombbird2001"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"Bombbird2001"},"content":"    public static void printWithOneIndent(String message) {","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"Bombbird2001"},"content":"        printWithIndents(message, 1);","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"Bombbird2001"},"content":"     * Prints the given message with the given number of indents (spaces).","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"Bombbird2001"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"Bombbird2001"},"content":"     * @param indents The number of indents.","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"Bombbird2001"},"content":"    public static void printWithIndents(String message, int indents) {","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"Bombbird2001"},"content":"        cumulativeSubNodes.add(new DialogNode.SubNode(indents, message));","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"Bombbird2001"},"content":"     * Sends a normal reply message stored in stringBuilder to the UI window to be displayed.","lastModifiedDate":"2023-09-17"},{"lineNumber":80,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"Bombbird2001"},"content":"    public static void reply() {","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"Bombbird2001"},"content":"        MainWindow mainWindow \u003d MainWindow.getInstance();","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"Bombbird2001"},"content":"        if (mainWindow \u003d\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"Bombbird2001"},"content":"            return;","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"Bombbird2001"},"content":"        ArrayList\u003cDialogNode.SubNode\u003e nodesCopy \u003d new ArrayList\u003c\u003e(cumulativeSubNodes);","lastModifiedDate":"2023-09-04"},{"lineNumber":88,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":89,"author":{"gitId":"Bombbird2001"},"content":"        Platform.runLater(() -\u003e mainWindow.addBotDialogNode(nodesCopy, false));","lastModifiedDate":"2023-09-17"},{"lineNumber":90,"author":{"gitId":"Bombbird2001"},"content":"        cumulativeSubNodes.clear();","lastModifiedDate":"2023-09-17"},{"lineNumber":91,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":92,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":93,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":94,"author":{"gitId":"Bombbird2001"},"content":"     * Sends an error reply message stored in stringBuilder to the UI window to be displayed.","lastModifiedDate":"2023-09-17"},{"lineNumber":95,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":96,"author":{"gitId":"Bombbird2001"},"content":"    public static void replyError() {","lastModifiedDate":"2023-09-17"},{"lineNumber":97,"author":{"gitId":"Bombbird2001"},"content":"        MainWindow mainWindow \u003d MainWindow.getInstance();","lastModifiedDate":"2023-09-17"},{"lineNumber":98,"author":{"gitId":"Bombbird2001"},"content":"        if (mainWindow \u003d\u003d null) {","lastModifiedDate":"2023-09-17"},{"lineNumber":99,"author":{"gitId":"Bombbird2001"},"content":"            return;","lastModifiedDate":"2023-09-17"},{"lineNumber":100,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":101,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":102,"author":{"gitId":"Bombbird2001"},"content":"        ArrayList\u003cDialogNode.SubNode\u003e nodesCopy \u003d new ArrayList\u003c\u003e(cumulativeSubNodes);","lastModifiedDate":"2023-09-17"},{"lineNumber":103,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":104,"author":{"gitId":"Bombbird2001"},"content":"        Platform.runLater(() -\u003e mainWindow.addBotDialogNode(nodesCopy, true));","lastModifiedDate":"2023-09-17"},{"lineNumber":105,"author":{"gitId":"Bombbird2001"},"content":"        cumulativeSubNodes.clear();","lastModifiedDate":"2023-09-04"},{"lineNumber":106,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Bombbird2001":107}},{"path":"src/main/java/shiba/ui/components/CommandInput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.ui.components;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":" * Text input field for the user to enter commands.","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"public class CommandInput extends TextField {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"    public static final int TEXT_FIELD_HEIGHT \u003d 50;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"    private static final Font INPUT_FONT \u003d new Font(\"Arial\", 18);","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"     * Constructor for CommandInput","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"    public CommandInput() {","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"        super();","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"        setPrefHeight(TEXT_FIELD_HEIGHT);","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"        setFont(INPUT_FONT);","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"        AnchorPane.setBottomAnchor(this, 1.0);","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"        AnchorPane.setLeftAnchor(this, 1.0);","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"        AnchorPane.setRightAnchor(this, SendButton.SEND_BUTTON_WIDTH + 1.0);","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"Bombbird2001":26}},{"path":"src/main/java/shiba/ui/components/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.ui.components;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import java.util.TimerTask;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"import shiba.ui.MainWindow;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":" * Dialog box for displaying the conversation between the user and SHIBA-BOT.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"public class DialogBox extends ScrollPane {","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"    private static final double DIALOG_NODE_SPACING \u003d 10.0;","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"    private final VBox dialogPane \u003d new VBox(DIALOG_NODE_SPACING);","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"     * Constructor for DialogBox","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"    public DialogBox() {","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"        super();","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"        setFitToWidth(true);","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"        setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"        setVbarPolicy(ScrollPane.ScrollBarPolicy.AS_NEEDED);","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"        AnchorPane.setLeftAnchor(this, 10.0);","lastModifiedDate":"2023-09-17"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"        AnchorPane.setRightAnchor(this, 1.0);","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"        AnchorPane.setTopAnchor(this, 10.0);","lastModifiedDate":"2023-09-17"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"        AnchorPane.setBottomAnchor(this, CommandInput.TEXT_FIELD_HEIGHT + 1.0);","lastModifiedDate":"2023-09-17"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"        setStyle(\"-fx-background-color:transparent;\");","lastModifiedDate":"2023-09-17"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"        dialogPane.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"        dialogPane.setPadding(new Insets(0, 10, 0, 0));","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"        dialogPane.setFillWidth(true);","lastModifiedDate":"2023-09-17"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"        setContent(dialogPane);","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"     * Adds a dialog node to the dialog box.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"     * @param dialogNode Dialog node to be added","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"    public void addDialogNode(DialogNode dialogNode) {","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"        dialogPane.getChildren().add(dialogNode);","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"Bombbird2001"},"content":"        MainWindow mainWindow \u003d MainWindow.getInstance();","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"        if (mainWindow !\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"Bombbird2001"},"content":"            mainWindow.getTimer().schedule(new TimerTask() {","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"Bombbird2001"},"content":"                @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"Bombbird2001"},"content":"                public void run() {","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"Bombbird2001"},"content":"                    Platform.runLater(() -\u003e setVvalue(1.0));","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"Bombbird2001"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"Bombbird2001"},"content":"            }, 100);","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"Bombbird2001":58}},{"path":"src/main/java/shiba/ui/components/DialogNode.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.ui.components;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-17"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"import javafx.scene.layout.Priority;","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":" * Represents a dialog node in the dialog box, which can be directly added to a parent.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"public class DialogNode extends HBox {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"    private static final Image USER_IMAGE \u003d new Image(DialogNode.class.getResourceAsStream(\"/images/user.jpg\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"    private static final Image SHIBA_IMAGE \u003d new Image(DialogNode.class.getResourceAsStream(\"/images/shiba.png\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"    private static final Font DIALOG_FONT \u003d new Font(\"Comic Sans MS\", 16);","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"    private static final int IMAGE_SIZE \u003d 100;","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"    private static final int TEXT_PORTION_WIDTH \u003d 475;","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"    private static final int HORIZONTAL_SPACING \u003d 10;","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"    private static final int VERTICAL_SPACING \u003d 5;","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"     * Represents a sub-node inside this DialogNode","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"    public static class SubNode {","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"        public static final int INDENTATION_WIDTH \u003d 20;","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"        private static final int MAX_INDENTATION_LEVEL \u003d TEXT_PORTION_WIDTH / 2 / INDENTATION_WIDTH;","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"        private final int indentationLevel;","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"        private final String text;","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"        /**","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"         * Constructor for SubNode","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"         *","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"         * @param indentationLevel Indentation level of the sub-node, capped at a maximum value","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"         * @param text Text to be displayed","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"         */","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"        public SubNode(int indentationLevel, String text) {","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"            this.indentationLevel \u003d Math.min(indentationLevel, MAX_INDENTATION_LEVEL);","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"            this.text \u003d text;","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"Bombbird2001"},"content":"     * Constructor for DialogNode","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"Bombbird2001"},"content":"     * @param isUser Whether the dialog node is from the user","lastModifiedDate":"2023-09-17"},{"lineNumber":54,"author":{"gitId":"Bombbird2001"},"content":"     * @param isError Whether the dialog node is an error message","lastModifiedDate":"2023-09-17"},{"lineNumber":55,"author":{"gitId":"Bombbird2001"},"content":"     * @param textNodes List of sub-nodes to be displayed","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"Bombbird2001"},"content":"    public DialogNode(boolean isUser, boolean isError, ArrayList\u003cSubNode\u003e textNodes) {","lastModifiedDate":"2023-09-17"},{"lineNumber":58,"author":{"gitId":"Bombbird2001"},"content":"        super(HORIZONTAL_SPACING);","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"Bombbird2001"},"content":"        setPadding(new Insets(5, 0, 5, 0));","lastModifiedDate":"2023-09-17"},{"lineNumber":61,"author":{"gitId":"Bombbird2001"},"content":"        setFillHeight(false);","lastModifiedDate":"2023-09-17"},{"lineNumber":62,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"Bombbird2001"},"content":"        VBox vbox \u003d createTextVBox(isUser, isError, textNodes);","lastModifiedDate":"2023-09-17"},{"lineNumber":64,"author":{"gitId":"Bombbird2001"},"content":"        ImageView imageView \u003d createProfileImage(isUser);","lastModifiedDate":"2023-09-17"},{"lineNumber":65,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"Bombbird2001"},"content":"        if (isUser) {","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"Bombbird2001"},"content":"            getChildren().addAll(vbox, imageView);","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"Bombbird2001"},"content":"        } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"Bombbird2001"},"content":"            getChildren().addAll(imageView, vbox);","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":72,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":73,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":74,"author":{"gitId":"Bombbird2001"},"content":"     * Creates the VBox to contain all the text label nodes.","lastModifiedDate":"2023-09-17"},{"lineNumber":75,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":76,"author":{"gitId":"Bombbird2001"},"content":"     * @param isUser Whether the dialog node is from the user","lastModifiedDate":"2023-09-17"},{"lineNumber":77,"author":{"gitId":"Bombbird2001"},"content":"     * @param isError Whether the dialog node is an error message","lastModifiedDate":"2023-09-17"},{"lineNumber":78,"author":{"gitId":"Bombbird2001"},"content":"     * @param textNodes List of sub-nodes to be displayed","lastModifiedDate":"2023-09-17"},{"lineNumber":79,"author":{"gitId":"Bombbird2001"},"content":"     * @return The VBox containing all the text label nodes","lastModifiedDate":"2023-09-17"},{"lineNumber":80,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":81,"author":{"gitId":"Bombbird2001"},"content":"    private VBox createTextVBox(boolean isUser, boolean isError, ArrayList\u003cSubNode\u003e textNodes) {","lastModifiedDate":"2023-09-17"},{"lineNumber":82,"author":{"gitId":"Bombbird2001"},"content":"        VBox vbox \u003d new VBox(VERTICAL_SPACING);","lastModifiedDate":"2023-09-17"},{"lineNumber":83,"author":{"gitId":"Bombbird2001"},"content":"        vbox.setMinHeight(0);","lastModifiedDate":"2023-09-17"},{"lineNumber":84,"author":{"gitId":"Bombbird2001"},"content":"        if (isError) {","lastModifiedDate":"2023-09-17"},{"lineNumber":85,"author":{"gitId":"Bombbird2001"},"content":"            vbox.setStyle(\"-fx-background-color:#ff8585; -fx-background-radius: 10px;\");","lastModifiedDate":"2023-09-17"},{"lineNumber":86,"author":{"gitId":"Bombbird2001"},"content":"        } else if (isUser) {","lastModifiedDate":"2023-09-17"},{"lineNumber":87,"author":{"gitId":"Bombbird2001"},"content":"            vbox.setStyle(\"-fx-background-color:lightgreen; -fx-background-radius: 10px;\");","lastModifiedDate":"2023-09-17"},{"lineNumber":88,"author":{"gitId":"Bombbird2001"},"content":"        } else {","lastModifiedDate":"2023-09-17"},{"lineNumber":89,"author":{"gitId":"Bombbird2001"},"content":"            vbox.setStyle(\"-fx-background-color:lightblue; -fx-background-radius: 10px;\");","lastModifiedDate":"2023-09-17"},{"lineNumber":90,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":91,"author":{"gitId":"Bombbird2001"},"content":"        vbox.setPadding(new Insets(5, 10, 10, 10));","lastModifiedDate":"2023-09-17"},{"lineNumber":92,"author":{"gitId":"Bombbird2001"},"content":"        HBox.setHgrow(vbox, Priority.ALWAYS);","lastModifiedDate":"2023-09-17"},{"lineNumber":93,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":94,"author":{"gitId":"Bombbird2001"},"content":"        for (SubNode textNode : textNodes) {","lastModifiedDate":"2023-09-04"},{"lineNumber":95,"author":{"gitId":"Bombbird2001"},"content":"            Label textLabel \u003d new Label(textNode.text);","lastModifiedDate":"2023-09-04"},{"lineNumber":96,"author":{"gitId":"Bombbird2001"},"content":"            textLabel.setWrapText(true);","lastModifiedDate":"2023-09-04"},{"lineNumber":97,"author":{"gitId":"Bombbird2001"},"content":"            textLabel.setFont(DIALOG_FONT);","lastModifiedDate":"2023-09-04"},{"lineNumber":98,"author":{"gitId":"Bombbird2001"},"content":"            textLabel.setPadding(new Insets(0, 0, 0, textNode.indentationLevel * SubNode.INDENTATION_WIDTH));","lastModifiedDate":"2023-09-04"},{"lineNumber":99,"author":{"gitId":"Bombbird2001"},"content":"            textLabel.setMaxWidth(Double.MAX_VALUE);","lastModifiedDate":"2023-09-17"},{"lineNumber":100,"author":{"gitId":"Bombbird2001"},"content":"            if (isUser) {","lastModifiedDate":"2023-09-17"},{"lineNumber":101,"author":{"gitId":"Bombbird2001"},"content":"                textLabel.setAlignment(Pos.CENTER_RIGHT);","lastModifiedDate":"2023-09-17"},{"lineNumber":102,"author":{"gitId":"Bombbird2001"},"content":"            }","lastModifiedDate":"2023-09-17"},{"lineNumber":103,"author":{"gitId":"Bombbird2001"},"content":"            vbox.getChildren().add(textLabel);","lastModifiedDate":"2023-09-04"},{"lineNumber":104,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":106,"author":{"gitId":"Bombbird2001"},"content":"        return vbox;","lastModifiedDate":"2023-09-17"},{"lineNumber":107,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":108,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":109,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":110,"author":{"gitId":"Bombbird2001"},"content":"     * Creates the profile imageview.","lastModifiedDate":"2023-09-17"},{"lineNumber":111,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":112,"author":{"gitId":"Bombbird2001"},"content":"     * @param isUser Whether the dialog node is from the user","lastModifiedDate":"2023-09-17"},{"lineNumber":113,"author":{"gitId":"Bombbird2001"},"content":"     * @return The profile imageview","lastModifiedDate":"2023-09-17"},{"lineNumber":114,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":115,"author":{"gitId":"Bombbird2001"},"content":"    private ImageView createProfileImage(boolean isUser) {","lastModifiedDate":"2023-09-17"},{"lineNumber":116,"author":{"gitId":"Bombbird2001"},"content":"        ImageView imageView \u003d new ImageView(isUser ? USER_IMAGE : SHIBA_IMAGE);","lastModifiedDate":"2023-09-17"},{"lineNumber":117,"author":{"gitId":"Bombbird2001"},"content":"        imageView.setClip(new Circle(IMAGE_SIZE / 2.0, IMAGE_SIZE / 2.0, IMAGE_SIZE / 2.0));","lastModifiedDate":"2023-09-17"},{"lineNumber":118,"author":{"gitId":"Bombbird2001"},"content":"        imageView.setFitHeight(IMAGE_SIZE);","lastModifiedDate":"2023-09-17"},{"lineNumber":119,"author":{"gitId":"Bombbird2001"},"content":"        imageView.setFitWidth(IMAGE_SIZE);","lastModifiedDate":"2023-09-17"},{"lineNumber":120,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":121,"author":{"gitId":"Bombbird2001"},"content":"        return imageView;","lastModifiedDate":"2023-09-17"},{"lineNumber":122,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":123,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"Bombbird2001":123}},{"path":"src/main/java/shiba/ui/components/KeyInputHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.ui.components;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":" * Handles key input from the user.","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"public class KeyInputHandler implements EventHandler\u003cKeyEvent\u003e {","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"    private final Runnable onEnter;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"     * Constructor for KeyInputHandler.","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"     * @param onEnter The action to be performed when the user presses the enter key.","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"    public KeyInputHandler(Runnable onEnter) {","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"        this.onEnter \u003d onEnter;","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"    public void handle(KeyEvent event) {","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"        if (KeyEvent.KEY_PRESSED.equals(event.getEventType())) {","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"            if (event.getCode() \u003d\u003d KeyCode.ENTER) {","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"                onEnter.run();","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"Bombbird2001":33}},{"path":"src/main/java/shiba/ui/components/SendButton.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.ui.components;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import javafx.scene.input.MouseEvent;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":" * Button for sending user input to SHIBA-BOT.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"public class SendButton extends Button {","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"    public static final int SEND_BUTTON_WIDTH \u003d 100;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"    private static final String BUTTON_TEXT \u003d \"Send\";","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"     * Constructor for SendButton","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"    public SendButton(EventHandler\u003cMouseEvent\u003e onMouseClicked) {","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"        super(BUTTON_TEXT);","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"        setPrefSize(SEND_BUTTON_WIDTH, CommandInput.TEXT_FIELD_HEIGHT);","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"        AnchorPane.setBottomAnchor(this, 1.0);","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"        AnchorPane.setRightAnchor(this, 1.0);","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"        setOnMouseClicked(onMouseClicked);","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"Bombbird2001":27}},{"path":"src/test/java/shiba/commands/DeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.commands;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"import shiba.exceptions.InvalidCommandException;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"import shiba.exceptions.ShibaException;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"import shiba.tasks.PersistentTaskList;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"import shiba.tasks.TaskListStub;","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"public class DeadlineCommandTest {","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"    private final PersistentTaskList tasks \u003d new TaskListStub();","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_validCommand() throws ShibaException {","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"        new DeadlineCommand(tasks, \"deadline Feed a Shiba /by 2023-09-22 20:00\").execute();","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"[D][ ] Feed a Shiba (by: 22 Sep 2023 8:00PM)\", tasks.get(0).toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_validCommand_spaces() throws ShibaException {","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"        new DeadlineCommand(tasks, \"deadline               Feed a Shiba    /by 2023-09-22\").execute();","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"[D][ ] Feed a Shiba (by: 22 Sep 2023)\", tasks.get(0).toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_invalidCommand_noName() {","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"                new DeadlineCommand(tasks, \"deadline /by 2023-09-22 20:00\").execute());","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_invalidCommand_noBy() {","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"                new DeadlineCommand(tasks, \"deadline Feed a Shiba\").execute());","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_invalidCommand_wrongCommand() {","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"                new DeadlineCommand(tasks, \"todo Feed a Shiba\").execute());","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"Bombbird2001":47}},{"path":"src/test/java/shiba/commands/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.commands;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"import shiba.exceptions.EmptyTasksException;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"import shiba.exceptions.InvalidCommandException;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"import shiba.exceptions.ShibaException;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"import shiba.tasks.PersistentTaskList;","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"import shiba.tasks.TaskListStub;","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"    private final PersistentTaskList tasks \u003d new TaskListStub();","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"    private void addInitialTasks() throws ShibaException {","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"        new TodoCommand(tasks, \"todo Pet a Shiba\").execute();","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"        new DeadlineCommand(tasks, \"deadline Feed a Shiba /by 2023-09-22 20:00\").execute();","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"        new EventCommand(tasks, \"event Shiba petting fair /from 2023-09-24 10:00 /to 2023-09-24 15:00\").execute();","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(3, tasks.size());","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_validCommand() throws ShibaException {","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"        addInitialTasks();","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"        new DeleteCommand(tasks, \"delete 1\").execute();","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(2, tasks.size());","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"[D][ ] Feed a Shiba (by: 22 Sep 2023 8:00PM)\", tasks.get(0).toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"[E][ ] Shiba petting fair (from: 24 Sep 2023 10:00AM to: 24 Sep 2023 3:00PM)\",","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"                tasks.get(1).toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_validCommand_two() throws ShibaException {","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"        addInitialTasks();","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"        new DeleteCommand(tasks, \"delete 3\").execute();","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(2, tasks.size());","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"[T][ ] Pet a Shiba\", tasks.get(0).toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"[D][ ] Feed a Shiba (by: 22 Sep 2023 8:00PM)\", tasks.get(1).toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_invalidCommand_indexTooLow() throws ShibaException {","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"        addInitialTasks();","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e new DeleteCommand(tasks, \"delete 0\").execute());","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_invalidCommand_indexTooHigh() throws ShibaException {","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"Bombbird2001"},"content":"        addInitialTasks();","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"Bombbird2001"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e new DeleteCommand(tasks, \"delete 4\").execute());","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_invalidCommand_indexTooHighNoTasks() {","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"Bombbird2001"},"content":"        assertThrows(EmptyTasksException.class, () -\u003e new DeleteCommand(tasks, \"delete 1\").execute());","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"Bombbird2001":59}},{"path":"src/test/java/shiba/commands/EventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.commands;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"import shiba.exceptions.InvalidCommandException;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"import shiba.exceptions.ShibaException;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"import shiba.tasks.PersistentTaskList;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"import shiba.tasks.TaskListStub;","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"public class EventCommandTest {","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"    private final PersistentTaskList tasks \u003d new TaskListStub();","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_validCommand() throws ShibaException {","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"        new EventCommand(tasks, \"event Shiba petting fair /from 2023-09-24 10:00 /to 2023-09-24 15:00\").execute();","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"[E][ ] Shiba petting fair (from: 24 Sep 2023 10:00AM to: 24 Sep 2023 3:00PM)\",","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"                tasks.get(0).toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_validCommand_spaces() throws ShibaException {","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"        new EventCommand(tasks,","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"                \"event               Shiba petting fair    /from 2023-09-24     /to 2023-09-25\").execute();","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"[E][ ] Shiba petting fair (from: 24 Sep 2023 to: 25 Sep 2023)\", tasks.get(0).toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_validCommand_datesSwapped() throws ShibaException {","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"        new EventCommand(tasks, \"event Shiba petting fair /to 2023-09-24 15:00 /from 2023-09-24 10:00\").execute();","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"[E][ ] Shiba petting fair (from: 24 Sep 2023 10:00AM to: 24 Sep 2023 3:00PM)\",","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"                tasks.get(0).toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_invalidCommand_noName() {","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"                new EventCommand(tasks, \"event /from 2023-09-24 10:00 /to /2023-09-24 15:00\").execute());","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_invalidCommand_noFrom() {","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"Bombbird2001"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"                new EventCommand(tasks, \"event Shiba petting fair /to 2023-09-24 15:00\").execute());","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_invalidCommand_noTo() {","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"Bombbird2001"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"Bombbird2001"},"content":"                new EventCommand(tasks, \"event Shiba petting fair /to 2023-09-24 15:00\").execute());","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_invalidCommand_wrongCommand() {","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"Bombbird2001"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"Bombbird2001"},"content":"                new EventCommand(tasks, \"deadline Pet a Shiba /by 2023-09-22 20:00\").execute());","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"Bombbird2001":63}},{"path":"src/test/java/shiba/commands/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.commands;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"import shiba.exceptions.EmptyTasksException;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"import shiba.exceptions.InvalidCommandException;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"import shiba.exceptions.ShibaException;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"import shiba.tasks.PersistentTaskList;","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"import shiba.tasks.TaskListStub;","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"public class MarkCommandTest {","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"    private final PersistentTaskList tasks \u003d new TaskListStub();","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"    private void addInitialTasks() throws ShibaException {","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"        new TodoCommand(tasks, \"todo Pet a Shiba\").execute();","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"        new DeadlineCommand(tasks, \"deadline Feed a Shiba /by 2023-09-22 20:00\").execute();","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"        new EventCommand(tasks, \"event Shiba petting fair /from 2023-09-24 10:00 /to 2023-09-24 15:00\").execute();","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(3, tasks.size());","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_validCommand() throws ShibaException {","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"        addInitialTasks();","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"        new MarkCommand(tasks, \"mark 1\").execute();","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"[T][X] Pet a Shiba\", tasks.get(0).toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"[D][ ] Feed a Shiba (by: 22 Sep 2023 8:00PM)\", tasks.get(1).toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"[E][ ] Shiba petting fair (from: 24 Sep 2023 10:00AM to: 24 Sep 2023 3:00PM)\",","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"                tasks.get(2).toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_validCommand_two() throws ShibaException {","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"        addInitialTasks();","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"        new MarkCommand(tasks, \"mark 3\").execute();","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"[T][ ] Pet a Shiba\", tasks.get(0).toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"[D][ ] Feed a Shiba (by: 22 Sep 2023 8:00PM)\", tasks.get(1).toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"[E][X] Shiba petting fair (from: 24 Sep 2023 10:00AM to: 24 Sep 2023 3:00PM)\",","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"                tasks.get(2).toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_validCommand_alreadyMarked() throws ShibaException {","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"        addInitialTasks();","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"        new MarkCommand(tasks, \"mark 1\").execute();","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"Bombbird2001"},"content":"        new MarkCommand(tasks, \"mark 1\").execute();","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"[T][X] Pet a Shiba\", tasks.get(0).toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"[D][ ] Feed a Shiba (by: 22 Sep 2023 8:00PM)\", tasks.get(1).toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"[E][ ] Shiba petting fair (from: 24 Sep 2023 10:00AM to: 24 Sep 2023 3:00PM)\",","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"Bombbird2001"},"content":"                tasks.get(2).toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_validCommand_alreadyMarked2() throws ShibaException {","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"Bombbird2001"},"content":"        addInitialTasks();","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"Bombbird2001"},"content":"        new MarkCommand(tasks, \"mark 3\").execute();","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"Bombbird2001"},"content":"        new MarkCommand(tasks, \"mark 3\").execute();","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"[T][ ] Pet a Shiba\", tasks.get(0).toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"[D][ ] Feed a Shiba (by: 22 Sep 2023 8:00PM)\", tasks.get(1).toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"[E][X] Shiba petting fair (from: 24 Sep 2023 10:00AM to: 24 Sep 2023 3:00PM)\",","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"Bombbird2001"},"content":"                tasks.get(2).toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_invalidCommand_indexTooLow() throws ShibaException {","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"Bombbird2001"},"content":"        addInitialTasks();","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"Bombbird2001"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e new MarkCommand(tasks, \"mark 0\").execute());","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_invalidCommand_indexTooHigh() throws ShibaException {","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"Bombbird2001"},"content":"        addInitialTasks();","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"Bombbird2001"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e new MarkCommand(tasks, \"mark 4\").execute());","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_invalidCommand_indexTooHighNoTasks() {","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"Bombbird2001"},"content":"        assertThrows(EmptyTasksException.class, () -\u003e new MarkCommand(tasks, \"mark 1\").execute());","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"Bombbird2001":82}},{"path":"src/test/java/shiba/commands/TodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.commands;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"import shiba.exceptions.InvalidCommandException;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"import shiba.exceptions.ShibaException;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"import shiba.tasks.PersistentTaskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"import shiba.tasks.TaskListStub;","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"public class TodoCommandTest {","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"    private final PersistentTaskList tasks \u003d new TaskListStub();","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_validCommand() throws ShibaException {","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"        new TodoCommand(tasks, \"todo Pet a Shiba\").execute();","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"[T][ ] Pet a Shiba\", tasks.get(0).toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_validCommand_spaces() throws ShibaException {","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"        new TodoCommand(tasks, \"todo               Pet a Shiba    \").execute();","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"[T][ ] Pet a Shiba\", tasks.get(0).toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_invalidCommand_noName() {","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e new TodoCommand(tasks, \"todo\").execute());","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_invalidCommand_wrongCommand() {","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e new TodoCommand(tasks, \"mark\").execute());","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Bombbird2001":39}},{"path":"src/test/java/shiba/commands/UnmarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.commands;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"import shiba.exceptions.EmptyTasksException;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"import shiba.exceptions.InvalidCommandException;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"import shiba.exceptions.ShibaException;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"import shiba.tasks.PersistentTaskList;","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"import shiba.tasks.TaskListStub;","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"public class UnmarkCommandTest {","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"    private final PersistentTaskList tasks \u003d new TaskListStub();","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"    private void addInitialTasksAndMark() throws ShibaException {","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"        new TodoCommand(tasks, \"todo Pet a Shiba\").execute();","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"        new DeadlineCommand(tasks, \"deadline Feed a Shiba /by 2023-09-22 20:00\").execute();","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"        new EventCommand(tasks, \"event Shiba petting fair /from 2023-09-24 10:00 /to 2023-09-24 15:00\").execute();","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(3, tasks.size());","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"        tasks.get(0).markDone();","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"        tasks.get(1).markDone();","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"        tasks.get(2).markDone();","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_validCommand() throws ShibaException {","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"        addInitialTasksAndMark();","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"        new UnmarkCommand(tasks, \"unmark 1\").execute();","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"[T][ ] Pet a Shiba\", tasks.get(0).toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"[D][X] Feed a Shiba (by: 22 Sep 2023 8:00PM)\", tasks.get(1).toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"[E][X] Shiba petting fair (from: 24 Sep 2023 10:00AM to: 24 Sep 2023 3:00PM)\",","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"                tasks.get(2).toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_validCommand_two() throws ShibaException {","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"        addInitialTasksAndMark();","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"        new UnmarkCommand(tasks, \"unmark 3\").execute();","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"[T][X] Pet a Shiba\", tasks.get(0).toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"[D][X] Feed a Shiba (by: 22 Sep 2023 8:00PM)\", tasks.get(1).toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"[E][ ] Shiba petting fair (from: 24 Sep 2023 10:00AM to: 24 Sep 2023 3:00PM)\",","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"                tasks.get(2).toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_validCommand_alreadyUnmarked() throws ShibaException {","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"        addInitialTasksAndMark();","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"Bombbird2001"},"content":"        new UnmarkCommand(tasks, \"unmark 1\").execute();","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"Bombbird2001"},"content":"        new UnmarkCommand(tasks, \"unmark 1\").execute();","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"[T][ ] Pet a Shiba\", tasks.get(0).toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"[D][X] Feed a Shiba (by: 22 Sep 2023 8:00PM)\", tasks.get(1).toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"[E][X] Shiba petting fair (from: 24 Sep 2023 10:00AM to: 24 Sep 2023 3:00PM)\",","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"Bombbird2001"},"content":"                tasks.get(2).toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_validCommand_alreadyUnmarked2() throws ShibaException {","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"Bombbird2001"},"content":"        addInitialTasksAndMark();","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"Bombbird2001"},"content":"        new UnmarkCommand(tasks, \"unmark 3\").execute();","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"Bombbird2001"},"content":"        new UnmarkCommand(tasks, \"unmark 3\").execute();","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"[T][X] Pet a Shiba\", tasks.get(0).toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"[D][X] Feed a Shiba (by: 22 Sep 2023 8:00PM)\", tasks.get(1).toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"[E][ ] Shiba petting fair (from: 24 Sep 2023 10:00AM to: 24 Sep 2023 3:00PM)\",","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"Bombbird2001"},"content":"                tasks.get(2).toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_invalidCommand_indexTooLow() throws ShibaException {","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"Bombbird2001"},"content":"        addInitialTasksAndMark();","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"Bombbird2001"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e new UnmarkCommand(tasks, \"unmark 0\").execute());","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_invalidCommand_indexTooHigh() throws ShibaException {","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"Bombbird2001"},"content":"        addInitialTasksAndMark();","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"Bombbird2001"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e new UnmarkCommand(tasks, \"unmark 4\").execute());","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_invalidCommand_indexTooHighNoTasks() {","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"Bombbird2001"},"content":"        assertThrows(EmptyTasksException.class, () -\u003e new UnmarkCommand(tasks, \"unmark 1\").execute());","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"Bombbird2001":85}},{"path":"src/test/java/shiba/datetimeformats/DateOptionalTimeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.datetimeformats;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"import shiba.exceptions.InvalidCommandException;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"public class DateOptionalTimeTest {","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"    public void constructor_isoFormat_success() throws InvalidCommandException {","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"        DateOptionalTime dateOptionalTime \u003d new DateOptionalTime(\"2023-08-28T20:31\");","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"2023-08-28T20:31\", dateOptionalTime.toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"    public void constructor_isoFormatNoT_success() throws InvalidCommandException {","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"        DateOptionalTime dateOptionalTime \u003d new DateOptionalTime(\"2023-08-28 20:34\");","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"2023-08-28T20:34\", dateOptionalTime.toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"    public void constructor_isoFormatNoTWithSpaces_success() throws InvalidCommandException {","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"        DateOptionalTime dateOptionalTime \u003d new DateOptionalTime(\"     2023-08-28 20:34    \");","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"2023-08-28T20:34\", dateOptionalTime.toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"    public void constructor_isoDateOnly_success() throws InvalidCommandException {","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"        DateOptionalTime dateOptionalTime \u003d new DateOptionalTime(\"2023-08-10\");","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"2023-08-10\", dateOptionalTime.toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"    public void constructor_isoDateOnlyWithSpaces_success() throws InvalidCommandException {","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"        DateOptionalTime dateOptionalTime \u003d new DateOptionalTime(\"              2023-08-10  \");","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"2023-08-10\", dateOptionalTime.toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"    public void constructor_isoFormat_invalid1() {","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e new DateOptionalTime(\"2023-28-08T20:31\"));","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"    public void constructor_isoFormat_invalid2() {","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"Bombbird2001"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e new DateOptionalTime(\"2023-08 28T20:31\"));","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"Bombbird2001"},"content":"    public void constructor_isoFormatNoT_invalid1() {","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"Bombbird2001"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e new DateOptionalTime(\"2023-28-08 20:31\"));","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"Bombbird2001"},"content":"    public void constructor_isoFormatNoT_invalid2() {","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"Bombbird2001"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e new DateOptionalTime(\"2023 08 28 20:31\"));","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"Bombbird2001"},"content":"    public void getDisplayRestr_isoFormat_success() throws InvalidCommandException {","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"Bombbird2001"},"content":"        DateOptionalTime dateOptionalTime \u003d new DateOptionalTime(\"2023-08-28T20:31\");","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"28 Aug 2023 8:31PM\", dateOptionalTime.getDisplayRepr());","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"Bombbird2001"},"content":"    public void getDisplayRestr_isoFormatNoT_success() throws InvalidCommandException {","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"Bombbird2001"},"content":"        DateOptionalTime dateOptionalTime \u003d new DateOptionalTime(\"2023-06-14 10:00\");","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"14 Jun 2023 10:00AM\", dateOptionalTime.getDisplayRepr());","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"Bombbird2001"},"content":"    public void getDisplayRestr_isoDateOnly_success() throws InvalidCommandException {","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"Bombbird2001"},"content":"        DateOptionalTime dateOptionalTime \u003d new DateOptionalTime(\"2023-02-01\");","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"1 Feb 2023\", dateOptionalTime.getDisplayRepr());","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Bombbird2001":78}},{"path":"src/test/java/shiba/parsers/CommandParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.parsers;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"import shiba.tasks.PersistentTaskList;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"import shiba.tasks.TaskListStub;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"public class CommandParserTest {","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"    private final PersistentTaskList tasks \u003d new TaskListStub();","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"    public void processUserInput_bye() {","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"        assertTrue(new CommandParser(tasks).processUserInput(\"bye\"));","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"    public void processUserInput_notBye() {","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"        assertFalse(new CommandParser(tasks).processUserInput(\"list\"));","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"        assertFalse(new CommandParser(tasks).processUserInput(\"mark\"));","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"        assertFalse(new CommandParser(tasks).processUserInput(\"unmark\"));","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"        assertFalse(new CommandParser(tasks).processUserInput(\"todo\"));","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"        assertFalse(new CommandParser(tasks).processUserInput(\"deadline\"));","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"        assertFalse(new CommandParser(tasks).processUserInput(\"event\"));","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"        assertFalse(new CommandParser(tasks).processUserInput(\"delete\"));","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"        assertFalse(new CommandParser(tasks).processUserInput(\"find\"));","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"        assertFalse(new CommandParser(tasks).processUserInput(\"help\"));","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"        assertFalse(new CommandParser(tasks).processUserInput(\"pat\"));","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"        assertFalse(new CommandParser(tasks).processUserInput(\"boop\"));","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"        assertFalse(new CommandParser(tasks).processUserInput(\"bellyrub\"));","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"Bombbird2001":34}},{"path":"src/test/java/shiba/parsers/SpaceSeparatedValuesParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.parsers;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import java.util.List;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"public class SpaceSeparatedValuesParserTest {","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"    public void convert_normal() {","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"shiba labrador corgi\", SpaceSeparatedValuesParser.convert(\"shiba\", \"labrador\", \"corgi\"));","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"    public void convert_spaces() {","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"shiba\\\\ inu labrador\\\\ retriever pembroke\\\\ welsh\\\\ corgi\",","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"                SpaceSeparatedValuesParser.convert(\"shiba inu\", \"labrador retriever\", \"pembroke welsh corgi\"));","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"    public void convert_manySpaces() {","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"\\\\ \\\\ shiba\\\\ \\\\ \\\\ inu\\\\ \\\\  \\\\ labrador\\\\ \\\\ retriever\\\\  \"","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"                        + \"\\\\ \\\\ \\\\ pembroke\\\\ \\\\ \\\\ \\\\ welsh\\\\ \\\\ \\\\ \\\\ corgi\\\\ \\\\ \\\\ \",","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"                SpaceSeparatedValuesParser.convert(\"  shiba   inu  \", \" labrador  retriever \",","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"                        \"   pembroke    welsh    corgi   \"));","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"    public void convert_backslash() {","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"shiba\\\\inu labrador\\\\retriever pembroke\\\\welsh\\\\corgi\",","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"                SpaceSeparatedValuesParser.convert(\"shiba\\\\inu\", \"labrador\\\\retriever\", \"pembroke\\\\welsh\\\\corgi\"));","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"    public void convert_empty() {","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"\", SpaceSeparatedValuesParser.convert());","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"    public void parse_normal() {","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"        List\u003cString\u003e params \u003d SpaceSeparatedValuesParser.parse(\"shiba labrador corgi\");","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(3, params.size());","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"shiba\", params.get(0));","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"labrador\", params.get(1));","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"corgi\", params.get(2));","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"Bombbird2001"},"content":"    public void parse_spaces() {","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"Bombbird2001"},"content":"        List\u003cString\u003e params \u003d SpaceSeparatedValuesParser.parse(\"shiba\\\\ inu labrador\\\\ retriever \"","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"Bombbird2001"},"content":"                + \"pembroke\\\\ welsh\\\\ corgi\");","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(3, params.size());","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"shiba inu\", params.get(0));","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"labrador retriever\", params.get(1));","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"pembroke welsh corgi\", params.get(2));","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"Bombbird2001"},"content":"    public void parse_manySpaces() {","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"Bombbird2001"},"content":"        List\u003cString\u003e params \u003d SpaceSeparatedValuesParser.parse(\"\\\\ \\\\ shiba\\\\ \\\\ \\\\ inu\\\\ \\\\  \"","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"Bombbird2001"},"content":"                + \"\\\\ labrador\\\\ \\\\ retriever\\\\  \\\\ \\\\ \\\\ pembroke\\\\ \\\\ \\\\ \\\\ welsh\\\\ \\\\ \\\\ \\\\ corgi\\\\ \\\\ \\\\ \");","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(3, params.size());","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"  shiba   inu  \", params.get(0));","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\" labrador  retriever \", params.get(1));","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"   pembroke    welsh    corgi   \", params.get(2));","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"Bombbird2001"},"content":"    public void parse_backslash() {","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"Bombbird2001"},"content":"        List\u003cString\u003e params \u003d SpaceSeparatedValuesParser.parse(\"shiba\\\\inu labrador\\\\retriever pembroke\\\\welsh\\\\corgi\");","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(3, params.size());","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"shiba\\\\inu\", params.get(0));","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"labrador\\\\retriever\", params.get(1));","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"pembroke\\\\welsh\\\\corgi\", params.get(2));","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"Bombbird2001"},"content":"    public void parse_backslashSpace() {","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"Bombbird2001"},"content":"        List\u003cString\u003e params \u003d SpaceSeparatedValuesParser.parse(\"shiba\\\\\\\\ inu \"","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"Bombbird2001"},"content":"                + \"labrador\\\\ \\\\retriever pembroke\\\\\\\\ welsh\\\\ \\\\corgi\");","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(3, params.size());","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"shiba\\\\ inu\", params.get(0));","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"labrador \\\\retriever\", params.get(1));","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(\"pembroke\\\\ welsh \\\\corgi\", params.get(2));","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"Bombbird2001"},"content":"    public void parse_empty() {","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"Bombbird2001"},"content":"        List\u003cString\u003e params \u003d SpaceSeparatedValuesParser.parse(\"\");","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(0, params.size());","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"Bombbird2001":93}},{"path":"src/test/java/shiba/tasks/TaskListStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package shiba.tasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import java.util.List;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":" * Represents a stub for a persistent task list, which will not perform saving or loading of data from file.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"public class TaskListStub implements PersistentTaskList {","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"    private final ArrayList\u003cShibaTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"    public void addTask(ShibaTask task) {","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"    public ShibaTask removeIndex(int index) {","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"        return tasks.remove(index);","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"    public ShibaTask get(int index) {","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"    public int size() {","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"        return tasks.size();","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"    public void save() {","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"        // This stub will not save to file","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"    public List\u003cShibaTask\u003e findTasksWithKeyword(String keyword) {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Bombbird2001":41}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"delete 1","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"todo Do tutorials","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"deadline Prepare for CA1 /by 14 Sept","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"deadline Prepare for CA1 /by 2023-09-14","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"mark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"event VATSIM Ho Chih Minh - Singapore SeaLink /from 23 Sept 8pm /to 12am","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"event VATSIM Ho Chih Minh - Singapore SeaLink /from 2023-09-23 20:00 /to 2023-09-24 00:00","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"mark 2","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"mark 2","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"unmark 2","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"unmark 3","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"mark ierfgheiurh","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"mark 0","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"unmark 999","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"some weird command","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"todo","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"deadline /by 14 Sept","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"event Random event /from 2023-09-17 20:00","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"delete -1","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"delete 2","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"find","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"find TUTORIAL","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"find Minecraft","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Bombbird2001":28}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"REM delete saved data folder","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"if exist shibaData rmdir shibaData /s /q","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\shiba\\*.java","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"java -classpath ..\\bin shiba.Shiba \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"Bombbird2001":5}}]
