[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"LINCHENYU2030S"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"LINCHENYU2030S"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"LINCHENYU2030S"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"LINCHENYU2030S"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"LINCHENYU2030S"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"LINCHENYU2030S"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"LINCHENYU2030S"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"LINCHENYU2030S"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"LINCHENYU2030S"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"LINCHENYU2030S"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"LINCHENYU2030S"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"LINCHENYU2030S"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"LINCHENYU2030S"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"LINCHENYU2030S"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"LINCHENYU2030S"},"content":"    mainClass.set(\"Alex.Launcher\")","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"LINCHENYU2030S"},"content":"    archiveBaseName \u003d \"Alex\"","lastModifiedDate":"2023-09-22"},{"lineNumber":51,"author":{"gitId":"LINCHENYU2030S"},"content":"    archiveFileName \u003d \u0027Alex.jar\u0027","lastModifiedDate":"2023-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":60,"author":{"gitId":"LINCHENYU2030S"},"content":"checkstyle {","lastModifiedDate":"2023-09-16"},{"lineNumber":61,"author":{"gitId":"LINCHENYU2030S"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-16"},{"lineNumber":62,"author":{"gitId":"LINCHENYU2030S"},"content":"}","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"LINCHENYU2030S":22,"-":40}},{"path":"data/Alex.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LINCHENYU2030S"},"content":"T return book 0","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"LINCHENYU2030S"},"content":"T read book 1","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"LINCHENYU2030S"},"content":"E meeting /from 2023-09-25 2000 /to 2023-09-25 2200 1","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"LINCHENYU2030S"},"content":"D assigment /by 2023-09-29 2359 0","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"LINCHENYU2030S":4}},{"path":"src/main/java/Alex/Alex.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LINCHENYU2030S"},"content":"package Alex;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"LINCHENYU2030S"},"content":"import Alex.commands.Command;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"LINCHENYU2030S"},"content":"import Alex.commands.Parser;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"LINCHENYU2030S"},"content":"import Alex.ui.Ui;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"LINCHENYU2030S"},"content":"/**","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"LINCHENYU2030S"},"content":" * This class represents the bot that manage our task.","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"LINCHENYU2030S"},"content":" */","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"LINCHENYU2030S"},"content":"public class Alex {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"LINCHENYU2030S"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"LINCHENYU2030S"},"content":"        Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"LINCHENYU2030S"},"content":"        String output \u003d c.execute();","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"LINCHENYU2030S"},"content":"        return output;","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"LINCHENYU2030S"},"content":"     * This method you initialize our Alex bot in command line to execute, get input from users, process input","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"LINCHENYU2030S"},"content":"     * and give output to user.","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"LINCHENYU2030S"},"content":"    public void run() {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"LINCHENYU2030S"},"content":"        String greeting \u003d Ui.greet();","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"LINCHENYU2030S"},"content":"        System.out.println(greeting);","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"LINCHENYU2030S"},"content":"        while (true) {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"LINCHENYU2030S"},"content":"            try {","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"LINCHENYU2030S"},"content":"                String command \u003d Ui.readUserInput();","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"LINCHENYU2030S"},"content":"                Command c \u003d Parser.parse(command);","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"LINCHENYU2030S"},"content":"                String output \u003d c.execute();","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"LINCHENYU2030S"},"content":"                System.out.println(output);","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"LINCHENYU2030S"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"LINCHENYU2030S"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"LINCHENYU2030S"},"content":"            }","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"LINCHENYU2030S"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":38,"author":{"gitId":"LINCHENYU2030S"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"LINCHENYU2030S"},"content":"        new Alex().run();","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":42,"author":{"gitId":"LINCHENYU2030S"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"LINCHENYU2030S":42}},{"path":"src/main/java/Alex/AlexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LINCHENYU2030S"},"content":"package Alex;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"LINCHENYU2030S"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"LINCHENYU2030S"},"content":" * An exception class that can be instantiated to represent exception related to Alex bot.","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"LINCHENYU2030S"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"LINCHENYU2030S"},"content":"public class AlexException extends Exception {","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"LINCHENYU2030S"},"content":"    public AlexException(String message) {","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"LINCHENYU2030S"},"content":"        super(message);","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"LINCHENYU2030S"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"LINCHENYU2030S":12}},{"path":"src/main/java/Alex/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LINCHENYU2030S"},"content":"package Alex;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"LINCHENYU2030S"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"LINCHENYU2030S"},"content":"/**","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"LINCHENYU2030S"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"LINCHENYU2030S"},"content":" */","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"LINCHENYU2030S"},"content":"public class Launcher {","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"LINCHENYU2030S"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"LINCHENYU2030S"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"LINCHENYU2030S"},"content":"}","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"LINCHENYU2030S":12}},{"path":"src/main/java/Alex/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LINCHENYU2030S"},"content":"package Alex;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"LINCHENYU2030S"},"content":"import Alex.ui.MainWindow;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"LINCHENYU2030S"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"LINCHENYU2030S"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"LINCHENYU2030S"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"LINCHENYU2030S"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"LINCHENYU2030S"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"LINCHENYU2030S"},"content":"/**","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"LINCHENYU2030S"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"LINCHENYU2030S"},"content":" */","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"LINCHENYU2030S"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"LINCHENYU2030S"},"content":"    private Alex alex \u003d new Alex();","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"LINCHENYU2030S"},"content":"    @Override","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"LINCHENYU2030S"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"LINCHENYU2030S"},"content":"        try {","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"LINCHENYU2030S"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"LINCHENYU2030S"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"LINCHENYU2030S"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"LINCHENYU2030S"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"LINCHENYU2030S"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setAlex(alex);","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"LINCHENYU2030S"},"content":"            stage.show();","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"LINCHENYU2030S"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"LINCHENYU2030S"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"LINCHENYU2030S"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"LINCHENYU2030S"},"content":"}","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"LINCHENYU2030S":34}},{"path":"src/main/java/Alex/commands/Add.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LINCHENYU2030S"},"content":"package Alex.commands;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"LINCHENYU2030S"},"content":"public enum Add {","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"LINCHENYU2030S"},"content":"    TODO,","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"LINCHENYU2030S"},"content":"    DEADLINE,","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"LINCHENYU2030S"},"content":"    EVENT","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"LINCHENYU2030S"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"LINCHENYU2030S":6}},{"path":"src/main/java/Alex/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LINCHENYU2030S"},"content":"package Alex.commands;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"LINCHENYU2030S"},"content":"import Alex.tasks.*;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"LINCHENYU2030S"},"content":"import Alex.ui.Ui;","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"LINCHENYU2030S"},"content":"import Alex.AlexException;","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"LINCHENYU2030S"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"LINCHENYU2030S"},"content":" * A class that extends from Command class. It represents a command that is trying to add task to the TaskList.","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"LINCHENYU2030S"},"content":" * The instance(s) of this class can be a command trying to add a todo task, deadline task and event task.","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"LINCHENYU2030S"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"LINCHENYU2030S"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"LINCHENYU2030S"},"content":"    private String command;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"LINCHENYU2030S"},"content":"    private Add addType;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"LINCHENYU2030S"},"content":"     * The constructor of AddCommand when an user input string and addType is passed.","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"LINCHENYU2030S"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"LINCHENYU2030S"},"content":"     * @param command The user input string.","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"LINCHENYU2030S"},"content":"     * @param addType The type of add command which consist of \"TODO\", \"DEADLINE\" and \"EVENT\".","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"LINCHENYU2030S"},"content":"    public AddCommand(String command, Add addType) {","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"LINCHENYU2030S"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"LINCHENYU2030S"},"content":"        this.addType \u003d addType;","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"LINCHENYU2030S"},"content":"     * Override the method from the abstract Command class.","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"LINCHENYU2030S"},"content":"     * The execute method of AddCommand class is to actually add the task specified by user to the TaskList.","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"LINCHENYU2030S"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"LINCHENYU2030S"},"content":"    public String execute() {","lastModifiedDate":"2023-09-16"},{"lineNumber":38,"author":{"gitId":"LINCHENYU2030S"},"content":"        String output \u003d null;","lastModifiedDate":"2023-09-16"},{"lineNumber":39,"author":{"gitId":"LINCHENYU2030S"},"content":"        switch(this.addType) {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"LINCHENYU2030S"},"content":"        case TODO:","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"LINCHENYU2030S"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"LINCHENYU2030S"},"content":"                if (!command.substring(4, 5).equals(\" \")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"LINCHENYU2030S"},"content":"                    String message \u003d \"OOPS!!! Please enter a todo task in the following format:\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"LINCHENYU2030S"},"content":"                            + \"   \" + \"todo (description)\";","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"LINCHENYU2030S"},"content":"                    throw new AlexException(message);","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"LINCHENYU2030S"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"LINCHENYU2030S"},"content":"                Task todo \u003d new ToDos(command.substring(5));","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"LINCHENYU2030S"},"content":"                output \u003d TaskList.store(todo);","lastModifiedDate":"2023-09-16"},{"lineNumber":49,"author":{"gitId":"LINCHENYU2030S"},"content":"                return output;","lastModifiedDate":"2023-09-16"},{"lineNumber":50,"author":{"gitId":"LINCHENYU2030S"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"LINCHENYU2030S"},"content":"                output \u003d Ui.getAlertForTodo();","lastModifiedDate":"2023-09-16"},{"lineNumber":52,"author":{"gitId":"LINCHENYU2030S"},"content":"                return output;","lastModifiedDate":"2023-09-16"},{"lineNumber":53,"author":{"gitId":"LINCHENYU2030S"},"content":"            } catch (AlexException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"LINCHENYU2030S"},"content":"                output \u003d e.getMessage();","lastModifiedDate":"2023-09-16"},{"lineNumber":55,"author":{"gitId":"LINCHENYU2030S"},"content":"                return output;","lastModifiedDate":"2023-09-16"},{"lineNumber":56,"author":{"gitId":"LINCHENYU2030S"},"content":"            } finally {","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"LINCHENYU2030S"},"content":"                break;","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"LINCHENYU2030S"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"LINCHENYU2030S"},"content":"        case DEADLINE:","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"LINCHENYU2030S"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"LINCHENYU2030S"},"content":"                String regex \u003d \"\\\\b /by \\\\b\";","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"LINCHENYU2030S"},"content":"                Pattern pattern \u003d Pattern.compile(regex);","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"LINCHENYU2030S"},"content":"                Matcher matcher \u003d pattern.matcher(command);","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"LINCHENYU2030S"},"content":"                if (!matcher.find()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"LINCHENYU2030S"},"content":"                    String message \u003d \"Please enter a deadline task in the format: \"","lastModifiedDate":"2023-09-16"},{"lineNumber":67,"author":{"gitId":"LINCHENYU2030S"},"content":"                            + \"deadline (description) /by yyyy-MM-dd HHmm\";","lastModifiedDate":"2023-09-16"},{"lineNumber":68,"author":{"gitId":"LINCHENYU2030S"},"content":"                    throw new AlexException(message);","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"LINCHENYU2030S"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"LINCHENYU2030S"},"content":"                int startIndex \u003d matcher.start();","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"LINCHENYU2030S"},"content":"                int endIndex \u003d matcher.end();","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"LINCHENYU2030S"},"content":"                String description \u003d startIndex \u003e 9 ? command.substring(9, startIndex) : \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"LINCHENYU2030S"},"content":"                String by \u003d command.substring(endIndex);","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"LINCHENYU2030S"},"content":"                Task deadline \u003d new Deadline(description, by);","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"LINCHENYU2030S"},"content":"                output \u003d TaskList.store(deadline);","lastModifiedDate":"2023-09-16"},{"lineNumber":76,"author":{"gitId":"LINCHENYU2030S"},"content":"                return output;","lastModifiedDate":"2023-09-16"},{"lineNumber":77,"author":{"gitId":"LINCHENYU2030S"},"content":"            } catch (AlexException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"LINCHENYU2030S"},"content":"                output \u003d e.getMessage();","lastModifiedDate":"2023-09-16"},{"lineNumber":79,"author":{"gitId":"LINCHENYU2030S"},"content":"                return output;","lastModifiedDate":"2023-09-16"},{"lineNumber":80,"author":{"gitId":"LINCHENYU2030S"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"LINCHENYU2030S"},"content":"                output \u003d Ui.getAlertForDeadline();","lastModifiedDate":"2023-09-16"},{"lineNumber":82,"author":{"gitId":"LINCHENYU2030S"},"content":"                return output;","lastModifiedDate":"2023-09-16"},{"lineNumber":83,"author":{"gitId":"LINCHENYU2030S"},"content":"            } finally {","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"LINCHENYU2030S"},"content":"                break;","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"LINCHENYU2030S"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"LINCHENYU2030S"},"content":"        case EVENT:","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"LINCHENYU2030S"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"LINCHENYU2030S"},"content":"                String regex \u003d \"\\\\b /from \\\\b\";","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"LINCHENYU2030S"},"content":"                Pattern pattern1 \u003d Pattern.compile(regex);","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"LINCHENYU2030S"},"content":"                Matcher matcher1 \u003d pattern1.matcher(command);","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"LINCHENYU2030S"},"content":"                if (!matcher1.find()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"LINCHENYU2030S"},"content":"                    String message \u003d \"Please enter an event task in the format: \"","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"LINCHENYU2030S"},"content":"                            + \"event (description) /from yyyy-MM-dd HHmm /to yyyy-MM-dd HHmm\";","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"LINCHENYU2030S"},"content":"                    throw new AlexException(message);","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"LINCHENYU2030S"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"LINCHENYU2030S"},"content":"                int firstStart \u003d matcher1.start();","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"LINCHENYU2030S"},"content":"                int firstEnd \u003d matcher1.end();","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"LINCHENYU2030S"},"content":"                String regex2 \u003d \"\\\\b /to \\\\b\";","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"LINCHENYU2030S"},"content":"                Pattern pattern2 \u003d Pattern.compile(regex2);","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"LINCHENYU2030S"},"content":"                Matcher matcher2 \u003d pattern2.matcher(command);","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"LINCHENYU2030S"},"content":"                if (!matcher2.find()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"LINCHENYU2030S"},"content":"                    String message \u003d \"Please enter an event task in the format: \"","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"LINCHENYU2030S"},"content":"                            + \"event (description) /from yyyy-MM-dd HHmm /to yyyy-MM-dd HHmm\";","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"LINCHENYU2030S"},"content":"                    throw new AlexException(message);","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"LINCHENYU2030S"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"LINCHENYU2030S"},"content":"                int secondStart \u003d matcher2.start();","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"LINCHENYU2030S"},"content":"                int secondEnd \u003d matcher2.end();","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"LINCHENYU2030S"},"content":"                String description \u003d firstStart \u003e 6 ? command.substring(6, firstStart) : \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"LINCHENYU2030S"},"content":"                String fromTime \u003d command.substring(firstEnd, secondStart);","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"LINCHENYU2030S"},"content":"                String toTime \u003d command.substring(secondEnd);","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"LINCHENYU2030S"},"content":"                Task event \u003d new Event(description, fromTime, toTime);","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"LINCHENYU2030S"},"content":"                output \u003d TaskList.store(event);","lastModifiedDate":"2023-09-16"},{"lineNumber":117,"author":{"gitId":"LINCHENYU2030S"},"content":"                return output;","lastModifiedDate":"2023-09-16"},{"lineNumber":118,"author":{"gitId":"LINCHENYU2030S"},"content":"            } catch (AlexException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"LINCHENYU2030S"},"content":"                output \u003d e.getMessage();","lastModifiedDate":"2023-09-16"},{"lineNumber":120,"author":{"gitId":"LINCHENYU2030S"},"content":"                return output;","lastModifiedDate":"2023-09-16"},{"lineNumber":121,"author":{"gitId":"LINCHENYU2030S"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"LINCHENYU2030S"},"content":"                output \u003d Ui.getAlertForEvent();","lastModifiedDate":"2023-09-16"},{"lineNumber":123,"author":{"gitId":"LINCHENYU2030S"},"content":"                return output;","lastModifiedDate":"2023-09-16"},{"lineNumber":124,"author":{"gitId":"LINCHENYU2030S"},"content":"            } finally {","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"LINCHENYU2030S"},"content":"                break;","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"LINCHENYU2030S"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"LINCHENYU2030S"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":129,"author":{"gitId":"LINCHENYU2030S"},"content":"        return output;","lastModifiedDate":"2023-09-16"},{"lineNumber":130,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"LINCHENYU2030S"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"LINCHENYU2030S":132}},{"path":"src/main/java/Alex/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LINCHENYU2030S"},"content":"package Alex.commands;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"LINCHENYU2030S"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"LINCHENYU2030S"},"content":" * An abstract class represents general command which is going to be extended from a more concrete command class.","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"LINCHENYU2030S"},"content":" * The classes that extend from this class need to overrite the method \"public abstract void execute()\" in order","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"LINCHENYU2030S"},"content":" * to be a concrete class.","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"LINCHENYU2030S"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"LINCHENYU2030S"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"LINCHENYU2030S"},"content":"     * A common method that needs to be overriden by the class extending from Command class.","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"LINCHENYU2030S"},"content":"    public abstract String execute();","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"LINCHENYU2030S"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"LINCHENYU2030S":14}},{"path":"src/main/java/Alex/commands/Edit.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LINCHENYU2030S"},"content":"package Alex.commands;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"LINCHENYU2030S"},"content":"public enum Edit {","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"LINCHENYU2030S"},"content":"    MARK,","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"LINCHENYU2030S"},"content":"    UNMARK,","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"LINCHENYU2030S"},"content":"    DELETE","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"LINCHENYU2030S"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"LINCHENYU2030S":7}},{"path":"src/main/java/Alex/commands/EditCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LINCHENYU2030S"},"content":"package Alex.commands;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"LINCHENYU2030S"},"content":"import Alex.AlexException;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"LINCHENYU2030S"},"content":"import Alex.ui.Ui;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"LINCHENYU2030S"},"content":"import Alex.tasks.Task;","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"LINCHENYU2030S"},"content":"import Alex.tasks.TaskList;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"LINCHENYU2030S"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"LINCHENYU2030S"},"content":" * A class that extends from Command class. It represents a command that is trying to mark a task bo be done, unmark","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"LINCHENYU2030S"},"content":" * a task or delete a task in TaskList.","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"LINCHENYU2030S"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"LINCHENYU2030S"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"LINCHENYU2030S"},"content":"    private String command;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"LINCHENYU2030S"},"content":"    private Edit editType;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"LINCHENYU2030S"},"content":"     * The constructor of EditCommand when the user input string and editType is given.","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"LINCHENYU2030S"},"content":"     * @param command The user input string.","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"LINCHENYU2030S"},"content":"     * @param editType The type of edit command which consist of \"MARK\", \"UNMARK\" and \"DELETE\".","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"LINCHENYU2030S"},"content":"    public EditCommand(String command, Edit editType) {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"LINCHENYU2030S"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"LINCHENYU2030S"},"content":"        this.editType \u003d editType;","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"LINCHENYU2030S"},"content":"     * Override the method from the abstract Command class.","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"LINCHENYU2030S"},"content":"     * The execute method of EditCommand class is to actually edit the task specified by user to the TaskList such as","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"LINCHENYU2030S"},"content":"     * mark task, unmark task and delete an existing class in TaskList.","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"LINCHENYU2030S"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"LINCHENYU2030S"},"content":"    public String execute() {","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"LINCHENYU2030S"},"content":"        String output \u003d null;","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"LINCHENYU2030S"},"content":"        switch (this.editType) {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"LINCHENYU2030S"},"content":"        case MARK:","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"LINCHENYU2030S"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"LINCHENYU2030S"},"content":"                int index \u003d Integer.parseInt(command.substring(5));","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"LINCHENYU2030S"},"content":"                Task targetedTask \u003d TaskList.getTaskByIndex(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"LINCHENYU2030S"},"content":"                output \u003d targetedTask.mark();","lastModifiedDate":"2023-09-16"},{"lineNumber":41,"author":{"gitId":"LINCHENYU2030S"},"content":"                return output;","lastModifiedDate":"2023-09-16"},{"lineNumber":42,"author":{"gitId":"LINCHENYU2030S"},"content":"            } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"LINCHENYU2030S"},"content":"                output \u003d Ui.getAlertForMark();","lastModifiedDate":"2023-09-16"},{"lineNumber":44,"author":{"gitId":"LINCHENYU2030S"},"content":"                return output;","lastModifiedDate":"2023-09-16"},{"lineNumber":45,"author":{"gitId":"LINCHENYU2030S"},"content":"            } catch (AlexException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"LINCHENYU2030S"},"content":"                output \u003d e.getMessage();","lastModifiedDate":"2023-09-16"},{"lineNumber":47,"author":{"gitId":"LINCHENYU2030S"},"content":"                return output;","lastModifiedDate":"2023-09-16"},{"lineNumber":48,"author":{"gitId":"LINCHENYU2030S"},"content":"            } finally {","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"LINCHENYU2030S"},"content":"                break;","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"LINCHENYU2030S"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"LINCHENYU2030S"},"content":"        case UNMARK:","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"LINCHENYU2030S"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"LINCHENYU2030S"},"content":"                int index \u003d Integer.parseInt(command.substring(7));","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"LINCHENYU2030S"},"content":"                Task targetedTask \u003d TaskList.getTaskByIndex(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"LINCHENYU2030S"},"content":"                output \u003d targetedTask.unmark();","lastModifiedDate":"2023-09-16"},{"lineNumber":57,"author":{"gitId":"LINCHENYU2030S"},"content":"                return output;","lastModifiedDate":"2023-09-16"},{"lineNumber":58,"author":{"gitId":"LINCHENYU2030S"},"content":"            } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"LINCHENYU2030S"},"content":"                output \u003d Ui.getAlertForUnmark();","lastModifiedDate":"2023-09-16"},{"lineNumber":60,"author":{"gitId":"LINCHENYU2030S"},"content":"                return output;","lastModifiedDate":"2023-09-16"},{"lineNumber":61,"author":{"gitId":"LINCHENYU2030S"},"content":"            } catch (AlexException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"LINCHENYU2030S"},"content":"                output \u003d e.getMessage();","lastModifiedDate":"2023-09-16"},{"lineNumber":63,"author":{"gitId":"LINCHENYU2030S"},"content":"                return output;","lastModifiedDate":"2023-09-16"},{"lineNumber":64,"author":{"gitId":"LINCHENYU2030S"},"content":"            } finally {","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"LINCHENYU2030S"},"content":"                break;","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"LINCHENYU2030S"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"LINCHENYU2030S"},"content":"        case DELETE:","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"LINCHENYU2030S"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"LINCHENYU2030S"},"content":"                int toDeleteIndex \u003d Integer.parseInt(command.substring(7, 8));","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"LINCHENYU2030S"},"content":"                output \u003d TaskList.delete(toDeleteIndex);","lastModifiedDate":"2023-09-16"},{"lineNumber":72,"author":{"gitId":"LINCHENYU2030S"},"content":"                return output;","lastModifiedDate":"2023-09-16"},{"lineNumber":73,"author":{"gitId":"LINCHENYU2030S"},"content":"            } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"LINCHENYU2030S"},"content":"                output \u003d Ui.getAlertForDelete();","lastModifiedDate":"2023-09-16"},{"lineNumber":75,"author":{"gitId":"LINCHENYU2030S"},"content":"                return output;","lastModifiedDate":"2023-09-16"},{"lineNumber":76,"author":{"gitId":"LINCHENYU2030S"},"content":"            } finally {","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"LINCHENYU2030S"},"content":"                break;","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"LINCHENYU2030S"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"LINCHENYU2030S"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"LINCHENYU2030S"},"content":"        return output;","lastModifiedDate":"2023-09-16"},{"lineNumber":81,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"LINCHENYU2030S"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"LINCHENYU2030S":84}},{"path":"src/main/java/Alex/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LINCHENYU2030S"},"content":"package Alex.commands;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"LINCHENYU2030S"},"content":"import Alex.ui.Ui;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"LINCHENYU2030S"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"LINCHENYU2030S"},"content":" * A class that represents the command for exiting the execution of Alex bot.","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"LINCHENYU2030S"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"LINCHENYU2030S"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"LINCHENYU2030S"},"content":"    private String command;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"LINCHENYU2030S"},"content":"    public ExitCommand(String command) {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"LINCHENYU2030S"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"LINCHENYU2030S"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"LINCHENYU2030S"},"content":"    public String execute() {","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"LINCHENYU2030S"},"content":"        String output \u003d Ui.bye();","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"LINCHENYU2030S"},"content":"        System.exit(0);","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"LINCHENYU2030S"},"content":"        return output;","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"LINCHENYU2030S"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"LINCHENYU2030S":20}},{"path":"src/main/java/Alex/commands/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LINCHENYU2030S"},"content":"package Alex.commands;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"LINCHENYU2030S"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"LINCHENYU2030S"},"content":" * A class that represents \"user command parser\" to parse the user input command string.","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"LINCHENYU2030S"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"LINCHENYU2030S"},"content":"public class Parser {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"LINCHENYU2030S"},"content":"     * A static method that is used to parse the user input command string and return the corresponding","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"LINCHENYU2030S"},"content":"     * command instance.","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"LINCHENYU2030S"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"LINCHENYU2030S"},"content":"     * @param command user input command string.","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"LINCHENYU2030S"},"content":"     * @return the corresponding command instance representing the command specified by user.","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"LINCHENYU2030S"},"content":"    public static Command parse(String command) {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"LINCHENYU2030S"},"content":"        int commandLength \u003d command.length();","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"LINCHENYU2030S"},"content":"        Command c;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"LINCHENYU2030S"},"content":"        if (commandLength \u003e\u003d 4 \u0026\u0026 command.substring(0, 4).equals(\"mark\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"LINCHENYU2030S"},"content":"            Edit edit \u003d Edit.MARK;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"LINCHENYU2030S"},"content":"            c \u003d new EditCommand(command, edit);","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"LINCHENYU2030S"},"content":"        } else if (commandLength \u003e\u003d 6 \u0026\u0026 command.substring(0, 6).equals(\"unmark\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"LINCHENYU2030S"},"content":"            Edit edit \u003d Edit.UNMARK;","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"LINCHENYU2030S"},"content":"            c \u003d new EditCommand(command, edit);","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"LINCHENYU2030S"},"content":"        } else if (commandLength \u003e\u003d 6 \u0026\u0026 command.substring(0, 6).equals(\"delete\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"LINCHENYU2030S"},"content":"            Edit edit \u003d Edit.DELETE;","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"LINCHENYU2030S"},"content":"            c \u003d new EditCommand(command, edit);","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"LINCHENYU2030S"},"content":"        } else if (command.equals(\"list\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"LINCHENYU2030S"},"content":"            View view \u003d View.LISTALL;","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"LINCHENYU2030S"},"content":"            c \u003d new ViewCommand(command, view);","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"LINCHENYU2030S"},"content":"        } else if (commandLength \u003d\u003d 10 \u0026\u0026 command.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2}\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"LINCHENYU2030S"},"content":"            View view \u003d View.LISTONEDAY;","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"LINCHENYU2030S"},"content":"            c \u003d new ViewCommand(command, view);","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"LINCHENYU2030S"},"content":"        } else if (commandLength \u003e\u003d 4 \u0026\u0026 command.substring(0, 4).equals(\"todo\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"LINCHENYU2030S"},"content":"            Add add \u003d Add.TODO;","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"LINCHENYU2030S"},"content":"            c \u003d new AddCommand(command, add);","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"LINCHENYU2030S"},"content":"        } else if (commandLength \u003e\u003d 8 \u0026\u0026 command.substring(0, 8).equals(\"deadline\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"LINCHENYU2030S"},"content":"            Add add \u003d Add.DEADLINE;","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"LINCHENYU2030S"},"content":"            c \u003d new AddCommand(command, add);","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"LINCHENYU2030S"},"content":"        } else if (commandLength \u003e\u003d 5 \u0026\u0026 command.substring(0, 5).equals(\"event\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"LINCHENYU2030S"},"content":"            Add add \u003d Add.EVENT;","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"LINCHENYU2030S"},"content":"            c \u003d new AddCommand(command, add);","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"LINCHENYU2030S"},"content":"        } else if (command.equals(\"bye\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"LINCHENYU2030S"},"content":"            c \u003d new ExitCommand(command);","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"LINCHENYU2030S"},"content":"        } else if (commandLength \u003e\u003d 4 \u0026\u0026 command.substring(0, 4).equals(\"find\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"LINCHENYU2030S"},"content":"            View view \u003d View.FIND;","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"LINCHENYU2030S"},"content":"            c \u003d new ViewCommand(command, view);","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"LINCHENYU2030S"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"LINCHENYU2030S"},"content":"            c \u003d new UnknownCommand(command);","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"LINCHENYU2030S"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"LINCHENYU2030S"},"content":"        return c;","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"LINCHENYU2030S"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"LINCHENYU2030S":51}},{"path":"src/main/java/Alex/commands/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LINCHENYU2030S"},"content":"package Alex.commands;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"LINCHENYU2030S"},"content":"import Alex.ui.Ui;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"LINCHENYU2030S"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"LINCHENYU2030S"},"content":" * A class that extends from Command class. The instance of this class represents a command that is not predefined","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"LINCHENYU2030S"},"content":" * or is not understand by the chat bot Alex.","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"LINCHENYU2030S"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"LINCHENYU2030S"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"LINCHENYU2030S"},"content":"    private String command;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"LINCHENYU2030S"},"content":"     * The constructor of UnknownCommand when an user input string is given.","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"LINCHENYU2030S"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"LINCHENYU2030S"},"content":"     * @param command The user input string.","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"LINCHENYU2030S"},"content":"    public UnknownCommand(String command) {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"LINCHENYU2030S"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"LINCHENYU2030S"},"content":"     * Override the method from the Command class.","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"LINCHENYU2030S"},"content":"     * The execute method of UnknownCommand class is used to actually print alert message to the standard output","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"LINCHENYU2030S"},"content":"     * to notify the user that the command typed by the user is defined or not known by the chat bot Alex.","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"LINCHENYU2030S"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"LINCHENYU2030S"},"content":"    public String execute() {","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"LINCHENYU2030S"},"content":"        String output \u003d Ui.getAlertForUnknown();","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"LINCHENYU2030S"},"content":"        return output;","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"LINCHENYU2030S"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"LINCHENYU2030S":32}},{"path":"src/main/java/Alex/commands/View.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LINCHENYU2030S"},"content":"package Alex.commands;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"LINCHENYU2030S"},"content":"public enum View {","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"LINCHENYU2030S"},"content":"    LISTALL,","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"LINCHENYU2030S"},"content":"    LISTONEDAY,","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"LINCHENYU2030S"},"content":"    FIND","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"LINCHENYU2030S"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"LINCHENYU2030S":7}},{"path":"src/main/java/Alex/commands/ViewCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LINCHENYU2030S"},"content":"package Alex.commands;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"LINCHENYU2030S"},"content":"import Alex.AlexException;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"LINCHENYU2030S"},"content":"import Alex.ui.Ui;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"LINCHENYU2030S"},"content":"import Alex.tasks.TaskList;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"LINCHENYU2030S"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"LINCHENYU2030S"},"content":" * A class that extends from Commadn class. The instance of this class represents a command that is trying to","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"LINCHENYU2030S"},"content":" * view the existing the class in the TaskList. It includes listing all the task(s) in the TaskList, listing all the","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"LINCHENYU2030S"},"content":" * task(s) in a specific date.","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"LINCHENYU2030S"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"LINCHENYU2030S"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"LINCHENYU2030S"},"content":"    private String command;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"LINCHENYU2030S"},"content":"    private View viewType;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"LINCHENYU2030S"},"content":"     * The constructor of ViewCommand class when the user input string and viewType is given.","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"LINCHENYU2030S"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"LINCHENYU2030S"},"content":"     * @param command The user input string.","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"LINCHENYU2030S"},"content":"     * @param viewType The type of view command which consist of \"LISTALL\", \"LISTONEDAY\".","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"LINCHENYU2030S"},"content":"    public ViewCommand(String command, View viewType) {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"LINCHENYU2030S"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"LINCHENYU2030S"},"content":"        this.viewType \u003d viewType;","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"LINCHENYU2030S"},"content":"     * Override the method from Command class.","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"LINCHENYU2030S"},"content":"     * The execute method of ViewCommand class is to actually print all the task(s) in the TaskList or","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"LINCHENYU2030S"},"content":"     * the task(s) of a specific date to the standard output.","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"LINCHENYU2030S"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"LINCHENYU2030S"},"content":"    public String execute() {","lastModifiedDate":"2023-09-16"},{"lineNumber":36,"author":{"gitId":"LINCHENYU2030S"},"content":"        String output \u003d null;","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"LINCHENYU2030S"},"content":"        switch(this.viewType) {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"LINCHENYU2030S"},"content":"        case LISTALL:","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"LINCHENYU2030S"},"content":"            output \u003d TaskList.getAllContent();","lastModifiedDate":"2023-09-16"},{"lineNumber":40,"author":{"gitId":"LINCHENYU2030S"},"content":"            return output;","lastModifiedDate":"2023-09-16"},{"lineNumber":41,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"LINCHENYU2030S"},"content":"        case LISTONEDAY:","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"LINCHENYU2030S"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"LINCHENYU2030S"},"content":"                output \u003d TaskList.getTaskForDate(command);","lastModifiedDate":"2023-09-16"},{"lineNumber":45,"author":{"gitId":"LINCHENYU2030S"},"content":"                return output;","lastModifiedDate":"2023-09-16"},{"lineNumber":46,"author":{"gitId":"LINCHENYU2030S"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"LINCHENYU2030S"},"content":"                output \u003d Ui.getAlertForDate();","lastModifiedDate":"2023-09-16"},{"lineNumber":48,"author":{"gitId":"LINCHENYU2030S"},"content":"                return output;","lastModifiedDate":"2023-09-16"},{"lineNumber":49,"author":{"gitId":"LINCHENYU2030S"},"content":"            } finally {","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"LINCHENYU2030S"},"content":"                break;","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"LINCHENYU2030S"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"LINCHENYU2030S"},"content":"        case FIND:","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"LINCHENYU2030S"},"content":"            try {","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"LINCHENYU2030S"},"content":"                if (command.length() \u003d\u003d 4 || !command.substring(4, 5).equals(\" \")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"LINCHENYU2030S"},"content":"                    throw new AlexException(\"\");","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"LINCHENYU2030S"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"LINCHENYU2030S"},"content":"                String toMatch \u003d command.substring(5).stripTrailing();","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"LINCHENYU2030S"},"content":"                output \u003d TaskList.getTaskForMatchWord(toMatch);","lastModifiedDate":"2023-09-16"},{"lineNumber":60,"author":{"gitId":"LINCHENYU2030S"},"content":"                return output;","lastModifiedDate":"2023-09-16"},{"lineNumber":61,"author":{"gitId":"LINCHENYU2030S"},"content":"            } catch (AlexException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"LINCHENYU2030S"},"content":"                output \u003d Ui.getAlertForFind();","lastModifiedDate":"2023-09-16"},{"lineNumber":63,"author":{"gitId":"LINCHENYU2030S"},"content":"                return output;","lastModifiedDate":"2023-09-16"},{"lineNumber":64,"author":{"gitId":"LINCHENYU2030S"},"content":"            } finally {","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"LINCHENYU2030S"},"content":"                break;","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"LINCHENYU2030S"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"LINCHENYU2030S"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"LINCHENYU2030S"},"content":"        return output;","lastModifiedDate":"2023-09-16"},{"lineNumber":69,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"LINCHENYU2030S"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"LINCHENYU2030S":72}},{"path":"src/main/java/Alex/storage/UserInputStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LINCHENYU2030S"},"content":"package Alex.storage;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.io.File;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"LINCHENYU2030S"},"content":"import Alex.AlexException;","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"LINCHENYU2030S"},"content":"import Alex.tasks.*;","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"LINCHENYU2030S"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"LINCHENYU2030S"},"content":" * A class that is used to deal with user data storage. For example, storing all the task(s) in TaskList into","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"LINCHENYU2030S"},"content":" * the file Alex.txt after every termination of the chatbot execution. Similarly, restore all the task(s) in","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"LINCHENYU2030S"},"content":" * Alex.txt into TaskList every time when the user run the chatbot.","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"LINCHENYU2030S"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"LINCHENYU2030S"},"content":"public class UserInputStorage {","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"LINCHENYU2030S"},"content":"     * A constant that is used to represent time format throughout this program. The time format is yyyy-MM-dd HHmm.","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"LINCHENYU2030S"},"content":"    public static final DateTimeFormatter TIMEFORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"LINCHENYU2030S"},"content":"     * This static method prints out all the user data stored in the file data/Alex.txt","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"LINCHENYU2030S"},"content":"    public static void printFileContent() {","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"LINCHENYU2030S"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"LINCHENYU2030S"},"content":"            File userDataFile \u003d new File(\"data/Alex.txt\");","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"LINCHENYU2030S"},"content":"            if (!userDataFile.getParentFile().exists()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"LINCHENYU2030S"},"content":"                userDataFile.getParentFile().mkdir();","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"LINCHENYU2030S"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"LINCHENYU2030S"},"content":"            Scanner userDataScanner \u003d new Scanner(userDataFile);","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"LINCHENYU2030S"},"content":"            while (userDataScanner.hasNextLine()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"LINCHENYU2030S"},"content":"                String userData \u003d userDataScanner.nextLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"LINCHENYU2030S"},"content":"                System.out.println(userData);","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"LINCHENYU2030S"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"LINCHENYU2030S"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"LINCHENYU2030S"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"LINCHENYU2030S"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"LINCHENYU2030S"},"content":"     * A static method that is used to store all the task(s) in TaskList to the file Alex.txt","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"LINCHENYU2030S"},"content":"     * after every termination of the Alex bot execution.","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"LINCHENYU2030S"},"content":"    public static String storeToFile() {","lastModifiedDate":"2023-09-16"},{"lineNumber":53,"author":{"gitId":"LINCHENYU2030S"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"LINCHENYU2030S"},"content":"            FileWriter fw \u003d new FileWriter(\"data/Alex.txt\");","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"LINCHENYU2030S"},"content":"            int numberOfElements \u003d TaskList.getNumberOfElements();","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"LINCHENYU2030S"},"content":"            for (int i \u003d 1; i \u003c\u003d numberOfElements; i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"LINCHENYU2030S"},"content":"                Task task \u003d TaskList.getTaskByIndex(i);","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"LINCHENYU2030S"},"content":"                String taskInfo \u003d \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"LINCHENYU2030S"},"content":"                if (task instanceof ToDos) {","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"LINCHENYU2030S"},"content":"                    taskInfo \u003d \"T \" + task.getDescription() + (task.isDone() ? \" 1\" : \" 0\");","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"LINCHENYU2030S"},"content":"                } else if (task instanceof Deadline) {","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"LINCHENYU2030S"},"content":"                    Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"LINCHENYU2030S"},"content":"                    taskInfo \u003d \"D \" + deadline.getDescription() + \" /by \" + deadline.getBy()","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"LINCHENYU2030S"},"content":"                            + (task.isDone() ? \" 1\" : \" 0\");","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"LINCHENYU2030S"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"LINCHENYU2030S"},"content":"                    Event event \u003d (Event) task;","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"LINCHENYU2030S"},"content":"                    taskInfo \u003d \"E \" + event.getDescription() + \" /from \" + event.getFromTime() + \" /to \"","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"LINCHENYU2030S"},"content":"                            + event.getToTime() + (task.isDone() ? \" 1\" : \" 0\");","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"LINCHENYU2030S"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"LINCHENYU2030S"},"content":"                if (i \u003d\u003d numberOfElements) {","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"LINCHENYU2030S"},"content":"                    fw.write(taskInfo);","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"LINCHENYU2030S"},"content":"                } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"LINCHENYU2030S"},"content":"                    fw.write(taskInfo + \"\\n\");","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"LINCHENYU2030S"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"LINCHENYU2030S"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"LINCHENYU2030S"},"content":"            fw.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"LINCHENYU2030S"},"content":"            return \"User data is successfully stored\";","lastModifiedDate":"2023-09-16"},{"lineNumber":79,"author":{"gitId":"LINCHENYU2030S"},"content":"        } catch (IOException | AlexException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"LINCHENYU2030S"},"content":"            return \"Something went wrong when saving users data to Alex.txt: \" + e.getMessage();","lastModifiedDate":"2023-09-16"},{"lineNumber":81,"author":{"gitId":"LINCHENYU2030S"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":85,"author":{"gitId":"LINCHENYU2030S"},"content":"     * A static method that is used to load all the user data (task) from the file Alex.txt into TaskList","lastModifiedDate":"2023-09-09"},{"lineNumber":86,"author":{"gitId":"LINCHENYU2030S"},"content":"     * every time the user start running Alex bot.","lastModifiedDate":"2023-09-09"},{"lineNumber":87,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":88,"author":{"gitId":"LINCHENYU2030S"},"content":"    public static void loadUserDateFromFile() {","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"LINCHENYU2030S"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"LINCHENYU2030S"},"content":"            File userDataFile \u003d new File(\"data/Alex.txt\");","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"LINCHENYU2030S"},"content":"            if (!userDataFile.getParentFile().exists()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"LINCHENYU2030S"},"content":"                userDataFile.getParentFile().mkdir();","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"LINCHENYU2030S"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"LINCHENYU2030S"},"content":"            Scanner userDataScanner \u003d new Scanner(userDataFile);","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"LINCHENYU2030S"},"content":"            while (userDataScanner.hasNextLine()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"LINCHENYU2030S"},"content":"                String userData \u003d userDataScanner.nextLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"LINCHENYU2030S"},"content":"                userData \u003d userData.stripTrailing();","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"LINCHENYU2030S"},"content":"                String taskType \u003d userData.substring(0, 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"LINCHENYU2030S"},"content":"                int dataLength \u003d userData.length();","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"LINCHENYU2030S"},"content":"                Task taskToBeStored \u003d new Task(\"temp\");","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"LINCHENYU2030S"},"content":"                int isDoneSymbol \u003d Integer.parseInt(userData.substring(dataLength - 1, dataLength));","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"LINCHENYU2030S"},"content":"                boolean isDone \u003d isDoneSymbol \u003d\u003d 1 ? true : false;","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"LINCHENYU2030S"},"content":"                if (!userData.substring(1, 2).equals(\" \") || (isDoneSymbol !\u003d 1 \u0026\u0026 isDoneSymbol !\u003d 0)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"LINCHENYU2030S"},"content":"                    throw new AlexException(\"\");","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"LINCHENYU2030S"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"LINCHENYU2030S"},"content":"                if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"LINCHENYU2030S"},"content":"                    try {","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"LINCHENYU2030S"},"content":"                        String description \u003d userData.substring(2, dataLength - 2);","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"LINCHENYU2030S"},"content":"                        taskToBeStored \u003d new ToDos(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"LINCHENYU2030S"},"content":"                        TaskList.store(taskToBeStored, false);","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"LINCHENYU2030S"},"content":"                    } catch (AlexException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"LINCHENYU2030S"},"content":"                        String message \u003d \"OOPS!!! The program terminates because the data format at line \"","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"LINCHENYU2030S"},"content":"                                + (TaskList.getNumberOfElements() + 1)","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"LINCHENYU2030S"},"content":"                                + \"is wrong\" + \"\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"LINCHENYU2030S"},"content":"                                + \"The correct data format for a todo task should be: \\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"LINCHENYU2030S"},"content":"                                + \"   \"","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"LINCHENYU2030S"},"content":"                                + \"T (description) (1/0) where 1 indicates done and 0 indicates undone\";","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"LINCHENYU2030S"},"content":"                        System.out.println(message);","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"LINCHENYU2030S"},"content":"                        System.exit(0);","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"LINCHENYU2030S"},"content":"                    }","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"LINCHENYU2030S"},"content":"                } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"LINCHENYU2030S"},"content":"                    try {","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"LINCHENYU2030S"},"content":"                        String descriptionWithTime \u003d userData.substring(0, dataLength - 2);","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"LINCHENYU2030S"},"content":"                        String regex \u003d \"\\\\b /by \\\\b\";","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"LINCHENYU2030S"},"content":"                        Pattern pattern \u003d Pattern.compile(regex);","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"LINCHENYU2030S"},"content":"                        Matcher matcher \u003d pattern.matcher(descriptionWithTime);","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"LINCHENYU2030S"},"content":"                        if (!matcher.find()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"LINCHENYU2030S"},"content":"                            throw new AlexException(\"\");","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"LINCHENYU2030S"},"content":"                        }","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"LINCHENYU2030S"},"content":"                        int startIndex \u003d matcher.start();","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"LINCHENYU2030S"},"content":"                        int endIndex \u003d matcher.end();","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"LINCHENYU2030S"},"content":"                        String description \u003d startIndex \u003e 2 ? userData.substring(2, startIndex) : \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"LINCHENYU2030S"},"content":"                        String by \u003d userData.substring(endIndex, dataLength - 2);","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"LINCHENYU2030S"},"content":"                        taskToBeStored \u003d new Deadline(description, by);","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"LINCHENYU2030S"},"content":"                        TaskList.store(taskToBeStored, false);","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"LINCHENYU2030S"},"content":"                    } catch (AlexException | IndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"LINCHENYU2030S"},"content":"                        String message \u003d \"OOPS!!! The program terminates because the data format at line \"","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"LINCHENYU2030S"},"content":"                                + (TaskList.getNumberOfElements() + 1)","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"LINCHENYU2030S"},"content":"                                + \" is wrong\" + \"\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"LINCHENYU2030S"},"content":"                                + \"The correct data format for a deadline task should be: \\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"LINCHENYU2030S"},"content":"                                + \"   \"","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"LINCHENYU2030S"},"content":"                                + \"D (description) /by yyyy-MM-dd HHmm (1/0) where 1 indicates done and\"","lastModifiedDate":"2023-09-16"},{"lineNumber":145,"author":{"gitId":"LINCHENYU2030S"},"content":"                                + \" 0 indicates undone\";","lastModifiedDate":"2023-09-16"},{"lineNumber":146,"author":{"gitId":"LINCHENYU2030S"},"content":"                        System.out.println(message);","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"LINCHENYU2030S"},"content":"                        System.exit(0);","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"LINCHENYU2030S"},"content":"                    }","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"LINCHENYU2030S"},"content":"                } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"LINCHENYU2030S"},"content":"                    try {","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"LINCHENYU2030S"},"content":"                        String descriptionWithTime \u003d userData.substring(0, dataLength - 2);","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"LINCHENYU2030S"},"content":"                        String regex \u003d \"\\\\b /from \\\\b\";","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"LINCHENYU2030S"},"content":"                        Pattern pattern1 \u003d Pattern.compile(regex);","lastModifiedDate":"2023-09-02"},{"lineNumber":154,"author":{"gitId":"LINCHENYU2030S"},"content":"                        Matcher matcher1 \u003d pattern1.matcher(descriptionWithTime);","lastModifiedDate":"2023-09-02"},{"lineNumber":155,"author":{"gitId":"LINCHENYU2030S"},"content":"                        if (!matcher1.find()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"LINCHENYU2030S"},"content":"                            throw new AlexException(\"\");","lastModifiedDate":"2023-09-02"},{"lineNumber":157,"author":{"gitId":"LINCHENYU2030S"},"content":"                        }","lastModifiedDate":"2023-09-02"},{"lineNumber":158,"author":{"gitId":"LINCHENYU2030S"},"content":"                        int firstStart \u003d matcher1.start();","lastModifiedDate":"2023-09-02"},{"lineNumber":159,"author":{"gitId":"LINCHENYU2030S"},"content":"                        int firstEnd \u003d matcher1.end();","lastModifiedDate":"2023-09-02"},{"lineNumber":160,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":161,"author":{"gitId":"LINCHENYU2030S"},"content":"                        String regex2 \u003d \"\\\\b /to \\\\b\";","lastModifiedDate":"2023-09-02"},{"lineNumber":162,"author":{"gitId":"LINCHENYU2030S"},"content":"                        Pattern pattern2 \u003d Pattern.compile(regex2);","lastModifiedDate":"2023-09-02"},{"lineNumber":163,"author":{"gitId":"LINCHENYU2030S"},"content":"                        Matcher matcher2 \u003d pattern2.matcher(descriptionWithTime);","lastModifiedDate":"2023-09-02"},{"lineNumber":164,"author":{"gitId":"LINCHENYU2030S"},"content":"                        if (!matcher2.find()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":165,"author":{"gitId":"LINCHENYU2030S"},"content":"                            throw new AlexException(\"\");","lastModifiedDate":"2023-09-02"},{"lineNumber":166,"author":{"gitId":"LINCHENYU2030S"},"content":"                        }","lastModifiedDate":"2023-09-02"},{"lineNumber":167,"author":{"gitId":"LINCHENYU2030S"},"content":"                        int secondStart \u003d matcher2.start();","lastModifiedDate":"2023-09-02"},{"lineNumber":168,"author":{"gitId":"LINCHENYU2030S"},"content":"                        int secondEnd \u003d matcher2.end();","lastModifiedDate":"2023-09-02"},{"lineNumber":169,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":170,"author":{"gitId":"LINCHENYU2030S"},"content":"                        String description \u003d firstStart \u003e 2 ? userData.substring(2, firstStart) : \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":171,"author":{"gitId":"LINCHENYU2030S"},"content":"                        String fromTime \u003d userData.substring(firstEnd, secondStart);","lastModifiedDate":"2023-09-02"},{"lineNumber":172,"author":{"gitId":"LINCHENYU2030S"},"content":"                        String toTime \u003d userData.substring(secondEnd, dataLength - 2);","lastModifiedDate":"2023-09-02"},{"lineNumber":173,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":174,"author":{"gitId":"LINCHENYU2030S"},"content":"                        taskToBeStored \u003d new Event(description, fromTime, toTime);","lastModifiedDate":"2023-09-02"},{"lineNumber":175,"author":{"gitId":"LINCHENYU2030S"},"content":"                        TaskList.store(taskToBeStored, false);","lastModifiedDate":"2023-09-02"},{"lineNumber":176,"author":{"gitId":"LINCHENYU2030S"},"content":"                    } catch (AlexException | IndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":177,"author":{"gitId":"LINCHENYU2030S"},"content":"                        String message \u003d \"OOPS!!! The program terminates because the data format at line \"","lastModifiedDate":"2023-09-02"},{"lineNumber":178,"author":{"gitId":"LINCHENYU2030S"},"content":"                                + (TaskList.getNumberOfElements() + 1)","lastModifiedDate":"2023-09-02"},{"lineNumber":179,"author":{"gitId":"LINCHENYU2030S"},"content":"                                + \"is wrong\" + \"\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":180,"author":{"gitId":"LINCHENYU2030S"},"content":"                                + \"The correct data format for an event task should be: \\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":181,"author":{"gitId":"LINCHENYU2030S"},"content":"                                + \"   \"","lastModifiedDate":"2023-09-02"},{"lineNumber":182,"author":{"gitId":"LINCHENYU2030S"},"content":"                                + \"E (description) /from yyyy-MM-dd HHmm /to yyyy-MM-dd HHmm (1/0) \"","lastModifiedDate":"2023-09-16"},{"lineNumber":183,"author":{"gitId":"LINCHENYU2030S"},"content":"                                + \"where 1 indicates done and 0 indicates undone\";","lastModifiedDate":"2023-09-16"},{"lineNumber":184,"author":{"gitId":"LINCHENYU2030S"},"content":"                        System.out.println(message);","lastModifiedDate":"2023-09-02"},{"lineNumber":185,"author":{"gitId":"LINCHENYU2030S"},"content":"                        System.exit(0);","lastModifiedDate":"2023-09-02"},{"lineNumber":186,"author":{"gitId":"LINCHENYU2030S"},"content":"                    }","lastModifiedDate":"2023-09-02"},{"lineNumber":187,"author":{"gitId":"LINCHENYU2030S"},"content":"                } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":188,"author":{"gitId":"LINCHENYU2030S"},"content":"                    throw new AlexException(\"\");","lastModifiedDate":"2023-09-02"},{"lineNumber":189,"author":{"gitId":"LINCHENYU2030S"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":190,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":191,"author":{"gitId":"LINCHENYU2030S"},"content":"                if (isDone) {","lastModifiedDate":"2023-09-02"},{"lineNumber":192,"author":{"gitId":"LINCHENYU2030S"},"content":"                    taskToBeStored.mark(false);","lastModifiedDate":"2023-09-02"},{"lineNumber":193,"author":{"gitId":"LINCHENYU2030S"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":194,"author":{"gitId":"LINCHENYU2030S"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":195,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":196,"author":{"gitId":"LINCHENYU2030S"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":197,"author":{"gitId":"LINCHENYU2030S"},"content":"            File userDataFile \u003d new File(\"data/Alex.txt\");","lastModifiedDate":"2023-09-03"},{"lineNumber":198,"author":{"gitId":"LINCHENYU2030S"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":199,"author":{"gitId":"LINCHENYU2030S"},"content":"                userDataFile.createNewFile();","lastModifiedDate":"2023-09-02"},{"lineNumber":200,"author":{"gitId":"LINCHENYU2030S"},"content":"            } catch (IOException e2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":201,"author":{"gitId":"LINCHENYU2030S"},"content":"                System.err.println(\"The file Alex.txt does not exits and there is an error creating the file: \"","lastModifiedDate":"2023-09-02"},{"lineNumber":202,"author":{"gitId":"LINCHENYU2030S"},"content":"                        + e2.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":203,"author":{"gitId":"LINCHENYU2030S"},"content":"                // System.exit(0);","lastModifiedDate":"2023-09-03"},{"lineNumber":204,"author":{"gitId":"LINCHENYU2030S"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":205,"author":{"gitId":"LINCHENYU2030S"},"content":"        } catch (AlexException | NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":206,"author":{"gitId":"LINCHENYU2030S"},"content":"            String message \u003d \"OOPS!!! The program terminates because the data format at line \"","lastModifiedDate":"2023-09-02"},{"lineNumber":207,"author":{"gitId":"LINCHENYU2030S"},"content":"                    + (TaskList.getNumberOfElements() + 1)","lastModifiedDate":"2023-09-02"},{"lineNumber":208,"author":{"gitId":"LINCHENYU2030S"},"content":"                    + \"is wrong\" + \"\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":209,"author":{"gitId":"LINCHENYU2030S"},"content":"                    + \"The correct data format for a todo task should be: \\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":210,"author":{"gitId":"LINCHENYU2030S"},"content":"                    + \"   \"","lastModifiedDate":"2023-09-02"},{"lineNumber":211,"author":{"gitId":"LINCHENYU2030S"},"content":"                    + \"T (description) (1/0) where 1 indicates done and 0 indicates undone\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":212,"author":{"gitId":"LINCHENYU2030S"},"content":"                    + \"The correct data format for a deadline task should be: \\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":213,"author":{"gitId":"LINCHENYU2030S"},"content":"                    + \"   \"","lastModifiedDate":"2023-09-02"},{"lineNumber":214,"author":{"gitId":"LINCHENYU2030S"},"content":"                    + \"D (description) /by yyyy-MM-dd HHmm (1/0) where 1 indicates done and 0 indicates undone\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":215,"author":{"gitId":"LINCHENYU2030S"},"content":"                    + \"The correct data format for a event task should be: \\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":216,"author":{"gitId":"LINCHENYU2030S"},"content":"                    + \"   \"","lastModifiedDate":"2023-09-02"},{"lineNumber":217,"author":{"gitId":"LINCHENYU2030S"},"content":"                    + \"E (description) /from yyyy-MM-dd HHmm /to yyyy-MM-dd HHmm (1/0)\"","lastModifiedDate":"2023-09-16"},{"lineNumber":218,"author":{"gitId":"LINCHENYU2030S"},"content":"                    + \"where 1 indicates done and 0 indicates undone\";","lastModifiedDate":"2023-09-16"},{"lineNumber":219,"author":{"gitId":"LINCHENYU2030S"},"content":"            System.out.println(message);","lastModifiedDate":"2023-09-02"},{"lineNumber":220,"author":{"gitId":"LINCHENYU2030S"},"content":"            System.exit(0);","lastModifiedDate":"2023-09-02"},{"lineNumber":221,"author":{"gitId":"LINCHENYU2030S"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":222,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":223,"author":{"gitId":"LINCHENYU2030S"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"LINCHENYU2030S":223}},{"path":"src/main/java/Alex/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LINCHENYU2030S"},"content":"package Alex.tasks;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.time.Month;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"LINCHENYU2030S"},"content":"import Alex.AlexException;","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"LINCHENYU2030S"},"content":"import Alex.storage.UserInputStorage;","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"LINCHENYU2030S"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"LINCHENYU2030S"},"content":" * A class that can be instantiated to represent the task that has a specific deadline.","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"LINCHENYU2030S"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"LINCHENYU2030S"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"LINCHENYU2030S"},"content":"    protected String by;","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"LINCHENYU2030S"},"content":"    protected LocalDateTime parsedDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"LINCHENYU2030S"},"content":"    public Deadline(String description, String by) throws AlexException, DateTimeParseException {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"LINCHENYU2030S"},"content":"        super(description);","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"LINCHENYU2030S"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"LINCHENYU2030S"},"content":"        this.parsedDateTime \u003d LocalDateTime.parse(by, UserInputStorage.TIMEFORMATTER);","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"LINCHENYU2030S"},"content":"     * A method that is used to get the string representation of the deadline of this task.","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"LINCHENYU2030S"},"content":"     * @return the string representation of the deadline of this task.","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"LINCHENYU2030S"},"content":"    public String getBy() {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"LINCHENYU2030S"},"content":"        return this.by;","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"LINCHENYU2030S"},"content":"     * In contrast to getBy method, this method return the deadline of this task as a LocalDate object.","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"LINCHENYU2030S"},"content":"     * @return the deadline of this task as a LocalDate object.","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"LINCHENYU2030S"},"content":"    public LocalDate getDueDate() {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"LINCHENYU2030S"},"content":"        String dateString \u003d this.by.substring(0, 10);","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"LINCHENYU2030S"},"content":"        LocalDate date \u003d LocalDate.parse(dateString);","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"LINCHENYU2030S"},"content":"        return date;","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"LINCHENYU2030S"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":45,"author":{"gitId":"LINCHENYU2030S"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":46,"author":{"gitId":"LINCHENYU2030S"},"content":"        int hour \u003d parsedDateTime.getHour();","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"LINCHENYU2030S"},"content":"        int minute \u003d parsedDateTime.getMinute();","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"LINCHENYU2030S"},"content":"        Month month \u003d parsedDateTime.getMonth();","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"LINCHENYU2030S"},"content":"        int day \u003d parsedDateTime.getDayOfMonth();","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"LINCHENYU2030S"},"content":"        int year \u003d parsedDateTime.getYear();","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"LINCHENYU2030S"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"LINCHENYU2030S"},"content":"                + \" (by: \" + hour + \":\" + minute + \" \" + day + \" \" + month + \" \" + year + \")\";","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":54,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":55,"author":{"gitId":"LINCHENYU2030S"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"LINCHENYU2030S":55}},{"path":"src/main/java/Alex/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LINCHENYU2030S"},"content":"package Alex.tasks;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.time.Month;","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"LINCHENYU2030S"},"content":"import Alex.AlexException;","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"LINCHENYU2030S"},"content":"import Alex.storage.UserInputStorage;","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"LINCHENYU2030S"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"LINCHENYU2030S"},"content":" * A class that can be instantiated to represent the task that has a from date and an end date.","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"LINCHENYU2030S"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"LINCHENYU2030S"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"LINCHENYU2030S"},"content":"    protected String fromTime;","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"LINCHENYU2030S"},"content":"    protected String toTime;","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"LINCHENYU2030S"},"content":"    protected LocalDateTime parsedFromTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"LINCHENYU2030S"},"content":"    protected LocalDateTime parsedToTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"LINCHENYU2030S"},"content":"    public Event(String description, String fromTime, String toTime) throws AlexException, DateTimeParseException {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"LINCHENYU2030S"},"content":"        super(description);","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"LINCHENYU2030S"},"content":"        this.fromTime \u003d fromTime;","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"LINCHENYU2030S"},"content":"        this.toTime \u003d toTime;","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"LINCHENYU2030S"},"content":"        this.parsedFromTime \u003d LocalDateTime.parse(fromTime, UserInputStorage.TIMEFORMATTER);","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"LINCHENYU2030S"},"content":"        this.parsedToTime \u003d LocalDateTime.parse(toTime, UserInputStorage.TIMEFORMATTER);","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":29,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"LINCHENYU2030S"},"content":"     * A method that can be used to get the start time of this task.","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"LINCHENYU2030S"},"content":"     * @return the string representation of the start date of this task.","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"LINCHENYU2030S"},"content":"    public String getFromTime() {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"LINCHENYU2030S"},"content":"        return this.fromTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"LINCHENYU2030S"},"content":"     * A method that can be used to get the end time of this task.","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"LINCHENYU2030S"},"content":"     * @return the string representation of the end time of this task.","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"LINCHENYU2030S"},"content":"    public String getToTime() {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"LINCHENYU2030S"},"content":"        return this.toTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"LINCHENYU2030S"},"content":"     * A method that can be used to get the start date of this task in LocalDate object.","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"LINCHENYU2030S"},"content":"     * @return the LocalDate object representing the start date of this task.","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"LINCHENYU2030S"},"content":"    public LocalDate getFromDate() {","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"LINCHENYU2030S"},"content":"        String fromDateString \u003d this.fromTime.substring(0, 10);","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"LINCHENYU2030S"},"content":"        LocalDate fromDate \u003d LocalDate.parse(fromDateString);","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"LINCHENYU2030S"},"content":"        return fromDate;","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"LINCHENYU2030S"},"content":"     * A method that can be used to get the end date of this task in LocalDate object.","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"LINCHENYU2030S"},"content":"     * @return the LocalDate object representing the end date of this task.","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"LINCHENYU2030S"},"content":"    public LocalDate getToDate() {","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"LINCHENYU2030S"},"content":"        String toDateString \u003d this.toTime.substring(0, 10);","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"LINCHENYU2030S"},"content":"        LocalDate toDate \u003d LocalDate.parse(toDateString);","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"LINCHENYU2030S"},"content":"        return toDate;","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"LINCHENYU2030S"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":66,"author":{"gitId":"LINCHENYU2030S"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":67,"author":{"gitId":"LINCHENYU2030S"},"content":"        int fromHour \u003d parsedFromTime.getHour();","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"LINCHENYU2030S"},"content":"        int fromMinute \u003d parsedFromTime.getMinute();","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"LINCHENYU2030S"},"content":"        Month fromMonth \u003d parsedFromTime.getMonth();","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"LINCHENYU2030S"},"content":"        int fromDay \u003d parsedFromTime.getDayOfMonth();","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"LINCHENYU2030S"},"content":"        int fromYear \u003d parsedFromTime.getYear();","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"LINCHENYU2030S"},"content":"        int toHour \u003d parsedToTime.getHour();","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"LINCHENYU2030S"},"content":"        int toMinute \u003d parsedToTime.getMinute();","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"LINCHENYU2030S"},"content":"        Month toMonth \u003d parsedToTime.getMonth();","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"LINCHENYU2030S"},"content":"        int toDay \u003d parsedToTime.getDayOfMonth();","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"LINCHENYU2030S"},"content":"        int toYear \u003d parsedToTime.getYear();","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"LINCHENYU2030S"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"LINCHENYU2030S"},"content":"                + \" (from: \" + fromHour + \":\" + fromMinute + \" \" + fromDay + \" \" + fromMonth + \" \" + fromYear + \" \"","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"LINCHENYU2030S"},"content":"                + \" to: \" + toHour + \":\" + toMinute + \" \" + toDay + \" \" + toMonth + \" \" + toYear + \")\";","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":82,"author":{"gitId":"LINCHENYU2030S"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"LINCHENYU2030S":82}},{"path":"src/main/java/Alex/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LINCHENYU2030S"},"content":"package Alex.tasks;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"LINCHENYU2030S"},"content":"import Alex.AlexException;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"LINCHENYU2030S"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"LINCHENYU2030S"},"content":" * A class that can be instantiated to represent a general task. Currently it has three subclasses which are","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"LINCHENYU2030S"},"content":" * Task, Deadline and Event classes.","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"LINCHENYU2030S"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"LINCHENYU2030S"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"LINCHENYU2030S"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"LINCHENYU2030S"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"LINCHENYU2030S"},"content":"     * The constructor of Task class when the task description string is passed in.","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"LINCHENYU2030S"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"LINCHENYU2030S"},"content":"     * @param description task description in string.","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"LINCHENYU2030S"},"content":"     * @throws AlexException if an error occurs when the task description is invalid or does not make sense.","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"LINCHENYU2030S"},"content":"    public Task(String description) throws AlexException {","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"LINCHENYU2030S"},"content":"        description \u003d description.stripTrailing();","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"LINCHENYU2030S"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"LINCHENYU2030S"},"content":"            String message \u003d \"OOPS!!! The description of a task cannot be empty\";","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"LINCHENYU2030S"},"content":"            throw new AlexException(message);","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"LINCHENYU2030S"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"LINCHENYU2030S"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"LINCHENYU2030S"},"content":"    public String getStatusSymbol() {","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"LINCHENYU2030S"},"content":"        if (isDone) {","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"LINCHENYU2030S"},"content":"            return \"X\";","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"LINCHENYU2030S"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"LINCHENYU2030S"},"content":"            return \" \";","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"LINCHENYU2030S"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"LINCHENYU2030S"},"content":"     * A method that is used to know whether this task is done.","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"LINCHENYU2030S"},"content":"     * @return A boolean value to indicate if the task is done, returns true if this task is done, false otherwise.","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"LINCHENYU2030S"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"LINCHENYU2030S"},"content":"        return this.isDone;","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"LINCHENYU2030S"},"content":"     * A method that is used to get the task description of this instance of task.","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"LINCHENYU2030S"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"LINCHENYU2030S"},"content":"     * @return the task description in string of this task instance.","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"LINCHENYU2030S"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"LINCHENYU2030S"},"content":"        return this.description;","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"LINCHENYU2030S"},"content":"     * A method that is used to mark this task to be done.","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"LINCHENYU2030S"},"content":"    public String mark() {","lastModifiedDate":"2023-09-16"},{"lineNumber":57,"author":{"gitId":"LINCHENYU2030S"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"LINCHENYU2030S"},"content":"        String tobePrinted \u003d \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-09-16"},{"lineNumber":59,"author":{"gitId":"LINCHENYU2030S"},"content":"                    + \"   \"","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"LINCHENYU2030S"},"content":"                    + this;","lastModifiedDate":"2023-09-16"},{"lineNumber":61,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":62,"author":{"gitId":"LINCHENYU2030S"},"content":"        return tobePrinted;","lastModifiedDate":"2023-09-16"},{"lineNumber":63,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"LINCHENYU2030S"},"content":"     * A method that is used to mark this task to be done with additional parameter to specify","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"LINCHENYU2030S"},"content":"     * whether or not to print the message to the user after marking.","lastModifiedDate":"2023-09-09"},{"lineNumber":68,"author":{"gitId":"LINCHENYU2030S"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":69,"author":{"gitId":"LINCHENYU2030S"},"content":"     * @param printToUser A boolean parameter to indicate whether or not to print message after marking.","lastModifiedDate":"2023-09-09"},{"lineNumber":70,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"LINCHENYU2030S"},"content":"    public String mark(boolean printToUser) {","lastModifiedDate":"2023-09-16"},{"lineNumber":72,"author":{"gitId":"LINCHENYU2030S"},"content":"        String output \u003d null;","lastModifiedDate":"2023-09-16"},{"lineNumber":73,"author":{"gitId":"LINCHENYU2030S"},"content":"        if (printToUser) {","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"LINCHENYU2030S"},"content":"            output \u003d this.mark();","lastModifiedDate":"2023-09-16"},{"lineNumber":75,"author":{"gitId":"LINCHENYU2030S"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"LINCHENYU2030S"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"LINCHENYU2030S"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"LINCHENYU2030S"},"content":"        return output;","lastModifiedDate":"2023-09-16"},{"lineNumber":79,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":82,"author":{"gitId":"LINCHENYU2030S"},"content":"     * A method that is used to ummark this task to be undone.","lastModifiedDate":"2023-09-09"},{"lineNumber":83,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"LINCHENYU2030S"},"content":"    public String unmark() {","lastModifiedDate":"2023-09-16"},{"lineNumber":85,"author":{"gitId":"LINCHENYU2030S"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"LINCHENYU2030S"},"content":"        String tobePrinted \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-09-16"},{"lineNumber":87,"author":{"gitId":"LINCHENYU2030S"},"content":"                    + \"   \"","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"LINCHENYU2030S"},"content":"                    + this;","lastModifiedDate":"2023-09-16"},{"lineNumber":89,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"LINCHENYU2030S"},"content":"        return tobePrinted;","lastModifiedDate":"2023-09-16"},{"lineNumber":91,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"LINCHENYU2030S"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"LINCHENYU2030S"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"LINCHENYU2030S"},"content":"        String str \u003d \"[\" + this.getStatusSymbol() + \"] \" + this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"LINCHENYU2030S"},"content":"        return str;","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"LINCHENYU2030S"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"LINCHENYU2030S":98}},{"path":"src/main/java/Alex/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LINCHENYU2030S"},"content":"package Alex.tasks;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"LINCHENYU2030S"},"content":"import Alex.AlexException;","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"LINCHENYU2030S"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"LINCHENYU2030S"},"content":" * A class represents a \"temporary storage\" for the task(s) key in by the user every time the user run the chat bot","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"LINCHENYU2030S"},"content":" * Alex. The task(s) stored in TaskList will eventually be stored into Alex.txt by the method from UserInputStorage","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"LINCHENYU2030S"},"content":" * class after termination of Alex chatbot execution. Similarly, the user data stored in the file Alex.txt will","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"LINCHENYU2030S"},"content":" * be restored to TaskList everytimne the user initialize/run the Alex chatbot.","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"LINCHENYU2030S"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"LINCHENYU2030S"},"content":"public class TaskList {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"LINCHENYU2030S"},"content":"    private static ArrayList\u003cTask\u003e userinputs \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"LINCHENYU2030S"},"content":"    private static int numberOfElements \u003d 0;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"LINCHENYU2030S"},"content":"     * A static method that is used to get the current number of task(s) in TaskList.","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"LINCHENYU2030S"},"content":"     * @return the current number of task(s) in TaskList.","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"LINCHENYU2030S"},"content":"    public static int getNumberOfElements() {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"LINCHENYU2030S"},"content":"        return numberOfElements;","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"LINCHENYU2030S"},"content":"     * A static method that is used to remove all the task(s) stored in TaskList.","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"LINCHENYU2030S"},"content":"    public static void clearAll() {","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"LINCHENYU2030S"},"content":"        userinputs \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"LINCHENYU2030S"},"content":"        numberOfElements \u003d 0;","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"LINCHENYU2030S"},"content":"     * A static method that is used to store a task specified by the user.","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"LINCHENYU2030S"},"content":"     * @param task the task object representing the task specified by the user.","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"LINCHENYU2030S"},"content":"    public static String store(Task task) {","lastModifiedDate":"2023-09-16"},{"lineNumber":46,"author":{"gitId":"LINCHENYU2030S"},"content":"        userinputs.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"LINCHENYU2030S"},"content":"        numberOfElements++;","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"LINCHENYU2030S"},"content":"        String output \u003d \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-16"},{"lineNumber":49,"author":{"gitId":"LINCHENYU2030S"},"content":"                + \"  \"","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"LINCHENYU2030S"},"content":"                + task.toString() + \"\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"LINCHENYU2030S"},"content":"                + \"Now you have \" + numberOfElements + \" tasks in the list.\";","lastModifiedDate":"2023-09-16"},{"lineNumber":52,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":53,"author":{"gitId":"LINCHENYU2030S"},"content":"        return output;","lastModifiedDate":"2023-09-16"},{"lineNumber":54,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"LINCHENYU2030S"},"content":"     * A static method that is used to store a new task object into TaskList with another parameter (printToUser)","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"LINCHENYU2030S"},"content":"     * of type boolean to specify whether to print the message to the user after successfully storing the task.","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"LINCHENYU2030S"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"LINCHENYU2030S"},"content":"     * @param task the task object representing the task specified by the user.","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"LINCHENYU2030S"},"content":"     * @param printToUser a boolean parameter used to specify wheter to print the message to the user after storing.","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"LINCHENYU2030S"},"content":"    public static String store(Task task, boolean printToUser) {","lastModifiedDate":"2023-09-16"},{"lineNumber":64,"author":{"gitId":"LINCHENYU2030S"},"content":"        String output \u003d null;","lastModifiedDate":"2023-09-16"},{"lineNumber":65,"author":{"gitId":"LINCHENYU2030S"},"content":"        if (printToUser) {","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"LINCHENYU2030S"},"content":"            output \u003d store(task);","lastModifiedDate":"2023-09-16"},{"lineNumber":67,"author":{"gitId":"LINCHENYU2030S"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"LINCHENYU2030S"},"content":"            userinputs.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"LINCHENYU2030S"},"content":"            numberOfElements++;","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"LINCHENYU2030S"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"LINCHENYU2030S"},"content":"        return output;","lastModifiedDate":"2023-09-16"},{"lineNumber":72,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":75,"author":{"gitId":"LINCHENYU2030S"},"content":"     * A static that is used to get the task object in the TaskList when a task index is given. This method","lastModifiedDate":"2023-09-09"},{"lineNumber":76,"author":{"gitId":"LINCHENYU2030S"},"content":"     * expects the index starting from 1.","lastModifiedDate":"2023-09-09"},{"lineNumber":77,"author":{"gitId":"LINCHENYU2030S"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":78,"author":{"gitId":"LINCHENYU2030S"},"content":"     * @param index the task index in the TaskList, index starting from 1.","lastModifiedDate":"2023-09-09"},{"lineNumber":79,"author":{"gitId":"LINCHENYU2030S"},"content":"     * @return the task instance stored in the TaskList","lastModifiedDate":"2023-09-09"},{"lineNumber":80,"author":{"gitId":"LINCHENYU2030S"},"content":"     * @throws AlexException if an error occurs when passing in invalid task index.","lastModifiedDate":"2023-09-09"},{"lineNumber":81,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":82,"author":{"gitId":"LINCHENYU2030S"},"content":"    public static Task getTaskByIndex(int index) throws AlexException {","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"LINCHENYU2030S"},"content":"        if (index \u003e numberOfElements) {","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"LINCHENYU2030S"},"content":"            String message \u003d \"OOPS!!! There is/are only \" + numberOfElements + \" task(s) stored\";","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"LINCHENYU2030S"},"content":"            throw new AlexException(message);","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"LINCHENYU2030S"},"content":"        } else if (index \u003c 0) {","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"LINCHENYU2030S"},"content":"            String message \u003d \"OOPS!!! Task number cannot be negative, task number starts from 0\";","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"LINCHENYU2030S"},"content":"            throw new AlexException(message);","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"LINCHENYU2030S"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"LINCHENYU2030S"},"content":"        return userinputs.get(index - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":94,"author":{"gitId":"LINCHENYU2030S"},"content":"     * A static method that is used to print all the task(s) stored in TaskList.","lastModifiedDate":"2023-09-09"},{"lineNumber":95,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":96,"author":{"gitId":"LINCHENYU2030S"},"content":"    public static String getAllContent() {","lastModifiedDate":"2023-09-16"},{"lineNumber":97,"author":{"gitId":"LINCHENYU2030S"},"content":"        String tobePrinted \u003d \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"LINCHENYU2030S"},"content":"        for (int i \u003d 0; i \u003c numberOfElements; i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"LINCHENYU2030S"},"content":"            tobePrinted \u003d tobePrinted + (i + 1) + \". \" + userinputs.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"LINCHENYU2030S"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":102,"author":{"gitId":"LINCHENYU2030S"},"content":"        return tobePrinted;","lastModifiedDate":"2023-09-16"},{"lineNumber":103,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":106,"author":{"gitId":"LINCHENYU2030S"},"content":"     * A static method that is used to remove a specific task in TaskList when the task index is given.","lastModifiedDate":"2023-09-09"},{"lineNumber":107,"author":{"gitId":"LINCHENYU2030S"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":108,"author":{"gitId":"LINCHENYU2030S"},"content":"     * @param index the index of the task to be removed.","lastModifiedDate":"2023-09-09"},{"lineNumber":109,"author":{"gitId":"LINCHENYU2030S"},"content":"     * @throws AlexException if an error occurs when an invalid task index is passed into this method.","lastModifiedDate":"2023-09-09"},{"lineNumber":110,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":111,"author":{"gitId":"LINCHENYU2030S"},"content":"    public static String delete(int index) {","lastModifiedDate":"2023-09-16"},{"lineNumber":112,"author":{"gitId":"LINCHENYU2030S"},"content":"        if (index \u003e numberOfElements) {","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"LINCHENYU2030S"},"content":"            String message \u003d \"OOPS!!! There is/are only \" + numberOfElements + \" task(s) stored\";","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"LINCHENYU2030S"},"content":"            return message;","lastModifiedDate":"2023-09-16"},{"lineNumber":115,"author":{"gitId":"LINCHENYU2030S"},"content":"        } else if (index \u003c 0) {","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"LINCHENYU2030S"},"content":"            String message \u003d \"OOPS!!! Task number cannot be negative, task number starts from 0\";","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"LINCHENYU2030S"},"content":"            return message;","lastModifiedDate":"2023-09-16"},{"lineNumber":118,"author":{"gitId":"LINCHENYU2030S"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"LINCHENYU2030S"},"content":"        Task tobeRemoved \u003d userinputs.remove(index - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"LINCHENYU2030S"},"content":"        numberOfElements--;","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"LINCHENYU2030S"},"content":"        String output \u003d \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-09-16"},{"lineNumber":122,"author":{"gitId":"LINCHENYU2030S"},"content":"                + \"  \" + tobeRemoved.toString() + \"\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"LINCHENYU2030S"},"content":"                + \"Now you have \" + getNumberOfElements() + \" tasks in the list.\\n\";","lastModifiedDate":"2023-09-16"},{"lineNumber":124,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":125,"author":{"gitId":"LINCHENYU2030S"},"content":"        return output;","lastModifiedDate":"2023-09-16"},{"lineNumber":126,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":127,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":130,"author":{"gitId":"LINCHENYU2030S"},"content":"     * A static method that is used to print all the task(s) of a specific date when a string representing","lastModifiedDate":"2023-09-09"},{"lineNumber":131,"author":{"gitId":"LINCHENYU2030S"},"content":"     * that date is given.","lastModifiedDate":"2023-09-09"},{"lineNumber":132,"author":{"gitId":"LINCHENYU2030S"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":133,"author":{"gitId":"LINCHENYU2030S"},"content":"     * @param date a string representing the date in which the user wants to view all the task(s) in that day.","lastModifiedDate":"2023-09-09"},{"lineNumber":134,"author":{"gitId":"LINCHENYU2030S"},"content":"     * @throws DateTimeParseException if an error occurs when parsing the string representing a date.","lastModifiedDate":"2023-09-09"},{"lineNumber":135,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":136,"author":{"gitId":"LINCHENYU2030S"},"content":"    public static String getTaskForDate(String date) throws DateTimeParseException {","lastModifiedDate":"2023-09-16"},{"lineNumber":137,"author":{"gitId":"LINCHENYU2030S"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"LINCHENYU2030S"},"content":"        LocalDate parsedDate \u003d LocalDate.parse(date, formatter);","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"LINCHENYU2030S"},"content":"        String tobePrinted \u003d \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"LINCHENYU2030S"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"LINCHENYU2030S"},"content":"        for (int i \u003d 0; i \u003c numberOfElements; i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"LINCHENYU2030S"},"content":"            Task task \u003d userinputs.get(i);","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"LINCHENYU2030S"},"content":"            if (task instanceof ToDos) {","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"LINCHENYU2030S"},"content":"                continue;","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"LINCHENYU2030S"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"LINCHENYU2030S"},"content":"                Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"LINCHENYU2030S"},"content":"                if (deadline.getDueDate().equals(parsedDate)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"LINCHENYU2030S"},"content":"                    tobePrinted \u003d tobePrinted + count + \". \" + deadline + \"\\n\";","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"LINCHENYU2030S"},"content":"                    count++;","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"LINCHENYU2030S"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"LINCHENYU2030S"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"LINCHENYU2030S"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2023-09-02"},{"lineNumber":154,"author":{"gitId":"LINCHENYU2030S"},"content":"                if (event.getFromDate().equals(parsedDate) || event.getToDate().equals(parsedDate)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":155,"author":{"gitId":"LINCHENYU2030S"},"content":"                    tobePrinted \u003d tobePrinted + count + \". \" + event + \"\\n\";","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"LINCHENYU2030S"},"content":"                    count++;","lastModifiedDate":"2023-09-02"},{"lineNumber":157,"author":{"gitId":"LINCHENYU2030S"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":158,"author":{"gitId":"LINCHENYU2030S"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":159,"author":{"gitId":"LINCHENYU2030S"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":160,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":161,"author":{"gitId":"LINCHENYU2030S"},"content":"        String output \u003d \"There is/are a total of \" + (count - 1) + \" task(s) on the give date \" + date + \":\\n\"","lastModifiedDate":"2023-09-16"},{"lineNumber":162,"author":{"gitId":"LINCHENYU2030S"},"content":"                        + tobePrinted;","lastModifiedDate":"2023-09-16"},{"lineNumber":163,"author":{"gitId":"LINCHENYU2030S"},"content":"        return output;","lastModifiedDate":"2023-09-16"},{"lineNumber":164,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":165,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":166,"author":{"gitId":"LINCHENYU2030S"},"content":"    public static String getTaskForMatchWord(String word) {","lastModifiedDate":"2023-09-16"},{"lineNumber":167,"author":{"gitId":"LINCHENYU2030S"},"content":"        String tobePrinted \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-09-16"},{"lineNumber":168,"author":{"gitId":"LINCHENYU2030S"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-09-03"},{"lineNumber":169,"author":{"gitId":"LINCHENYU2030S"},"content":"        String regex \u003d \"\\\\b\" + word + \"\\\\b\";","lastModifiedDate":"2023-09-03"},{"lineNumber":170,"author":{"gitId":"LINCHENYU2030S"},"content":"        Pattern pattern \u003d Pattern.compile(regex);","lastModifiedDate":"2023-09-03"},{"lineNumber":171,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":172,"author":{"gitId":"LINCHENYU2030S"},"content":"        for (int i \u003d 0; i \u003c numberOfElements; i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":173,"author":{"gitId":"LINCHENYU2030S"},"content":"            Task task \u003d userinputs.get(i);","lastModifiedDate":"2023-09-03"},{"lineNumber":174,"author":{"gitId":"LINCHENYU2030S"},"content":"            Matcher matcher \u003d pattern.matcher(task.toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":175,"author":{"gitId":"LINCHENYU2030S"},"content":"            if (matcher.find()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":176,"author":{"gitId":"LINCHENYU2030S"},"content":"                tobePrinted +\u003d count + \". \" + task.toString() + \"\\n\";","lastModifiedDate":"2023-09-03"},{"lineNumber":177,"author":{"gitId":"LINCHENYU2030S"},"content":"                count++;","lastModifiedDate":"2023-09-03"},{"lineNumber":178,"author":{"gitId":"LINCHENYU2030S"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":179,"author":{"gitId":"LINCHENYU2030S"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":180,"author":{"gitId":"LINCHENYU2030S"},"content":"        return tobePrinted;","lastModifiedDate":"2023-09-16"},{"lineNumber":181,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":182,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":183,"author":{"gitId":"LINCHENYU2030S"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"LINCHENYU2030S":183}},{"path":"src/main/java/Alex/tasks/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LINCHENYU2030S"},"content":"package Alex.tasks;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"LINCHENYU2030S"},"content":"import Alex.AlexException;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"LINCHENYU2030S"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"LINCHENYU2030S"},"content":" * A class that can be instantiated to represent a task that has no deadline or there is no need to specify time.","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"LINCHENYU2030S"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"LINCHENYU2030S"},"content":"public class ToDos extends Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"LINCHENYU2030S"},"content":"    public ToDos(String description) throws AlexException {","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"LINCHENYU2030S"},"content":"        super(description);","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"LINCHENYU2030S"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"LINCHENYU2030S"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"LINCHENYU2030S"},"content":"        String str \u003d \"[T]\" + super.toString();","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"LINCHENYU2030S"},"content":"        return str;","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"LINCHENYU2030S"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"LINCHENYU2030S":19}},{"path":"src/main/java/Alex/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LINCHENYU2030S"},"content":"package Alex.ui;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"LINCHENYU2030S"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"LINCHENYU2030S"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"LINCHENYU2030S"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"LINCHENYU2030S"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"LINCHENYU2030S"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"LINCHENYU2030S"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"LINCHENYU2030S"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"LINCHENYU2030S"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"LINCHENYU2030S"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"LINCHENYU2030S"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"LINCHENYU2030S"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"LINCHENYU2030S"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"LINCHENYU2030S"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"LINCHENYU2030S"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"LINCHENYU2030S"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"LINCHENYU2030S"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"LINCHENYU2030S"},"content":"        try {","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"LINCHENYU2030S"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"LINCHENYU2030S"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"LINCHENYU2030S"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"LINCHENYU2030S"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"LINCHENYU2030S"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"LINCHENYU2030S"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"LINCHENYU2030S"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"LINCHENYU2030S"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"LINCHENYU2030S"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":36,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":38,"author":{"gitId":"LINCHENYU2030S"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-16"},{"lineNumber":39,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":40,"author":{"gitId":"LINCHENYU2030S"},"content":"    private void flip() {","lastModifiedDate":"2023-09-16"},{"lineNumber":41,"author":{"gitId":"LINCHENYU2030S"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-16"},{"lineNumber":42,"author":{"gitId":"LINCHENYU2030S"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-16"},{"lineNumber":43,"author":{"gitId":"LINCHENYU2030S"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-16"},{"lineNumber":44,"author":{"gitId":"LINCHENYU2030S"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-16"},{"lineNumber":45,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":46,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":47,"author":{"gitId":"LINCHENYU2030S"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-16"},{"lineNumber":48,"author":{"gitId":"LINCHENYU2030S"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-16"},{"lineNumber":49,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":50,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":51,"author":{"gitId":"LINCHENYU2030S"},"content":"    public static DialogBox getAlexDialog(String text, Image img) {","lastModifiedDate":"2023-09-16"},{"lineNumber":52,"author":{"gitId":"LINCHENYU2030S"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-16"},{"lineNumber":53,"author":{"gitId":"LINCHENYU2030S"},"content":"        db.flip();","lastModifiedDate":"2023-09-16"},{"lineNumber":54,"author":{"gitId":"LINCHENYU2030S"},"content":"        return db;","lastModifiedDate":"2023-09-16"},{"lineNumber":55,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":56,"author":{"gitId":"LINCHENYU2030S"},"content":"}","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"LINCHENYU2030S":56}},{"path":"src/main/java/Alex/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LINCHENYU2030S"},"content":"package Alex.ui;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"LINCHENYU2030S"},"content":"import Alex.Alex;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"LINCHENYU2030S"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"LINCHENYU2030S"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"LINCHENYU2030S"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"LINCHENYU2030S"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"LINCHENYU2030S"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"LINCHENYU2030S"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"LINCHENYU2030S"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"LINCHENYU2030S"},"content":"/**","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"LINCHENYU2030S"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"LINCHENYU2030S"},"content":" */","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"LINCHENYU2030S"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"LINCHENYU2030S"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"LINCHENYU2030S"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"LINCHENYU2030S"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"LINCHENYU2030S"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"LINCHENYU2030S"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"LINCHENYU2030S"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"LINCHENYU2030S"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"LINCHENYU2030S"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"LINCHENYU2030S"},"content":"    private Alex alex;","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"LINCHENYU2030S"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"LINCHENYU2030S"},"content":"    private Image alexImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaAlex.png\"));","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"LINCHENYU2030S"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"LINCHENYU2030S"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"LINCHENYU2030S"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"LINCHENYU2030S"},"content":"    public void setAlex(Alex a) {","lastModifiedDate":"2023-09-16"},{"lineNumber":36,"author":{"gitId":"LINCHENYU2030S"},"content":"        this.alex \u003d a;","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"LINCHENYU2030S"},"content":"        // greeting","lastModifiedDate":"2023-09-16"},{"lineNumber":38,"author":{"gitId":"LINCHENYU2030S"},"content":"        String alexText \u003d Ui.greet();","lastModifiedDate":"2023-09-16"},{"lineNumber":39,"author":{"gitId":"LINCHENYU2030S"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-16"},{"lineNumber":40,"author":{"gitId":"LINCHENYU2030S"},"content":"                DialogBox.getAlexDialog(alexText, alexImage)","lastModifiedDate":"2023-09-16"},{"lineNumber":41,"author":{"gitId":"LINCHENYU2030S"},"content":"        );","lastModifiedDate":"2023-09-16"},{"lineNumber":42,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":43,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":44,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":45,"author":{"gitId":"LINCHENYU2030S"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Alex\u0027s reply and then append","lastModifiedDate":"2023-09-16"},{"lineNumber":46,"author":{"gitId":"LINCHENYU2030S"},"content":"     * them to the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-16"},{"lineNumber":47,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":48,"author":{"gitId":"LINCHENYU2030S"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":49,"author":{"gitId":"LINCHENYU2030S"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-16"},{"lineNumber":50,"author":{"gitId":"LINCHENYU2030S"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-16"},{"lineNumber":51,"author":{"gitId":"LINCHENYU2030S"},"content":"        String response \u003d alex.getResponse(input);","lastModifiedDate":"2023-09-16"},{"lineNumber":52,"author":{"gitId":"LINCHENYU2030S"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-16"},{"lineNumber":53,"author":{"gitId":"LINCHENYU2030S"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-16"},{"lineNumber":54,"author":{"gitId":"LINCHENYU2030S"},"content":"                DialogBox.getAlexDialog(response, alexImage)","lastModifiedDate":"2023-09-16"},{"lineNumber":55,"author":{"gitId":"LINCHENYU2030S"},"content":"        );","lastModifiedDate":"2023-09-16"},{"lineNumber":56,"author":{"gitId":"LINCHENYU2030S"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-16"},{"lineNumber":57,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":58,"author":{"gitId":"LINCHENYU2030S"},"content":"}","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"LINCHENYU2030S":58}},{"path":"src/main/java/Alex/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LINCHENYU2030S"},"content":"package Alex.ui;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"LINCHENYU2030S"},"content":"import Alex.storage.UserInputStorage;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"LINCHENYU2030S"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"LINCHENYU2030S"},"content":" * A class that is used to deal with user interface related stuff. Its behaviours include printing greeting message,","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"LINCHENYU2030S"},"content":" * bye message, alert for several other commands especially when the commands typed by the user is in a wrong format.","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"LINCHENYU2030S"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"LINCHENYU2030S"},"content":"public class Ui {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"LINCHENYU2030S"},"content":"    private static Scanner userInputScanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"LINCHENYU2030S"},"content":"     * A static method that is used to print greeting message to user.","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"LINCHENYU2030S"},"content":"    public static String greet() {","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"LINCHENYU2030S"},"content":"        String greeting \u003d \"Hello! I\u0027m your personal task assistant, Alex\\n\"","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"LINCHENYU2030S"},"content":"                + \"What can I do for you today?\\n\";","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"LINCHENYU2030S"},"content":"        UserInputStorage.loadUserDateFromFile();","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"LINCHENYU2030S"},"content":"        userInputScanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"LINCHENYU2030S"},"content":"        return greeting;","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"LINCHENYU2030S"},"content":"     * A static method that is used to print bye message to the user when the user key in command \"bye\" to terminate","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"LINCHENYU2030S"},"content":"     * the execution of the chat bot Alex.","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"LINCHENYU2030S"},"content":"    public static String bye() {","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"LINCHENYU2030S"},"content":"        String bye \u003d \"Bye bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"LINCHENYU2030S"},"content":"        String isStored \u003d UserInputStorage.storeToFile();","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"LINCHENYU2030S"},"content":"        return bye + isStored;","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"LINCHENYU2030S"},"content":"     * A static method that is used to read user input from the standard input, right strip the user input and return","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"LINCHENYU2030S"},"content":"     * that string.","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"LINCHENYU2030S"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"LINCHENYU2030S"},"content":"     * @return user input string.","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"LINCHENYU2030S"},"content":"    public static String readUserInput() {","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"LINCHENYU2030S"},"content":"        String userInput \u003d userInputScanner.nextLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"LINCHENYU2030S"},"content":"        String userInputStripped \u003d userInput.stripTrailing();","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"LINCHENYU2030S"},"content":"        return userInputStripped;","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"LINCHENYU2030S"},"content":"     * A static method that is used to print an alert message to user when the user key in the mark command in","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"LINCHENYU2030S"},"content":"     * a wrong format.","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"LINCHENYU2030S"},"content":"    public static String getAlertForMark() {","lastModifiedDate":"2023-09-16"},{"lineNumber":54,"author":{"gitId":"LINCHENYU2030S"},"content":"        String message \u003d \"To mark certain task to be done, please use the following format:\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"LINCHENYU2030S"},"content":"                + \"   \" + \"mark (task number in non-negative integer)\\n\";","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":57,"author":{"gitId":"LINCHENYU2030S"},"content":"        return message;","lastModifiedDate":"2023-09-16"},{"lineNumber":58,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"LINCHENYU2030S"},"content":"     * A static method that is used to print an alert message to the user when the user key in unmark command in","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"LINCHENYU2030S"},"content":"     * a wrong format.","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"LINCHENYU2030S"},"content":"    public static String getAlertForUnmark() {","lastModifiedDate":"2023-09-16"},{"lineNumber":65,"author":{"gitId":"LINCHENYU2030S"},"content":"        String message \u003d \"To unmark certain task to be undone, please use the following format:\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"LINCHENYU2030S"},"content":"                + \"   \" + \"unmark (task number in non-negative integer)\\n\";","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":68,"author":{"gitId":"LINCHENYU2030S"},"content":"        return message;","lastModifiedDate":"2023-09-16"},{"lineNumber":69,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"LINCHENYU2030S"},"content":"     * A static method that is used to print an alert message to the user when the user key in delete command","lastModifiedDate":"2023-09-09"},{"lineNumber":73,"author":{"gitId":"LINCHENYU2030S"},"content":"     * in a wrong format.","lastModifiedDate":"2023-09-09"},{"lineNumber":74,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":75,"author":{"gitId":"LINCHENYU2030S"},"content":"    public static String getAlertForDelete() {","lastModifiedDate":"2023-09-16"},{"lineNumber":76,"author":{"gitId":"LINCHENYU2030S"},"content":"        String message \u003d \"To delete a task, please use the following format:\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"LINCHENYU2030S"},"content":"                + \"   \" + \"delete (task number in non-negative integer)\\n\";","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":79,"author":{"gitId":"LINCHENYU2030S"},"content":"        return message;","lastModifiedDate":"2023-09-16"},{"lineNumber":80,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":83,"author":{"gitId":"LINCHENYU2030S"},"content":"     * A static method that is used to print an alert message to the user when the user try to add a todo task","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"LINCHENYU2030S"},"content":"     * in a wrong format.","lastModifiedDate":"2023-09-09"},{"lineNumber":85,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":86,"author":{"gitId":"LINCHENYU2030S"},"content":"    public static String getAlertForTodo() {","lastModifiedDate":"2023-09-16"},{"lineNumber":87,"author":{"gitId":"LINCHENYU2030S"},"content":"        String message \u003d \"OOPS!!! Please enter a todo task in the following format:\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"LINCHENYU2030S"},"content":"                + \"   \" + \"todo (description)\";","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":90,"author":{"gitId":"LINCHENYU2030S"},"content":"        return message;","lastModifiedDate":"2023-09-16"},{"lineNumber":91,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":92,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":95,"author":{"gitId":"LINCHENYU2030S"},"content":"     * A static method that is used to print an alert message to the user when the user try to add a deadline task","lastModifiedDate":"2023-09-09"},{"lineNumber":96,"author":{"gitId":"LINCHENYU2030S"},"content":"     * in a wrong format.","lastModifiedDate":"2023-09-09"},{"lineNumber":97,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":98,"author":{"gitId":"LINCHENYU2030S"},"content":"    public static String getAlertForDeadline() {","lastModifiedDate":"2023-09-16"},{"lineNumber":99,"author":{"gitId":"LINCHENYU2030S"},"content":"        String message \u003d \"Please enter a deadline task in the format: \"","lastModifiedDate":"2023-09-16"},{"lineNumber":100,"author":{"gitId":"LINCHENYU2030S"},"content":"                + \"deadline (description) /by yyyy-MM-dd HHmm\\n\";","lastModifiedDate":"2023-09-16"},{"lineNumber":101,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":102,"author":{"gitId":"LINCHENYU2030S"},"content":"        return message;","lastModifiedDate":"2023-09-16"},{"lineNumber":103,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":106,"author":{"gitId":"LINCHENYU2030S"},"content":"     * A static method that is used to print an alert message to the user when the user try to add an event task","lastModifiedDate":"2023-09-09"},{"lineNumber":107,"author":{"gitId":"LINCHENYU2030S"},"content":"     * in a wrong format.","lastModifiedDate":"2023-09-09"},{"lineNumber":108,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":109,"author":{"gitId":"LINCHENYU2030S"},"content":"    public static String getAlertForEvent() {","lastModifiedDate":"2023-09-16"},{"lineNumber":110,"author":{"gitId":"LINCHENYU2030S"},"content":"        String message \u003d \"Please enter an event task in the format: \"","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"LINCHENYU2030S"},"content":"                + \"event (description) /from yyyy-MM-dd HHmm /to yyyy-MM-dd HHmm\\n\";","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":113,"author":{"gitId":"LINCHENYU2030S"},"content":"        return message;","lastModifiedDate":"2023-09-16"},{"lineNumber":114,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":117,"author":{"gitId":"LINCHENYU2030S"},"content":"     * A static method that is used to print an alert message to the user when the user try to","lastModifiedDate":"2023-09-09"},{"lineNumber":118,"author":{"gitId":"LINCHENYU2030S"},"content":"     * view the task(s) of a specific date but key in the command in a wrong format.","lastModifiedDate":"2023-09-09"},{"lineNumber":119,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":120,"author":{"gitId":"LINCHENYU2030S"},"content":"    public static String getAlertForDate() {","lastModifiedDate":"2023-09-16"},{"lineNumber":121,"author":{"gitId":"LINCHENYU2030S"},"content":"        String message \u003d \"OOPS!! To view the task(s) on a specific date,please key in the date \"","lastModifiedDate":"2023-09-16"},{"lineNumber":122,"author":{"gitId":"LINCHENYU2030S"},"content":"                + \"in the format yyyy-MM-dd only.\\n\"","lastModifiedDate":"2023-09-16"},{"lineNumber":123,"author":{"gitId":"LINCHENYU2030S"},"content":"                + \"Please also ensure that your key in date is a valid date\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"LINCHENYU2030S"},"content":"                + \"Note that it is case sensitive\\n\";","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":126,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":127,"author":{"gitId":"LINCHENYU2030S"},"content":"        return message;","lastModifiedDate":"2023-09-16"},{"lineNumber":128,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"LINCHENYU2030S"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":131,"author":{"gitId":"LINCHENYU2030S"},"content":"     * A static method that is used to print an alert message to the user when the user","lastModifiedDate":"2023-09-09"},{"lineNumber":132,"author":{"gitId":"LINCHENYU2030S"},"content":"     * key in unknown command.","lastModifiedDate":"2023-09-09"},{"lineNumber":133,"author":{"gitId":"LINCHENYU2030S"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":134,"author":{"gitId":"LINCHENYU2030S"},"content":"    public static String getAlertForUnknown() {","lastModifiedDate":"2023-09-16"},{"lineNumber":135,"author":{"gitId":"LINCHENYU2030S"},"content":"        String message \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\";","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":137,"author":{"gitId":"LINCHENYU2030S"},"content":"        return message;","lastModifiedDate":"2023-09-16"},{"lineNumber":138,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"LINCHENYU2030S"},"content":"    public static String getAlertForFind() {","lastModifiedDate":"2023-09-16"},{"lineNumber":141,"author":{"gitId":"LINCHENYU2030S"},"content":"        String message \u003d \"OOPS!! To find task(s) with matching word, please use the following format:\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":142,"author":{"gitId":"LINCHENYU2030S"},"content":"                + \"    find (description)\\n\";","lastModifiedDate":"2023-09-03"},{"lineNumber":143,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":144,"author":{"gitId":"LINCHENYU2030S"},"content":"        return message;","lastModifiedDate":"2023-09-16"},{"lineNumber":145,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":146,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":147,"author":{"gitId":"LINCHENYU2030S"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"LINCHENYU2030S":147}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"LINCHENYU2030S"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"LINCHENYU2030S"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"LINCHENYU2030S"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"LINCHENYU2030S"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"LINCHENYU2030S"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"LINCHENYU2030S"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"LINCHENYU2030S"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"LINCHENYU2030S"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"LINCHENYU2030S"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"LINCHENYU2030S"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"LINCHENYU2030S"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"LINCHENYU2030S"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"LINCHENYU2030S"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"LINCHENYU2030S"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"LINCHENYU2030S":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"LINCHENYU2030S"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"LINCHENYU2030S"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"LINCHENYU2030S"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"LINCHENYU2030S"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"LINCHENYU2030S"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"LINCHENYU2030S"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"LINCHENYU2030S"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"Alex.ui.MainWindow\"\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"LINCHENYU2030S"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"LINCHENYU2030S"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"LINCHENYU2030S"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"LINCHENYU2030S"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"LINCHENYU2030S"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"LINCHENYU2030S"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"LINCHENYU2030S"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"LINCHENYU2030S"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"LINCHENYU2030S"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"LINCHENYU2030S"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"LINCHENYU2030S":20}},{"path":"src/test/java/Alex/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LINCHENYU2030S"},"content":"package Alex;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"LINCHENYU2030S"},"content":"import Alex.commands.Command;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"LINCHENYU2030S"},"content":"import Alex.commands.Parser;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"LINCHENYU2030S"},"content":"import Alex.commands.UnknownCommand;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"LINCHENYU2030S"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"LINCHENYU2030S"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"LINCHENYU2030S"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"LINCHENYU2030S"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"LINCHENYU2030S"},"content":"    public void parseTest() {","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"LINCHENYU2030S"},"content":"        String userInput \u003d \"2023-SEP-02\";","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"LINCHENYU2030S"},"content":"        Command c \u003d Parser.parse(userInput);","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"LINCHENYU2030S"},"content":"        assertEquals(true, c instanceof UnknownCommand);","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"LINCHENYU2030S"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"LINCHENYU2030S":16}},{"path":"src/test/java/Alex/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LINCHENYU2030S"},"content":"package Alex;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"LINCHENYU2030S"},"content":"import Alex.commands.Command;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"LINCHENYU2030S"},"content":"import Alex.commands.Parser;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"LINCHENYU2030S"},"content":"import Alex.tasks.TaskList;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"LINCHENYU2030S"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"LINCHENYU2030S"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"LINCHENYU2030S"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"LINCHENYU2030S"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"LINCHENYU2030S"},"content":"    public void storeTest() {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"LINCHENYU2030S"},"content":"        // Redirect System.out to capture the output","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"LINCHENYU2030S"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"LINCHENYU2030S"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"LINCHENYU2030S"},"content":"        // Try store something into TaskList and delete it","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"LINCHENYU2030S"},"content":"        TaskList.clearAll();","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"LINCHENYU2030S"},"content":"        String userInput \u003d \"todo read book\";","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"LINCHENYU2030S"},"content":"        Command c \u003d Parser.parse(userInput);","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"LINCHENYU2030S"},"content":"        String output \u003d c.execute();","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"LINCHENYU2030S"},"content":"        System.out.println(output);","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"LINCHENYU2030S"},"content":"        // Restore the original System.out","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"LINCHENYU2030S"},"content":"        System.setOut(System.out);","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"LINCHENYU2030S"},"content":"        // Verify the captured output","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"LINCHENYU2030S"},"content":"        String expectedOutput \u003d \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"LINCHENYU2030S"},"content":"                + \"  \"","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"LINCHENYU2030S"},"content":"                + \"[T][ ] read book\" + \"\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"LINCHENYU2030S"},"content":"                + \"Now you have \" + 1 + \" tasks in the list.\\n\";","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"LINCHENYU2030S"},"content":"        String actualOutput \u003d outContent.toString();","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"LINCHENYU2030S"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"LINCHENYU2030S"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"LINCHENYU2030S"},"content":"    public void deleteTest() {","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"LINCHENYU2030S"},"content":"        // Redirect System.out to capture the output","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"LINCHENYU2030S"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"LINCHENYU2030S"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"LINCHENYU2030S"},"content":"        // Try store something into TaskList and delete it","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"LINCHENYU2030S"},"content":"        TaskList.clearAll();","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"LINCHENYU2030S"},"content":"        String userInput1 \u003d \"todo read book\";","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"LINCHENYU2030S"},"content":"        Command c \u003d Parser.parse(userInput1);","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"LINCHENYU2030S"},"content":"        String output1 \u003d c.execute();","lastModifiedDate":"2023-09-16"},{"lineNumber":49,"author":{"gitId":"LINCHENYU2030S"},"content":"        System.out.println(output1);","lastModifiedDate":"2023-09-16"},{"lineNumber":50,"author":{"gitId":"LINCHENYU2030S"},"content":"        String userInput2 \u003d \"delete 2\";","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"LINCHENYU2030S"},"content":"        Command c2 \u003d Parser.parse(userInput2);","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"LINCHENYU2030S"},"content":"        String output2 \u003d c2.execute();","lastModifiedDate":"2023-09-16"},{"lineNumber":53,"author":{"gitId":"LINCHENYU2030S"},"content":"        System.out.println(output2);","lastModifiedDate":"2023-09-16"},{"lineNumber":54,"author":{"gitId":"LINCHENYU2030S"},"content":"        String userInput3 \u003d \"delete 1\";","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"LINCHENYU2030S"},"content":"        Command c3 \u003d Parser.parse(userInput3);","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"LINCHENYU2030S"},"content":"        String output3 \u003d c3.execute();","lastModifiedDate":"2023-09-16"},{"lineNumber":57,"author":{"gitId":"LINCHENYU2030S"},"content":"        System.out.println(output3);","lastModifiedDate":"2023-09-16"},{"lineNumber":58,"author":{"gitId":"LINCHENYU2030S"},"content":"        String userInput4 \u003d \"delete 1\";","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"LINCHENYU2030S"},"content":"        Command c4 \u003d Parser.parse(userInput4);","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"LINCHENYU2030S"},"content":"        String output4 \u003d c4.execute();","lastModifiedDate":"2023-09-16"},{"lineNumber":61,"author":{"gitId":"LINCHENYU2030S"},"content":"        System.out.println(output4);","lastModifiedDate":"2023-09-16"},{"lineNumber":62,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"LINCHENYU2030S"},"content":"        // Restore the original System.out","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"LINCHENYU2030S"},"content":"        System.setOut(System.out);","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"LINCHENYU2030S"},"content":"        // Verify the captured output","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"LINCHENYU2030S"},"content":"        String expectedOutput \u003d \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-16"},{"lineNumber":68,"author":{"gitId":"LINCHENYU2030S"},"content":"            + \"  [T][ ] read book\\n\"","lastModifiedDate":"2023-09-16"},{"lineNumber":69,"author":{"gitId":"LINCHENYU2030S"},"content":"            + \"Now you have 1 tasks in the list.\\n\"","lastModifiedDate":"2023-09-16"},{"lineNumber":70,"author":{"gitId":"LINCHENYU2030S"},"content":"            + \"OOPS!!! There is/are only 1 task(s) stored\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"LINCHENYU2030S"},"content":"            + \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"LINCHENYU2030S"},"content":"            + \"  [T][ ] read book\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"LINCHENYU2030S"},"content":"            + \"Now you have 0 tasks in the list.\\n\\n\"","lastModifiedDate":"2023-09-16"},{"lineNumber":74,"author":{"gitId":"LINCHENYU2030S"},"content":"            + \"OOPS!!! There is/are only 0 task(s) stored\\n\";","lastModifiedDate":"2023-09-16"},{"lineNumber":75,"author":{"gitId":"LINCHENYU2030S"},"content":"        String actualOutput \u003d outContent.toString();","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"LINCHENYU2030S"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"LINCHENYU2030S"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"LINCHENYU2030S":79}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LINCHENYU2030S"},"content":"list","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"LINCHENYU2030S"},"content":"todo read book","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"LINCHENYU2030S"},"content":"list","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"LINCHENYU2030S"},"content":"event meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"LINCHENYU2030S"},"content":"list","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"LINCHENYU2030S"},"content":"deadline return book /by Friday","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"LINCHENYU2030S"},"content":"list","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"LINCHENYU2030S"},"content":"mark 1","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"LINCHENYU2030S"},"content":"mark 2","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"LINCHENYU2030S"},"content":"mark 3","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"LINCHENYU2030S"},"content":"list","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"LINCHENYU2030S":11}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"LINCHENYU2030S"},"content":"java -classpath ../bin Alex \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"LINCHENYU2030S"},"content":"# cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"LINCHENYU2030S"},"content":"#dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"LINCHENYU2030S"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-08-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"LINCHENYU2030S":4,"-":34}}]
