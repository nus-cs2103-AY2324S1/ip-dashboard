[{"path":"src/main/java/Alex.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.sql.SQLOutput;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.io.File;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"LINCHENYU2030S"},"content":"public class Alex {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"LINCHENYU2030S"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"LINCHENYU2030S"},"content":"        String horizontalLine \u003d \"_____________________________________________________________\\n\";","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"LINCHENYU2030S"},"content":"        String greeting \u003d horizontalLine","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"LINCHENYU2030S"},"content":"                + \"Hello! I\u0027m your personal task assistant, Alex\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"LINCHENYU2030S"},"content":"                + \"What can I do for you today?\\n\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"LINCHENYU2030S"},"content":"                + horizontalLine;","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"LINCHENYU2030S"},"content":"        System.out.println(greeting);","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"LINCHENYU2030S"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"LINCHENYU2030S"},"content":"            File userDataFile \u003d new File(\"../data/Alex.txt\");","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"LINCHENYU2030S"},"content":"            if (!userDataFile.getParentFile().exists()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"LINCHENYU2030S"},"content":"                userDataFile.getParentFile().mkdir();","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"LINCHENYU2030S"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"LINCHENYU2030S"},"content":"            Scanner userDataScanner \u003d new Scanner(userDataFile);","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"LINCHENYU2030S"},"content":"            while (userDataScanner.hasNextLine()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"LINCHENYU2030S"},"content":"                String userData \u003d userDataScanner.nextLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"LINCHENYU2030S"},"content":"                userData \u003d userData.stripTrailing();","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"LINCHENYU2030S"},"content":"                String taskType \u003d userData.substring(0, 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"LINCHENYU2030S"},"content":"                int dataLength \u003d userData.length();","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"LINCHENYU2030S"},"content":"                Task taskToBeStored \u003d new Task(\"temp\");","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"LINCHENYU2030S"},"content":"                int isDoneSymbol \u003d Integer.parseInt(userData.substring(dataLength - 1, dataLength));","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"LINCHENYU2030S"},"content":"                boolean isDone \u003d isDoneSymbol \u003d\u003d 1 ? true : false;","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"LINCHENYU2030S"},"content":"                if (!userData.substring(1, 2).equals(\" \") || (isDoneSymbol !\u003d 1 \u0026\u0026 isDoneSymbol !\u003d 0)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"LINCHENYU2030S"},"content":"                    throw new AlexException(\"\");","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"LINCHENYU2030S"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"LINCHENYU2030S"},"content":"                if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"LINCHENYU2030S"},"content":"                    try {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"LINCHENYU2030S"},"content":"                        String description \u003d userData.substring(2, dataLength - 2);","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"LINCHENYU2030S"},"content":"                        taskToBeStored \u003d new ToDos(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"LINCHENYU2030S"},"content":"                        UserInputStorage.store(taskToBeStored, false);","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"LINCHENYU2030S"},"content":"                    } catch (AlexException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"LINCHENYU2030S"},"content":"                        String message \u003d \"OOPS!!! The program terminates because the data format at line \"","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"LINCHENYU2030S"},"content":"                                + (UserInputStorage.getNumOfElement() + 1)","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"LINCHENYU2030S"},"content":"                                + \"is wrong\" + \"\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"LINCHENYU2030S"},"content":"                                + \"The correct data format for a todo task should be: \\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"LINCHENYU2030S"},"content":"                                + \"   \"","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"LINCHENYU2030S"},"content":"                                + \"T (description) (1/0) where 1 indicates done and 0 indicates undone\";","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"LINCHENYU2030S"},"content":"                        System.out.println(message);","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"LINCHENYU2030S"},"content":"                        System.exit(0);","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"LINCHENYU2030S"},"content":"                    }","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"LINCHENYU2030S"},"content":"                } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"LINCHENYU2030S"},"content":"                    try {","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"LINCHENYU2030S"},"content":"                        String descriptionWithTime \u003d userData.substring(0, dataLength - 2);","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"LINCHENYU2030S"},"content":"                        String regex \u003d \"\\\\b /by \\\\b\";","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"LINCHENYU2030S"},"content":"                        Pattern pattern \u003d Pattern.compile(regex);","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"LINCHENYU2030S"},"content":"                        Matcher matcher \u003d pattern.matcher(descriptionWithTime);","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"LINCHENYU2030S"},"content":"                        if (!matcher.find()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"LINCHENYU2030S"},"content":"                            throw new AlexException(\"\");","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"LINCHENYU2030S"},"content":"                        }","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"LINCHENYU2030S"},"content":"                        int startIndex \u003d matcher.start();","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"LINCHENYU2030S"},"content":"                        int endIndex \u003d matcher.end();","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"LINCHENYU2030S"},"content":"                        String description \u003d startIndex \u003e 2 ? userData.substring(2, startIndex) : \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"LINCHENYU2030S"},"content":"                        String by \u003d userData.substring(endIndex, dataLength - 2);","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"LINCHENYU2030S"},"content":"                        taskToBeStored \u003d new Deadline(description, by);","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"LINCHENYU2030S"},"content":"                        UserInputStorage.store(taskToBeStored, false);","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"LINCHENYU2030S"},"content":"                    } catch (AlexException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"LINCHENYU2030S"},"content":"                        String message \u003d \"OOPS!!! The program terminates because the data format at line \"","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"LINCHENYU2030S"},"content":"                                + (UserInputStorage.getNumOfElement() + 1)","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"LINCHENYU2030S"},"content":"                                + \" is wrong\" + \"\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"LINCHENYU2030S"},"content":"                                + \"The correct data format for a deadline task should be: \\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"LINCHENYU2030S"},"content":"                                + \"   \"","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"LINCHENYU2030S"},"content":"                                + \"D (description) /by yyyy-mm-dd (1/0) where 1 indicates done and 0 indicates undone\";","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"LINCHENYU2030S"},"content":"                        System.out.println(message);","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"LINCHENYU2030S"},"content":"                        System.exit(0);","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"LINCHENYU2030S"},"content":"                    }","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"LINCHENYU2030S"},"content":"                } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"LINCHENYU2030S"},"content":"                    try {","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"LINCHENYU2030S"},"content":"                        String descriptionWithTime \u003d userData.substring(0, dataLength - 2);","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"LINCHENYU2030S"},"content":"                        String regex \u003d \"\\\\b /from \\\\b\";","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"LINCHENYU2030S"},"content":"                        Pattern pattern1 \u003d Pattern.compile(regex);","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"LINCHENYU2030S"},"content":"                        Matcher matcher1 \u003d pattern1.matcher(descriptionWithTime);","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"LINCHENYU2030S"},"content":"                        if (!matcher1.find()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"LINCHENYU2030S"},"content":"                            throw new AlexException(\"\");","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"LINCHENYU2030S"},"content":"                        }","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"LINCHENYU2030S"},"content":"                        int firstStart \u003d matcher1.start();","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"LINCHENYU2030S"},"content":"                        int firstEnd \u003d matcher1.end();","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"LINCHENYU2030S"},"content":"                        String regex2 \u003d \"\\\\b /to \\\\b\";","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"LINCHENYU2030S"},"content":"                        Pattern pattern2 \u003d Pattern.compile(regex2);","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"LINCHENYU2030S"},"content":"                        Matcher matcher2 \u003d pattern2.matcher(descriptionWithTime);","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"LINCHENYU2030S"},"content":"                        if (!matcher2.find()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"LINCHENYU2030S"},"content":"                            throw new AlexException(\"\");","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"LINCHENYU2030S"},"content":"                        }","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"LINCHENYU2030S"},"content":"                        int secondStart \u003d matcher2.start();","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"LINCHENYU2030S"},"content":"                        int secondEnd \u003d matcher2.end();","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"LINCHENYU2030S"},"content":"                        String description \u003d firstStart \u003e 2 ? userData.substring(2, firstStart) : \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"LINCHENYU2030S"},"content":"                        String fromTime \u003d userData.substring(firstEnd, secondStart);","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"LINCHENYU2030S"},"content":"                        String toTime \u003d userData.substring(secondEnd, dataLength - 2);","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"LINCHENYU2030S"},"content":"                        taskToBeStored \u003d new Event(description, fromTime, toTime);","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"LINCHENYU2030S"},"content":"                        UserInputStorage.store(taskToBeStored, false);","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"LINCHENYU2030S"},"content":"                    } catch (AlexException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"LINCHENYU2030S"},"content":"                        String message \u003d \"OOPS!!! The program terminates because the data format at line \"","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"LINCHENYU2030S"},"content":"                                + (UserInputStorage.getNumOfElement() + 1)","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"LINCHENYU2030S"},"content":"                                + \"is wrong\" + \"\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"LINCHENYU2030S"},"content":"                                + \"The correct data format for an event task should be: \\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"LINCHENYU2030S"},"content":"                                + \"   \"","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"LINCHENYU2030S"},"content":"                                + \"E (description) /from yyyy-mm-dd /to yyyy-mm-dd (1/0) \" +","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"LINCHENYU2030S"},"content":"                                \"where 1 indicates done and 0 indicates undone\";","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"LINCHENYU2030S"},"content":"                        System.out.println(message);","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"LINCHENYU2030S"},"content":"                        System.exit(0);","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"LINCHENYU2030S"},"content":"                    }","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"LINCHENYU2030S"},"content":"                } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"LINCHENYU2030S"},"content":"                    throw new AlexException(\"\");","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"LINCHENYU2030S"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"LINCHENYU2030S"},"content":"                if (isDone) {","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"LINCHENYU2030S"},"content":"                    taskToBeStored.mark(false);","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"LINCHENYU2030S"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"LINCHENYU2030S"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"LINCHENYU2030S"},"content":"        } catch(FileNotFoundException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"LINCHENYU2030S"},"content":"            File userDataFile \u003d new File(\"../data/Alex.txt\");","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"LINCHENYU2030S"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"LINCHENYU2030S"},"content":"                userDataFile.createNewFile();","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"LINCHENYU2030S"},"content":"            } catch (IOException e2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"LINCHENYU2030S"},"content":"                System.err.println(\"The file Alex.txt does not exits and there is an error creating the file: \"","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"LINCHENYU2030S"},"content":"                        + e2.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"LINCHENYU2030S"},"content":"                System.exit(0);","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"LINCHENYU2030S"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"LINCHENYU2030S"},"content":"        } catch (AlexException | NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"LINCHENYU2030S"},"content":"            String message \u003d \"OOPS!!! The program terminates because the data format at line \"","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"LINCHENYU2030S"},"content":"                    + (UserInputStorage.getNumOfElement() + 1)","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"LINCHENYU2030S"},"content":"                    + \"is wrong\" +\"\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"LINCHENYU2030S"},"content":"                    + \"The correct data format for a todo task should be: \\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"LINCHENYU2030S"},"content":"                    + \"   \"","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"LINCHENYU2030S"},"content":"                    + \"T (description) (1/0) where 1 indicates done and 0 indicates undone\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"LINCHENYU2030S"},"content":"                    + \"The correct data format for a deadline task should be: \\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"LINCHENYU2030S"},"content":"                    + \"   \"","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"LINCHENYU2030S"},"content":"                    + \"D (description) /by yyyy-mm-dd (1/0) where 1 indicates done and 0 indicates undone\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"LINCHENYU2030S"},"content":"                    + \"The correct data format for a event task should be: \\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"LINCHENYU2030S"},"content":"                    + \"   \"","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"LINCHENYU2030S"},"content":"                    + \"E (description) /from yyyy-mm-dd /to yyyy-mm-dd (1/0)\" +","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"LINCHENYU2030S"},"content":"                    \"where 1 indicates done and 0 indicates undone\";","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"LINCHENYU2030S"},"content":"            System.out.println(message);","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"LINCHENYU2030S"},"content":"            System.exit(0);","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"LINCHENYU2030S"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"LINCHENYU2030S"},"content":"        Scanner userInputScanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-02"},{"lineNumber":154,"author":{"gitId":"LINCHENYU2030S"},"content":"        while (true) {","lastModifiedDate":"2023-08-24"},{"lineNumber":155,"author":{"gitId":"LINCHENYU2030S"},"content":"            String userInput \u003d userInputScanner.nextLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"LINCHENYU2030S"},"content":"            String userInputStripped \u003d userInput.stripTrailing();","lastModifiedDate":"2023-08-26"},{"lineNumber":157,"author":{"gitId":"LINCHENYU2030S"},"content":"            int inputLength \u003d userInput.length();","lastModifiedDate":"2023-08-24"},{"lineNumber":158,"author":{"gitId":"LINCHENYU2030S"},"content":"            if (userInput.equals(\"bye\") || userInputStripped.equals(\"bye\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":159,"author":{"gitId":"LINCHENYU2030S"},"content":"                String bye \u003d horizontalLine","lastModifiedDate":"2023-08-26"},{"lineNumber":160,"author":{"gitId":"LINCHENYU2030S"},"content":"                        + \"Bye bye. Hope to see you again soon!\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":161,"author":{"gitId":"LINCHENYU2030S"},"content":"                        + horizontalLine;","lastModifiedDate":"2023-08-26"},{"lineNumber":162,"author":{"gitId":"LINCHENYU2030S"},"content":"                System.out.println(bye);","lastModifiedDate":"2023-08-24"},{"lineNumber":163,"author":{"gitId":"LINCHENYU2030S"},"content":"                UserInputStorage.storeToFile();","lastModifiedDate":"2023-09-02"},{"lineNumber":164,"author":{"gitId":"LINCHENYU2030S"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":165,"author":{"gitId":"LINCHENYU2030S"},"content":"            } else if(userInput.equals(\"list\") || userInputStripped.equals(\"list\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":166,"author":{"gitId":"LINCHENYU2030S"},"content":"                UserInputStorage.printAllContent();","lastModifiedDate":"2023-08-25"},{"lineNumber":167,"author":{"gitId":"LINCHENYU2030S"},"content":"            } else if (inputLength \u003e\u003d 4 \u0026\u0026 userInput.substring(0, 4).equals(\"mark\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":168,"author":{"gitId":"LINCHENYU2030S"},"content":"                try {","lastModifiedDate":"2023-08-26"},{"lineNumber":169,"author":{"gitId":"LINCHENYU2030S"},"content":"                    int index \u003d Integer.parseInt(userInput.substring(5));","lastModifiedDate":"2023-08-26"},{"lineNumber":170,"author":{"gitId":"LINCHENYU2030S"},"content":"                    Task targetedTask \u003d UserInputStorage.getTaskByIndex(index);","lastModifiedDate":"2023-08-24"},{"lineNumber":171,"author":{"gitId":"LINCHENYU2030S"},"content":"                    targetedTask.mark();","lastModifiedDate":"2023-08-24"},{"lineNumber":172,"author":{"gitId":"LINCHENYU2030S"},"content":"                } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":173,"author":{"gitId":"LINCHENYU2030S"},"content":"                    String message \u003d \"To mark certain task to be done, please use the following format:\\n\"","lastModifiedDate":"2023-08-26"},{"lineNumber":174,"author":{"gitId":"LINCHENYU2030S"},"content":"                                   + \"   \" + \"mark (task number in non-negative integer)\\n\";","lastModifiedDate":"2023-08-26"},{"lineNumber":175,"author":{"gitId":"LINCHENYU2030S"},"content":"                    System.out.println(horizontalLine","lastModifiedDate":"2023-08-26"},{"lineNumber":176,"author":{"gitId":"LINCHENYU2030S"},"content":"                                     + message","lastModifiedDate":"2023-08-26"},{"lineNumber":177,"author":{"gitId":"LINCHENYU2030S"},"content":"                                     + horizontalLine","lastModifiedDate":"2023-08-26"},{"lineNumber":178,"author":{"gitId":"LINCHENYU2030S"},"content":"                    );","lastModifiedDate":"2023-08-26"},{"lineNumber":179,"author":{"gitId":"LINCHENYU2030S"},"content":"                } catch (AlexException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":180,"author":{"gitId":"LINCHENYU2030S"},"content":"                    System.out.println(horizontalLine","lastModifiedDate":"2023-08-26"},{"lineNumber":181,"author":{"gitId":"LINCHENYU2030S"},"content":"                                     + e.getMessage() + \"\\n\"","lastModifiedDate":"2023-08-26"},{"lineNumber":182,"author":{"gitId":"LINCHENYU2030S"},"content":"                                     + horizontalLine","lastModifiedDate":"2023-08-26"},{"lineNumber":183,"author":{"gitId":"LINCHENYU2030S"},"content":"                    );","lastModifiedDate":"2023-08-26"},{"lineNumber":184,"author":{"gitId":"LINCHENYU2030S"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":185,"author":{"gitId":"LINCHENYU2030S"},"content":"            } else if (inputLength \u003e\u003d 6 \u0026\u0026 userInput.substring(0, 6).equals(\"unmark\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":186,"author":{"gitId":"LINCHENYU2030S"},"content":"                try {","lastModifiedDate":"2023-08-26"},{"lineNumber":187,"author":{"gitId":"LINCHENYU2030S"},"content":"                    int index \u003d Integer.parseInt(userInput.substring(7));","lastModifiedDate":"2023-08-26"},{"lineNumber":188,"author":{"gitId":"LINCHENYU2030S"},"content":"                    Task targetedTask \u003d UserInputStorage.getTaskByIndex(index);","lastModifiedDate":"2023-08-24"},{"lineNumber":189,"author":{"gitId":"LINCHENYU2030S"},"content":"                    targetedTask.unmark();","lastModifiedDate":"2023-08-24"},{"lineNumber":190,"author":{"gitId":"LINCHENYU2030S"},"content":"                } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":191,"author":{"gitId":"LINCHENYU2030S"},"content":"                    String message \u003d \"To unmark certain task to be undone, please use the following format:\\n\"","lastModifiedDate":"2023-08-26"},{"lineNumber":192,"author":{"gitId":"LINCHENYU2030S"},"content":"                            + \"   \" + \"unmark (task number in non-negative integer)\\n\";","lastModifiedDate":"2023-08-26"},{"lineNumber":193,"author":{"gitId":"LINCHENYU2030S"},"content":"                    System.out.println(horizontalLine","lastModifiedDate":"2023-08-26"},{"lineNumber":194,"author":{"gitId":"LINCHENYU2030S"},"content":"                            + message","lastModifiedDate":"2023-08-26"},{"lineNumber":195,"author":{"gitId":"LINCHENYU2030S"},"content":"                            + horizontalLine","lastModifiedDate":"2023-08-26"},{"lineNumber":196,"author":{"gitId":"LINCHENYU2030S"},"content":"                    );","lastModifiedDate":"2023-08-26"},{"lineNumber":197,"author":{"gitId":"LINCHENYU2030S"},"content":"                } catch (AlexException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":198,"author":{"gitId":"LINCHENYU2030S"},"content":"                    System.out.println(horizontalLine","lastModifiedDate":"2023-08-26"},{"lineNumber":199,"author":{"gitId":"LINCHENYU2030S"},"content":"                            + e.getMessage() + \"\\n\"","lastModifiedDate":"2023-08-26"},{"lineNumber":200,"author":{"gitId":"LINCHENYU2030S"},"content":"                            + horizontalLine","lastModifiedDate":"2023-08-26"},{"lineNumber":201,"author":{"gitId":"LINCHENYU2030S"},"content":"                    );","lastModifiedDate":"2023-08-26"},{"lineNumber":202,"author":{"gitId":"LINCHENYU2030S"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":203,"author":{"gitId":"LINCHENYU2030S"},"content":"            } else if (inputLength \u003e\u003d 6 \u0026\u0026 userInput.substring(0, 6).equals(\"delete\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":204,"author":{"gitId":"LINCHENYU2030S"},"content":"                try {","lastModifiedDate":"2023-08-26"},{"lineNumber":205,"author":{"gitId":"LINCHENYU2030S"},"content":"                    int toDeleteIndex \u003d Integer.parseInt(userInput.substring(7, 8));","lastModifiedDate":"2023-08-25"},{"lineNumber":206,"author":{"gitId":"LINCHENYU2030S"},"content":"                    UserInputStorage.delete(toDeleteIndex);","lastModifiedDate":"2023-08-25"},{"lineNumber":207,"author":{"gitId":"LINCHENYU2030S"},"content":"                } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":208,"author":{"gitId":"LINCHENYU2030S"},"content":"                    String message \u003d \"To delete a task, please use the following format:\\n\"","lastModifiedDate":"2023-08-26"},{"lineNumber":209,"author":{"gitId":"LINCHENYU2030S"},"content":"                            + \"   \" + \"delete (task number in non-negative integer)\\n\";","lastModifiedDate":"2023-08-26"},{"lineNumber":210,"author":{"gitId":"LINCHENYU2030S"},"content":"                    System.out.println(horizontalLine","lastModifiedDate":"2023-08-26"},{"lineNumber":211,"author":{"gitId":"LINCHENYU2030S"},"content":"                            + message","lastModifiedDate":"2023-08-26"},{"lineNumber":212,"author":{"gitId":"LINCHENYU2030S"},"content":"                            + horizontalLine","lastModifiedDate":"2023-08-26"},{"lineNumber":213,"author":{"gitId":"LINCHENYU2030S"},"content":"                    );","lastModifiedDate":"2023-08-26"},{"lineNumber":214,"author":{"gitId":"LINCHENYU2030S"},"content":"                } catch (AlexException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":215,"author":{"gitId":"LINCHENYU2030S"},"content":"                    System.out.println(horizontalLine","lastModifiedDate":"2023-08-26"},{"lineNumber":216,"author":{"gitId":"LINCHENYU2030S"},"content":"                            + e.getMessage() + \"\\n\"","lastModifiedDate":"2023-08-26"},{"lineNumber":217,"author":{"gitId":"LINCHENYU2030S"},"content":"                            + horizontalLine","lastModifiedDate":"2023-08-26"},{"lineNumber":218,"author":{"gitId":"LINCHENYU2030S"},"content":"                    );","lastModifiedDate":"2023-08-26"},{"lineNumber":219,"author":{"gitId":"LINCHENYU2030S"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":220,"author":{"gitId":"LINCHENYU2030S"},"content":"            } else if (inputLength \u003e\u003d 4 \u0026\u0026 userInput.substring(0, 4).equals(\"todo\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":221,"author":{"gitId":"LINCHENYU2030S"},"content":"                try {","lastModifiedDate":"2023-08-26"},{"lineNumber":222,"author":{"gitId":"LINCHENYU2030S"},"content":"                    if (!userInput.substring(4, 5).equals(\" \")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":223,"author":{"gitId":"LINCHENYU2030S"},"content":"                        String message \u003d \"OOPS!!! Please enter a todo task in the following format:\\n\"","lastModifiedDate":"2023-08-26"},{"lineNumber":224,"author":{"gitId":"LINCHENYU2030S"},"content":"                                       + \"   \" + \"todo (description)\";","lastModifiedDate":"2023-08-26"},{"lineNumber":225,"author":{"gitId":"LINCHENYU2030S"},"content":"                        throw new AlexException(message);","lastModifiedDate":"2023-08-26"},{"lineNumber":226,"author":{"gitId":"LINCHENYU2030S"},"content":"                    }","lastModifiedDate":"2023-08-26"},{"lineNumber":227,"author":{"gitId":"LINCHENYU2030S"},"content":"                    Task todo \u003d new ToDos(userInput.substring(5));","lastModifiedDate":"2023-08-25"},{"lineNumber":228,"author":{"gitId":"LINCHENYU2030S"},"content":"                    UserInputStorage.store(todo);","lastModifiedDate":"2023-08-25"},{"lineNumber":229,"author":{"gitId":"LINCHENYU2030S"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":230,"author":{"gitId":"LINCHENYU2030S"},"content":"                    String message \u003d \"OOPS!!! Please enter a todo task in the following format:\\n\"","lastModifiedDate":"2023-08-26"},{"lineNumber":231,"author":{"gitId":"LINCHENYU2030S"},"content":"                            + \"   \" + \"todo (description)\";","lastModifiedDate":"2023-08-26"},{"lineNumber":232,"author":{"gitId":"LINCHENYU2030S"},"content":"                    System.out.println(horizontalLine","lastModifiedDate":"2023-08-26"},{"lineNumber":233,"author":{"gitId":"LINCHENYU2030S"},"content":"                                     + message + \"\\n\"","lastModifiedDate":"2023-08-26"},{"lineNumber":234,"author":{"gitId":"LINCHENYU2030S"},"content":"                                     + horizontalLine","lastModifiedDate":"2023-08-26"},{"lineNumber":235,"author":{"gitId":"LINCHENYU2030S"},"content":"                    );","lastModifiedDate":"2023-08-26"},{"lineNumber":236,"author":{"gitId":"LINCHENYU2030S"},"content":"                } catch (AlexException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":237,"author":{"gitId":"LINCHENYU2030S"},"content":"                    System.out.println(horizontalLine","lastModifiedDate":"2023-08-26"},{"lineNumber":238,"author":{"gitId":"LINCHENYU2030S"},"content":"                                     + e.getMessage() + \"\\n\"","lastModifiedDate":"2023-08-26"},{"lineNumber":239,"author":{"gitId":"LINCHENYU2030S"},"content":"                                     + horizontalLine","lastModifiedDate":"2023-08-26"},{"lineNumber":240,"author":{"gitId":"LINCHENYU2030S"},"content":"                    );","lastModifiedDate":"2023-08-26"},{"lineNumber":241,"author":{"gitId":"LINCHENYU2030S"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":242,"author":{"gitId":"LINCHENYU2030S"},"content":"            } else if (inputLength \u003e\u003d 8 \u0026\u0026 userInput.substring(0, 8).equals(\"deadline\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":243,"author":{"gitId":"LINCHENYU2030S"},"content":"                try {","lastModifiedDate":"2023-08-26"},{"lineNumber":244,"author":{"gitId":"LINCHENYU2030S"},"content":"                    String regex \u003d \"\\\\b /by \\\\b\";","lastModifiedDate":"2023-08-25"},{"lineNumber":245,"author":{"gitId":"LINCHENYU2030S"},"content":"                    Pattern pattern \u003d Pattern.compile(regex);","lastModifiedDate":"2023-08-25"},{"lineNumber":246,"author":{"gitId":"LINCHENYU2030S"},"content":"                    Matcher matcher \u003d pattern.matcher(userInput);","lastModifiedDate":"2023-08-25"},{"lineNumber":247,"author":{"gitId":"LINCHENYU2030S"},"content":"                    if (!matcher.find()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":248,"author":{"gitId":"LINCHENYU2030S"},"content":"                        String message \u003d \"Please enter a deadline task in the format: deadline (description) /by (time)\";","lastModifiedDate":"2023-08-26"},{"lineNumber":249,"author":{"gitId":"LINCHENYU2030S"},"content":"                        throw new AlexException(message);","lastModifiedDate":"2023-08-26"},{"lineNumber":250,"author":{"gitId":"LINCHENYU2030S"},"content":"                    }","lastModifiedDate":"2023-08-26"},{"lineNumber":251,"author":{"gitId":"LINCHENYU2030S"},"content":"                    int startIndex \u003d matcher.start();","lastModifiedDate":"2023-08-25"},{"lineNumber":252,"author":{"gitId":"LINCHENYU2030S"},"content":"                    int endIndex \u003d matcher.end();","lastModifiedDate":"2023-08-25"},{"lineNumber":253,"author":{"gitId":"LINCHENYU2030S"},"content":"                    String description \u003d startIndex \u003e 9 ? userInput.substring(9, startIndex) : \"\";","lastModifiedDate":"2023-08-26"},{"lineNumber":254,"author":{"gitId":"LINCHENYU2030S"},"content":"                    String by \u003d userInput.substring(endIndex);","lastModifiedDate":"2023-08-25"},{"lineNumber":255,"author":{"gitId":"LINCHENYU2030S"},"content":"                    Task deadline \u003d new Deadline(description, by);","lastModifiedDate":"2023-08-25"},{"lineNumber":256,"author":{"gitId":"LINCHENYU2030S"},"content":"                    UserInputStorage.store(deadline);","lastModifiedDate":"2023-08-25"},{"lineNumber":257,"author":{"gitId":"LINCHENYU2030S"},"content":"                } catch (AlexException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":258,"author":{"gitId":"LINCHENYU2030S"},"content":"                    System.out.println(horizontalLine","lastModifiedDate":"2023-08-26"},{"lineNumber":259,"author":{"gitId":"LINCHENYU2030S"},"content":"                                     + e.getMessage() + \"\\n\"","lastModifiedDate":"2023-08-26"},{"lineNumber":260,"author":{"gitId":"LINCHENYU2030S"},"content":"                                     + horizontalLine","lastModifiedDate":"2023-08-26"},{"lineNumber":261,"author":{"gitId":"LINCHENYU2030S"},"content":"                    );","lastModifiedDate":"2023-08-26"},{"lineNumber":262,"author":{"gitId":"LINCHENYU2030S"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":263,"author":{"gitId":"LINCHENYU2030S"},"content":"            } else if (inputLength \u003e\u003d 5 \u0026\u0026 userInput.substring(0, 5).equals(\"event\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":264,"author":{"gitId":"LINCHENYU2030S"},"content":"                try {","lastModifiedDate":"2023-08-26"},{"lineNumber":265,"author":{"gitId":"LINCHENYU2030S"},"content":"                    String regex \u003d \"\\\\b /from \\\\b\";","lastModifiedDate":"2023-08-25"},{"lineNumber":266,"author":{"gitId":"LINCHENYU2030S"},"content":"                    Pattern pattern1 \u003d Pattern.compile(regex);","lastModifiedDate":"2023-08-25"},{"lineNumber":267,"author":{"gitId":"LINCHENYU2030S"},"content":"                    Matcher matcher1 \u003d pattern1.matcher(userInput);","lastModifiedDate":"2023-08-25"},{"lineNumber":268,"author":{"gitId":"LINCHENYU2030S"},"content":"                    if (!matcher1.find()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":269,"author":{"gitId":"LINCHENYU2030S"},"content":"                        String message \u003d \"Please enter an event task in the format: \"","lastModifiedDate":"2023-08-26"},{"lineNumber":270,"author":{"gitId":"LINCHENYU2030S"},"content":"                                        + \"event (description) /from (from_time) /to (to_time)\";","lastModifiedDate":"2023-08-26"},{"lineNumber":271,"author":{"gitId":"LINCHENYU2030S"},"content":"                        throw new AlexException(message);","lastModifiedDate":"2023-08-26"},{"lineNumber":272,"author":{"gitId":"LINCHENYU2030S"},"content":"                    }","lastModifiedDate":"2023-08-26"},{"lineNumber":273,"author":{"gitId":"LINCHENYU2030S"},"content":"                    int firstStart \u003d matcher1.start();","lastModifiedDate":"2023-08-25"},{"lineNumber":274,"author":{"gitId":"LINCHENYU2030S"},"content":"                    int firstEnd \u003d matcher1.end();","lastModifiedDate":"2023-08-25"},{"lineNumber":275,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":276,"author":{"gitId":"LINCHENYU2030S"},"content":"                    String regex2 \u003d \"\\\\b /to \\\\b\";","lastModifiedDate":"2023-08-25"},{"lineNumber":277,"author":{"gitId":"LINCHENYU2030S"},"content":"                    Pattern pattern2 \u003d Pattern.compile(regex2);","lastModifiedDate":"2023-08-25"},{"lineNumber":278,"author":{"gitId":"LINCHENYU2030S"},"content":"                    Matcher matcher2 \u003d pattern2.matcher(userInput);","lastModifiedDate":"2023-08-25"},{"lineNumber":279,"author":{"gitId":"LINCHENYU2030S"},"content":"                    if (!matcher2.find()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":280,"author":{"gitId":"LINCHENYU2030S"},"content":"                        String message \u003d \"Please enter an event task in the format: \"","lastModifiedDate":"2023-08-26"},{"lineNumber":281,"author":{"gitId":"LINCHENYU2030S"},"content":"                                + \"event (description) /from (from_time) /to (to_time)\";","lastModifiedDate":"2023-08-26"},{"lineNumber":282,"author":{"gitId":"LINCHENYU2030S"},"content":"                        throw new AlexException(message);","lastModifiedDate":"2023-08-26"},{"lineNumber":283,"author":{"gitId":"LINCHENYU2030S"},"content":"                    }","lastModifiedDate":"2023-08-26"},{"lineNumber":284,"author":{"gitId":"LINCHENYU2030S"},"content":"                    int secondStart \u003d matcher2.start();","lastModifiedDate":"2023-08-25"},{"lineNumber":285,"author":{"gitId":"LINCHENYU2030S"},"content":"                    int secondEnd \u003d matcher2.end();","lastModifiedDate":"2023-08-25"},{"lineNumber":286,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":287,"author":{"gitId":"LINCHENYU2030S"},"content":"                    String description \u003d firstStart \u003e 6 ? userInput.substring(6, firstStart) : \"\";","lastModifiedDate":"2023-08-26"},{"lineNumber":288,"author":{"gitId":"LINCHENYU2030S"},"content":"                    String fromTime \u003d userInput.substring(firstEnd, secondStart);","lastModifiedDate":"2023-08-25"},{"lineNumber":289,"author":{"gitId":"LINCHENYU2030S"},"content":"                    String toTime \u003d userInput.substring(secondEnd);","lastModifiedDate":"2023-08-25"},{"lineNumber":290,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":291,"author":{"gitId":"LINCHENYU2030S"},"content":"                    Task event \u003d new Event(description, fromTime, toTime);","lastModifiedDate":"2023-08-25"},{"lineNumber":292,"author":{"gitId":"LINCHENYU2030S"},"content":"                    UserInputStorage.store(event);","lastModifiedDate":"2023-08-25"},{"lineNumber":293,"author":{"gitId":"LINCHENYU2030S"},"content":"                } catch (AlexException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":294,"author":{"gitId":"LINCHENYU2030S"},"content":"                    System.out.println(horizontalLine","lastModifiedDate":"2023-08-26"},{"lineNumber":295,"author":{"gitId":"LINCHENYU2030S"},"content":"                                     + e.getMessage() + \"\\n\"","lastModifiedDate":"2023-08-26"},{"lineNumber":296,"author":{"gitId":"LINCHENYU2030S"},"content":"                                     + horizontalLine","lastModifiedDate":"2023-08-26"},{"lineNumber":297,"author":{"gitId":"LINCHENYU2030S"},"content":"                    );","lastModifiedDate":"2023-08-26"},{"lineNumber":298,"author":{"gitId":"LINCHENYU2030S"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":299,"author":{"gitId":"LINCHENYU2030S"},"content":"            } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":300,"author":{"gitId":"LINCHENYU2030S"},"content":"                String message \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\";","lastModifiedDate":"2023-08-26"},{"lineNumber":301,"author":{"gitId":"LINCHENYU2030S"},"content":"                System.out.println(horizontalLine","lastModifiedDate":"2023-08-26"},{"lineNumber":302,"author":{"gitId":"LINCHENYU2030S"},"content":"                                 + message","lastModifiedDate":"2023-08-26"},{"lineNumber":303,"author":{"gitId":"LINCHENYU2030S"},"content":"                                 + horizontalLine","lastModifiedDate":"2023-08-26"},{"lineNumber":304,"author":{"gitId":"LINCHENYU2030S"},"content":"                );","lastModifiedDate":"2023-08-26"},{"lineNumber":305,"author":{"gitId":"LINCHENYU2030S"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":306,"author":{"gitId":"LINCHENYU2030S"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":307,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":308,"author":{"gitId":"LINCHENYU2030S"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"LINCHENYU2030S":308}},{"path":"src/main/java/AlexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LINCHENYU2030S"},"content":"public class AlexException extends Exception{","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"LINCHENYU2030S"},"content":"    public AlexException(String message) {","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"LINCHENYU2030S"},"content":"        super(message);","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"LINCHENYU2030S"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"LINCHENYU2030S":6}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LINCHENYU2030S"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"LINCHENYU2030S"},"content":"    protected String by;","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"LINCHENYU2030S"},"content":"    public Deadline(String description, String by) throws AlexException {","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"LINCHENYU2030S"},"content":"        super(description);","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"LINCHENYU2030S"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"LINCHENYU2030S"},"content":"    public String getBy() {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"LINCHENYU2030S"},"content":"        return this.by;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"LINCHENYU2030S"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"LINCHENYU2030S"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"LINCHENYU2030S"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"LINCHENYU2030S"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"LINCHENYU2030S":18}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LINCHENYU2030S"},"content":"public class Event extends Task{","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"LINCHENYU2030S"},"content":"    protected String fromTime;","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"LINCHENYU2030S"},"content":"    protected String toTime;","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"LINCHENYU2030S"},"content":"    public Event(String description, String fromTime, String toTime) throws AlexException {","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"LINCHENYU2030S"},"content":"        super(description);","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"LINCHENYU2030S"},"content":"        this.fromTime \u003d fromTime;","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"LINCHENYU2030S"},"content":"        this.toTime \u003d toTime;","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"LINCHENYU2030S"},"content":"    public String getFromTime() {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"LINCHENYU2030S"},"content":"        return this.fromTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"LINCHENYU2030S"},"content":"    public String getToTime() {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"LINCHENYU2030S"},"content":"        return this.toTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"LINCHENYU2030S"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"LINCHENYU2030S"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"LINCHENYU2030S"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.fromTime + \" to: \" + toTime + \")\";","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"LINCHENYU2030S"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"LINCHENYU2030S":23}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LINCHENYU2030S"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"LINCHENYU2030S"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"LINCHENYU2030S"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"LINCHENYU2030S"},"content":"    public Task(String description) throws AlexException {","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"LINCHENYU2030S"},"content":"        description \u003d description.stripTrailing();","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"LINCHENYU2030S"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"LINCHENYU2030S"},"content":"            String message \u003d \"OOPS!!! The description of a task cannot be empty\";","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"LINCHENYU2030S"},"content":"            throw new AlexException(message);","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"LINCHENYU2030S"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"LINCHENYU2030S"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"LINCHENYU2030S"},"content":"    public String getStatusSymbol() {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"LINCHENYU2030S"},"content":"        if (isDone) {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"LINCHENYU2030S"},"content":"            return \"X\";","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"LINCHENYU2030S"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"LINCHENYU2030S"},"content":"            return \" \";","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"LINCHENYU2030S"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"LINCHENYU2030S"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"LINCHENYU2030S"},"content":"        return this.isDone;","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"LINCHENYU2030S"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"LINCHENYU2030S"},"content":"        return this.description;","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"LINCHENYU2030S"},"content":"    public void mark() {","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"LINCHENYU2030S"},"content":"        String tobePrinted \u003d \"\";","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"LINCHENYU2030S"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"LINCHENYU2030S"},"content":"        tobePrinted \u003d \"_____________________________________________________________\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"LINCHENYU2030S"},"content":"                    + \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"LINCHENYU2030S"},"content":"                    + \"   \"","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"LINCHENYU2030S"},"content":"                    + this.toString()","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"LINCHENYU2030S"},"content":"                    + \"\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"LINCHENYU2030S"},"content":"                    + \"_____________________________________________________________\\n\";","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"LINCHENYU2030S"},"content":"        System.out.println(tobePrinted);","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"LINCHENYU2030S"},"content":"    public void mark(boolean printToUser) {","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"LINCHENYU2030S"},"content":"        if (printToUser) {","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"LINCHENYU2030S"},"content":"            this.mark();","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"LINCHENYU2030S"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"LINCHENYU2030S"},"content":"            String tobePrinted \u003d \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"LINCHENYU2030S"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"LINCHENYU2030S"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"LINCHENYU2030S"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"LINCHENYU2030S"},"content":"        String tobePrinted \u003d \"\";","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"LINCHENYU2030S"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"LINCHENYU2030S"},"content":"        tobePrinted \u003d \"_____________________________________________________________\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"LINCHENYU2030S"},"content":"                    + \"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"LINCHENYU2030S"},"content":"                    + \"   \"","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"LINCHENYU2030S"},"content":"                    + this.toString()","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"LINCHENYU2030S"},"content":"                    + \"\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"LINCHENYU2030S"},"content":"                    + \"_____________________________________________________________\\n\";","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"LINCHENYU2030S"},"content":"        System.out.println(tobePrinted);","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"LINCHENYU2030S"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"LINCHENYU2030S"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"LINCHENYU2030S"},"content":"        String str \u003d \"[\" + this.getStatusSymbol() + \"] \" + this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"LINCHENYU2030S"},"content":"        return str;","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"LINCHENYU2030S"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"LINCHENYU2030S":69}},{"path":"src/main/java/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LINCHENYU2030S"},"content":"public class ToDos extends Task{","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"LINCHENYU2030S"},"content":"    public ToDos(String description) throws AlexException{","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"LINCHENYU2030S"},"content":"        super(description);","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"LINCHENYU2030S"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"LINCHENYU2030S"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"LINCHENYU2030S"},"content":"        String str \u003d \"[T]\" + super.toString();","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"LINCHENYU2030S"},"content":"        return str;","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"LINCHENYU2030S"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"LINCHENYU2030S":11}},{"path":"src/main/java/UserInputStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"LINCHENYU2030S"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"LINCHENYU2030S"},"content":"public class UserInputStorage {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"LINCHENYU2030S"},"content":"    private static ArrayList\u003cTask\u003e userinputs \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"LINCHENYU2030S"},"content":"    private static int numberOfElements \u003d 0;","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"LINCHENYU2030S"},"content":"    private static String horizontalLine \u003d \"_____________________________________________________________\\n\";","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"LINCHENYU2030S"},"content":"    public static void store(Task task) {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"LINCHENYU2030S"},"content":"        userinputs.add(task);","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"LINCHENYU2030S"},"content":"        numberOfElements++;","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"LINCHENYU2030S"},"content":"        System.out.println(horizontalLine","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"LINCHENYU2030S"},"content":"                + \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"LINCHENYU2030S"},"content":"                + \"  \"","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"LINCHENYU2030S"},"content":"                + task.toString() + \"\\n\"","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"LINCHENYU2030S"},"content":"                + \"Now you have \" + UserInputStorage.getNumOfElement() + \" tasks in the list.\\n\"","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"LINCHENYU2030S"},"content":"                + horizontalLine","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"LINCHENYU2030S"},"content":"        );","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"LINCHENYU2030S"},"content":"    public static void store(Task task, boolean printToUser) {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"LINCHENYU2030S"},"content":"        if (printToUser) {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"LINCHENYU2030S"},"content":"            store(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"LINCHENYU2030S"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"LINCHENYU2030S"},"content":"            userinputs.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"LINCHENYU2030S"},"content":"            numberOfElements++;","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"LINCHENYU2030S"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"LINCHENYU2030S"},"content":"    public static Task getTaskByIndex(int index) throws AlexException {","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"LINCHENYU2030S"},"content":"        if (index \u003e numberOfElements) {","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"LINCHENYU2030S"},"content":"            String message \u003d \"OOPS!!! There is/are only \" + numberOfElements + \" task(s) stored\";","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"LINCHENYU2030S"},"content":"            throw new AlexException(message);","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"LINCHENYU2030S"},"content":"        } else if (index \u003c 0) {","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"LINCHENYU2030S"},"content":"            String message \u003d \"OOPS!!! Task number cannot be negative, task number starts from 0\";","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"LINCHENYU2030S"},"content":"            throw new AlexException(message);","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"LINCHENYU2030S"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"LINCHENYU2030S"},"content":"        return userinputs.get(index - 1);","lastModifiedDate":"2023-08-25"},{"lineNumber":41,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"LINCHENYU2030S"},"content":"    public static void printAllContent() {","lastModifiedDate":"2023-08-25"},{"lineNumber":44,"author":{"gitId":"LINCHENYU2030S"},"content":"        String tobePrinted \u003d \"\";","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"LINCHENYU2030S"},"content":"        for (int i \u003d 0; i \u003c numberOfElements; i++) {","lastModifiedDate":"2023-08-25"},{"lineNumber":46,"author":{"gitId":"LINCHENYU2030S"},"content":"            tobePrinted \u003d tobePrinted + (i + 1) + \". \" + userinputs.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-08-25"},{"lineNumber":47,"author":{"gitId":"LINCHENYU2030S"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"LINCHENYU2030S"},"content":"        System.out.println(horizontalLine","lastModifiedDate":"2023-08-25"},{"lineNumber":49,"author":{"gitId":"LINCHENYU2030S"},"content":"                + tobePrinted","lastModifiedDate":"2023-08-25"},{"lineNumber":50,"author":{"gitId":"LINCHENYU2030S"},"content":"                + horizontalLine","lastModifiedDate":"2023-08-25"},{"lineNumber":51,"author":{"gitId":"LINCHENYU2030S"},"content":"        );","lastModifiedDate":"2023-08-25"},{"lineNumber":52,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":54,"author":{"gitId":"LINCHENYU2030S"},"content":"    public static int getNumOfElement() {","lastModifiedDate":"2023-08-25"},{"lineNumber":55,"author":{"gitId":"LINCHENYU2030S"},"content":"        return numberOfElements;","lastModifiedDate":"2023-08-25"},{"lineNumber":56,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":57,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":58,"author":{"gitId":"LINCHENYU2030S"},"content":"    public static void delete(int index) throws AlexException{","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"LINCHENYU2030S"},"content":"        if (index \u003e numberOfElements) {","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"LINCHENYU2030S"},"content":"            String message \u003d \"OOPS!!! There is/are only \" + numberOfElements + \" task(s) stored\";","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"LINCHENYU2030S"},"content":"            throw new AlexException(message);","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"LINCHENYU2030S"},"content":"        } else if (index \u003c 0) {","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"LINCHENYU2030S"},"content":"            String message \u003d \"OOPS!!! Task number cannot be negative, task number starts from 0\";","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"LINCHENYU2030S"},"content":"            throw new AlexException(message);","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"LINCHENYU2030S"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"LINCHENYU2030S"},"content":"        Task tobeRemoved \u003d userinputs.remove(index - 1);","lastModifiedDate":"2023-08-25"},{"lineNumber":67,"author":{"gitId":"LINCHENYU2030S"},"content":"        numberOfElements--;","lastModifiedDate":"2023-08-25"},{"lineNumber":68,"author":{"gitId":"LINCHENYU2030S"},"content":"        System.out.println(horizontalLine","lastModifiedDate":"2023-08-25"},{"lineNumber":69,"author":{"gitId":"LINCHENYU2030S"},"content":"                         + \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-08-25"},{"lineNumber":70,"author":{"gitId":"LINCHENYU2030S"},"content":"                         + \"  \" + tobeRemoved.toString() + \"\\n\"","lastModifiedDate":"2023-08-25"},{"lineNumber":71,"author":{"gitId":"LINCHENYU2030S"},"content":"                         + \"Now you have 4 tasks in the list.\\n\"","lastModifiedDate":"2023-08-25"},{"lineNumber":72,"author":{"gitId":"LINCHENYU2030S"},"content":"                         + horizontalLine","lastModifiedDate":"2023-08-25"},{"lineNumber":73,"author":{"gitId":"LINCHENYU2030S"},"content":"        );","lastModifiedDate":"2023-08-25"},{"lineNumber":74,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":75,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"LINCHENYU2030S"},"content":"    public static void storeToFile() {","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"LINCHENYU2030S"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"LINCHENYU2030S"},"content":"            FileWriter fw \u003d new FileWriter(\"../data/Alex.txt\");","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"LINCHENYU2030S"},"content":"            for (int i \u003d 0; i \u003c numberOfElements; i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"LINCHENYU2030S"},"content":"                Task task \u003d userinputs.get(i);","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"LINCHENYU2030S"},"content":"                String taskInfo \u003d \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"LINCHENYU2030S"},"content":"                if (task instanceof ToDos) {","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"LINCHENYU2030S"},"content":"                    taskInfo \u003d \"T \" + task.getDescription() + (task.isDone() ? \" 1\" : \" 0\");","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"LINCHENYU2030S"},"content":"                } else if (task instanceof Deadline) {","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"LINCHENYU2030S"},"content":"                    Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"LINCHENYU2030S"},"content":"                    taskInfo \u003d \"D \" + deadline.getDescription() + \" /by \" + deadline.getBy()","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"LINCHENYU2030S"},"content":"                            + (task.isDone() ? \" 1\" : \" 0\");","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"LINCHENYU2030S"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"LINCHENYU2030S"},"content":"                    Event event \u003d (Event) task;","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"LINCHENYU2030S"},"content":"                    taskInfo \u003d \"E \" + event.getDescription() + \" /from \" + event.getFromTime() + \" /to \"","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"LINCHENYU2030S"},"content":"                            + event.getToTime() + (task.isDone() ? \" 1\" : \" 0\");","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"LINCHENYU2030S"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"LINCHENYU2030S"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"LINCHENYU2030S"},"content":"                if (i \u003d\u003d numberOfElements - 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"LINCHENYU2030S"},"content":"                    fw.write(taskInfo);","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"LINCHENYU2030S"},"content":"                } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"LINCHENYU2030S"},"content":"                    fw.write(taskInfo + \"\\n\");","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"LINCHENYU2030S"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"LINCHENYU2030S"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"LINCHENYU2030S"},"content":"            fw.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"LINCHENYU2030S"},"content":"            System.out.println(\"User data is successfully stored\");","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"LINCHENYU2030S"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"LINCHENYU2030S"},"content":"            System.out.println(\"Something went wrong when saving users data to Alex.txt: \" + e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"LINCHENYU2030S"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"LINCHENYU2030S"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"LINCHENYU2030S"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"LINCHENYU2030S":106}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LINCHENYU2030S"},"content":"list","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"LINCHENYU2030S"},"content":"todo read book","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"LINCHENYU2030S"},"content":"list","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"LINCHENYU2030S"},"content":"event meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"LINCHENYU2030S"},"content":"list","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"LINCHENYU2030S"},"content":"deadline return book /by Friday","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"LINCHENYU2030S"},"content":"list","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"LINCHENYU2030S"},"content":"mark 1","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"LINCHENYU2030S"},"content":"mark 2","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"LINCHENYU2030S"},"content":"mark 3","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"LINCHENYU2030S"},"content":"list","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"LINCHENYU2030S":11}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"LINCHENYU2030S"},"content":"java -classpath ../bin Alex \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"LINCHENYU2030S"},"content":"# cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"LINCHENYU2030S"},"content":"#dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"LINCHENYU2030S"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-08-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"LINCHENYU2030S":4,"-":34}}]
