[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Song-Mengfei"},"content":"1 | read book","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Song-Mengfei"},"content":"0 | return book | 2001-12-28","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Song-Mengfei"},"content":"0 | dancing | 2102-10-29 | 2002-10-27","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Song-Mengfei"},"content":"0 | read book","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Song-Mengfei"},"content":"0 | adas | 3210-12-20","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Song-Mengfei"},"content":"0 | read book","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Song-Mengfei"},"content":"0 | read book","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Song-Mengfei":7}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Song-Mengfei"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Song-Mengfei"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Song-Mengfei"},"content":"class Deadline extends Task{","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Song-Mengfei"},"content":"    private final LocalDate time;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Song-Mengfei"},"content":"    public Deadline(String name, LocalDate time) {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Song-Mengfei"},"content":"        super(name);","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"Song-Mengfei"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"Song-Mengfei"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"Song-Mengfei"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Song-Mengfei"},"content":"    public String getText() {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Song-Mengfei"},"content":"        return super.getText() + \" | \" + time;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Song-Mengfei"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Song-Mengfei"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"Song-Mengfei"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"Song-Mengfei"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"Song-Mengfei"},"content":"                +  \" (by: \"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Song-Mengfei"},"content":"                + time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Song-Mengfei"},"content":"                + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Song-Mengfei"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"Song-Mengfei"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"Song-Mengfei":24}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Song-Mengfei"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Song-Mengfei"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"Song-Mengfei"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Song-Mengfei"},"content":"        System.out.println(\"Hey summoner! I\u0027m Three Wolves B.\\n\" + \"What do you want me to do?\\n\");","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Song-Mengfei"},"content":"        IBot myBot \u003d new IBot();","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"Song-Mengfei"},"content":"        boolean state \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"Song-Mengfei"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"Song-Mengfei"},"content":"        while (state) {","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"Song-Mengfei"},"content":"            String smd \u003d sc.nextLine();","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"Song-Mengfei"},"content":"            state \u003d myBot.parse(smd);","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"Song-Mengfei"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Song-Mengfei":13,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Song-Mengfei"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Song-Mengfei"},"content":" * The exception may be formed during the runtime","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Song-Mengfei"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Song-Mengfei"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Song-Mengfei"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Song-Mengfei"},"content":"        super(message);","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Song-Mengfei"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Song-Mengfei"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Song-Mengfei":8}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Song-Mengfei"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Song-Mengfei"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Song-Mengfei"},"content":"class Event extends Task{","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"Song-Mengfei"},"content":"    private final LocalDate timeFrom;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Song-Mengfei"},"content":"    private final LocalDate timeTo;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Song-Mengfei"},"content":"    public Event(String name, LocalDate timeFrom, LocalDate timeTo) {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Song-Mengfei"},"content":"        super(name);","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"Song-Mengfei"},"content":"        this.timeFrom \u003d timeFrom;","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"Song-Mengfei"},"content":"        this.timeTo \u003d timeTo;","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"Song-Mengfei"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Song-Mengfei"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Song-Mengfei"},"content":"    public String getText() {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Song-Mengfei"},"content":"        return super.getText() + \" | \" + timeFrom + \" | \" + timeTo;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Song-Mengfei"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Song-Mengfei"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"Song-Mengfei"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"Song-Mengfei"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"Song-Mengfei"},"content":"                + \" (from: \"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Song-Mengfei"},"content":"                + timeFrom.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Song-Mengfei"},"content":"                + \" to: \"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Song-Mengfei"},"content":"                + timeTo.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Song-Mengfei"},"content":"                + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Song-Mengfei"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"Song-Mengfei"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"Song-Mengfei":28}},{"path":"src/main/java/IBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Song-Mengfei"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Song-Mengfei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"Song-Mengfei"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Song-Mengfei"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Song-Mengfei"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Song-Mengfei"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Song-Mengfei"},"content":"import java.util.Objects;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Song-Mengfei"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Song-Mengfei"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Song-Mengfei"},"content":" * A transition class that contains the Task array,","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Song-Mengfei"},"content":" * parses command and invoke functions","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"Song-Mengfei"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"Song-Mengfei"},"content":"public class IBot {","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"Song-Mengfei"},"content":"    /* The Task array*/","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"Song-Mengfei"},"content":"    private final ArrayList\u003cTask\u003e lst;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Song-Mengfei"},"content":"    private final String filePath \u003d \"data/Duke.txt\";","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Song-Mengfei"},"content":"    IBot() throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Song-Mengfei"},"content":"        lst \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Song-Mengfei"},"content":"        String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Song-Mengfei"},"content":"        boolean directoryExists \u003d new java.io.File(home + \"\\\\Documents\\\\ip\\\\data\").exists();","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Song-Mengfei"},"content":"        if(!directoryExists) {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Song-Mengfei"},"content":"            java.nio.file.Path path \u003d java.nio.file.Paths.get(home, \"Documents\", \"ip\", \"data\");","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Song-Mengfei"},"content":"            directoryExists \u003d java.nio.file.Files.exists(path);","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Song-Mengfei"},"content":"            if (!directoryExists) {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Song-Mengfei"},"content":"                throw new IOException(\"There is no \u0027data\u0027 folder, please create one\");","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Song-Mengfei"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"Song-Mengfei"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Song-Mengfei"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Song-Mengfei"},"content":"        if(f.exists()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Song-Mengfei"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Song-Mengfei"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Song-Mengfei"},"content":"                String temp \u003d s.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Song-Mengfei"},"content":"                existTasks(temp);","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Song-Mengfei"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Song-Mengfei"},"content":"        }else {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Song-Mengfei"},"content":"            f.createNewFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Song-Mengfei"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Song-Mengfei"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"Song-Mengfei"},"content":"    private void existTasks(String s) {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"Song-Mengfei"},"content":"        String[] temp \u003d s.split(\" \\\\| \");","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"Song-Mengfei"},"content":"        int n \u003d temp.length;","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"Song-Mengfei"},"content":"        Task t;","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"Song-Mengfei"},"content":"        if (n \u003d\u003d 2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"Song-Mengfei"},"content":"            t \u003d Task.of(temp[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"Song-Mengfei"},"content":"        } else if (n \u003d\u003d 3) {","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"Song-Mengfei"},"content":"            t \u003d Task.of(temp[1], LocalDate.parse(temp[2]));","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"Song-Mengfei"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"Song-Mengfei"},"content":"            t \u003d Task.of(temp[1],","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"Song-Mengfei"},"content":"                    LocalDate.parse(temp[2]),","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"Song-Mengfei"},"content":"                    LocalDate.parse(temp[3]));","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"Song-Mengfei"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"Song-Mengfei"},"content":"        if (Objects.equals(temp[0], \"1\")) {t.mark();}","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"Song-Mengfei"},"content":"        lst.add(t);","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"Song-Mengfei"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":62,"author":{"gitId":"Song-Mengfei"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"Song-Mengfei"},"content":"     * All tasks are added to the array by this method","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"Song-Mengfei"},"content":"     * @param t The Task added","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"Song-Mengfei"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"Song-Mengfei"},"content":"    private void addTask(Task t) throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"Song-Mengfei"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":68,"author":{"gitId":"Song-Mengfei"},"content":"        lst.add(t);","lastModifiedDate":"2023-08-21"},{"lineNumber":69,"author":{"gitId":"Song-Mengfei"},"content":"        System.out.println(\"  \" + t);","lastModifiedDate":"2023-08-21"},{"lineNumber":70,"author":{"gitId":"Song-Mengfei"},"content":"        System.out.println(\"Now you have \" + lst.size() + \" tasks in the list.\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":71,"author":{"gitId":"Song-Mengfei"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"Song-Mengfei"},"content":"        fw.write(t.getText() + \"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"Song-Mengfei"},"content":"        fw.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"Song-Mengfei"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":75,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":76,"author":{"gitId":"Song-Mengfei"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"Song-Mengfei"},"content":"     * Add a type of Task that only has name","lastModifiedDate":"2023-08-22"},{"lineNumber":78,"author":{"gitId":"Song-Mengfei"},"content":"     * @param cmd The command after the keyword \"todo\",","lastModifiedDate":"2023-08-22"},{"lineNumber":79,"author":{"gitId":"Song-Mengfei"},"content":"     *            which only contains its name","lastModifiedDate":"2023-08-22"},{"lineNumber":80,"author":{"gitId":"Song-Mengfei"},"content":"     * @throws DukeException If there are nothing after keyword,","lastModifiedDate":"2023-08-22"},{"lineNumber":81,"author":{"gitId":"Song-Mengfei"},"content":"     * throw an exception","lastModifiedDate":"2023-08-22"},{"lineNumber":82,"author":{"gitId":"Song-Mengfei"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":83,"author":{"gitId":"Song-Mengfei"},"content":"    private void todo(String cmd) throws DukeException, IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"Song-Mengfei"},"content":"        if (cmd.isEmpty() || cmd.equals(\" \")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":85,"author":{"gitId":"Song-Mengfei"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\\n\");","lastModifiedDate":"2023-08-22"},{"lineNumber":86,"author":{"gitId":"Song-Mengfei"},"content":"        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":87,"author":{"gitId":"Song-Mengfei"},"content":"            addTask(Task.of(cmd.substring(1)));","lastModifiedDate":"2023-08-22"},{"lineNumber":88,"author":{"gitId":"Song-Mengfei"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":89,"author":{"gitId":"Song-Mengfei"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":90,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":91,"author":{"gitId":"Song-Mengfei"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":92,"author":{"gitId":"Song-Mengfei"},"content":"     * Add a type of Task that has name and deadline","lastModifiedDate":"2023-08-22"},{"lineNumber":93,"author":{"gitId":"Song-Mengfei"},"content":"     * @param cmd The command after the keyword \"deadline\",","lastModifiedDate":"2023-08-22"},{"lineNumber":94,"author":{"gitId":"Song-Mengfei"},"content":"     *            which contains its name and deadline","lastModifiedDate":"2023-08-22"},{"lineNumber":95,"author":{"gitId":"Song-Mengfei"},"content":"     * @throws DukeException If there are nothing after keyword or no time,","lastModifiedDate":"2023-08-22"},{"lineNumber":96,"author":{"gitId":"Song-Mengfei"},"content":"     * throw an exception","lastModifiedDate":"2023-08-22"},{"lineNumber":97,"author":{"gitId":"Song-Mengfei"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":98,"author":{"gitId":"Song-Mengfei"},"content":"    private void deadline(String cmd) throws DukeException, IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"Song-Mengfei"},"content":"        if (cmd.isEmpty() || cmd.equals(\" \")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":100,"author":{"gitId":"Song-Mengfei"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\\n\");","lastModifiedDate":"2023-08-22"},{"lineNumber":101,"author":{"gitId":"Song-Mengfei"},"content":"        }else if(!cmd.matches(\" \\\\S.*\\\\s/by\\\\s\\\\d.*\")){","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"Song-Mengfei"},"content":"            throw new DukeException(","lastModifiedDate":"2023-08-22"},{"lineNumber":103,"author":{"gitId":"Song-Mengfei"},"content":"                    \"☹ OOPS!!! Please follow the following pattern to add a task:\\n  \" +","lastModifiedDate":"2023-08-22"},{"lineNumber":104,"author":{"gitId":"Song-Mengfei"},"content":"                            \"deadline \u003ctask name\u003e /by \u003cdeadline\u003e\\n\");","lastModifiedDate":"2023-08-22"},{"lineNumber":105,"author":{"gitId":"Song-Mengfei"},"content":"        }else {","lastModifiedDate":"2023-08-22"},{"lineNumber":106,"author":{"gitId":"Song-Mengfei"},"content":"            String[] temp \u003d cmd.split(\" /by \");","lastModifiedDate":"2023-08-22"},{"lineNumber":107,"author":{"gitId":"Song-Mengfei"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"Song-Mengfei"},"content":"                LocalDate d \u003d LocalDate.parse(temp[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"Song-Mengfei"},"content":"                addTask(Task.of(","lastModifiedDate":"2023-08-22"},{"lineNumber":110,"author":{"gitId":"Song-Mengfei"},"content":"                        temp[0].substring(1),","lastModifiedDate":"2023-08-22"},{"lineNumber":111,"author":{"gitId":"Song-Mengfei"},"content":"                        d));","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"Song-Mengfei"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"Song-Mengfei"},"content":"                throw new DukeException(","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"Song-Mengfei"},"content":"                        \"☹ OOPS!!! Please follow the following pattern to input the time:\\n  \" +","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"Song-Mengfei"},"content":"                        \"deadline \u003ctask name\u003e /by \u003cyyyy-mm-dd\u003e\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"Song-Mengfei"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"Song-Mengfei"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":118,"author":{"gitId":"Song-Mengfei"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":119,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":120,"author":{"gitId":"Song-Mengfei"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":121,"author":{"gitId":"Song-Mengfei"},"content":"     * Add a type of Task that has name, start time and end time.","lastModifiedDate":"2023-08-22"},{"lineNumber":122,"author":{"gitId":"Song-Mengfei"},"content":"     * @param cmd The command after the keyword \"event\",","lastModifiedDate":"2023-08-22"},{"lineNumber":123,"author":{"gitId":"Song-Mengfei"},"content":"     *            which contains its name, start time and end time.","lastModifiedDate":"2023-08-22"},{"lineNumber":124,"author":{"gitId":"Song-Mengfei"},"content":"     * @throws DukeException If there are nothing after keyword or lack of component,","lastModifiedDate":"2023-08-22"},{"lineNumber":125,"author":{"gitId":"Song-Mengfei"},"content":"     * throws an exception","lastModifiedDate":"2023-08-22"},{"lineNumber":126,"author":{"gitId":"Song-Mengfei"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":127,"author":{"gitId":"Song-Mengfei"},"content":"    private void event(String cmd) throws DukeException, IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"Song-Mengfei"},"content":"        if (cmd.isEmpty() || cmd.equals(\" \")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":129,"author":{"gitId":"Song-Mengfei"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\\n\");","lastModifiedDate":"2023-08-22"},{"lineNumber":130,"author":{"gitId":"Song-Mengfei"},"content":"        }else if(!cmd.matches(\" \\\\S.*\\\\s/from\\\\s\\\\d.*\\\\s/to\\\\s\\\\d.*\")){","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"Song-Mengfei"},"content":"            throw new DukeException(","lastModifiedDate":"2023-08-22"},{"lineNumber":132,"author":{"gitId":"Song-Mengfei"},"content":"                    \"☹ OOPS!!! Please follow the following pattern to add a task:\\n  \" +","lastModifiedDate":"2023-08-22"},{"lineNumber":133,"author":{"gitId":"Song-Mengfei"},"content":"                            \"event \u003ctask name\u003e /from \u003cbegin time\u003e /to \u003cend time\u003e\\n\");","lastModifiedDate":"2023-08-22"},{"lineNumber":134,"author":{"gitId":"Song-Mengfei"},"content":"        }else {","lastModifiedDate":"2023-08-21"},{"lineNumber":135,"author":{"gitId":"Song-Mengfei"},"content":"            String[] temp \u003d cmd.split(\" /\");","lastModifiedDate":"2023-08-22"},{"lineNumber":136,"author":{"gitId":"Song-Mengfei"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"Song-Mengfei"},"content":"                LocalDate dFrom \u003d LocalDate.parse(temp[1].substring(5));","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"Song-Mengfei"},"content":"                LocalDate dTo \u003d LocalDate.parse(temp[2].substring(3));","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"Song-Mengfei"},"content":"                addTask(Task.of(","lastModifiedDate":"2023-08-22"},{"lineNumber":140,"author":{"gitId":"Song-Mengfei"},"content":"                        temp[0].substring(1),","lastModifiedDate":"2023-08-22"},{"lineNumber":141,"author":{"gitId":"Song-Mengfei"},"content":"                        dFrom,","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"Song-Mengfei"},"content":"                        dTo));","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"Song-Mengfei"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"Song-Mengfei"},"content":"                throw new DukeException(","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"Song-Mengfei"},"content":"                        \"☹ OOPS!!! Please follow the following pattern to input the time:\\n  \" +","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"Song-Mengfei"},"content":"                                \"event \u003ctask name\u003e /from \u003cyyyy-mm-dd\u003e /to \u003cyyyy-mm-dd\u003e\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"Song-Mengfei"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":148,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":149,"author":{"gitId":"Song-Mengfei"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":150,"author":{"gitId":"Song-Mengfei"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":151,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":152,"author":{"gitId":"Song-Mengfei"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":153,"author":{"gitId":"Song-Mengfei"},"content":"     * The method used to get the index of Task user wants to act on","lastModifiedDate":"2023-08-22"},{"lineNumber":154,"author":{"gitId":"Song-Mengfei"},"content":"     * @param cmd The command that contains a number","lastModifiedDate":"2023-08-22"},{"lineNumber":155,"author":{"gitId":"Song-Mengfei"},"content":"     * @return A number which is an index.","lastModifiedDate":"2023-08-22"},{"lineNumber":156,"author":{"gitId":"Song-Mengfei"},"content":"     * @throws DukeException If there are nothing or not a number,","lastModifiedDate":"2023-08-22"},{"lineNumber":157,"author":{"gitId":"Song-Mengfei"},"content":"     * throw an exception","lastModifiedDate":"2023-08-22"},{"lineNumber":158,"author":{"gitId":"Song-Mengfei"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":159,"author":{"gitId":"Song-Mengfei"},"content":"    private int getIndex(String cmd) throws DukeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":160,"author":{"gitId":"Song-Mengfei"},"content":"        if (cmd.isEmpty() || cmd.equals(\" \")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":161,"author":{"gitId":"Song-Mengfei"},"content":"            throw new DukeException(","lastModifiedDate":"2023-08-22"},{"lineNumber":162,"author":{"gitId":"Song-Mengfei"},"content":"                    \"☹ OOPS!!! You need to tell me which task you want to act on.\\n\");","lastModifiedDate":"2023-08-22"},{"lineNumber":163,"author":{"gitId":"Song-Mengfei"},"content":"        }else if(!cmd.matches(\" \\\\d*\")){","lastModifiedDate":"2023-08-22"},{"lineNumber":164,"author":{"gitId":"Song-Mengfei"},"content":"            throw new DukeException(","lastModifiedDate":"2023-08-22"},{"lineNumber":165,"author":{"gitId":"Song-Mengfei"},"content":"                    \"☹ OOPS!!! Please follow the following pattern to act on a task:\\n  \" +","lastModifiedDate":"2023-08-22"},{"lineNumber":166,"author":{"gitId":"Song-Mengfei"},"content":"                            \"\u003cyour action\u003e \u003ctask number\u003e\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":167,"author":{"gitId":"Song-Mengfei"},"content":"                            \"You can find the task number by calling \u0027list\u0027\\n\");","lastModifiedDate":"2023-08-22"},{"lineNumber":168,"author":{"gitId":"Song-Mengfei"},"content":"        }else {","lastModifiedDate":"2023-08-21"},{"lineNumber":169,"author":{"gitId":"Song-Mengfei"},"content":"            int index \u003d Integer.parseInt(cmd.substring(1));","lastModifiedDate":"2023-08-22"},{"lineNumber":170,"author":{"gitId":"Song-Mengfei"},"content":"            if (index \u003c\u003d lst.size() \u0026\u0026 index \u003e 0) {","lastModifiedDate":"2023-08-22"},{"lineNumber":171,"author":{"gitId":"Song-Mengfei"},"content":"                return index;","lastModifiedDate":"2023-08-22"},{"lineNumber":172,"author":{"gitId":"Song-Mengfei"},"content":"            } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":173,"author":{"gitId":"Song-Mengfei"},"content":"                System.out.println(\"☹ OOPS!!! There is no such a task\\n\");","lastModifiedDate":"2023-08-22"},{"lineNumber":174,"author":{"gitId":"Song-Mengfei"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":175,"author":{"gitId":"Song-Mengfei"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":176,"author":{"gitId":"Song-Mengfei"},"content":"        return -1;","lastModifiedDate":"2023-08-22"},{"lineNumber":177,"author":{"gitId":"Song-Mengfei"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":178,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":179,"author":{"gitId":"Song-Mengfei"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":180,"author":{"gitId":"Song-Mengfei"},"content":"     * The method used to mark the specific Task","lastModifiedDate":"2023-08-22"},{"lineNumber":181,"author":{"gitId":"Song-Mengfei"},"content":"     * @param cmd The command contains the target Task index","lastModifiedDate":"2023-08-22"},{"lineNumber":182,"author":{"gitId":"Song-Mengfei"},"content":"     * @throws DukeException Throw the exception formed during getting the index","lastModifiedDate":"2023-08-22"},{"lineNumber":183,"author":{"gitId":"Song-Mengfei"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":184,"author":{"gitId":"Song-Mengfei"},"content":"    private void mark(String cmd) throws DukeException, IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":185,"author":{"gitId":"Song-Mengfei"},"content":"        int index \u003d getIndex(cmd);","lastModifiedDate":"2023-08-22"},{"lineNumber":186,"author":{"gitId":"Song-Mengfei"},"content":"        if (index !\u003d -1) {","lastModifiedDate":"2023-08-22"},{"lineNumber":187,"author":{"gitId":"Song-Mengfei"},"content":"            Task t \u003d lst.get(index - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":188,"author":{"gitId":"Song-Mengfei"},"content":"            if (t.mark()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":189,"author":{"gitId":"Song-Mengfei"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-29"},{"lineNumber":190,"author":{"gitId":"Song-Mengfei"},"content":"                System.out.println(t + \"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":191,"author":{"gitId":"Song-Mengfei"},"content":"                changeFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":192,"author":{"gitId":"Song-Mengfei"},"content":"            } else{","lastModifiedDate":"2023-08-29"},{"lineNumber":193,"author":{"gitId":"Song-Mengfei"},"content":"                throw new DukeException(\"☹ OOPS!!! This task has already be marked!\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":194,"author":{"gitId":"Song-Mengfei"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":195,"author":{"gitId":"Song-Mengfei"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":196,"author":{"gitId":"Song-Mengfei"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":197,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":198,"author":{"gitId":"Song-Mengfei"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":199,"author":{"gitId":"Song-Mengfei"},"content":"     * The method used to unmark the specific Task","lastModifiedDate":"2023-08-22"},{"lineNumber":200,"author":{"gitId":"Song-Mengfei"},"content":"     * @param cmd The command contains the target Task index","lastModifiedDate":"2023-08-22"},{"lineNumber":201,"author":{"gitId":"Song-Mengfei"},"content":"     * @throws DukeException Throw the exception formed during getting the index","lastModifiedDate":"2023-08-22"},{"lineNumber":202,"author":{"gitId":"Song-Mengfei"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":203,"author":{"gitId":"Song-Mengfei"},"content":"    private void unmark(String cmd) throws DukeException, IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":204,"author":{"gitId":"Song-Mengfei"},"content":"        int index \u003d getIndex(cmd);","lastModifiedDate":"2023-08-29"},{"lineNumber":205,"author":{"gitId":"Song-Mengfei"},"content":"        if (index !\u003d -1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":206,"author":{"gitId":"Song-Mengfei"},"content":"            Task t \u003d lst.get(index - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":207,"author":{"gitId":"Song-Mengfei"},"content":"            if (t.unmark()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":208,"author":{"gitId":"Song-Mengfei"},"content":"                System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-29"},{"lineNumber":209,"author":{"gitId":"Song-Mengfei"},"content":"                System.out.println(t + \"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":210,"author":{"gitId":"Song-Mengfei"},"content":"                changeFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":211,"author":{"gitId":"Song-Mengfei"},"content":"            } else{","lastModifiedDate":"2023-08-29"},{"lineNumber":212,"author":{"gitId":"Song-Mengfei"},"content":"                throw new DukeException(\"☹ OOPS!!! This task hasn\u0027t be marked yet!\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":213,"author":{"gitId":"Song-Mengfei"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":214,"author":{"gitId":"Song-Mengfei"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":215,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":216,"author":{"gitId":"Song-Mengfei"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":217,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":218,"author":{"gitId":"Song-Mengfei"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":219,"author":{"gitId":"Song-Mengfei"},"content":"     * The method used to delete the specific Task","lastModifiedDate":"2023-08-22"},{"lineNumber":220,"author":{"gitId":"Song-Mengfei"},"content":"     * @param cmd The command contains the target Task index","lastModifiedDate":"2023-08-22"},{"lineNumber":221,"author":{"gitId":"Song-Mengfei"},"content":"     * @throws DukeException Throw the exception formed during getting the index","lastModifiedDate":"2023-08-22"},{"lineNumber":222,"author":{"gitId":"Song-Mengfei"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":223,"author":{"gitId":"Song-Mengfei"},"content":"    private void delete(String cmd) throws DukeException, IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":224,"author":{"gitId":"Song-Mengfei"},"content":"        if (getIndex(cmd) !\u003d -1) {","lastModifiedDate":"2023-08-22"},{"lineNumber":225,"author":{"gitId":"Song-Mengfei"},"content":"            Task delete \u003d lst.get(getIndex(cmd) - 1);","lastModifiedDate":"2023-08-22"},{"lineNumber":226,"author":{"gitId":"Song-Mengfei"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":227,"author":{"gitId":"Song-Mengfei"},"content":"            System.out.println(\"  \" + delete);","lastModifiedDate":"2023-08-22"},{"lineNumber":228,"author":{"gitId":"Song-Mengfei"},"content":"            lst.remove(lst.get(getIndex(cmd) - 1));","lastModifiedDate":"2023-08-22"},{"lineNumber":229,"author":{"gitId":"Song-Mengfei"},"content":"            System.out.println(\"Now you have \" + lst.size() + \" tasks in the list.\\n\");","lastModifiedDate":"2023-08-22"},{"lineNumber":230,"author":{"gitId":"Song-Mengfei"},"content":"            changeFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":231,"author":{"gitId":"Song-Mengfei"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":232,"author":{"gitId":"Song-Mengfei"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":233,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":234,"author":{"gitId":"Song-Mengfei"},"content":"    private void changeFile() throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":235,"author":{"gitId":"Song-Mengfei"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":236,"author":{"gitId":"Song-Mengfei"},"content":"        fw.write(\"\");","lastModifiedDate":"2023-08-29"},{"lineNumber":237,"author":{"gitId":"Song-Mengfei"},"content":"        fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2023-08-29"},{"lineNumber":238,"author":{"gitId":"Song-Mengfei"},"content":"        for (Task curr : lst) {","lastModifiedDate":"2023-08-29"},{"lineNumber":239,"author":{"gitId":"Song-Mengfei"},"content":"            fw.write(curr.getText() + \"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":240,"author":{"gitId":"Song-Mengfei"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":241,"author":{"gitId":"Song-Mengfei"},"content":"        fw.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":242,"author":{"gitId":"Song-Mengfei"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":243,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":244,"author":{"gitId":"Song-Mengfei"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":245,"author":{"gitId":"Song-Mengfei"},"content":"     * The method used to list all Tasked stored in the arraylist.","lastModifiedDate":"2023-08-22"},{"lineNumber":246,"author":{"gitId":"Song-Mengfei"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":247,"author":{"gitId":"Song-Mengfei"},"content":"    private void list() {","lastModifiedDate":"2023-08-21"},{"lineNumber":248,"author":{"gitId":"Song-Mengfei"},"content":"        if (!lst.isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":249,"author":{"gitId":"Song-Mengfei"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":250,"author":{"gitId":"Song-Mengfei"},"content":"            lst.forEach(x -\u003e System.out.println(lst.indexOf(x) + 1 + \".\" + x));","lastModifiedDate":"2023-08-21"},{"lineNumber":251,"author":{"gitId":"Song-Mengfei"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":252,"author":{"gitId":"Song-Mengfei"},"content":"            System.out.println(\"There is no task in your list\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":253,"author":{"gitId":"Song-Mengfei"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":254,"author":{"gitId":"Song-Mengfei"},"content":"        System.out.println(\"\");","lastModifiedDate":"2023-08-21"},{"lineNumber":255,"author":{"gitId":"Song-Mengfei"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":256,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":257,"author":{"gitId":"Song-Mengfei"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":258,"author":{"gitId":"Song-Mengfei"},"content":"     * Parse the instruction scanned by scanner by distinguish the keyword","lastModifiedDate":"2023-08-22"},{"lineNumber":259,"author":{"gitId":"Song-Mengfei"},"content":"     * @param instr The instruction scanned by scanner","lastModifiedDate":"2023-08-22"},{"lineNumber":260,"author":{"gitId":"Song-Mengfei"},"content":"     * @return Whether the scanner should keep scanning or not","lastModifiedDate":"2023-08-22"},{"lineNumber":261,"author":{"gitId":"Song-Mengfei"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":262,"author":{"gitId":"Song-Mengfei"},"content":"    public boolean parse(String instr) {","lastModifiedDate":"2023-08-21"},{"lineNumber":263,"author":{"gitId":"Song-Mengfei"},"content":"        String keyWord \u003d instr.split(\" \")[0];","lastModifiedDate":"2023-08-21"},{"lineNumber":264,"author":{"gitId":"Song-Mengfei"},"content":"        try{","lastModifiedDate":"2023-08-22"},{"lineNumber":265,"author":{"gitId":"Song-Mengfei"},"content":"            switch (keyWord) {","lastModifiedDate":"2023-08-21"},{"lineNumber":266,"author":{"gitId":"Song-Mengfei"},"content":"                case \"\":","lastModifiedDate":"2023-08-21"},{"lineNumber":267,"author":{"gitId":"Song-Mengfei"},"content":"                    throw new DukeException(\"☹ OOPS!!! You said nothing!\\n\");","lastModifiedDate":"2023-08-22"},{"lineNumber":268,"author":{"gitId":"Song-Mengfei"},"content":"                case \"todo\":","lastModifiedDate":"2023-08-21"},{"lineNumber":269,"author":{"gitId":"Song-Mengfei"},"content":"                    todo(instr.substring(4));","lastModifiedDate":"2023-08-22"},{"lineNumber":270,"author":{"gitId":"Song-Mengfei"},"content":"                    break;","lastModifiedDate":"2023-08-21"},{"lineNumber":271,"author":{"gitId":"Song-Mengfei"},"content":"                case \"deadline\":","lastModifiedDate":"2023-08-21"},{"lineNumber":272,"author":{"gitId":"Song-Mengfei"},"content":"                    deadline(instr.substring(8));","lastModifiedDate":"2023-08-22"},{"lineNumber":273,"author":{"gitId":"Song-Mengfei"},"content":"                    break;","lastModifiedDate":"2023-08-21"},{"lineNumber":274,"author":{"gitId":"Song-Mengfei"},"content":"                case \"event\":","lastModifiedDate":"2023-08-21"},{"lineNumber":275,"author":{"gitId":"Song-Mengfei"},"content":"                    event(instr.substring(5));","lastModifiedDate":"2023-08-22"},{"lineNumber":276,"author":{"gitId":"Song-Mengfei"},"content":"                    break;","lastModifiedDate":"2023-08-21"},{"lineNumber":277,"author":{"gitId":"Song-Mengfei"},"content":"                case \"mark\":","lastModifiedDate":"2023-08-21"},{"lineNumber":278,"author":{"gitId":"Song-Mengfei"},"content":"                    mark(instr.substring(4));","lastModifiedDate":"2023-08-22"},{"lineNumber":279,"author":{"gitId":"Song-Mengfei"},"content":"                    break;","lastModifiedDate":"2023-08-21"},{"lineNumber":280,"author":{"gitId":"Song-Mengfei"},"content":"                case \"unmark\":","lastModifiedDate":"2023-08-21"},{"lineNumber":281,"author":{"gitId":"Song-Mengfei"},"content":"                    unmark(instr.substring(6));","lastModifiedDate":"2023-08-22"},{"lineNumber":282,"author":{"gitId":"Song-Mengfei"},"content":"                    break;","lastModifiedDate":"2023-08-21"},{"lineNumber":283,"author":{"gitId":"Song-Mengfei"},"content":"                case \"delete\":","lastModifiedDate":"2023-08-22"},{"lineNumber":284,"author":{"gitId":"Song-Mengfei"},"content":"                    delete(instr.substring(6));","lastModifiedDate":"2023-08-22"},{"lineNumber":285,"author":{"gitId":"Song-Mengfei"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":286,"author":{"gitId":"Song-Mengfei"},"content":"                case \"list\":","lastModifiedDate":"2023-08-21"},{"lineNumber":287,"author":{"gitId":"Song-Mengfei"},"content":"                    list();","lastModifiedDate":"2023-08-21"},{"lineNumber":288,"author":{"gitId":"Song-Mengfei"},"content":"                    break;","lastModifiedDate":"2023-08-21"},{"lineNumber":289,"author":{"gitId":"Song-Mengfei"},"content":"                case \"bye\":","lastModifiedDate":"2023-08-21"},{"lineNumber":290,"author":{"gitId":"Song-Mengfei"},"content":"                    System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-21"},{"lineNumber":291,"author":{"gitId":"Song-Mengfei"},"content":"                    return false;","lastModifiedDate":"2023-08-21"},{"lineNumber":292,"author":{"gitId":"Song-Mengfei"},"content":"                default:","lastModifiedDate":"2023-08-21"},{"lineNumber":293,"author":{"gitId":"Song-Mengfei"},"content":"                    throw new DukeException(\"☹ OOPS!!! I can\u0027t understand.\\n\");","lastModifiedDate":"2023-08-22"},{"lineNumber":294,"author":{"gitId":"Song-Mengfei"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":295,"author":{"gitId":"Song-Mengfei"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":296,"author":{"gitId":"Song-Mengfei"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-22"},{"lineNumber":297,"author":{"gitId":"Song-Mengfei"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":298,"author":{"gitId":"Song-Mengfei"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-08-29"},{"lineNumber":299,"author":{"gitId":"Song-Mengfei"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":300,"author":{"gitId":"Song-Mengfei"},"content":"        return true;","lastModifiedDate":"2023-08-21"},{"lineNumber":301,"author":{"gitId":"Song-Mengfei"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":302,"author":{"gitId":"Song-Mengfei"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"Song-Mengfei":302}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Song-Mengfei"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Song-Mengfei"},"content":"public class Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"Song-Mengfei"},"content":"    /* The name of this task */","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"Song-Mengfei"},"content":"    String name;","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"Song-Mengfei"},"content":"    /* The state whether the task is done or not*/","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"Song-Mengfei"},"content":"    int state;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"Song-Mengfei"},"content":"    /** The constructor of tasks","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"Song-Mengfei"},"content":"     *  The state is not done by default","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"Song-Mengfei"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"Song-Mengfei"},"content":"     * @param name The name of this Task","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"Song-Mengfei"},"content":"     * **/","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"Song-Mengfei"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"Song-Mengfei"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"Song-Mengfei"},"content":"        this.state \u003d 0;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Song-Mengfei"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"Song-Mengfei"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"Song-Mengfei"},"content":"     * A factory method to creat a todo instance","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"Song-Mengfei"},"content":"     * @param name Task name","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"Song-Mengfei"},"content":"     * @return The todo instance","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"Song-Mengfei"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"Song-Mengfei"},"content":"    public static Task of(String name) {","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"Song-Mengfei"},"content":"        return new Todo(name);","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"Song-Mengfei"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"Song-Mengfei"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"Song-Mengfei"},"content":"     * A factory method to create a deadline instance","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"Song-Mengfei"},"content":"     * @param name Task name","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"Song-Mengfei"},"content":"     * @param time Task deadline","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"Song-Mengfei"},"content":"     * @return A deadline instance","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"Song-Mengfei"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"Song-Mengfei"},"content":"    public static Task of(String name, LocalDate time) {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Song-Mengfei"},"content":"        return new Deadline(name, time);","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"Song-Mengfei"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"Song-Mengfei"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"Song-Mengfei"},"content":"     * A factory method to create an event instance","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"Song-Mengfei"},"content":"     * @param name Task name","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"Song-Mengfei"},"content":"     * @param startTime Task start time","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"Song-Mengfei"},"content":"     * @param endTime Task end time","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"Song-Mengfei"},"content":"     * @return An event instance","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"Song-Mengfei"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"Song-Mengfei"},"content":"    public static Task of(String name, LocalDate startTime, LocalDate endTime) {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"Song-Mengfei"},"content":"        return new Event(name, startTime, endTime);","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"Song-Mengfei"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"Song-Mengfei"},"content":"    /** The method to mark the state of this task as done","lastModifiedDate":"2023-08-20"},{"lineNumber":50,"author":{"gitId":"Song-Mengfei"},"content":"     *  If the task has already been marked, throw an exception","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"Song-Mengfei"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":52,"author":{"gitId":"Song-Mengfei"},"content":"    public boolean mark() {","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"Song-Mengfei"},"content":"        if (state \u003d\u003d 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"Song-Mengfei"},"content":"            return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"Song-Mengfei"},"content":"        }else {","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"Song-Mengfei"},"content":"            this.state \u003d 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"Song-Mengfei"},"content":"            return true;","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"Song-Mengfei"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":59,"author":{"gitId":"Song-Mengfei"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":61,"author":{"gitId":"Song-Mengfei"},"content":"    /** The method to unmark the state of this task as not done","lastModifiedDate":"2023-08-20"},{"lineNumber":62,"author":{"gitId":"Song-Mengfei"},"content":"     * If the task has not been marked yet, throw an exception","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"Song-Mengfei"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":64,"author":{"gitId":"Song-Mengfei"},"content":"    public boolean unmark() {","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"Song-Mengfei"},"content":"        if (state \u003d\u003d 0) {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"Song-Mengfei"},"content":"            return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"Song-Mengfei"},"content":"        }else {","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"Song-Mengfei"},"content":"            this.state \u003d 0;","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"Song-Mengfei"},"content":"            return true;","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"Song-Mengfei"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":71,"author":{"gitId":"Song-Mengfei"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":73,"author":{"gitId":"Song-Mengfei"},"content":"    /** A private method to show out the state of this task","lastModifiedDate":"2023-08-20"},{"lineNumber":74,"author":{"gitId":"Song-Mengfei"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":75,"author":{"gitId":"Song-Mengfei"},"content":"     * @return The visible state of this task","lastModifiedDate":"2023-08-20"},{"lineNumber":76,"author":{"gitId":"Song-Mengfei"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":77,"author":{"gitId":"Song-Mengfei"},"content":"    private String getState() {","lastModifiedDate":"2023-08-20"},{"lineNumber":78,"author":{"gitId":"Song-Mengfei"},"content":"        return state \u003d\u003d 1 ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"Song-Mengfei"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"Song-Mengfei"},"content":"    public String getText() {","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"Song-Mengfei"},"content":"        return state + \" | \" + name;","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"Song-Mengfei"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":84,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":85,"author":{"gitId":"Song-Mengfei"},"content":"    /** The method to display this task with its state","lastModifiedDate":"2023-08-20"},{"lineNumber":86,"author":{"gitId":"Song-Mengfei"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":87,"author":{"gitId":"Song-Mengfei"},"content":"     * @return The method to display this task with its state","lastModifiedDate":"2023-08-20"},{"lineNumber":88,"author":{"gitId":"Song-Mengfei"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":89,"author":{"gitId":"Song-Mengfei"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":90,"author":{"gitId":"Song-Mengfei"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":91,"author":{"gitId":"Song-Mengfei"},"content":"        return getState() + name;","lastModifiedDate":"2023-08-20"},{"lineNumber":92,"author":{"gitId":"Song-Mengfei"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":93,"author":{"gitId":"Song-Mengfei"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"Song-Mengfei":93}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Song-Mengfei"},"content":"class Todo extends Task{","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"Song-Mengfei"},"content":"    public Todo(String name) {","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"Song-Mengfei"},"content":"        super(name);","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"Song-Mengfei"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"Song-Mengfei"},"content":"//    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Song-Mengfei"},"content":"//    public String getText() {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Song-Mengfei"},"content":"//        return super.getText() + \"\\n\";","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Song-Mengfei"},"content":"//    }","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Song-Mengfei"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Song-Mengfei"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"Song-Mengfei"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"Song-Mengfei"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"Song-Mengfei"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"Song-Mengfei"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"Song-Mengfei":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Song-Mengfei"},"content":"todo read book","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Song-Mengfei"},"content":"mark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Song-Mengfei"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Song-Mengfei"},"content":"mark 2","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Song-Mengfei"},"content":"event project meeting /from Aug 6th /to 4pm","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Song-Mengfei"},"content":"todo join sports club","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Song-Mengfei"},"content":"mark 4","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Song-Mengfei"},"content":"todo borrow book","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Song-Mengfei"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Song-Mengfei"},"content":"delete 3","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Song-Mengfei"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Song-Mengfei"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Song-Mengfei":12}}]
