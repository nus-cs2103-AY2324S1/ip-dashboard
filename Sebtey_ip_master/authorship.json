[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"Sebtey"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"Sebtey"},"content":"    mainClass.set(\"seedo.duke.Duke\")","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"Sebtey"},"content":"    archiveBaseName \u003d \"Veda\"","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"Sebtey"},"content":"    archiveVersion \u003d \"V0.1\"","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"Sebtey"},"content":"    archiveFileName \u003d \"Veda.jar\"","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"Sebtey"},"content":"checkstyle {","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"Sebtey"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"Sebtey"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Sebtey":9,"-":40}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sebtey"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Sebtey"},"content":"import tasks.Event;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"Sebtey"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Sebtey"},"content":"import tasks.ToDo;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Sebtey"},"content":"import vedaexceptions.ExcessiveArgumentException;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Sebtey"},"content":"import vedaexceptions.IncorrectInputException;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Sebtey"},"content":"import vedaexceptions.NoDescriptionException;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Sebtey"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Sebtey"},"content":" * Parser makes sense of the user command.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Sebtey"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Sebtey"},"content":" * @author Sebastian Tay","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Sebtey"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Sebtey"},"content":"public class Parser {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Sebtey"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Sebtey"},"content":"     * Returns an int value denoting which action to be performed.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Sebtey"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Sebtey"},"content":"     * @param args is the input taken from the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Sebtey"},"content":"     * @return non-negative int if args is valid input, else -1.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"Sebtey"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Sebtey"},"content":"    public static int parse(String args) {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Sebtey"},"content":"        args \u003d args.toLowerCase();","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Sebtey"},"content":"        if (args.equals(\"bye\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Sebtey"},"content":"            //User wishes to exit the program","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Sebtey"},"content":"            return 0;","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Sebtey"},"content":"        } else if (args.equals(\"list\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"Sebtey"},"content":"            //User wishes to see his listed missions","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Sebtey"},"content":"            return 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"Sebtey"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"Sebtey"},"content":"        args \u003d args.split(\" \")[0];","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"Sebtey"},"content":"        if (args.equals(\"mark\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"Sebtey"},"content":"            //User wishes to mark task as done","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"Sebtey"},"content":"            return 2;","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"Sebtey"},"content":"        } else if (args.equals(\"unmark\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"Sebtey"},"content":"            //User wishes to mark task as undone","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"Sebtey"},"content":"            return 3;","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"Sebtey"},"content":"        } else if (args.equals(\"delete\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"Sebtey"},"content":"            //User wishes to delete a task","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"Sebtey"},"content":"            return 4;","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"Sebtey"},"content":"        } else if (args.equals(\"todo\") || args.equals(\"deadline\") || args.equals(\"event\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"Sebtey"},"content":"            //User wishes to add a new task","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"Sebtey"},"content":"            return 5;","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"Sebtey"},"content":"        } else if (args.equals(\"find\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"Sebtey"},"content":"            //User wishes to find a task by a keyword","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"Sebtey"},"content":"            return 6;","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"Sebtey"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"Sebtey"},"content":"        return -1;","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"Sebtey"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"Sebtey"},"content":"     * Returns the index of the task given in the command line argument args.","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"Sebtey"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"Sebtey"},"content":"     * @param args","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"Sebtey"},"content":"     * @return an integer corresponding to the index of the task that we want.","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"Sebtey"},"content":"     * @throws NumberFormatException","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"Sebtey"},"content":"     * @throws NoDescriptionException when the user did not input any additional arguments.","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"Sebtey"},"content":"     * @throws ExcessiveArgumentException when the user input more arguments than required.","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"Sebtey"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"Sebtey"},"content":"    public static int getTargetIndex(String args)","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"Sebtey"},"content":"            throws NumberFormatException, NoDescriptionException, ExcessiveArgumentException, IncorrectInputException {","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"Sebtey"},"content":"        if (args.split(\" \").length \u003c 2) {","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"Sebtey"},"content":"            throw new NoDescriptionException(\"There is no given task index.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"Sebtey"},"content":"        } else if (args.split(\" \").length \u003e 2) {","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"Sebtey"},"content":"            throw new ExcessiveArgumentException(\"There are too many arguments.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"Sebtey"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"Sebtey"},"content":"        int targetIndex \u003d Integer.parseInt(args.toLowerCase().split(\" \")[1]) - 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"Sebtey"},"content":"        if (targetIndex \u003c 0) {","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"Sebtey"},"content":"            throw new IncorrectInputException(\"Index of task must be greater than 0.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"Sebtey"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"Sebtey"},"content":"        return targetIndex;","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"Sebtey"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"Sebtey"},"content":"     * Returns a new task based on the command line argument args.","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"Sebtey"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"Sebtey"},"content":"     * @param args","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"Sebtey"},"content":"     * @return a Task from the given args.","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"Sebtey"},"content":"     * @throws NoDescriptionException","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"Sebtey"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"Sebtey"},"content":"    public static Task getTask(String args) throws NoDescriptionException {","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"Sebtey"},"content":"        String type \u003d args.split(\" \")[0].toLowerCase();","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"Sebtey"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"Sebtey"},"content":"        String description \u003d \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"Sebtey"},"content":"        String[] descriptions \u003d null; //For multiple arguments","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"Sebtey"},"content":"        switch (type) {","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"Sebtey"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"Sebtey"},"content":"            description \u003d args.replaceFirst(\"todo \", \"\");","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"Sebtey"},"content":"            if (description.toLowerCase() \u003d\u003d type) {","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"Sebtey"},"content":"                throw new NoDescriptionException(\"\");","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"Sebtey"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"Sebtey"},"content":"            newTask \u003d new ToDo(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"Sebtey"},"content":"            break;","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"Sebtey"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"Sebtey"},"content":"            //Expected CL input: deadline \u003cDescription\u003e /by \u003cDue date in dd/MM/yyyy HHmm\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"Sebtey"},"content":"            //TODO add error handling for no \"/by\" keyword","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"Sebtey"},"content":"            if (description.toLowerCase() \u003d\u003d type) {","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"Sebtey"},"content":"                throw new NoDescriptionException(","lastModifiedDate":"2023-09-03"},{"lineNumber":112,"author":{"gitId":"Sebtey"},"content":"                        \"Please input the right order: deadline \u003cDescription\u003e /by \u003cdue date\u003e\");","lastModifiedDate":"2023-09-03"},{"lineNumber":113,"author":{"gitId":"Sebtey"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"Sebtey"},"content":"            description \u003d args.replaceFirst(\"deadline \", \"\");","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"Sebtey"},"content":"            descriptions \u003d description.split(\" /by \");","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"Sebtey"},"content":"            if (descriptions.length \u003c 2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"Sebtey"},"content":"                throw new IncorrectInputException(","lastModifiedDate":"2023-09-03"},{"lineNumber":120,"author":{"gitId":"Sebtey"},"content":"                        \"Please input the right order: deadline \u003cDescription\u003e /by \u003cdue date\u003e\");","lastModifiedDate":"2023-09-03"},{"lineNumber":121,"author":{"gitId":"Sebtey"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"Sebtey"},"content":"            newTask \u003d new Deadline(descriptions[0], descriptions[1]);","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"Sebtey"},"content":"            break;","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"Sebtey"},"content":"        case \"event\":","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"Sebtey"},"content":"            //Expected CL input: event \u003cDescription\u003e /from \u003cstart\u003e /to \u003cend\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"Sebtey"},"content":"            if (description.toLowerCase() \u003d\u003d type) {","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"Sebtey"},"content":"                throw new NoDescriptionException(\"\");","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"Sebtey"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"Sebtey"},"content":"            description \u003d args.replaceFirst(\"event \", \"\"); //Remove type","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"Sebtey"},"content":"            descriptions \u003d description.split(\" /from \"); //Split remaining args into description + (from and to)","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"Sebtey"},"content":"            String from \u003d descriptions[1].split(\" /to \")[0]; //Split (from and to) into from and to","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"Sebtey"},"content":"            String to \u003d descriptions[1].split(\" /to \")[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"Sebtey"},"content":"            newTask \u003d new Event(descriptions[0], from, to);","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"Sebtey"},"content":"            break;","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"Sebtey"},"content":"        default:","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"Sebtey"},"content":"            break;","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"Sebtey"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"Sebtey"},"content":"        return newTask;","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":148,"author":{"gitId":"Sebtey"},"content":"    public static String getKeyword(String arg) {","lastModifiedDate":"2023-09-03"},{"lineNumber":149,"author":{"gitId":"Sebtey"},"content":"        //Parse keyword","lastModifiedDate":"2023-09-03"},{"lineNumber":150,"author":{"gitId":"Sebtey"},"content":"        final String keyword \u003d arg.toLowerCase().replaceFirst(\"find \", \"\");","lastModifiedDate":"2023-09-03"},{"lineNumber":151,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":152,"author":{"gitId":"Sebtey"},"content":"        return keyword;","lastModifiedDate":"2023-09-03"},{"lineNumber":153,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":154,"author":{"gitId":"Sebtey"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"Sebtey":154}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sebtey"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Sebtey"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Sebtey"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Sebtey"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Sebtey"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Sebtey"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Sebtey"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"Sebtey"},"content":"import tasks.Event;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"Sebtey"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"Sebtey"},"content":"import tasks.ToDo;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"Sebtey"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Sebtey"},"content":" * Storage deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Sebtey"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Sebtey"},"content":" * @author Sebastian Tay","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Sebtey"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Sebtey"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Sebtey"},"content":"    private final String dir \u003d \"/VedaMissions\";","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Sebtey"},"content":"    private final String storagePath \u003d \"/VedaMissions/Missions.txt\";","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Sebtey"},"content":"    private final File storageFile \u003d new File(storagePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Sebtey"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Sebtey"},"content":"     * Adds file into the directory specified.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Sebtey"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Sebtey"},"content":"     * @return whether file has been successfully added into the hard disk.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Sebtey"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Sebtey"},"content":"    public boolean addFile() {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Sebtey"},"content":"        File directory \u003d new File(dir);","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Sebtey"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Sebtey"},"content":"            if (directory.mkdir()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Sebtey"},"content":"                storageFile.createNewFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Sebtey"},"content":"                return true;","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Sebtey"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Sebtey"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Sebtey"},"content":"            System.out.println(\"An error occurred while trying to create the file.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Sebtey"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Sebtey"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Sebtey"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"Sebtey"},"content":"     * Indicates if the saved file is existing.","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"Sebtey"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"Sebtey"},"content":"     * @return true if the saved file does exist, false otherwise.","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"Sebtey"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"Sebtey"},"content":"    public boolean checkFileExists() {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Sebtey"},"content":"        return storageFile.exists();","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Sebtey"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Sebtey"},"content":"     * Returns the stored task list from the hard disk.","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Sebtey"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Sebtey"},"content":"     * @return an ArrayList containing the tasks stored in the hard disk.","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"Sebtey"},"content":"     * @throws FileNotFoundException If the storageFile is not located in its rightful directory.","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Sebtey"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"Sebtey"},"content":"    public ArrayList\u003cTask\u003e retrieveTasks() throws FileNotFoundException {","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"Sebtey"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Sebtey"},"content":"        Scanner sc \u003d new Scanner(storageFile);","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"Sebtey"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"Sebtey"},"content":"            final String task \u003d sc.nextLine(); //Each task is listed in a single line","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"Sebtey"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"Sebtey"},"content":"                char type \u003d task.charAt(0);","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"Sebtey"},"content":"                String[] descriptions \u003d task.split(\"::\"); //:: demarcates a different field","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"Sebtey"},"content":"                switch (type) {","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"Sebtey"},"content":"                case \u0027T\u0027:","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"Sebtey"},"content":"                    tasks.add(new ToDo(descriptions[2], descriptions[1].matches(\"1\")));","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"Sebtey"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"Sebtey"},"content":"                case \u0027D\u0027:","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"Sebtey"},"content":"                    //Events.Deadline","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"Sebtey"},"content":"                    tasks.add(new Deadline(descriptions[2], descriptions[3], descriptions[1].matches(\"1\")));","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"Sebtey"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"Sebtey"},"content":"                case \u0027E\u0027:","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"Sebtey"},"content":"                    //Events.Event","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"Sebtey"},"content":"                    tasks.add(new Event(descriptions[2], descriptions[3], descriptions[1].matches(\"1\")));","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"Sebtey"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"Sebtey"},"content":"                default:","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"Sebtey"},"content":"                    System.out.println(\"Wrong file format\");","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"Sebtey"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"Sebtey"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"Sebtey"},"content":"                //Formatting error in saved file","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"Sebtey"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"Sebtey"},"content":"                System.out.println(\"File corrupted.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"Sebtey"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"Sebtey"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"Sebtey"},"content":"        sc.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"Sebtey"},"content":"        return tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"Sebtey"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"Sebtey"},"content":"     * Updates the saved data in the disk.","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"Sebtey"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"Sebtey"},"content":"     * @param tasks is the current list of tasks the user has.","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"Sebtey"},"content":"     * @param isAddingTask indicates whether the user is adding a new task or overwriting the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"Sebtey"},"content":"     * @return true if file is successfully updated.","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"Sebtey"},"content":"     * @throws IOException When writer is called upon to write after being closed.","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"Sebtey"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"Sebtey"},"content":"    public boolean updateData(ArrayList\u003cTask\u003e tasks, boolean isAddingTask) throws IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"Sebtey"},"content":"        FileWriter writer \u003d null;","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"Sebtey"},"content":"        boolean isNotFirstTask \u003d tasks.size() !\u003d 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"Sebtey"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"Sebtey"},"content":"            writer \u003d new FileWriter(storageFile, isAddingTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"Sebtey"},"content":"            String newData;","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"Sebtey"},"content":"            if (isNotFirstTask \u0026\u0026 isAddingTask) {","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"Sebtey"},"content":"                //Add a new line containing the latest task","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"Sebtey"},"content":"                newData \u003d (System.lineSeparator() + tasks.get(tasks.size() - 1).convertToStorageForm());","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"Sebtey"},"content":"            } else if (!isNotFirstTask \u0026\u0026 isAddingTask) {","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"Sebtey"},"content":"                newData \u003d tasks.get(tasks.size() - 1).convertToStorageForm();","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"Sebtey"},"content":"            } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"Sebtey"},"content":"                //Overwrite the file","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"Sebtey"},"content":"                newData \u003d \"\";","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"Sebtey"},"content":"                //Iterate through tasks and convertToStorageForm","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"Sebtey"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"Sebtey"},"content":"                    newData +\u003d tasks.get(i).convertToStorageForm();","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"Sebtey"},"content":"                    if (i !\u003d tasks.size() - 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"Sebtey"},"content":"                        newData +\u003d System.lineSeparator();","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"Sebtey"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"Sebtey"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"Sebtey"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"Sebtey"},"content":"            writer.write(newData);","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"Sebtey"},"content":"            writer.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"Sebtey"},"content":"            return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"Sebtey"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"Sebtey"},"content":"            writer.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"Sebtey"},"content":"            System.out.println(\"Failed to update tasks on disk.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"Sebtey"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"Sebtey"},"content":"            return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"Sebtey"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"Sebtey"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Sebtey":151}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sebtey"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Sebtey"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Sebtey"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Sebtey"},"content":"import java.util.List;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Sebtey"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Sebtey"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"Sebtey"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Sebtey"},"content":" * TaskList encapsulates the task lists and operations related to the task lists.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Sebtey"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Sebtey"},"content":" * @author Sebastian Tay","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Sebtey"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Sebtey"},"content":"public class TaskList {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Sebtey"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Sebtey"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Sebtey"},"content":"    public TaskList(Storage storage) {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Sebtey"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Sebtey"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Sebtey"},"content":"        return this.tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Sebtey"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Sebtey"},"content":"     * Retrieves the saved data from file.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Sebtey"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Sebtey"},"content":"     * @return true if successful. Otherwise, false.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"Sebtey"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Sebtey"},"content":"    public boolean load() {","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"Sebtey"},"content":"        if (storage.checkFileExists()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"Sebtey"},"content":"            //File does exist","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"Sebtey"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"Sebtey"},"content":"                tasks \u003d storage.retrieveTasks();","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"Sebtey"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"Sebtey"},"content":"                System.out.println(\"Unable to find file.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"Sebtey"},"content":"                return false;","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"Sebtey"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"Sebtey"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"Sebtey"},"content":"            //File does not exist","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"Sebtey"},"content":"            storage.addFile();","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"Sebtey"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"Sebtey"},"content":"        return true;","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"Sebtey"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"Sebtey"},"content":"     * Deletes the task at the given index of the list.","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"Sebtey"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"Sebtey"},"content":"     * @param taskIndex is null if encounter an exception.","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"Sebtey"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"Sebtey"},"content":"    public Task deleteTask(int taskIndex) {","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"Sebtey"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"Sebtey"},"content":"            Task task \u003d tasks.remove(taskIndex);","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"Sebtey"},"content":"            storage.updateData(tasks, false);","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"Sebtey"},"content":"            System.out.println(\"Noted. I have removed the following mission:\");","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"Sebtey"},"content":"            System.out.println(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"Sebtey"},"content":"            return task;","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"Sebtey"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"Sebtey"},"content":"            System.out.println(\"Invalid index! Please ensure you correctly key in your target index.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"Sebtey"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"Sebtey"},"content":"            System.out.println(\"Unable to update file.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"Sebtey"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"Sebtey"},"content":"        return null;","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"Sebtey"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"Sebtey"},"content":"     * Adds the given task into the list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"Sebtey"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"Sebtey"},"content":"     * @param task","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"Sebtey"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"Sebtey"},"content":"    public boolean addTask(Task task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"Sebtey"},"content":"        if (task !\u003d null \u0026\u0026 tasks.add(task)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"Sebtey"},"content":"            System.out.println(\"added in mission:\\n\" + task);","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"Sebtey"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"Sebtey"},"content":"                storage.updateData(tasks, true);","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"Sebtey"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"Sebtey"},"content":"                System.out.println(\"Error writing to file.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"Sebtey"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"Sebtey"},"content":"            return true;","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"Sebtey"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"Sebtey"},"content":"            System.out.println(\"System is unable to accommodate the new mission\");","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"Sebtey"},"content":"            return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"Sebtey"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"Sebtey"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"Sebtey"},"content":"     * Marks the task at the given index as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"Sebtey"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"Sebtey"},"content":"     * @param taskIndex is the index of the task to be marked.","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"Sebtey"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"Sebtey"},"content":"    public boolean markAsDone(int taskIndex) {","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"Sebtey"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"Sebtey"},"content":"            Task task \u003d tasks.get(taskIndex);","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"Sebtey"},"content":"            if (task.isDone()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"Sebtey"},"content":"                //Events.Task already marked as done","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"Sebtey"},"content":"                System.out.println(\"Mission has been completed previously.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"Sebtey"},"content":"                return true;","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"Sebtey"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"Sebtey"},"content":"            task.updateCompletionStatus();","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"Sebtey"},"content":"            System.out.println(\"Mission status updated! Mission completed successfully.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"Sebtey"},"content":"            System.out.println(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"Sebtey"},"content":"            return storage.updateData(tasks, false);","lastModifiedDate":"2023-09-03"},{"lineNumber":117,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"Sebtey"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"Sebtey"},"content":"            System.out.println(\"Invalid index! Please ensure you correctly key in your target index.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"Sebtey"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"Sebtey"},"content":"            System.out.println(\"Unable to update file.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"Sebtey"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":124,"author":{"gitId":"Sebtey"},"content":"        return false;","lastModifiedDate":"2023-09-03"},{"lineNumber":125,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"Sebtey"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"Sebtey"},"content":"     * Marks the task at the given index as undone.","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"Sebtey"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"Sebtey"},"content":"     * @param taskIndex is the index of the task to be unmarked.","lastModifiedDate":"2023-09-03"},{"lineNumber":131,"author":{"gitId":"Sebtey"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"Sebtey"},"content":"    public boolean markUndone(int taskIndex) {","lastModifiedDate":"2023-09-03"},{"lineNumber":133,"author":{"gitId":"Sebtey"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"Sebtey"},"content":"            Task task \u003d tasks.get(taskIndex);","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"Sebtey"},"content":"            if (!(task.isDone())) {","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"Sebtey"},"content":"                //task already marked as undone","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"Sebtey"},"content":"                System.out.println(\"Mission is already marked as undone!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"Sebtey"},"content":"                return true;","lastModifiedDate":"2023-09-03"},{"lineNumber":140,"author":{"gitId":"Sebtey"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"Sebtey"},"content":"            task.updateCompletionStatus();","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"Sebtey"},"content":"            System.out.println(\"Mission status updated! Mission completion status reverted.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"Sebtey"},"content":"            System.out.println(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"Sebtey"},"content":"            return storage.updateData(tasks, false);","lastModifiedDate":"2023-09-03"},{"lineNumber":148,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":149,"author":{"gitId":"Sebtey"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"Sebtey"},"content":"            System.out.println(\"Invalid index! Please ensure you correctly key in your target index.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"Sebtey"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"Sebtey"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"Sebtey"},"content":"            System.out.println(\"Unable to update file.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":154,"author":{"gitId":"Sebtey"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":155,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":156,"author":{"gitId":"Sebtey"},"content":"        return false;","lastModifiedDate":"2023-09-03"},{"lineNumber":157,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":158,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":159,"author":{"gitId":"Sebtey"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":160,"author":{"gitId":"Sebtey"},"content":"     * Returns an ArrayList containing tasks that contains the keyword.","lastModifiedDate":"2023-09-03"},{"lineNumber":161,"author":{"gitId":"Sebtey"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":162,"author":{"gitId":"Sebtey"},"content":"     * @param keyword is the word that we are searching for amongst the tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":163,"author":{"gitId":"Sebtey"},"content":"     * @return an ArrayList of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":164,"author":{"gitId":"Sebtey"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":165,"author":{"gitId":"Sebtey"},"content":"    public ArrayList\u003cTask\u003e findKeyword(String keyword) {","lastModifiedDate":"2023-09-03"},{"lineNumber":166,"author":{"gitId":"Sebtey"},"content":"        //Filter out the tasks without the keyword using Stream","lastModifiedDate":"2023-09-03"},{"lineNumber":167,"author":{"gitId":"Sebtey"},"content":"        List\u003cTask\u003e results \u003d tasks","lastModifiedDate":"2023-09-03"},{"lineNumber":168,"author":{"gitId":"Sebtey"},"content":"                .stream()","lastModifiedDate":"2023-09-03"},{"lineNumber":169,"author":{"gitId":"Sebtey"},"content":"                .filter((task) -\u003e task.getDescription().toLowerCase().contains(keyword))","lastModifiedDate":"2023-09-03"},{"lineNumber":170,"author":{"gitId":"Sebtey"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-09-03"},{"lineNumber":171,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":172,"author":{"gitId":"Sebtey"},"content":"        return new ArrayList\u003c\u003e(results);","lastModifiedDate":"2023-09-03"},{"lineNumber":173,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":174,"author":{"gitId":"Sebtey"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"Sebtey":174}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sebtey"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Sebtey"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Sebtey"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Sebtey"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Sebtey"},"content":" * Ui handles the interactions with user.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Sebtey"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Sebtey"},"content":" * @author Sebastian Tay","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Sebtey"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Sebtey"},"content":"public class Ui {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Sebtey"},"content":"    private Scanner sc;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Sebtey"},"content":"    public Ui(Scanner sc) {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Sebtey"},"content":"        this.sc \u003d sc;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Sebtey"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Sebtey"},"content":"     * Retrieves input from the user in the command line.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Sebtey"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Sebtey"},"content":"     * @return","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Sebtey"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Sebtey"},"content":"    public String getInput() {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Sebtey"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Sebtey"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Sebtey"},"content":"     * Greets the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Sebtey"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"Sebtey"},"content":"    public void welcome() {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Sebtey"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"Sebtey"},"content":"        System.out.println(\"Veda initialised. How may I help you?\");","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"Sebtey"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"Sebtey"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"Sebtey"},"content":"     * Terminates the ui and closes the scanner.","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"Sebtey"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"Sebtey"},"content":"    public void exit() {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"Sebtey"},"content":"        System.out.println(\"Terminating reader.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"Sebtey"},"content":"        sc.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"Sebtey"},"content":"        System.out.println(\"Bye. All the best for your mission!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"Sebtey"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"Sebtey"},"content":"     * Informs user that command is unrecognised.","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"Sebtey"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"Sebtey"},"content":"    public void displayUnrecognisedInput() {","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"Sebtey"},"content":"        System.out.println(\"Unrecognised command.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"Sebtey"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"Sebtey"},"content":"     * List out the missions in tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"Sebtey"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"Sebtey"},"content":"     * @param tasks contains the missions to be listed.","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"Sebtey"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"Sebtey"},"content":"    public void displayList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"Sebtey"},"content":"        System.out.println(\"Missions:\");","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"Sebtey"},"content":"        tasks.forEach(task -\u003e System.out.println((tasks.indexOf(task) + 1) + \".\" + task));","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"Sebtey"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"Sebtey"},"content":"     * List out the missions in tasks with the message at the top.","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"Sebtey"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"Sebtey"},"content":"     * @param tasks","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"Sebtey"},"content":"     * @param message","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"Sebtey"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"Sebtey"},"content":"    public void displayList(ArrayList\u003cTask\u003e tasks, String message) {","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"Sebtey"},"content":"        System.out.println(message);","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"Sebtey"},"content":"        tasks.forEach(task -\u003e System.out.println((tasks.indexOf(task) + 1) + \".\" + task));","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"Sebtey"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"Sebtey":77}},{"path":"src/main/java/Veda.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sebtey"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Sebtey"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"Sebtey"},"content":"import vedaexceptions.IncorrectInputException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Sebtey"},"content":"import vedaexceptions.NoDescriptionException;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"Sebtey"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Sebtey"},"content":" * Veda is the main class for the chatbot application \"Veda\".","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Sebtey"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Sebtey"},"content":" * @author Sebastian Tay","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Sebtey"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Sebtey"},"content":"public class Veda {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"Sebtey"},"content":"    private static final Storage storage \u003d new Storage();","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"Sebtey"},"content":"    private static final TaskList tasks \u003d new TaskList(storage);","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"Sebtey"},"content":"    private static final Ui ui \u003d new Ui(new Scanner(System.in));","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Sebtey"},"content":"    private static void initialise() {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Sebtey"},"content":"        ui.welcome();","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Sebtey"},"content":"        tasks.load();","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"Sebtey"},"content":"    private static void run() {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Sebtey"},"content":"        while (true) {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Sebtey"},"content":"            String input \u003d ui.getInput();","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"Sebtey"},"content":"            int method \u003d Parser.parse(input); //Get which commands to perform based on user\u0027s input","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Sebtey"},"content":"            switch (method) {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Sebtey"},"content":"            case -1:","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"Sebtey"},"content":"                //Unrecognised input","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Sebtey"},"content":"                System.out.println(\"Unrecognised command.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"Sebtey"},"content":"                break;","lastModifiedDate":"2023-08-25"},{"lineNumber":33,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":34,"author":{"gitId":"Sebtey"},"content":"            case 0:","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"Sebtey"},"content":"                //User wishes to exit the program","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"Sebtey"},"content":"                ui.exit();","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"Sebtey"},"content":"                return;","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":39,"author":{"gitId":"Sebtey"},"content":"            case 1:","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"Sebtey"},"content":"                //User wishes to see listed missions","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"Sebtey"},"content":"                ui.displayList(tasks.getTasks());","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"Sebtey"},"content":"                break;","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":44,"author":{"gitId":"Sebtey"},"content":"            case 2:","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"Sebtey"},"content":"                //User wishes to mark task as done","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"Sebtey"},"content":"                try {","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"Sebtey"},"content":"                    tasks.markAsDone(Parser.getTargetIndex(input));","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"Sebtey"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"Sebtey"},"content":"                    System.out.println(\"Invalid index! Please ensure you correctly key in your target index.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"Sebtey"},"content":"                } catch (NoDescriptionException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"Sebtey"},"content":"                    System.out.println(e);","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"Sebtey"},"content":"                }","lastModifiedDate":"2023-08-25"},{"lineNumber":53,"author":{"gitId":"Sebtey"},"content":"                break;","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"Sebtey"},"content":"            case 3:","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"Sebtey"},"content":"                //User wishes to mark task as undone","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"Sebtey"},"content":"                try {","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"Sebtey"},"content":"                    tasks.markUndone(Parser.getTargetIndex(input));","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"Sebtey"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"Sebtey"},"content":"                    System.out.println(\"Invalid index! Please ensure you correctly key in your target index.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"Sebtey"},"content":"                } catch (NoDescriptionException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"Sebtey"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"Sebtey"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"Sebtey"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"Sebtey"},"content":"            case 4:","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"Sebtey"},"content":"                //User wishes to delete a task","lastModifiedDate":"2023-08-25"},{"lineNumber":68,"author":{"gitId":"Sebtey"},"content":"                try {","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"Sebtey"},"content":"                    tasks.deleteTask(Parser.getTargetIndex(input));","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"Sebtey"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"Sebtey"},"content":"                    System.out.println(\"Invalid index! Please ensure you correctly key in your target index.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"Sebtey"},"content":"                } catch (NoDescriptionException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"Sebtey"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"Sebtey"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"Sebtey"},"content":"                break;","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"Sebtey"},"content":"            case 5:","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"Sebtey"},"content":"                //User wishes to add a new task","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"Sebtey"},"content":"                try {","lastModifiedDate":"2023-08-25"},{"lineNumber":80,"author":{"gitId":"Sebtey"},"content":"                    tasks.addTask(Parser.getTask(input));","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"Sebtey"},"content":"                } catch (IncorrectInputException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"Sebtey"},"content":"                    System.out.println(e);","lastModifiedDate":"2023-08-25"},{"lineNumber":83,"author":{"gitId":"Sebtey"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"Sebtey"},"content":"                    System.out.println(\"Ensure your deadline is of the format {dd/MM/yyyy HHmm}\");","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"Sebtey"},"content":"                }","lastModifiedDate":"2023-08-25"},{"lineNumber":86,"author":{"gitId":"Sebtey"},"content":"                break;","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"Sebtey"},"content":"            case 6:","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"Sebtey"},"content":"                //User wishes to find a task by a keyword","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"Sebtey"},"content":"                final String keyword \u003d Parser.getKeyword(input);","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"Sebtey"},"content":"                ui.displayList(","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"Sebtey"},"content":"                        tasks.findKeyword(keyword),","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"Sebtey"},"content":"                        \"Retrieved the following missions containing the keyword \\\"\" + keyword + \"\\\":\"","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"Sebtey"},"content":"                );","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"Sebtey"},"content":"                break;","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"Sebtey"},"content":"            default:","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"Sebtey"},"content":"                break;","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"Sebtey"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":102,"author":{"gitId":"Sebtey"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"Sebtey"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"Sebtey"},"content":"     * Runs the program.","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"Sebtey"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"Sebtey"},"content":"     * @param args","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"Sebtey"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"Sebtey"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"Sebtey"},"content":"        initialise();","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"Sebtey"},"content":"        run();","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":115,"author":{"gitId":"Sebtey"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Sebtey":115}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sebtey"},"content":"package tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Sebtey"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Sebtey"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Sebtey"},"content":"/**","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"Sebtey"},"content":" * Tasks that need to be done before a specific date/time.","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"Sebtey"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"Sebtey"},"content":" * @author Sebastian Tay","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"Sebtey"},"content":" */","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"Sebtey"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"Sebtey"},"content":"    //TODO","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"Sebtey"},"content":"    static final String SYMBOL \u003d \"D\";","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"Sebtey"},"content":"    protected String by;","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"Sebtey"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Sebtey"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"Sebtey"},"content":"     * Constructor for deadline task that is used for user inputs.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"Sebtey"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"Sebtey"},"content":"     * @param description is the description of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"Sebtey"},"content":"     * @param by deadline for the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"Sebtey"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"Sebtey"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Sebtey"},"content":"        super(description);","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"Sebtey"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"Sebtey"},"content":"        this.deadline \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":30,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":31,"author":{"gitId":"Sebtey"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"Sebtey"},"content":"     * Constructor for deadline task that is used when retrieving tasks from the saved file.","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"Sebtey"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"Sebtey"},"content":"     * @param description is the description of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"Sebtey"},"content":"     * @param by deadline for the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"Sebtey"},"content":"     * @param isDone indicates whether the task has been completed.","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"Sebtey"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"Sebtey"},"content":"    public Deadline(String description, String by, boolean isDone) {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"Sebtey"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Sebtey"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Sebtey"},"content":"        this.deadline \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":45,"author":{"gitId":"Sebtey"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":46,"author":{"gitId":"Sebtey"},"content":"    public String getType() {","lastModifiedDate":"2023-08-25"},{"lineNumber":47,"author":{"gitId":"Sebtey"},"content":"        return SYMBOL;","lastModifiedDate":"2023-08-25"},{"lineNumber":48,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":49,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":50,"author":{"gitId":"Sebtey"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":51,"author":{"gitId":"Sebtey"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":52,"author":{"gitId":"Sebtey"},"content":"        return \"[D]\"","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"Sebtey"},"content":"                + super.toString()","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"Sebtey"},"content":"                + \"(by: \" + this.deadline.format(DateTimeFormatter.ofPattern(\"dd MMMM yyyy HHmm\")) + \"H)\";","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":56,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Sebtey"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Sebtey"},"content":"    public String convertToStorageForm() {","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"Sebtey"},"content":"        final String separator \u003d \"::\";","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"Sebtey"},"content":"        final String status \u003d isDone() ? \"1\" : \"0\";","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"Sebtey"},"content":"        //D::0::return book::June 6th","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"Sebtey"},"content":"        return SYMBOL + separator + status + separator + getDescription() + separator + this.by;","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"Sebtey"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"Sebtey":65}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sebtey"},"content":"package tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Sebtey"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Sebtey"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Sebtey"},"content":"/**","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"Sebtey"},"content":" * Tasks that start at a specific date/time and ends at a specific date/time.","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"Sebtey"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Sebtey"},"content":" * @author Sebastian Tay","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Sebtey"},"content":" */","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"Sebtey"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"Sebtey"},"content":"    static final String SYMBOL \u003d \"E\";","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"Sebtey"},"content":"    protected String from;","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"Sebtey"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Sebtey"},"content":"    protected String to;","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"Sebtey"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"Sebtey"},"content":"     * Constructor for event class, using user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"Sebtey"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"Sebtey"},"content":"     * @param description is the description of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"Sebtey"},"content":"     * @param from is the starting time of the event.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"Sebtey"},"content":"     * @param to is the ending time of the event.","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"Sebtey"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"Sebtey"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Sebtey"},"content":"        super(description);","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"Sebtey"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"Sebtey"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-25"},{"lineNumber":29,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Sebtey"},"content":"        this.start \u003d LocalDateTime.parse(from, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":33,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":34,"author":{"gitId":"Sebtey"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"Sebtey"},"content":"     * Constructor for event class, using the data from the saved file.","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"Sebtey"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"Sebtey"},"content":"     * @param description is the description of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"Sebtey"},"content":"     * @param period is the string containing the start and end time of the event.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"Sebtey"},"content":"     * @param isDone denotes whether the task has been completed.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"Sebtey"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"Sebtey"},"content":"    public Event(String description, String period, boolean isDone) {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"Sebtey"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Sebtey"},"content":"        this.from \u003d period.split(\"-\")[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Sebtey"},"content":"        this.to \u003d period.split(\"-\")[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Sebtey"},"content":"        this.start \u003d LocalDateTime.parse(from, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Sebtey"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":50,"author":{"gitId":"Sebtey"},"content":"    public String getType() {","lastModifiedDate":"2023-08-25"},{"lineNumber":51,"author":{"gitId":"Sebtey"},"content":"        return SYMBOL;","lastModifiedDate":"2023-08-25"},{"lineNumber":52,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":53,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":54,"author":{"gitId":"Sebtey"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":55,"author":{"gitId":"Sebtey"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":56,"author":{"gitId":"Sebtey"},"content":"        return \"[E][\" + getStatusIcon() + \"] \"","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"Sebtey"},"content":"                + super.getDescription()","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"Sebtey"},"content":"                + \"(from: \"","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"Sebtey"},"content":"                + this.start.format(DateTimeFormatter.ofPattern(\"dd MMMM yyyy HHmm\"))","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"Sebtey"},"content":"                + \"H to: \"","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"Sebtey"},"content":"                + this.to","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"Sebtey"},"content":"                + \"H)\";","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"Sebtey"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"Sebtey"},"content":"    public String convertToStorageForm() {","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"Sebtey"},"content":"        final String separator \u003d \"::\";","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"Sebtey"},"content":"        final String status \u003d isDone() ? \"1\" : \"0\";","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"Sebtey"},"content":"        final String period \u003d this.from + \"-\" + this.to;","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"Sebtey"},"content":"        //E::0::project meeting::Aug 6th 2pm-4pm","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"Sebtey"},"content":"        return SYMBOL + separator + status + separator + getDescription() + separator + period;","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":74,"author":{"gitId":"Sebtey"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"Sebtey":74}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sebtey"},"content":"package tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Sebtey"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Sebtey"},"content":" * Task is the abstract class that encapsulates the common methods related to other Task classes.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Sebtey"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Sebtey"},"content":" * @author Sebastian Tay","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Sebtey"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Sebtey"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"Sebtey"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Sebtey"},"content":"    private String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Sebtey"},"content":"    Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Sebtey"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Sebtey"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Sebtey"},"content":"    Task(String description, boolean isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Sebtey"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Sebtey"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Sebtey"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Sebtey"},"content":"        return this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"Sebtey"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"Sebtey"},"content":"     * Changes the current completion status of the task to true or false if it is currently false or true respectively.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"Sebtey"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"Sebtey"},"content":"    public void updateCompletionStatus() {","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"Sebtey"},"content":"        //If done, change to not done or false","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"Sebtey"},"content":"        //Else, change to done or true","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"Sebtey"},"content":"        this.isDone \u003d !(this.isDone);","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"Sebtey"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"Sebtey"},"content":"        //Events.Task is marked as done with an \"X\"","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"Sebtey"},"content":"        return isDone","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"Sebtey"},"content":"                ? \"X\"","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"Sebtey"},"content":"                : \" \";","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":42,"author":{"gitId":"Sebtey"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"Sebtey"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-25"},{"lineNumber":44,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":45,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":46,"author":{"gitId":"Sebtey"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":47,"author":{"gitId":"Sebtey"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":48,"author":{"gitId":"Sebtey"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":50,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Sebtey"},"content":"    public abstract String getType();","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Sebtey"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"Sebtey"},"content":"     * Converts the task into a String containing all its information that will be stored in the saved file.","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"Sebtey"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"Sebtey"},"content":"     * @return a String that represents the task instance in the saved file.","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"Sebtey"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"Sebtey"},"content":"    public abstract String convertToStorageForm();","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"Sebtey"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Sebtey":59}},{"path":"src/main/java/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sebtey"},"content":"package tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Sebtey"},"content":"/**","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"Sebtey"},"content":" * ToDos are tasks that have no date/time attached to them.","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"Sebtey"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Sebtey"},"content":" * @author Sebastian Tay","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Sebtey"},"content":" */","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"Sebtey"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"Sebtey"},"content":"    static final String SYMBOL \u003d \"T\";","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"Sebtey"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Sebtey"},"content":"        super(description);","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"Sebtey"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Sebtey"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Sebtey"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"Sebtey"},"content":"    public String getType() {","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"Sebtey"},"content":"        return SYMBOL;","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"Sebtey"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"Sebtey"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"Sebtey"},"content":"        return \"[T][\" + getStatusIcon() + \"] \" + super.getDescription();","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Sebtey"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Sebtey"},"content":"    public String convertToStorageForm() {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Sebtey"},"content":"        final String separator \u003d \"::\";","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Sebtey"},"content":"        final String status \u003d isDone() ? \"1\" : \"0\";","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Sebtey"},"content":"        return SYMBOL + separator + status + separator + getDescription();","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":36,"author":{"gitId":"Sebtey"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"Sebtey":36}},{"path":"src/main/java/vedaexceptions/ExcessiveArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sebtey"},"content":"package vedaexceptions;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"Sebtey"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Sebtey"},"content":" * ExcessiveArgumentException is a form of IncorrectInputException that is thrown when the user provides more arguments","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Sebtey"},"content":" * than the command requires.","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Sebtey"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Sebtey"},"content":" * @author Sebastian Tay","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Sebtey"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"Sebtey"},"content":"public class ExcessiveArgumentException extends IncorrectInputException {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"Sebtey"},"content":"    public ExcessiveArgumentException(String message) {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"Sebtey"},"content":"        super(message);","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"Sebtey"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"Sebtey"},"content":"    public String toString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"Sebtey"},"content":"        return super.getMessage();","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"Sebtey"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"Sebtey":18}},{"path":"src/main/java/vedaexceptions/IncorrectInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sebtey"},"content":"package vedaexceptions;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Sebtey"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Sebtey"},"content":" * IncorrectInputException is a form of RuntimeException that is thrown when the user provide an invalid input.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Sebtey"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Sebtey"},"content":" * @author Sebastian Tay","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Sebtey"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Sebtey"},"content":"public class IncorrectInputException extends RuntimeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Sebtey"},"content":"    public IncorrectInputException(String message) {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Sebtey"},"content":"        super(message);","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Sebtey"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Sebtey"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Sebtey"},"content":"        return \"Please ensure that you key in your arguments correctly.\";","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Sebtey"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Sebtey":17}},{"path":"src/main/java/vedaexceptions/NoDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sebtey"},"content":"package vedaexceptions;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Sebtey"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Sebtey"},"content":" * NoDescriptionException is a form of IncorrectInputException that is thrown when the user omits certain description","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Sebtey"},"content":" * in their input.","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Sebtey"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Sebtey"},"content":" * @author Sebastian Tay","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Sebtey"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"Sebtey"},"content":"public class NoDescriptionException extends IncorrectInputException {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Sebtey"},"content":"    public NoDescriptionException(String message) {","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"Sebtey"},"content":"        super(message);","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"Sebtey"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"Sebtey"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"Sebtey"},"content":"        return super.getMessage();","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"Sebtey"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"Sebtey":18}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sebtey"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Sebtey"},"content":"import tasks.Event;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"Sebtey"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Sebtey"},"content":"import tasks.ToDo;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Sebtey"},"content":"import vedaexceptions.ExcessiveArgumentException;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Sebtey"},"content":"import vedaexceptions.IncorrectInputException;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Sebtey"},"content":"import vedaexceptions.NoDescriptionException;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Sebtey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"Sebtey"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"Sebtey"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"Sebtey"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"Sebtey"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"Sebtey"},"content":"    public void parse_emptyInput_negativeOne() {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"Sebtey"},"content":"        int methodType \u003d Parser.parse(\"\");","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"Sebtey"},"content":"        assertEquals(-1, methodType);","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"Sebtey"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"Sebtey"},"content":"    public void parse_exit_one() {","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"Sebtey"},"content":"        int methodType \u003d Parser.parse(\"bye\");","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"Sebtey"},"content":"        assertEquals(0, methodType);","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"Sebtey"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"Sebtey"},"content":"    public void parse_statementWithExitFront_negativeOne() {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"Sebtey"},"content":"        int methodType \u003d Parser.parse(\"bye world\");","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"Sebtey"},"content":"        assertEquals(-1, methodType);","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"Sebtey"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"Sebtey"},"content":"    public void parse_statementWithExitMiddle_negativeOne() {","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"Sebtey"},"content":"        int methodType \u003d Parser.parse(\"good bye cruel world\");","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"Sebtey"},"content":"        assertEquals(-1, methodType);","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"Sebtey"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"Sebtey"},"content":"    public void parse_listCall_One() {","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"Sebtey"},"content":"        int methodType \u003d Parser.parse(\"list\");","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"Sebtey"},"content":"        assertEquals(1, methodType);","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"Sebtey"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"Sebtey"},"content":"    public void parse_instantiateNewTask_fiveFiveFive() {","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"Sebtey"},"content":"        int methodTypeOne \u003d Parser.parse(\"todo hello world\");","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"Sebtey"},"content":"        int methodTypeTwo \u003d Parser.parse(\"deadline see you /by 08/12/2023 0800\");","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"Sebtey"},"content":"        int methodTypeThree \u003d Parser.parse(\"event bye world /from 08/12/2023 0900 /to 0900\");","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"Sebtey"},"content":"        String actualOutput \u003d String.valueOf(methodTypeOne) + String.valueOf(methodTypeTwo) + String.valueOf(methodTypeThree);","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"Sebtey"},"content":"        assertEquals(\"555\", actualOutput);","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"Sebtey"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"Sebtey"},"content":"    public void getTargetIndex_excessiveArguments_throwExcessiveArgumentException() {","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"Sebtey"},"content":"        assertThrows(ExcessiveArgumentException.class, () -\u003e Parser.getTargetIndex(\"mark 1 remove\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"Sebtey"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"Sebtey"},"content":"    public void getTargetIndex_stringArgumentIndex_throwNumberFormatException() {","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"Sebtey"},"content":"        assertThrows(NumberFormatException.class, () -\u003e Parser.getTargetIndex(\"mark 1t\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"Sebtey"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"Sebtey"},"content":"    public void getTargetIndex_noArgumentIndex_throwNoDescriptionException() {","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"Sebtey"},"content":"        assertThrows(NoDescriptionException.class, () -\u003e Parser.getTargetIndex(\"mark  \"));","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"Sebtey"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"Sebtey"},"content":"    public void getTargetIndex_invalidArgumentIndex_throwIncorrectInputException() {","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"Sebtey"},"content":"        assertThrows(IncorrectInputException.class, () -\u003e Parser.getTargetIndex(\"mark -1\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"Sebtey"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"Sebtey"},"content":"    public void getTargetIndex_correctArgumentIndex_correctIndex() {","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"Sebtey"},"content":"        int index \u003d Parser.getTargetIndex(\"mark 4\");","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"Sebtey"},"content":"        // argument index is offset by +1 from actual index of task for user-friendliness","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"Sebtey"},"content":"        assertEquals(3, index);","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"Sebtey"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"Sebtey"},"content":"    public void getTask_todoTaskArgument_todoTask() {","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"Sebtey"},"content":"        Task task \u003d Parser.getTask(\"todo test mission\");","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"Sebtey"},"content":"        //We test if they are equal if they return the same storage form","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"Sebtey"},"content":"        assertEquals(new ToDo(\"test mission\").convertToStorageForm(), task.convertToStorageForm());","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"Sebtey"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"Sebtey"},"content":"    public void getTask_deadlineTaskArgument_deadlineTask() {","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"Sebtey"},"content":"        final String ARG \u003d \"deadline test mission /by 08/08/2023 0800\";","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"Sebtey"},"content":"        final Task ACTUAL_TASK \u003d Parser.getTask(ARG);","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"Sebtey"},"content":"        //We test if they are equal if they return the same storage form","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"Sebtey"},"content":"        assertEquals(new Deadline(\"test mission\", \"08/08/2023 0800\").convertToStorageForm(), ACTUAL_TASK.convertToStorageForm());","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"Sebtey"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"Sebtey"},"content":"    public void getTask_eventTaskArgument_eventTask() {","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"Sebtey"},"content":"        final String ARG \u003d \"event test mission /from 08/08/2023 0800 /to 0900\";","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"Sebtey"},"content":"        final Task ACTUAL_TASK \u003d Parser.getTask(ARG);","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"Sebtey"},"content":"        //We test if they are equal if they return the same storage form","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"Sebtey"},"content":"        assertEquals(new Event(\"test mission\", \"08/08/2023 0800\", \"0900\").convertToStorageForm(), ACTUAL_TASK.convertToStorageForm());","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"Sebtey"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"Sebtey":111}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sebtey"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Sebtey"},"content":"import tasks.Event;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"Sebtey"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Sebtey"},"content":"import tasks.ToDo;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Sebtey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Sebtey"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Sebtey"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"Sebtey"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"Sebtey"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"Sebtey"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"Sebtey"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"Sebtey"},"content":"     * StorageStub is used to emulate Storage to allow unit testing of TaskList.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"Sebtey"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"Sebtey"},"content":"    private class StorageStub extends Storage {","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"Sebtey"},"content":"        String[] data;","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"Sebtey"},"content":"        protected StorageStub() {","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"Sebtey"},"content":"            super();","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"Sebtey"},"content":"            data \u003d new String[] {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"Sebtey"},"content":"                    \"T::0::sing a song\",","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"Sebtey"},"content":"                    \"D::0::hi world ::05/09/2023 2359\",","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"Sebtey"},"content":"                    \"E::0::apocalypse ::03/09/2023 0100-03/09/2023 1200\"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"Sebtey"},"content":"            };","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"Sebtey"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"Sebtey"},"content":"        @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"Sebtey"},"content":"        public boolean checkFileExists() {","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"Sebtey"},"content":"            return true;","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"Sebtey"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"Sebtey"},"content":"        @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"Sebtey"},"content":"        public ArrayList\u003cTask\u003e retrieveTasks() throws FileNotFoundException {","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"Sebtey"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"Sebtey"},"content":"            for(int i \u003d 0; i \u003c data.length; i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"Sebtey"},"content":"                char type \u003d data[i].charAt(0);","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"Sebtey"},"content":"                String[] descriptions \u003d data[i].split(\"::\"); //:: demarcates a different field","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"Sebtey"},"content":"                switch (type) {","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"Sebtey"},"content":"                    case \u0027T\u0027:","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"Sebtey"},"content":"                        tasks.add(new ToDo(descriptions[2], descriptions[1].matches(\"1\")));","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"Sebtey"},"content":"                        break;","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"Sebtey"},"content":"                    case \u0027D\u0027:","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"Sebtey"},"content":"                        //Events.Deadline","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"Sebtey"},"content":"                        tasks.add(new Deadline(descriptions[2], descriptions[3], descriptions[1].matches(\"1\")));","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"Sebtey"},"content":"                        break;","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"Sebtey"},"content":"                    case \u0027E\u0027:","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"Sebtey"},"content":"                        //Events.Event","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"Sebtey"},"content":"                        tasks.add(new Event(descriptions[2], descriptions[3], descriptions[1].matches(\"1\")));","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"Sebtey"},"content":"                        break;","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"Sebtey"},"content":"                    default:","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"Sebtey"},"content":"                        System.out.println(\"Wrong file format\");","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"Sebtey"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"Sebtey"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"Sebtey"},"content":"            return tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"Sebtey"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"Sebtey"},"content":"        @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"Sebtey"},"content":"        public boolean updateData(ArrayList\u003cTask\u003e tasks, boolean isAddingTask) throws IOException {","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"Sebtey"},"content":"            return true;","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"Sebtey"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"Sebtey"},"content":"    TaskList tasks \u003d new TaskList(new StorageStub());","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"Sebtey"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"Sebtey"},"content":"    public void load_readFromStorageStub_true() {","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"Sebtey"},"content":"        assertEquals(true, tasks.load());","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"Sebtey"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"Sebtey"},"content":"    public void deleteTask_invalidIndex_null() {","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"Sebtey"},"content":"        //tasks have only 3 tasks","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"Sebtey"},"content":"        final Task DELETED_TASK \u003d tasks.deleteTask(5);","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"Sebtey"},"content":"        assertEquals(null, DELETED_TASK);","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"Sebtey"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"Sebtey"},"content":"    public void deleteTask_validIndex_todoTask() {","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"Sebtey"},"content":"        //task at index 0 is a todotask with description \"sing a song\"","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"Sebtey"},"content":"        tasks.load();","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"Sebtey"},"content":"        final Task DELETED_TASK \u003d tasks.deleteTask(0);","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"Sebtey"},"content":"        assertEquals(new ToDo(\"sing a song\").convertToStorageForm(), DELETED_TASK.convertToStorageForm());","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"Sebtey"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"Sebtey"},"content":"    public void deleteTask_postDeletionLength_two() {","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"Sebtey"},"content":"        tasks.load();","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"Sebtey"},"content":"        tasks.deleteTask(0);","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"Sebtey"},"content":"        final int LENGTH \u003d tasks.getTasks().size();","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"Sebtey"},"content":"        assertEquals(2, LENGTH);","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"Sebtey"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"Sebtey"},"content":"    public void markAsDone_taskIsNotDone_true() {","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"Sebtey"},"content":"        tasks.load();","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"Sebtey"},"content":"        final boolean IS_SUCCESSFUL \u003d tasks.markAsDone(0);","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"Sebtey"},"content":"        assertEquals(true, IS_SUCCESSFUL);","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":112,"author":{"gitId":"Sebtey"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":113,"author":{"gitId":"Sebtey"},"content":"    public void markAsDone_taskIsDone_true() {","lastModifiedDate":"2023-09-03"},{"lineNumber":114,"author":{"gitId":"Sebtey"},"content":"        tasks.load();","lastModifiedDate":"2023-09-03"},{"lineNumber":115,"author":{"gitId":"Sebtey"},"content":"        tasks.markAsDone(0);","lastModifiedDate":"2023-09-03"},{"lineNumber":116,"author":{"gitId":"Sebtey"},"content":"        final boolean IS_SUCCESSFUL \u003d tasks.markAsDone(0);","lastModifiedDate":"2023-09-03"},{"lineNumber":117,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"Sebtey"},"content":"        assertEquals(true, IS_SUCCESSFUL);","lastModifiedDate":"2023-09-03"},{"lineNumber":119,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":120,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":121,"author":{"gitId":"Sebtey"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":122,"author":{"gitId":"Sebtey"},"content":"    public void markAsDone_taskIndexInvalid_false() {","lastModifiedDate":"2023-09-03"},{"lineNumber":123,"author":{"gitId":"Sebtey"},"content":"        tasks.load();","lastModifiedDate":"2023-09-03"},{"lineNumber":124,"author":{"gitId":"Sebtey"},"content":"        final boolean IS_SUCCESSFUL \u003d tasks.markAsDone(5);","lastModifiedDate":"2023-09-03"},{"lineNumber":125,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":126,"author":{"gitId":"Sebtey"},"content":"        assertEquals(false, IS_SUCCESSFUL);","lastModifiedDate":"2023-09-03"},{"lineNumber":127,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":128,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":129,"author":{"gitId":"Sebtey"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":130,"author":{"gitId":"Sebtey"},"content":"    public void markUndone_taskIsDone_true() {","lastModifiedDate":"2023-09-03"},{"lineNumber":131,"author":{"gitId":"Sebtey"},"content":"        tasks.load();","lastModifiedDate":"2023-09-03"},{"lineNumber":132,"author":{"gitId":"Sebtey"},"content":"        tasks.markAsDone(0);","lastModifiedDate":"2023-09-03"},{"lineNumber":133,"author":{"gitId":"Sebtey"},"content":"        final boolean IS_SUCCESSFUL \u003d tasks.markUndone(0);","lastModifiedDate":"2023-09-03"},{"lineNumber":134,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":135,"author":{"gitId":"Sebtey"},"content":"        assertEquals(true, IS_SUCCESSFUL);","lastModifiedDate":"2023-09-03"},{"lineNumber":136,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":137,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":138,"author":{"gitId":"Sebtey"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":139,"author":{"gitId":"Sebtey"},"content":"    public void markUndone_taskIsNotDone_true() {","lastModifiedDate":"2023-09-03"},{"lineNumber":140,"author":{"gitId":"Sebtey"},"content":"        tasks.load();","lastModifiedDate":"2023-09-03"},{"lineNumber":141,"author":{"gitId":"Sebtey"},"content":"        final boolean IS_SUCCESSFUL \u003d tasks.markUndone(0);","lastModifiedDate":"2023-09-03"},{"lineNumber":142,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":143,"author":{"gitId":"Sebtey"},"content":"        assertEquals(true, IS_SUCCESSFUL);","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":145,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":146,"author":{"gitId":"Sebtey"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":147,"author":{"gitId":"Sebtey"},"content":"    public void markUndone_taskIndexInvalid_false() {","lastModifiedDate":"2023-09-03"},{"lineNumber":148,"author":{"gitId":"Sebtey"},"content":"        tasks.load();","lastModifiedDate":"2023-09-03"},{"lineNumber":149,"author":{"gitId":"Sebtey"},"content":"        final boolean IS_SUCCESSFUL \u003d tasks.markUndone(5);","lastModifiedDate":"2023-09-03"},{"lineNumber":150,"author":{"gitId":"Sebtey"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":151,"author":{"gitId":"Sebtey"},"content":"        assertEquals(false, IS_SUCCESSFUL);","lastModifiedDate":"2023-09-03"},{"lineNumber":152,"author":{"gitId":"Sebtey"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":153,"author":{"gitId":"Sebtey"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"Sebtey":153}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Sebtey"},"content":"todo testing123","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"Sebtey"},"content":"list","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"Sebtey"},"content":"mark 1","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"Sebtey"},"content":"list","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"Sebtey"},"content":"unmark 1","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"Sebtey"},"content":"list","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"Sebtey"},"content":"bye","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"Sebtey":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Sebtey"},"content":"java -classpath ..\\bin Veda \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Sebtey":1,"-":20}}]
