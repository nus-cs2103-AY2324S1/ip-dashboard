[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"tayruxin"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"tayruxin"},"content":"checkstyle {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"tayruxin"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"tayruxin"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"tayruxin"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":21,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"tayruxin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"tayruxin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"tayruxin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"tayruxin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"tayruxin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"tayruxin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"tayruxin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"tayruxin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"tayruxin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"tayruxin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"tayruxin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"tayruxin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"tayruxin"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"tayruxin"},"content":"    mainClassName \u003d \u0027duke.Launcher\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"tayruxin"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tayruxin":23,"-":41}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tayruxin"},"content":"D|1|gone|2023-04-02","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"tayruxin"},"content":"D|1|gog|2021-02-02 0800","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tayruxin"},"content":"D|0|ggg|2020-09-09","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"tayruxin"},"content":"T|0|333","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"tayruxin"},"content":"D|0|hune|2020-09-09","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"tayruxin"},"content":"T|0|gg","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"tayruxin"},"content":"T|0|g","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"tayruxin"},"content":"T|0|fff","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"tayruxin":8}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayruxin"},"content":"package duke;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"tayruxin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"tayruxin"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"tayruxin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"tayruxin"},"content":"//CHECKSTYLE.OFF: MissingJavadocMethodCheck","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"tayruxin"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"tayruxin"},"content":" * Represents a deadline task that user creates","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"tayruxin"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"tayruxin"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"tayruxin"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"tayruxin"},"content":"    protected LocalTime time;","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"tayruxin"},"content":"    public Deadline(String description, LocalDate by, LocalTime time) {","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"tayruxin"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"tayruxin"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"tayruxin"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"tayruxin"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"tayruxin"},"content":"     * Return the string representation of deadline in the right date and time format","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"tayruxin"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"tayruxin"},"content":"     * @return a string with the right date and time format","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"tayruxin"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"tayruxin"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"tayruxin"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"tayruxin"},"content":"        if (time \u003d\u003d null) {","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"tayruxin"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"tayruxin"},"content":"        } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"tayruxin"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"tayruxin"},"content":"                    + time.format(DateTimeFormatter.ofPattern(\" hh:mm a\")) + \")\";","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"tayruxin"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"tayruxin"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"tayruxin"},"content":"     * Returns a string with the right format that can be saved in the file","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"tayruxin"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"tayruxin"},"content":"     * @return string of right date and time format for the file","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"tayruxin"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"tayruxin"},"content":"    public String save() {","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"tayruxin"},"content":"        if (time !\u003d null) {","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"tayruxin"},"content":"            return \"D|\" + super.status() + \"|\" + by + time.format(DateTimeFormatter.ofPattern(\" hhmm\"));","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"tayruxin"},"content":"        } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"tayruxin"},"content":"            return \"D|\" + super.status() + \"|\" + by;","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"tayruxin"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"tayruxin"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"tayruxin":48}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayruxin"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"tayruxin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tayruxin"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"tayruxin"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"tayruxin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"tayruxin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"tayruxin"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"tayruxin"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"tayruxin"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"tayruxin"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"tayruxin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"tayruxin"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"tayruxin"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"tayruxin"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"tayruxin"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"tayruxin"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"tayruxin"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"tayruxin"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"tayruxin"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"tayruxin"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"tayruxin"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"tayruxin"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"tayruxin"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"tayruxin"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"tayruxin"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"tayruxin"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"tayruxin"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"tayruxin"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"tayruxin"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"tayruxin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"tayruxin"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"tayruxin"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"tayruxin"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"tayruxin"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"tayruxin"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"tayruxin"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"tayruxin"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"tayruxin"},"content":"    private void flip() {","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"tayruxin"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"tayruxin"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"tayruxin"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"tayruxin"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"tayruxin"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"tayruxin"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"tayruxin"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"tayruxin"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"tayruxin"},"content":"        db.flip();","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"tayruxin"},"content":"        return db;","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"tayruxin"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"tayruxin":60}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayruxin"},"content":"package duke;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tayruxin"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"tayruxin"},"content":"//CHECKSTYLE.OFF: MissingJavadocMethodCheck","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"tayruxin"},"content":"//CHECKSTYLE.OFF: MissingJavadocType","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"tayruxin"},"content":"public class Duke {","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"tayruxin"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"tayruxin"},"content":"    private Launcher.TaskList tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"tayruxin"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"tayruxin"},"content":"    private Gui gui;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"tayruxin"},"content":"    private String filePath;","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"tayruxin"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"tayruxin"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"tayruxin"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"tayruxin"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"tayruxin"},"content":"        try {","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"tayruxin"},"content":"            tasks \u003d new Launcher.TaskList(storage.load());","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"tayruxin"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"tayruxin"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"tayruxin"},"content":"            tasks \u003d new Launcher.TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"tayruxin"},"content":"            this.filePath \u003d filePath;","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"tayruxin"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"tayruxin"},"content":"    public void setGui(Gui gui) {","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"tayruxin"},"content":"        this.gui \u003d gui;","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"tayruxin"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"tayruxin"},"content":"     * Runs the chatbot by initiating the scanner and parser","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"tayruxin"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"tayruxin"},"content":"    public void run() {","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"tayruxin"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"tayruxin"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"tayruxin"},"content":"        while (true) {","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"tayruxin"},"content":"            try {","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"tayruxin"},"content":"                String input \u003d in.nextLine();","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"tayruxin"},"content":"                int number \u003d tasks.num();","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"tayruxin"},"content":"                Parser.parseInput(input, tasks, number, filePath, ui, storage);","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"tayruxin"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"tayruxin"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"tayruxin"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":46,"author":{"gitId":"tayruxin"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"tayruxin"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"tayruxin"},"content":"        new Duke(\"./duke.txt\").run();","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"tayruxin"},"content":"    public void getDukeResponse(String userInput) {","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"tayruxin"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"tayruxin"},"content":"            int number \u003d tasks.num();","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"tayruxin"},"content":"            Parser.parseInput(userInput, tasks, number, filePath, gui, storage);","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"tayruxin"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"tayruxin"},"content":"            gui.printError(e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"tayruxin"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"tayruxin"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"tayruxin"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"tayruxin"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"tayruxin"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"tayruxin"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"tayruxin"},"content":"        return \"Duke heard: \" + input;","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"tayruxin":69,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayruxin"},"content":"package duke;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tayruxin"},"content":"//CHECKSTYLE.OFF: MissingJavadocMethodCheck","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"tayruxin"},"content":"//CHECKSTYLE.OFF: MissingJavadocType","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"tayruxin"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"tayruxin"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"tayruxin"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"tayruxin"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"tayruxin":9}},{"path":"src/main/java/duke/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayruxin"},"content":"package duke;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"tayruxin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"tayruxin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"tayruxin"},"content":"//CHECKSTYLE.OFF: MissingJavadocMethodCheck","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"tayruxin"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"tayruxin"},"content":" * Represents an event task","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"tayruxin"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"tayruxin"},"content":"public class Events extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"tayruxin"},"content":"    protected LocalDate start;","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"tayruxin"},"content":"    protected LocalDate end;","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"tayruxin"},"content":"    public Events(String description, LocalDate start, LocalDate end) {","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"tayruxin"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"tayruxin"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"tayruxin"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"tayruxin"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"tayruxin"},"content":"     * Return the string representation of an event in the right date format","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"tayruxin"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"tayruxin"},"content":"     * @return string with the right date format","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"tayruxin"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"tayruxin"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"tayruxin"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"tayruxin"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + start.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"tayruxin"},"content":"                + \" to: \" + end.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"tayruxin"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"tayruxin"},"content":"     * Return a string representation that can be saved in the file","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"tayruxin"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"tayruxin"},"content":"     * @return a string representation of the right format to save in the file","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"tayruxin"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"tayruxin"},"content":"    public String save() {","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"tayruxin"},"content":"        return \"E|\" + super.status() + \"|\" + start + \"|\" + end;","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"tayruxin"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"tayruxin":38}},{"path":"src/main/java/duke/Gui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayruxin"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tayruxin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"tayruxin"},"content":"//CHECKSTYLE.OFF: MissingJavadocMethodCheck","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"tayruxin"},"content":"//CHECKSTYLE.OFF: MissingJavadocType","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"tayruxin"},"content":"public class Gui {","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"tayruxin"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"tayruxin"},"content":"    public Gui(MainWindow mainWindow) {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"tayruxin"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"tayruxin"},"content":"        print(\"Hello! I\u0027m Muddy\\n\" + \"What can I do for you?\");","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"tayruxin"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"tayruxin"},"content":"     * Print a message to GUI.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"tayruxin"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"tayruxin"},"content":"     * @param msg The message to print","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"tayruxin"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"tayruxin"},"content":"    public void print(String msg) {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"tayruxin"},"content":"        mainWindow.addDialog(DialogBox.getDukeDialog(msg, mainWindow.getDukeImage()));","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"tayruxin"},"content":"    public void print(ArrayList\u003cString\u003e messages) {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"tayruxin"},"content":"        StringBuilder combinedMessage \u003d new StringBuilder();","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"tayruxin"},"content":"        for (String message : messages) {","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"tayruxin"},"content":"            combinedMessage.append(message).append(\"\\n\");","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"tayruxin"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"tayruxin"},"content":"        mainWindow.addDialog(DialogBox.getDukeDialog(combinedMessage.toString(), mainWindow.getDukeImage()));","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"tayruxin"},"content":"    public void printError(String msg) {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"tayruxin"},"content":"        mainWindow.addDialog(DialogBox.getDukeDialog(msg, mainWindow.getDukeImage()));","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"tayruxin"},"content":"    public void showGoodbyeMessage() {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"tayruxin"},"content":"        print(\"\\\"Bye. Hope to see you again soon!\\\"\");","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"tayruxin"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"tayruxin":41}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayruxin"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tayruxin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"tayruxin"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"tayruxin"},"content":"//CHECKSTYLE.OFF: MissingJavadocMethodCheck","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"tayruxin"},"content":"//CHECKSTYLE.OFF: MissingJavadocType","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"tayruxin"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"tayruxin"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"tayruxin"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"tayruxin"},"content":"public class Launcher {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"tayruxin"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"tayruxin"},"content":"        Application.launch(duke.Main.class, args);","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"tayruxin"},"content":"    public static class TaskList {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"tayruxin"},"content":"        private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"tayruxin"},"content":"        public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"tayruxin"},"content":"            this.tasks \u003d tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"tayruxin"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"tayruxin"},"content":"        public TaskList() {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"tayruxin"},"content":"            tasks \u003d null;","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"tayruxin"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"tayruxin"},"content":"        public ArrayList\u003cTask\u003e task() {","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"tayruxin"},"content":"            return tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"tayruxin"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"tayruxin"},"content":"        public int num() {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"tayruxin"},"content":"            return tasks.size();","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"tayruxin"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"tayruxin"},"content":"        /**","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"tayruxin"},"content":"         * Return the list of task descriptions","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"tayruxin"},"content":"         *","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"tayruxin"},"content":"         * @return an ArrayList with the String of description of each task in the file","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"tayruxin"},"content":"         */","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"tayruxin"},"content":"        public ArrayList\u003cString\u003e listTasks() {","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"tayruxin"},"content":"            ArrayList\u003cString\u003e msg \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"tayruxin"},"content":"            if (tasks.isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"tayruxin"},"content":"                msg.add(\"List is empty\");","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"tayruxin"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"tayruxin"},"content":"            System.out.println(\"List:\");","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"tayruxin"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"tayruxin"},"content":"                Task task \u003d tasks.get(i);","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"tayruxin"},"content":"                msg.add((i + 1) + \". \" + task.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"tayruxin"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"tayruxin"},"content":"            return msg;","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"tayruxin"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"tayruxin"},"content":"        /**","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"tayruxin"},"content":"         * Mark the task as done","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"tayruxin"},"content":"         *","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"tayruxin"},"content":"         * @param input string that user key in to dictate which task to mark","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"tayruxin"},"content":"         * @param number number of tasks in the list","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"tayruxin"},"content":"         */","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"tayruxin"},"content":"        public String mark(String input, int number) {","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"tayruxin"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"tayruxin"},"content":"                int taskIndex \u003d Integer.parseInt(input.substring(5).trim()) - 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"tayruxin"},"content":"                if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c number) {","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"tayruxin"},"content":"                    Task item \u003d tasks.get(taskIndex);","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"tayruxin"},"content":"                    item.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"tayruxin"},"content":"                    return (\"Nice! I\u0027ve marked this task as done: \\n\" + item.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"tayruxin"},"content":"                } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"tayruxin"},"content":"                    return (\"You have chosen an invalid task\");","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"tayruxin"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"tayruxin"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"tayruxin"},"content":"                return (\"Invalid input. Please provide a valid task number.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"tayruxin"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"tayruxin"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"tayruxin"},"content":"        /**","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"tayruxin"},"content":"         * Mark task as undone","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"tayruxin"},"content":"         *","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"tayruxin"},"content":"         * @param input string that user key in to dictate which task to unmark","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"tayruxin"},"content":"         * @param number number of tasks in the list","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"tayruxin"},"content":"         */","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"tayruxin"},"content":"        public String unmark(String input, int number) {","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"tayruxin"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"tayruxin"},"content":"                int taskIndex \u003d Integer.parseInt(input.substring(7).trim()) - 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"tayruxin"},"content":"                if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c number) {","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"tayruxin"},"content":"                    Task item \u003d tasks.get(taskIndex);","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"tayruxin"},"content":"                    item.markAsNotDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"tayruxin"},"content":"                    return (\"OK, I\u0027ve marked this task as not done yet: \\n\" + item.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"tayruxin"},"content":"                } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"tayruxin"},"content":"                    return (\"You have chosen an invalid task\");","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"tayruxin"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"tayruxin"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"tayruxin"},"content":"                return (\"Invalid input. Please provide a valid task number.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"tayruxin"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"tayruxin"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"tayruxin"},"content":"        /**","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"tayruxin"},"content":"         * Remove the task from the list","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"tayruxin"},"content":"         *","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"tayruxin"},"content":"         * @param input string that user key in to dictate which task to delete","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"tayruxin"},"content":"         * @param number number of task in the list","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"tayruxin"},"content":"         * @return the number of task in the list after deleting","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"tayruxin"},"content":"         */","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"tayruxin"},"content":"        public int delete(String input, int number, Gui gui) {","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"tayruxin"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"tayruxin"},"content":"                int taskIndex \u003d Integer.parseInt(input.substring(7).trim()) - 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"tayruxin"},"content":"                if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c number) {","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"tayruxin"},"content":"                    Task item \u003d tasks.get(taskIndex);","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"tayruxin"},"content":"                    tasks.remove(taskIndex);","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"tayruxin"},"content":"                    number--;","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"tayruxin"},"content":"                    StringBuilder combinedMessage \u003d new StringBuilder();","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"tayruxin"},"content":"                    combinedMessage.append(\"Noted. I\u0027ve removed this task:\").append(\"\\n\");","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"tayruxin"},"content":"                    combinedMessage.append(item.toString()).append(\"\\n\");","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"tayruxin"},"content":"                    combinedMessage.append(\"Now you have \" + number + \" tasks in the list\");","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"tayruxin"},"content":"                    gui.print(combinedMessage.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"tayruxin"},"content":"                    return number;","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"tayruxin"},"content":"                } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"tayruxin"},"content":"                    gui.print(\"You have chosen an invalid task\");","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"tayruxin"},"content":"                    return number;","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"tayruxin"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"tayruxin"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"tayruxin"},"content":"                gui.print(\"Invalid input. Please provide a valid task number.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"tayruxin"},"content":"                return number;","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"tayruxin"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"tayruxin"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"tayruxin"},"content":"        /**","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"tayruxin"},"content":"         * Add the given task to the ArrayList","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"tayruxin"},"content":"         * @param task task to be added into the ArrayList","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"tayruxin"},"content":"         */","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"tayruxin"},"content":"        public void add(Task task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"tayruxin"},"content":"            tasks.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"tayruxin"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"tayruxin"},"content":"        public ArrayList\u003cString\u003e find(String input) {","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"tayruxin"},"content":"            String trimmedInput \u003d input.substring(5).trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"tayruxin"},"content":"            ArrayList\u003cString\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"tayruxin"},"content":"            int number \u003d 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"tayruxin"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"tayruxin"},"content":"                if (task.getDescription().contains(trimmedInput)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"tayruxin"},"content":"                    String string \u003d task.toString();","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"tayruxin"},"content":"                    matchingTasks.add(number + \".\" + string);","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"tayruxin"},"content":"                    number++;","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"tayruxin"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"tayruxin"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"tayruxin"},"content":"            if (!matchingTasks.isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"tayruxin"},"content":"                matchingTasks.add(0, \"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"tayruxin"},"content":"                return matchingTasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"tayruxin"},"content":"            } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"tayruxin"},"content":"                matchingTasks.add(\"There are no matching tasks in your list\");","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"tayruxin"},"content":"                return matchingTasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":154,"author":{"gitId":"tayruxin"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":155,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"tayruxin"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":157,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":158,"author":{"gitId":"tayruxin"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"tayruxin":158}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayruxin"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tayruxin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"tayruxin"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"tayruxin"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"tayruxin"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"tayruxin"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"tayruxin"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"tayruxin"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"tayruxin"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"tayruxin"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"tayruxin"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"tayruxin"},"content":"    private Duke duke \u003d new Duke(\"./duke.txt\");","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"tayruxin"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"tayruxin"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"tayruxin"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"tayruxin"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"tayruxin"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"tayruxin"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"tayruxin"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"tayruxin"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"tayruxin"},"content":"            Gui gui \u003d new Gui(fxmlLoader.\u003cMainWindow\u003egetController());","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"tayruxin"},"content":"            duke.setGui(gui);","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"tayruxin"},"content":"            stage.show();","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"tayruxin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"tayruxin"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"tayruxin"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"tayruxin"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"tayruxin":34}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayruxin"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tayruxin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"tayruxin"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"tayruxin"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"tayruxin"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"tayruxin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"tayruxin"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"tayruxin"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"tayruxin"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"tayruxin"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"tayruxin"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"tayruxin"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"tayruxin"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"tayruxin"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"tayruxin"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"tayruxin"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"tayruxin"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"tayruxin"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"tayruxin"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"tayruxin"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"tayruxin"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"tayruxin"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"tayruxin"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"tayruxin"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"tayruxin"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"tayruxin"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"tayruxin"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"tayruxin"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"tayruxin"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"tayruxin"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"tayruxin"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"tayruxin"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"tayruxin"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"tayruxin"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"tayruxin"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"tayruxin"},"content":"        addDialog(DialogBox.getUserDialog(input, userImage));","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"tayruxin"},"content":"        duke.getDukeResponse(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"tayruxin"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"tayruxin"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"tayruxin"},"content":"    protected void addDialog(DialogBox ... dialogBox) {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"tayruxin"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"tayruxin"},"content":"                dialogBox","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"tayruxin"},"content":"        );","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"tayruxin"},"content":"    public Image getDukeImage() {","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"tayruxin"},"content":"        return dukeImage;","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"tayruxin"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"tayruxin":61}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayruxin"},"content":"package duke;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tayruxin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"tayruxin"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"tayruxin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"tayruxin"},"content":"//CHECKSTYLE.OFF: MissingJavadocMethodCheck","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"tayruxin"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"tayruxin"},"content":" * Class that is responsible for handling the input of the user","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"tayruxin"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"tayruxin"},"content":"public class Parser {","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"tayruxin"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"tayruxin"},"content":"     * Read the input from the user and carry out the required action for text-based UI","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"tayruxin"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"tayruxin"},"content":"     * @param input input from the user","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"tayruxin"},"content":"     * @param list TaskList created","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"tayruxin"},"content":"     * @param number number of task in the list","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"tayruxin"},"content":"     * @param filePath path of the storage file","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"tayruxin"},"content":"     * @param ui the UI class response for handling ui actions","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"tayruxin"},"content":"     * @param storage storage class that handles the loading and saving of files","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"tayruxin"},"content":"     * @throws DukeException if the input does not much the required format","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"tayruxin"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"tayruxin"},"content":"    public static void parseInput(String input, Launcher.TaskList list, int number,","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"tayruxin"},"content":"                                  String filePath, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"tayruxin"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"tayruxin"},"content":"            ui.showGoodbyeMessage();","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"tayruxin"},"content":"            storage.saveTasksToFile(list.task());","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"tayruxin"},"content":"            System.exit(0);","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"tayruxin"},"content":"        } else if (input.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"tayruxin"},"content":"            ui.print(list.listTasks());","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"tayruxin"},"content":"        } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"tayruxin"},"content":"            ui.print(list.mark(input, number));","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"tayruxin"},"content":"        } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"tayruxin"},"content":"            list.unmark(input, number);","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"tayruxin"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"tayruxin"},"content":"            number \u003d 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"tayruxin"},"content":"        } else if (input.equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"tayruxin"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"tayruxin"},"content":"        } else if (input.equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"tayruxin"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"tayruxin"},"content":"        } else if (input.equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"tayruxin"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"tayruxin"},"content":"        } else if (input.equalsIgnoreCase(\"find\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"tayruxin"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of find cannot be empty.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"tayruxin"},"content":"        } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"tayruxin"},"content":"            ui.print(list.find(input));","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"tayruxin"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"tayruxin"},"content":"            String task \u003d input.substring(5).trim();","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"tayruxin"},"content":"            ToDo todo \u003d new ToDo(task);","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"tayruxin"},"content":"            list.add(todo);","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"tayruxin"},"content":"            number++;","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"tayruxin"},"content":"            ui.print(\"Got it. I\u0027ve added this task:\\n \" + todo.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"tayruxin"},"content":"            System.out.println(\"Now you have \" + (number) + \" tasks in the list.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"tayruxin"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"tayruxin"},"content":"            // Implement deadline logic here","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"tayruxin"},"content":"            int byIndex \u003d input.indexOf(\"/by\");","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"tayruxin"},"content":"            if (byIndex !\u003d -1) {","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"tayruxin"},"content":"                LocalDate d1;","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"tayruxin"},"content":"                LocalTime t1 \u003d null;","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"tayruxin"},"content":"                Deadline deadline;","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"tayruxin"},"content":"                String task \u003d input.substring(9, byIndex).trim(); // Task description","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"tayruxin"},"content":"                String date \u003d input.substring(byIndex + 3).trim(); // Deadline day","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"tayruxin"},"content":"                if (date.contains(\" \")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"tayruxin"},"content":"                    String[] parts \u003d date.split(\" \");","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"tayruxin"},"content":"                    String dateString \u003d parts[0];","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"tayruxin"},"content":"                    String timeString \u003d parts[1];","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"tayruxin"},"content":"                    d1 \u003d LocalDate.parse(dateString, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"tayruxin"},"content":"                    t1 \u003d LocalTime.parse(timeString, DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"tayruxin"},"content":"                    deadline \u003d new Deadline(task, d1, t1);","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"tayruxin"},"content":"                } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"tayruxin"},"content":"                    d1 \u003d LocalDate.parse(date, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"tayruxin"},"content":"                    deadline \u003d new Deadline(task, d1, t1);","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"tayruxin"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"tayruxin"},"content":"                list.add(deadline);","lastModifiedDate":"2023-08-26"},{"lineNumber":79,"author":{"gitId":"tayruxin"},"content":"                number++;","lastModifiedDate":"2023-08-26"},{"lineNumber":80,"author":{"gitId":"tayruxin"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\\n\" + deadline.toString());","lastModifiedDate":"2023-08-26"},{"lineNumber":81,"author":{"gitId":"tayruxin"},"content":"                System.out.println(\"Now you have \" + (number) + \" tasks in the list.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":82,"author":{"gitId":"tayruxin"},"content":"            } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":83,"author":{"gitId":"tayruxin"},"content":"                throw new DukeException(\"Invalid input format.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":84,"author":{"gitId":"tayruxin"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":85,"author":{"gitId":"tayruxin"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":86,"author":{"gitId":"tayruxin"},"content":"            // Implement event logic here","lastModifiedDate":"2023-08-26"},{"lineNumber":87,"author":{"gitId":"tayruxin"},"content":"            int fromIndex \u003d input.indexOf(\"/from\");","lastModifiedDate":"2023-08-26"},{"lineNumber":88,"author":{"gitId":"tayruxin"},"content":"            int toIndex \u003d input.indexOf(\"/to\");","lastModifiedDate":"2023-08-26"},{"lineNumber":89,"author":{"gitId":"tayruxin"},"content":"            if (fromIndex !\u003d -1 \u0026\u0026 toIndex !\u003d -1) {","lastModifiedDate":"2023-08-26"},{"lineNumber":90,"author":{"gitId":"tayruxin"},"content":"                String task \u003d input.substring(6, fromIndex).trim(); // Task description","lastModifiedDate":"2023-08-26"},{"lineNumber":91,"author":{"gitId":"tayruxin"},"content":"                String startDate \u003d input.substring(fromIndex + 6, toIndex).trim(); // Start date","lastModifiedDate":"2023-08-26"},{"lineNumber":92,"author":{"gitId":"tayruxin"},"content":"                String endDate \u003d input.substring(toIndex + 4).trim(); // End date","lastModifiedDate":"2023-08-26"},{"lineNumber":93,"author":{"gitId":"tayruxin"},"content":"                LocalDate d1 \u003d LocalDate.parse(startDate);","lastModifiedDate":"2023-08-26"},{"lineNumber":94,"author":{"gitId":"tayruxin"},"content":"                LocalDate d2 \u003d LocalDate.parse(endDate);","lastModifiedDate":"2023-08-26"},{"lineNumber":95,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":96,"author":{"gitId":"tayruxin"},"content":"                Events event \u003d new Events(task, d1, d2);","lastModifiedDate":"2023-08-26"},{"lineNumber":97,"author":{"gitId":"tayruxin"},"content":"                list.add(event);","lastModifiedDate":"2023-08-26"},{"lineNumber":98,"author":{"gitId":"tayruxin"},"content":"                number++;","lastModifiedDate":"2023-08-26"},{"lineNumber":99,"author":{"gitId":"tayruxin"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\\n\" + event.toString());","lastModifiedDate":"2023-08-26"},{"lineNumber":100,"author":{"gitId":"tayruxin"},"content":"                System.out.println(\"Now you have \" + (number) + \" tasks in the list.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":101,"author":{"gitId":"tayruxin"},"content":"            } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":102,"author":{"gitId":"tayruxin"},"content":"                throw new DukeException(\"Invalid input format.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":103,"author":{"gitId":"tayruxin"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":104,"author":{"gitId":"tayruxin"},"content":"        } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":105,"author":{"gitId":"tayruxin"},"content":"            ui.print(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-27"},{"lineNumber":106,"author":{"gitId":"tayruxin"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":107,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":108,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"tayruxin"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"tayruxin"},"content":"     * Read the input from the user and carry out the required action for Gui","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"tayruxin"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"tayruxin"},"content":"     * @param input input from the user","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"tayruxin"},"content":"     * @param list TaskList created","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"tayruxin"},"content":"     * @param number number of task in the list","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"tayruxin"},"content":"     * @param filePath path of the storage file","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"tayruxin"},"content":"     * @param ui the UI class response for handling ui actions","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"tayruxin"},"content":"     * @param storage storage class that handles the loading and saving of files","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"tayruxin"},"content":"     * @throws DukeException if the input does not much the required format","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"tayruxin"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"tayruxin"},"content":"    public static void parseInput(String input, Launcher.TaskList list, int number,","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"tayruxin"},"content":"                                  String filePath, Gui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"tayruxin"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"tayruxin"},"content":"            ui.showGoodbyeMessage();","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"tayruxin"},"content":"            storage.saveTasksToFile(list.task());","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"tayruxin"},"content":"            System.exit(0);","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"tayruxin"},"content":"        } else if (input.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"tayruxin"},"content":"            ui.print(list.listTasks());","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"tayruxin"},"content":"        } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"tayruxin"},"content":"            ui.print(list.mark(input, number));","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"tayruxin"},"content":"        } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"tayruxin"},"content":"            list.unmark(input, number);","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"tayruxin"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"tayruxin"},"content":"            number \u003d list.delete(input, number, ui);","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"tayruxin"},"content":"        } else if (input.equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"tayruxin"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"tayruxin"},"content":"        } else if (input.equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"tayruxin"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"tayruxin"},"content":"        } else if (input.equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"tayruxin"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"tayruxin"},"content":"        } else if (input.equalsIgnoreCase(\"find\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"tayruxin"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of find cannot be empty.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"tayruxin"},"content":"        } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"tayruxin"},"content":"            ui.print(list.find(input));","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"tayruxin"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"tayruxin"},"content":"            String task \u003d input.substring(5).trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"tayruxin"},"content":"            ToDo todo \u003d new ToDo(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"tayruxin"},"content":"            list.add(todo);","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"tayruxin"},"content":"            number++;","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"tayruxin"},"content":"            ui.print(\"Got it. I\u0027ve added this task:\\n\" + todo.toString()","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"tayruxin"},"content":"                    + \" \\n Now you have \" + (number) + \" tasks in the list.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":154,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":155,"author":{"gitId":"tayruxin"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"tayruxin"},"content":"            // Implement deadline logic here","lastModifiedDate":"2023-09-02"},{"lineNumber":157,"author":{"gitId":"tayruxin"},"content":"            int byIndex \u003d input.indexOf(\"/by\");","lastModifiedDate":"2023-09-02"},{"lineNumber":158,"author":{"gitId":"tayruxin"},"content":"            if (byIndex !\u003d -1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":159,"author":{"gitId":"tayruxin"},"content":"                LocalDate d1;","lastModifiedDate":"2023-09-02"},{"lineNumber":160,"author":{"gitId":"tayruxin"},"content":"                LocalTime t1 \u003d null;","lastModifiedDate":"2023-09-02"},{"lineNumber":161,"author":{"gitId":"tayruxin"},"content":"                Deadline deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":162,"author":{"gitId":"tayruxin"},"content":"                String task \u003d input.substring(9, byIndex).trim(); // Task description","lastModifiedDate":"2023-09-02"},{"lineNumber":163,"author":{"gitId":"tayruxin"},"content":"                String date \u003d input.substring(byIndex + 3).trim(); // Deadline day","lastModifiedDate":"2023-09-02"},{"lineNumber":164,"author":{"gitId":"tayruxin"},"content":"                if (date.contains(\" \")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":165,"author":{"gitId":"tayruxin"},"content":"                    String[] parts \u003d date.split(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":166,"author":{"gitId":"tayruxin"},"content":"                    String dateString \u003d parts[0];","lastModifiedDate":"2023-09-02"},{"lineNumber":167,"author":{"gitId":"tayruxin"},"content":"                    String timeString \u003d parts[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":168,"author":{"gitId":"tayruxin"},"content":"                    d1 \u003d LocalDate.parse(dateString, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":169,"author":{"gitId":"tayruxin"},"content":"                    t1 \u003d LocalTime.parse(timeString, DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":170,"author":{"gitId":"tayruxin"},"content":"                    deadline \u003d new Deadline(task, d1, t1);","lastModifiedDate":"2023-09-02"},{"lineNumber":171,"author":{"gitId":"tayruxin"},"content":"                } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":172,"author":{"gitId":"tayruxin"},"content":"                    d1 \u003d LocalDate.parse(date, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":173,"author":{"gitId":"tayruxin"},"content":"                    deadline \u003d new Deadline(task, d1, t1);","lastModifiedDate":"2023-09-02"},{"lineNumber":174,"author":{"gitId":"tayruxin"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":175,"author":{"gitId":"tayruxin"},"content":"                list.add(deadline);","lastModifiedDate":"2023-09-02"},{"lineNumber":176,"author":{"gitId":"tayruxin"},"content":"                number++;","lastModifiedDate":"2023-09-02"},{"lineNumber":177,"author":{"gitId":"tayruxin"},"content":"                ui.print(\"Got it. I\u0027ve added this task:\\n\" + deadline.toString()","lastModifiedDate":"2023-09-02"},{"lineNumber":178,"author":{"gitId":"tayruxin"},"content":"                        + \"\\n Now you have \" + (number) + \" tasks in the list.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":179,"author":{"gitId":"tayruxin"},"content":"            } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":180,"author":{"gitId":"tayruxin"},"content":"                throw new DukeException(\"Invalid input format.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":181,"author":{"gitId":"tayruxin"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":182,"author":{"gitId":"tayruxin"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":183,"author":{"gitId":"tayruxin"},"content":"            // Implement event logic here","lastModifiedDate":"2023-09-02"},{"lineNumber":184,"author":{"gitId":"tayruxin"},"content":"            int fromIndex \u003d input.indexOf(\"/from\");","lastModifiedDate":"2023-09-02"},{"lineNumber":185,"author":{"gitId":"tayruxin"},"content":"            int toIndex \u003d input.indexOf(\"/to\");","lastModifiedDate":"2023-09-02"},{"lineNumber":186,"author":{"gitId":"tayruxin"},"content":"            if (fromIndex !\u003d -1 \u0026\u0026 toIndex !\u003d -1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":187,"author":{"gitId":"tayruxin"},"content":"                String task \u003d input.substring(6, fromIndex).trim(); // Task description","lastModifiedDate":"2023-09-02"},{"lineNumber":188,"author":{"gitId":"tayruxin"},"content":"                String startDate \u003d input.substring(fromIndex + 6, toIndex).trim(); // Start date","lastModifiedDate":"2023-09-02"},{"lineNumber":189,"author":{"gitId":"tayruxin"},"content":"                String endDate \u003d input.substring(toIndex + 4).trim(); // End date","lastModifiedDate":"2023-09-02"},{"lineNumber":190,"author":{"gitId":"tayruxin"},"content":"                LocalDate d1 \u003d LocalDate.parse(startDate);","lastModifiedDate":"2023-09-02"},{"lineNumber":191,"author":{"gitId":"tayruxin"},"content":"                LocalDate d2 \u003d LocalDate.parse(endDate);","lastModifiedDate":"2023-09-02"},{"lineNumber":192,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":193,"author":{"gitId":"tayruxin"},"content":"                Events event \u003d new Events(task, d1, d2);","lastModifiedDate":"2023-09-02"},{"lineNumber":194,"author":{"gitId":"tayruxin"},"content":"                list.add(event);","lastModifiedDate":"2023-09-02"},{"lineNumber":195,"author":{"gitId":"tayruxin"},"content":"                number++;","lastModifiedDate":"2023-09-02"},{"lineNumber":196,"author":{"gitId":"tayruxin"},"content":"                ui.print(\"Got it. I\u0027ve added this task:\\n\" + event.toString()","lastModifiedDate":"2023-09-02"},{"lineNumber":197,"author":{"gitId":"tayruxin"},"content":"                        + \"\\n Now you have \" + (number) + \" tasks in the list.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":198,"author":{"gitId":"tayruxin"},"content":"            } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":199,"author":{"gitId":"tayruxin"},"content":"                throw new DukeException(\"Invalid input format.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":200,"author":{"gitId":"tayruxin"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":201,"author":{"gitId":"tayruxin"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":202,"author":{"gitId":"tayruxin"},"content":"            ui.print(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-02"},{"lineNumber":203,"author":{"gitId":"tayruxin"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":204,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":205,"author":{"gitId":"tayruxin"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":206,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"tayruxin":206}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayruxin"},"content":"package duke;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"tayruxin"},"content":"import java.io.File;","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tayruxin"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"tayruxin"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"tayruxin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"tayruxin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"tayruxin"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"tayruxin"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"tayruxin"},"content":" * A class to handle all the loading and saving of tasks from the file","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"tayruxin"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"tayruxin"},"content":"public class Storage {","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"tayruxin"},"content":"    private String filePath;","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"tayruxin"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"tayruxin"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"tayruxin"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"tayruxin"},"content":"     * Load the list of tasks from the storage file","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"tayruxin"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"tayruxin"},"content":"     * @return the array list containing all the task from the file","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"tayruxin"},"content":"     * @throws DukeException if file is not found or there is IO excpetion","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"tayruxin"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"tayruxin"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"tayruxin"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"tayruxin"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"tayruxin"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"tayruxin"},"content":"            if (!f.exists()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"tayruxin"},"content":"                if (f.createNewFile()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"tayruxin"},"content":"                    System.out.println(\"File created: \" + f.getName());","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"tayruxin"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"tayruxin"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"tayruxin"},"content":"            Scanner scanner \u003d new Scanner(f);","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"tayruxin"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"tayruxin"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"tayruxin"},"content":"                if (!line.trim().isEmpty()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"tayruxin"},"content":"                    Task task \u003d Task.fromString(line);","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"tayruxin"},"content":"                    tasks.add(task);","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"tayruxin"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"tayruxin"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"tayruxin"},"content":"            scanner.close();","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"tayruxin"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"tayruxin"},"content":"            throw new DukeException(\"File not found: \" + e.getMessage());","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"tayruxin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"tayruxin"},"content":"            throw new DukeException(\"Error creating file\" + e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"tayruxin"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"tayruxin"},"content":"        return tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"tayruxin"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"tayruxin"},"content":"     * Save the list of tasks to the storage file","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"tayruxin"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"tayruxin"},"content":"     * @param list the list of task that has been edited","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"tayruxin"},"content":"     * @throws DukeException if there is error saving to the file","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"tayruxin"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"tayruxin"},"content":"    public void saveTasksToFile(ArrayList\u003cTask\u003e list) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"tayruxin"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"tayruxin"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"tayruxin"},"content":"            for (Task task : list) {","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"tayruxin"},"content":"                fw.write(task.save());","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"tayruxin"},"content":"                fw.write(System.lineSeparator());","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"tayruxin"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"tayruxin"},"content":"            fw.close();","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"tayruxin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"tayruxin"},"content":"            throw new DukeException(\"Error saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"tayruxin"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"tayruxin"},"content":"}","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"tayruxin":71}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayruxin"},"content":"package duke;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"tayruxin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"tayruxin"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"tayruxin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"tayruxin"},"content":"//CHECKSTYLE.OFF: MissingJavadocMethodCheck","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"tayruxin"},"content":"//CHECKSTYLE.OFF: MissingJavadocType","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"tayruxin"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"tayruxin"},"content":"    protected String description;","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"tayruxin"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"tayruxin"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"tayruxin"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"tayruxin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"tayruxin"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"tayruxin"},"content":"     * Return the right representation for whether the task is done","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"tayruxin"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"tayruxin"},"content":"     * @return string X if done and white space if not done","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"tayruxin"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"tayruxin"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"tayruxin"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"tayruxin"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"tayruxin"},"content":"     * Change boolean of isDone to true","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"tayruxin"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"tayruxin"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"tayruxin"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"tayruxin"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"tayruxin"},"content":"     * Change boolean of isDone to false","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"tayruxin"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"tayruxin"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"tayruxin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"tayruxin"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"tayruxin"},"content":"        return description;","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"tayruxin"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"tayruxin"},"content":"     * Reutrn the string representation of boolean isDone","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"tayruxin"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"tayruxin"},"content":"     * @return string [X] for done and [ ] for not done","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"tayruxin"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"tayruxin"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"tayruxin"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":49,"author":{"gitId":"tayruxin"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-08-20"},{"lineNumber":50,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":51,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"tayruxin"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"tayruxin"},"content":"     * Return the right string representation for saving to file","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"tayruxin"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"tayruxin"},"content":"     * @return string 1 for done and 0 for not done","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"tayruxin"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"tayruxin"},"content":"    public String status() {","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"tayruxin"},"content":"        String done \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"tayruxin"},"content":"        return done + \"|\" + description;","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"tayruxin"},"content":"    public abstract String save();","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"tayruxin"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"tayruxin"},"content":"     * Return the task by reading the detail of the task from the file","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"tayruxin"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"tayruxin"},"content":"     * @param taskString the description of the task from the file","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"tayruxin"},"content":"     * @return the task fitting the description","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"tayruxin"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"tayruxin"},"content":"    public static Task fromString(String taskString) {","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"tayruxin"},"content":"        String[] parts \u003d taskString.split(\"\\\\|\");","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"tayruxin"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"tayruxin"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"tayruxin"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"tayruxin"},"content":"        switch (type) {","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"tayruxin"},"content":"        case \"T\":","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"tayruxin"},"content":"            Task task \u003d new ToDo(description);","lastModifiedDate":"2023-08-26"},{"lineNumber":79,"author":{"gitId":"tayruxin"},"content":"            if (isDone) {","lastModifiedDate":"2023-08-26"},{"lineNumber":80,"author":{"gitId":"tayruxin"},"content":"                task.markAsDone();","lastModifiedDate":"2023-08-26"},{"lineNumber":81,"author":{"gitId":"tayruxin"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":82,"author":{"gitId":"tayruxin"},"content":"            return task;","lastModifiedDate":"2023-08-26"},{"lineNumber":83,"author":{"gitId":"tayruxin"},"content":"        case \"D\":","lastModifiedDate":"2023-08-26"},{"lineNumber":84,"author":{"gitId":"tayruxin"},"content":"            String byString \u003d parts[3].trim(); // Extract deadline","lastModifiedDate":"2023-08-26"},{"lineNumber":85,"author":{"gitId":"tayruxin"},"content":"            if (byString.contains(\" \")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":86,"author":{"gitId":"tayruxin"},"content":"                String[] part \u003d byString.split(\" \");","lastModifiedDate":"2023-08-26"},{"lineNumber":87,"author":{"gitId":"tayruxin"},"content":"                String dateString \u003d part[0];","lastModifiedDate":"2023-08-26"},{"lineNumber":88,"author":{"gitId":"tayruxin"},"content":"                String timeString \u003d part[1];","lastModifiedDate":"2023-08-26"},{"lineNumber":89,"author":{"gitId":"tayruxin"},"content":"                LocalDate d1;","lastModifiedDate":"2023-08-26"},{"lineNumber":90,"author":{"gitId":"tayruxin"},"content":"                LocalTime t1;","lastModifiedDate":"2023-08-26"},{"lineNumber":91,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":92,"author":{"gitId":"tayruxin"},"content":"                d1 \u003d LocalDate.parse(dateString, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-08-26"},{"lineNumber":93,"author":{"gitId":"tayruxin"},"content":"                t1 \u003d LocalTime.parse(timeString, DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2023-08-26"},{"lineNumber":94,"author":{"gitId":"tayruxin"},"content":"                Task deadline \u003d new Deadline(description, d1, t1);","lastModifiedDate":"2023-08-26"},{"lineNumber":95,"author":{"gitId":"tayruxin"},"content":"                if (isDone) {","lastModifiedDate":"2023-08-26"},{"lineNumber":96,"author":{"gitId":"tayruxin"},"content":"                    deadline.markAsDone();","lastModifiedDate":"2023-08-26"},{"lineNumber":97,"author":{"gitId":"tayruxin"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":98,"author":{"gitId":"tayruxin"},"content":"                return deadline;","lastModifiedDate":"2023-08-26"},{"lineNumber":99,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":100,"author":{"gitId":"tayruxin"},"content":"            } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":101,"author":{"gitId":"tayruxin"},"content":"                LocalDate byDate \u003d LocalDate.parse(byString, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-08-26"},{"lineNumber":102,"author":{"gitId":"tayruxin"},"content":"                Task deadline \u003d new Deadline(description, byDate, null);","lastModifiedDate":"2023-08-26"},{"lineNumber":103,"author":{"gitId":"tayruxin"},"content":"                if (isDone) {","lastModifiedDate":"2023-08-26"},{"lineNumber":104,"author":{"gitId":"tayruxin"},"content":"                    deadline.markAsDone();","lastModifiedDate":"2023-08-26"},{"lineNumber":105,"author":{"gitId":"tayruxin"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":106,"author":{"gitId":"tayruxin"},"content":"                return deadline;","lastModifiedDate":"2023-08-26"},{"lineNumber":107,"author":{"gitId":"tayruxin"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":108,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":109,"author":{"gitId":"tayruxin"},"content":"        case \"E\":","lastModifiedDate":"2023-08-26"},{"lineNumber":110,"author":{"gitId":"tayruxin"},"content":"            String fromString \u003d parts[3]; // Extract start date","lastModifiedDate":"2023-08-26"},{"lineNumber":111,"author":{"gitId":"tayruxin"},"content":"            LocalDate fromDate \u003d LocalDate.parse(fromString, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-08-26"},{"lineNumber":112,"author":{"gitId":"tayruxin"},"content":"            String toString \u003d parts[4]; // Extract end date","lastModifiedDate":"2023-08-26"},{"lineNumber":113,"author":{"gitId":"tayruxin"},"content":"            LocalDate toDate \u003d LocalDate.parse(toString, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-08-26"},{"lineNumber":114,"author":{"gitId":"tayruxin"},"content":"            Task event \u003d new Events(description, fromDate, toDate);","lastModifiedDate":"2023-08-26"},{"lineNumber":115,"author":{"gitId":"tayruxin"},"content":"            if (isDone) {","lastModifiedDate":"2023-08-26"},{"lineNumber":116,"author":{"gitId":"tayruxin"},"content":"                event.markAsDone();","lastModifiedDate":"2023-08-26"},{"lineNumber":117,"author":{"gitId":"tayruxin"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":118,"author":{"gitId":"tayruxin"},"content":"            return event;","lastModifiedDate":"2023-08-26"},{"lineNumber":119,"author":{"gitId":"tayruxin"},"content":"        default:","lastModifiedDate":"2023-08-26"},{"lineNumber":120,"author":{"gitId":"tayruxin"},"content":"            throw new IllegalArgumentException(\"Unknown task type: \" + type);","lastModifiedDate":"2023-08-26"},{"lineNumber":121,"author":{"gitId":"tayruxin"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":122,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":123,"author":{"gitId":"tayruxin"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"tayruxin":123}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayruxin"},"content":"package duke;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tayruxin"},"content":"//CHECKSTYLE.OFF: MissingJavadocMethodCheck","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"tayruxin"},"content":"//CHECKSTYLE.OFF: MissingJavadocType","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"tayruxin"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"tayruxin"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"tayruxin"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"tayruxin"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"tayruxin"},"content":"     * Return the string representation of the task","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"tayruxin"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"tayruxin"},"content":"     * @return string the description of task","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"tayruxin"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"tayruxin"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"tayruxin"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"tayruxin"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"tayruxin"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"tayruxin"},"content":"     * Return the string representation of the task to be saved","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"tayruxin"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"tayruxin"},"content":"     * @return the right format of description of task to save into the file","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"tayruxin"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"tayruxin"},"content":"    public String save() {","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"tayruxin"},"content":"        return \"T|\" + super.status();","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"tayruxin"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"tayruxin":30}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayruxin"},"content":"package duke;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"tayruxin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"tayruxin"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"tayruxin"},"content":"//CHECKSTYLE.OFF: MissingJavadocMethodCheck","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"tayruxin"},"content":"//CHECKSTYLE.OFF: MissingJavadocType","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"tayruxin"},"content":"public class Ui {","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"tayruxin"},"content":"    // Assuming you have a TextArea in your JavaFX application layout","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"tayruxin"},"content":"    private TextArea messageTextArea;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"tayruxin"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"tayruxin"},"content":"     * Print the message when the chatbot first starts","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"tayruxin"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"tayruxin"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"tayruxin"},"content":"        System.out.println(\"Hello! I\u0027m Muddy\\n\" + \"What can I do for you?\");","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"tayruxin"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"tayruxin"},"content":"     * Print the message when the chatbot exits","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"tayruxin"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"tayruxin"},"content":"    public void showGoodbyeMessage() {","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"tayruxin"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"tayruxin"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"tayruxin"},"content":"     * Print the error message","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"tayruxin"},"content":"     * @param errorMessage error message to be printer","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"tayruxin"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"tayruxin"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"tayruxin"},"content":"        System.out.println(\"Error: \" + errorMessage);","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"tayruxin"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"tayruxin"},"content":"     * Print the given message","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"tayruxin"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"tayruxin"},"content":"     * @param message message to be printed","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"tayruxin"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"tayruxin"},"content":"    public void print(String message) {","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"tayruxin"},"content":"        System.out.println(message);","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"tayruxin"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"tayruxin"},"content":"     * Prints the list of messages","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"tayruxin"},"content":"     * @param message the ArrayList containing the message to be printed","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"tayruxin"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"tayruxin"},"content":"    public void print(ArrayList\u003cString\u003e message) {","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"tayruxin"},"content":"        for (String s : message) {","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"tayruxin"},"content":"            System.out.println(s);","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"tayruxin"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"tayruxin"},"content":"}","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"tayruxin":58}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tayruxin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tayruxin"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"tayruxin"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"tayruxin"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"tayruxin"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"tayruxin"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"tayruxin"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"tayruxin"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"tayruxin"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" maxHeight\u003d\"1.7976931348623157E308\" \u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"tayruxin"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"tayruxin"},"content":"                \u003cInsets left\u003d\"20.0\" top\u003d\"10.0\" right\u003d\"20.0\" /\u003e \u003c!-- Adjust the top margin as needed --\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"tayruxin"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"tayruxin"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"tayruxin"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"tayruxin"},"content":"            \u003cclip\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"tayruxin"},"content":"                \u003cCircle radius\u003d\"25.0\" centerX\u003d\"25.0\" centerY\u003d\"25.0\" /\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"tayruxin"},"content":"            \u003c/clip\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"tayruxin"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"tayruxin"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"tayruxin"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"tayruxin"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"tayruxin"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"tayruxin"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"tayruxin":25}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tayruxin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tayruxin"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"tayruxin"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"tayruxin"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"tayruxin"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"tayruxin"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"tayruxin"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"tayruxin"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"tayruxin"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"tayruxin"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"tayruxin"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" vbarPolicy\u003d\"ALWAYS\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"tayruxin"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"tayruxin"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: white;\"/\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"tayruxin"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"tayruxin"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"tayruxin"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"tayruxin"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"tayruxin":19}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayruxin"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"tayruxin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"tayruxin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"tayruxin"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"tayruxin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"tayruxin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"tayruxin"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"tayruxin"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"tayruxin"},"content":"    public void testToStringWithoutTime() {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"tayruxin"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report\", LocalDate.parse(\"2023-08-30\"), null);","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"tayruxin"},"content":"        String expectedString \u003d \"[D][ ] Submit report (by: Aug 30 2023)\";","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"tayruxin"},"content":"        assertEquals(expectedString, deadline.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"tayruxin"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"tayruxin"},"content":"    public void testToStringWithTime() {","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"tayruxin"},"content":"        Deadline deadline \u003d new Deadline(\"Assignment\",","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"tayruxin"},"content":"                LocalDate.parse(\"2023-08-25\"), LocalTime.parse(\"14:00\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"tayruxin"},"content":"        String expectedString \u003d \"[D][ ] Assignment (by: Aug 25 2023 02:00 PM)\";","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"tayruxin"},"content":"        assertEquals(expectedString, deadline.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"tayruxin"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"tayruxin"},"content":"    public void testSaveWithoutTime() {","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"tayruxin"},"content":"        Deadline deadline \u003d new Deadline(\"Meeting\", LocalDate.parse(\"2023-08-15\"), null);","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"tayruxin"},"content":"        String expectedSaveString \u003d \"D|0|Meeting|2023-08-15\";","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"tayruxin"},"content":"        assertEquals(expectedSaveString, deadline.save());","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"tayruxin"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"tayruxin"},"content":"    public void testSaveWithTime() {","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"tayruxin"},"content":"        Deadline deadline \u003d new Deadline(\"Project\",","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"tayruxin"},"content":"                LocalDate.parse(\"2023-09-01\"), LocalTime.parse(\"09:30\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"tayruxin"},"content":"        String expectedSaveString \u003d \"D|0|Project|2023-09-01 0930\";","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"tayruxin"},"content":"        assertEquals(expectedSaveString, deadline.save());","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"tayruxin"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"tayruxin":44}},{"path":"src/test/java/duke/EventsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayruxin"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"tayruxin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"tayruxin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"tayruxin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"tayruxin"},"content":"public class EventsTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"tayruxin"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"tayruxin"},"content":"    public void testToString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"tayruxin"},"content":"        Events event \u003d new Events(\"Conference\", LocalDate.parse(\"2023-09-15\"), LocalDate.parse(\"2023-09-17\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"tayruxin"},"content":"        String expectedString \u003d \"[E][ ] Conference(from: Sep 15 2023 to: Sep 17 2023)\";","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"tayruxin"},"content":"        assertEquals(expectedString, event.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"tayruxin"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"tayruxin"},"content":"    public void testSave() {","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"tayruxin"},"content":"        Events event \u003d new Events(\"Workshop\", LocalDate.parse(\"2023-08-20\"), LocalDate.parse(\"2023-08-21\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"tayruxin"},"content":"        String expectedSaveString \u003d \"E|0|Workshop|2023-08-20|2023-08-21\";","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"tayruxin"},"content":"        assertEquals(expectedSaveString, event.save());","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"tayruxin"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"tayruxin":23}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayruxin"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"tayruxin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"tayruxin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"tayruxin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"tayruxin"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"tayruxin"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"tayruxin"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"tayruxin"},"content":"    public void testAddTask() {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"tayruxin"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"tayruxin"},"content":"        Launcher.TaskList taskList \u003d new Launcher.TaskList(tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"tayruxin"},"content":"        ToDo todo \u003d new ToDo(\"Buy groceries\");","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"tayruxin"},"content":"        taskList.add(todo);","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"tayruxin"},"content":"        assertEquals(1, taskList.num());","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"tayruxin"},"content":"//    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"tayruxin"},"content":"//    public void testDeleteTask() {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"tayruxin"},"content":"//        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"tayruxin"},"content":"//        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"tayruxin"},"content":"//        ToDo todo \u003d new ToDo(\"Buy groceries\");","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"tayruxin"},"content":"//        taskList.add(todo);","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"tayruxin"},"content":"//","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"tayruxin"},"content":"//        int initialSize \u003d taskList.num();","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"tayruxin"},"content":"//        taskList.delete(\"delete 1\", 1, null);","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"tayruxin"},"content":"//","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"tayruxin"},"content":"//        assertEquals(initialSize - 1, taskList.num());","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"tayruxin"},"content":"//    }","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"tayruxin"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"tayruxin"},"content":"    public void testListTasksEmpty() {","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"tayruxin"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"tayruxin"},"content":"        Launcher.TaskList taskList \u003d new Launcher.TaskList(tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"tayruxin"},"content":"        ArrayList\u003cString\u003e expectedMessages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"tayruxin"},"content":"        expectedMessages.add(\"List is empty\");","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"tayruxin"},"content":"        ArrayList\u003cString\u003e actualMessages \u003d taskList.listTasks();","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"tayruxin"},"content":"        assertEquals(expectedMessages, actualMessages);","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"tayruxin"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"tayruxin"},"content":"    public void testListTasksNonEmpty() {","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"tayruxin"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"tayruxin"},"content":"        Launcher.TaskList taskList \u003d new Launcher.TaskList(tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"tayruxin"},"content":"        taskList.add(new ToDo(\"Buy groceries\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"tayruxin"},"content":"        taskList.add(new Deadline(\"Read book\", LocalDate.parse(\"2023-08-20\"), null));","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"tayruxin"},"content":"        ArrayList\u003cString\u003e expectedMessages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"tayruxin"},"content":"        expectedMessages.add(\"1. [T][ ] Buy groceries\");","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"tayruxin"},"content":"        expectedMessages.add(\"2. [D][ ] Read book (by: Aug 20 2023)\");","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"tayruxin"},"content":"        ArrayList\u003cString\u003e actualMessages \u003d taskList.listTasks();","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"tayruxin"},"content":"        assertEquals(expectedMessages, actualMessages);","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"tayruxin"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"tayruxin":61}},{"path":"src/test/java/duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayruxin"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"tayruxin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"tayruxin"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"tayruxin"},"content":"public class TaskTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"tayruxin"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"tayruxin"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"tayruxin"},"content":"        Task task \u003d new ToDo(\"Buy groceries\");","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"tayruxin"},"content":"        task.markAsDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"tayruxin"},"content":"        assertEquals(\"[T][X] Buy groceries\", task.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"tayruxin"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"tayruxin"},"content":"    public void testMarkAsNotDone() {","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"tayruxin"},"content":"        Task task \u003d new ToDo(\"Read a book\");","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"tayruxin"},"content":"        task.markAsDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"tayruxin"},"content":"        task.markAsNotDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"tayruxin"},"content":"        assertEquals(\"[T][ ] Read a book\", task.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"tayruxin"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"tayruxin":23}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayruxin"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"tayruxin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"tayruxin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"tayruxin"},"content":"public class ToDoTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"tayruxin"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"tayruxin"},"content":"    public void testToString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"tayruxin"},"content":"        ToDo todo \u003d new ToDo(\"Buy groceries\");","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"tayruxin"},"content":"        assertEquals(\"[T][ ] Buy groceries\", todo.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"tayruxin"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"tayruxin"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"tayruxin"},"content":"        ToDo todo \u003d new ToDo(\"Buy groceries\");","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"tayruxin"},"content":"        todo.markAsDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"tayruxin"},"content":"        assertEquals(\"[T][X] Buy groceries\", todo.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"tayruxin"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"tayruxin"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"tayruxin"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"tayruxin":20}},{"path":"text-ui-test/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tayruxin"},"content":"T|0|Buy groceries","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"tayruxin"},"content":"E|0|Meeting|2023-01-01|2023-01-01","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"tayruxin"},"content":"D|0|Submit report|2023-01-01 0800","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"tayruxin":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tayruxin"},"content":"todo Buy groceries","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"tayruxin"},"content":"event Meeting /from 2023-01-01 /to 2023-01-01","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"tayruxin"},"content":"deadline Submit report /by 2023-01-01 2000","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"tayruxin"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"tayruxin"},"content":"mark 1","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"tayruxin"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"tayruxin"},"content":"unmark 1","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"tayruxin"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"tayruxin"},"content":"bye","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"tayruxin":9}}]
