[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Saezenn"},"content":"# Sae project template","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Saezenn"},"content":"3. After that, locate the `src/main/java/Sae.java` file, right-click it, and choose `Run Sae.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Saezenn":2,"-":22}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Saezenn"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Saezenn"},"content":" * The Deadline class represents a task with a specific deadline.","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Saezenn"},"content":" * It extends the Task class and adds a \u0027by\u0027 field to store the deadline.","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Saezenn"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Saezenn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Saezenn"},"content":"    protected String by;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Saezenn"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Saezenn"},"content":"     * Constructs a new Deadline task with the given description and deadline.","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Saezenn"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Saezenn"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Saezenn"},"content":"     * @param by          The deadline of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Saezenn"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Saezenn"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Saezenn"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Saezenn"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Saezenn"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Saezenn"},"content":"     * Overrides the toString method to format the Deadline task\u0027s details.","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Saezenn"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"Saezenn"},"content":"     * @return A formatted string representing the Deadline task.","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"Saezenn"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"Saezenn"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"Saezenn"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"Saezenn"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"Saezenn"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Saezenn":28}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Saezenn"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Saezenn"},"content":" * The Event class represents a task that occurs within a specific time frame.","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Saezenn"},"content":" * It extends the Task class and adds \u0027from\u0027 and \u0027to\u0027 fields to store the event timing.","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Saezenn"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Saezenn"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Saezenn"},"content":"    protected String from;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Saezenn"},"content":"    protected String to;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Saezenn"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Saezenn"},"content":"     * Constructs a new Event task with the given description, start time, and end time.","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Saezenn"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Saezenn"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Saezenn"},"content":"     * @param from        The start time of the event.","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Saezenn"},"content":"     * @param to          The end time of the event.","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Saezenn"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Saezenn"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Saezenn"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Saezenn"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Saezenn"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"Saezenn"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"Saezenn"},"content":"     * Overrides the toString method to format the Event task\u0027s details.","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"Saezenn"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"Saezenn"},"content":"     * @return A formatted string representing the Event task.","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"Saezenn"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"Saezenn"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"Saezenn"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"Saezenn"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"Saezenn"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Saezenn":32}},{"path":"src/main/java/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Saezenn"},"content":"public class InvalidDeadlineException extends SaeException{","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Saezenn"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Saezenn"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Saezenn"},"content":"        return \"☹ OOPS!!! The deadline command should be followed by a description and /by.\";","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Saezenn"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Saezenn":7}},{"path":"src/main/java/InvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Saezenn"},"content":"public class InvalidEventException extends SaeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Saezenn"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Saezenn"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Saezenn"},"content":"        return \"☹ OOPS!!! The event command should be followed by a description, /from, and /to.\";","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Saezenn"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Saezenn":8}},{"path":"src/main/java/InvalidTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Saezenn"},"content":"public class InvalidTodoException extends SaeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Saezenn"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Saezenn"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Saezenn"},"content":"        return \"☹ OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Saezenn"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Saezenn":7}},{"path":"src/main/java/Sae.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Saezenn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Saezenn"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Saezenn"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Saezenn"},"content":" * The Sae class represents an interactive task manager.","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Saezenn"},"content":" * Users can add, list, mark, and unmark tasks using this program.","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Saezenn"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Saezenn"},"content":"public class Sae {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"Saezenn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"Saezenn"},"content":"        System.out.println(\"Hello! I\u0027m Sae\\nWhat can I do for you?\");","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"Saezenn"},"content":"        ArrayList\u003cTask\u003e store \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Saezenn"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Saezenn"},"content":"        while (true) {","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"Saezenn"},"content":"            String str \u003d input.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Saezenn"},"content":"            String[] commandTask \u003d str.split(\" \", 2);","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Saezenn"},"content":"            String command \u003d commandTask[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"Saezenn"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"Saezenn"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"Saezenn"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"Saezenn"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"Saezenn"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"Saezenn"},"content":"                executeCommand(store, commandTask);","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"Saezenn"},"content":"            } catch (SaeException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"Saezenn"},"content":"                System.out.println(\"☹ \" + e.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"Saezenn"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"Saezenn"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"Saezenn"},"content":"        input.close();","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"Saezenn"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"Saezenn"},"content":"     * Executes the command provided by the user and performs the corresponding action.","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"Saezenn"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"Saezenn"},"content":"     * @param store The ArrayList containing the tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"Saezenn"},"content":"     * @param commandTask The user\u0027s input split into command and content.","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"Saezenn"},"content":"     * @throws SaeException If an error specific to the Sae chatbot occurs.","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"Saezenn"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"Saezenn"},"content":"    private static void executeCommand(ArrayList\u003cTask\u003e store, String[] commandTask) throws SaeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"Saezenn"},"content":"        String command \u003d commandTask[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"Saezenn"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"Saezenn"},"content":"            if (command.equals(\"delete\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"Saezenn"},"content":"                deleteTask(store, commandTask);","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"Saezenn"},"content":"            } else if (command.equals(\"list\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"Saezenn"},"content":"                listTasks(store);","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"Saezenn"},"content":"            } else if (command.equals(\"mark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"Saezenn"},"content":"                markTask(store, commandTask);","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"Saezenn"},"content":"            } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"Saezenn"},"content":"                unmarkTask(store, commandTask);","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"Saezenn"},"content":"            } else if (command.equals(\"todo\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"Saezenn"},"content":"                if (commandTask.length \u003c 2 || commandTask[1].isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"Saezenn"},"content":"                    throw new InvalidTodoException();","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"Saezenn"},"content":"                } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"Saezenn"},"content":"                    addTodoTask(store, commandTask);","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"Saezenn"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"Saezenn"},"content":"            } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"Saezenn"},"content":"                if (commandTask.length \u003c 2 || !commandTask[1].contains(\"/by\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"Saezenn"},"content":"                    throw new InvalidDeadlineException();","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"Saezenn"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"Saezenn"},"content":"                addDeadlineTask(store, commandTask);","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"Saezenn"},"content":"            } else if (command.equals(\"event\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"Saezenn"},"content":"                if (commandTask.length \u003c 2 || !commandTask[1].contains(\"/from\") || !commandTask[1].contains(\"/to\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"Saezenn"},"content":"                    throw new InvalidEventException();","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"Saezenn"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"Saezenn"},"content":"                addEventTask(store, commandTask);","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"Saezenn"},"content":"            } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"Saezenn"},"content":"                throw new SaeException();","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"Saezenn"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"Saezenn"},"content":"        } catch (SaeException errorMessage) {","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"Saezenn"},"content":"            System.out.println(errorMessage.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"Saezenn"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"Saezenn"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"Saezenn"},"content":"     * Lists all tasks in the store along with their statuses.","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"Saezenn"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"Saezenn"},"content":"     * @param store The ArrayList containing the tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"Saezenn"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"Saezenn"},"content":"    private static void listTasks(ArrayList\u003cTask\u003e store) {","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"Saezenn"},"content":"        int len \u003d store.size();","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"Saezenn"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"Saezenn"},"content":"            Task curr \u003d store.get(i);","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"Saezenn"},"content":"            System.out.println((i + 1) + \".\" + curr.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"Saezenn"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"Saezenn"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"Saezenn"},"content":"     * Marks a task as done based on the user\u0027s input.","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"Saezenn"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"Saezenn"},"content":"     * @param store        The ArrayList containing the tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"Saezenn"},"content":"     * @param commandTask  The user\u0027s input split into command and content.","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"Saezenn"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"Saezenn"},"content":"    private static void markTask(ArrayList\u003cTask\u003e store, String[] commandTask) {","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"Saezenn"},"content":"        int number \u003d Integer.parseInt(commandTask[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"Saezenn"},"content":"        Task curr \u003d store.get(number - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"Saezenn"},"content":"        curr.markAsDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"Saezenn"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"Saezenn"},"content":"        System.out.println(curr.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":107,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"Saezenn"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"Saezenn"},"content":"     * Unmarks a task as done based on the user\u0027s input.","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"Saezenn"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"Saezenn"},"content":"     * @param store        The ArrayList containing the tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"Saezenn"},"content":"     * @param commandTask  The user\u0027s input split into command and content.","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"Saezenn"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"Saezenn"},"content":"    private static void unmarkTask(ArrayList\u003cTask\u003e store, String[] commandTask) {","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"Saezenn"},"content":"        int number \u003d Integer.parseInt(commandTask[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"Saezenn"},"content":"        Task curr \u003d store.get(number - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"Saezenn"},"content":"        curr.unmarkAsDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"Saezenn"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"Saezenn"},"content":"        System.out.println(curr.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":121,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"Saezenn"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":123,"author":{"gitId":"Saezenn"},"content":"     * Adds a new Todo task to the store.","lastModifiedDate":"2023-08-24"},{"lineNumber":124,"author":{"gitId":"Saezenn"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":125,"author":{"gitId":"Saezenn"},"content":"     * @param store       The ArrayList containing the tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":126,"author":{"gitId":"Saezenn"},"content":"     * @param commandTask The user\u0027s input split into command and description.","lastModifiedDate":"2023-08-24"},{"lineNumber":127,"author":{"gitId":"Saezenn"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":128,"author":{"gitId":"Saezenn"},"content":"    private static void addTodoTask(ArrayList\u003cTask\u003e store, String[] commandTask) {","lastModifiedDate":"2023-08-24"},{"lineNumber":129,"author":{"gitId":"Saezenn"},"content":"        Task curr \u003d new Todo(commandTask[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":130,"author":{"gitId":"Saezenn"},"content":"        store.add(curr);","lastModifiedDate":"2023-08-24"},{"lineNumber":131,"author":{"gitId":"Saezenn"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":132,"author":{"gitId":"Saezenn"},"content":"        System.out.println(curr.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":133,"author":{"gitId":"Saezenn"},"content":"        System.out.println(\"Now you have \" + store.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":134,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":135,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":136,"author":{"gitId":"Saezenn"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":137,"author":{"gitId":"Saezenn"},"content":"     * Adds a new Deadline task to the store.","lastModifiedDate":"2023-08-24"},{"lineNumber":138,"author":{"gitId":"Saezenn"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":139,"author":{"gitId":"Saezenn"},"content":"     * @param store       The ArrayList containing the tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":140,"author":{"gitId":"Saezenn"},"content":"     * @param commandTask The user\u0027s input split into command and description.","lastModifiedDate":"2023-08-24"},{"lineNumber":141,"author":{"gitId":"Saezenn"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":142,"author":{"gitId":"Saezenn"},"content":"    private static void addDeadlineTask(ArrayList\u003cTask\u003e store, String[] commandTask) {","lastModifiedDate":"2023-08-24"},{"lineNumber":143,"author":{"gitId":"Saezenn"},"content":"        String[] parts \u003d commandTask[1].split(\"/by\");","lastModifiedDate":"2023-08-24"},{"lineNumber":144,"author":{"gitId":"Saezenn"},"content":"        Task curr \u003d new Deadline(parts[0].trim(), parts[1].trim());","lastModifiedDate":"2023-08-24"},{"lineNumber":145,"author":{"gitId":"Saezenn"},"content":"        store.add(curr);","lastModifiedDate":"2023-08-24"},{"lineNumber":146,"author":{"gitId":"Saezenn"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":147,"author":{"gitId":"Saezenn"},"content":"        System.out.println(curr.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":148,"author":{"gitId":"Saezenn"},"content":"        System.out.println(\"Now you have \" + store.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":149,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":150,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":151,"author":{"gitId":"Saezenn"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":152,"author":{"gitId":"Saezenn"},"content":"     * Adds a new Event task to the store.","lastModifiedDate":"2023-08-24"},{"lineNumber":153,"author":{"gitId":"Saezenn"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":154,"author":{"gitId":"Saezenn"},"content":"     * @param store       The ArrayList containing the tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":155,"author":{"gitId":"Saezenn"},"content":"     * @param commandTask The user\u0027s input split into command and description.","lastModifiedDate":"2023-08-24"},{"lineNumber":156,"author":{"gitId":"Saezenn"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":157,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":158,"author":{"gitId":"Saezenn"},"content":"    private static void addEventTask(ArrayList\u003cTask\u003e store, String[] commandTask) {","lastModifiedDate":"2023-08-24"},{"lineNumber":159,"author":{"gitId":"Saezenn"},"content":"        String[] parts \u003d commandTask[1].split(\"/from|/to\");","lastModifiedDate":"2023-08-24"},{"lineNumber":160,"author":{"gitId":"Saezenn"},"content":"        Task curr \u003d new Event(parts[0].trim(), parts[1].trim(), parts[2].trim());","lastModifiedDate":"2023-08-24"},{"lineNumber":161,"author":{"gitId":"Saezenn"},"content":"        store.add(curr);","lastModifiedDate":"2023-08-24"},{"lineNumber":162,"author":{"gitId":"Saezenn"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":163,"author":{"gitId":"Saezenn"},"content":"        System.out.println(\"  \" + curr.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":164,"author":{"gitId":"Saezenn"},"content":"        System.out.println(\"Now you have \" + store.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":165,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":166,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":167,"author":{"gitId":"Saezenn"},"content":"    private static void deleteTask(ArrayList\u003cTask\u003e store, String[] commandTask) {","lastModifiedDate":"2023-08-24"},{"lineNumber":168,"author":{"gitId":"Saezenn"},"content":"        int number \u003d Integer.parseInt(commandTask[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":169,"author":{"gitId":"Saezenn"},"content":"        Task curr \u003d store.get(number - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":170,"author":{"gitId":"Saezenn"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":171,"author":{"gitId":"Saezenn"},"content":"        System.out.println(\"  \" + curr.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":172,"author":{"gitId":"Saezenn"},"content":"        store.remove(curr);","lastModifiedDate":"2023-08-24"},{"lineNumber":173,"author":{"gitId":"Saezenn"},"content":"        System.out.println(\"Now you have \" + store.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":174,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":175,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":176,"author":{"gitId":"Saezenn"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Saezenn":176}},{"path":"src/main/java/SaeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Saezenn"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Saezenn"},"content":" * Custom exception class for handling errors specific to the Sae chatbot.","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Saezenn"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Saezenn"},"content":"public class SaeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Saezenn"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Saezenn"},"content":"     * Returns a formatted error message to indicate that the chatbot is unable to understand the input.","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Saezenn"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Saezenn"},"content":"     * @return A string containing the error message.","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Saezenn"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Saezenn"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Saezenn"},"content":"        return \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Saezenn"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Saezenn":14}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Saezenn"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Saezenn"},"content":" * The Task class represents a task with a description and a status indicating whether it\u0027s done or not.","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Saezenn"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Saezenn"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Saezenn"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Saezenn"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Saezenn"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Saezenn"},"content":"     * Constructs a new task with the given description. By default, the task is marked as not done.","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Saezenn"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Saezenn"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Saezenn"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Saezenn"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Saezenn"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Saezenn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Saezenn"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Saezenn"},"content":"     * Returns the status icon of the task. The icon is \"X\" if the task is done, or a space if it\u0027s not done.","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Saezenn"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Saezenn"},"content":"     * @return The status icon of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"Saezenn"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"Saezenn"},"content":"    public String getStatus() {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"Saezenn"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"Saezenn"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"Saezenn"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"Saezenn"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"Saezenn"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"Saezenn"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"Saezenn"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"Saezenn"},"content":"        return \"[\" + this.getStatus() + \"] \" + this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"Saezenn"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"Saezenn"},"content":"     * Marks the task as done by setting its status to true.","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"Saezenn"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"Saezenn"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"Saezenn"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"Saezenn"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"Saezenn"},"content":"     * Unmarks the task as done by setting its status to false.","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"Saezenn"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"Saezenn"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"Saezenn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"Saezenn"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Saezenn":49}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Saezenn"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Saezenn"},"content":" * The Todo class represents a simple task without any additional details.","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Saezenn"},"content":" * It extends the Task class and inherits its description field.","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Saezenn"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Saezenn"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Saezenn"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Saezenn"},"content":"     * Constructs a new Todo task with the given description.","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Saezenn"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Saezenn"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Saezenn"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Saezenn"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Saezenn"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Saezenn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Saezenn"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Saezenn"},"content":"     * Overrides the toString method to format the Todo task\u0027s details.","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Saezenn"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Saezenn"},"content":"     * @return A formatted string representing the Todo task.","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Saezenn"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Saezenn"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"Saezenn"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"Saezenn"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"Saezenn"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"Saezenn"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Saezenn":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Saezenn"},"content":"todo sleep","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Saezenn"},"content":"deadline cs2103T ip /by thurs 2359","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Saezenn"},"content":"event lak class /from thur 6pm /to thur 8pm","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Saezenn"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Saezenn":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Saezenn"},"content":"javac  -cp C:\\Users\\Admin\\ip\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Saezenn"},"content":"java -classpath C:\\Users\\Admin\\ip\\bin Sae \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Saezenn":2,"-":19}}]
