[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":"    testImplementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":"    testImplementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.8.1\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"jingyu987"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"jingyu987"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"jingyu987"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"jingyu987"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"jingyu987"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"jingyu987"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"jingyu987"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"jingyu987"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"jingyu987"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"jingyu987"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"jingyu987"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"jingyu987"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"jingyu987"},"content":"    mainClass.set(\"fishron.Fishron\")","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"jingyu987"},"content":"    archiveFileName \u003d \u0027fishron.jar\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"jingyu987"},"content":"checkstyle {","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"jingyu987"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"jingyu987"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"jingyu987":23,"-":38}},{"path":"data/fishron.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"T | 0 | asdas","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"T | 0 | lol","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"D | 0 | lol | 12-12-1234 1234","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"T | 0 | lol","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"E | 0 | lol | 12-12-1234 1234 | 12-12-1234 2222","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":"T | 0 | lol","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"jingyu987":6}},{"path":"src/main/java/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"package commands;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":" * Represents a command to add a task to the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"jingyu987"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"jingyu987"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":"     * The task to be added.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":"    private Task task;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"jingyu987"},"content":"     * Constructs an AddCommand with the specified task.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"jingyu987"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"jingyu987"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"jingyu987"},"content":"        super(false);","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"jingyu987"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"jingyu987"},"content":"     * Executes the AddCommand to add the task to the task list and displays a message.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"jingyu987"},"content":"     * @param taskList The task list to which the task will be added.","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"jingyu987"},"content":"     * @param ui       The user interface to display messages.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"jingyu987"},"content":"     * @param storage  The storage to save the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"jingyu987"},"content":"     * @return A message indicating the task was successfully added.","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"jingyu987"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"jingyu987"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"jingyu987"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"jingyu987"},"content":"        return ui.showTaskAdded(taskList);","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"jingyu987"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"jingyu987":41}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"package commands;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":" * Represents a command that can be executed.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"jingyu987"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"     * A flag indicating whether this command is an exit command.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":"    private boolean isExit;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"     * Constructs a command.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"jingyu987"},"content":"     * @param isExit A flag indicating whether this command is an exit command.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jingyu987"},"content":"    public Command(boolean isExit) {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"jingyu987"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"jingyu987"},"content":"     * Executes the command with the given task list, user interface, and storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"jingyu987"},"content":"     * @param taskList The task list to perform the command on.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"jingyu987"},"content":"     * @param ui       The user interface to interact with the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"jingyu987"},"content":"     * @param storage  The storage to read from or write to.","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"jingyu987"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage);","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"jingyu987"},"content":"     * Checks if this command is an exit command.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"jingyu987"},"content":"     * @return True if this command is an exit command, false otherwise.","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"jingyu987"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"jingyu987"},"content":"        return this.isExit;","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"jingyu987"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"jingyu987":43}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"package commands;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":" * Represents a command to delete a task.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"jingyu987"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"jingyu987"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"jingyu987"},"content":"    private int taskNum;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":"     * Initializes a new DeleteCommand instance.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"jingyu987"},"content":"     * @param taskNum The index of the task to delete.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"jingyu987"},"content":"    public DeleteCommand(int taskNum) {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"jingyu987"},"content":"        super(false);","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"jingyu987"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"jingyu987"},"content":"     * Executes the delete command by removing the specified task from the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"jingyu987"},"content":"     * @param taskList The task list to which the task will be deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"jingyu987"},"content":"     * @param ui       The user interface to display messages.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"jingyu987"},"content":"     * @param storage  The storage to save the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"jingyu987"},"content":"     * @return A message indicating the task was successfully deleted.","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"jingyu987"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"jingyu987"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"jingyu987"},"content":"        Task deleted \u003d taskList.getTask(taskNum);","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"jingyu987"},"content":"        taskList.deleteTask(taskNum);","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"jingyu987"},"content":"        return ui.showTaskDeleted(taskList, deleted);","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"jingyu987"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"jingyu987":38}},{"path":"src/main/java/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"package commands;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"jingyu987"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"     * Initializes a new ExitCommand instance.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":"    public ExitCommand() {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":"        super(true);","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"jingyu987"},"content":"     * Executes the exit command, saving tasks to a file and displaying a goodbye message.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jingyu987"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"jingyu987"},"content":"     * @param ui       The user interface to display messages.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"jingyu987"},"content":"     * @param storage  The storage to save the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"jingyu987"},"content":"     * @return A goodbye message.","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"jingyu987"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"jingyu987"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"jingyu987"},"content":"        storage.saveTasksToFile(taskList.getList());","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"jingyu987"},"content":"        return ui.showGoodbyeMessage();","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"jingyu987"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"jingyu987":32}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"package commands;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":" * Represents a command to find tasks containing a specific keyword.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"jingyu987"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"jingyu987"},"content":"    private String keyword;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":"     * Initializes a new instance of the FindCommand class with the specified keyword.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":"     * @param keyword The keyword to search for in tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"jingyu987"},"content":"        super(false);","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"jingyu987"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"jingyu987"},"content":"     * Executes the FindCommand, searching for tasks containing the specified keyword and displaying the results.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"jingyu987"},"content":"     * @param taskList The list of tasks to search within.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"jingyu987"},"content":"     * @param ui       The user interface to display messages.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"jingyu987"},"content":"     * @param storage  The storage to save the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"jingyu987"},"content":"     * @return A list of the matching tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"jingyu987"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"jingyu987"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"jingyu987"},"content":"        return ui.showMatchingTasks(taskList, keyword);","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"jingyu987"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"jingyu987":35}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"package commands;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":" * Represents a command to list all tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"jingyu987"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"     * Constructs a new ListCommand.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":"    public ListCommand() {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":"        super(false);","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"jingyu987"},"content":"     * Executes the list command to display all tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jingyu987"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"jingyu987"},"content":"     * @param ui       The user interface to display messages.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"jingyu987"},"content":"     * @param storage  The storage to save the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"jingyu987"},"content":"     * @return The list of tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"jingyu987"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"jingyu987"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"jingyu987"},"content":"        return ui.showTaskList(taskList);","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"jingyu987"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"jingyu987":31}},{"path":"src/main/java/commands/MarkDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"package commands;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"jingyu987"},"content":"public class MarkDoneCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"jingyu987"},"content":"    private int taskNum;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":"     * Constructs a new MarkDoneCommand with the given task number.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":"     * @param taskNum The index of the task to be marked as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"    public MarkDoneCommand(int taskNum) {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"jingyu987"},"content":"        super(false);","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"jingyu987"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"jingyu987"},"content":"     * Executes the mark done command to mark a task as done and display it.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"jingyu987"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"jingyu987"},"content":"     * @param ui       The user interface to display messages.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"jingyu987"},"content":"     * @param storage  The storage to save the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"jingyu987"},"content":"     * @return A message indicating the task was successfully marked.","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"jingyu987"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"jingyu987"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"jingyu987"},"content":"        taskList.markAsDone(taskNum);","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"jingyu987"},"content":"        return ui.showDoneTask(taskList.getTask(taskNum));","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"jingyu987"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"jingyu987":36}},{"path":"src/main/java/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"package commands;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":" * Represents a command to unmark a task as done in the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"jingyu987"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"jingyu987"},"content":"    private int taskNum;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":"     * Initializes a new instance of the UnmarkCommand class.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"jingyu987"},"content":"     * @param taskNum The index of the task to be unmarked as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"jingyu987"},"content":"    public UnmarkCommand(int taskNum) {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"jingyu987"},"content":"        super(false);","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"jingyu987"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"jingyu987"},"content":"     * Executes the UnmarkCommand, marking the specified task as undone.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"jingyu987"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"jingyu987"},"content":"     * @param ui       The user interface to display messages.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"jingyu987"},"content":"     * @param storage  The storage to save the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"jingyu987"},"content":"     * @return A message indicating the task was successfully unmarked.","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"jingyu987"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"jingyu987"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"jingyu987"},"content":"        taskList.markAsUndone(taskNum);","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"jingyu987"},"content":"        return ui.showUnmarkTask(taskList.getTask(taskNum));","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"jingyu987"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"jingyu987":37}},{"path":"src/main/java/commands/UnsureCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"package commands;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":" * Represents a command to display an unknown command error.","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"jingyu987"},"content":"public class UnsureCommand extends Command {","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"     * Initializes a new UnsureCommand instance.","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":"    public UnsureCommand() {","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":"        super(false);","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"jingyu987"},"content":"     * Executes the unsure command, returning an error message.","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"jingyu987"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"jingyu987"},"content":"     * @param ui       The user interface to display messages.","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"jingyu987"},"content":"     * @param storage  The storage to save the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"jingyu987"},"content":"     * @return A message indicating that the input was unknown.","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"jingyu987"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"jingyu987"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"jingyu987"},"content":"        return \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"jingyu987"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"jingyu987":31}},{"path":"src/main/java/exceptions/FishronException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"package exceptions;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":" * Custom exception class for the Fishron application.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":"public class FishronException extends Exception {","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":"     * Constructs a new FishronException with the specified detail message.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"jingyu987"},"content":"     * @param message The detail message.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"jingyu987"},"content":"    public FishronException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jingyu987":15}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"package gui;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"jingyu987"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"jingyu987"},"content":" * The `DialogBox` class represents a chat dialog box in the Fishron application\u0027s user interface.","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":" * It contains a label for text and an image view for displaying an avatar or profile picture.","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"jingyu987"},"content":"    private Label text;","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"jingyu987"},"content":"     * Constructs a new `DialogBox` with the provided label and image view.","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"jingyu987"},"content":"     * @param l The label containing text to display in the dialog.","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"jingyu987"},"content":"     * @param iv The image view displaying an avatar or profile picture.","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"jingyu987"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"jingyu987"},"content":"        text \u003d l;","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"jingyu987"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"jingyu987"},"content":"        text.setWrapText(true);","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"jingyu987"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"jingyu987"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"jingyu987"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"jingyu987"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"jingyu987"},"content":"     * Flips the dialog box to change the alignment, placing the image view on the left and text on the right.","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"jingyu987"},"content":"     * This is useful for displaying messages from the user and the application.","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"jingyu987"},"content":"    private void flip() {","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"jingyu987"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"jingyu987"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"jingyu987"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"jingyu987"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"jingyu987"},"content":"     * Creates and returns a `DialogBox` for representing a user\u0027s message.","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"jingyu987"},"content":"     * @param l The label containing the user\u0027s message text.","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"jingyu987"},"content":"     * @param iv The image view displaying the user\u0027s avatar or profile picture.","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"jingyu987"},"content":"     * @return A `DialogBox` for the user\u0027s message.","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"jingyu987"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"jingyu987"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"jingyu987"},"content":"     * Creates and returns a `DialogBox` for representing a message from Duke (the application).","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"jingyu987"},"content":"     * The dialog box is flipped to show Duke\u0027s message on the left side.","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"jingyu987"},"content":"     * @param l The label containing Duke\u0027s message text.","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"jingyu987"},"content":"     * @param iv The image view displaying Duke\u0027s avatar or profile picture.","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"jingyu987"},"content":"     * @return A flipped `DialogBox` for Duke\u0027s message.","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":68,"author":{"gitId":"jingyu987"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-09-09"},{"lineNumber":69,"author":{"gitId":"jingyu987"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2023-09-09"},{"lineNumber":70,"author":{"gitId":"jingyu987"},"content":"        db.flip();","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"jingyu987"},"content":"        return db;","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":73,"author":{"gitId":"jingyu987"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"jingyu987":73}},{"path":"src/main/java/gui/Fishron.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"package gui;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"import commands.Command;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"import exceptions.FishronException;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"jingyu987"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"jingyu987"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"jingyu987"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"jingyu987"},"content":"import parser.Parser;","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"jingyu987"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"jingyu987"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"jingyu987"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"jingyu987"},"content":" * The main class for the Fishron task management application.","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"jingyu987"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"jingyu987"},"content":"public class Fishron extends Application {","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"jingyu987"},"content":"    // Fields","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"jingyu987"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"jingyu987"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"jingyu987"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"jingyu987"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"jingyu987"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"jingyu987"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"jingyu987"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"jingyu987"},"content":"    private Scene scene;","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"jingyu987"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"jingyu987"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"jingyu987"},"content":"     * Initializes a new instance of the Fishron class.","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"jingyu987"},"content":"     * @param filePath The file path for storing task data.","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"jingyu987"},"content":"    public Fishron(String filePath) {","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"jingyu987"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"jingyu987"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"jingyu987"},"content":"        this.taskList \u003d storage.loadTasksFromFile();","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"jingyu987"},"content":"     * Initializes a new instance of the Fishron class with a default file path.","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"jingyu987"},"content":"    public Fishron() {","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"jingyu987"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"jingyu987"},"content":"        this.storage \u003d new Storage(\"./data/fishron.txt\");","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"jingyu987"},"content":"        this.taskList \u003d storage.loadTasksFromFile();","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"jingyu987"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"jingyu987"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"jingyu987"},"content":"        // Step 1. Setting up required components","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"jingyu987"},"content":"        // The container for the content of the chat to scroll.","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"jingyu987"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"jingyu987"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"jingyu987"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-09-09"},{"lineNumber":68,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":69,"author":{"gitId":"jingyu987"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-09-09"},{"lineNumber":70,"author":{"gitId":"jingyu987"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"jingyu987"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-09-09"},{"lineNumber":73,"author":{"gitId":"jingyu987"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-09-09"},{"lineNumber":74,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":75,"author":{"gitId":"jingyu987"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-09-09"},{"lineNumber":76,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":77,"author":{"gitId":"jingyu987"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-09-09"},{"lineNumber":78,"author":{"gitId":"jingyu987"},"content":"        stage.show();","lastModifiedDate":"2023-09-09"},{"lineNumber":79,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":80,"author":{"gitId":"jingyu987"},"content":"        // Step 2. Formatting the window to look as expected","lastModifiedDate":"2023-09-09"},{"lineNumber":81,"author":{"gitId":"jingyu987"},"content":"        stage.setTitle(\"Fishron\");","lastModifiedDate":"2023-09-09"},{"lineNumber":82,"author":{"gitId":"jingyu987"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-09-09"},{"lineNumber":83,"author":{"gitId":"jingyu987"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"jingyu987"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-09-09"},{"lineNumber":85,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":86,"author":{"gitId":"jingyu987"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-09-09"},{"lineNumber":87,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":88,"author":{"gitId":"jingyu987"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-09-09"},{"lineNumber":89,"author":{"gitId":"jingyu987"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-09-09"},{"lineNumber":90,"author":{"gitId":"jingyu987"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-09-09"},{"lineNumber":91,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":92,"author":{"gitId":"jingyu987"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-09-09"},{"lineNumber":93,"author":{"gitId":"jingyu987"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-09-09"},{"lineNumber":94,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":95,"author":{"gitId":"jingyu987"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2023-09-09"},{"lineNumber":96,"author":{"gitId":"jingyu987"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-09-09"},{"lineNumber":97,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":98,"author":{"gitId":"jingyu987"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-09-09"},{"lineNumber":99,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":100,"author":{"gitId":"jingyu987"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-09-09"},{"lineNumber":101,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":102,"author":{"gitId":"jingyu987"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-09-09"},{"lineNumber":103,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":104,"author":{"gitId":"jingyu987"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-09"},{"lineNumber":105,"author":{"gitId":"jingyu987"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-09"},{"lineNumber":106,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":107,"author":{"gitId":"jingyu987"},"content":"        AnchorPane.setLeftAnchor(userInput, 1.0);","lastModifiedDate":"2023-09-09"},{"lineNumber":108,"author":{"gitId":"jingyu987"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-09-09"},{"lineNumber":109,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":110,"author":{"gitId":"jingyu987"},"content":"        // Step 3. Add functionality to handle user input.","lastModifiedDate":"2023-09-09"},{"lineNumber":111,"author":{"gitId":"jingyu987"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-09-09"},{"lineNumber":112,"author":{"gitId":"jingyu987"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-09"},{"lineNumber":113,"author":{"gitId":"jingyu987"},"content":"        });","lastModifiedDate":"2023-09-09"},{"lineNumber":114,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":115,"author":{"gitId":"jingyu987"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-09-09"},{"lineNumber":116,"author":{"gitId":"jingyu987"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-09"},{"lineNumber":117,"author":{"gitId":"jingyu987"},"content":"        });","lastModifiedDate":"2023-09-09"},{"lineNumber":118,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":119,"author":{"gitId":"jingyu987"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-09-09"},{"lineNumber":120,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":121,"author":{"gitId":"jingyu987"},"content":"        Label welcomeMessage \u003d new Label(ui.showWelcomeMessage());","lastModifiedDate":"2023-09-09"},{"lineNumber":122,"author":{"gitId":"jingyu987"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-09"},{"lineNumber":123,"author":{"gitId":"jingyu987"},"content":"                DialogBox.getDukeDialog(welcomeMessage, new ImageView(duke))","lastModifiedDate":"2023-09-09"},{"lineNumber":124,"author":{"gitId":"jingyu987"},"content":"        );","lastModifiedDate":"2023-09-09"},{"lineNumber":125,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":126,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":127,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":128,"author":{"gitId":"jingyu987"},"content":"     * Handles user input by processing it and displaying the appropriate response in the chat.","lastModifiedDate":"2023-09-09"},{"lineNumber":129,"author":{"gitId":"jingyu987"},"content":"     * This method is called when the user clicks the \"Send\" button or presses Enter after typing a message.","lastModifiedDate":"2023-09-09"},{"lineNumber":130,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":131,"author":{"gitId":"jingyu987"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-09"},{"lineNumber":132,"author":{"gitId":"jingyu987"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-09"},{"lineNumber":133,"author":{"gitId":"jingyu987"},"content":"        String output \u003d getResponse(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":134,"author":{"gitId":"jingyu987"},"content":"        Label userText \u003d new Label(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":135,"author":{"gitId":"jingyu987"},"content":"        Label dukeText \u003d new Label(output);","lastModifiedDate":"2023-09-09"},{"lineNumber":136,"author":{"gitId":"jingyu987"},"content":"        if (input.toLowerCase().equals(\"bye\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":137,"author":{"gitId":"jingyu987"},"content":"            closeProgram();","lastModifiedDate":"2023-09-09"},{"lineNumber":138,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":139,"author":{"gitId":"jingyu987"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-09"},{"lineNumber":140,"author":{"gitId":"jingyu987"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2023-09-09"},{"lineNumber":141,"author":{"gitId":"jingyu987"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke))","lastModifiedDate":"2023-09-09"},{"lineNumber":142,"author":{"gitId":"jingyu987"},"content":"        );","lastModifiedDate":"2023-09-09"},{"lineNumber":143,"author":{"gitId":"jingyu987"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-09"},{"lineNumber":144,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":145,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":146,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":147,"author":{"gitId":"jingyu987"},"content":"     * Generates a response to user input by parsing and executing a command.","lastModifiedDate":"2023-09-09"},{"lineNumber":148,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":149,"author":{"gitId":"jingyu987"},"content":"     * @param input The user\u0027s input message.","lastModifiedDate":"2023-09-09"},{"lineNumber":150,"author":{"gitId":"jingyu987"},"content":"     * @return The response message generated by the application.","lastModifiedDate":"2023-09-09"},{"lineNumber":151,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":152,"author":{"gitId":"jingyu987"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2023-09-09"},{"lineNumber":153,"author":{"gitId":"jingyu987"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":154,"author":{"gitId":"jingyu987"},"content":"            Command command \u003d Parser.parse(input, taskList);","lastModifiedDate":"2023-09-09"},{"lineNumber":155,"author":{"gitId":"jingyu987"},"content":"            String output \u003d command.execute(taskList, ui, storage);","lastModifiedDate":"2023-09-09"},{"lineNumber":156,"author":{"gitId":"jingyu987"},"content":"            return output;","lastModifiedDate":"2023-09-09"},{"lineNumber":157,"author":{"gitId":"jingyu987"},"content":"        } catch (FishronException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":158,"author":{"gitId":"jingyu987"},"content":"            return ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2023-09-09"},{"lineNumber":159,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":160,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":161,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":162,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":163,"author":{"gitId":"jingyu987"},"content":"     * Closes the Fishron application by saving tasks to a file and exiting the program.","lastModifiedDate":"2023-09-09"},{"lineNumber":164,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":165,"author":{"gitId":"jingyu987"},"content":"    private void closeProgram() {","lastModifiedDate":"2023-09-09"},{"lineNumber":166,"author":{"gitId":"jingyu987"},"content":"        storage.saveTasksToFile(taskList.getList());","lastModifiedDate":"2023-09-09"},{"lineNumber":167,"author":{"gitId":"jingyu987"},"content":"        System.exit(0);","lastModifiedDate":"2023-09-09"},{"lineNumber":168,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":169,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":170,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":171,"author":{"gitId":"jingyu987"},"content":"     * Runs the Fishron application in console mode.","lastModifiedDate":"2023-09-09"},{"lineNumber":172,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":173,"author":{"gitId":"jingyu987"},"content":"    public void run() {","lastModifiedDate":"2023-09-09"},{"lineNumber":174,"author":{"gitId":"jingyu987"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2023-09-09"},{"lineNumber":175,"author":{"gitId":"jingyu987"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-09-09"},{"lineNumber":176,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":177,"author":{"gitId":"jingyu987"},"content":"        while (!isExit) {","lastModifiedDate":"2023-09-09"},{"lineNumber":178,"author":{"gitId":"jingyu987"},"content":"            try {","lastModifiedDate":"2023-09-09"},{"lineNumber":179,"author":{"gitId":"jingyu987"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-09-09"},{"lineNumber":180,"author":{"gitId":"jingyu987"},"content":"                ui.showLine();","lastModifiedDate":"2023-09-09"},{"lineNumber":181,"author":{"gitId":"jingyu987"},"content":"                Command command \u003d Parser.parse(fullCommand, this.taskList);","lastModifiedDate":"2023-09-09"},{"lineNumber":182,"author":{"gitId":"jingyu987"},"content":"                command.execute(taskList, ui, storage);","lastModifiedDate":"2023-09-09"},{"lineNumber":183,"author":{"gitId":"jingyu987"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2023-09-09"},{"lineNumber":184,"author":{"gitId":"jingyu987"},"content":"            } catch (FishronException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":185,"author":{"gitId":"jingyu987"},"content":"                ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2023-09-09"},{"lineNumber":186,"author":{"gitId":"jingyu987"},"content":"            } finally {","lastModifiedDate":"2023-09-09"},{"lineNumber":187,"author":{"gitId":"jingyu987"},"content":"                ui.showLine();","lastModifiedDate":"2023-09-09"},{"lineNumber":188,"author":{"gitId":"jingyu987"},"content":"            }","lastModifiedDate":"2023-09-09"},{"lineNumber":189,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":190,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":191,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":192,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":193,"author":{"gitId":"jingyu987"},"content":"     * The main entry point of the Fishron application.","lastModifiedDate":"2023-09-09"},{"lineNumber":194,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":195,"author":{"gitId":"jingyu987"},"content":"     * @param args The command line arguments (not used in this application).","lastModifiedDate":"2023-09-09"},{"lineNumber":196,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":197,"author":{"gitId":"jingyu987"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-09"},{"lineNumber":198,"author":{"gitId":"jingyu987"},"content":"        new Fishron(\"./data/fishron.txt\").run();","lastModifiedDate":"2023-09-09"},{"lineNumber":199,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":200,"author":{"gitId":"jingyu987"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"jingyu987":200}},{"path":"src/main/java/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"package gui;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":" * The `Launcher` class serves as an entry point for launching the Fishron application.","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":" * It\u0027s used to work around classpath issues and start the JavaFX application.","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":"public class Launcher {","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"jingyu987"},"content":"     * The main method to start the Fishron application.","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"     * @param args Command-line arguments (not used in this application).","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":"        // Launch the Fishron application using JavaFX Application.launch","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"jingyu987"},"content":"        Application.launch(Fishron.class, args);","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"jingyu987"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"jingyu987":19}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"package parser;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"import commands.AddCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"import commands.Command;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"import commands.DeleteCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":"import commands.ExitCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":"import commands.FindCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":"import commands.ListCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":"import commands.MarkDoneCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"jingyu987"},"content":"import commands.UnmarkCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"jingyu987"},"content":"import commands.UnsureCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"jingyu987"},"content":"import exceptions.FishronException;","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":"import tasks.Event;","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":"import tasks.ToDo;","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"jingyu987"},"content":" * The Parser class is responsible for parsing user input and converting it into executable commands.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"jingyu987"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"jingyu987"},"content":"public class Parser {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"jingyu987"},"content":"     * Parses the user input and returns the corresponding Command object.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"jingyu987"},"content":"     * @param input    The user input string.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"jingyu987"},"content":"     * @param taskList The TaskList to operate on.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"jingyu987"},"content":"     * @return A Command object representing the parsed command.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"jingyu987"},"content":"     * @throws FishronException If there is an issue with parsing or an invalid command.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"jingyu987"},"content":"    public static Command parse(String input, TaskList taskList) throws FishronException {","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"jingyu987"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"jingyu987"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"jingyu987"},"content":"        isValidCommands(input, taskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"jingyu987"},"content":"        if (input.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"jingyu987"},"content":"            return new ListCommand();","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"jingyu987"},"content":"        } else if (input.toLowerCase().startsWith(\"find\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"jingyu987"},"content":"            String[] parts \u003d input.split(\"find\");","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"jingyu987"},"content":"            String keyword \u003d parts[1].trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"jingyu987"},"content":"            return new FindCommand(keyword);","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"jingyu987"},"content":"        } else if (input.toLowerCase().startsWith(\"mark\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"jingyu987"},"content":"            String[] parts \u003d input.split(\"mark\");","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"jingyu987"},"content":"            int taskIndex \u003d Integer.parseInt(parts[1].trim());","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"jingyu987"},"content":"            return new MarkDoneCommand(taskIndex);","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"jingyu987"},"content":"        } else if (input.toLowerCase().startsWith(\"unmark\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"jingyu987"},"content":"            String[] parts \u003d input.split(\"unmark\");","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"jingyu987"},"content":"            int taskIndex \u003d Integer.parseInt(parts[1].trim());","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"jingyu987"},"content":"            return new UnmarkCommand(taskIndex);","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"jingyu987"},"content":"        } else if (input.toLowerCase().startsWith(\"delete\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"jingyu987"},"content":"            String[] parts \u003d input.split(\"delete\");","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"jingyu987"},"content":"            int taskIndex \u003d Integer.parseInt(parts[1].trim());","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"jingyu987"},"content":"            return new DeleteCommand(taskIndex);","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"jingyu987"},"content":"        } else if (input.toLowerCase().startsWith(\"todo\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"jingyu987"},"content":"            String[] parts \u003d input.split(\"todo\");","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"jingyu987"},"content":"            return new AddCommand(parseTodo(parts[1]));","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"jingyu987"},"content":"        } else if (input.toLowerCase().startsWith(\"deadline\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"jingyu987"},"content":"            String[] parts \u003d input.split(\"/by\");","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"jingyu987"},"content":"            return new AddCommand(parseDeadline(parts[0].split(\"deadline\")[1].trim(), parts[1].trim()));","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"jingyu987"},"content":"        } else if (input.toLowerCase().startsWith(\"event\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"jingyu987"},"content":"            String[] parts \u003d input.split(\"/from|/to\");","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"jingyu987"},"content":"            return new AddCommand(parseEvent(parts[0].split(\"event\")[1].trim(), parts[1].trim(), parts[2].trim()));","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"jingyu987"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"jingyu987"},"content":"            return new UnsureCommand();","lastModifiedDate":"2023-09-09"},{"lineNumber":76,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"jingyu987"},"content":"     * Validates whether the given command is valid and follows the required format.","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"jingyu987"},"content":"     * @param command  The command to validate.","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"jingyu987"},"content":"     * @param taskList The TaskList to validate against.","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"jingyu987"},"content":"     * @return True if the command is valid, otherwise throws an exception.","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"jingyu987"},"content":"     * @throws FishronException If the command is invalid or in an incorrect format.","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"jingyu987"},"content":"    public static boolean isValidCommands(String command, TaskList taskList) throws FishronException {","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"jingyu987"},"content":"        if (command.equals(\"list\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"jingyu987"},"content":"            return true;","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"jingyu987"},"content":"        if (command.toLowerCase().startsWith(\"find\") \u0026\u0026 command.split(\"find\").length \u003c\u003d 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"jingyu987"},"content":"            throw new FishronException(\"☹ OOPS!!! Please provide a task to find.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"jingyu987"},"content":"        if (command.toLowerCase().startsWith(\"mark\") \u0026\u0026 command.split(\"mark\").length \u003c\u003d 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"jingyu987"},"content":"            throw new FishronException(\"☹ OOPS!!! Please provide a task to be marked.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"jingyu987"},"content":"        if (command.toLowerCase().startsWith(\"unmark\") \u0026\u0026 command.split(\"unmark\").length \u003c\u003d 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"jingyu987"},"content":"            throw new FishronException(\"☹ OOPS!!! Please provide a task to be unmarked.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"jingyu987"},"content":"        if (command.toLowerCase().startsWith(\"mark\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":107,"author":{"gitId":"jingyu987"},"content":"            String taskIndexPart \u003d command.split(\"mark\")[1].trim();","lastModifiedDate":"2023-09-09"},{"lineNumber":108,"author":{"gitId":"jingyu987"},"content":"            try {","lastModifiedDate":"2023-09-09"},{"lineNumber":109,"author":{"gitId":"jingyu987"},"content":"                Integer.parseInt(taskIndexPart);","lastModifiedDate":"2023-09-09"},{"lineNumber":110,"author":{"gitId":"jingyu987"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":111,"author":{"gitId":"jingyu987"},"content":"                throw new FishronException(\"☹ OOPS!!! Please provide a valid task index.\");","lastModifiedDate":"2023-09-09"},{"lineNumber":112,"author":{"gitId":"jingyu987"},"content":"            }","lastModifiedDate":"2023-09-09"},{"lineNumber":113,"author":{"gitId":"jingyu987"},"content":"            if (Integer.parseInt(taskIndexPart) \u003c 1 || Integer.parseInt(taskIndexPart) \u003e taskList.getSize()) {","lastModifiedDate":"2023-09-09"},{"lineNumber":114,"author":{"gitId":"jingyu987"},"content":"                throw new FishronException(\"☹ OOPS!!! Please provide a valid task index.\");","lastModifiedDate":"2023-09-09"},{"lineNumber":115,"author":{"gitId":"jingyu987"},"content":"            }","lastModifiedDate":"2023-09-09"},{"lineNumber":116,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":117,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":118,"author":{"gitId":"jingyu987"},"content":"        if (command.toLowerCase().startsWith(\"unmark\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":119,"author":{"gitId":"jingyu987"},"content":"            String taskIndexPart \u003d command.split(\"unmark\")[1].trim();","lastModifiedDate":"2023-09-09"},{"lineNumber":120,"author":{"gitId":"jingyu987"},"content":"            try {","lastModifiedDate":"2023-09-09"},{"lineNumber":121,"author":{"gitId":"jingyu987"},"content":"                Integer.parseInt(taskIndexPart);","lastModifiedDate":"2023-09-09"},{"lineNumber":122,"author":{"gitId":"jingyu987"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":123,"author":{"gitId":"jingyu987"},"content":"                throw new FishronException(\"☹ OOPS!!! Please provide a valid task index.\");","lastModifiedDate":"2023-09-09"},{"lineNumber":124,"author":{"gitId":"jingyu987"},"content":"            }","lastModifiedDate":"2023-09-09"},{"lineNumber":125,"author":{"gitId":"jingyu987"},"content":"            if (Integer.parseInt(taskIndexPart) \u003c 1 || Integer.parseInt(taskIndexPart) \u003e taskList.getSize()) {","lastModifiedDate":"2023-09-09"},{"lineNumber":126,"author":{"gitId":"jingyu987"},"content":"                throw new FishronException(\"☹ OOPS!!! Please provide a valid task index.\");","lastModifiedDate":"2023-09-09"},{"lineNumber":127,"author":{"gitId":"jingyu987"},"content":"            }","lastModifiedDate":"2023-09-09"},{"lineNumber":128,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":129,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":130,"author":{"gitId":"jingyu987"},"content":"        if (command.toLowerCase().startsWith(\"delete\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":131,"author":{"gitId":"jingyu987"},"content":"            String taskIndexPart \u003d command.split(\"delete\")[1].trim();","lastModifiedDate":"2023-09-09"},{"lineNumber":132,"author":{"gitId":"jingyu987"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"jingyu987"},"content":"                Integer.parseInt(taskIndexPart);","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"jingyu987"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"jingyu987"},"content":"                throw new FishronException(\"☹ OOPS!!! Please provide a valid task index.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"jingyu987"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"jingyu987"},"content":"            if (Integer.parseInt(taskIndexPart) \u003c 1 || Integer.parseInt(taskIndexPart) \u003e taskList.getSize()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"jingyu987"},"content":"                throw new FishronException(\"☹ OOPS!!! Please provide a valid task index.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"jingyu987"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"jingyu987"},"content":"        if (command.toLowerCase().startsWith(\"todo\") \u0026\u0026 command.split(\"todo\").length \u003c\u003d 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"jingyu987"},"content":"            throw new FishronException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"jingyu987"},"content":"        if (command.toLowerCase().startsWith(\"deadline\") \u0026\u0026 command.split(\"deadline\").length \u003c\u003d 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"jingyu987"},"content":"            throw new FishronException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"jingyu987"},"content":"        if (command.toLowerCase().startsWith(\"deadline\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"jingyu987"},"content":"            String[] parts \u003d command.split(\"/by\");","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"jingyu987"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"jingyu987"},"content":"                String emptyDesc \u003d parts[0].split(\"deadline\")[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":154,"author":{"gitId":"jingyu987"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":155,"author":{"gitId":"jingyu987"},"content":"                throw new FishronException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"jingyu987"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":157,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":158,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":159,"author":{"gitId":"jingyu987"},"content":"        if (command.toLowerCase().startsWith(\"deadline\")","lastModifiedDate":"2023-09-09"},{"lineNumber":160,"author":{"gitId":"jingyu987"},"content":"                \u0026\u0026 (command.split(\"/by\").length !\u003d 2 || command.split(\"/by\")[1].trim().isEmpty())) {","lastModifiedDate":"2023-09-09"},{"lineNumber":161,"author":{"gitId":"jingyu987"},"content":"            throw new FishronException(\"☹ OOPS!!! Please provide a valid deadline format.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":162,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":163,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":164,"author":{"gitId":"jingyu987"},"content":"        if (command.toLowerCase().startsWith(\"event\") \u0026\u0026 command.split(\"event\").length \u003c\u003d 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":165,"author":{"gitId":"jingyu987"},"content":"            throw new FishronException(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":166,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":167,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":168,"author":{"gitId":"jingyu987"},"content":"        if (command.toLowerCase().startsWith(\"event\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":169,"author":{"gitId":"jingyu987"},"content":"            String[] parts \u003d command.split(\"/from|/to\");","lastModifiedDate":"2023-09-02"},{"lineNumber":170,"author":{"gitId":"jingyu987"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":171,"author":{"gitId":"jingyu987"},"content":"                String emptyDesc \u003d parts[0].split(\"event\")[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":172,"author":{"gitId":"jingyu987"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":173,"author":{"gitId":"jingyu987"},"content":"                throw new FishronException(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":174,"author":{"gitId":"jingyu987"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":175,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":176,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":177,"author":{"gitId":"jingyu987"},"content":"        if (command.toLowerCase().startsWith(\"event\")","lastModifiedDate":"2023-09-09"},{"lineNumber":178,"author":{"gitId":"jingyu987"},"content":"                \u0026\u0026 (command.split(\"/from|/to\").length !\u003d 3 || command.split(\"/from|/to\")[1].trim().isEmpty()","lastModifiedDate":"2023-09-09"},{"lineNumber":179,"author":{"gitId":"jingyu987"},"content":"                        || command.split(\"/from|/to\")[2].trim().isEmpty())) {","lastModifiedDate":"2023-09-09"},{"lineNumber":180,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":181,"author":{"gitId":"jingyu987"},"content":"            throw new FishronException(\"☹ OOPS!!! Please provide a valid event format.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":182,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":183,"author":{"gitId":"jingyu987"},"content":"        return true;","lastModifiedDate":"2023-09-02"},{"lineNumber":184,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":185,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":186,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":187,"author":{"gitId":"jingyu987"},"content":"     * Parses a description string and creates a ToDo object.","lastModifiedDate":"2023-09-02"},{"lineNumber":188,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":189,"author":{"gitId":"jingyu987"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2023-09-02"},{"lineNumber":190,"author":{"gitId":"jingyu987"},"content":"     * @return A ToDo object.","lastModifiedDate":"2023-09-02"},{"lineNumber":191,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":192,"author":{"gitId":"jingyu987"},"content":"    public static ToDo parseTodo(String description) {","lastModifiedDate":"2023-09-02"},{"lineNumber":193,"author":{"gitId":"jingyu987"},"content":"        return new ToDo(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":194,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":195,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":196,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":197,"author":{"gitId":"jingyu987"},"content":"     * Parses a description and a deadline string and creates a Deadline object.","lastModifiedDate":"2023-09-02"},{"lineNumber":198,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":199,"author":{"gitId":"jingyu987"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2023-09-02"},{"lineNumber":200,"author":{"gitId":"jingyu987"},"content":"     * @param by          The deadline in the format \"dd-MM-yyyy HHmm\".","lastModifiedDate":"2023-09-02"},{"lineNumber":201,"author":{"gitId":"jingyu987"},"content":"     * @return A Deadline object.","lastModifiedDate":"2023-09-02"},{"lineNumber":202,"author":{"gitId":"jingyu987"},"content":"     * @throws FishronException If the deadline format is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":203,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":204,"author":{"gitId":"jingyu987"},"content":"    public static Deadline parseDeadline(String description, String by) throws FishronException {","lastModifiedDate":"2023-09-02"},{"lineNumber":205,"author":{"gitId":"jingyu987"},"content":"        return new Deadline(description, by);","lastModifiedDate":"2023-09-02"},{"lineNumber":206,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":207,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":208,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":209,"author":{"gitId":"jingyu987"},"content":"     * Parses a description, a \"from\" string, and a \"to\" string and creates an Event object.","lastModifiedDate":"2023-09-02"},{"lineNumber":210,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":211,"author":{"gitId":"jingyu987"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2023-09-02"},{"lineNumber":212,"author":{"gitId":"jingyu987"},"content":"     * @param from        The starting date and time in the format \"dd-MM-yyyy HHmm\".","lastModifiedDate":"2023-09-02"},{"lineNumber":213,"author":{"gitId":"jingyu987"},"content":"     * @param to          The ending date and time in the format \"dd-MM-yyyy HHmm\".","lastModifiedDate":"2023-09-02"},{"lineNumber":214,"author":{"gitId":"jingyu987"},"content":"     * @return An Event object.","lastModifiedDate":"2023-09-02"},{"lineNumber":215,"author":{"gitId":"jingyu987"},"content":"     * @throws FishronException If the date/time format is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":216,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":217,"author":{"gitId":"jingyu987"},"content":"    public static Event parseEvent(String description, String from, String to) throws FishronException {","lastModifiedDate":"2023-09-02"},{"lineNumber":218,"author":{"gitId":"jingyu987"},"content":"        return new Event(description, from, to);","lastModifiedDate":"2023-09-02"},{"lineNumber":219,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":220,"author":{"gitId":"jingyu987"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"jingyu987":220}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"package storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"import java.io.File;","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":"import exceptions.FishronException;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":"import parser.Parser;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"jingyu987"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"jingyu987"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":" * The Storage class handles loading and saving tasks to/from a file.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"jingyu987"},"content":"public class Storage {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"    private File file;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"jingyu987"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"jingyu987"},"content":"     * @param filePath The path to the file where tasks will be stored.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"jingyu987"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"jingyu987"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"jingyu987"},"content":"     * Loads tasks from the file and returns a TaskList containing them.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"jingyu987"},"content":"     * @return A TaskList containing tasks loaded from the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"jingyu987"},"content":"    public TaskList loadTasksFromFile() {","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"jingyu987"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"jingyu987"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"jingyu987"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"jingyu987"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"jingyu987"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"jingyu987"},"content":"                String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"jingyu987"},"content":"                if (parts.length \u003e\u003d 2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"jingyu987"},"content":"                    String taskType \u003d parts[0];","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"jingyu987"},"content":"                    boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"jingyu987"},"content":"                    String description \u003d parts[2];","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"jingyu987"},"content":"                    if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"jingyu987"},"content":"                        Task task \u003d Parser.parseTodo(description.trim());","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"jingyu987"},"content":"                        if (isDone) {","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"jingyu987"},"content":"                            task.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"jingyu987"},"content":"                        }","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"jingyu987"},"content":"                        taskList.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"jingyu987"},"content":"                    } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"jingyu987"},"content":"                        String by \u003d parts[3];","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"jingyu987"},"content":"                        Task task \u003d Parser.parseDeadline(description.trim(), by.trim());","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"jingyu987"},"content":"                        if (isDone) {","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"jingyu987"},"content":"                            task.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"jingyu987"},"content":"                        }","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"jingyu987"},"content":"                        taskList.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"jingyu987"},"content":"                    } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"jingyu987"},"content":"                        String from \u003d parts[3];","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"jingyu987"},"content":"                        String to \u003d parts[4];","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"jingyu987"},"content":"                        Task task \u003d Parser.parseEvent(description.trim(), from.trim(), to.trim());","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"jingyu987"},"content":"                        if (isDone) {","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"jingyu987"},"content":"                            task.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"jingyu987"},"content":"                        }","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"jingyu987"},"content":"                        taskList.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"jingyu987"},"content":"                    }","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"jingyu987"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"jingyu987"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"jingyu987"},"content":"            scanner.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"jingyu987"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"jingyu987"},"content":"            System.out.println(\"No saved tasks found.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"jingyu987"},"content":"        } catch (FishronException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"jingyu987"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"jingyu987"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"jingyu987"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"jingyu987"},"content":"        return new TaskList(taskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"jingyu987"},"content":"     * Saves the provided task list to the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"jingyu987"},"content":"     * @param taskList The list of tasks to be saved.","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"jingyu987"},"content":"    public void saveTasksToFile(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"jingyu987"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"jingyu987"},"content":"            PrintWriter printWriter \u003d new PrintWriter(\"./data/fishron.txt\");","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"jingyu987"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"jingyu987"},"content":"                printWriter.println(task.toFileString());","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"jingyu987"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"jingyu987"},"content":"            printWriter.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"jingyu987"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"jingyu987"},"content":"            System.out.println(\"Error saving tasks to file.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"jingyu987"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"jingyu987":97}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"package tasks;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":"import exceptions.FishronException;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"jingyu987"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"jingyu987"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"     * Constructs a deadline task with the given description and deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"jingyu987"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"jingyu987"},"content":"     * @param by          The deadline in the format \"dd-MM-yyyy HHmm\".","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jingyu987"},"content":"     * @throws FishronException If the provided date/time format is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"jingyu987"},"content":"    public Deadline(String description, String by) throws FishronException {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"jingyu987"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"jingyu987"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"jingyu987"},"content":"            this.by \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"jingyu987"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"jingyu987"},"content":"            throw new FishronException(\"☹ OOPS!!! Please provide a valid date/time format. e.g. 21-05-2023 1200\");","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"jingyu987"},"content":"     * Converts the deadline task to a string representation for storing in a file.","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"jingyu987"},"content":"     * @return The string representation of the deadline task for storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"jingyu987"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"jingyu987"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"jingyu987"},"content":"        return \"D | \" + super.toFileString() + \" | \" + by.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"jingyu987"},"content":"     * Converts the deadline task to a user-friendly string representation.","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"jingyu987"},"content":"     * @return The user-friendly string representation of the deadline task.","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"jingyu987"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"jingyu987"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"jingyu987"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mma\")) + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"jingyu987"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jingyu987":52}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"package tasks;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":"import exceptions.FishronException;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"jingyu987"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"jingyu987"},"content":" * Represents an event task.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"jingyu987"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"     * Initializes a new Event instance.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"jingyu987"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"jingyu987"},"content":"     * @param from        The starting date and time of the event in the format \"dd-MM-yyyy HHmm\".","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jingyu987"},"content":"     * @param to          The ending date and time of the event in the format \"dd-MM-yyyy HHmm\".","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"jingyu987"},"content":"     * @throws FishronException If the date/time format is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"jingyu987"},"content":"    public Event(String description, String from, String to) throws FishronException {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"jingyu987"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"jingyu987"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"jingyu987"},"content":"            this.from \u003d LocalDateTime.parse(from, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"jingyu987"},"content":"            this.to \u003d LocalDateTime.parse(to, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"jingyu987"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"jingyu987"},"content":"            throw new FishronException(\"☹ OOPS!!! Please provide a valid date/time format. e.g. 21-05-2023 1200\");","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"jingyu987"},"content":"     * Converts the event task to a string in the file format.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"jingyu987"},"content":"     * @return A string representation of the event task in the file format.","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"jingyu987"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"jingyu987"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"jingyu987"},"content":"        return \"E | \" + super.toFileString() + \" | \" + from.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"jingyu987"},"content":"                + \" | \"","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"jingyu987"},"content":"                + to.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"jingyu987"},"content":"     * Converts the event task to a string representation.","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"jingyu987"},"content":"     * @return A string representation of the event task.","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"jingyu987"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"jingyu987"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"jingyu987"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"jingyu987"},"content":"                + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mma\")) + \" to: \"","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"jingyu987"},"content":"                + to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mma\")) + \")\";","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"jingyu987"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jingyu987":58}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"package tasks;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":" * Represents a task with a description and status.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"jingyu987"},"content":"     * Constructs a task with the given description and marks it as not done.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"jingyu987"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"jingyu987"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"jingyu987"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"jingyu987"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"jingyu987"},"content":"     * Marks the task as undone.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"jingyu987"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"jingyu987"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"jingyu987"},"content":"     * Converts the task to a formatted string for saving to a file.","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"jingyu987"},"content":"     * @return A string representation of the task for file storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"jingyu987"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"jingyu987"},"content":"        return (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"jingyu987"},"content":"     * Gets the description of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"jingyu987"},"content":"     * @return The task\u0027s description.","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"jingyu987"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"jingyu987"},"content":"        return description;","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"jingyu987"},"content":"     * Gets an icon representing the status of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"jingyu987"},"content":"     * @return A string containing an icon ([X] for done, [ ] for undone).","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"jingyu987"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"jingyu987"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"jingyu987"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"jingyu987"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"jingyu987"},"content":"        return getStatusIcon().trim() + \" \" + getDescription().trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"jingyu987"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"jingyu987":65}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"package tasks;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":" * Represents a list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":"public class TaskList {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"jingyu987"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"     * Constructs an empty task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"jingyu987"},"content":"     * Constructs a task list with the given initial list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jingyu987"},"content":"     * @param taskList The initial list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"jingyu987"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"jingyu987"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"jingyu987"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"jingyu987"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"jingyu987"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"jingyu987"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"jingyu987"},"content":"     * Deletes a task from the task list at the specified index.","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"jingyu987"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"jingyu987"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"jingyu987"},"content":"        this.taskList.remove(index - 1);","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"jingyu987"},"content":"     * Gets the list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"jingyu987"},"content":"     * @return The list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"jingyu987"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"jingyu987"},"content":"        return this.taskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"jingyu987"},"content":"     * Gets the number of tasks in the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"jingyu987"},"content":"     * @return The number of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"jingyu987"},"content":"    public int getSize() {","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"jingyu987"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"jingyu987"},"content":"     * Marks a task as done at the specified index.","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"jingyu987"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"jingyu987"},"content":"    public void markAsDone(int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"jingyu987"},"content":"        this.taskList.get(index - 1).markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"jingyu987"},"content":"     * Marks a task as undone at the specified index.","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"jingyu987"},"content":"     * @param index The index of the task to be marked as undone.","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"jingyu987"},"content":"    public void markAsUndone(int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"jingyu987"},"content":"        this.taskList.get(index - 1).markAsUndone();","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"jingyu987"},"content":"     * Gets the task at the specified index.","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"jingyu987"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"jingyu987"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"jingyu987"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"jingyu987"},"content":"        return this.taskList.get(index - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"jingyu987"},"content":"     * Finds tasks containing a specific keyword in the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"jingyu987"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"jingyu987"},"content":"     * @return An ArrayList of tasks containing the specified keyword.","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"jingyu987"},"content":"    public ArrayList\u003cTask\u003e findTasksByKeyword(String keyword) {","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"jingyu987"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"jingyu987"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"jingyu987"},"content":"            if (task.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"jingyu987"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"jingyu987"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"jingyu987"},"content":"        return matchingTasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"jingyu987"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"jingyu987":107}},{"path":"src/main/java/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"package tasks;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":" * Represents a ToDo task.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":"     * Constructs a ToDo task with the given description.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"jingyu987"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"     * Converts the ToDo task to a string format suitable for saving to a file.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"jingyu987"},"content":"     * @return A string representation of the tToDo task for file storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jingyu987"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"jingyu987"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"jingyu987"},"content":"        return \"T | \" + super.toFileString();","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"jingyu987"},"content":"     * Converts the ToDo task to a user-friendly string format for display.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"jingyu987"},"content":"     * @return A user-friendly string representation of the ToDo task.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"jingyu987"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"jingyu987"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"jingyu987"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"jingyu987"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jingyu987":36}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"package ui;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"jingyu987"},"content":" * The `Ui` class handles user interaction and displays messages to the console.","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"jingyu987"},"content":" * It provides methods for showing welcome and goodbye messages, reading user commands,","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"jingyu987"},"content":" * displaying task-related information, and showing error messages.","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":"public class Ui {","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":"    private Scanner sc;","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"jingyu987"},"content":"     * Creates a new `Ui` object and initializes the scanner for user input.","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"jingyu987"},"content":"    public Ui() {","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"jingyu987"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"jingyu987"},"content":"     * Displays a welcome message to the user when the application starts.","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"jingyu987"},"content":"     * @return The welcome message as a string.","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"jingyu987"},"content":"    public String showWelcomeMessage() {","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"jingyu987"},"content":"        return \"Hello! I\u0027m Fishron\\n\" + \"What can I do for you?\";","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"jingyu987"},"content":"     * Displays a goodbye message to the user when the application exits.","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"jingyu987"},"content":"     * @return The goodbye message as a string.","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"jingyu987"},"content":"    public String showGoodbyeMessage() {","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"jingyu987"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"jingyu987"},"content":"     * Displays a horizontal line as a separator in the console.","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"jingyu987"},"content":"     * @return The horizontal line as a string.","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"jingyu987"},"content":"    public String showLine() {","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"jingyu987"},"content":"        return \"___________________________________________________________\";","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"jingyu987"},"content":"     * Reads a user command from the console and returns it as a string.","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"jingyu987"},"content":"     * @return The user-entered command.","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"jingyu987"},"content":"    public String readCommand() {","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"jingyu987"},"content":"        String userCommand \u003d sc.nextLine();","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"jingyu987"},"content":"        return userCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"jingyu987"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"jingyu987"},"content":"     * @param errorMsg The error message to be displayed.","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"jingyu987"},"content":"     * @return The error message as a string.","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"jingyu987"},"content":"    public String showErrorMessage(String errorMsg) {","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"jingyu987"},"content":"        return errorMsg;","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":68,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":69,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":70,"author":{"gitId":"jingyu987"},"content":"     * Displays a message to indicate that a task has been successfully added.","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"jingyu987"},"content":"     * @param taskList The task list containing the added task.","lastModifiedDate":"2023-09-09"},{"lineNumber":73,"author":{"gitId":"jingyu987"},"content":"     * @return A string to indicate that a task has been successfully added.","lastModifiedDate":"2023-09-09"},{"lineNumber":74,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":75,"author":{"gitId":"jingyu987"},"content":"    public String showTaskAdded(TaskList taskList) {","lastModifiedDate":"2023-09-09"},{"lineNumber":76,"author":{"gitId":"jingyu987"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-09"},{"lineNumber":77,"author":{"gitId":"jingyu987"},"content":"            + \"  \" + taskList.getList().get(taskList.getSize() - 1).toString() + \"\\n\"","lastModifiedDate":"2023-09-09"},{"lineNumber":78,"author":{"gitId":"jingyu987"},"content":"            + \"Now you have \" + taskList.getSize() + \" tasks in the list.\";","lastModifiedDate":"2023-09-09"},{"lineNumber":79,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":80,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":81,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":82,"author":{"gitId":"jingyu987"},"content":"     * Displays the list of tasks to the user.","lastModifiedDate":"2023-09-09"},{"lineNumber":83,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"jingyu987"},"content":"     * @param taskList The task list to be displayed.","lastModifiedDate":"2023-09-09"},{"lineNumber":85,"author":{"gitId":"jingyu987"},"content":"     * @return The list of tasks as a string.","lastModifiedDate":"2023-09-09"},{"lineNumber":86,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":87,"author":{"gitId":"jingyu987"},"content":"    public String showTaskList(TaskList taskList) {","lastModifiedDate":"2023-09-09"},{"lineNumber":88,"author":{"gitId":"jingyu987"},"content":"        String taskListString \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-09-09"},{"lineNumber":89,"author":{"gitId":"jingyu987"},"content":"        ArrayList\u003cTask\u003e list \u003d taskList.getList();","lastModifiedDate":"2023-09-09"},{"lineNumber":90,"author":{"gitId":"jingyu987"},"content":"        int start \u003d 1;","lastModifiedDate":"2023-09-09"},{"lineNumber":91,"author":{"gitId":"jingyu987"},"content":"        for (Task listItems : list) {","lastModifiedDate":"2023-09-09"},{"lineNumber":92,"author":{"gitId":"jingyu987"},"content":"            taskListString +\u003d String.format(\"%d. %s\\n\", start, listItems.toString());","lastModifiedDate":"2023-09-09"},{"lineNumber":93,"author":{"gitId":"jingyu987"},"content":"            start++;","lastModifiedDate":"2023-09-09"},{"lineNumber":94,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":95,"author":{"gitId":"jingyu987"},"content":"        return taskListString;","lastModifiedDate":"2023-09-09"},{"lineNumber":96,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":97,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":98,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":99,"author":{"gitId":"jingyu987"},"content":"     * Displays a message to indicate that a task has been successfully deleted.","lastModifiedDate":"2023-09-09"},{"lineNumber":100,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":101,"author":{"gitId":"jingyu987"},"content":"     * @param tasklist The task list containing the deleted task.","lastModifiedDate":"2023-09-09"},{"lineNumber":102,"author":{"gitId":"jingyu987"},"content":"     * @param deleted  The deleted task.","lastModifiedDate":"2023-09-09"},{"lineNumber":103,"author":{"gitId":"jingyu987"},"content":"     * @return A string to indicate that a task has been successfully deleted.","lastModifiedDate":"2023-09-09"},{"lineNumber":104,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":105,"author":{"gitId":"jingyu987"},"content":"    public String showTaskDeleted(TaskList tasklist, Task deleted) {","lastModifiedDate":"2023-09-09"},{"lineNumber":106,"author":{"gitId":"jingyu987"},"content":"        String message \u003d \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-09-09"},{"lineNumber":107,"author":{"gitId":"jingyu987"},"content":"                + \"  \" + deleted + \"\\n\"","lastModifiedDate":"2023-09-09"},{"lineNumber":108,"author":{"gitId":"jingyu987"},"content":"                + \"Now you have \" + tasklist.getSize() + \" tasks in the list.\";","lastModifiedDate":"2023-09-09"},{"lineNumber":109,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":110,"author":{"gitId":"jingyu987"},"content":"        return message;","lastModifiedDate":"2023-09-09"},{"lineNumber":111,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":112,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":113,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":114,"author":{"gitId":"jingyu987"},"content":"     * Displays a message to indicate that a task has been marked as done.","lastModifiedDate":"2023-09-09"},{"lineNumber":115,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":116,"author":{"gitId":"jingyu987"},"content":"     * @param task The task that has been marked as done.","lastModifiedDate":"2023-09-09"},{"lineNumber":117,"author":{"gitId":"jingyu987"},"content":"     * @return A string to indicate that a task has been successfully marked.","lastModifiedDate":"2023-09-09"},{"lineNumber":118,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":119,"author":{"gitId":"jingyu987"},"content":"    public String showDoneTask(Task task) {","lastModifiedDate":"2023-09-09"},{"lineNumber":120,"author":{"gitId":"jingyu987"},"content":"        String message \u003d \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-09-09"},{"lineNumber":121,"author":{"gitId":"jingyu987"},"content":"                + \"  \" + task.toString();","lastModifiedDate":"2023-09-09"},{"lineNumber":122,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":123,"author":{"gitId":"jingyu987"},"content":"        return message;","lastModifiedDate":"2023-09-09"},{"lineNumber":124,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":125,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":126,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":127,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":128,"author":{"gitId":"jingyu987"},"content":"     * Displays a message to indicate that a task has been marked as undone.","lastModifiedDate":"2023-09-09"},{"lineNumber":129,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":130,"author":{"gitId":"jingyu987"},"content":"     * @param task The task that has been marked as undone.","lastModifiedDate":"2023-09-09"},{"lineNumber":131,"author":{"gitId":"jingyu987"},"content":"     * @return A string to indicate that a task has been successfully unmarked.","lastModifiedDate":"2023-09-09"},{"lineNumber":132,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":133,"author":{"gitId":"jingyu987"},"content":"    public String showUnmarkTask(Task task) {","lastModifiedDate":"2023-09-09"},{"lineNumber":134,"author":{"gitId":"jingyu987"},"content":"        String message \u003d \"I\u0027ve marked this task as undone:\\n\"","lastModifiedDate":"2023-09-09"},{"lineNumber":135,"author":{"gitId":"jingyu987"},"content":"                + \"  \" + task.toString();","lastModifiedDate":"2023-09-09"},{"lineNumber":136,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":137,"author":{"gitId":"jingyu987"},"content":"        return message;","lastModifiedDate":"2023-09-09"},{"lineNumber":138,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":139,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":140,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":141,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":142,"author":{"gitId":"jingyu987"},"content":"     * Displays tasks that contains the keyWord.","lastModifiedDate":"2023-09-09"},{"lineNumber":143,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":144,"author":{"gitId":"jingyu987"},"content":"     * @param matchingTasks The task list to search on.","lastModifiedDate":"2023-09-09"},{"lineNumber":145,"author":{"gitId":"jingyu987"},"content":"     * @param keyWord       Keyword to be searched.","lastModifiedDate":"2023-09-09"},{"lineNumber":146,"author":{"gitId":"jingyu987"},"content":"     * @return A list of matching tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":147,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":148,"author":{"gitId":"jingyu987"},"content":"    public String showMatchingTasks(TaskList matchingTasks, String keyWord) {","lastModifiedDate":"2023-09-09"},{"lineNumber":149,"author":{"gitId":"jingyu987"},"content":"        ArrayList\u003cTask\u003e taskList \u003d matchingTasks.findTasksByKeyword(keyWord);","lastModifiedDate":"2023-09-09"},{"lineNumber":150,"author":{"gitId":"jingyu987"},"content":"        String output \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-09-09"},{"lineNumber":151,"author":{"gitId":"jingyu987"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-09-09"},{"lineNumber":152,"author":{"gitId":"jingyu987"},"content":"            output +\u003d task.toString() + \"\\n\";","lastModifiedDate":"2023-09-09"},{"lineNumber":153,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":154,"author":{"gitId":"jingyu987"},"content":"        return output;","lastModifiedDate":"2023-09-09"},{"lineNumber":155,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":156,"author":{"gitId":"jingyu987"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"jingyu987":156}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"jingyu987"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"jingyu987"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"jingyu987"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"jingyu987":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.Fishron\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"jingyu987"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"jingyu987"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"jingyu987"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"jingyu987"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"jingyu987"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"jingyu987":19}},{"path":"src/test/java/gui/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"package gui;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"import commands.Command;","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"import exceptions.FishronException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"import parser.Parser;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"jingyu987"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"jingyu987"},"content":"public class AddCommandTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":"    public void execute_addTodo_success() throws FishronException {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"jingyu987"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"        Command addCommand \u003d parser.parse(\"todo Buy groceries\", taskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"jingyu987"},"content":"        addCommand.execute(taskList, new Ui(), new Storage(\"./data/fishron.txt\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jingyu987"},"content":"        assertEquals(1, taskList.getSize());","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"jingyu987"},"content":"        assertEquals(\"[T][ ] Buy groceries\", taskList.getTask(1).toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"jingyu987"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"jingyu987":25}},{"path":"src/test/java/gui/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"package gui;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"import exceptions.FishronException;","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"import parser.Parser;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":"import tasks.ToDo;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"jingyu987"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"jingyu987"},"content":"    public void testParseTodo() {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"jingyu987"},"content":"        String description \u003d \"todo Buy milk\";","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"        ToDo todo \u003d Parser.parseTodo(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":"        String expectedDescription \u003d \"[T][ ] todo Buy milk\";","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":"        assertEquals(expectedDescription, todo.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"jingyu987"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"jingyu987"},"content":"    public void testParseDeadline() throws FishronException {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"jingyu987"},"content":"        String description \u003d \"sleep\";","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jingyu987"},"content":"        Deadline deadline \u003d Parser.parseDeadline(description, \"12-05-2023 2300\");","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"jingyu987"},"content":"        String expectedDescription \u003d \"[D][ ] sleep (by: May 12 2023 11:00PM)\";","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"jingyu987"},"content":"        assertEquals(expectedDescription, deadline.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"jingyu987"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"jingyu987":27}},{"path":"src/test/java/gui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"package gui;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"import commands.Command;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"import commands.MarkDoneCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"import exceptions.FishronException;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":"import tasks.ToDo;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"jingyu987"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"jingyu987"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"jingyu987"},"content":"public class UiTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"jingyu987"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"jingyu987"},"content":"    public void showDoneTaskTest() throws FishronException {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"jingyu987"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jingyu987"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"jingyu987"},"content":"        ToDo todo \u003d new ToDo(\"Buy milk\");","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"jingyu987"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"jingyu987"},"content":"        Command markCommand \u003d new MarkDoneCommand(taskList.getSize());","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"jingyu987"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"jingyu987"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"jingyu987"},"content":"        markCommand.execute(taskList, ui, new Storage(\"./data/fishron.txt\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"jingyu987"},"content":"        System.setOut(System.out);","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"jingyu987"},"content":"        String expectedDesc \u003d \"___________________________________________________________\\n\" +","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"jingyu987"},"content":"                \"Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"jingyu987"},"content":"                \"  \" + todo.toString();","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"jingyu987"},"content":"        String printedOutput \u003d outContent.toString().trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"jingyu987"},"content":"        expectedDesc \u003d expectedDesc.replaceAll(\"\\\\r\\\\n\", \"\\n\");","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"jingyu987"},"content":"        printedOutput \u003d printedOutput.replaceAll(\"\\\\r\\\\n\", \"\\n\");","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"jingyu987"},"content":"        assertEquals(expectedDesc, printedOutput);","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"jingyu987"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"jingyu987":46}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"todo Read book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"deadline Return book /by June 6th","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"event Project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":"unmark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":"delete 3","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jingyu987":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"java -classpath ..\\bin Fishron \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jingyu987":1,"-":20}}]
