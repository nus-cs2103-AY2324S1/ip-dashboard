[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":"    public Deadline(String description, String by) throws FishronException {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"jingyu987"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"jingyu987"},"content":"            this.by \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"jingyu987"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"            throw new FishronException(\"☹ OOPS!!! Please provide a valid date/time format.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"jingyu987"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"        return \"D | \" + super.toFileString() + \" | \" + by.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"jingyu987"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"jingyu987"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"jingyu987"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mma\")) + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"jingyu987"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jingyu987":25}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":"    public Event(String description, String from, String to) throws FishronException {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"jingyu987"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"jingyu987"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"jingyu987"},"content":"            this.from \u003d LocalDateTime.parse(from, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"            this.to \u003d LocalDateTime.parse(to, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":"            throw new FishronException(\"☹ OOPS!!! Please provide a valid date/time format.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"jingyu987"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"jingyu987"},"content":"        return \"E | \" + super.toFileString() + \" | \" + from.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\")) + \" | \" +","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"jingyu987"},"content":"                to.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"jingyu987"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"jingyu987"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"jingyu987"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mma\")) + \" to: \" +","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"jingyu987"},"content":"                to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mma\")) + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"jingyu987"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jingyu987":29}},{"path":"src/main/java/Fishron.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"import java.util.List;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"jingyu987"},"content":"public class Fishron {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"jingyu987"},"content":"    private String name;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"jingyu987"},"content":"    private List\u003cTask\u003e storage \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":"    public Fishron(String name) {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"    public void greet() {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"jingyu987"},"content":"        System.out.println(\"Hello! I\u0027m \" + name);","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"jingyu987"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"jingyu987"},"content":"    public void farewell() {","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"jingyu987"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"jingyu987"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"jingyu987"},"content":"        storage.add(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"jingyu987"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"jingyu987"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"jingyu987"},"content":"        System.out.println(\"  \" + task.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"jingyu987"},"content":"        System.out.println(\"Now you have \" + storage.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"jingyu987"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"jingyu987"},"content":"    public void listTasks() {","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"jingyu987"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"jingyu987"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"jingyu987"},"content":"        for (int i \u003d 0; i \u003c storage.size(); i++) {","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"jingyu987"},"content":"            Task task \u003d storage.get(i);","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"jingyu987"},"content":"            int count \u003d i + 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"jingyu987"},"content":"            System.out.println(count + \".\" + task.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"jingyu987"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"jingyu987"},"content":"    public void markTaskAsDone(int Index) {","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"jingyu987"},"content":"        if (Index \u003e\u003d 1 \u0026\u0026 Index \u003c\u003d storage.size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"jingyu987"},"content":"            Task task \u003d storage.get(Index - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"jingyu987"},"content":"            task.markAsDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"jingyu987"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"jingyu987"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"jingyu987"},"content":"            System.out.println(\"  \" + task.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"jingyu987"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"jingyu987"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"jingyu987"},"content":"            System.out.println(\"Invalid task number.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"jingyu987"},"content":"    public void unmarkTask(int Index) {","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"jingyu987"},"content":"        if (Index \u003e\u003d 1 \u0026\u0026 Index \u003c\u003d storage.size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"jingyu987"},"content":"            Task task \u003d storage.get(Index - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"jingyu987"},"content":"            task.markAsUndone();","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"jingyu987"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"jingyu987"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"jingyu987"},"content":"            System.out.println(\"  \" + task.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"jingyu987"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"jingyu987"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"jingyu987"},"content":"            System.out.println(\"Invalid task number.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"jingyu987"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"jingyu987"},"content":"        if (index \u003e\u003d 1 \u0026\u0026 index \u003c\u003d storage.size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"jingyu987"},"content":"            Task removedTask \u003d storage.remove(index - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"jingyu987"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"jingyu987"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"jingyu987"},"content":"            System.out.println(\"  \" + removedTask);","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"jingyu987"},"content":"            System.out.println(\"Now you have \" + storage.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"jingyu987"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"jingyu987"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"jingyu987"},"content":"            System.out.println(\"Invalid task number.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"jingyu987"},"content":"    public void saveTasksToFile() {","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"jingyu987"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"jingyu987"},"content":"            PrintWriter printWriter \u003d new PrintWriter(\"./data/fishron.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"jingyu987"},"content":"            for (Task task : storage) {","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"jingyu987"},"content":"                printWriter.println(task.toFileString());","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"jingyu987"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"jingyu987"},"content":"            printWriter.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"jingyu987"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"jingyu987"},"content":"            System.out.println(\"Error saving tasks to file.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"jingyu987"},"content":"    public void loadTasksFromFile() {","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"jingyu987"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"jingyu987"},"content":"            File file \u003d new File(\"./data/fishron.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"jingyu987"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"jingyu987"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"jingyu987"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"jingyu987"},"content":"                String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"jingyu987"},"content":"                if (parts.length \u003e\u003d 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"jingyu987"},"content":"                    String taskType \u003d parts[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"jingyu987"},"content":"                    boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"jingyu987"},"content":"                    String description \u003d parts[2];","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"jingyu987"},"content":"                    if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"jingyu987"},"content":"                        ToDo todo \u003d new ToDo(description);","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"jingyu987"},"content":"                        if (isDone) {","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"jingyu987"},"content":"                            todo.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"jingyu987"},"content":"                        }","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"jingyu987"},"content":"                        storage.add(todo);","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"jingyu987"},"content":"                    } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"jingyu987"},"content":"                        String by \u003d parts[3];","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"jingyu987"},"content":"                        Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"jingyu987"},"content":"                        if (isDone) {","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"jingyu987"},"content":"                            deadline.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"jingyu987"},"content":"                        }","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"jingyu987"},"content":"                        storage.add(deadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"jingyu987"},"content":"                    } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"jingyu987"},"content":"                        String from \u003d parts[3];","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"jingyu987"},"content":"                        String to \u003d parts[4];","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"jingyu987"},"content":"                        Event event \u003d new Event(description, from, to);","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"jingyu987"},"content":"                        if (isDone) {","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"jingyu987"},"content":"                            event.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"jingyu987"},"content":"                        }","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"jingyu987"},"content":"                        storage.add(event);","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"jingyu987"},"content":"                    }","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"jingyu987"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"jingyu987"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"jingyu987"},"content":"            scanner.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"jingyu987"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"jingyu987"},"content":"            System.out.println(\"No saved tasks found.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"jingyu987"},"content":"        } catch (FishronException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"jingyu987"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"jingyu987"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"jingyu987"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"jingyu987"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-23"},{"lineNumber":145,"author":{"gitId":"jingyu987"},"content":"        String botName \u003d \"Fishron\";","lastModifiedDate":"2023-08-23"},{"lineNumber":146,"author":{"gitId":"jingyu987"},"content":"        Fishron chatBot \u003d new Fishron(botName);","lastModifiedDate":"2023-08-23"},{"lineNumber":147,"author":{"gitId":"jingyu987"},"content":"        chatBot.loadTasksFromFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":149,"author":{"gitId":"jingyu987"},"content":"        chatBot.greet();","lastModifiedDate":"2023-08-23"},{"lineNumber":150,"author":{"gitId":"jingyu987"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-23"},{"lineNumber":151,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":152,"author":{"gitId":"jingyu987"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":153,"author":{"gitId":"jingyu987"},"content":"        String input;","lastModifiedDate":"2023-08-23"},{"lineNumber":154,"author":{"gitId":"jingyu987"},"content":"        do {","lastModifiedDate":"2023-08-23"},{"lineNumber":155,"author":{"gitId":"jingyu987"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":156,"author":{"gitId":"jingyu987"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":157,"author":{"gitId":"jingyu987"},"content":"            if (input.toLowerCase().startsWith(\"todo\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":158,"author":{"gitId":"jingyu987"},"content":"                String[] parts \u003d input.split(\"todo\");","lastModifiedDate":"2023-08-24"},{"lineNumber":159,"author":{"gitId":"jingyu987"},"content":"                if (parts.length \u003c 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":160,"author":{"gitId":"jingyu987"},"content":"                    throw new FishronException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":161,"author":{"gitId":"jingyu987"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":162,"author":{"gitId":"jingyu987"},"content":"                chatBot.addTask(new ToDo(parts[1].trim()));","lastModifiedDate":"2023-09-01"},{"lineNumber":163,"author":{"gitId":"jingyu987"},"content":"            } else if (input.toLowerCase().startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":164,"author":{"gitId":"jingyu987"},"content":"                String[] parts \u003d input.split(\"/by\");","lastModifiedDate":"2023-08-24"},{"lineNumber":165,"author":{"gitId":"jingyu987"},"content":"                if (parts.length !\u003d 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":166,"author":{"gitId":"jingyu987"},"content":"                    throw new FishronException(\"☹ OOPS!!! Please provide a valid deadline format.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":167,"author":{"gitId":"jingyu987"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":168,"author":{"gitId":"jingyu987"},"content":"                chatBot.addTask(new Deadline(parts[0].split(\"deadline\")[1].trim(), parts[1].trim()));","lastModifiedDate":"2023-09-01"},{"lineNumber":169,"author":{"gitId":"jingyu987"},"content":"            } else if (input.toLowerCase().startsWith(\"event\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":170,"author":{"gitId":"jingyu987"},"content":"                String[] parts \u003d input.split(\"/from|/to\");","lastModifiedDate":"2023-08-24"},{"lineNumber":171,"author":{"gitId":"jingyu987"},"content":"                if (parts.length !\u003d 3 || parts[1].trim().isEmpty() || parts[2].trim().isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":172,"author":{"gitId":"jingyu987"},"content":"                    throw new FishronException(\"☹ OOPS!!! Please provide a valid event format.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":173,"author":{"gitId":"jingyu987"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":174,"author":{"gitId":"jingyu987"},"content":"                chatBot.addTask(new Event(parts[0].split(\"event\")[1].trim(), parts[1].trim(), parts[2].trim()));","lastModifiedDate":"2023-09-01"},{"lineNumber":175,"author":{"gitId":"jingyu987"},"content":"            } else if (input.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":176,"author":{"gitId":"jingyu987"},"content":"                chatBot.listTasks();","lastModifiedDate":"2023-08-23"},{"lineNumber":177,"author":{"gitId":"jingyu987"},"content":"            } else if (input.toLowerCase().startsWith(\"mark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":178,"author":{"gitId":"jingyu987"},"content":"                int taskIndex \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2023-08-23"},{"lineNumber":179,"author":{"gitId":"jingyu987"},"content":"                chatBot.markTaskAsDone(taskIndex);","lastModifiedDate":"2023-08-23"},{"lineNumber":180,"author":{"gitId":"jingyu987"},"content":"            } else if (input.toLowerCase().startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":181,"author":{"gitId":"jingyu987"},"content":"                int taskIndex \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2023-08-23"},{"lineNumber":182,"author":{"gitId":"jingyu987"},"content":"                chatBot.unmarkTask(taskIndex);","lastModifiedDate":"2023-08-23"},{"lineNumber":183,"author":{"gitId":"jingyu987"},"content":"            } else if (input.toLowerCase().startsWith(\"delete\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":184,"author":{"gitId":"jingyu987"},"content":"                int taskIndex \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":185,"author":{"gitId":"jingyu987"},"content":"                chatBot.deleteTask(taskIndex);","lastModifiedDate":"2023-08-24"},{"lineNumber":186,"author":{"gitId":"jingyu987"},"content":"            } else if (!input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":187,"author":{"gitId":"jingyu987"},"content":"                throw new FishronException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":188,"author":{"gitId":"jingyu987"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":189,"author":{"gitId":"jingyu987"},"content":"            } catch (FishronException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":190,"author":{"gitId":"jingyu987"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":191,"author":{"gitId":"jingyu987"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":192,"author":{"gitId":"jingyu987"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":193,"author":{"gitId":"jingyu987"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":194,"author":{"gitId":"jingyu987"},"content":"        } while (!input.equalsIgnoreCase(\"bye\")) ;","lastModifiedDate":"2023-08-23"},{"lineNumber":195,"author":{"gitId":"jingyu987"},"content":"            chatBot.saveTasksToFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":196,"author":{"gitId":"jingyu987"},"content":"            chatBot.farewell();","lastModifiedDate":"2023-08-23"},{"lineNumber":197,"author":{"gitId":"jingyu987"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-23"},{"lineNumber":198,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":199,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":200,"author":{"gitId":"jingyu987"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"jingyu987":200}},{"path":"src/main/java/FishronException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"class FishronException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"    public FishronException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jingyu987":5}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"jingyu987"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"jingyu987"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"jingyu987"},"content":"        return (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"jingyu987"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"jingyu987"},"content":"        return description;","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"jingyu987"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"jingyu987"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"jingyu987"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"jingyu987"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"jingyu987"},"content":"        return getStatusIcon() + \" \" + getDescription();","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"jingyu987"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"jingyu987":35}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":"        return \"T | \" + super.toFileString();","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"jingyu987"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"jingyu987"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"jingyu987"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jingyu987":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"todo Read book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"deadline Return book /by June 6th","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"event Project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":"unmark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":"delete 3","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"jingyu987":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"java -classpath ..\\bin Fishron \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jingyu987":1,"-":20}}]
