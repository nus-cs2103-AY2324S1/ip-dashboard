[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"awhb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"awhb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"awhb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"awhb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"awhb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"awhb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"awhb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"awhb"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"awhb"},"content":"mainClassName \u003d \u0027chadbod.Launcher\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"awhb"},"content":"    mainClass.set(\"chadbod.Chadbod\")","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":53,"author":{"gitId":"awhb"},"content":"checkstyle {","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"awhb"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"awhb"},"content":"    archiveBaseName \u003d \"chadbod\"","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"awhb"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":42,"awhb":24}},{"path":"src/main/java/chadbod/ChadBod.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package chadbod;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":" * The ChadBod class represents a task management application.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"public class ChadBod {","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"    private static final String FILE_PATH \u003d \"./data/tasks.txt\";","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"    private static final int TASKLIST_DISPLAY_OFFSET \u003d 1;","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"awhb"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"awhb"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"awhb"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"awhb"},"content":"    // JavaFX components","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"awhb"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"awhb"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"awhb"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"awhb"},"content":"    private Scene scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"awhb"},"content":"     * Constructs a ChadBod instance using a default (pre-set) filepath \"./data/tasks.txt\".","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"awhb"},"content":"    public ChadBod() {","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"awhb"},"content":"        this(FILE_PATH);","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"awhb"},"content":"     * Constructs a ChadBod instance using the given filepath.","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"awhb"},"content":"     * @param filePath the file path for storing task data.","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"awhb"},"content":"    public ChadBod(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"awhb"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"awhb"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"awhb"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"awhb"},"content":"            tasks \u003d storage.loadTasks();","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"awhb"},"content":"        } catch (ChadBodException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"awhb"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"awhb"},"content":"     * Parses the given user input, runs it if it is a valid command and generates a response string.","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"awhb"},"content":"     * @param input The user input to parse.","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"awhb"},"content":"     * @return A response string generated based on the user input.","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"awhb"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"awhb"},"content":"        String outcome;","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"awhb"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"awhb"},"content":"            ParsedCommand parsedCommand \u003d Parser.parseCommand(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"awhb"},"content":"            String details \u003d parsedCommand.getDetails();","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"awhb"},"content":"            switch (parsedCommand.getCommand()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"awhb"},"content":"            case BYE:","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"awhb"},"content":"                outcome \u003d ui.displayFarewell();","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"awhb"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"awhb"},"content":"            case LIST:","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"awhb"},"content":"                outcome \u003d ui.displayTasks(tasks);","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"awhb"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"awhb"},"content":"            case MARK:","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"awhb"},"content":"                int markTaskNumber \u003d getTaskNumber(details);","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"awhb"},"content":"                Task markedTask \u003d tasks.getTask(markTaskNumber);","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"awhb"},"content":"                storage.saveTasks(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"awhb"},"content":"                markedTask.markDone();","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"awhb"},"content":"                outcome \u003d ui.displayStatusUpdate(true, markedTask);","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"awhb"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"awhb"},"content":"            case UNMARK:","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"awhb"},"content":"                int unmarkTaskNumber \u003d getTaskNumber(details);","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"awhb"},"content":"                Task unmarkedTask \u003d tasks.getTask(unmarkTaskNumber);","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"awhb"},"content":"                unmarkedTask.markUndone();","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"awhb"},"content":"                storage.saveTasks(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"awhb"},"content":"                outcome \u003d ui.displayStatusUpdate(false, unmarkedTask);","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"awhb"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"awhb"},"content":"            case TODO:","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"awhb"},"content":"                if (details.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"awhb"},"content":"                    throw new InvalidTaskException(\"Description of todo cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"awhb"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"awhb"},"content":"                Todo newTodo \u003d new Todo(details);","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"awhb"},"content":"                tasks.addTask(newTodo);","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"awhb"},"content":"                storage.saveTasks(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"awhb"},"content":"                outcome \u003d ui.displayTaskAddedMessage(newTodo, tasks.getTaskCount());","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"awhb"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"awhb"},"content":"            case DEADLINE:","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"awhb"},"content":"                Deadline newDeadline \u003d createDeadline(details);","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"awhb"},"content":"                tasks.addTask(newDeadline);","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"awhb"},"content":"                storage.saveTasks(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"awhb"},"content":"                outcome \u003d ui.displayTaskAddedMessage(newDeadline, tasks.getTaskCount());","lastModifiedDate":"2023-09-06"},{"lineNumber":95,"author":{"gitId":"awhb"},"content":"                break;","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"awhb"},"content":"            case EVENT:","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"awhb"},"content":"                Event newEvent \u003d createEvent(details);","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"awhb"},"content":"                tasks.addTask(newEvent);","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"awhb"},"content":"                storage.saveTasks(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"awhb"},"content":"                outcome \u003d ui.displayTaskAddedMessage(newEvent, tasks.getTaskCount());","lastModifiedDate":"2023-09-06"},{"lineNumber":101,"author":{"gitId":"awhb"},"content":"                break;","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"awhb"},"content":"            case DELETE:","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"awhb"},"content":"                int taskNumber \u003d getTaskNumber(details);","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"awhb"},"content":"                Task removedTask \u003d tasks.removeTask(taskNumber);","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"awhb"},"content":"                storage.saveTasks(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"awhb"},"content":"                outcome \u003d ui.displayTaskRemovedMessage(removedTask, tasks.getTaskCount());","lastModifiedDate":"2023-09-06"},{"lineNumber":107,"author":{"gitId":"awhb"},"content":"                break;","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"awhb"},"content":"            case FIND:","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"awhb"},"content":"                TaskList matchingTasks \u003d tasks.findTasksByKeyword(details);","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"awhb"},"content":"                outcome \u003d ui.displayTasks(matchingTasks);","lastModifiedDate":"2023-09-06"},{"lineNumber":111,"author":{"gitId":"awhb"},"content":"                break;","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"awhb"},"content":"            default:","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"awhb"},"content":"                throw new InvalidInputException();","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"awhb"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"awhb"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"awhb"},"content":"            outcome \u003d ui.displayErrorMessage(\"☹ OOPS!!! Invalid task index.\");","lastModifiedDate":"2023-09-06"},{"lineNumber":117,"author":{"gitId":"awhb"},"content":"        } catch (ChadBodException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"awhb"},"content":"            outcome \u003d ui.displayErrorMessage(e.getMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":119,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"awhb"},"content":"        return outcome;","lastModifiedDate":"2023-09-06"},{"lineNumber":121,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"awhb"},"content":"    private int getTaskNumber(String details) throws NumberFormatException, TaskIndexOutOfBoundsException {","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"awhb"},"content":"        int unmarkTaskNumber \u003d Integer.parseInt(details);","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"awhb"},"content":"        if (unmarkTaskNumber \u003c ChadBod.TASKLIST_DISPLAY_OFFSET","lastModifiedDate":"2023-09-05"},{"lineNumber":126,"author":{"gitId":"awhb"},"content":"                || unmarkTaskNumber \u003e tasks.getTaskCount() - 1 + TASKLIST_DISPLAY_OFFSET) {","lastModifiedDate":"2023-09-05"},{"lineNumber":127,"author":{"gitId":"awhb"},"content":"            throw new TaskIndexOutOfBoundsException();","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"awhb"},"content":"        return unmarkTaskNumber - TASKLIST_DISPLAY_OFFSET;","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"awhb"},"content":"    private static Deadline createDeadline(String details) throws InvalidTaskException {","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"awhb"},"content":"        if (details.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"awhb"},"content":"            throw new InvalidTaskException(\"Description of deadline cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":135,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":136,"author":{"gitId":"awhb"},"content":"        String[] deadlineDetails \u003d details.split(\" /by \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"awhb"},"content":"        if (deadlineDetails.length \u003c 2 || deadlineDetails[1].isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":138,"author":{"gitId":"awhb"},"content":"            throw new InvalidTaskException(\"Deadline due date cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":139,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":140,"author":{"gitId":"awhb"},"content":"        LocalDateTime byDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"awhb"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"awhb"},"content":"            byDate \u003d LocalDateTime.parse(deadlineDetails[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"awhb"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"awhb"},"content":"            throw new InvalidTaskException(\"Deadline due date/time not in ISO format (e.g. 2007-12-03T10:15:30).\");","lastModifiedDate":"2023-09-06"},{"lineNumber":145,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"awhb"},"content":"        return new Deadline(deadlineDetails[0], byDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"awhb"},"content":"     * Creates an Event task from the given details.","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"awhb"},"content":"     * @param details the input details containing the event information.","lastModifiedDate":"2023-09-05"},{"lineNumber":153,"author":{"gitId":"awhb"},"content":"     * @return the created Event task.","lastModifiedDate":"2023-09-05"},{"lineNumber":154,"author":{"gitId":"awhb"},"content":"     * @throws InvalidTaskException if the details are invalid.","lastModifiedDate":"2023-09-05"},{"lineNumber":155,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"awhb"},"content":"    public static Event createEvent(String details) throws InvalidTaskException {","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"awhb"},"content":"        if (details.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"awhb"},"content":"            throw new InvalidTaskException(\"Description of event cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":159,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":160,"author":{"gitId":"awhb"},"content":"        String[] eventDetails \u003d details.split(\" /from \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"awhb"},"content":"        if (eventDetails.length \u003c 2 || eventDetails[1].isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":162,"author":{"gitId":"awhb"},"content":"            throw new InvalidTaskException(\"Event timings cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":163,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":164,"author":{"gitId":"awhb"},"content":"        String[] eventTimings \u003d eventDetails[1].split(\" /to \", 2);","lastModifiedDate":"2023-08-24"},{"lineNumber":165,"author":{"gitId":"awhb"},"content":"        if (eventTimings.length \u003c 2 || eventTimings[1].isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":166,"author":{"gitId":"awhb"},"content":"            throw new InvalidTaskException(\"Event from and to timings cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":167,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":168,"author":{"gitId":"awhb"},"content":"        LocalDateTime fromDate;","lastModifiedDate":"2023-09-05"},{"lineNumber":169,"author":{"gitId":"awhb"},"content":"        LocalDateTime toDate;","lastModifiedDate":"2023-09-05"},{"lineNumber":170,"author":{"gitId":"awhb"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"awhb"},"content":"            fromDate \u003d LocalDateTime.parse(eventTimings[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"awhb"},"content":"            toDate \u003d LocalDateTime.parse(eventTimings[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":173,"author":{"gitId":"awhb"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"awhb"},"content":"            throw new InvalidTaskException(\"Deadline due date/time not in ISO format (e.g. 2007-12-03T10:15:30).\");","lastModifiedDate":"2023-09-06"},{"lineNumber":175,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"awhb"},"content":"        return new Event(eventDetails[0], fromDate, toDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":178,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"awhb":178}},{"path":"src/main/java/chadbod/ChadBodException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package chadbod;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":" * The class ChadBodException represents a custom exception class for handling ChadBod-related","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":" * exceptions.","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"public class ChadBodException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"     * Constructs an instance of ChadBodException with the given message.","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"     * @param message A descriptive message explaining the exception.","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"    public ChadBodException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":"        super(\"☹ OOPS!!! \" + message);","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"awhb":15}},{"path":"src/main/java/chadbod/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package chadbod;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":" * Enumeration representing various commands that can be used in the ChadBod application.","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"public enum Command {","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"    LIST(\"list\"),","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"    FIND(\"find\");","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"    private final String value;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"awhb"},"content":"     * Constructor for the Command enumeration.","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"awhb"},"content":"     * @param value The string representation of the command.","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"    Command(String value) {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"awhb"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"awhb"},"content":"     * Get the string representation of the command.","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"awhb"},"content":"     * @return The string value of the command.","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"awhb"},"content":"    public String getValue() {","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"awhb"},"content":"        return value;","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"awhb":36}},{"path":"src/main/java/chadbod/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package chadbod;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":" * Represents a deadline task in the ChadBod application, extending the Task class.","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":"     * Constructor for the Deadline class.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"     * @param description the description of the deadline task.","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"awhb"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"awhb"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"awhb"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"awhb"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(),","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"awhb"},"content":"                    this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm:ss\")));","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"awhb"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"awhb"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"awhb"},"content":"        return String.format(\"D | %d | %s | %s\", this.isDone ? 1 : 0, this.description,","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"awhb"},"content":"                    this.by);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"awhb":33}},{"path":"src/main/java/chadbod/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package chadbod;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"awhb"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"awhb"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"awhb"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"awhb"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"awhb"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"awhb"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"awhb"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"awhb"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"awhb"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"awhb"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"awhb"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"awhb"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"awhb"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"awhb"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"awhb"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"awhb"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"awhb"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"awhb"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"awhb"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"awhb"},"content":"    private void flip() {","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"awhb"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"awhb"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"awhb"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"awhb"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"awhb"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"awhb"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"awhb"},"content":"    public static DialogBox getChadDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"awhb"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"awhb"},"content":"        db.flip();","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"awhb"},"content":"        return db;","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"awhb":61}},{"path":"src/main/java/chadbod/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package chadbod;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":" * Represents an event task in the ChadBod application, extending the Task class.","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"     * Constructor for the Event class.","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"     * @param description the description of the event task.","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"awhb"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"awhb"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"awhb"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"awhb"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"awhb"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"awhb"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"awhb"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(),","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"awhb"},"content":"                this.from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm:ss\")),","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"awhb"},"content":"                this.to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm:ss\")));","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"awhb"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"awhb"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"awhb"},"content":"        return String.format(\"E | %d | %s | %s | %s\", this.isDone ? 1 : 0, this.description, this.from, this.to);","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"awhb":36}},{"path":"src/main/java/chadbod/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package chadbod;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":" * Custom exception class for handling invalid user input exceptions in the ChadBod application.","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"public class InvalidInputException extends ChadBodException {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"    public InvalidInputException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"        super(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"awhb":10}},{"path":"src/main/java/chadbod/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package chadbod;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":" * Custom exception class for handling invalid task exceptions in the ChadBod application.","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"public class InvalidTaskException extends ChadBodException {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"    public InvalidTaskException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"awhb":10}},{"path":"src/main/java/chadbod/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package chadbod;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"public class Launcher {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"awhb":12}},{"path":"src/main/java/chadbod/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package chadbod;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":" * A GUI for ChadBod using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"    private ChadBod chadBod \u003d new ChadBod();","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"awhb"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"awhb"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"awhb"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"awhb"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"awhb"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"awhb"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"awhb"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setChadBod(chadBod);","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"awhb"},"content":"            stage.show();","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"awhb"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"awhb"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"awhb":31}},{"path":"src/main/java/chadbod/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package chadbod;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":" * This class represents a controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"awhb"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"awhb"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"awhb"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"awhb"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"awhb"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"    private ChadBod chadBod;","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"awhb"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/you.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"awhb"},"content":"    private Image chadImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/chad.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"awhb"},"content":"     * Initializes the MainWindow by displaying a greeting message from ChadBod in the chat interface, as well as","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"awhb"},"content":"     * binding the scroll pane\u0027s vertical value to the dialog container\u0027s height for automatic scrolling.","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"awhb"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"awhb"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"awhb"},"content":"        String greetingText \u003d Ui.displayGreeting();","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"awhb"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"awhb"},"content":"                DialogBox.getChadDialog(greetingText, chadImage)","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"awhb"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"awhb"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"awhb"},"content":"    public void setChadBod(ChadBod d) {","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"awhb"},"content":"        chadBod \u003d d;","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"awhb"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing ChadBod\u0027s reply and then appends them","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"awhb"},"content":"     * to the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"awhb"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"awhb"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"awhb"},"content":"        String userText \u003d userInput.getText();","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"awhb"},"content":"        String chadText \u003d chadBod.getResponse(userInput.getText());","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"awhb"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"awhb"},"content":"                DialogBox.getUserDialog(userText, userImage),","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"awhb"},"content":"                DialogBox.getChadDialog(chadText, chadImage)","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"awhb"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"awhb"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"awhb":60}},{"path":"src/main/java/chadbod/ParsedCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package chadbod;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":" * Represents a parsed user command, containing the command type and its details.","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"public class ParsedCommand {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"    private final Command command;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"    private final String details;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"     * Constructs an instance of the ParsedCommand class.","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":"     * @param command The parsed command type.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"     * @param details The details associated with the command.","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"    public ParsedCommand(Command command, String details) {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"awhb"},"content":"        this.details \u003d details;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"awhb"},"content":"     * Get the parsed command type.","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"     * @return The command type.","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"awhb"},"content":"    public Command getCommand() {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"awhb"},"content":"        return this.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"awhb"},"content":"     * Get the details associated with the command.","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"awhb"},"content":"     * @return The command details.","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"awhb"},"content":"    public String getDetails() {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"awhb"},"content":"        return this.details;","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"awhb":38}},{"path":"src/main/java/chadbod/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package chadbod;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":" * Represents a parser that is responsible for parsing user input","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":" * and generating ParsedCommand objects.","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"     * Parse the user input into a ParsedCommand object.","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"     * @param userInput The user input to be parsed.","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":"     * @return A ParsedCommand object containing the parsed command and details.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"     * @throws InvalidInputException If the input does not match any valid command.","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"    public static ParsedCommand parseCommand(String userInput) throws InvalidInputException {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"        Command command \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"awhb"},"content":"        String[] commandSegments \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"awhb"},"content":"        if (commandSegments.length \u003e 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"awhb"},"content":"            String commandString \u003d commandSegments[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"awhb"},"content":"            for (Command cmd : Command.values()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"awhb"},"content":"                if (cmd.getValue().equals(commandString)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"awhb"},"content":"                    command \u003d cmd;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"awhb"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"awhb"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"awhb"},"content":"        if (command \u003d\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"awhb"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"awhb"},"content":"        String details \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"awhb"},"content":"        if (commandSegments.length \u003e 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"awhb"},"content":"            details \u003d commandSegments[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"awhb"},"content":"        return new ParsedCommand(command, details);","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"awhb":37}},{"path":"src/main/java/chadbod/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package chadbod;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":" * The Storage class handles the saving and loading of tasks to/from a file.","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"    private String filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"awhb"},"content":"     * Constructor for Storage class.","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"awhb"},"content":"     * @param filePath The path to the file where tasks will be stored.","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"awhb"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"awhb"},"content":"     * Save the tasks from a TaskList to a file.","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"awhb"},"content":"     * @param tasks The TaskList containing tasks to be saved.","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"awhb"},"content":"     * @throws ChadBodException If there is an error while saving tasks to the file.","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"awhb"},"content":"    public void saveTasks(TaskList tasks) throws ChadBodException {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"awhb"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"awhb"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"awhb"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"awhb"},"content":"                // Create necessary directories and files","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"awhb"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"awhb"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"awhb"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"awhb"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file));","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"awhb"},"content":"            for (int i \u003d 0; i \u003c tasks.getTaskCount(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"awhb"},"content":"                writer.write(tasks.getTask(i).toFileString());","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"awhb"},"content":"                writer.newLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"awhb"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"awhb"},"content":"            writer.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"awhb"},"content":"        } catch (IOException | SecurityException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"awhb"},"content":"            throw new ChadBodException(\"Error saving tasks to file.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"awhb"},"content":"     * Load tasks from a file and return them in a TaskList.","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"awhb"},"content":"     * @return A TaskList containing tasks loaded from the file.","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"awhb"},"content":"     * @throws ChadBodException If there is an error while loading tasks from the file.","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"awhb"},"content":"    public TaskList loadTasks() throws ChadBodException {","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"awhb"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"awhb"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(this.filePath))) {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"awhb"},"content":"            String line;","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"awhb"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"awhb"},"content":"                Task task \u003d Task.fromString(line);","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"awhb"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"awhb"},"content":"                    tasks.addTask(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"awhb"},"content":"                } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"awhb"},"content":"                    throw new ChadBodException(\"File content invalid. Skipping this task.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"awhb"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"awhb"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"awhb"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"awhb"},"content":"            throw new ChadBodException(\"Task storage file not found. Starting with an empty task list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"awhb"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"awhb"},"content":"            throw new ChadBodException(\"Error parsing task storage file. Starting with an empty task list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"awhb"},"content":"        return tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"awhb":78}},{"path":"src/main/java/chadbod/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package chadbod;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":" * Abstract class representing a task in the ChadBod application.","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":"     * Constructs a task class based on the given description.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"awhb"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"awhb"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"awhb"},"content":"     * Get the status icon for the task (done or not done).","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"awhb"},"content":"     * @return The status icon as a string.","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"awhb"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"awhb"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"awhb"},"content":"     * Mark the task as done.","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"awhb"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"awhb"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"awhb"},"content":"     * Mark the task as not done.","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"awhb"},"content":"    public void markUndone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"awhb"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"awhb"},"content":"     * Convert the task to a string representation.","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"awhb"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"awhb"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"awhb"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"awhb"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"awhb"},"content":"     * Create a Task object from a string representation.","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"awhb"},"content":"     * @param line The string representation of the task.","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"awhb"},"content":"     * @return The Task object created from the string, or null if parsing fails.","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"awhb"},"content":"    public static Task fromString(String line) {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"awhb"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"awhb"},"content":"        if (parts.length \u003e\u003d 3 \u0026\u0026 parts[0].equals(\"T\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"awhb"},"content":"            boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"awhb"},"content":"            String description \u003d parts[2];","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"awhb"},"content":"            Task t \u003d new Todo(description);","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"awhb"},"content":"            if (isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"awhb"},"content":"                t.markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"awhb"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"awhb"},"content":"            return t;","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"awhb"},"content":"        } else if (parts.length \u003e\u003d 4 \u0026\u0026 parts[0].equals(\"D\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"awhb"},"content":"            boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"awhb"},"content":"            String description \u003d parts[2];","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"awhb"},"content":"            LocalDateTime deadline \u003d LocalDateTime.parse(parts[3]);","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"awhb"},"content":"            Task t \u003d new Deadline(description, deadline);","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"awhb"},"content":"            if (isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"awhb"},"content":"                t.markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"awhb"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"awhb"},"content":"            return t;","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"awhb"},"content":"        } else if (parts.length \u003e\u003d 5 \u0026\u0026 parts[0].equals(\"E\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"awhb"},"content":"            boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"awhb"},"content":"            String description \u003d parts[2];","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"awhb"},"content":"            LocalDateTime from \u003d LocalDateTime.parse(parts[3]);","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"awhb"},"content":"            LocalDateTime to \u003d LocalDateTime.parse(parts[4]);","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"awhb"},"content":"            Task t \u003d new Event(description, from, to);","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"awhb"},"content":"            if (isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"awhb"},"content":"                t.markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"awhb"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"awhb"},"content":"            return t;","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"awhb"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"awhb"},"content":"            return null;","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"awhb"},"content":"     * Check if the task description contains a specific keyword.","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"awhb"},"content":"     * @param keyword The keyword to search for in the task description.","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"awhb"},"content":"     * @return True if the keyword is found, false otherwise.","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"awhb"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"awhb"},"content":"        return description.contains(keyword);","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"awhb"},"content":"     * Convert the task to a string representation for saving to a file.","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"awhb"},"content":"     * @return The string representation of the task for file storage.","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"awhb"},"content":"    public abstract String toFileString();","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"awhb":111}},{"path":"src/main/java/chadbod/TaskIndexOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package chadbod;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":" * Custom exception class for handling task index out-of-bounds exceptions in the ChadBod application.","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"public class TaskIndexOutOfBoundsException extends ChadBodException {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"    public TaskIndexOutOfBoundsException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"        super(\"Invalid task index.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"awhb":10}},{"path":"src/main/java/chadbod/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package chadbod;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":" * Represents a list of tasks in the ChadBod application.","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"    private static final int TASKLIST_DISPLAY_OFFSET \u003d 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"     * Constructor for TaskList class, initializes an empty task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"awhb"},"content":"     * Get the number of tasks in the task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"awhb"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"awhb"},"content":"    public int getTaskCount() {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"awhb"},"content":"        return tasks.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"awhb"},"content":"     * Get a task at a specific index in the task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"awhb"},"content":"     * @param i The index of the task to retrieve.","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"awhb"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"awhb"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"awhb"},"content":"        return tasks.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"awhb"},"content":"     * Add a task to the task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"awhb"},"content":"     * @param t The task to be added.","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"awhb"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"awhb"},"content":"        tasks.add(t);","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"awhb"},"content":"     * Remove a task from the task list at a specific index.","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"awhb"},"content":"     * @param i The index of the task to remove.","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"awhb"},"content":"     * @return The removed task.","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"awhb"},"content":"    public Task removeTask(int i) {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"awhb"},"content":"        return tasks.remove(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"awhb"},"content":"     * Convert the task list to a string representation.","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"awhb"},"content":"     * @return The string representation of the task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"awhb"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"awhb"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"awhb"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"awhb"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"awhb"},"content":"            output \u003d new StringBuilder(\"There are no tasks in your list!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"awhb"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"awhb"},"content":"            output.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"awhb"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"awhb"},"content":"                output.append(String.format(\"%d.%s\\n\", i + TASKLIST_DISPLAY_OFFSET, tasks.get(i)));","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"awhb"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"awhb"},"content":"        return String.valueOf(output);","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"awhb"},"content":"     * Find tasks in the task list that contain a specific keyword in their description.","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"awhb"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"awhb"},"content":"     * @return A new TaskList containing tasks that match the keyword.","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"awhb"},"content":"    public TaskList findTasksByKeyword(String keyword) {","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"awhb"},"content":"        TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"awhb"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"awhb"},"content":"            if (task.containsKeyword(keyword)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"awhb"},"content":"                matchingTasks.addTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"awhb"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"awhb"},"content":"        return matchingTasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"awhb":92}},{"path":"src/main/java/chadbod/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package chadbod;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":" * Represents a to-do task in the ChadBod application, extending the Task class.","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"     * Constructor for the Todo class.","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"awhb"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"awhb"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"awhb"},"content":"        return String.format(\"T | %d | %s\", this.isDone ? 1 : 0, this.description);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"awhb":23}},{"path":"src/main/java/chadbod/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package chadbod;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":" * The Ui class handles user interface interactions by returning messages as strings.","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"     * Returns a welcome message as a string.","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"    public static String displayGreeting() {","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"        return \"Hello! I\u0027m ChadBod. \\nWhat can I do for you?\";","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"     * Returns a farewell message as a string.","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"    public String displayFarewell() {","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"awhb"},"content":"     * Returns an error message as a string.","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"awhb"},"content":"     * @param str The error message to be generated.","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"awhb"},"content":"    public String displayErrorMessage(String str) {","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"awhb"},"content":"        return str;","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"awhb"},"content":"     * Returns a status update message for a task as a string.","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"awhb"},"content":"     * @param done If true, the task is marked as done; if false, marked as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"awhb"},"content":"     * @param task The task for which the status update message is generated.","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"awhb"},"content":"    public String displayStatusUpdate(Boolean done, Task task) {","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"awhb"},"content":"        if (done) {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"awhb"},"content":"            StringBuilder s \u003d new StringBuilder(\"Nice! I\u0027ve marked this task as done:\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"awhb"},"content":"            s.append(task).append(\"\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"awhb"},"content":"            return s.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"awhb"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"awhb"},"content":"            return \"OK, I\u0027ve marked this task as not done yet:\\n\" + task + \"\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"awhb"},"content":"     * Returns a message indicating that a given task has been added as a string, as well as the new task count.","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"awhb"},"content":"     * @param newTask   The task that has been added.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"awhb"},"content":"     * @param taskCount The total number of tasks in the list after adding the new task.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"awhb"},"content":"    public String displayTaskAddedMessage(Task newTask, int taskCount) {","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"awhb"},"content":"        StringBuilder s \u003d new StringBuilder(\"Got it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"awhb"},"content":"        s.append(newTask).append(\"\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"awhb"},"content":"        s.append(\"Now you have \").append(taskCount).append(\" tasks in the list.\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"awhb"},"content":"        return s.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"awhb"},"content":"     * Returns a message indicating that a given task has been removed as a string, as well as the new task count.","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"awhb"},"content":"     * @param removedTask The task that has been removed.","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"awhb"},"content":"     * @param taskCount   The total number of tasks in the list after removing the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"awhb"},"content":"    public String displayTaskRemovedMessage(Task removedTask, int taskCount) {","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"awhb"},"content":"        StringBuilder s \u003d new StringBuilder(\"Noted. I\u0027ve removed this task:\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"awhb"},"content":"        s.append(removedTask).append(\"\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"awhb"},"content":"        s.append(\"Now you have \").append(taskCount).append(\" tasks in the list.\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"awhb"},"content":"        return s.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"awhb"},"content":"     * Returns the string representation of the given list of tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":73,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"awhb"},"content":"     * @param tasks The list of tasks to be represented as a string.","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"awhb"},"content":"    public String displayTasks(TaskList tasks) {","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"awhb"},"content":"        return tasks.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"awhb":79}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"awhb":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"            fx:controller\u003d\"chadbod.MainWindow\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"awhb"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"awhb"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"awhb"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"awhb"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"awhb"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"awhb"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"awhb":24}},{"path":"src/test/java/chadbod/ChadBodTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package chadbod;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"public class ChadBodTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"    public void createEvent_validEvent_success() throws Exception {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":"        // Tests for correct handling of basic input","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"        Event expectedFirstEvent \u003d new Event(\"party\", LocalDateTime.parse(\"2023-08-28T00:00:00\"),","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"                LocalDateTime.parse(\"2023-08-28T02:00:00\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"        Event actualFirstEvent \u003d ChadBod.createEvent(\"party /from 2023-08-28T00:00:00 /to 2023-08-28T02:00:00\");","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"        assertEquals(expectedFirstEvent.toString(), actualFirstEvent.toString());","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"awhb"},"content":"        assertEquals(expectedFirstEvent.toFileString(), actualFirstEvent.toFileString());","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"awhb"},"content":"        // Tests for correct handling of 24-hour format, past dates","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"awhb"},"content":"        Event expectedSecondEvent \u003d new Event(\"sky dive\", LocalDateTime.parse(\"2001-08-28T13:59:59\"),","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"awhb"},"content":"                LocalDateTime.parse(\"2001-08-28T14:00:00\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"awhb"},"content":"        Event actualSecondEvent \u003d ChadBod.createEvent(","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"awhb"},"content":"                \"sky dive /from 2001-08-28T13:59:59 /to 2001-08-28T14:00:00\");","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"        assertEquals(expectedSecondEvent.toString(), actualSecondEvent.toString());","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"awhb"},"content":"        assertEquals(expectedSecondEvent.toFileString(), expectedSecondEvent.toFileString());","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"awhb"},"content":"        // Tests for no abnormal behaviour when handling numbers or forward slash","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"awhb"},"content":"        Event expectedThirdEvent \u003d new Event(\"Take bus 87/E\", LocalDateTime.parse(\"2023-09-01T06:00:00\"),","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"awhb"},"content":"                LocalDateTime.parse(\"2023-09-01T06:01:00\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"awhb"},"content":"        Event actualThirdEvent \u003d ChadBod.createEvent(","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"awhb"},"content":"                \"Take bus 87/E /from 2023-09-01T06:00:00 /to 2023-09-01T06:01:00\");","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"awhb"},"content":"        assertEquals(expectedThirdEvent.toString(), actualThirdEvent.toString());","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"awhb"},"content":"        assertEquals(expectedThirdEvent.toFileString(), actualThirdEvent.toFileString());","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"awhb"},"content":"    public void createEvent_invalidEvent_exceptionThrown() {","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"awhb"},"content":"        // Tests for exception thrown when missing \"/from\" in input pattern","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"awhb"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"awhb"},"content":"            ChadBod.createEvent(\"party from 2023-08-28T00:00:00 /to 2023-08-28T02:00:00\");","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"awhb"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"awhb"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"awhb"},"content":"            assertEquals(\"☹ OOPS!!! Event timings cannot be empty.\", e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"awhb"},"content":"        // Tests for exception thrown when missing \"/to in input pattern","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"awhb"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"awhb"},"content":"            ChadBod.createEvent(\"party /from 2023-08-28T00:00:00 to 2023-08-28T02:00:00\");","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"awhb"},"content":"            fail();","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"awhb"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"awhb"},"content":"            assertEquals(\"☹ OOPS!!! Event from and to timings cannot be empty.\", e.getMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"awhb"},"content":"        // Tests for exception thrown with incorrect date input in input pattern","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"awhb"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"awhb"},"content":"            ChadBod.createEvent(\"party /from 28/08/2023T00:00:00 /to 28/08/2023T02:00:00\");","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"awhb"},"content":"            fail();","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"awhb"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"awhb"},"content":"            assertEquals(\"☹ OOPS!!! Deadline due date/time not in ISO format (e.g. 2007-12-03T10:15:30).\",","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"awhb"},"content":"                    e.getMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"awhb":60}},{"path":"src/test/java/chadbod/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package chadbod;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"    public void parseCommand_list_success() throws Exception {","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"        ParsedCommand expected \u003d new ParsedCommand(Command.LIST, \"\");","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"        ParsedCommand actual \u003d Parser.parseCommand(\"list\");","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":"        assertEquals(expected.getCommand(), actual.getCommand());","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"        assertEquals(expected.getCommand(), actual.getCommand());","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"    public void parseCommand_mark_success() throws Exception {","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"awhb"},"content":"        ParsedCommand expected \u003d new ParsedCommand(Command.MARK, \"0\");","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"awhb"},"content":"        ParsedCommand actual \u003d Parser.parseCommand(\"mark 0\");","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"awhb"},"content":"        assertEquals(expected.getCommand(), actual.getCommand());","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"awhb"},"content":"        assertEquals(expected.getCommand(), actual.getCommand());","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"    public void parseCommand_deadlineTask_success() throws Exception {","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"awhb"},"content":"        ParsedCommand expected \u003d new ParsedCommand(Command.DEADLINE,","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"awhb"},"content":"                \"confess /by 2023-08-28T02:00:00\");","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"awhb"},"content":"        ParsedCommand actual \u003d Parser.parseCommand(\"deadline confess /by 2023-08-28T02:00:00\");","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"awhb"},"content":"        assertEquals(expected.getCommand(), actual.getCommand());","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"awhb"},"content":"        assertEquals(expected.getCommand(), actual.getCommand());","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"awhb"},"content":"    public void parseCommand_deleteTask_success() throws Exception {","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"awhb"},"content":"        ParsedCommand expected \u003d new ParsedCommand(Command.DELETE,","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"awhb"},"content":"                \"10\");","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"awhb"},"content":"        ParsedCommand actual \u003d Parser.parseCommand(\"delete 10\");","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"awhb"},"content":"        assertEquals(expected.getCommand(), actual.getCommand());","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"awhb"},"content":"        assertEquals(expected.getCommand(), actual.getCommand());","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"awhb"},"content":"    public void parseCommand_invalidTask_exceptionThrown() {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"awhb"},"content":"        // Tests for exception thrown when command has typo","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"awhb"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"awhb"},"content":"            Parser.parseCommand(\"byee\");","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"awhb"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"awhb"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"awhb"},"content":"            assertEquals(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\", e.getMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"awhb"},"content":"        // Tests for exception thrown when empty command is input","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"awhb"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"awhb"},"content":"            Parser.parseCommand(\"\");","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"awhb"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"awhb"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"awhb"},"content":"            assertEquals(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\", e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"awhb":56}}]
