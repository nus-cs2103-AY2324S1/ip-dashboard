[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"awhb"},"content":"    mainClass.set(\"chadbod.ChadBod\")","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"awhb"},"content":"    archiveBaseName \u003d \"chadbod\"","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"awhb"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"awhb":3}},{"path":"src/main/java/chadbod/ChadBod.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package chadbod;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":" * The ChadBod class represents a task management application.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"public class ChadBod {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"    private static final String FILE_PATH \u003d \"./data/tasks.txt\";","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"    private static final int TASKLIST_DISPLAY_OFFSET \u003d 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"awhb"},"content":"     * Constructs a ChadBod instance.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"awhb"},"content":"     * @param filePath The file path for storing task data.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"awhb"},"content":"    public ChadBod(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"awhb"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"awhb"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"awhb"},"content":"            tasks \u003d storage.loadTasks();","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"awhb"},"content":"        } catch (ChadBodException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"awhb"},"content":"            ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"awhb"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"awhb"},"content":"     * Starts the ChadBod application.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"awhb"},"content":"    public void run() {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"awhb"},"content":"        ui.showGreeting();","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"awhb"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"awhb"},"content":"        boolean shouldExit \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"awhb"},"content":"        while (!shouldExit) {","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"awhb"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"awhb"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"awhb"},"content":"                ParsedCommand parsedCommand \u003d Parser.parseCommand(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"awhb"},"content":"                String details \u003d parsedCommand.getDetails();","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"awhb"},"content":"                switch (parsedCommand.getCommand()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"awhb"},"content":"                case BYE:","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"awhb"},"content":"                    ui.showFarewell();","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"awhb"},"content":"                    shouldExit \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"awhb"},"content":"                    break;","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"awhb"},"content":"                case LIST:","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"awhb"},"content":"                    ui.printTasks(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"awhb"},"content":"                    break;","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"awhb"},"content":"                case MARK:","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"awhb"},"content":"                    int markTaskNumber \u003d getTaskNumber(details);","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"awhb"},"content":"                    Task markedTask \u003d tasks.getTask(markTaskNumber);","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"awhb"},"content":"                    markedTask.markDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"awhb"},"content":"                    ui.printStatusUpdate(true, markedTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"awhb"},"content":"                    storage.saveTasks(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"awhb"},"content":"                    break;","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"awhb"},"content":"                case UNMARK:","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"awhb"},"content":"                    int unmarkTaskNumber \u003d getTaskNumber(details);","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"awhb"},"content":"                    Task unmarkedTask \u003d tasks.getTask(unmarkTaskNumber);","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"awhb"},"content":"                    unmarkedTask.markUndone();","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"awhb"},"content":"                    ui.printStatusUpdate(false, unmarkedTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"awhb"},"content":"                    storage.saveTasks(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"awhb"},"content":"                    break;","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"awhb"},"content":"                case TODO:","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"awhb"},"content":"                    if (details.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"awhb"},"content":"                        throw new InvalidTaskException(\"Description of todo cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"awhb"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"awhb"},"content":"                    Todo newTodo \u003d new Todo(details);","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"awhb"},"content":"                    tasks.addTask(newTodo);","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"awhb"},"content":"                    ui.printTaskAddedMessage(newTodo, tasks.getTaskCount());","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"awhb"},"content":"                    storage.saveTasks(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"awhb"},"content":"                    break;","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"awhb"},"content":"                case DEADLINE:","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"awhb"},"content":"                    Deadline newDeadline \u003d createDeadline(details);","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"awhb"},"content":"                    tasks.addTask(newDeadline);","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"awhb"},"content":"                    ui.printTaskAddedMessage(newDeadline, tasks.getTaskCount());","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"awhb"},"content":"                    storage.saveTasks(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"awhb"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"awhb"},"content":"                case EVENT:","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"awhb"},"content":"                    Event newEvent \u003d createEvent(details);","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"awhb"},"content":"                    tasks.addTask(newEvent);","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"awhb"},"content":"                    ui.printTaskAddedMessage(newEvent, tasks.getTaskCount());","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"awhb"},"content":"                    storage.saveTasks(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"awhb"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"awhb"},"content":"                case DELETE:","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"awhb"},"content":"                    int taskNumber \u003d getTaskNumber(details);","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"awhb"},"content":"                    Task removedTask \u003d tasks.removeTask(taskNumber);","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"awhb"},"content":"                    ui.printTaskRemovedMessage(removedTask, tasks.getTaskCount());","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"awhb"},"content":"                    storage.saveTasks(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"awhb"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"awhb"},"content":"                case FIND:","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"awhb"},"content":"                    TaskList matchingTasks \u003d tasks.findTasksByKeyword(details);","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"awhb"},"content":"                    ui.printTasks(matchingTasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"awhb"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"awhb"},"content":"                default:","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"awhb"},"content":"                    throw new InvalidInputException();","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"awhb"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"awhb"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"awhb"},"content":"                ui.printErrorMessage(\"☹ OOPS!!! Invalid task index.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"awhb"},"content":"            } catch (ChadBodException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"awhb"},"content":"                ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"awhb"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"awhb"},"content":"     * Retrieves the task number from the input details.","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"awhb"},"content":"     * @param details The input details containing the task number.","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"awhb"},"content":"     * @return The task number.","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"awhb"},"content":"     * @throws NumberFormatException      If the task number cannot be parsed as an integer.","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"awhb"},"content":"     * @throws TaskIndexOutOfBoundsException If the task number is out of bounds.","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"awhb"},"content":"    private int getTaskNumber(String details) throws NumberFormatException, TaskIndexOutOfBoundsException {","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"awhb"},"content":"        int unmarkTaskNumber \u003d Integer.parseInt(details);","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"awhb"},"content":"        if (unmarkTaskNumber \u003c ChadBod.TASKLIST_DISPLAY_OFFSET ||","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"awhb"},"content":"                unmarkTaskNumber \u003e tasks.getTaskCount() - 1 + TASKLIST_DISPLAY_OFFSET) {","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"awhb"},"content":"            throw new TaskIndexOutOfBoundsException();","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"awhb"},"content":"        return unmarkTaskNumber - TASKLIST_DISPLAY_OFFSET;","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"awhb"},"content":"     * Creates a Deadline task from the given details.","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"awhb"},"content":"     * @param details The input details containing the deadline information.","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"awhb"},"content":"     * @return The created Deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"awhb"},"content":"     * @throws InvalidTaskException If the details are invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"awhb"},"content":"    private static Deadline createDeadline(String details) throws InvalidTaskException {","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"awhb"},"content":"        if (details.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"awhb"},"content":"            throw new InvalidTaskException(\"Description of deadline cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":137,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":138,"author":{"gitId":"awhb"},"content":"        String[] deadlineDetails \u003d details.split(\" /by \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"awhb"},"content":"        if (deadlineDetails.length \u003c 2 || deadlineDetails[1].isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":140,"author":{"gitId":"awhb"},"content":"            throw new InvalidTaskException(\"Deadline due date cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":141,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":142,"author":{"gitId":"awhb"},"content":"        LocalDateTime byDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"awhb"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"awhb"},"content":"            byDate \u003d LocalDateTime.parse(deadlineDetails[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"awhb"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"awhb"},"content":"            throw new InvalidTaskException(\"Deadline due date/time not in ISO format. (e.g. 2007-12-03T10:15:30)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"awhb"},"content":"        return new Deadline(deadlineDetails[0], byDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"awhb"},"content":"     * Creates an Event task from the given details.","lastModifiedDate":"2023-09-01"},{"lineNumber":153,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"awhb"},"content":"     * @param details The input details containing the event information.","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"awhb"},"content":"     * @return The created Event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"awhb"},"content":"     * @throws InvalidTaskException If the details are invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":158,"author":{"gitId":"awhb"},"content":"    public static Event createEvent(String details) throws InvalidTaskException {","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"awhb"},"content":"        if (details.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"awhb"},"content":"            throw new InvalidTaskException(\"Description of event cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":161,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":162,"author":{"gitId":"awhb"},"content":"        String[] eventDetails \u003d details.split(\" /from \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"awhb"},"content":"        if (eventDetails.length \u003c 2 || eventDetails[1].isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":164,"author":{"gitId":"awhb"},"content":"            throw new InvalidTaskException(\"Event timings cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":165,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":166,"author":{"gitId":"awhb"},"content":"        String[] eventTimings \u003d eventDetails[1].split(\" /to \", 2);","lastModifiedDate":"2023-08-24"},{"lineNumber":167,"author":{"gitId":"awhb"},"content":"        if (eventTimings.length \u003c 2 || eventTimings[1].isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":168,"author":{"gitId":"awhb"},"content":"            throw new InvalidTaskException(\"Event from and to timings cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":169,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":170,"author":{"gitId":"awhb"},"content":"        LocalDateTime fromDate, toDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"awhb"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"awhb"},"content":"            fromDate \u003d LocalDateTime.parse(eventTimings[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":173,"author":{"gitId":"awhb"},"content":"            toDate \u003d LocalDateTime.parse(eventTimings[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"awhb"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"awhb"},"content":"            throw new InvalidTaskException(\"Deadline due date/time not in ISO format. (e.g. 2007-12-03T10:15:30)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"awhb"},"content":"        return new Event(eventDetails[0], fromDate, toDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":178,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":179,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":180,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":181,"author":{"gitId":"awhb"},"content":"     * The entry point for the ChadBod application.","lastModifiedDate":"2023-09-01"},{"lineNumber":182,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":183,"author":{"gitId":"awhb"},"content":"     * @param args Command-line arguments (not used in this application).","lastModifiedDate":"2023-09-01"},{"lineNumber":184,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":185,"author":{"gitId":"awhb"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-31"},{"lineNumber":186,"author":{"gitId":"awhb"},"content":"        new ChadBod(FILE_PATH).run();","lastModifiedDate":"2023-08-31"},{"lineNumber":187,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":188,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"awhb":188}},{"path":"src/main/java/chadbod/ChadBodException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package chadbod;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"public class ChadBodException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"    public ChadBodException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"        super(\"☹ OOPS!!! \" + message);","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"awhb":7}},{"path":"src/main/java/chadbod/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package chadbod;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"enum Command {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"    LIST(\"list\"),","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"    FIND(\"find\");","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"    private final String value;","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"    Command(String value) {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"awhb"},"content":"    public String getValue() {","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"awhb"},"content":"        return value;","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"awhb":23}},{"path":"src/main/java/chadbod/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package chadbod;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(),","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"                    this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm:ss\")));","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"awhb"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"awhb"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"awhb"},"content":"        return String.format(\"D | %d | %s | %s\", this.isDone ? 1 : 0, this.description,","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"awhb"},"content":"                    this.by);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"awhb":25}},{"path":"src/main/java/chadbod/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package chadbod;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"awhb"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"awhb"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(),","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"awhb"},"content":"                this.from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm:ss\")),","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"awhb"},"content":"                this.to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm:ss\")));","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"awhb"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"awhb"},"content":"        return String.format(\"E | %d | %s | %s | %s\", this.isDone ? 1 : 0, this.description, this.from, this.to);","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"awhb":28}},{"path":"src/main/java/chadbod/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package chadbod;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"public class InvalidInputException extends ChadBodException {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"    public InvalidInputException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"        super(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"awhb":7}},{"path":"src/main/java/chadbod/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package chadbod;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"public class InvalidTaskException extends ChadBodException {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"    public InvalidTaskException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"awhb":7}},{"path":"src/main/java/chadbod/ParsedCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package chadbod;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"public class ParsedCommand {","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"    private final Command command;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"    private final String details;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"    public ParsedCommand(Command command, String details) {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"        this.details \u003d details;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"    public Command getCommand() {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":"        return this.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"    public String getDetails() {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"        return this.details;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"awhb":19}},{"path":"src/main/java/chadbod/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package chadbod;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"    public static ParsedCommand parseCommand(String userInput) throws InvalidInputException {","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"        Command command \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"        String[] commandSegments \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"        if (commandSegments.length \u003e 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"            String commandString \u003d commandSegments[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"            for (Command cmd : Command.values()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"                if (cmd.getValue().equals(commandString)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"                    command \u003d cmd;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"        if (command \u003d\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"awhb"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"awhb"},"content":"        String details \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"awhb"},"content":"        if (commandSegments.length \u003e 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"awhb"},"content":"            details \u003d commandSegments[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"        return new ParsedCommand(command, details);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"awhb":26}},{"path":"src/main/java/chadbod/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package chadbod;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":"    private String filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"awhb"},"content":"    public void saveTasks(TaskList tasks) throws ChadBodException {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"awhb"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"awhb"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"awhb"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"awhb"},"content":"                // Create necessary directories and files","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"awhb"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"awhb"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"awhb"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file));","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"awhb"},"content":"            for (int i \u003d 0; i \u003c tasks.getTaskCount(); i ++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"awhb"},"content":"                writer.write(tasks.getTask(i).toFileString());","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"awhb"},"content":"                writer.newLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"awhb"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"awhb"},"content":"            writer.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"awhb"},"content":"        } catch (IOException | SecurityException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"awhb"},"content":"            throw new ChadBodException(\"Error saving tasks to file.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"awhb"},"content":"    public TaskList loadTasks() throws ChadBodException {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"awhb"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"awhb"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(this.filePath))) {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"awhb"},"content":"            String line;","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"awhb"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"awhb"},"content":"                Task task \u003d Task.fromString(line);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"awhb"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"awhb"},"content":"                    tasks.addTask(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"awhb"},"content":"                } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"awhb"},"content":"                    throw new ChadBodException(\"File content invalid. Skipping this task.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"awhb"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"awhb"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"awhb"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"awhb"},"content":"            throw new ChadBodException(\"Task storage file not found. Starting with an empty task list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"awhb"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"awhb"},"content":"            throw new ChadBodException(\"Error parsing task storage file. Starting with an empty task list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"awhb"},"content":"        return tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"awhb":58}},{"path":"src/main/java/chadbod/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package chadbod;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"awhb"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"awhb"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"awhb"},"content":"    public void markUndone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"awhb"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"awhb"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"awhb"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"awhb"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"awhb"},"content":"    public static Task fromString(String line) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"awhb"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"awhb"},"content":"        if (parts.length \u003e\u003d 3 \u0026\u0026 parts[0].equals(\"T\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"awhb"},"content":"            boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"awhb"},"content":"            String description \u003d parts[2];","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"awhb"},"content":"            Task t \u003d new Todo(description);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"awhb"},"content":"            if (isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"awhb"},"content":"                t.markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"awhb"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"awhb"},"content":"            return t;","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"awhb"},"content":"        } else if (parts.length \u003e\u003d 4 \u0026\u0026 parts[0].equals(\"D\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"awhb"},"content":"            boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"awhb"},"content":"            String description \u003d parts[2];","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"awhb"},"content":"            LocalDateTime deadline \u003d LocalDateTime.parse(parts[3]);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"awhb"},"content":"            Task t \u003d new Deadline(description, deadline);","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"awhb"},"content":"            if (isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"awhb"},"content":"                t.markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"awhb"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"awhb"},"content":"            return t;","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"awhb"},"content":"        } else if (parts.length \u003e\u003d 5 \u0026\u0026 parts[0].equals(\"E\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"awhb"},"content":"            boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"awhb"},"content":"            String description \u003d parts[2];","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"awhb"},"content":"            LocalDateTime from \u003d LocalDateTime.parse(parts[3]);","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"awhb"},"content":"            LocalDateTime to \u003d LocalDateTime.parse(parts[4]);","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"awhb"},"content":"            Task t \u003d new Event(description, from, to);","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"awhb"},"content":"            if (isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"awhb"},"content":"                t.markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"awhb"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"awhb"},"content":"            return t;","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"awhb"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"awhb"},"content":"            return null;","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"awhb"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"awhb"},"content":"        return description.contains(keyword);","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"awhb"},"content":"    public abstract String toFileString();","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"awhb":70}},{"path":"src/main/java/chadbod/TaskIndexOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package chadbod;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"public class TaskIndexOutOfBoundsException extends ChadBodException {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"    public TaskIndexOutOfBoundsException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"        super(\"Invalid task index.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"awhb":7}},{"path":"src/main/java/chadbod/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package chadbod;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"    private static final int TASKLIST_DISPLAY_OFFSET \u003d 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"    public int getTaskCount() {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"        return tasks.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"awhb"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"awhb"},"content":"        return tasks.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"awhb"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"awhb"},"content":"        tasks.add(t);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"awhb"},"content":"    public Task removeTask(int i) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"awhb"},"content":"        return tasks.remove(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"awhb"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"awhb"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"awhb"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"awhb"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"awhb"},"content":"            output \u003d new StringBuilder(\"There are no tasks in your list!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"awhb"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"awhb"},"content":"            output.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"awhb"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i ++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"awhb"},"content":"                output.append(String.format(\"%d.%s\\n\", i + TASKLIST_DISPLAY_OFFSET, tasks.get(i)));","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"awhb"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"awhb"},"content":"        return String.valueOf(output);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"awhb"},"content":"    public TaskList findTasksByKeyword(String keyword) {","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"awhb"},"content":"        TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"awhb"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"awhb"},"content":"            if (task.containsKeyword(keyword)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"awhb"},"content":"                matchingTasks.addTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"awhb"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"awhb"},"content":"        return matchingTasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"awhb":53}},{"path":"src/main/java/chadbod/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package chadbod;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"        return String.format(\"T | %d | %s\", this.isDone ? 1 : 0, this.description);","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"awhb":17}},{"path":"src/main/java/chadbod/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package chadbod;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":" * The Ui class handles user interface interactions and displays messages to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"     * Displays a greeting message to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"    public void showGreeting() {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"        System.out.println(\"Hello! I\u0027m ChadBod.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"     * Displays a farewell message to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"awhb"},"content":"    public void showFarewell() {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"awhb"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"awhb"},"content":"     * Prints an error message to the console.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"awhb"},"content":"     * @param str The error message to be displayed.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"awhb"},"content":"    public void printErrorMessage(String str) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"awhb"},"content":"        System.out.println(str);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"awhb"},"content":"     * Prints a status update message for a task.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"awhb"},"content":"     * @param done If true, the task is marked as done; if false, marked as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"awhb"},"content":"     * @param task The task for which the status update is displayed.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"awhb"},"content":"    public void printStatusUpdate(Boolean done, Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"awhb"},"content":"        if (done) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"awhb"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"awhb"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"awhb"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"awhb"},"content":"        System.out.printf(\"%s\\n\", task);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"awhb"},"content":"     * Prints a message indicating that a task has been added.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"awhb"},"content":"     * @param newTask   The task that has been added.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"awhb"},"content":"     * @param taskCount The total number of tasks in the list after adding the new task.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"awhb"},"content":"    public void printTaskAddedMessage(Task newTask, int taskCount) {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"awhb"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"awhb"},"content":"        System.out.println(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"awhb"},"content":"        System.out.printf(\"Now you have %d tasks in the list.\\n\", taskCount);","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"awhb"},"content":"     * Prints a message indicating that a task has been removed.","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"awhb"},"content":"     * @param removedTask The task that has been removed.","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"awhb"},"content":"     * @param taskCount   The total number of tasks in the list after removing the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"awhb"},"content":"    public void printTaskRemovedMessage(Task removedTask, int taskCount) {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"awhb"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"awhb"},"content":"        System.out.printf(\"%s\\n\", removedTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"awhb"},"content":"        System.out.printf(\"Now you have %d tasks in the list.\\n\", taskCount);","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"awhb"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"awhb"},"content":"     * Prints the list of tasks to the console.","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"awhb"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"awhb"},"content":"     * @param tasks The list of tasks to be printed.","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"awhb"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"awhb"},"content":"    public void printTasks(TaskList tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"awhb"},"content":"        System.out.print(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"awhb":78}},{"path":"src/test/java/chadbod/ChadBodTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package chadbod;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"public class ChadBodTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"    public void createEvent_validEvent_success() throws Exception {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":"        Event expected \u003d new Event(\"party\", LocalDateTime.parse(\"2023-08-28T00:00:00\"),","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"                LocalDateTime.parse(\"2023-08-28T02:00:00\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"        Event actual \u003d ChadBod.createEvent(\"party /from 2023-08-28T00:00:00 /to 2023-08-28T02:00:00\");","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"        assertEquals(expected.toString(), actual.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"        assertEquals(expected.toFileString(), actual.toFileString());","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"awhb"},"content":"    public void parseCommand_invalidTask_exceptionThrown() {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"awhb"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"awhb"},"content":"            ChadBod.createEvent(\"party from 2023-08-28T00:00:00 /to 2023-08-28T02:00:00\");","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"awhb"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"awhb"},"content":"            assertEquals(\"☹ OOPS!!! Event timings cannot be empty.\", e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"awhb":29}},{"path":"src/test/java/chadbod/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"package chadbod;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"    public void parseCommand_todoTask_success() throws Exception {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"awhb"},"content":"        ParsedCommand expected \u003d new ParsedCommand(Command.TODO, \"cry\");","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"awhb"},"content":"        ParsedCommand actual \u003d Parser.parseCommand(\"todo cry\");","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"awhb"},"content":"        assertEquals(expected.getCommand(), actual.getCommand());","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"awhb"},"content":"        assertEquals(expected.getCommand(), actual.getCommand());","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"awhb"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"awhb"},"content":"    public void parseCommand_invalidTask_exceptionThrown() {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"awhb"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"awhb"},"content":"            Parser.parseCommand(\"hello bye\");","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"awhb"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"awhb"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"awhb"},"content":"            assertEquals(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\", e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"awhb"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"awhb"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"awhb"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"awhb":25}},{"path":"text-ui-test/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"T | 1 | read book","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"D | 0 | return book | 2023-06-06T00:00","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"E | 0 | project meeting | 2023-08-06T14:00 | 2023-08-06T16:00","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"T | 1 | join sports club","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"T | 0 | borrow book","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"awhb":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"awhb"},"content":"todo read book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"awhb"},"content":"deadline return book /by 2023-06-06T00:00:00","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"awhb"},"content":"event project meeting /from 2023-08-06T14:00:00 /to 2023-08-06T16:00:00","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"awhb"},"content":"todo join sports club","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"awhb"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"awhb"},"content":"mark 4","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"awhb"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"awhb"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"awhb"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"awhb":9}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"awhb"},"content":"if ! javac -cp ../src/main/java/chadbod -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"awhb"},"content":"java -classpath ../bin main.java.ChadBod \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"awhb":2}}]
