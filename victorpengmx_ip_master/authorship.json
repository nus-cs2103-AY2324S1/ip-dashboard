[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"victorpengmx"},"content":"# duke.main.Duke project template","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"victorpengmx"},"content":"3. After that, locate the `src/main/java/duke.main.Duke.java` file, right-click it, and choose `Run duke.main.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"victorpengmx":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"victorpengmx"},"content":"checkstyle {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"victorpengmx"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":"}","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"victorpengmx"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"victorpengmx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"victorpengmx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"victorpengmx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"victorpengmx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"victorpengmx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"victorpengmx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"victorpengmx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"victorpengmx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"victorpengmx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"victorpengmx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"victorpengmx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"victorpengmx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"victorpengmx"},"content":"    mainClass.set(\"duke.main.Launcher\")","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"victorpengmx":21,"-":41}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"victorpengmx"},"content":"__Albatross__ is a simple desktop app for managing tasks, optimized for ","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"victorpengmx"},"content":"use via a Command Line Interface (CLI) while still having the","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":"benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"victorpengmx"},"content":"### Feature - Finding Help","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":"Displays a help list containing all commands that can be used.","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"victorpengmx"},"content":"### Feature - Adding, Deleting Tasks","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":14,"author":{"gitId":"victorpengmx"},"content":"Adds different tasks to the task list and deletes them if the user","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"victorpengmx"},"content":"chooses to.","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"victorpengmx"},"content":"### Feature - Marking/Unmarking Tasks","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"victorpengmx"},"content":"Marks specified tasks as done or not done.","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"victorpengmx"},"content":"### Feature - Displaying Tasks","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"victorpengmx"},"content":"Displays all tasks in the task list in the order they were added.","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"victorpengmx"},"content":"### `help`","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"victorpengmx"},"content":"Returns a list of all commands that can be used.","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"victorpengmx"},"content":"### `todo {taskName}` - Describe action","lastModifiedDate":"2023-09-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"victorpengmx"},"content":"Creates a new todo task.","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"victorpengmx"},"content":"`todo {nothing}`","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":44,"author":{"gitId":"victorpengmx"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"victorpengmx"},"content":"[T][ ] nothing","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"victorpengmx"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"victorpengmx"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":49,"author":{"gitId":"victorpengmx"},"content":"### `deadline {taskName} /by {YYYY-MM-DD}` - Describe action","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"victorpengmx"},"content":"Creates a new deadline task.","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"victorpengmx"},"content":"Example of usage:","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"victorpengmx"},"content":"`todo {nothing /by 1111-11-11}`","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"victorpengmx"},"content":"Expected outcome:","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":59,"author":{"gitId":"victorpengmx"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"victorpengmx"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"victorpengmx"},"content":"[T][ ] nothing By: Nov 11 1111","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"victorpengmx"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":63,"author":{"gitId":"victorpengmx"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"victorpengmx"},"content":"### `event {taskName} /from {YYYY-MM-DD} /to {YYYY-MM-DD}`","lastModifiedDate":"2023-09-19"},{"lineNumber":65,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":66,"author":{"gitId":"victorpengmx"},"content":"Creates a new event task.","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":68,"author":{"gitId":"victorpengmx"},"content":"### `delete {index}`","lastModifiedDate":"2023-09-19"},{"lineNumber":69,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":70,"author":{"gitId":"victorpengmx"},"content":"Deletes the task with the index number.","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"victorpengmx"},"content":"Example outcome:","lastModifiedDate":"2023-09-19"},{"lineNumber":73,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":74,"author":{"gitId":"victorpengmx"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":75,"author":{"gitId":"victorpengmx"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-09-19"},{"lineNumber":76,"author":{"gitId":"victorpengmx"},"content":"[T][ ] nothing","lastModifiedDate":"2023-09-19"},{"lineNumber":77,"author":{"gitId":"victorpengmx"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":78,"author":{"gitId":"victorpengmx"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":79,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":80,"author":{"gitId":"victorpengmx"},"content":"### `mark {index}`","lastModifiedDate":"2023-09-19"},{"lineNumber":81,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":82,"author":{"gitId":"victorpengmx"},"content":"Marks the task with the index number done.","lastModifiedDate":"2023-09-19"},{"lineNumber":83,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":84,"author":{"gitId":"victorpengmx"},"content":"Example of usage:","lastModifiedDate":"2023-09-19"},{"lineNumber":85,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":86,"author":{"gitId":"victorpengmx"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":87,"author":{"gitId":"victorpengmx"},"content":"mark 1","lastModifiedDate":"2023-09-19"},{"lineNumber":88,"author":{"gitId":"victorpengmx"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":89,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":90,"author":{"gitId":"victorpengmx"},"content":"Example outcome:","lastModifiedDate":"2023-09-19"},{"lineNumber":91,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":92,"author":{"gitId":"victorpengmx"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":93,"author":{"gitId":"victorpengmx"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-09-19"},{"lineNumber":94,"author":{"gitId":"victorpengmx"},"content":"[T][X] nothing","lastModifiedDate":"2023-09-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":96,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":97,"author":{"gitId":"victorpengmx"},"content":"### `unmark {index}`","lastModifiedDate":"2023-09-19"},{"lineNumber":98,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":99,"author":{"gitId":"victorpengmx"},"content":"Marks the task with the index number as not done.","lastModifiedDate":"2023-09-19"},{"lineNumber":100,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":101,"author":{"gitId":"victorpengmx"},"content":"### `list`","lastModifiedDate":"2023-09-19"},{"lineNumber":102,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":103,"author":{"gitId":"victorpengmx"},"content":"Displays all tasks in the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":104,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":105,"author":{"gitId":"victorpengmx"},"content":"Example outcome:","lastModifiedDate":"2023-09-19"},{"lineNumber":106,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":107,"author":{"gitId":"victorpengmx"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":108,"author":{"gitId":"victorpengmx"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-09-19"},{"lineNumber":109,"author":{"gitId":"victorpengmx"},"content":"1.[D][ ] nothing By: Nov 11 1111","lastModifiedDate":"2023-09-19"},{"lineNumber":110,"author":{"gitId":"victorpengmx"},"content":"2.[T][ ] nothing","lastModifiedDate":"2023-09-19"},{"lineNumber":111,"author":{"gitId":"victorpengmx"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":112,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":113,"author":{"gitId":"victorpengmx"},"content":"### `find {keyword}`","lastModifiedDate":"2023-09-19"},{"lineNumber":114,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":115,"author":{"gitId":"victorpengmx"},"content":"Finds and displays all tasks that have names containing the keyword.","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"victorpengmx":94,"-":21}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorpengmx"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"victorpengmx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"victorpengmx"},"content":"import duke.main.DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"victorpengmx"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"victorpengmx"},"content":"import duke.main.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"victorpengmx"},"content":"import duke.main.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"victorpengmx"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"victorpengmx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"victorpengmx"},"content":" * The AddDeadlineCommand class.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"victorpengmx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"victorpengmx"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"victorpengmx"},"content":"    private String taskName;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"victorpengmx"},"content":"    private String dueDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"victorpengmx"},"content":"     * Constructor for the duke.command.AddDeadlineCommand class.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"victorpengmx"},"content":"     * @param taskName","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"victorpengmx"},"content":"     * @param dueDate","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"victorpengmx"},"content":"    public AddDeadlineCommand(String taskName, String dueDate) throws DukeException {","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"victorpengmx"},"content":"        if (taskName.equals(\"\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"victorpengmx"},"content":"            throw new DukeException(\"OOPS!!! Incorrect description of a deadline.\");","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"victorpengmx"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"victorpengmx"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"victorpengmx"},"content":"     * Executes the command by creating a deadline, adding it to the taskList,","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"victorpengmx"},"content":"     * adding it to the storage, and displaying a message to the ui.","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"victorpengmx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"victorpengmx"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"victorpengmx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"victorpengmx"},"content":"            Deadline deadline \u003d new Deadline(taskName, dueDate, false);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"victorpengmx"},"content":"            taskList.addTask(deadline);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"victorpengmx"},"content":"            storage.rewriteToFile(taskList.getList());","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"victorpengmx"},"content":"            return ui.successfulAddTaskMsg(deadline.userDisplayString(), taskList.getIndex());","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"victorpengmx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"victorpengmx"},"content":"            throw new DukeException(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"victorpengmx"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"victorpengmx"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"victorpengmx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"victorpengmx":51}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorpengmx"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"victorpengmx"},"content":"import duke.main.DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"victorpengmx"},"content":"import duke.main.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"victorpengmx"},"content":"import duke.main.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"victorpengmx"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"victorpengmx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":" * The AddEventCommand.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"victorpengmx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"victorpengmx"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"victorpengmx"},"content":"    private String taskName;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"victorpengmx"},"content":"    private String startDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"victorpengmx"},"content":"    private String endDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"victorpengmx"},"content":"     * Constructor for the duke.command.Command class.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"victorpengmx"},"content":"     * @param taskName","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"victorpengmx"},"content":"     * @param startDate","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"victorpengmx"},"content":"     * @param endDate","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"victorpengmx"},"content":"    public AddEventCommand(String taskName, String startDate, String endDate) throws DukeException {","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"victorpengmx"},"content":"        if (taskName.equals(\"\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"victorpengmx"},"content":"            throw new DukeException(\"OOPS!!! Incorrect description of a deadline.\");","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"victorpengmx"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"victorpengmx"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"victorpengmx"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"victorpengmx"},"content":"     * Executes the command by creating an event, adding it to the taskList,","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"victorpengmx"},"content":"     * adding it to the storage and displaying a message to the ui.","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"victorpengmx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"victorpengmx"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"victorpengmx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"victorpengmx"},"content":"            Event event \u003d new Event(taskName, startDate, endDate, false);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"victorpengmx"},"content":"            taskList.addTask(event);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"victorpengmx"},"content":"            storage.rewriteToFile(taskList.getList());","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"victorpengmx"},"content":"            return ui.successfulAddTaskMsg(event.userDisplayString(), taskList.getIndex());","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"victorpengmx"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"victorpengmx"},"content":"            throw new DukeException(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"victorpengmx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"victorpengmx"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"victorpengmx"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"victorpengmx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"victorpengmx":53}},{"path":"src/main/java/duke/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorpengmx"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"victorpengmx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"victorpengmx"},"content":"import duke.main.DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"victorpengmx"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"victorpengmx"},"content":"import duke.main.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"victorpengmx"},"content":"import duke.main.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"victorpengmx"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"victorpengmx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"victorpengmx"},"content":" * The AddTodoCommand class.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"victorpengmx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"victorpengmx"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"victorpengmx"},"content":"    private String taskName;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"victorpengmx"},"content":"     * Constructor for the duke.command.AddTodoCommand class.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"victorpengmx"},"content":"     * @param taskName","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"victorpengmx"},"content":"    public AddTodoCommand(String taskName) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"victorpengmx"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"victorpengmx"},"content":"     * Executes the command by creating a todo, adding it to the taskList,","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"victorpengmx"},"content":"     * adding it to the storage and displaying a message to the ui.","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"victorpengmx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"victorpengmx"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"victorpengmx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"victorpengmx"},"content":"            Todo todo \u003d new Todo(taskName, false);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"victorpengmx"},"content":"            taskList.addTask(todo);","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"victorpengmx"},"content":"            storage.rewriteToFile(taskList.getList());","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"victorpengmx"},"content":"            return ui.successfulAddTaskMsg(todo.userDisplayString(), taskList.getIndex());","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"victorpengmx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"victorpengmx"},"content":"            throw new DukeException(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"victorpengmx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"victorpengmx"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"victorpengmx"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"victorpengmx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"victorpengmx":46}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorpengmx"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"victorpengmx"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":"import duke.main.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"victorpengmx"},"content":"import duke.main.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"victorpengmx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"victorpengmx"},"content":" * The ByeCommand class.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"victorpengmx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"victorpengmx"},"content":"     * Displays a goodbye message to the ui.","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"victorpengmx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"victorpengmx"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"victorpengmx"},"content":"        return ui.showGoodbyeMsg();","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"victorpengmx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"victorpengmx"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"victorpengmx"},"content":"        return true;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"victorpengmx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"victorpengmx":23}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorpengmx"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"victorpengmx"},"content":"import duke.main.DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"victorpengmx"},"content":"import duke.main.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"victorpengmx"},"content":"import duke.main.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"victorpengmx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"victorpengmx"},"content":" * The Command class.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"victorpengmx"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"victorpengmx"},"content":"     * Creates a new task, adds it to the task list, stores it in the file,","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"victorpengmx"},"content":"     * and prints out a message.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"victorpengmx"},"content":"     * @param taskList","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"victorpengmx"},"content":"     * @param ui","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"victorpengmx"},"content":"     * @param storage","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"victorpengmx"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"victorpengmx"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"victorpengmx"},"content":"     * Indicates if the program is supposed to end or not after this command is executed.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"victorpengmx"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"victorpengmx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"victorpengmx":27}},{"path":"src/main/java/duke/command/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorpengmx"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"victorpengmx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"victorpengmx"},"content":"import duke.main.DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"victorpengmx"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"victorpengmx"},"content":"import duke.main.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"victorpengmx"},"content":"import duke.main.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"victorpengmx"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"victorpengmx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"victorpengmx"},"content":" * The DeleteTaskCommand class.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"victorpengmx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"victorpengmx"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"victorpengmx"},"content":"    private int index;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"victorpengmx"},"content":"     * Constructor for the duke.command.DeleteTaskCommand class.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"victorpengmx"},"content":"     * @param index Index of the task to be deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"victorpengmx"},"content":"    public DeleteTaskCommand(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"victorpengmx"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"victorpengmx"},"content":"     * Deletes the specified task from the taskList, storage,","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"victorpengmx"},"content":"     * and displaying a message to the ui.","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"victorpengmx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"victorpengmx"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"victorpengmx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"victorpengmx"},"content":"            Task task \u003d taskList.getTask(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"victorpengmx"},"content":"            taskList.deleteTask(index);","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"victorpengmx"},"content":"            storage.rewriteToFile(taskList.getList());","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"victorpengmx"},"content":"            return ui.successfulTaskDeletionMsg(task.userDisplayString(), taskList.getSize());","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"victorpengmx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"victorpengmx"},"content":"            throw new DukeException(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"victorpengmx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"victorpengmx"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"victorpengmx"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"victorpengmx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"victorpengmx":46}},{"path":"src/main/java/duke/command/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorpengmx"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"victorpengmx"},"content":"import duke.main.DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"victorpengmx"},"content":"import duke.main.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"victorpengmx"},"content":"import duke.main.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"victorpengmx"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"victorpengmx"},"content":" * The FindTaskCommand class.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"victorpengmx"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"victorpengmx"},"content":"    private String keyword;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"victorpengmx"},"content":"     * Constructor for the FindTaskCommand class.","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"victorpengmx"},"content":"     * @param keyword The string that is contained in the name of the task to be found.","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"victorpengmx"},"content":"    public FindTaskCommand(String keyword) {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"victorpengmx"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"victorpengmx"},"content":"     * Returns a list of tasks with names that contain the keyword.","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"victorpengmx"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"victorpengmx"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"victorpengmx"},"content":"        return ui.findTasks(taskList, keyword);","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"victorpengmx"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"victorpengmx"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"victorpengmx"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"victorpengmx"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"victorpengmx":34}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorpengmx"},"content":"package duke.command;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"victorpengmx"},"content":"import duke.main.DukeException;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"victorpengmx"},"content":"import duke.main.TaskList;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"victorpengmx"},"content":"import duke.main.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"victorpengmx"},"content":"/**","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"victorpengmx"},"content":" * The HelpCommand class.","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":" */","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"victorpengmx"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"victorpengmx"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"victorpengmx"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"victorpengmx"},"content":"        return ui.showHelpList();","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"victorpengmx"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"victorpengmx"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"victorpengmx"},"content":"        return false;","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"victorpengmx"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"victorpengmx":22}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorpengmx"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"victorpengmx"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":"import duke.main.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"victorpengmx"},"content":"import duke.main.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"victorpengmx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"victorpengmx"},"content":" * The ListCommand class.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"victorpengmx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"victorpengmx"},"content":"     * Returns the list of tasks in the taskList.","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"victorpengmx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"victorpengmx"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"victorpengmx"},"content":"        return ui.produceTaskList(taskList);","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"victorpengmx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"victorpengmx"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"victorpengmx"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"victorpengmx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"victorpengmx":23}},{"path":"src/main/java/duke/command/MarkDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorpengmx"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"victorpengmx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"victorpengmx"},"content":"import duke.main.DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"victorpengmx"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"victorpengmx"},"content":"import duke.main.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"victorpengmx"},"content":"import duke.main.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"victorpengmx"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"victorpengmx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"victorpengmx"},"content":" * The MarkDoneCommand class.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"victorpengmx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"victorpengmx"},"content":"public class MarkDoneCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"victorpengmx"},"content":"    private int index;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"victorpengmx"},"content":"     * Constructor for the duke.command.MarkDoneCommand class.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"victorpengmx"},"content":"     * @param index Index of the task to be marked.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"victorpengmx"},"content":"    public MarkDoneCommand(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"victorpengmx"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"victorpengmx"},"content":"     * Marks the specified task as done, updates the storage,","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"victorpengmx"},"content":"     * then displays a message to the ui.","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"victorpengmx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"victorpengmx"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"victorpengmx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"victorpengmx"},"content":"            taskList.markDone(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"victorpengmx"},"content":"            Task task \u003d taskList.getTask(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"victorpengmx"},"content":"            storage.rewriteToFile(taskList.getList());","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"victorpengmx"},"content":"            return ui.successfulMarkDoneMsg(task.userDisplayString());","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"victorpengmx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"victorpengmx"},"content":"            throw new DukeException(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"victorpengmx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"victorpengmx"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"victorpengmx"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"victorpengmx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"victorpengmx":46}},{"path":"src/main/java/duke/command/MarkNotDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorpengmx"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"victorpengmx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"victorpengmx"},"content":"import duke.main.DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"victorpengmx"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"victorpengmx"},"content":"import duke.main.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"victorpengmx"},"content":"import duke.main.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"victorpengmx"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"victorpengmx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"victorpengmx"},"content":" * The MarkNotDoneCommand class.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"victorpengmx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"victorpengmx"},"content":"public class MarkNotDoneCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"victorpengmx"},"content":"    private int index;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"victorpengmx"},"content":"     * Constructor for the duke.command.MarkNotDoneCommand class.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"victorpengmx"},"content":"     * @param index Index of the task to be marked.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"victorpengmx"},"content":"    public MarkNotDoneCommand(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"victorpengmx"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"victorpengmx"},"content":"     * Marks the specified task as not done, updates the storage,","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"victorpengmx"},"content":"     * and displays a message to the ui.","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"victorpengmx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"victorpengmx"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"victorpengmx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"victorpengmx"},"content":"            taskList.markNotDone(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"victorpengmx"},"content":"            Task task \u003d taskList.getTask(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"victorpengmx"},"content":"            storage.rewriteToFile(taskList.getList());","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"victorpengmx"},"content":"            return ui.successfulMarkNotDoneMsg(task.userDisplayString());","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"victorpengmx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"victorpengmx"},"content":"            throw new DukeException(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"victorpengmx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"victorpengmx"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"victorpengmx"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"victorpengmx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"victorpengmx":46}},{"path":"src/main/java/duke/main/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorpengmx"},"content":"package duke.main;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"victorpengmx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"victorpengmx"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"victorpengmx"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"victorpengmx"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"victorpengmx"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"victorpengmx"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"victorpengmx"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"victorpengmx"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"victorpengmx"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"victorpengmx"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"victorpengmx"},"content":"import javafx.scene.text.TextAlignment;","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"victorpengmx"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"victorpengmx"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"victorpengmx"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"victorpengmx"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"victorpengmx"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"victorpengmx"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"victorpengmx"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"victorpengmx"},"content":"    private Text dialog;","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"victorpengmx"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"victorpengmx"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"victorpengmx"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"victorpengmx"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"victorpengmx"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"victorpengmx"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"victorpengmx"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"victorpengmx"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"victorpengmx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"victorpengmx"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"victorpengmx"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"victorpengmx"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"victorpengmx"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"victorpengmx"},"content":"    private void flip() {","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"victorpengmx"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"victorpengmx"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"victorpengmx"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"victorpengmx"},"content":"        Text t \u003d (Text) getChildren().get(1);","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"victorpengmx"},"content":"        t.setTextAlignment(TextAlignment.LEFT);","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"victorpengmx"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"victorpengmx"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"victorpengmx"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"victorpengmx"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"victorpengmx"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"victorpengmx"},"content":"        db.flip();","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"victorpengmx"},"content":"        return db;","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"victorpengmx"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"victorpengmx":65}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorpengmx"},"content":"package duke.main;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"victorpengmx"},"content":"import duke.command.Command;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"victorpengmx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"victorpengmx"},"content":" * The Duke class.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"victorpengmx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"victorpengmx"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"victorpengmx"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"victorpengmx"},"content":"     * Constructor for the duke.main.Duke class.","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"victorpengmx"},"content":"     * @param filePath The String representing the filePath of the file to be used.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"victorpengmx"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"victorpengmx"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"victorpengmx"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"victorpengmx"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"victorpengmx"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"victorpengmx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"victorpengmx"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"victorpengmx"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"victorpengmx"},"content":"    public Duke() {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"victorpengmx"},"content":"        this(\"duke.txt\");","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"victorpengmx"},"content":"     * Runs the program.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"victorpengmx"},"content":"    public void run() {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"victorpengmx"},"content":"        ui.showWelcomeMsg();","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"victorpengmx"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"victorpengmx"},"content":"        while (!isExit) {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"victorpengmx"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"victorpengmx"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"victorpengmx"},"content":"                Command command \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"victorpengmx"},"content":"                command.execute(taskList, ui, storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"victorpengmx"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"victorpengmx"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"victorpengmx"},"content":"                System.out.println(e);","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"victorpengmx"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"victorpengmx"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"victorpengmx"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"victorpengmx"},"content":"    String getResponse(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"victorpengmx"},"content":"        String result;","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"victorpengmx"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"victorpengmx"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"victorpengmx"},"content":"            result \u003d command.execute(taskList, ui, storage);","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"victorpengmx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"victorpengmx"},"content":"            result \u003d e.getMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"victorpengmx"},"content":"        return result;","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"victorpengmx"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"victorpengmx"},"content":"        new Duke().run();","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"victorpengmx":66,"-":3}},{"path":"src/main/java/duke/main/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorpengmx"},"content":"package duke.main;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"victorpengmx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":" * The DukeException class.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"victorpengmx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"victorpengmx"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"victorpengmx"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"victorpengmx"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"victorpengmx":10}},{"path":"src/main/java/duke/main/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorpengmx"},"content":"package duke.main;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"victorpengmx"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"victorpengmx"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"victorpengmx"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"victorpengmx"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"victorpengmx"},"content":"public class Launcher {","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"victorpengmx"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"victorpengmx"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"victorpengmx":12}},{"path":"src/main/java/duke/main/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorpengmx"},"content":"package duke.main;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"victorpengmx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"victorpengmx"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"victorpengmx"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"victorpengmx"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"victorpengmx"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"victorpengmx"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"victorpengmx"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"victorpengmx"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"victorpengmx"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"victorpengmx"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"victorpengmx"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"victorpengmx"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"victorpengmx"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"victorpengmx"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"victorpengmx"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"victorpengmx"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"victorpengmx"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"victorpengmx"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"victorpengmx"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"victorpengmx"},"content":"            stage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"victorpengmx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"victorpengmx"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"victorpengmx"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"victorpengmx":32}},{"path":"src/main/java/duke/main/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorpengmx"},"content":"package duke.main;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"victorpengmx"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"victorpengmx"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"victorpengmx"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"victorpengmx"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"victorpengmx"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"victorpengmx"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"victorpengmx"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"victorpengmx"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"victorpengmx"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"victorpengmx"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"victorpengmx"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"victorpengmx"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"victorpengmx"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"victorpengmx"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"victorpengmx"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"victorpengmx"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"victorpengmx"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"victorpengmx"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"victorpengmx"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"victorpengmx"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"victorpengmx"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"victorpengmx"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"victorpengmx"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"victorpengmx"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"victorpengmx"},"content":"                DialogBox.getDukeDialog(\"Hello! I\u0027m Albatross.\\nPlease enter a command.\", dukeImage)","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"victorpengmx"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"victorpengmx"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"victorpengmx"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"victorpengmx"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"victorpengmx"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"victorpengmx"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"victorpengmx"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"victorpengmx"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"victorpengmx"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"victorpengmx"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"victorpengmx"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"victorpengmx"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"victorpengmx"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"victorpengmx"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"victorpengmx"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"victorpengmx":54}},{"path":"src/main/java/duke/main/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorpengmx"},"content":"package duke.main;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"victorpengmx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"victorpengmx"},"content":"import duke.command.*;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"victorpengmx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"victorpengmx"},"content":" * The Parser class.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"victorpengmx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":"public class Parser {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"victorpengmx"},"content":"     * Checks if a string is numeric.","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"victorpengmx"},"content":"     * @param str The string to be checked.","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"victorpengmx"},"content":"     * @return True if the string is numeric and false otherwise.","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"victorpengmx"},"content":"    public static boolean isNumeric(String str) {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"victorpengmx"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"victorpengmx"},"content":"            Double.parseDouble(str);","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"victorpengmx"},"content":"            return true;","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"victorpengmx"},"content":"        } catch (NullPointerException | NumberFormatException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"victorpengmx"},"content":"            return false;","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"victorpengmx"},"content":"     * Checks for a valid \"bye\" command.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"victorpengmx"},"content":"     * @param input the string input by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"victorpengmx"},"content":"     * @return A duke.command.ByeCommand if the command is valid and null otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"victorpengmx"},"content":"    public static ByeCommand byeCommandChecker(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"victorpengmx"},"content":"        if (input.trim().equals(\"bye\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"victorpengmx"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"victorpengmx"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"victorpengmx"},"content":"            return null;","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"victorpengmx"},"content":"     * Checks for a valid \"list\" command.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"victorpengmx"},"content":"     * @param input the string input by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"victorpengmx"},"content":"     * @return A duke.command.ListCommand containing the keywords if the command is valid and null otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"victorpengmx"},"content":"    public static ListCommand listCommandChecker(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"victorpengmx"},"content":"        if (input.trim().equals(\"list\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"victorpengmx"},"content":"            return new ListCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"victorpengmx"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"victorpengmx"},"content":"            return null;","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"victorpengmx"},"content":"     * Checks for a valid \"todo\" command.","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"victorpengmx"},"content":"     * @param input the string input by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"victorpengmx"},"content":"     * @return A duke.command.AddTodoCommand if the command is valid and null if the command is not a \"todo\".","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"victorpengmx"},"content":"     * @throws DukeException if the command is \"todo\" but the keywords are not valid.","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"victorpengmx"},"content":"    public static AddTodoCommand todoCommandChecker(String input) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"victorpengmx"},"content":"        String[] strSegments \u003d input.trim().split(\" \");","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"victorpengmx"},"content":"        String command \u003d strSegments[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"victorpengmx"},"content":"        if (command.equals(\"todo\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"victorpengmx"},"content":"            String taskName \u003d input.trim().substring(4).trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"victorpengmx"},"content":"            if (taskName.equals(\"\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"victorpengmx"},"content":"                throw new DukeException(\"OOPS!!! Incorrect description of a todo.\");","lastModifiedDate":"2023-09-19"},{"lineNumber":69,"author":{"gitId":"victorpengmx"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"victorpengmx"},"content":"            return new AddTodoCommand(taskName);","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"victorpengmx"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"victorpengmx"},"content":"            return null;","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"victorpengmx"},"content":"     * Checks for a valid \"deadline\" command.","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"victorpengmx"},"content":"     * @param input the string input by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"victorpengmx"},"content":"     * @return A duke.command.AddDeadlineCommand if the command is valid","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"victorpengmx"},"content":"     *         and null if the command is not a \"deadline\".","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"victorpengmx"},"content":"     * @throws DukeException if the command is \"deadline\" but the keywords are not valid.","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"victorpengmx"},"content":"    public static AddDeadlineCommand deadlineCommandChecker(String input) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"victorpengmx"},"content":"        String[] strSegments \u003d input.trim().split(\" \");","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"victorpengmx"},"content":"        String command \u003d strSegments[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"victorpengmx"},"content":"        if (command.equals(\"deadline\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"victorpengmx"},"content":"            try {","lastModifiedDate":"2023-09-12"},{"lineNumber":90,"author":{"gitId":"victorpengmx"},"content":"                String string \u003d input.trim().substring(8).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"victorpengmx"},"content":"                String[] segments \u003d string.split(\"/by\");","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"victorpengmx"},"content":"                String eventName \u003d segments[0].trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"victorpengmx"},"content":"                String dateString \u003d segments[1].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"victorpengmx"},"content":"                LocalDate.parse(dateString);","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"victorpengmx"},"content":"                return new AddDeadlineCommand(eventName, dateString);","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"victorpengmx"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"victorpengmx"},"content":"                throw new DukeException(\"OOPS!!! Incorrect description of a deadline.\");","lastModifiedDate":"2023-09-19"},{"lineNumber":98,"author":{"gitId":"victorpengmx"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"victorpengmx"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"victorpengmx"},"content":"            return null;","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"victorpengmx"},"content":"     * Checks for a valid \"event\" command.","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"victorpengmx"},"content":"     * @param input the string input by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"victorpengmx"},"content":"     * @return An duke.command.AddEventCommand if the command is valid and null if the command is not an \"event\".","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"victorpengmx"},"content":"     * @throws DukeException if the command is \"event\" but the keywords are not valid.","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"victorpengmx"},"content":"    public static AddEventCommand eventCommandChecker(String input) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"victorpengmx"},"content":"        String[] strSegments \u003d input.trim().split(\" \");","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"victorpengmx"},"content":"        String command \u003d strSegments[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"victorpengmx"},"content":"        if (command.equals(\"event\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"victorpengmx"},"content":"            try {","lastModifiedDate":"2023-09-12"},{"lineNumber":117,"author":{"gitId":"victorpengmx"},"content":"                String str \u003d input.substring(5).trim();","lastModifiedDate":"2023-09-12"},{"lineNumber":118,"author":{"gitId":"victorpengmx"},"content":"                String[] segments \u003d str.split(\" /from \");","lastModifiedDate":"2023-09-12"},{"lineNumber":119,"author":{"gitId":"victorpengmx"},"content":"                String eventName \u003d segments[0].trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":120,"author":{"gitId":"victorpengmx"},"content":"                String[] segments2 \u003d segments[1].split(\" /to \");","lastModifiedDate":"2023-08-24"},{"lineNumber":121,"author":{"gitId":"victorpengmx"},"content":"                String startDate \u003d segments2[0].trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"victorpengmx"},"content":"                String endDate \u003d segments2[1].trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":123,"author":{"gitId":"victorpengmx"},"content":"                LocalDate.parse(startDate);","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"victorpengmx"},"content":"                LocalDate.parse(endDate);","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"victorpengmx"},"content":"                return new AddEventCommand(eventName, startDate, endDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"victorpengmx"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":127,"author":{"gitId":"victorpengmx"},"content":"                throw new DukeException(\"OOPS!!! Incorrect description of an event.\");","lastModifiedDate":"2023-09-19"},{"lineNumber":128,"author":{"gitId":"victorpengmx"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":129,"author":{"gitId":"victorpengmx"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":130,"author":{"gitId":"victorpengmx"},"content":"            return null;","lastModifiedDate":"2023-08-24"},{"lineNumber":131,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":132,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":133,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":134,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":135,"author":{"gitId":"victorpengmx"},"content":"     * Checks for a valid \"mark\" command.","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":137,"author":{"gitId":"victorpengmx"},"content":"     * @param input the string input by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"victorpengmx"},"content":"     * @return A duke.command.MarkDoneCommand if the command is valid and null if the command is not a \"mark\".","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"victorpengmx"},"content":"     * @throws DukeException if the command is \"mark\" but the keywords are not valid.","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":141,"author":{"gitId":"victorpengmx"},"content":"    public static MarkDoneCommand markCommandChecker(String input) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"victorpengmx"},"content":"        String[] strSegments \u003d input.trim().split(\" \");","lastModifiedDate":"2023-08-24"},{"lineNumber":143,"author":{"gitId":"victorpengmx"},"content":"        String command \u003d strSegments[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":144,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":145,"author":{"gitId":"victorpengmx"},"content":"        if (command.equals(\"mark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":146,"author":{"gitId":"victorpengmx"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":147,"author":{"gitId":"victorpengmx"},"content":"                if (!isNumeric(strSegments[1])) {","lastModifiedDate":"2023-08-24"},{"lineNumber":148,"author":{"gitId":"victorpengmx"},"content":"                    throw new DukeException(\"Invalid input for index\");","lastModifiedDate":"2023-08-24"},{"lineNumber":149,"author":{"gitId":"victorpengmx"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":150,"author":{"gitId":"victorpengmx"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":151,"author":{"gitId":"victorpengmx"},"content":"                throw new DukeException(\"Invalid input for index\");","lastModifiedDate":"2023-08-24"},{"lineNumber":152,"author":{"gitId":"victorpengmx"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":153,"author":{"gitId":"victorpengmx"},"content":"            int index \u003d (int) Double.parseDouble(input.substring(4).trim());","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"victorpengmx"},"content":"            return new MarkDoneCommand(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"victorpengmx"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":156,"author":{"gitId":"victorpengmx"},"content":"            return null;","lastModifiedDate":"2023-08-24"},{"lineNumber":157,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":158,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":159,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":160,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":161,"author":{"gitId":"victorpengmx"},"content":"     * Checks for a valid \"unmark\" command.","lastModifiedDate":"2023-09-01"},{"lineNumber":162,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":163,"author":{"gitId":"victorpengmx"},"content":"     * @param input the string input by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":164,"author":{"gitId":"victorpengmx"},"content":"     * @return A duke.command.MarkNotDoneCommand if the command is valid and null if the command is not a \"unmark\".","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"victorpengmx"},"content":"     * @throws DukeException if the command is \"unmark\" but the keywords are not valid.","lastModifiedDate":"2023-09-01"},{"lineNumber":166,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":167,"author":{"gitId":"victorpengmx"},"content":"    public static MarkNotDoneCommand unmarkCommandChecker(String input) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"victorpengmx"},"content":"        String[] strSegments \u003d input.trim().split(\" \");","lastModifiedDate":"2023-08-24"},{"lineNumber":169,"author":{"gitId":"victorpengmx"},"content":"        String command \u003d strSegments[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":170,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":171,"author":{"gitId":"victorpengmx"},"content":"        if (command.equals(\"unmark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":172,"author":{"gitId":"victorpengmx"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":173,"author":{"gitId":"victorpengmx"},"content":"                if (!isNumeric(strSegments[1])) {","lastModifiedDate":"2023-08-24"},{"lineNumber":174,"author":{"gitId":"victorpengmx"},"content":"                    throw new DukeException(\"Invalid input for index\");","lastModifiedDate":"2023-08-24"},{"lineNumber":175,"author":{"gitId":"victorpengmx"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":176,"author":{"gitId":"victorpengmx"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":177,"author":{"gitId":"victorpengmx"},"content":"                throw new DukeException(\"Invalid input for index\");","lastModifiedDate":"2023-08-24"},{"lineNumber":178,"author":{"gitId":"victorpengmx"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":179,"author":{"gitId":"victorpengmx"},"content":"            int index \u003d (int) Double.parseDouble(input.substring(6).trim());","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"victorpengmx"},"content":"            return new MarkNotDoneCommand(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":181,"author":{"gitId":"victorpengmx"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":182,"author":{"gitId":"victorpengmx"},"content":"            return null;","lastModifiedDate":"2023-08-24"},{"lineNumber":183,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":184,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":185,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":186,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":187,"author":{"gitId":"victorpengmx"},"content":"     * Checks for a valid \"delete task\" command.","lastModifiedDate":"2023-09-19"},{"lineNumber":188,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":189,"author":{"gitId":"victorpengmx"},"content":"     * @param input the string input by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":190,"author":{"gitId":"victorpengmx"},"content":"     * @return A duke.command.DeleteTaskCommand if it is valid and null if the command is not a \"delete\" command.","lastModifiedDate":"2023-09-19"},{"lineNumber":191,"author":{"gitId":"victorpengmx"},"content":"     * @throws DukeException if the command is \"delete\" but the keywords are not valid.","lastModifiedDate":"2023-09-01"},{"lineNumber":192,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":193,"author":{"gitId":"victorpengmx"},"content":"    public static DeleteTaskCommand deleteCommandChecker(String input) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":194,"author":{"gitId":"victorpengmx"},"content":"        String[] strSegments \u003d input.trim().split(\" \");","lastModifiedDate":"2023-08-24"},{"lineNumber":195,"author":{"gitId":"victorpengmx"},"content":"        String command \u003d strSegments[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":196,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":197,"author":{"gitId":"victorpengmx"},"content":"        if (command.equals(\"delete\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":198,"author":{"gitId":"victorpengmx"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":199,"author":{"gitId":"victorpengmx"},"content":"                if (!isNumeric(strSegments[1])) {","lastModifiedDate":"2023-08-24"},{"lineNumber":200,"author":{"gitId":"victorpengmx"},"content":"                    throw new DukeException(\"Invalid input for index\");","lastModifiedDate":"2023-08-24"},{"lineNumber":201,"author":{"gitId":"victorpengmx"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":202,"author":{"gitId":"victorpengmx"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":203,"author":{"gitId":"victorpengmx"},"content":"                throw new DukeException(\"Invalid input for index\");","lastModifiedDate":"2023-08-24"},{"lineNumber":204,"author":{"gitId":"victorpengmx"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":205,"author":{"gitId":"victorpengmx"},"content":"            int index \u003d (int) Double.parseDouble(input.substring(6).trim());","lastModifiedDate":"2023-08-31"},{"lineNumber":206,"author":{"gitId":"victorpengmx"},"content":"            return new DeleteTaskCommand(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":207,"author":{"gitId":"victorpengmx"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":208,"author":{"gitId":"victorpengmx"},"content":"            return null;","lastModifiedDate":"2023-08-24"},{"lineNumber":209,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":210,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":211,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":212,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":213,"author":{"gitId":"victorpengmx"},"content":"     * Checks for a valid \"find task\" command.","lastModifiedDate":"2023-09-19"},{"lineNumber":214,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":215,"author":{"gitId":"victorpengmx"},"content":"     * @param input The string input by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":216,"author":{"gitId":"victorpengmx"},"content":"     * @return A duke.command.FindTaskCommand if the command is valid and null if the command is not a \"find\" command.","lastModifiedDate":"2023-09-19"},{"lineNumber":217,"author":{"gitId":"victorpengmx"},"content":"     * @throws DukeException if the command is \"find\" but the keywords are not valid","lastModifiedDate":"2023-09-01"},{"lineNumber":218,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":219,"author":{"gitId":"victorpengmx"},"content":"    public static FindTaskCommand findTaskCommandChecker(String input) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":220,"author":{"gitId":"victorpengmx"},"content":"        String[] strSegments \u003d input.trim().split(\" \");","lastModifiedDate":"2023-09-01"},{"lineNumber":221,"author":{"gitId":"victorpengmx"},"content":"        String command \u003d strSegments[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":222,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":223,"author":{"gitId":"victorpengmx"},"content":"        if (command.equals(\"find\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":224,"author":{"gitId":"victorpengmx"},"content":"            String keyword \u003d input.trim().substring(4).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":225,"author":{"gitId":"victorpengmx"},"content":"            if (keyword.equals(\"\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":226,"author":{"gitId":"victorpengmx"},"content":"                throw new DukeException(\"OOPS!!! Incorrect description of a find command.\");","lastModifiedDate":"2023-09-19"},{"lineNumber":227,"author":{"gitId":"victorpengmx"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":228,"author":{"gitId":"victorpengmx"},"content":"            return new FindTaskCommand(keyword);","lastModifiedDate":"2023-09-01"},{"lineNumber":229,"author":{"gitId":"victorpengmx"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":230,"author":{"gitId":"victorpengmx"},"content":"            return null;","lastModifiedDate":"2023-09-01"},{"lineNumber":231,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":232,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":233,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":234,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":235,"author":{"gitId":"victorpengmx"},"content":"     * Checks for a valid \"help\" command.","lastModifiedDate":"2023-09-19"},{"lineNumber":236,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":237,"author":{"gitId":"victorpengmx"},"content":"     * @param input The string input by the user.","lastModifiedDate":"2023-09-19"},{"lineNumber":238,"author":{"gitId":"victorpengmx"},"content":"     * @return A duke.command.HelpCommand if the command is valid and null if the command is not a \"help\" command.","lastModifiedDate":"2023-09-19"},{"lineNumber":239,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":240,"author":{"gitId":"victorpengmx"},"content":"    public static HelpCommand findHelpCommand(String input) {","lastModifiedDate":"2023-09-13"},{"lineNumber":241,"author":{"gitId":"victorpengmx"},"content":"        if (input.trim().equals(\"help\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":242,"author":{"gitId":"victorpengmx"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-09-13"},{"lineNumber":243,"author":{"gitId":"victorpengmx"},"content":"        } else {","lastModifiedDate":"2023-09-13"},{"lineNumber":244,"author":{"gitId":"victorpengmx"},"content":"            return null;","lastModifiedDate":"2023-09-13"},{"lineNumber":245,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":246,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":247,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":248,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":249,"author":{"gitId":"victorpengmx"},"content":"     * Checks for a valid command.","lastModifiedDate":"2023-08-24"},{"lineNumber":250,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":251,"author":{"gitId":"victorpengmx"},"content":"     * @param input the string input by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":252,"author":{"gitId":"victorpengmx"},"content":"     * @return a duke.command.Command corresponding to the correct command.","lastModifiedDate":"2023-09-01"},{"lineNumber":253,"author":{"gitId":"victorpengmx"},"content":"     * @throws DukeException if the command is invalid.","lastModifiedDate":"2023-08-24"},{"lineNumber":254,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":255,"author":{"gitId":"victorpengmx"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":256,"author":{"gitId":"victorpengmx"},"content":"        if (byeCommandChecker(input) !\u003d null) {","lastModifiedDate":"2023-08-24"},{"lineNumber":257,"author":{"gitId":"victorpengmx"},"content":"            return byeCommandChecker(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":258,"author":{"gitId":"victorpengmx"},"content":"        } else if (findHelpCommand(input) !\u003d null) {","lastModifiedDate":"2023-09-13"},{"lineNumber":259,"author":{"gitId":"victorpengmx"},"content":"            return findHelpCommand(input);","lastModifiedDate":"2023-09-13"},{"lineNumber":260,"author":{"gitId":"victorpengmx"},"content":"        } else if (listCommandChecker(input) !\u003d null) {","lastModifiedDate":"2023-08-24"},{"lineNumber":261,"author":{"gitId":"victorpengmx"},"content":"            return listCommandChecker(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":262,"author":{"gitId":"victorpengmx"},"content":"        } else if (todoCommandChecker(input) !\u003d null) {","lastModifiedDate":"2023-08-24"},{"lineNumber":263,"author":{"gitId":"victorpengmx"},"content":"            return todoCommandChecker(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":264,"author":{"gitId":"victorpengmx"},"content":"        } else if (deadlineCommandChecker(input) !\u003d null) {","lastModifiedDate":"2023-08-24"},{"lineNumber":265,"author":{"gitId":"victorpengmx"},"content":"            return deadlineCommandChecker(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":266,"author":{"gitId":"victorpengmx"},"content":"        } else if (eventCommandChecker(input) !\u003d null) {","lastModifiedDate":"2023-08-24"},{"lineNumber":267,"author":{"gitId":"victorpengmx"},"content":"            return eventCommandChecker(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":268,"author":{"gitId":"victorpengmx"},"content":"        } else if (markCommandChecker(input) !\u003d null) {","lastModifiedDate":"2023-08-24"},{"lineNumber":269,"author":{"gitId":"victorpengmx"},"content":"            return markCommandChecker(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":270,"author":{"gitId":"victorpengmx"},"content":"        } else if (unmarkCommandChecker(input) !\u003d null) {","lastModifiedDate":"2023-08-24"},{"lineNumber":271,"author":{"gitId":"victorpengmx"},"content":"            return unmarkCommandChecker(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":272,"author":{"gitId":"victorpengmx"},"content":"        } else if (deleteCommandChecker(input) !\u003d null) {","lastModifiedDate":"2023-08-24"},{"lineNumber":273,"author":{"gitId":"victorpengmx"},"content":"            return deleteCommandChecker(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":274,"author":{"gitId":"victorpengmx"},"content":"        } else if (findTaskCommandChecker(input) !\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":275,"author":{"gitId":"victorpengmx"},"content":"            return findTaskCommandChecker(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":276,"author":{"gitId":"victorpengmx"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":277,"author":{"gitId":"victorpengmx"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-19"},{"lineNumber":278,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":279,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":280,"author":{"gitId":"victorpengmx"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"victorpengmx":280}},{"path":"src/main/java/duke/main/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorpengmx"},"content":"package duke.main;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"victorpengmx"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"victorpengmx"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"victorpengmx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"victorpengmx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"victorpengmx"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"victorpengmx"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"victorpengmx"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"victorpengmx"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"victorpengmx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"victorpengmx"},"content":" * The Storage class.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"victorpengmx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"victorpengmx"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"victorpengmx"},"content":"    private String filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"victorpengmx"},"content":"    private File file;","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"victorpengmx"},"content":"     * Constructor for the duke.main.Storage class.","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"victorpengmx"},"content":"     * @param filePath The string representing the path of the file used.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"victorpengmx"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"victorpengmx"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"victorpengmx"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"victorpengmx"},"content":"     * Retrieves data from the file and stores it in an array list.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"victorpengmx"},"content":"     * @return The array list containing the tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"victorpengmx"},"content":"     * @throws DukeException","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"victorpengmx"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"victorpengmx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"victorpengmx"},"content":"            Scanner s \u003d new Scanner(this.file);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"victorpengmx"},"content":"            ArrayList\u003cTask\u003e tempList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"victorpengmx"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"victorpengmx"},"content":"                String currentLine \u003d s.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"victorpengmx"},"content":"                assert currentLine.length() \u003e\u003d 10;","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"victorpengmx"},"content":"                String eventType \u003d currentLine.substring(4, 5);","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"victorpengmx"},"content":"                assert eventType.equals(\"T\") || eventType.equals(\"D\") || eventType.equals(\"E\");","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"victorpengmx"},"content":"                assert currentLine.charAt(7) \u003d\u003d \u0027X\u0027 || currentLine.charAt(7) \u003d\u003d \u0027 \u0027;","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"victorpengmx"},"content":"                boolean eventDone \u003d currentLine.charAt(7) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"victorpengmx"},"content":"                if (eventType.equals(\"T\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"victorpengmx"},"content":"                    String eventName \u003d currentLine.substring(10);","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"victorpengmx"},"content":"                    Todo todo \u003d new Todo(eventName, eventDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"victorpengmx"},"content":"                    tempList.add(todo);","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"victorpengmx"},"content":"                } else if (eventType.equals(\"D\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"victorpengmx"},"content":"                    String[] strSegments \u003d currentLine.substring(10).split(\" By: \");","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"victorpengmx"},"content":"                    String eventName \u003d strSegments[0].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"victorpengmx"},"content":"                    String date \u003d strSegments[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"victorpengmx"},"content":"                    Deadline deadline \u003d new Deadline(eventName, date, eventDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"victorpengmx"},"content":"                    tempList.add(deadline);","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"victorpengmx"},"content":"                } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"victorpengmx"},"content":"                    String[] strSegments \u003d currentLine.substring(10).split(\" From: \");","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"victorpengmx"},"content":"                    String eventName \u003d strSegments[0].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"victorpengmx"},"content":"                    String[] strSegments2 \u003d strSegments[1].split(\" To: \");","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"victorpengmx"},"content":"                    String startDate \u003d strSegments2[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"victorpengmx"},"content":"                    int length \u003d strSegments2[1].length();","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"victorpengmx"},"content":"                    String endDate \u003d strSegments2[1].substring(0, length);","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"victorpengmx"},"content":"                    Event event \u003d new Event(eventName, startDate, endDate, eventDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"victorpengmx"},"content":"                    tempList.add(event);","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"victorpengmx"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"victorpengmx"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"victorpengmx"},"content":"            return tempList;","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"victorpengmx"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"victorpengmx"},"content":"            throw new DukeException(\"File not found :(\");","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"victorpengmx"},"content":"    };","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"victorpengmx"},"content":"     * Rewrites the contents of the task list to the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"victorpengmx"},"content":"     * @param list The array list of the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"victorpengmx"},"content":"     * @throws IOException","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"victorpengmx"},"content":"    public void rewriteToFile(ArrayList\u003cTask\u003e list) throws IOException {","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"victorpengmx"},"content":"        writeToFile(\"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"victorpengmx"},"content":"        if (list.size() \u003e 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"victorpengmx"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"victorpengmx"},"content":"                appendToFile((i + 1) + \". \" + list.get(i) + \"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"victorpengmx"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"victorpengmx"},"content":"     * Writes a string to the specified text file.","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"victorpengmx"},"content":"     * @param textToAdd The string to be written.","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"victorpengmx"},"content":"     * @throws IOException","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"victorpengmx"},"content":"    public void writeToFile(String textToAdd) throws IOException {","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"victorpengmx"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"victorpengmx"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"victorpengmx"},"content":"        fw.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"victorpengmx"},"content":"     * Adds a string to the end of the specified text file.","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"victorpengmx"},"content":"     * @param textToAppend The string to be added.","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"victorpengmx"},"content":"     * @throws IOException","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"victorpengmx"},"content":"    public void appendToFile(String textToAppend) throws IOException {","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"victorpengmx"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"victorpengmx"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"victorpengmx"},"content":"        fw.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"victorpengmx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"victorpengmx":117}},{"path":"src/main/java/duke/main/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorpengmx"},"content":"package duke.main;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"victorpengmx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"victorpengmx"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"victorpengmx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"victorpengmx"},"content":" * The TaskList class.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"victorpengmx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":"public class TaskList {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"victorpengmx"},"content":"     * A task list that stores the user\u0027s tasks.","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"victorpengmx"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"victorpengmx"},"content":"     * An index that tracks the current newest position in the task list.","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"victorpengmx"},"content":"    private int index;","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"victorpengmx"},"content":"     * Constructor for the duke.main.TaskList class.","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"victorpengmx"},"content":"     * @param list The list to become the list in the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"victorpengmx"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"victorpengmx"},"content":"        this.taskList \u003d list;","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"victorpengmx"},"content":"        this.index \u003d list.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"victorpengmx"},"content":"     * Constructor for the duke.main.TaskList class.","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"victorpengmx"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"victorpengmx"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"victorpengmx"},"content":"        this.index \u003d 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"victorpengmx"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"victorpengmx"},"content":"     * @param task The task to be added into the task list.","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"victorpengmx"},"content":"    public void addTask(Task task) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"victorpengmx"},"content":"        assert task !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"victorpengmx"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"victorpengmx"},"content":"        this.index++;","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"victorpengmx"},"content":"     * Marks the task with the specified index as done.","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"victorpengmx"},"content":"     * @param index The index of the task to be marked as done","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"victorpengmx"},"content":"    public void markDone(int index) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"victorpengmx"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"victorpengmx"},"content":"            Task task \u003d this.taskList.get(index - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"victorpengmx"},"content":"            task.setDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"victorpengmx"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"victorpengmx"},"content":"            throw new DukeException(\"☹ OOPS!!! There is no task with this index number.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"victorpengmx"},"content":"     * Marks the task with the specified index as not done.","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"victorpengmx"},"content":"     * @param index The index of the task to be marked as not done","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"victorpengmx"},"content":"    public void markNotDone(int index) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"victorpengmx"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"victorpengmx"},"content":"            Task task \u003d this.taskList.get(index - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"victorpengmx"},"content":"            task.setNotDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"victorpengmx"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"victorpengmx"},"content":"            throw new DukeException(\"☹ OOPS!!! There is no task with this index number.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"victorpengmx"},"content":"     * Removes the task with the specified index from the task list.","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"victorpengmx"},"content":"     * @param number The index of the task to be removed.","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"victorpengmx"},"content":"    public void deleteTask(int number) throws DukeException {","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"victorpengmx"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"victorpengmx"},"content":"            this.index \u003d this.taskList.size();","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"victorpengmx"},"content":"            this.taskList.remove(number - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"victorpengmx"},"content":"            this.index--;","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"victorpengmx"},"content":"        } catch (IndexOutOfBoundsException | NullPointerException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"victorpengmx"},"content":"            throw new DukeException(\"OOPS!!! There is no task with this index number.\");","lastModifiedDate":"2023-09-19"},{"lineNumber":89,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"victorpengmx"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"victorpengmx"},"content":"        return this.taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"victorpengmx"},"content":"    public int getIndex() {","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"victorpengmx"},"content":"        return this.index;","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":101,"author":{"gitId":"victorpengmx"},"content":"     * Returns the task with the indicated index.","lastModifiedDate":"2023-09-19"},{"lineNumber":102,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":103,"author":{"gitId":"victorpengmx"},"content":"     * @param index The index of the task.","lastModifiedDate":"2023-09-19"},{"lineNumber":104,"author":{"gitId":"victorpengmx"},"content":"     * @return The task.","lastModifiedDate":"2023-09-19"},{"lineNumber":105,"author":{"gitId":"victorpengmx"},"content":"     * @throws DukeException","lastModifiedDate":"2023-09-19"},{"lineNumber":106,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":107,"author":{"gitId":"victorpengmx"},"content":"    public Task getTask(int index) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"victorpengmx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"victorpengmx"},"content":"            return this.taskList.get(index - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"victorpengmx"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"victorpengmx"},"content":"            throw new DukeException(\"OOPS!!! There is no task with this index number.\");","lastModifiedDate":"2023-09-19"},{"lineNumber":112,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":114,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":115,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"victorpengmx"},"content":"     * Prints the tasks in the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"victorpengmx"},"content":"    public String produceTaskList() {","lastModifiedDate":"2023-09-12"},{"lineNumber":119,"author":{"gitId":"victorpengmx"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-09-19"},{"lineNumber":120,"author":{"gitId":"victorpengmx"},"content":"        result.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-09-19"},{"lineNumber":121,"author":{"gitId":"victorpengmx"},"content":"        for (int i \u003d 0; i \u003c this.getSize(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"victorpengmx"},"content":"            result.append(i + 1).append(\". \").append(this.taskList.get(i).userDisplayString()).append(\"\\n\");","lastModifiedDate":"2023-09-19"},{"lineNumber":123,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"victorpengmx"},"content":"        return result.toString();","lastModifiedDate":"2023-09-19"},{"lineNumber":125,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"victorpengmx"},"content":"     * Finds tasks in the list that contain the keyword.","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"victorpengmx"},"content":"     * @param keyword The keyword input by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"victorpengmx"},"content":"     * @return An array list containing the tasks that contain the key word.","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"victorpengmx"},"content":"     * @throws DukeException","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"victorpengmx"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"victorpengmx"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"victorpengmx"},"content":"            ArrayList\u003cTask\u003e tempList \u003d new ArrayList\u003c\u003e(this.getSize());","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"victorpengmx"},"content":"            for (int i \u003d 0; i \u003c this.getSize(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"victorpengmx"},"content":"                if (this.taskList.get(i).getName().contains(keyword)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"victorpengmx"},"content":"                    tempList.add(this.taskList.get(i));","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"victorpengmx"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"victorpengmx"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"victorpengmx"},"content":"            return tempList;","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"victorpengmx"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"victorpengmx"},"content":"            throw new DukeException(\"OOPS!!! There are no tasks in the list.\");","lastModifiedDate":"2023-09-19"},{"lineNumber":144,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"victorpengmx"},"content":"    public int getSize() {","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"victorpengmx"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":150,"author":{"gitId":"victorpengmx"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"victorpengmx":150}},{"path":"src/main/java/duke/main/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorpengmx"},"content":"package duke.main;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"victorpengmx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"victorpengmx"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"victorpengmx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"victorpengmx"},"content":" * The Ui class.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"victorpengmx"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"victorpengmx"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"victorpengmx"},"content":"    public Ui() {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"victorpengmx"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"victorpengmx"},"content":"     * Returns the next command by the user.","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"victorpengmx"},"content":"     * @return The command string.","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"victorpengmx"},"content":"    public String readCommand() {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"victorpengmx"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"victorpengmx"},"content":"     * Prints the welcome message.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"victorpengmx"},"content":"    public void showWelcomeMsg() {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"victorpengmx"},"content":"        System.out.println(\"Hello! I\u0027m Albatross\");","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"victorpengmx"},"content":"        System.out.println(\"Please enter a command\");","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"victorpengmx"},"content":"     * Returns the goodbye message.","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"victorpengmx"},"content":"    public String showGoodbyeMsg() {","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"victorpengmx"},"content":"        return \"Bye! Hope to see you again soon!\";","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"victorpengmx"},"content":"     * Prints a message when a task has been successfully added.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"victorpengmx"},"content":"     * @param taskString The string representation of the added task.","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"victorpengmx"},"content":"     * @param index The number of tasks in the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"victorpengmx"},"content":"    public String successfulAddTaskMsg(String taskString, int index) {","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"victorpengmx"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"victorpengmx"},"content":"        result +\u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"victorpengmx"},"content":"        result +\u003d taskString + \"\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"victorpengmx"},"content":"        result +\u003d \"Now you have \" + index + \" tasks in the list.\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"victorpengmx"},"content":"        return result;","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"victorpengmx"},"content":"     * Prints a message when a task has been successfully marked as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"victorpengmx"},"content":"     * @param taskString The string representation of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"victorpengmx"},"content":"    public String successfulMarkDoneMsg(String taskString) {","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"victorpengmx"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + taskString + \"\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"victorpengmx"},"content":"     * Prints a message when a task has been successfully marked as not done.","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"victorpengmx"},"content":"     * @param taskString The string representation of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"victorpengmx"},"content":"    public String successfulMarkNotDoneMsg(String taskString) {","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"victorpengmx"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + taskString + \"\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":72,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"victorpengmx"},"content":"     * Prints a message when a task has been successfully deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"victorpengmx"},"content":"     * @param taskString The string representation of the added task.","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"victorpengmx"},"content":"     * @param index The number of tasks in the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"victorpengmx"},"content":"    public String successfulTaskDeletionMsg(String taskString, int index) {","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"victorpengmx"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"victorpengmx"},"content":"        result +\u003d \"Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"victorpengmx"},"content":"        result +\u003d taskString + \"\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":84,"author":{"gitId":"victorpengmx"},"content":"        result +\u003d \"Now you have \" + index + \" tasks in the list.\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":85,"author":{"gitId":"victorpengmx"},"content":"        return result;","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"victorpengmx"},"content":"     * Prints all tasks in the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"victorpengmx"},"content":"     * @param taskList The task list being printed.","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"victorpengmx"},"content":"    public String produceTaskList(TaskList taskList) {","lastModifiedDate":"2023-09-12"},{"lineNumber":94,"author":{"gitId":"victorpengmx"},"content":"        return taskList.produceTaskList();","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"victorpengmx"},"content":"     * Finds tasks that contain the keyword and prints them in a list.","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"victorpengmx"},"content":"     * @param taskList The task list to find tasks from.","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"victorpengmx"},"content":"     * @param keyword The keyword input by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"victorpengmx"},"content":"     * @throws DukeException","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"victorpengmx"},"content":"    public String findTasks(TaskList taskList, String keyword) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"victorpengmx"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"victorpengmx"},"content":"            String result \u003d \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"victorpengmx"},"content":"            ArrayList\u003cTask\u003e list \u003d taskList.findTasks(keyword);","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"victorpengmx"},"content":"            result +\u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":109,"author":{"gitId":"victorpengmx"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"victorpengmx"},"content":"                result +\u003d ((i + 1) + \". \" + list.get(i).userDisplayString()) + \"\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":111,"author":{"gitId":"victorpengmx"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"victorpengmx"},"content":"            return result;","lastModifiedDate":"2023-09-07"},{"lineNumber":113,"author":{"gitId":"victorpengmx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"victorpengmx"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":118,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":119,"author":{"gitId":"victorpengmx"},"content":"     * Returns the help list.","lastModifiedDate":"2023-09-19"},{"lineNumber":120,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":121,"author":{"gitId":"victorpengmx"},"content":"     * @return the help list.","lastModifiedDate":"2023-09-19"},{"lineNumber":122,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":123,"author":{"gitId":"victorpengmx"},"content":"    public String showHelpList() {","lastModifiedDate":"2023-09-13"},{"lineNumber":124,"author":{"gitId":"victorpengmx"},"content":"        String str \u003d \"Here are the formats of possible commands:\\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":125,"author":{"gitId":"victorpengmx"},"content":"                + \"1. help\\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":126,"author":{"gitId":"victorpengmx"},"content":"                + \"2. todo {taskname}\\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":127,"author":{"gitId":"victorpengmx"},"content":"                + \"3. deadline {taskname} /by {YYYY-MM-DD}\\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":128,"author":{"gitId":"victorpengmx"},"content":"                + \"4. event {taskname} /from {YYYY-MM-DD} /to {YYYY-MM-DD}\\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":129,"author":{"gitId":"victorpengmx"},"content":"                + \"5. mark {index}\\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":130,"author":{"gitId":"victorpengmx"},"content":"                + \"6. unmark {index}\\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":131,"author":{"gitId":"victorpengmx"},"content":"                + \"7. delete {index}\\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":132,"author":{"gitId":"victorpengmx"},"content":"                + \"8. find {keywords}\\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":133,"author":{"gitId":"victorpengmx"},"content":"                + \"9. bye\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":134,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":135,"author":{"gitId":"victorpengmx"},"content":"        return str;","lastModifiedDate":"2023-09-13"},{"lineNumber":136,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":137,"author":{"gitId":"victorpengmx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"victorpengmx":137}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorpengmx"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"victorpengmx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"victorpengmx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"victorpengmx"},"content":" * The Deadline class.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"victorpengmx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"victorpengmx"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":"    private LocalDate deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"victorpengmx"},"content":"     * Constructor for the duke.task.Todo class.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"victorpengmx"},"content":"     * @param name The name of the todo task.","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"victorpengmx"},"content":"     * @param deadline The deadline of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"victorpengmx"},"content":"     * @param isDone Whether the task is marked done or not.","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"victorpengmx"},"content":"    public Deadline(String name, String deadline, boolean isDone) {","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"victorpengmx"},"content":"        super(name, isDone);","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"victorpengmx"},"content":"        this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"victorpengmx"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"victorpengmx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"victorpengmx"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"victorpengmx"},"content":"            return \"[D][X] \" + this.name + \" By: \" + this.deadline;","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"victorpengmx"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"victorpengmx"},"content":"            return \"[D][ ] \" + this.name + \" By: \" + this.deadline;","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"victorpengmx"},"content":"     * Displays the deadline in a user-friendly format.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"victorpengmx"},"content":"     * @return The string representation of the deadline for display to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"victorpengmx"},"content":"    public String userDisplayString() {","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"victorpengmx"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"victorpengmx"},"content":"            return \"[D][X] \" + this.name + \" By: \" + this.deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"victorpengmx"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"victorpengmx"},"content":"            return \"[D][ ] \" + this.name + \" By: \" + this.deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"victorpengmx"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"victorpengmx":44}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorpengmx"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"victorpengmx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"victorpengmx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"victorpengmx"},"content":" * The Event class.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"victorpengmx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"victorpengmx"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":"    private LocalDate startDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"victorpengmx"},"content":"    private LocalDate endDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"victorpengmx"},"content":"     * The constructor for the duke.task.Event class.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"victorpengmx"},"content":"     * @param name Name of the event task.","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"victorpengmx"},"content":"     * @param startDate Start date of the event.","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"victorpengmx"},"content":"     * @param endDate End date of the event.","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"victorpengmx"},"content":"     * @param isDone Whether the task is marked done or not.","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"victorpengmx"},"content":"    public Event(String name, String startDate, String endDate, boolean isDone) {","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"victorpengmx"},"content":"        super(name, isDone);","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"victorpengmx"},"content":"        this.startDate \u003d LocalDate.parse(startDate);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"victorpengmx"},"content":"        this.endDate \u003d LocalDate.parse(endDate);","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"victorpengmx"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"victorpengmx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"victorpengmx"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"victorpengmx"},"content":"            return \"[E][X] \" + this.name + \" From: \" + this.startDate + \" To: \" + this.endDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"victorpengmx"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"victorpengmx"},"content":"            return \"[E][ ] \" + this.name + \" From: \" + this.startDate + \" To: \" + this.endDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"victorpengmx"},"content":"     * Displays the event in a user-friendly format.","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"victorpengmx"},"content":"     * @return The string representation of the event for display to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"victorpengmx"},"content":"    public String userDisplayString() {","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"victorpengmx"},"content":"        String newStartDate \u003d this.startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"victorpengmx"},"content":"        String newEndDate \u003d this.endDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"victorpengmx"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"victorpengmx"},"content":"            return \"[E][X] \" + this.name + \" From: \" + newStartDate + \" To: \" + newEndDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"victorpengmx"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"victorpengmx"},"content":"            return \"[E][ ] \" + this.name + \" From: \" + newStartDate + \" To: \" + newEndDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"victorpengmx"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"victorpengmx":49}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorpengmx"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"victorpengmx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":" * The Task class.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"victorpengmx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"victorpengmx"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"victorpengmx"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"victorpengmx"},"content":"    protected String name;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"victorpengmx"},"content":"     * Constructor for the duke.task.Task class.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"victorpengmx"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"victorpengmx"},"content":"     * @param isDone Whether the task is marked done or not.","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"victorpengmx"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"victorpengmx"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"victorpengmx"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"victorpengmx"},"content":"     * Sets the task as done.","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"victorpengmx"},"content":"    public void setDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"victorpengmx"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"victorpengmx"},"content":"     * Sets the task as not done.","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"victorpengmx"},"content":"    public void setNotDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"victorpengmx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"victorpengmx"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"victorpengmx"},"content":"     * @return the string representing the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"victorpengmx"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"victorpengmx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"victorpengmx"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"victorpengmx"},"content":"            return \"[X] \" + this.name;","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"victorpengmx"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"victorpengmx"},"content":"            return \"[ ] \" + this.name;","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"victorpengmx"},"content":"    public String userDisplayString() {","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"victorpengmx"},"content":"        return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"victorpengmx"},"content":"     * Returns the name of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"victorpengmx"},"content":"     * @return the name of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"victorpengmx"},"content":"    public String getName() {","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"victorpengmx"},"content":"        return this.name;","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"victorpengmx"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"victorpengmx":61}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorpengmx"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"victorpengmx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":" * The Todo class.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"victorpengmx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"victorpengmx"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"victorpengmx"},"content":"     * Constructor for the duke.task.Todo class.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":"     * @param name The name of the todo task.","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"victorpengmx"},"content":"     * @param isDone Whether the task is marked done or not.","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"victorpengmx"},"content":"    public Todo(String name, boolean isDone) {","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"victorpengmx"},"content":"        super(name, isDone);","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"victorpengmx"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"victorpengmx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"victorpengmx"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"victorpengmx"},"content":"            return \"[T][X] \" + this.name;","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"victorpengmx"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"victorpengmx"},"content":"            return \"[T][ ] \" + this.name;","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"victorpengmx"},"content":"     * Displays the todo in a user-friendly format.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"victorpengmx"},"content":"     * @return The string representation of the todo for display to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"victorpengmx"},"content":"    public String userDisplayString() {","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"victorpengmx"},"content":"        return this.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"victorpengmx"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"victorpengmx":34}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"victorpengmx"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"victorpengmx"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"victorpengmx"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"victorpengmx"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"victorpengmx"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"victorpengmx"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":"        \u003cText fx:id\u003d\"dialog\" text\u003d\"Text\" textAlignment\u003d\"RIGHT\" wrappingWidth\u003d\"290.0\" /\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"victorpengmx"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"70.0\" fitWidth\u003d\"70.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"victorpengmx"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"victorpengmx"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"victorpengmx"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"victorpengmx"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"victorpengmx"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"victorpengmx":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"victorpengmx"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"victorpengmx"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"victorpengmx"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"victorpengmx"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"victorpengmx"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"victorpengmx"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.main.MainWindow\"\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"victorpengmx"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"victorpengmx"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"victorpengmx"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"victorpengmx"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"victorpengmx"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"victorpengmx"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"victorpengmx"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"victorpengmx"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"victorpengmx"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"victorpengmx":19}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorpengmx"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"victorpengmx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"victorpengmx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"victorpengmx"},"content":"import duke.main.DukeException;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"victorpengmx"},"content":"import duke.main.TaskList;","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"victorpengmx"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"victorpengmx"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"victorpengmx"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"victorpengmx"},"content":"    public void deleteTask_validIndexNumber_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"victorpengmx"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"victorpengmx"},"content":"        Todo todo \u003d new Todo(\"nothing\", false);","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"victorpengmx"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"victorpengmx"},"content":"            taskList.addTask(todo);","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"victorpengmx"},"content":"            taskList.deleteTask(1);","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"victorpengmx"},"content":"            assertEquals(0, taskList.getSize());","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"victorpengmx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"victorpengmx"},"content":"            System.out.println(e);","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"victorpengmx"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"victorpengmx"},"content":"    public void deleteTask_invalidIndexNumber_exceptionThrown() {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"victorpengmx"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"victorpengmx"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"victorpengmx"},"content":"            taskList.deleteTask(5);","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"victorpengmx"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"victorpengmx"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"victorpengmx"},"content":"            assertEquals(\"OOPS!!! There is no task with this index number.\", e.getMessage());","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"victorpengmx"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"victorpengmx"},"content":"    public void getTask_validIndexNumber_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"victorpengmx"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"victorpengmx"},"content":"        Todo todo \u003d new Todo(\"nothing\", false);","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"victorpengmx"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"victorpengmx"},"content":"            taskList.addTask(todo);","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"victorpengmx"},"content":"            Task task \u003d taskList.getTask(1);","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"victorpengmx"},"content":"            assertEquals(task.equals(todo), true);","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"victorpengmx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"victorpengmx"},"content":"            System.out.println(e);","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"victorpengmx"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"victorpengmx"},"content":"    public void getTask_invalidIndexNumber_exceptionThrown() {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"victorpengmx"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"victorpengmx"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"victorpengmx"},"content":"            taskList.getTask(2);","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"victorpengmx"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"victorpengmx"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"victorpengmx"},"content":"            assertEquals(\"OOPS!!! There is no task with this index number.\", e.getMessage());","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"victorpengmx"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"victorpengmx":60}},{"path":"src/test/java/duke/main/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorpengmx"},"content":"package duke.main;","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"victorpengmx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"victorpengmx"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"victorpengmx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"victorpengmx"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"victorpengmx"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":"    public void newDeadline_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"victorpengmx"},"content":"        // a new Deadline is created correctly.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"victorpengmx"},"content":"        Deadline deadline \u003d new Deadline(\"something\", \"1111-11-11\", false);","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"victorpengmx"},"content":"        assertEquals(\"[D][ ] something By: 1111-11-11\", deadline.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"victorpengmx"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"victorpengmx"},"content":"    public void showAltForm_stringRep_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"victorpengmx"},"content":"        Deadline deadline \u003d new Deadline(\"something\", \"1111-11-11\", false);","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"victorpengmx"},"content":"        assertEquals(\"[D][ ] something By: Nov 11 1111\", deadline.userDisplayString());","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"victorpengmx"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"victorpengmx"},"content":"    public void toggleDoneStatus_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"victorpengmx"},"content":"        // the done status of a deadline can be toggled successfully.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"victorpengmx"},"content":"        Deadline deadline \u003d new Deadline(\"something\", \"1111-11-11\", false);","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"victorpengmx"},"content":"        deadline.setDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"victorpengmx"},"content":"        assertEquals(\"[D][X] something By: 1111-11-11\", deadline.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"victorpengmx"},"content":"        deadline.setNotDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"victorpengmx"},"content":"        assertEquals(\"[D][ ] something By: 1111-11-11\", deadline.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"victorpengmx"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"victorpengmx":31}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"victorpengmx"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"victorpengmx"},"content":"unmark this","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"victorpengmx"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":"todo nothing","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"victorpengmx"},"content":"deadline","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"victorpengmx"},"content":"deadline nothing","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"victorpengmx"},"content":"deadline nothing /to 1111-11-11","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"victorpengmx"},"content":"deadline /by 1111-11-11","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"victorpengmx"},"content":"deadline nothing /by tmr morning","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":"deadline nothing /by 1111-11-11","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"victorpengmx"},"content":"event","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"victorpengmx"},"content":"event nothing","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"victorpengmx"},"content":"event nothing /from /to","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"victorpengmx"},"content":"event nothing /from tmr morning /to later","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"victorpengmx"},"content":"event nothing /from 1111-11-11 /to 1111-11-11","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"victorpengmx"},"content":"mark 3","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"victorpengmx"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"victorpengmx"},"content":"unmark 3","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"victorpengmx"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"victorpengmx"},"content":"delete","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"victorpengmx"},"content":"delete everything","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"victorpengmx"},"content":"delete 10","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"victorpengmx"},"content":"delete 2","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"victorpengmx"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"victorpengmx"},"content":"list list","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"victorpengmx"},"content":"idunno","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"victorpengmx"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"victorpengmx":27}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":"javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"victorpengmx":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"victorpengmx"},"content":"if ! javac -cp ../src/main/java/duke -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"victorpengmx":1,"-":37}}]
