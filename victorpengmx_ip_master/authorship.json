[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorpengmx"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"victorpengmx"},"content":"    private String deadline;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":"     * Constructor for the Todo class.","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"victorpengmx"},"content":"     * @param name The name of the todo task.","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"victorpengmx"},"content":"     * @param deadline The deadline of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"victorpengmx"},"content":"    public Deadline(String name, String deadline) {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":"        super(name);","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"victorpengmx"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"victorpengmx"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"victorpengmx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"victorpengmx"},"content":"        if (this.done) {","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"victorpengmx"},"content":"            return \"[D][X] \" + this.name + \" (by: \" + this.deadline + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"victorpengmx"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"victorpengmx"},"content":"            return \"[D][ ] \" + this.name + \" (by: \" + this.deadline + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"victorpengmx"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"victorpengmx":22}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorpengmx"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"victorpengmx"},"content":"    private static boolean isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"victorpengmx"},"content":"        String chatbotName \u003d \"Albatross\\n\";","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"victorpengmx"},"content":"        System.out.print(\"Hello! I\u0027m \" + chatbotName);","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"victorpengmx"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":"        // Task list to store user responses","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"victorpengmx"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"victorpengmx"},"content":"        // Scanner to read user response","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"victorpengmx"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"victorpengmx"},"content":"        System.out.println(\"Please enter a command\");","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"victorpengmx"},"content":"        // Scanner reads responses and adds to task list","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"victorpengmx"},"content":"        String userResponse \u003d scanner.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"victorpengmx"},"content":"        while (!isDone) {","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"victorpengmx"},"content":"            // Interpret the commands returned from the Parser","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"victorpengmx"},"content":"            // and execute the corresponding actions","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"victorpengmx"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"victorpengmx"},"content":"                String[] strSegments \u003d Parser.parse(userResponse);","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"victorpengmx"},"content":"                String command \u003d strSegments[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"victorpengmx"},"content":"                if (command.equals(\"bye\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"victorpengmx"},"content":"                    isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"victorpengmx"},"content":"                    break;","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"victorpengmx"},"content":"                } else if (command.equals(\"list\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"victorpengmx"},"content":"                    taskList.printTaskList();","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"victorpengmx"},"content":"                } else if (command.equals(\"todo\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"victorpengmx"},"content":"                    Todo todo \u003d new Todo(strSegments[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"victorpengmx"},"content":"                    taskList.addTask(todo);","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"victorpengmx"},"content":"                } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"victorpengmx"},"content":"                    Deadline deadline \u003d new Deadline(strSegments[1], strSegments[2]);","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"victorpengmx"},"content":"                    taskList.addTask(deadline);","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"victorpengmx"},"content":"                } else if (command.equals(\"event\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"victorpengmx"},"content":"                    Event event \u003d new Event(strSegments[1], strSegments[2], strSegments[3]);","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"victorpengmx"},"content":"                    taskList.addTask(event);","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"victorpengmx"},"content":"                } else if (command.equals(\"mark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"victorpengmx"},"content":"                    taskList.markDone((int) Double.parseDouble(strSegments[1]));","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"victorpengmx"},"content":"                } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"victorpengmx"},"content":"                    taskList.markNotDone((int) Double.parseDouble(strSegments[1]));","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"victorpengmx"},"content":"                } else if (command.equals(\"delete\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"victorpengmx"},"content":"                    taskList.delete((int) Double.parseDouble(strSegments[1]));","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"victorpengmx"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"victorpengmx"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"victorpengmx"},"content":"                System.out.println(e);","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"victorpengmx"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"victorpengmx"},"content":"            userResponse \u003d scanner.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"victorpengmx"},"content":"        System.out.println(\"Bye! Hope to see you again soon!\");","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"victorpengmx"},"content":"        scanner.close();","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"victorpengmx":52,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorpengmx"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"victorpengmx"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"victorpengmx"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"victorpengmx"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"victorpengmx":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorpengmx"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"victorpengmx"},"content":"    private String startDate;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"victorpengmx"},"content":"    private String endDate;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"victorpengmx"},"content":"     * The constructor for the Event class.","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"victorpengmx"},"content":"     * @param name Name of the event task.","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"victorpengmx"},"content":"     * @param startDate Start date of the event.","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":"     * @param endDate End date of the event.","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"victorpengmx"},"content":"    public Event(String name, String startDate, String endDate) {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"victorpengmx"},"content":"        super(name);","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"victorpengmx"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"victorpengmx"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"victorpengmx"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"victorpengmx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"victorpengmx"},"content":"        if (this.done) {","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"victorpengmx"},"content":"            return \"[E][X] \" + this.name + \" (from: \" + this.startDate + \" to: \" + this.endDate + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"victorpengmx"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"victorpengmx"},"content":"            return \"[E][ ] \" + this.name + \" (from: \" + this.startDate + \" to: \" + this.endDate + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"victorpengmx"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"victorpengmx":26}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorpengmx"},"content":"public class Parser {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"victorpengmx"},"content":"     * Checks if a string is numeric.","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"victorpengmx"},"content":"     * @param str The string to be checked.","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"victorpengmx"},"content":"     * @return True if the string is numeric and false otherwise.","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"victorpengmx"},"content":"    public static boolean isNumeric(String str) {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"victorpengmx"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":"            Double.parseDouble(str);","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"victorpengmx"},"content":"            return true;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"victorpengmx"},"content":"        } catch (NullPointerException | NumberFormatException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"victorpengmx"},"content":"            return false;","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"victorpengmx"},"content":"     * Checks for a valid \"bye\" command","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"victorpengmx"},"content":"     * @param input the string input by the user","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"victorpengmx"},"content":"     * @return A String array containing the keywords if the command is valid","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"victorpengmx"},"content":"     *         and null otherwise.","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"victorpengmx"},"content":"    public static String[] byeCommandChecker(String input) {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"victorpengmx"},"content":"        if (input.trim().equals(\"bye\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"victorpengmx"},"content":"            String[] results \u003d new String[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"victorpengmx"},"content":"            results[0] \u003d \"bye\";","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"victorpengmx"},"content":"            return results;","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"victorpengmx"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"victorpengmx"},"content":"            return null;","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"victorpengmx"},"content":"     * Checks for a valid \"list\" command","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"victorpengmx"},"content":"     * @param input the string input by the user","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"victorpengmx"},"content":"     * @return A String array containing the keywords if the command is valid","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"victorpengmx"},"content":"     *         and null otherwise.","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"victorpengmx"},"content":"    public static String[] listCommandChecker(String input) {","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"victorpengmx"},"content":"        if (input.trim().equals(\"list\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"victorpengmx"},"content":"            String[] results \u003d new String[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"victorpengmx"},"content":"            results[0] \u003d \"list\";","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"victorpengmx"},"content":"            return results;","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"victorpengmx"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"victorpengmx"},"content":"            return null;","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"victorpengmx"},"content":"     * Checks for a valid \"todo\" command","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"victorpengmx"},"content":"     * @param input the string input by the user","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"victorpengmx"},"content":"     * @return A String array containing the keywords if the command is valid","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"victorpengmx"},"content":"     *         and null if the command is not a \"todo\".","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"victorpengmx"},"content":"     * @throws DukeException if the command is \"todo\" but the keywords are not valid","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"victorpengmx"},"content":"    public static String[] todoCommandChecker(String input) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"victorpengmx"},"content":"        String[] strSegments \u003d input.trim().split(\" \");","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"victorpengmx"},"content":"        String command \u003d strSegments[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"victorpengmx"},"content":"        if (command.equals(\"todo\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"victorpengmx"},"content":"            String[] results \u003d new String[2];","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"victorpengmx"},"content":"            results[0] \u003d \"todo\";","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"victorpengmx"},"content":"            results[1] \u003d input.trim().substring(4).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"victorpengmx"},"content":"            if (results[1].equals(\"\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"victorpengmx"},"content":"                throw new DukeException(\"☹ OOPS!!! Incorrect description of a todo.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"victorpengmx"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"victorpengmx"},"content":"            return results;","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"victorpengmx"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"victorpengmx"},"content":"            return null;","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"victorpengmx"},"content":"     * Checks for a valid \"deadline\" command","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"victorpengmx"},"content":"     * @param input the string input by the user","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"victorpengmx"},"content":"     * @return A String array containing the keywords if the command is valid","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"victorpengmx"},"content":"     *         and null if the command is not a \"deadline\".","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"victorpengmx"},"content":"     * @throws DukeException if the command is \"deadline\" but the keywords are not valid","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"victorpengmx"},"content":"    public static String[] deadlineCommandChecker(String input) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"victorpengmx"},"content":"        String[] strSegments \u003d input.trim().split(\" \");","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"victorpengmx"},"content":"        String command \u003d strSegments[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"victorpengmx"},"content":"        if (command.equals(\"deadline\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"victorpengmx"},"content":"            String[] results \u003d new String[3];","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"victorpengmx"},"content":"            results[0] \u003d \"deadline\";","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"victorpengmx"},"content":"            String string \u003d input.trim().substring(8).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"victorpengmx"},"content":"            if (string.contains(\" /by \")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"victorpengmx"},"content":"                String[] segments \u003d string.split(\"/by\");","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"victorpengmx"},"content":"                String eventName \u003d segments[0].trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"victorpengmx"},"content":"                String date \u003d segments[1].trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"victorpengmx"},"content":"                results[1] \u003d eventName;","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"victorpengmx"},"content":"                results[2] \u003d date;","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"victorpengmx"},"content":"                return results;","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"victorpengmx"},"content":"            } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"victorpengmx"},"content":"                throw new DukeException(\"☹ OOPS!!! Incorrect description of a deadline.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"victorpengmx"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"victorpengmx"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"victorpengmx"},"content":"            return null;","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"victorpengmx"},"content":"     * Checks for a valid \"event\" command","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"victorpengmx"},"content":"     * @param input the string input by the user","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"victorpengmx"},"content":"     * @return A String array containing the keywords if the command is valid","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"victorpengmx"},"content":"     *         and null if the command is not an \"event\".","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"victorpengmx"},"content":"     * @throws DukeException if the command is \"event\" but the keywords are not valid","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"victorpengmx"},"content":"    public static String[] eventCommandChecker(String input) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"victorpengmx"},"content":"        String[] strSegments \u003d input.trim().split(\" \");","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"victorpengmx"},"content":"        String command \u003d strSegments[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"victorpengmx"},"content":"        if (command.equals(\"event\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"victorpengmx"},"content":"            String[] results \u003d new String[4];","lastModifiedDate":"2023-08-24"},{"lineNumber":121,"author":{"gitId":"victorpengmx"},"content":"            results[0] \u003d \"event\";","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"victorpengmx"},"content":"            String string \u003d input.substring(5).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":123,"author":{"gitId":"victorpengmx"},"content":"            if (string.contains(\" /from \")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":124,"author":{"gitId":"victorpengmx"},"content":"                String[] segments \u003d string.split(\"/from\");","lastModifiedDate":"2023-08-24"},{"lineNumber":125,"author":{"gitId":"victorpengmx"},"content":"                String eventName \u003d segments[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":126,"author":{"gitId":"victorpengmx"},"content":"                if (segments[1].contains(\" /to \")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":127,"author":{"gitId":"victorpengmx"},"content":"                    String[] segments2 \u003d segments[1].split(\" /to \");","lastModifiedDate":"2023-08-24"},{"lineNumber":128,"author":{"gitId":"victorpengmx"},"content":"                    String startDate \u003d segments2[0].trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":129,"author":{"gitId":"victorpengmx"},"content":"                    String endDate \u003d segments2[1].trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":130,"author":{"gitId":"victorpengmx"},"content":"                    results[1] \u003d eventName;","lastModifiedDate":"2023-08-24"},{"lineNumber":131,"author":{"gitId":"victorpengmx"},"content":"                    results[2] \u003d startDate;","lastModifiedDate":"2023-08-24"},{"lineNumber":132,"author":{"gitId":"victorpengmx"},"content":"                    if (startDate.equals(\"\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":133,"author":{"gitId":"victorpengmx"},"content":"                        throw new DukeException(\"☹ OOPS!!! Incorrect description of an event.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":134,"author":{"gitId":"victorpengmx"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":135,"author":{"gitId":"victorpengmx"},"content":"                    results[3] \u003d endDate;","lastModifiedDate":"2023-08-24"},{"lineNumber":136,"author":{"gitId":"victorpengmx"},"content":"                    return results;","lastModifiedDate":"2023-08-24"},{"lineNumber":137,"author":{"gitId":"victorpengmx"},"content":"                } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":138,"author":{"gitId":"victorpengmx"},"content":"                    throw new DukeException(\"☹ OOPS!!! Incorrect description of an event.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":139,"author":{"gitId":"victorpengmx"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":140,"author":{"gitId":"victorpengmx"},"content":"            } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":141,"author":{"gitId":"victorpengmx"},"content":"                throw new DukeException(\"☹ OOPS!!! Incorrect description of an event.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":142,"author":{"gitId":"victorpengmx"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":143,"author":{"gitId":"victorpengmx"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":144,"author":{"gitId":"victorpengmx"},"content":"            return null;","lastModifiedDate":"2023-08-24"},{"lineNumber":145,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":146,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":147,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":148,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":149,"author":{"gitId":"victorpengmx"},"content":"     * Checks for a valid \"mark\" command","lastModifiedDate":"2023-08-24"},{"lineNumber":150,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":151,"author":{"gitId":"victorpengmx"},"content":"     * @param input the string input by the user","lastModifiedDate":"2023-08-24"},{"lineNumber":152,"author":{"gitId":"victorpengmx"},"content":"     * @return A String array containing the keywords if the command is valid","lastModifiedDate":"2023-08-24"},{"lineNumber":153,"author":{"gitId":"victorpengmx"},"content":"     *         and null if the command is not a \"mark\".","lastModifiedDate":"2023-08-24"},{"lineNumber":154,"author":{"gitId":"victorpengmx"},"content":"     * @throws DukeException if the command is \"mark\" but the keywords are not valid","lastModifiedDate":"2023-08-24"},{"lineNumber":155,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":156,"author":{"gitId":"victorpengmx"},"content":"    public static String[] markCommandChecker(String input) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":157,"author":{"gitId":"victorpengmx"},"content":"        String[] strSegments \u003d input.trim().split(\" \");","lastModifiedDate":"2023-08-24"},{"lineNumber":158,"author":{"gitId":"victorpengmx"},"content":"        String command \u003d strSegments[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":159,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":160,"author":{"gitId":"victorpengmx"},"content":"        if (command.equals(\"mark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":161,"author":{"gitId":"victorpengmx"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":162,"author":{"gitId":"victorpengmx"},"content":"                if (!isNumeric(strSegments[1])) {","lastModifiedDate":"2023-08-24"},{"lineNumber":163,"author":{"gitId":"victorpengmx"},"content":"                    throw new DukeException(\"Invalid input for index\");","lastModifiedDate":"2023-08-24"},{"lineNumber":164,"author":{"gitId":"victorpengmx"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":165,"author":{"gitId":"victorpengmx"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":166,"author":{"gitId":"victorpengmx"},"content":"                throw new DukeException(\"Invalid input for index\");","lastModifiedDate":"2023-08-24"},{"lineNumber":167,"author":{"gitId":"victorpengmx"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":168,"author":{"gitId":"victorpengmx"},"content":"            String[] results \u003d new String[2];","lastModifiedDate":"2023-08-24"},{"lineNumber":169,"author":{"gitId":"victorpengmx"},"content":"            results[0] \u003d \"mark\";","lastModifiedDate":"2023-08-24"},{"lineNumber":170,"author":{"gitId":"victorpengmx"},"content":"            results[1] \u003d input.substring(4).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":171,"author":{"gitId":"victorpengmx"},"content":"            return results;","lastModifiedDate":"2023-08-24"},{"lineNumber":172,"author":{"gitId":"victorpengmx"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":173,"author":{"gitId":"victorpengmx"},"content":"            return null;","lastModifiedDate":"2023-08-24"},{"lineNumber":174,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":175,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":176,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":177,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":178,"author":{"gitId":"victorpengmx"},"content":"     * Checks for a valid \"unmark\" command","lastModifiedDate":"2023-08-24"},{"lineNumber":179,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":180,"author":{"gitId":"victorpengmx"},"content":"     * @param input the string input by the user","lastModifiedDate":"2023-08-24"},{"lineNumber":181,"author":{"gitId":"victorpengmx"},"content":"     * @return A String array containing the keywords if the command is valid","lastModifiedDate":"2023-08-24"},{"lineNumber":182,"author":{"gitId":"victorpengmx"},"content":"     *         and null if the command is not a \"unmark\".","lastModifiedDate":"2023-08-24"},{"lineNumber":183,"author":{"gitId":"victorpengmx"},"content":"     * @throws DukeException if the command is \"unmark\" but the keywords are not valid","lastModifiedDate":"2023-08-24"},{"lineNumber":184,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":185,"author":{"gitId":"victorpengmx"},"content":"    public static String[] unmarkCommandChecker(String input) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":186,"author":{"gitId":"victorpengmx"},"content":"        String[] strSegments \u003d input.trim().split(\" \");","lastModifiedDate":"2023-08-24"},{"lineNumber":187,"author":{"gitId":"victorpengmx"},"content":"        String command \u003d strSegments[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":188,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":189,"author":{"gitId":"victorpengmx"},"content":"        if (command.equals(\"unmark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":190,"author":{"gitId":"victorpengmx"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":191,"author":{"gitId":"victorpengmx"},"content":"                if (!isNumeric(strSegments[1])) {","lastModifiedDate":"2023-08-24"},{"lineNumber":192,"author":{"gitId":"victorpengmx"},"content":"                    throw new DukeException(\"Invalid input for index\");","lastModifiedDate":"2023-08-24"},{"lineNumber":193,"author":{"gitId":"victorpengmx"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":194,"author":{"gitId":"victorpengmx"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":195,"author":{"gitId":"victorpengmx"},"content":"                throw new DukeException(\"Invalid input for index\");","lastModifiedDate":"2023-08-24"},{"lineNumber":196,"author":{"gitId":"victorpengmx"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":197,"author":{"gitId":"victorpengmx"},"content":"            String[] results \u003d new String[2];","lastModifiedDate":"2023-08-24"},{"lineNumber":198,"author":{"gitId":"victorpengmx"},"content":"            results[0] \u003d \"unmark\";","lastModifiedDate":"2023-08-24"},{"lineNumber":199,"author":{"gitId":"victorpengmx"},"content":"            results[1] \u003d input.substring(6).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":200,"author":{"gitId":"victorpengmx"},"content":"            return results;","lastModifiedDate":"2023-08-24"},{"lineNumber":201,"author":{"gitId":"victorpengmx"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":202,"author":{"gitId":"victorpengmx"},"content":"            return null;","lastModifiedDate":"2023-08-24"},{"lineNumber":203,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":204,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":205,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":206,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":207,"author":{"gitId":"victorpengmx"},"content":"     * Checks for a valid \"unmark\" command","lastModifiedDate":"2023-08-24"},{"lineNumber":208,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":209,"author":{"gitId":"victorpengmx"},"content":"     * @param input the string input by the user","lastModifiedDate":"2023-08-24"},{"lineNumber":210,"author":{"gitId":"victorpengmx"},"content":"     * @return A String array containing the keywords if the command is valid","lastModifiedDate":"2023-08-24"},{"lineNumber":211,"author":{"gitId":"victorpengmx"},"content":"     *         and null if the command is not a \"unmark\".","lastModifiedDate":"2023-08-24"},{"lineNumber":212,"author":{"gitId":"victorpengmx"},"content":"     * @throws DukeException if the command is \"unmark\" but the keywords are not valid","lastModifiedDate":"2023-08-24"},{"lineNumber":213,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":214,"author":{"gitId":"victorpengmx"},"content":"    public static String[] deleteCommandChecker(String input) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":215,"author":{"gitId":"victorpengmx"},"content":"        String[] strSegments \u003d input.trim().split(\" \");","lastModifiedDate":"2023-08-24"},{"lineNumber":216,"author":{"gitId":"victorpengmx"},"content":"        String command \u003d strSegments[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":217,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":218,"author":{"gitId":"victorpengmx"},"content":"        if (command.equals(\"delete\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":219,"author":{"gitId":"victorpengmx"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":220,"author":{"gitId":"victorpengmx"},"content":"                if (!isNumeric(strSegments[1])) {","lastModifiedDate":"2023-08-24"},{"lineNumber":221,"author":{"gitId":"victorpengmx"},"content":"                    throw new DukeException(\"Invalid input for index\");","lastModifiedDate":"2023-08-24"},{"lineNumber":222,"author":{"gitId":"victorpengmx"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":223,"author":{"gitId":"victorpengmx"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":224,"author":{"gitId":"victorpengmx"},"content":"                throw new DukeException(\"Invalid input for index\");","lastModifiedDate":"2023-08-24"},{"lineNumber":225,"author":{"gitId":"victorpengmx"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":226,"author":{"gitId":"victorpengmx"},"content":"            String[] results \u003d new String[2];","lastModifiedDate":"2023-08-24"},{"lineNumber":227,"author":{"gitId":"victorpengmx"},"content":"            results[0] \u003d \"delete\";","lastModifiedDate":"2023-08-24"},{"lineNumber":228,"author":{"gitId":"victorpengmx"},"content":"            results[1] \u003d input.substring(6).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":229,"author":{"gitId":"victorpengmx"},"content":"            return results;","lastModifiedDate":"2023-08-24"},{"lineNumber":230,"author":{"gitId":"victorpengmx"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":231,"author":{"gitId":"victorpengmx"},"content":"            return null;","lastModifiedDate":"2023-08-24"},{"lineNumber":232,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":233,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":234,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":235,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":236,"author":{"gitId":"victorpengmx"},"content":"     * Checks for a valid command.","lastModifiedDate":"2023-08-24"},{"lineNumber":237,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":238,"author":{"gitId":"victorpengmx"},"content":"     * @param input the string input by the user","lastModifiedDate":"2023-08-24"},{"lineNumber":239,"author":{"gitId":"victorpengmx"},"content":"     * @return a String array containing the keywords corresponding to the correct command","lastModifiedDate":"2023-08-24"},{"lineNumber":240,"author":{"gitId":"victorpengmx"},"content":"     * @throws DukeException if the command is invalid.","lastModifiedDate":"2023-08-24"},{"lineNumber":241,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":242,"author":{"gitId":"victorpengmx"},"content":"    public static String[] parse(String input) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":243,"author":{"gitId":"victorpengmx"},"content":"        if (byeCommandChecker(input) !\u003d null) {","lastModifiedDate":"2023-08-24"},{"lineNumber":244,"author":{"gitId":"victorpengmx"},"content":"            return byeCommandChecker(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":245,"author":{"gitId":"victorpengmx"},"content":"        } else if (listCommandChecker(input) !\u003d null) {","lastModifiedDate":"2023-08-24"},{"lineNumber":246,"author":{"gitId":"victorpengmx"},"content":"            return listCommandChecker(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":247,"author":{"gitId":"victorpengmx"},"content":"        } else if (todoCommandChecker(input) !\u003d null) {","lastModifiedDate":"2023-08-24"},{"lineNumber":248,"author":{"gitId":"victorpengmx"},"content":"            return todoCommandChecker(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":249,"author":{"gitId":"victorpengmx"},"content":"        } else if (deadlineCommandChecker(input) !\u003d null) {","lastModifiedDate":"2023-08-24"},{"lineNumber":250,"author":{"gitId":"victorpengmx"},"content":"            return deadlineCommandChecker(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":251,"author":{"gitId":"victorpengmx"},"content":"        } else if (eventCommandChecker(input) !\u003d null) {","lastModifiedDate":"2023-08-24"},{"lineNumber":252,"author":{"gitId":"victorpengmx"},"content":"            return eventCommandChecker(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":253,"author":{"gitId":"victorpengmx"},"content":"        } else if (markCommandChecker(input) !\u003d null) {","lastModifiedDate":"2023-08-24"},{"lineNumber":254,"author":{"gitId":"victorpengmx"},"content":"            return markCommandChecker(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":255,"author":{"gitId":"victorpengmx"},"content":"        } else if (unmarkCommandChecker(input) !\u003d null) {","lastModifiedDate":"2023-08-24"},{"lineNumber":256,"author":{"gitId":"victorpengmx"},"content":"            return unmarkCommandChecker(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":257,"author":{"gitId":"victorpengmx"},"content":"        } else if (deleteCommandChecker(input) !\u003d null) {","lastModifiedDate":"2023-08-24"},{"lineNumber":258,"author":{"gitId":"victorpengmx"},"content":"            return deleteCommandChecker(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":259,"author":{"gitId":"victorpengmx"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":260,"author":{"gitId":"victorpengmx"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":261,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":262,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":263,"author":{"gitId":"victorpengmx"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"victorpengmx":263}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorpengmx"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"victorpengmx"},"content":"    protected boolean done;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"victorpengmx"},"content":"    protected String name;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"victorpengmx"},"content":"     * Constructor for the Task class.","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"victorpengmx"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"victorpengmx"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"victorpengmx"},"content":"     * Sets the task as done.","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"victorpengmx"},"content":"    public void setDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"victorpengmx"},"content":"        this.done \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"victorpengmx"},"content":"     * Sets the task as not done.","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"victorpengmx"},"content":"    public void setNotDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"victorpengmx"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"victorpengmx"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"victorpengmx"},"content":"     * @return the string representing the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"victorpengmx"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"victorpengmx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"victorpengmx"},"content":"        if (this.done) {","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"victorpengmx"},"content":"            return \"[X] \" + this.name;","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"victorpengmx"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"victorpengmx"},"content":"            return \"[ ] \" + this.name;","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"victorpengmx"},"content":"     * Returns the name of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"victorpengmx"},"content":"     * @return the name of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"victorpengmx"},"content":"    public String getName() {","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"victorpengmx"},"content":"        return this.name;","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"victorpengmx"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"victorpengmx":50}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorpengmx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"victorpengmx"},"content":"public class TaskList {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"victorpengmx"},"content":"     * A task list that stores the user\u0027s tasks.","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"victorpengmx"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"victorpengmx"},"content":"     * An index that tracks the current newest position in the task list.","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"victorpengmx"},"content":"    private int index;","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"victorpengmx"},"content":"     * Constructor for the TaskList class.","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"victorpengmx"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"victorpengmx"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"victorpengmx"},"content":"        this.index \u003d 0;","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"victorpengmx"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"victorpengmx"},"content":"     * Prints the name of the task added.","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"victorpengmx"},"content":"     * @param task The task to be added into the task list.","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"victorpengmx"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"victorpengmx"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"victorpengmx"},"content":"        this.index++;","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"victorpengmx"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"victorpengmx"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"victorpengmx"},"content":"        System.out.println(\"Now you have \" + this.index + \" tasks in the list.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"victorpengmx"},"content":"     * Prints the contents of the task list in the order they were added.","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"victorpengmx"},"content":"    public void printTaskList() {","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"victorpengmx"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"victorpengmx"},"content":"        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"victorpengmx"},"content":"            if (this.taskList.get(i) !\u003d null) {","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"victorpengmx"},"content":"                System.out.println((i+1) + \". \" + this.taskList.get(i).toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"victorpengmx"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"victorpengmx"},"content":"     * Marks the task with the specified index as done.","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"victorpengmx"},"content":"     * Prints a notification indicating that the specified task has been marked done.","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"victorpengmx"},"content":"     * @param index The index of the task to be marked as done","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"victorpengmx"},"content":"    public void markDone(int index) {","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"victorpengmx"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"victorpengmx"},"content":"            Task task \u003d this.taskList.get(index - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"victorpengmx"},"content":"            task.setDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"victorpengmx"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"victorpengmx"},"content":"            System.out.println(task);","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"victorpengmx"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"victorpengmx"},"content":"            System.out.println(\"☹ OOPS!!! There is no task with this index number.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"victorpengmx"},"content":"     * Marks the task with the specified index as not done.","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"victorpengmx"},"content":"     * Prints a notification indicating that the specified task has been marked not done.","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"victorpengmx"},"content":"     * @param index The index of the task to be marked as not done","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"victorpengmx"},"content":"    public void markNotDone(int index) {","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"victorpengmx"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"victorpengmx"},"content":"            Task task \u003d this.taskList.get(index - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"victorpengmx"},"content":"            task.setNotDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"victorpengmx"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"victorpengmx"},"content":"            System.out.println(task);","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"victorpengmx"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"victorpengmx"},"content":"            System.out.println(\"☹ OOPS!!! There is no task with this index number.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":80,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"victorpengmx"},"content":"     * Removes the task with the specified index from the task list.","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"victorpengmx"},"content":"     * Prints a notification indicating that the specified task has been marked not done.","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"victorpengmx"},"content":"     * @param number The index of the task to be removed.","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"victorpengmx"},"content":"    public void delete(int number) {","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"victorpengmx"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"victorpengmx"},"content":"            Task task \u003d this.taskList.get(number - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"victorpengmx"},"content":"            this.taskList.remove(number - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"victorpengmx"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"victorpengmx"},"content":"            System.out.println(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"victorpengmx"},"content":"            this.index--;","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"victorpengmx"},"content":"            System.out.println(\"Now you have \" + this.index + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"victorpengmx"},"content":"        } catch (IndexOutOfBoundsException | NullPointerException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"victorpengmx"},"content":"            System.out.println(\"☹ OOPS!!! There is no task with this index number.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"victorpengmx"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"victorpengmx":98}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorpengmx"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"victorpengmx"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"victorpengmx"},"content":"     * Constructor for the Todo class.","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"victorpengmx"},"content":"     * @param name The name of the todo task.","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"victorpengmx"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"victorpengmx"},"content":"    public Todo(String name) {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"victorpengmx"},"content":"        super(name);","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"victorpengmx"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"victorpengmx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"victorpengmx"},"content":"        if (this.done) {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"victorpengmx"},"content":"            return \"[T][X] \" + this.name;","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"victorpengmx"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"victorpengmx"},"content":"            return \"[T][ ] \" + this.name;","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"victorpengmx"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"victorpengmx"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"victorpengmx"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"victorpengmx":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"victorpengmx"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"victorpengmx"},"content":"unmark this","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"victorpengmx"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"victorpengmx"},"content":"todo nothing","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"victorpengmx"},"content":"deadline","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"victorpengmx"},"content":"deadline nothing","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"victorpengmx"},"content":"deadline nothing /to tmr morning","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"victorpengmx"},"content":"deadline /by tmr morning","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"victorpengmx"},"content":"deadline nothing /by tmr morning","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"victorpengmx"},"content":"event","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"victorpengmx"},"content":"event nothing","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"victorpengmx"},"content":"event nothing /from /to","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"victorpengmx"},"content":"event nothing /from tmr morning /to","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"victorpengmx"},"content":"event nothing /from tmr morning /to later","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"victorpengmx"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"victorpengmx"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"victorpengmx"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"victorpengmx"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"victorpengmx"},"content":"delete","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"victorpengmx"},"content":"delete everything","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"victorpengmx"},"content":"delete 10","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"victorpengmx"},"content":"delete 2","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"victorpengmx"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"victorpengmx"},"content":"list list","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"victorpengmx"},"content":"idunno","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"victorpengmx"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"victorpengmx":26}}]
