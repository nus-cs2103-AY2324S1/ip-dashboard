[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tjingsheng"},"content":"# Duke project","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tjingsheng"},"content":"## Hello from","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"tjingsheng"},"content":"      ██╗██╗███╗   ██╗ ██████╗     ███████╗██╗  ██╗███████╗███╗   ██╗ ██████╗ ","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"tjingsheng"},"content":"      ██║██║████╗  ██║██╔════╝     ██╔════╝██║  ██║██╔════╝████╗  ██║██╔════╝ ","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"tjingsheng"},"content":"      ██║██║██╔██╗ ██║██║  ███╗    ███████╗███████║█████╗  ██╔██╗ ██║██║  ███╗","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"tjingsheng"},"content":" ██   ██║██║██║╚██╗██║██║   ██║    ╚════██║██╔══██║██╔══╝  ██║╚██╗██║██║   ██║","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"tjingsheng"},"content":" ╚█████╔╝██║██║ ╚████║╚██████╔╝    ███████║██║  ██║███████╗██║ ╚████║╚██████╔╝","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"tjingsheng"},"content":"  ╚════╝ ╚═╝╚═╝  ╚═══╝ ╚═════╝     ╚══════╝╚═╝  ╚═╝╚══════╝╚═╝  ╚═══╝ ╚═════╝","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"tjingsheng"},"content":"## Project Description","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"tjingsheng"},"content":"This is my project, created from a template for a greenfield Java project.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"tjingsheng"},"content":"It\u0027s named after the Java mascot _Duke_.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"tjingsheng"},"content":"This project is a Java application that aims to provide a user-friendly task management system. It allows users to manage their tasks efficiently and keep track of their schedules.","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"tjingsheng"},"content":"## Features","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"tjingsheng"},"content":"- **Task Creation**: Users can add various types of tasks, including todo, deadline, and event tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"tjingsheng"},"content":"- **Task List**: View a list of all tasks, including their descriptions and completion status.","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"tjingsheng"},"content":"- **Task Completion**: Mark tasks as complete when they are done.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"tjingsheng"},"content":"- **Task Deletion**: Remove tasks that are no longer needed.","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"tjingsheng"},"content":"- **Task Searching**: Search for tasks based on keywords.","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"tjingsheng"},"content":"- **Data Storage**: Data is automatically saved and loaded for seamless usage.","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"tjingsheng"},"content":"## Installation Option 1","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"tjingsheng"},"content":"1. Go to tjingsheng ip [releases](https://github.com/tjingsheng/ip/releases)","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"tjingsheng"},"content":"2. **Get Java**: Ensure you have a functioning version of Java.","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"tjingsheng"},"content":"3. **Copy the JAR File**: Copy the JAR file you want to run into an empty folder.","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"tjingsheng"},"content":"4. **Open a Command Window**: Open a command prompt (Windows) or terminal (macOS/Linux) in the same folder where you copied the JAR file.","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"tjingsheng"},"content":"5. **Run the Command**: Use the following command to run the JAR file:","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"tjingsheng"},"content":"6. **Enjoy**: Duke is very fun.","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"tjingsheng"},"content":"   ```shell","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"tjingsheng"},"content":"   java -jar duke.jar","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"tjingsheng"},"content":"## Installation Option 2","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"tjingsheng"},"content":"1. Clone the tjingsheng ip [repository](https://github.com/tjingshengg/ip) to your local machine.","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"tjingsheng"},"content":"2. Open the project in your preferred Java development environment.","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"tjingsheng"},"content":"3. Build and run the application.","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"tjingsheng"},"content":"4. Enjoy","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"tjingsheng"},"content":"## Todo List","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"tjingsheng"},"content":"- [x] Task 1 : Get duke","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"tjingsheng"},"content":"- [ ] Task 2 : Experiment with it","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"tjingsheng"},"content":"- [ ] Task 3 : Profit ???","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"tjingsheng"},"content":"- [ ] Task 4 : ~~Cry~~","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"tjingsheng"},"content":"## Project Sample","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"tjingsheng"},"content":"```","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"tjingsheng"},"content":"     * Runs the Duke application, allowing the user to interact with it via the command line.","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"tjingsheng"},"content":"    public static void runDuke() {","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"tjingsheng"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"tjingsheng"},"content":"        Ui.helloWorld();","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"tjingsheng"},"content":"        boolean isConversing \u003d true;","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"tjingsheng"},"content":"        while (isConversing) {","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"tjingsheng"},"content":"            String rawCommand \u003d Ui.getUserInput(scanner);","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"tjingsheng"},"content":"            TaskList taskList \u003d TaskFileHandler.readFromFile();","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"tjingsheng"},"content":"            Ui.getBotMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"tjingsheng"},"content":"            Command command \u003d Parser.parse(rawCommand);","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"tjingsheng"},"content":"            command.execute(taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"tjingsheng"},"content":"            TaskFileHandler.saveToFile(taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"tjingsheng"},"content":"            isConversing \u003d !command.isByeCommand();","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"tjingsheng"},"content":"```","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"tjingsheng"},"content":"\u003e\u003e\u003e\u003e\u003e \"Duke hehe Duke hehe\" - Jing Sheng","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"tjingsheng":70,"-":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"tjingsheng"},"content":"plugins {","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"tjingsheng"},"content":"    id \u0027java\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"tjingsheng"},"content":"    id \u0027application\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"tjingsheng"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"tjingsheng"},"content":"repositories {","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"tjingsheng"},"content":"    mavenCentral()","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"tjingsheng"},"content":"dependencies {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"tjingsheng"},"content":"    implementation \u0027com.google.code.gson:gson:2.10.1\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"tjingsheng"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"tjingsheng"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"tjingsheng"},"content":"test {","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"tjingsheng"},"content":"    useJUnitPlatform()","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"tjingsheng"},"content":"    testLogging {","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"tjingsheng"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"tjingsheng"},"content":"        showExceptions true","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"tjingsheng"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"tjingsheng"},"content":"        showCauses true","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"tjingsheng"},"content":"        showStackTraces true","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"tjingsheng"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"tjingsheng"},"content":"application {","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"tjingsheng"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"tjingsheng"},"content":"shadowJar {","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"tjingsheng"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"tjingsheng"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"tjingsheng"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"tjingsheng"},"content":"run{","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"tjingsheng"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"tjingsheng":43}},{"path":"src/main/java/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjingsheng"},"content":"package command;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"tjingsheng"},"content":"import enums.CommandWord;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"tjingsheng"},"content":"import parser.Parser;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"tjingsheng"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"tjingsheng"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"tjingsheng"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"tjingsheng"},"content":" * The `ByeCommand` class represents a command to exit the application.","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"tjingsheng"},"content":" * When executed, it displays a bye message to the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"tjingsheng"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"tjingsheng"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"tjingsheng"},"content":"     * Constructs a new `ByeCommand` with the specified raw command string.","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"tjingsheng"},"content":"     * @param rawCommand The raw command string.","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"tjingsheng"},"content":"    public ByeCommand(String rawCommand) {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"tjingsheng"},"content":"        super(rawCommand);","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"tjingsheng"},"content":"     * Validates the \"bye\" command.","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"tjingsheng"},"content":"     * It checks if the command is correctly formatted.","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"tjingsheng"},"content":"     * @param rawCommand The raw command string.","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"tjingsheng"},"content":"     * @return `true` if the command is valid, `false` otherwise.","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"tjingsheng"},"content":"    public static boolean validate(String rawCommand) {","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"tjingsheng"},"content":"        String[] args \u003d Parser.getArgs(rawCommand);","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"tjingsheng"},"content":"        if (args.length !\u003d 1) {","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"tjingsheng"},"content":"            return false;","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"tjingsheng"},"content":"        return CommandWord.commandWordToValueMap(args[0]).equals(CommandWord.BYE);","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"tjingsheng"},"content":"  ","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"tjingsheng"},"content":"     * Executes the \"bye\" command. It shows the bye message to the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"tjingsheng"},"content":"     * @param taskList The task list (not used in this command).","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"tjingsheng"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"tjingsheng"},"content":"        if (!validate(super.getRawCommand())) {","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"tjingsheng"},"content":"            return;","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"tjingsheng"},"content":"        Ui.showByeUser();","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"tjingsheng":50}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjingsheng"},"content":"package command;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"tjingsheng"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"tjingsheng"},"content":"import enums.CommandWord;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"tjingsheng"},"content":"import parser.Parser;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"tjingsheng"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"tjingsheng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"tjingsheng"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"tjingsheng"},"content":" * The `Command` class is an abstract class representing a command in the application.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"tjingsheng"},"content":" * All specific command classes should inherit from this class and implement the `execute` method.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"tjingsheng"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"tjingsheng"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"tjingsheng"},"content":"     * The raw command entered by the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"tjingsheng"},"content":"    private final String rawCommand;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"tjingsheng"},"content":"     * The date-time formatter used for parsing dates and times.","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"tjingsheng"},"content":"     * This formatter is shared among command subclasses.","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"tjingsheng"},"content":"    protected final DateTimeFormatter DATE_FORMATTER \u003d Duke.DATETIME_FORMATTER;","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"tjingsheng"},"content":"     * Constructs a new `Command` with the specified raw command string.","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"tjingsheng"},"content":"     * @param rawCommand The raw command string.","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"tjingsheng"},"content":"    public Command(String rawCommand) {","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"tjingsheng"},"content":"        this.rawCommand \u003d rawCommand;","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"tjingsheng"},"content":"     * Executes the command. Subclasses must implement this method to define their behavior.","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"tjingsheng"},"content":"     * @param taskList The task list to perform the command on.","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"tjingsheng"},"content":"    public abstract void execute(TaskList taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"tjingsheng"},"content":"     * Gets the raw command entered by the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"tjingsheng"},"content":"     * @return The raw command string.","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"tjingsheng"},"content":"    public String getRawCommand() {","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"tjingsheng"},"content":"        return this.rawCommand;","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"tjingsheng"},"content":"     * Checks if the command is a \"bye\" command.","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"tjingsheng"},"content":"     * @return `true` if it\u0027s a \"bye\" command, `false` otherwise.","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"tjingsheng"},"content":"    public boolean isByeCommand() {","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"tjingsheng"},"content":"        return CommandWord.commandWordToValueMap(Parser.getArgs(rawCommand)[0]).equals(CommandWord.BYE);","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"tjingsheng":61}},{"path":"src/main/java/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjingsheng"},"content":"package command;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"tjingsheng"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"tjingsheng"},"content":"import enums.CommandWord;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"tjingsheng"},"content":"import parser.Parser;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"tjingsheng"},"content":"import tasks.DeadlineTask;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"tjingsheng"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"tjingsheng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"tjingsheng"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"tjingsheng"},"content":" * The `DeadlineCommand` class represents a command to create a new deadline task.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"tjingsheng"},"content":" * When executed, it parses the command and adds a new deadline task to the task list.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"tjingsheng"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"tjingsheng"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"tjingsheng"},"content":"     * Constructs a new `DeadlineCommand` with the specified raw command string.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"tjingsheng"},"content":"     * @param rawCommand The raw command string.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"tjingsheng"},"content":"    public DeadlineCommand(String rawCommand) {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"tjingsheng"},"content":"        super(rawCommand);","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"tjingsheng"},"content":"     * Validates the \"deadline\" command.","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"tjingsheng"},"content":"     * It checks if the command is correctly formatted.","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"tjingsheng"},"content":"     * @param rawCommand The raw command string.","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"tjingsheng"},"content":"     * @return `true` if the command is valid, `false` otherwise.","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"tjingsheng"},"content":"    public static boolean validate(String rawCommand) {","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"tjingsheng"},"content":"        String[] args \u003d Parser.getArgs(rawCommand);","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"tjingsheng"},"content":"        if (args.length !\u003d 4) {","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"tjingsheng"},"content":"            return false;","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"tjingsheng"},"content":"        if (!CommandWord.commandWordToValueMap(args[0]).equals(CommandWord.DEADLINE)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"tjingsheng"},"content":"            return false;","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"tjingsheng"},"content":"        if (!CommandWord.commandWordToValueMap(args[2]).equals(CommandWord.BY)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"tjingsheng"},"content":"            return false;","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"tjingsheng"},"content":"        return Duke.validateDateTime(args[3]);","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"tjingsheng"},"content":"  ","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"tjingsheng"},"content":"     * Executes the \"deadline\" command. It parses the command, validates it, and adds a new","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"tjingsheng"},"content":"     * deadline task to the task list if the command is valid.","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"tjingsheng"},"content":"     * @param taskList The task list to which the deadline task is added.","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"tjingsheng"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"tjingsheng"},"content":"        String rawCommand \u003d super.getRawCommand();","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"tjingsheng"},"content":"        if (!validate(rawCommand)) {","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"tjingsheng"},"content":"            return;","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"tjingsheng"},"content":"        String[] args \u003d Parser.getArgs(rawCommand);","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"tjingsheng"},"content":"        String description \u003d args[1];","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"tjingsheng"},"content":"        LocalDate endDate \u003d LocalDate.parse(args[3], super.DATE_FORMATTER);","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"tjingsheng"},"content":"        taskList.addTask(new DeadlineTask(description, endDate));","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"tjingsheng":67}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjingsheng"},"content":"package command;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"tjingsheng"},"content":"import enums.CommandWord;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"tjingsheng"},"content":"import parser.Parser;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"tjingsheng"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"tjingsheng"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"tjingsheng"},"content":" * The `DeleteCommand` class represents a command to delete a task.","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"tjingsheng"},"content":" * When executed, it parses the command, validates it, and deletes","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"tjingsheng"},"content":" * the specified task from the task list if the command is valid.","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"tjingsheng"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"tjingsheng"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"tjingsheng"},"content":"     * Constructs a new `DeleteCommand` with the specified raw command string.","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"tjingsheng"},"content":"     * @param rawCommand The raw command string.","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"tjingsheng"},"content":"    public DeleteCommand(String rawCommand) {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"tjingsheng"},"content":"        super(rawCommand);","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"tjingsheng"},"content":"     * Validates the \"delete\" command.","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"tjingsheng"},"content":"     * It checks if the command is correctly formatted and if the specified task index is valid.","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"tjingsheng"},"content":"     * @param rawCommand The raw command string.","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"tjingsheng"},"content":"     * @param taskList   The task list against which to validate the task index.","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"tjingsheng"},"content":"     * @return `true` if the command is valid, `false` otherwise.","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"tjingsheng"},"content":"    public static boolean validate(String rawCommand, TaskList taskList) {","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"tjingsheng"},"content":"        String[] args \u003d Parser.getArgs(rawCommand);","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"tjingsheng"},"content":"        if (args.length !\u003d 2) {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"tjingsheng"},"content":"            return false;","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"tjingsheng"},"content":"        if (!CommandWord.commandWordToValueMap(args[0]).equals(CommandWord.DELETE)) {","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"tjingsheng"},"content":"            return false;","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"tjingsheng"},"content":"        return taskList.validateTaskIndex(args[1]);","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"tjingsheng"},"content":"  ","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"tjingsheng"},"content":"     * Executes the \"delete\" command. It parses the command, validates it, and deletes","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"tjingsheng"},"content":"     * the specified task from the task list if the command is valid.","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"tjingsheng"},"content":"     * @param taskList The task list from which the task is deleted.","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"tjingsheng"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"tjingsheng"},"content":"        String rawCommand \u003d super.getRawCommand();","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"tjingsheng"},"content":"        if (!validate(rawCommand, taskList)) {","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"tjingsheng"},"content":"            return;","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"tjingsheng"},"content":"        String[] args \u003d Parser.getArgs(rawCommand);","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"tjingsheng"},"content":"        taskList.deleteTask(args[1]);","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"tjingsheng":59}},{"path":"src/main/java/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjingsheng"},"content":"package command;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"tjingsheng"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"tjingsheng"},"content":"import enums.CommandWord;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"tjingsheng"},"content":"import parser.Parser;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"tjingsheng"},"content":"import tasks.EventTask;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"tjingsheng"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"tjingsheng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"tjingsheng"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"tjingsheng"},"content":" * The `EventCommand` class represents a command to create a new event task.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"tjingsheng"},"content":" * When executed, it parses the command, validates it, and adds a new event task to the task list if the command is valid.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"tjingsheng"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"tjingsheng"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"tjingsheng"},"content":"     * Constructs a new `EventCommand` with the specified raw command string.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"tjingsheng"},"content":"     * @param rawCommand The raw command string.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"tjingsheng"},"content":"    public EventCommand(String rawCommand) {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"tjingsheng"},"content":"        super(rawCommand);","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"tjingsheng"},"content":"     * Validates the \"event\" command.","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"tjingsheng"},"content":"     * It checks if the command is correctly formatted.","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"tjingsheng"},"content":"     * @param rawCommand The raw command string.","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"tjingsheng"},"content":"     * @return `true` if the command is valid, `false` otherwise.","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"tjingsheng"},"content":"    public static boolean validate(String rawCommand) {","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"tjingsheng"},"content":"        String[] args \u003d Parser.getArgs(rawCommand);","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"tjingsheng"},"content":"        if (args.length !\u003d 6) {","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"tjingsheng"},"content":"            return false;","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"tjingsheng"},"content":"        if (!CommandWord.commandWordToValueMap(args[0]).equals(CommandWord.EVENT)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"tjingsheng"},"content":"            return false;","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"tjingsheng"},"content":"        if (!CommandWord.commandWordToValueMap(args[2]).equals(CommandWord.FROM)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"tjingsheng"},"content":"            return false;","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"tjingsheng"},"content":"        if (!Duke.validateDateTime(args[3])) {","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"tjingsheng"},"content":"            return false;","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"tjingsheng"},"content":"        if (!CommandWord.commandWordToValueMap(args[4]).equals(CommandWord.TO)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"tjingsheng"},"content":"            return false;","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"tjingsheng"},"content":"        return Duke.validateDateTime(args[5]);","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"tjingsheng"},"content":"  ","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"tjingsheng"},"content":"     * Executes the \"event\" command. It parses the command, validates it, and adds a new","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"tjingsheng"},"content":"     * event task to the task list if the command is valid.","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"tjingsheng"},"content":"     * @param taskList The task list to which the event task is added.","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"tjingsheng"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"tjingsheng"},"content":"        String rawCommand \u003d super.getRawCommand();","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"tjingsheng"},"content":"        if (!validate(rawCommand)) {","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"tjingsheng"},"content":"            return;","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"tjingsheng"},"content":"        String[] args \u003d Parser.getArgs(rawCommand);","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"tjingsheng"},"content":"        String description \u003d args[1];","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"tjingsheng"},"content":"        LocalDate startDate \u003d LocalDate.parse(args[3], super.DATE_FORMATTER);","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"tjingsheng"},"content":"        LocalDate endDate \u003d LocalDate.parse(args[5], super.DATE_FORMATTER);","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"tjingsheng"},"content":"        taskList.addTask(new EventTask(description, startDate, endDate));","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"tjingsheng":76}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjingsheng"},"content":"package command;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"tjingsheng"},"content":"import enums.CommandWord;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"tjingsheng"},"content":"import parser.Parser;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"tjingsheng"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"tjingsheng"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"tjingsheng"},"content":" * The `FindCommand` class represents a command to search for tasks based on a keyword in the Duke application.","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"tjingsheng"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"tjingsheng"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"tjingsheng"},"content":"    private final boolean valid;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"tjingsheng"},"content":"    private String keyword;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"tjingsheng"},"content":"     * Constructs a `FindCommand` with the given raw command.","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"tjingsheng"},"content":"     * @param rawCommand The raw command input by the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"tjingsheng"},"content":"    public FindCommand(String rawCommand) {","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"tjingsheng"},"content":"        super(rawCommand);","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"tjingsheng"},"content":"        this.valid \u003d validate(rawCommand);","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"tjingsheng"},"content":"     * Validates the `FindCommand` based on the raw command input.","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"tjingsheng"},"content":"     * @param rawCommand The raw command input by the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"tjingsheng"},"content":"     * @return `true` if the command is valid, `false` otherwise.","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"tjingsheng"},"content":"    public static boolean validate(String rawCommand) {","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"tjingsheng"},"content":"        String[] args \u003d Parser.getArgs(rawCommand);","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"tjingsheng"},"content":"        if (args.length !\u003d 2) {","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"tjingsheng"},"content":"            return false;","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"tjingsheng"},"content":"        return CommandWord.commandWordToValueMap(args[0]).equals(CommandWord.FIND);","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"tjingsheng"},"content":"    private void deconstruct(String rawCommand) {","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"tjingsheng"},"content":"        if (!this.valid) {","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"tjingsheng"},"content":"            return;","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"tjingsheng"},"content":"        this.keyword \u003d Parser.getArgs(rawCommand)[1];","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"tjingsheng"},"content":"     * Executes the `FindCommand` to search for tasks based on the specified keyword.","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"tjingsheng"},"content":"     * @param taskList The task list in which to search for tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"tjingsheng"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"tjingsheng"},"content":"        if (!this.valid) {","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"tjingsheng"},"content":"            return;","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"tjingsheng"},"content":"        this.deconstruct(super.getRawCommand());","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"tjingsheng"},"content":"        taskList.findTask(this.keyword);","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"tjingsheng":58}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjingsheng"},"content":"package command;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"tjingsheng"},"content":"import enums.CommandWord;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"tjingsheng"},"content":"import parser.Parser;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"tjingsheng"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"tjingsheng"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"tjingsheng"},"content":" * The `ListCommand` class represents a command to list all tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"tjingsheng"},"content":" * When executed, it validates the command and displays a list of all tasks in the task list.","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"tjingsheng"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"tjingsheng"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"tjingsheng"},"content":"     * Constructs a new `ListCommand` with the specified raw command string.","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"tjingsheng"},"content":"     * @param rawCommand The raw command string.","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"tjingsheng"},"content":"    public ListCommand(String rawCommand) {","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"tjingsheng"},"content":"        super(rawCommand);","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"tjingsheng"},"content":"     * Validates the \"list\" command.","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"tjingsheng"},"content":"     * It checks if the command is correctly formatted.","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"tjingsheng"},"content":"     * @param rawCommand The raw command string.","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"tjingsheng"},"content":"     * @return `true` if the command is valid, `false` otherwise.","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"tjingsheng"},"content":"    public static boolean validate(String rawCommand) {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"tjingsheng"},"content":"        String[] args \u003d Parser.getArgs(rawCommand);","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"tjingsheng"},"content":"        if (args.length !\u003d 1) {","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"tjingsheng"},"content":"            return false;","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"tjingsheng"},"content":"        return CommandWord.commandWordToValueMap(args[0]).equals(CommandWord.LIST);","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"tjingsheng"},"content":"  ","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"tjingsheng"},"content":"     * Executes the \"list\" command. It validates the command and displays","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"tjingsheng"},"content":"     * a list of all tasks in the task list.","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"tjingsheng"},"content":"     * @param taskList The task list from which tasks are listed.","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"tjingsheng"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"tjingsheng"},"content":"        if (!validate(super.getRawCommand())) {","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"tjingsheng"},"content":"            return;","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"tjingsheng"},"content":"        taskList.listAllTasks();","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"tjingsheng":50}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjingsheng"},"content":"package command;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"tjingsheng"},"content":"import enums.CommandWord;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"tjingsheng"},"content":"import parser.Parser;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"tjingsheng"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"tjingsheng"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"tjingsheng"},"content":" * The `MarkCommand` class represents a command to mark a task as done.","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"tjingsheng"},"content":" * When executed, it parses the command, validates it, and marks","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"tjingsheng"},"content":" * the specified task as done in the task list if the command is valid.","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"tjingsheng"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"tjingsheng"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"tjingsheng"},"content":"     * Constructs a new `MarkCommand` with the specified raw command string.","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"tjingsheng"},"content":"     * @param rawCommand The raw command string.","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"tjingsheng"},"content":"    public MarkCommand(String rawCommand) {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"tjingsheng"},"content":"        super(rawCommand);","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"tjingsheng"},"content":"     * Validates the \"mark\" command.","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"tjingsheng"},"content":"     * It checks if the command is correctly formatted and if the specified task index is valid.","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"tjingsheng"},"content":"     * @param rawCommand The raw command string.","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"tjingsheng"},"content":"     * @param taskList   The task list against which to validate the task index.","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"tjingsheng"},"content":"     * @return `true` if the command is valid, `false` otherwise.","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"tjingsheng"},"content":"    public static boolean validate(String rawCommand, TaskList taskList) {","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"tjingsheng"},"content":"        String[] args \u003d Parser.getArgs(rawCommand);","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"tjingsheng"},"content":"        if (args.length !\u003d 2) {","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"tjingsheng"},"content":"            return false;","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"tjingsheng"},"content":"        if (!CommandWord.commandWordToValueMap(args[0]).equals(CommandWord.MARK)) {","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"tjingsheng"},"content":"            return false;","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"tjingsheng"},"content":"        return taskList.validateTaskIndex(args[1]);","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"tjingsheng"},"content":"  ","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"tjingsheng"},"content":"     * Executes the \"mark\" command. It parses the command, validates it, and marks","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"tjingsheng"},"content":"     * the specified task as done in the task list if the command is valid.","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"tjingsheng"},"content":"     * @param taskList The task list in which the task is marked as done.","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"tjingsheng"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"tjingsheng"},"content":"        String rawCommand \u003d super.getRawCommand();","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"tjingsheng"},"content":"        if (!validate(rawCommand, taskList)) {","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"tjingsheng"},"content":"            return;","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"tjingsheng"},"content":"        String[] args \u003d Parser.getArgs(rawCommand);","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"tjingsheng"},"content":"        String taskIndex \u003d args[1];","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"tjingsheng"},"content":"        taskList.markTaskDone(taskIndex);","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"tjingsheng":59}},{"path":"src/main/java/command/NullCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjingsheng"},"content":"package command;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"tjingsheng"},"content":"import enums.CommandWord;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"tjingsheng"},"content":"import parser.Parser;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"tjingsheng"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"tjingsheng"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"tjingsheng"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"tjingsheng"},"content":" * The `NullCommand` class represents a command that is not recognized or is not valid.","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"tjingsheng"},"content":" * When executed, it shows a \"confused\" message to the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"tjingsheng"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"tjingsheng"},"content":"public class NullCommand extends Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"tjingsheng"},"content":"     * Constructs a new `NullCommand` with the specified raw command string.","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"tjingsheng"},"content":"     * @param rawCommand The raw command string.","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"tjingsheng"},"content":"    public NullCommand(String rawCommand) {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"tjingsheng"},"content":"        super(rawCommand);","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"tjingsheng"},"content":"  /**","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"tjingsheng"},"content":"     * Validates the \"null\" command.","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"tjingsheng"},"content":"     * It checks if the command is correctly formatted.","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"tjingsheng"},"content":"     * @param rawCommand The raw command string.","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"tjingsheng"},"content":"     * @return `true` if the command is valid, `false` otherwise.","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"tjingsheng"},"content":"    public static boolean validate(String rawCommand) {","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"tjingsheng"},"content":"        String[] args \u003d Parser.getArgs(rawCommand);","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"tjingsheng"},"content":"        return CommandWord.commandWordToValueMap(args[0]).equals(CommandWord.NULL_COMMAND);","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"tjingsheng"},"content":"  ","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"tjingsheng"},"content":"     * Executes the \"null\" command. It validates the command and displays","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"tjingsheng"},"content":"     * a \"confused\" message to the user if the command is not recognized or valid.","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"tjingsheng"},"content":"     * @param taskList The task list (not used in this command).","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"tjingsheng"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"tjingsheng"},"content":"        if (!validate(super.getRawCommand())) {","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"tjingsheng"},"content":"            return;","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"tjingsheng"},"content":"        Ui.showConfused();","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"tjingsheng":49}},{"path":"src/main/java/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjingsheng"},"content":"package command;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"tjingsheng"},"content":"import enums.CommandWord;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"tjingsheng"},"content":"import parser.Parser;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"tjingsheng"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"tjingsheng"},"content":"import tasks.TodoTask;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"tjingsheng"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"tjingsheng"},"content":" * The `TodoCommand` class represents a command to create a new todo task.","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"tjingsheng"},"content":" * When executed, it parses the command, validates it, and adds","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"tjingsheng"},"content":" * a new todo task to the task list if the command is valid.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"tjingsheng"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"tjingsheng"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"tjingsheng"},"content":"    private final boolean valid;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"tjingsheng"},"content":"    private String description;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"tjingsheng"},"content":"     * Constructs a new `TodoCommand` with the specified raw command string.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"tjingsheng"},"content":"     * @param rawCommand The raw command string.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"tjingsheng"},"content":"    public TodoCommand(String rawCommand) {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"tjingsheng"},"content":"        super(rawCommand);","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"tjingsheng"},"content":"        this.valid \u003d validate(rawCommand);","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"tjingsheng"},"content":"  ","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"tjingsheng"},"content":"     * Validates the \"todo\" command.","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"tjingsheng"},"content":"     * It checks if the command is correctly formatted.","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"tjingsheng"},"content":"     * @param rawCommand The raw command string.","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"tjingsheng"},"content":"     * @return `true` if the command is valid, `false` otherwise.","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"tjingsheng"},"content":"    public static boolean validate(String rawCommand) {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"tjingsheng"},"content":"        String[] args \u003d Parser.getArgs(rawCommand);","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"tjingsheng"},"content":"        if (args.length !\u003d 2) {","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"tjingsheng"},"content":"            return false;","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"tjingsheng"},"content":"        if (!CommandWord.commandWordToValueMap(args[0]).equals(CommandWord.TODO)) {","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"tjingsheng"},"content":"            return false;","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"tjingsheng"},"content":"        return true;","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"tjingsheng"},"content":"     * Deconstructs the command to extract the description.","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"tjingsheng"},"content":"     * @param rawCommand The raw command string.","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"tjingsheng"},"content":"    private void deconstruct(String rawCommand) {","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"tjingsheng"},"content":"        if (!this.valid) {","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"tjingsheng"},"content":"            return;","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"tjingsheng"},"content":"        this.description \u003d Parser.getArgs(rawCommand)[1];","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"tjingsheng"},"content":"     * Executes the \"todo\" command. It parses the command, validates it, and adds a new","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"tjingsheng"},"content":"     * todo task to the task list if the command is valid.","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"tjingsheng"},"content":"     * @param taskList The task list to which the todo task is added.","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"tjingsheng"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"tjingsheng"},"content":"        if (!this.valid) {","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"tjingsheng"},"content":"            return;","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"tjingsheng"},"content":"        this.deconstruct(super.getRawCommand());","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"tjingsheng"},"content":"        taskList.addTask(new TodoTask(this.description));","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"tjingsheng":72}},{"path":"src/main/java/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjingsheng"},"content":"package command;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"tjingsheng"},"content":"import enums.CommandWord;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"tjingsheng"},"content":"import parser.Parser;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"tjingsheng"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"tjingsheng"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"tjingsheng"},"content":" * The `UnmarkCommand` class represents a command to unmark a task as done.","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"tjingsheng"},"content":" * When executed, it parses the command, validates it, and marks the specified task as undone in the task list if the command is valid.","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"tjingsheng"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"tjingsheng"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"tjingsheng"},"content":"     * Constructs a new `UnmarkCommand` with the specified raw command string.","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"tjingsheng"},"content":"     * @param rawCommand The raw command string.","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"tjingsheng"},"content":"    public UnmarkCommand(String rawCommand) {","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"tjingsheng"},"content":"        super(rawCommand);","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"tjingsheng"},"content":"     * Validates the \"unmark\" command.","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"tjingsheng"},"content":"     * It checks if the command is correctly formatted and if the specified task index is valid.","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"tjingsheng"},"content":"     * @param rawCommand The raw command string.","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"tjingsheng"},"content":"     * @param taskList   The task list against which to validate the task index.","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"tjingsheng"},"content":"     * @return `true` if the command is valid, `false` otherwise.","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"tjingsheng"},"content":"    public static boolean validate(String rawCommand, TaskList taskList) {","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"tjingsheng"},"content":"        String[] args \u003d Parser.getArgs(rawCommand);","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"tjingsheng"},"content":"        if (args.length !\u003d 2) {","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"tjingsheng"},"content":"            return false;","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"tjingsheng"},"content":"        if (!CommandWord.commandWordToValueMap(args[0]).equals(CommandWord.UNMARK)) {","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"tjingsheng"},"content":"            return false;","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"tjingsheng"},"content":"        return taskList.validateTaskIndex(args[1]);","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"tjingsheng"},"content":"     * Executes the \"unmark\" command. It parses the command, validates it, and marks the specified task as undone in the task list if the command is valid.","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"tjingsheng"},"content":"     * @param taskList The task list in which the task is marked as undone.","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"tjingsheng"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"tjingsheng"},"content":"        String rawCommand \u003d super.getRawCommand();","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"tjingsheng"},"content":"        if (!validate(rawCommand, taskList)) {","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"tjingsheng"},"content":"            return;","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"tjingsheng"},"content":"        String[] args \u003d Parser.getArgs(rawCommand);","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"tjingsheng"},"content":"        String taskIndex \u003d args[1];","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"tjingsheng"},"content":"        taskList.markTaskUndone(taskIndex);","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"tjingsheng":57}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjingsheng"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"tjingsheng"},"content":"import command.Command;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"tjingsheng"},"content":"import parser.Parser;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"tjingsheng"},"content":"import storage.TaskFileHandler;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"tjingsheng"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"tjingsheng"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"tjingsheng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"tjingsheng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"tjingsheng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"tjingsheng"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"tjingsheng"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"tjingsheng"},"content":" * The `Duke` class is the main class for the Duke application.","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"tjingsheng"},"content":" * It handles user interactions and the core functionality of the application.","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"tjingsheng"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"tjingsheng"},"content":"public class Duke {","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"tjingsheng"},"content":"     * The date-time formatter used for parsing and formatting dates.","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"tjingsheng"},"content":"    public final static DateTimeFormatter DATETIME_FORMATTER \u003d DateTimeFormatter.ISO_LOCAL_DATE;","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"tjingsheng"},"content":"     * The main entry point for the Duke application.","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"tjingsheng"},"content":"     * @param args Command-line arguments (not used in this application).","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"tjingsheng"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"tjingsheng"},"content":"        runDuke();","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"tjingsheng"},"content":"     * Runs the Duke application, allowing the user to interact with it via the command line.","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"tjingsheng"},"content":"    public static void runDuke() {","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"tjingsheng"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"tjingsheng"},"content":"        Ui.helloWorld();","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"tjingsheng"},"content":"        boolean isConversing \u003d true;","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"tjingsheng"},"content":"        while (isConversing) {","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"tjingsheng"},"content":"            String rawCommand \u003d Ui.getUserInput(scanner);","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"tjingsheng"},"content":"            TaskList taskList \u003d TaskFileHandler.readFromFile();","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"tjingsheng"},"content":"            Ui.getBotMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"tjingsheng"},"content":"            Command command \u003d Parser.parse(rawCommand);","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"tjingsheng"},"content":"            command.execute(taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"tjingsheng"},"content":"            TaskFileHandler.saveToFile(taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"tjingsheng"},"content":"            isConversing \u003d !command.isByeCommand();","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"tjingsheng"},"content":"     * Validates a date-time string using the duke date-time formatter.","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"tjingsheng"},"content":"     * @param string The date-time string to validate.","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"tjingsheng"},"content":"     * @return `true` if the string is a valid date-time, `false` otherwise.","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"tjingsheng"},"content":"    public static boolean validateDateTime(String string) {","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"tjingsheng"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"tjingsheng"},"content":"            LocalDate.parse(string, DATETIME_FORMATTER);","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"tjingsheng"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"tjingsheng"},"content":"            return false;","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"tjingsheng"},"content":"        return true;","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"tjingsheng":66}},{"path":"src/main/java/enums/CommandWord.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjingsheng"},"content":"package enums;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tjingsheng"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"tjingsheng"},"content":" * The `CommandWord` enum represents the possible command words used in the Duke application.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"tjingsheng"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"tjingsheng"},"content":"public enum CommandWord {","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"tjingsheng"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"tjingsheng"},"content":"    FIND(\"find\"),","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"tjingsheng"},"content":"    LIST(\"list\"),","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"tjingsheng"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"tjingsheng"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"tjingsheng"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"tjingsheng"},"content":"    EXIT(\"exit\"),","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"tjingsheng"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"tjingsheng"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"tjingsheng"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"tjingsheng"},"content":"    NULL_COMMAND(\"\"),","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"tjingsheng"},"content":"    BY(\"/by\"),","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"tjingsheng"},"content":"    FROM(\"/from\"),","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"tjingsheng"},"content":"    TO(\"/to\");","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"tjingsheng"},"content":"    private final String value;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"tjingsheng"},"content":"     * Constructs a `CommandWord` enum with the given value.","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"tjingsheng"},"content":"     * @param value The string representation of the command word.","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"tjingsheng"},"content":"    CommandWord(String value) {","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"tjingsheng"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"tjingsheng"},"content":"     * Maps a string value to the corresponding `CommandWord` enum.","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"tjingsheng"},"content":"     * If no match is found, it returns the `NULL_COMMAND` enum.","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"tjingsheng"},"content":"     * @param value The string value to map to a command word.","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"tjingsheng"},"content":"     * @return The corresponding `CommandWord` enum, or `NULL_COMMAND` if no match is found.","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"tjingsheng"},"content":"    public static CommandWord commandWordToValueMap(String value) {","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"tjingsheng"},"content":"        for (CommandWord e : values()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"tjingsheng"},"content":"            if (e.getValue().equals(value)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"tjingsheng"},"content":"                return e;","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"tjingsheng"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"tjingsheng"},"content":"        return NULL_COMMAND;","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"tjingsheng"},"content":"     * Gets the string representation of the command word.","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"tjingsheng"},"content":"     * @return The string representation of the command word.","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"tjingsheng"},"content":"    public String getValue() {","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"tjingsheng"},"content":"        return value;","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"tjingsheng":57}},{"path":"src/main/java/enums/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjingsheng"},"content":"package enums;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"tjingsheng"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"tjingsheng"},"content":" * The `TaskType` enum represents the different types of tasks in the Duke application.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"tjingsheng"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"tjingsheng"},"content":"public enum TaskType {","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"tjingsheng"},"content":"    TODO(\"[T]\"),","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"tjingsheng"},"content":"    DEADLINE(\"[D]\"),","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"tjingsheng"},"content":"    EVENT(\"[E]\");","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"tjingsheng"},"content":"    private final String symbol;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"tjingsheng"},"content":"     * Constructs a `TaskType` enum with the given symbol.","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"tjingsheng"},"content":"     * @param symbol The symbol associated with the task type.","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"tjingsheng"},"content":"    TaskType(String symbol) {","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"tjingsheng"},"content":"        this.symbol \u003d symbol;","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"tjingsheng"},"content":"     * Returns the symbol associated with the task type.","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"tjingsheng"},"content":"     * @return The symbol associated with the task type.","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"tjingsheng"},"content":"    public String toSymbol() {","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"tjingsheng"},"content":"        return symbol;","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"tjingsheng":30}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjingsheng"},"content":"package exceptions;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"tjingsheng"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"tjingsheng"},"content":" * The `DukeException` class represents a custom exception specific to the Duke application.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"tjingsheng"},"content":" * It is used to indicate exceptional situations or errors within the application.","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"tjingsheng"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"tjingsheng"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"tjingsheng"},"content":"     * Constructs a new DukeException with the specified error message.","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"tjingsheng"},"content":"     * @param message The error message describing the exception.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"tjingsheng"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"tjingsheng"},"content":"        super(message);","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"tjingsheng":16}},{"path":"src/main/java/exceptions/DukeInvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjingsheng"},"content":"package exceptions;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"tjingsheng"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"tjingsheng"},"content":" * The `DukeInvalidCommandException` class represents a custom exception specific to the Duke application.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"tjingsheng"},"content":" * It is used to indicate that an invalid command has been encountered.","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"tjingsheng"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"tjingsheng"},"content":"public class DukeInvalidCommandException extends DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"tjingsheng"},"content":"     * Constructs a new DukeInvalidCommandException with the specified error message.","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"tjingsheng"},"content":"     * @param message The error message describing the invalid command.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"tjingsheng"},"content":"    public DukeInvalidCommandException(String message) {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"tjingsheng"},"content":"        super(message);","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"tjingsheng":16}},{"path":"src/main/java/exceptions/DukeStorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjingsheng"},"content":"package exceptions;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"tjingsheng"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"tjingsheng"},"content":" * The `DukeStorageException` class represents a custom exception specific to the Duke application.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"tjingsheng"},"content":" * It is used to indicate exceptions related to storage operations,","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"tjingsheng"},"content":" * such as reading from or writing to storage.","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"tjingsheng"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"tjingsheng"},"content":"public class DukeStorageException extends DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"tjingsheng"},"content":"     * Constructs a new DukeStorageException with the specified error message.","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"tjingsheng"},"content":"     * @param message The error message describing the storage-related exception.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"tjingsheng"},"content":"    public DukeStorageException(String message) {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"tjingsheng"},"content":"        super(message);","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"tjingsheng":17}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjingsheng"},"content":"package parser;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"tjingsheng"},"content":"import command.*;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"tjingsheng"},"content":"import enums.CommandWord;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"tjingsheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"tjingsheng"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"tjingsheng"},"content":" * The `Parser` class is responsible for parsing user commands and creating corresponding `Command` objects.","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"tjingsheng"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"tjingsheng"},"content":"public class Parser {","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"tjingsheng"},"content":"     * Parses a raw user command and returns the corresponding `Command` object.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"tjingsheng"},"content":"     * @param rawCommand The raw user command.","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"tjingsheng"},"content":"     * @return A `Command` object representing the parsed command.","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"tjingsheng"},"content":"    public static Command parse(String rawCommand) {","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"tjingsheng"},"content":"        switch (CommandWord.commandWordToValueMap(getArgs(rawCommand)[0])) {","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"tjingsheng"},"content":"            case BYE:","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"tjingsheng"},"content":"                return new ByeCommand(rawCommand);","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"tjingsheng"},"content":"            case FIND:","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"tjingsheng"},"content":"                return new FindCommand(rawCommand);","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"tjingsheng"},"content":"            case LIST:","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"tjingsheng"},"content":"                return new ListCommand(rawCommand);","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"tjingsheng"},"content":"            case MARK:","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"tjingsheng"},"content":"                return new MarkCommand(rawCommand);","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"tjingsheng"},"content":"            case UNMARK:","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"tjingsheng"},"content":"                return new UnmarkCommand(rawCommand);","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"tjingsheng"},"content":"            case DELETE:","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"tjingsheng"},"content":"                return new DeleteCommand(rawCommand);","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"tjingsheng"},"content":"            case TODO:","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"tjingsheng"},"content":"                return new TodoCommand(rawCommand);","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"tjingsheng"},"content":"            case DEADLINE:","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"tjingsheng"},"content":"                return new DeadlineCommand(rawCommand);","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"tjingsheng"},"content":"            case EVENT:","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"tjingsheng"},"content":"                return new EventCommand(rawCommand);","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"tjingsheng"},"content":"            default:","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"tjingsheng"},"content":"                return new NullCommand(rawCommand);","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"tjingsheng"},"content":"     * Splits a raw user command into individual arguments.","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"tjingsheng"},"content":"     * @param rawCommand The raw user command.","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"tjingsheng"},"content":"     * @return An array of individual arguments.","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"tjingsheng"},"content":"    public static String[] getArgs(String rawCommand) {","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"tjingsheng"},"content":"        ArrayList\u003cString\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"tjingsheng"},"content":"        String[] words \u003d rawCommand.split(\"\\\\s+\");","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"tjingsheng"},"content":"        String mainCommand \u003d words[0];","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"tjingsheng"},"content":"        StringBuilder subCommand \u003d new StringBuilder();","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"tjingsheng"},"content":"        result.add(mainCommand);","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"tjingsheng"},"content":"        for (int i \u003d 1; i \u003c words.length; i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"tjingsheng"},"content":"            String currentWord \u003d words[i];","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"tjingsheng"},"content":"            if (currentWord.startsWith(\"/\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"tjingsheng"},"content":"                result.add(subCommand.toString().trim());","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"tjingsheng"},"content":"                result.add(currentWord);","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"tjingsheng"},"content":"                subCommand \u003d new StringBuilder();","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"tjingsheng"},"content":"            } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"tjingsheng"},"content":"                subCommand.append(\" \").append(currentWord);","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"tjingsheng"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"tjingsheng"},"content":"        if (!subCommand.toString().trim().isEmpty()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"tjingsheng"},"content":"            result.add(subCommand.toString().trim());","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"tjingsheng"},"content":"        return result.toArray(new String[0]);","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"tjingsheng":73}},{"path":"src/main/java/storage/LocalDateAdapter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjingsheng"},"content":"package storage;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"tjingsheng"},"content":"import com.google.gson.*;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"tjingsheng"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"tjingsheng"},"content":"import java.lang.reflect.Type;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"tjingsheng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"tjingsheng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"tjingsheng"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"tjingsheng"},"content":" * The `LocalDateAdapter` class is a Gson adapter for serializing and deserializing `LocalDate` objects.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"tjingsheng"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"tjingsheng"},"content":"public class LocalDateAdapter implements JsonSerializer\u003cLocalDate\u003e, JsonDeserializer\u003cLocalDate\u003e {","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"tjingsheng"},"content":"     * The date-time formatter used for formatting and parsing dates.","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"tjingsheng"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d Duke.DATETIME_FORMATTER;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"tjingsheng"},"content":"     * Deserialize a `LocalDate` object from a JSON element.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"tjingsheng"},"content":"     * @param json       The JSON element containing the date as a string.","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"tjingsheng"},"content":"     * @param typeOfT    The type of the object to deserialize.","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"tjingsheng"},"content":"     * @param context    The deserialization context.","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"tjingsheng"},"content":"     * @return A `LocalDate` object deserialized from the JSON element.","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"tjingsheng"},"content":"     * @throws JsonParseException If there is an issue with JSON parsing.","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"tjingsheng"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"tjingsheng"},"content":"    public LocalDate deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"tjingsheng"},"content":"        String dateStr \u003d json.getAsString();","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"tjingsheng"},"content":"        return LocalDate.parse(dateStr, DATE_FORMATTER);","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"tjingsheng"},"content":"     * Serialize a `LocalDate` object to a JSON element.","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"tjingsheng"},"content":"     * @param src        The `LocalDate` object to serialize.","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"tjingsheng"},"content":"     * @param typeOfSrc  The type of the source object.","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"tjingsheng"},"content":"     * @param context    The serialization context.","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"tjingsheng"},"content":"     * @return A JSON element representing the serialized `LocalDate` object.","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"tjingsheng"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"tjingsheng"},"content":"    public JsonElement serialize(LocalDate src, Type typeOfSrc, JsonSerializationContext context) {","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"tjingsheng"},"content":"        return new JsonPrimitive(DATE_FORMATTER.format(src));","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"tjingsheng":46}},{"path":"src/main/java/storage/TaskAdapter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjingsheng"},"content":"package storage;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"tjingsheng"},"content":"import com.google.gson.*;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"tjingsheng"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"tjingsheng"},"content":"import java.lang.reflect.Type;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"tjingsheng"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"tjingsheng"},"content":" * The `TaskAdapter` class is a Gson adapter for serializing and deserializing `Task` objects.","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"tjingsheng"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"tjingsheng"},"content":"public class TaskAdapter implements JsonDeserializer\u003cTask\u003e, JsonSerializer\u003cTask\u003e {","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"tjingsheng"},"content":"     * Serialize a `Task` object to a JSON element.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"tjingsheng"},"content":"     * @param src       The `Task` object to serialize.","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"tjingsheng"},"content":"     * @param typeOfSrc The type of the source object.","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"tjingsheng"},"content":"     * @param context   The serialization context.","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"tjingsheng"},"content":"     * @return A JSON element representing the serialized `Task` object.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"tjingsheng"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"tjingsheng"},"content":"    public JsonElement serialize(Task src, Type typeOfSrc, JsonSerializationContext context) {","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"tjingsheng"},"content":"        JsonObject jsonObject \u003d new JsonObject();","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"tjingsheng"},"content":"        jsonObject.addProperty(\"type\", src.getClass().getName());","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"tjingsheng"},"content":"        jsonObject.add(\"data\", context.serialize(src));","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"tjingsheng"},"content":"        return jsonObject;","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"tjingsheng"},"content":"     * Deserialize a `Task` object from a JSON element.","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"tjingsheng"},"content":"     * @param json     The JSON element containing the serialized `Task` object.","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"tjingsheng"},"content":"     * @param typeOfT  The type of the object to deserialize.","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"tjingsheng"},"content":"     * @param context  The deserialization context.","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"tjingsheng"},"content":"     * @return A `Task` object deserialized from the JSON element.","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"tjingsheng"},"content":"     * @throws JsonParseException If there is an issue with JSON parsing.","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"tjingsheng"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"tjingsheng"},"content":"    public Task deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"tjingsheng"},"content":"        JsonObject jsonObject \u003d json.getAsJsonObject();","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"tjingsheng"},"content":"        String type \u003d jsonObject.get(\"type\").getAsString();","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"tjingsheng"},"content":"        JsonElement data \u003d jsonObject.get(\"data\");","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"tjingsheng"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"tjingsheng"},"content":"            Class\u003c?\u003e clazz \u003d Class.forName(type);","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"tjingsheng"},"content":"            return context.deserialize(data, clazz);","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"tjingsheng"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"tjingsheng"},"content":"            throw new JsonParseException(e);","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"tjingsheng":49}},{"path":"src/main/java/storage/TaskFileHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjingsheng"},"content":"package storage;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"tjingsheng"},"content":"import com.google.gson.Gson;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"tjingsheng"},"content":"import com.google.gson.GsonBuilder;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"tjingsheng"},"content":"import exceptions.DukeStorageException;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"tjingsheng"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"tjingsheng"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"tjingsheng"},"content":"import java.io.File;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"tjingsheng"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"tjingsheng"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"tjingsheng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"tjingsheng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"tjingsheng"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"tjingsheng"},"content":" * The `TaskFileHandler` class is responsible for reading and writing tasks to a JSON file.","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"tjingsheng"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"tjingsheng"},"content":"public class TaskFileHandler {","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"tjingsheng"},"content":"     * The file path where tasks are stored as JSON data.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"tjingsheng"},"content":"    private static final String FILE_PATH \u003d \"data/tasks.json\";","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"tjingsheng"},"content":"     * Reads tasks from the JSON file and returns a `TaskList` object.","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"tjingsheng"},"content":"     * @return A `TaskList` containing the tasks read from the file.","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"tjingsheng"},"content":"     * @throws DukeStorageException If there is an issue with reading or parsing the file.","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"tjingsheng"},"content":"    public static TaskList readFromFile() {","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"tjingsheng"},"content":"        createFileIfNotExists();","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"tjingsheng"},"content":"        Gson gson \u003d new GsonBuilder()","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"tjingsheng"},"content":"                .registerTypeAdapter(Task.class, new TaskAdapter())","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"tjingsheng"},"content":"                .registerTypeAdapter(LocalDate.class, new LocalDateAdapter())","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"tjingsheng"},"content":"                .setPrettyPrinting()","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"tjingsheng"},"content":"                .create();","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"tjingsheng"},"content":"        Task[] tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"tjingsheng"},"content":"        try (FileReader r \u003d new FileReader(FILE_PATH)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"tjingsheng"},"content":"            tasks \u003d gson.fromJson(r, Task[].class);","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"tjingsheng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"tjingsheng"},"content":"            throw new DukeStorageException(\"Error reading from file: \" + e.getMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"tjingsheng"},"content":"        return new TaskList(tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"tjingsheng"},"content":"     * Saves tasks to the JSON file.","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"tjingsheng"},"content":"     * @param taskList The `TaskList` containing tasks to be saved.","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"tjingsheng"},"content":"     * @throws DukeStorageException If there is an issue with writing to the file.","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"tjingsheng"},"content":"    public static void saveToFile(TaskList taskList) {","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"tjingsheng"},"content":"        Task[] tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"tjingsheng"},"content":"        Gson gson \u003d new GsonBuilder()","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"tjingsheng"},"content":"                .registerTypeAdapter(Task.class, new TaskAdapter())","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"tjingsheng"},"content":"                .registerTypeAdapter(LocalDate.class, new LocalDateAdapter())","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"tjingsheng"},"content":"                .setPrettyPrinting()","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"tjingsheng"},"content":"                .create();","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"tjingsheng"},"content":"        try (FileWriter w \u003d new FileWriter(FILE_PATH)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"tjingsheng"},"content":"            gson.toJson(tasks, w);","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"tjingsheng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"tjingsheng"},"content":"            throw new DukeStorageException(\"Error writing to file: \" + e.getMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"tjingsheng"},"content":"     * Creates the JSON file if it does not exist.","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"tjingsheng"},"content":"     * @throws DukeStorageException If there is an issue with file creation.","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"tjingsheng"},"content":"    private static void createFileIfNotExists() {","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"tjingsheng"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"tjingsheng"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"tjingsheng"},"content":"            try {","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"tjingsheng"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"tjingsheng"},"content":"                file.createNewFile();","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"tjingsheng"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"tjingsheng"},"content":"                throw new DukeStorageException(\"Error creating file: \" + e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"tjingsheng"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"tjingsheng":83}},{"path":"src/main/java/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjingsheng"},"content":"package tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"tjingsheng"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"tjingsheng"},"content":"import enums.TaskType;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"tjingsheng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"tjingsheng"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"tjingsheng"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"tjingsheng"},"content":" * The `DeadlineTask` class represents a task with a specific deadline in the Duke application.","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"tjingsheng"},"content":" * It extends the `Task` class and includes the deadline information.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"tjingsheng"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"tjingsheng"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"tjingsheng"},"content":"     * The deadline date of the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"tjingsheng"},"content":"    private final LocalDate endDate;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"tjingsheng"},"content":"     * Constructs a `DeadlineTask` with the given description and deadline date.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"tjingsheng"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"tjingsheng"},"content":"     * @param endDate     The deadline date of the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"tjingsheng"},"content":"    public DeadlineTask(String description, LocalDate endDate) {","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"tjingsheng"},"content":"        super(description);","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"tjingsheng"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"tjingsheng"},"content":"     * Gets the deadline date formatted as a string.","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"tjingsheng"},"content":"     * @return A string representation of the deadline date.","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"tjingsheng"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"tjingsheng"},"content":"        return String.format(\" (by: %s)\", endDate.format(Duke.DATETIME_FORMATTER));","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"tjingsheng"},"content":"     * Generates a string representation of the `DeadlineTask`.","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"tjingsheng"},"content":"     * @return A string representation of the task, including its","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"tjingsheng"},"content":"     * symbol, description, and deadline.","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"tjingsheng"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"tjingsheng"},"content":"    public String toString() {","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"tjingsheng"},"content":"        return TaskType.DEADLINE.toSymbol() + super.toString() + getDeadline();","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"tjingsheng"},"content":"     * Checks if this `DeadlineTask` is equal to another object.","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"tjingsheng"},"content":"     * @param o The object to compare to.","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"tjingsheng"},"content":"     * @return `true` if the objects are equal, `false` otherwise.","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"tjingsheng"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"tjingsheng"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"tjingsheng"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"tjingsheng"},"content":"            return true;","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"tjingsheng"},"content":"        if (!(o instanceof DeadlineTask)) {","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"tjingsheng"},"content":"            return false;","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"tjingsheng"},"content":"        if (!super.equals(o)) {","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"tjingsheng"},"content":"            return false;","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"tjingsheng"},"content":"        DeadlineTask otherDeadlineTask \u003d (DeadlineTask) o;","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"tjingsheng"},"content":"        return this.endDate.equals(otherDeadlineTask.endDate);","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"tjingsheng"},"content":"     * Generates a hash code for this `DeadlineTask`.","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"tjingsheng"},"content":"     * @return A hash code for the task, including its description and deadline.","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"tjingsheng"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"tjingsheng"},"content":"    public int hashCode() {","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"tjingsheng"},"content":"        return Objects.hash(super.hashCode(), this.endDate);","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"tjingsheng":80}},{"path":"src/main/java/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjingsheng"},"content":"package tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"tjingsheng"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"tjingsheng"},"content":"import enums.TaskType;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"tjingsheng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"tjingsheng"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"tjingsheng"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"tjingsheng"},"content":" * The `EventTask` class represents an event task with a specific start and end date in the Duke application.","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"tjingsheng"},"content":" * It extends the `Task` class and includes the event date range information.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"tjingsheng"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"tjingsheng"},"content":"public class EventTask extends Task {","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"tjingsheng"},"content":"     * The start date of the event task.","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"tjingsheng"},"content":"    private final LocalDate startDate;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"tjingsheng"},"content":"     * The end date of the event task.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"tjingsheng"},"content":"    private final LocalDate endDate;","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"tjingsheng"},"content":"     * Constructs an `EventTask` with the given description, start date, and end date.","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"tjingsheng"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"tjingsheng"},"content":"     * @param startDate   The start date of the event task.","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"tjingsheng"},"content":"     * @param endDate     The end date of the event task.","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"tjingsheng"},"content":"    public EventTask(String description, LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"tjingsheng"},"content":"        super(description);","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"tjingsheng"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"tjingsheng"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"tjingsheng"},"content":"     * Gets the event date range formatted as a string.","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"tjingsheng"},"content":"     * @return A string representation of the event date range.","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"tjingsheng"},"content":"    public String getEventRange() {","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"tjingsheng"},"content":"        return String.format(\" (from: %s to %s)\",","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"tjingsheng"},"content":"                startDate.format(Duke.DATETIME_FORMATTER),","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"tjingsheng"},"content":"                endDate.format(Duke.DATETIME_FORMATTER));","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"tjingsheng"},"content":"     * Generates a string representation of the `EventTask`.","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"tjingsheng"},"content":"     * @return A string representation of the task, including its","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"tjingsheng"},"content":"     * symbol, description, and event date range.","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"tjingsheng"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"tjingsheng"},"content":"    public String toString() {","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"tjingsheng"},"content":"        return TaskType.EVENT.toSymbol() + super.toString() + getEventRange();","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"tjingsheng"},"content":"     * Checks if this `EventTask` is equal to another object.","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"tjingsheng"},"content":"     * @param o The object to compare to.","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"tjingsheng"},"content":"     * @return `true` if the objects are equal, `false` otherwise.","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"tjingsheng"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"tjingsheng"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"tjingsheng"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"tjingsheng"},"content":"            return true;","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"tjingsheng"},"content":"        if (!(o instanceof EventTask)) {","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"tjingsheng"},"content":"            return false;","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"tjingsheng"},"content":"        if (!super.equals(o)) {","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"tjingsheng"},"content":"            return false;","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"tjingsheng"},"content":"        EventTask eventTask \u003d (EventTask) o;","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"tjingsheng"},"content":"        return this.startDate.equals(eventTask.startDate) \u0026\u0026 this.endDate.equals(eventTask.endDate);","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"tjingsheng"},"content":"     * Generates a hash code for this `EventTask`.","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"tjingsheng"},"content":"     * @return A hash code for the task, including its description and event date range.","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"tjingsheng"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"tjingsheng"},"content":"    public int hashCode() {","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"tjingsheng"},"content":"        return Objects.hash(super.hashCode(), this.startDate, this.endDate);","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"tjingsheng":89}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjingsheng"},"content":"package tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"tjingsheng"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"tjingsheng"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"tjingsheng"},"content":" * The `Task` class represents a task in the Duke application.","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"tjingsheng"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"tjingsheng"},"content":"public abstract class Task {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"tjingsheng"},"content":"     * The description of the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"tjingsheng"},"content":"    protected String description;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"tjingsheng"},"content":"     * A flag indicating whether the task is marked as done.","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"tjingsheng"},"content":"    private boolean isDone;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"tjingsheng"},"content":"     * Constructs a `Task` with the given description and initializes it as not done.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"tjingsheng"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"tjingsheng"},"content":"    public Task(String description) {","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"tjingsheng"},"content":"        this.description \u003d description.trim();","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"tjingsheng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"tjingsheng"},"content":"     * Gets the status icon representing the task\u0027s completion status.","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"tjingsheng"},"content":"     * @return The status icon (\"[X]\" for done, \"[ ]\" for not done).","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"tjingsheng"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"tjingsheng"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"tjingsheng"},"content":"     * Generates a string representation of the `Task`.","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"tjingsheng"},"content":"     * @return A string representation of the task, including its status icon and description.","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"tjingsheng"},"content":"    public String toString() {","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"tjingsheng"},"content":"        return this.getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"tjingsheng"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"tjingsheng"},"content":"    public void markDone() {","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"tjingsheng"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"tjingsheng"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"tjingsheng"},"content":"    public void markUndone() {","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"tjingsheng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"tjingsheng"},"content":"     * Checks if the task is marked as done.","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"tjingsheng"},"content":"     * @return `true` if the task is done, `false` otherwise.","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"tjingsheng"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"tjingsheng"},"content":"        return this.isDone;","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"tjingsheng"},"content":"     * Checks if the task description contains a specified keyword.","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"tjingsheng"},"content":"     * @param keyword The keyword to search for within the task description.","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"tjingsheng"},"content":"     * @return `true` if the task description contains the keyword, `false` otherwise.","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"tjingsheng"},"content":"    public boolean hasKeyWord(String keyword) {","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"tjingsheng"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"tjingsheng"},"content":"     * Checks if this `Task` is equal to another object.","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"tjingsheng"},"content":"     * @param o The object to compare to.","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"tjingsheng"},"content":"     * @return `true` if the objects are equal, `false` otherwise.","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"tjingsheng"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"tjingsheng"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"tjingsheng"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"tjingsheng"},"content":"            return true;","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"tjingsheng"},"content":"        if (!(o instanceof Task)) {","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"tjingsheng"},"content":"            return false;","lastModifiedDate":"2023-09-06"},{"lineNumber":93,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":94,"author":{"gitId":"tjingsheng"},"content":"        Task otherTask \u003d (Task) o;","lastModifiedDate":"2023-09-06"},{"lineNumber":95,"author":{"gitId":"tjingsheng"},"content":"        return this.isDone \u003d\u003d otherTask.isDone \u0026\u0026 this.description.equals(otherTask.description);","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":97,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":98,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":99,"author":{"gitId":"tjingsheng"},"content":"     * Generates a hash code for this `Task`.","lastModifiedDate":"2023-09-06"},{"lineNumber":100,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":101,"author":{"gitId":"tjingsheng"},"content":"     * @return A hash code for the task, including its description and completion status.","lastModifiedDate":"2023-09-06"},{"lineNumber":102,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":103,"author":{"gitId":"tjingsheng"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":104,"author":{"gitId":"tjingsheng"},"content":"    public int hashCode() {","lastModifiedDate":"2023-09-06"},{"lineNumber":105,"author":{"gitId":"tjingsheng"},"content":"        return Objects.hash(description, isDone);","lastModifiedDate":"2023-09-06"},{"lineNumber":106,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":107,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"tjingsheng":107}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjingsheng"},"content":"package tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"tjingsheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"tjingsheng"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"tjingsheng"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"tjingsheng"},"content":" * The `TaskList` class represents a collection of tasks in the Duke application.","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"tjingsheng"},"content":" * It provides methods for adding, marking tasks as done/undone, deleting tasks,","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"tjingsheng"},"content":" * and listing all tasks in the list.","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"tjingsheng"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"tjingsheng"},"content":"public class TaskList {","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"tjingsheng"},"content":"     * The list of tasks managed by this `TaskList`.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"tjingsheng"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"tjingsheng"},"content":"     * Constructs a `TaskList` with an initial array of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"tjingsheng"},"content":"     * @param tasks The initial array of tasks to populate the list.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"tjingsheng"},"content":"    public TaskList(Task[] tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"tjingsheng"},"content":"        if (tasks \u003d\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"tjingsheng"},"content":"            this.tasks \u003d new ArrayList\u003c\u003e(1);","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"tjingsheng"},"content":"        } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"tjingsheng"},"content":"            this.tasks \u003d new ArrayList\u003c\u003e(Arrays.asList(tasks));","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"tjingsheng"},"content":"     * Adds a task to the list and prints a confirmation message.","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"tjingsheng"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"tjingsheng"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"tjingsheng"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"tjingsheng"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"tjingsheng"},"content":"        System.out.printf(\"     %s\\n\", task);","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"tjingsheng"},"content":"        System.out.printf(\"Now you have %d tasks in the task list.\\n\", this.size());","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"tjingsheng"},"content":"     * Marks a task as done and prints a confirmation message.","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"tjingsheng"},"content":"     * @param text The text representing the task to be marked as done.","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"tjingsheng"},"content":"    public void markTaskDone(String text) {","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"tjingsheng"},"content":"        Task task \u003d this.tasks.get(Integer.parseInt(text) - 1);","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"tjingsheng"},"content":"        task.markDone();","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"tjingsheng"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"tjingsheng"},"content":"        System.out.printf(\"     %s\\n\", task);","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"tjingsheng"},"content":"     * Marks a task as undone and prints a confirmation message.","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"tjingsheng"},"content":"     * @param text The text representing the task to be marked as undone.","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"tjingsheng"},"content":"    public void markTaskUndone(String text) {","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"tjingsheng"},"content":"        Task task \u003d this.tasks.get(Integer.parseInt(text) - 1);","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"tjingsheng"},"content":"        task.markUndone();","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"tjingsheng"},"content":"        System.out.println(\"Ok! I\u0027ve marked this task as undone:\");","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"tjingsheng"},"content":"        System.out.printf(\"     %s\\n\", task);","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"tjingsheng"},"content":"     * Deletes a task from the list and prints a confirmation message.","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"tjingsheng"},"content":"     * @param text The text representing the task to be deleted.","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"tjingsheng"},"content":"    public void deleteTask(String text) {","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"tjingsheng"},"content":"        int taskIndex \u003d Integer.parseInt(text) - 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"tjingsheng"},"content":"        Task task \u003d this.tasks.get(taskIndex);","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"tjingsheng"},"content":"        this.tasks.remove(taskIndex);","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"tjingsheng"},"content":"        System.out.println(\"Ok! I\u0027ve deleted this task:\");","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"tjingsheng"},"content":"        System.out.printf(\"     %s\\n\", task);","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":79,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"tjingsheng"},"content":"     * Validates whether a task index is valid within the list.","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"tjingsheng"},"content":"     * @param text The text representing the task index to validate.","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"tjingsheng"},"content":"     * @return `true` if the task index is valid, `false` otherwise.","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"tjingsheng"},"content":"    public boolean validateTaskIndex(String text) {","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"tjingsheng"},"content":"        int index;","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"tjingsheng"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"tjingsheng"},"content":"            Integer.parseInt(text);","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"tjingsheng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"tjingsheng"},"content":"            System.out.printf(\"Task index: \u0027%s\u0027 is invalid, task index has to be an integer.\\n\", text);","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"tjingsheng"},"content":"            return false;","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"tjingsheng"},"content":"        index \u003d Integer.parseInt(text);","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"tjingsheng"},"content":"        if (index \u003c 1 || index \u003e this.tasks.size()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"tjingsheng"},"content":"            System.out.printf(\"Task index: \u0027%s\u0027 is invalid, task index has to be in list.\\n\", text);","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"tjingsheng"},"content":"            return false;","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"tjingsheng"},"content":"        return true;","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":105,"author":{"gitId":"tjingsheng"},"content":"     * Gets a task from the list by its index.","lastModifiedDate":"2023-09-06"},{"lineNumber":106,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":107,"author":{"gitId":"tjingsheng"},"content":"     * @param taskIndex The index of the task to retrieve.","lastModifiedDate":"2023-09-06"},{"lineNumber":108,"author":{"gitId":"tjingsheng"},"content":"     * @return The task at the specified index, or `null` if the index is out of bounds.","lastModifiedDate":"2023-09-06"},{"lineNumber":109,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":110,"author":{"gitId":"tjingsheng"},"content":"    public Task getTask(int taskIndex) {","lastModifiedDate":"2023-09-06"},{"lineNumber":111,"author":{"gitId":"tjingsheng"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":112,"author":{"gitId":"tjingsheng"},"content":"            return null;","lastModifiedDate":"2023-09-06"},{"lineNumber":113,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":114,"author":{"gitId":"tjingsheng"},"content":"        return this.tasks.get(taskIndex);","lastModifiedDate":"2023-09-06"},{"lineNumber":115,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":116,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":117,"author":{"gitId":"tjingsheng"},"content":"   /**","lastModifiedDate":"2023-09-06"},{"lineNumber":118,"author":{"gitId":"tjingsheng"},"content":"     * Gets the number of tasks in the list.","lastModifiedDate":"2023-09-06"},{"lineNumber":119,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":120,"author":{"gitId":"tjingsheng"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2023-09-06"},{"lineNumber":121,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":122,"author":{"gitId":"tjingsheng"},"content":"    public int size() {","lastModifiedDate":"2023-09-06"},{"lineNumber":123,"author":{"gitId":"tjingsheng"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-09-06"},{"lineNumber":124,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":125,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":126,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":127,"author":{"gitId":"tjingsheng"},"content":"     * Retrieves all tasks in the list as an array.","lastModifiedDate":"2023-09-06"},{"lineNumber":128,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":129,"author":{"gitId":"tjingsheng"},"content":"     * @return An array containing all the tasks in the list.","lastModifiedDate":"2023-09-06"},{"lineNumber":130,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":131,"author":{"gitId":"tjingsheng"},"content":"    public Task[] getTasks() {","lastModifiedDate":"2023-09-03"},{"lineNumber":132,"author":{"gitId":"tjingsheng"},"content":"        Task[] taskArray \u003d new Task[this.size()];","lastModifiedDate":"2023-09-06"},{"lineNumber":133,"author":{"gitId":"tjingsheng"},"content":"        return this.tasks.toArray(taskArray);","lastModifiedDate":"2023-09-03"},{"lineNumber":134,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":137,"author":{"gitId":"tjingsheng"},"content":"     * Lists all tasks in the list and prints them along with task numbers.","lastModifiedDate":"2023-09-06"},{"lineNumber":138,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":139,"author":{"gitId":"tjingsheng"},"content":"    public void listAllTasks() {","lastModifiedDate":"2023-08-26"},{"lineNumber":140,"author":{"gitId":"tjingsheng"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-26"},{"lineNumber":141,"author":{"gitId":"tjingsheng"},"content":"        for (int i \u003d 1; i \u003c\u003d this.tasks.size(); ++i) {","lastModifiedDate":"2023-08-26"},{"lineNumber":142,"author":{"gitId":"tjingsheng"},"content":"            String taskNumber \u003d String.format(\"%3d.\", i);","lastModifiedDate":"2023-08-26"},{"lineNumber":143,"author":{"gitId":"tjingsheng"},"content":"            System.out.printf(\"%s %s\\n\", taskNumber, this.tasks.get(i - 1).toString());","lastModifiedDate":"2023-08-26"},{"lineNumber":144,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":145,"author":{"gitId":"tjingsheng"},"content":"        System.out.printf(\"You have %d tasks in the task list.\\n\", this.size());","lastModifiedDate":"2023-09-06"},{"lineNumber":146,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":147,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":148,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":149,"author":{"gitId":"tjingsheng"},"content":"     * Finds and displays tasks that contain a specified keyword in their descriptions.","lastModifiedDate":"2023-09-06"},{"lineNumber":150,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":151,"author":{"gitId":"tjingsheng"},"content":"     * @param keyword The keyword to search for within task descriptions.","lastModifiedDate":"2023-09-06"},{"lineNumber":152,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":153,"author":{"gitId":"tjingsheng"},"content":"    public void findTask(String keyword) {","lastModifiedDate":"2023-09-06"},{"lineNumber":154,"author":{"gitId":"tjingsheng"},"content":"        boolean hasMatch \u003d false;","lastModifiedDate":"2023-09-06"},{"lineNumber":155,"author":{"gitId":"tjingsheng"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-09-06"},{"lineNumber":156,"author":{"gitId":"tjingsheng"},"content":"        for (int i \u003d 1; i \u003c\u003d this.tasks.size(); ++i) {","lastModifiedDate":"2023-09-06"},{"lineNumber":157,"author":{"gitId":"tjingsheng"},"content":"            Task currTask \u003d this.tasks.get(i - 1);","lastModifiedDate":"2023-09-06"},{"lineNumber":158,"author":{"gitId":"tjingsheng"},"content":"            if (currTask.hasKeyWord(keyword)) {","lastModifiedDate":"2023-09-06"},{"lineNumber":159,"author":{"gitId":"tjingsheng"},"content":"                hasMatch \u003d true;","lastModifiedDate":"2023-09-06"},{"lineNumber":160,"author":{"gitId":"tjingsheng"},"content":"                String taskNumber \u003d String.format(\"%3d.\", i);","lastModifiedDate":"2023-09-06"},{"lineNumber":161,"author":{"gitId":"tjingsheng"},"content":"                System.out.printf(\"%s %s\\n\", taskNumber, currTask);","lastModifiedDate":"2023-09-06"},{"lineNumber":162,"author":{"gitId":"tjingsheng"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":163,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":164,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":165,"author":{"gitId":"tjingsheng"},"content":"        if (!hasMatch) {","lastModifiedDate":"2023-09-06"},{"lineNumber":166,"author":{"gitId":"tjingsheng"},"content":"            System.out.println(\"No tasks matched your keyword!\");","lastModifiedDate":"2023-09-06"},{"lineNumber":167,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":168,"author":{"gitId":"tjingsheng"},"content":"        System.out.printf(\"You have %d tasks in the task list.\\n\", this.size());","lastModifiedDate":"2023-09-06"},{"lineNumber":169,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":170,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"tjingsheng":170}},{"path":"src/main/java/tasks/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjingsheng"},"content":"package tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"tjingsheng"},"content":"import enums.TaskType;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"tjingsheng"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"tjingsheng"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"tjingsheng"},"content":" * The `TodoTask` class represents a \"Todo\" task in the Duke application.","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"tjingsheng"},"content":" * It is a specific type of task that has no specific due date or event range.","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"tjingsheng"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"tjingsheng"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"tjingsheng"},"content":"     * Constructs a `TodoTask` with the given description.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"tjingsheng"},"content":"     * @param description The description of the \"Todo\" task.","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"tjingsheng"},"content":"    public TodoTask(String description) {","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"tjingsheng"},"content":"        super(description);","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"tjingsheng"},"content":"     * Generates a string representation of the `TodoTask`.","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"tjingsheng"},"content":"     * @return A string representation of the \"Todo\" task,","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"tjingsheng"},"content":"     * including its status icon and description.","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"tjingsheng"},"content":"    public String toString() {","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"tjingsheng"},"content":"        return TaskType.TODO.toSymbol() + super.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"tjingsheng"},"content":"     * Checks if this `TodoTask` is equal to another object.","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"tjingsheng"},"content":"     * @param o The object to compare to.","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"tjingsheng"},"content":"     * @return `true` if the objects are equal, `false` otherwise.","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"tjingsheng"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"tjingsheng"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"tjingsheng"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"tjingsheng"},"content":"            return true;","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"tjingsheng"},"content":"        if (!(o instanceof TodoTask)) {","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"tjingsheng"},"content":"            return false;","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"tjingsheng"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"tjingsheng"},"content":"        return super.equals(o);","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"tjingsheng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"tjingsheng"},"content":"     * Generates a hash code for this `TodoTask`.","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"tjingsheng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"tjingsheng"},"content":"     * @return A hash code for the \"Todo\" task, including its description and completion status.","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"tjingsheng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"tjingsheng"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"tjingsheng"},"content":"    public int hashCode() {","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"tjingsheng"},"content":"        return Objects.hash(super.hashCode());","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"tjingsheng":56}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjingsheng"},"content":"package ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"tjingsheng"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"tjingsheng"},"content":"public class Ui {","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"tjingsheng"},"content":"    public static int CHAT_WIDTH \u003d 80;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"tjingsheng"},"content":"    public static void helloWorld() {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"tjingsheng"},"content":"        System.out.println(\"Hello! I\u0027m Jing Sheng\");","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"tjingsheng"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"tjingsheng"},"content":"    public static String getUserInput(Scanner scanner) {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"tjingsheng"},"content":"        printDividerLine();","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"tjingsheng"},"content":"        System.out.print(\"You: \");","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"tjingsheng"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"tjingsheng"},"content":"    public static void getBotMessage() {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"tjingsheng"},"content":"        printDividerLine();","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"tjingsheng"},"content":"        System.out.println(\"Bot: \");","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"tjingsheng"},"content":"    public static void showByeUser() {","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"tjingsheng"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"tjingsheng"},"content":"    public static void showConfused() {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"tjingsheng"},"content":"        System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"tjingsheng"},"content":"    public static void printDividerLine() {","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"tjingsheng"},"content":"        System.out.println(\"═\".repeat(CHAT_WIDTH));","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"tjingsheng":35}},{"path":"src/test/java/command/ByeCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjingsheng"},"content":"package command;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"tjingsheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"tjingsheng"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"tjingsheng"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"tjingsheng"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"tjingsheng"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"tjingsheng"},"content":"public class ByeCommandTest {","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"tjingsheng"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"tjingsheng"},"content":"    public void testValidate() {","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"tjingsheng"},"content":"        // Arrange, Act, Assert","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"tjingsheng"},"content":"        assertTrue(ByeCommand.validate(\"bye\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(ByeCommand.validate(\"bye some argument\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(ByeCommand.validate(\"list\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(ByeCommand.validate(\"todo some task\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(ByeCommand.validate(\"deadline some task\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"tjingsheng"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"tjingsheng"},"content":"    public void testExecute_ShowsByeMessage() {","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"tjingsheng"},"content":"        // Arrange","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"tjingsheng"},"content":"        TaskList taskList \u003d new TaskList(null);","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"tjingsheng"},"content":"        ByeCommand byeCommand \u003d new ByeCommand(\"bye\");","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"tjingsheng"},"content":"        // Redirecting System.out to capture console output","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"tjingsheng"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"tjingsheng"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"tjingsheng"},"content":"        // Act","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"tjingsheng"},"content":"        byeCommand.execute(taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"tjingsheng"},"content":"        // Restore System.out","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"tjingsheng"},"content":"        System.setOut(System.out);","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"tjingsheng"},"content":"        String expectedOutput \u003d \"Bye. Hope to see you again soon!\" + System.lineSeparator();","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"tjingsheng"},"content":"        // Assert","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"tjingsheng"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"tjingsheng"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"tjingsheng"},"content":"    public void testExecute_NoMessageDisplayedIfValidationFails() {","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"tjingsheng"},"content":"        // Arrange","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"tjingsheng"},"content":"        TaskList taskList \u003d new TaskList(null);","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"tjingsheng"},"content":"        ByeCommand invalidCommand \u003d new ByeCommand(\"bye some argument\");","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"tjingsheng"},"content":"        // Redirecting System.out to capture console output","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"tjingsheng"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"tjingsheng"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"tjingsheng"},"content":"        // Act","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"tjingsheng"},"content":"        invalidCommand.execute(taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"tjingsheng"},"content":"        // Restore System.out","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"tjingsheng"},"content":"        System.setOut(System.out);","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"tjingsheng"},"content":"        // Assert","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"tjingsheng"},"content":"        assertEquals(\"\", outContent.toString());","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"tjingsheng":65}},{"path":"src/test/java/command/DeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjingsheng"},"content":"package command;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"tjingsheng"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"tjingsheng"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"tjingsheng"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"tjingsheng"},"content":"import tasks.DeadlineTask;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"tjingsheng"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"tjingsheng"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"tjingsheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"tjingsheng"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"tjingsheng"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"tjingsheng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"tjingsheng"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"tjingsheng"},"content":"public class DeadlineCommandTest {","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"tjingsheng"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"tjingsheng"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"tjingsheng"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"tjingsheng"},"content":"    public void setUpStreams() {","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"tjingsheng"},"content":"        // Redirect System.out to the ByteArrayOutputStream","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"tjingsheng"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"tjingsheng"},"content":"    @AfterEach","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"tjingsheng"},"content":"    public void restoreStreams() {","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"tjingsheng"},"content":"        // Restore the original System.out","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"tjingsheng"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"tjingsheng"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"tjingsheng"},"content":"    public void testValidate() {","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"tjingsheng"},"content":"        // Arrange, Act, Assert","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"tjingsheng"},"content":"        assertTrue(DeadlineCommand.validate(\"deadline study /by 2023-01-01\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"tjingsheng"},"content":"        assertTrue(DeadlineCommand.validate(\"deadline       study /by 2023-01-01\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(DeadlineCommand.validate(\"deadline\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(DeadlineCommand.validate(\"deadline study /by 2023/01/01\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(DeadlineCommand.validate(\"deadline /by 2023/01/01\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"tjingsheng"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"tjingsheng"},"content":"    public void testExecute_CreateTask() {","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"tjingsheng"},"content":"        // Arrange","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"tjingsheng"},"content":"        DeadlineCommand deadlineCommand \u003d new DeadlineCommand(\"deadline some task /by 2023-12-31\");","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"tjingsheng"},"content":"        LocalDate endDate \u003d LocalDate.parse(\"2023-12-31\", Duke.DATETIME_FORMATTER);","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"tjingsheng"},"content":"        Task expectedTask \u003d new DeadlineTask(\"some task\", endDate);","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"tjingsheng"},"content":"        TaskList taskList \u003d new TaskList(null);","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"tjingsheng"},"content":"        // Act","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"tjingsheng"},"content":"        deadlineCommand.execute(taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"tjingsheng"},"content":"        // Assert","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"tjingsheng"},"content":"        Task retrievedTask \u003d taskList.getTask(0);","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"tjingsheng"},"content":"        assertEquals(expectedTask, retrievedTask);","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"tjingsheng"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"tjingsheng"},"content":"    public void testExecute_NoTaskCreatedIfValidationFail() {","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"tjingsheng"},"content":"        // Arrange","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"tjingsheng"},"content":"        TaskList taskList \u003d new TaskList(null);","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"tjingsheng"},"content":"        TodoCommand invalidCommand \u003d new TodoCommand(\"dealine\");","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"tjingsheng"},"content":"        // Act","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"tjingsheng"},"content":"        invalidCommand.execute(taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"tjingsheng"},"content":"        // Assert","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"tjingsheng"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"tjingsheng":71}},{"path":"src/test/java/command/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjingsheng"},"content":"package command;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"tjingsheng"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"tjingsheng"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"tjingsheng"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"tjingsheng"},"content":"import tasks.*;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"tjingsheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"tjingsheng"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"tjingsheng"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"tjingsheng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"tjingsheng"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"tjingsheng"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"tjingsheng"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"tjingsheng"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"tjingsheng"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"tjingsheng"},"content":"    public void setUpStreams() {","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"tjingsheng"},"content":"        // Redirect System.out to the ByteArrayOutputStream","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"tjingsheng"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"tjingsheng"},"content":"    @AfterEach","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"tjingsheng"},"content":"    public void restoreStreams() {","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"tjingsheng"},"content":"        // Restore the original System.out","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"tjingsheng"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"tjingsheng"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"tjingsheng"},"content":"    public void testValidate() {","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"tjingsheng"},"content":"        //Arrange","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"tjingsheng"},"content":"        LocalDate startDate \u003d LocalDate.parse(\"2023-01-01\", Duke.DATETIME_FORMATTER);","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"tjingsheng"},"content":"        LocalDate endDate \u003d LocalDate.parse(\"2023-12-31\", Duke.DATETIME_FORMATTER);","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"tjingsheng"},"content":"        Task task1 \u003d new TodoTask(\"some task 1\");","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"tjingsheng"},"content":"        Task task2 \u003d new DeadlineTask(\"some task 2\", endDate);","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"tjingsheng"},"content":"        Task task3 \u003d new EventTask(\"some task 2\", startDate, endDate);","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"tjingsheng"},"content":"        TaskList taskList \u003d new TaskList(new Task[]{task1, task2, task3});","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"tjingsheng"},"content":"        // Act, Assert","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"tjingsheng"},"content":"        assertTrue(DeleteCommand.validate(\"delete 1\", taskList));","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"tjingsheng"},"content":"        assertTrue(DeleteCommand.validate(\"delete 2\", taskList));","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(DeleteCommand.validate(\"delete\", taskList));","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(DeleteCommand.validate(\"delete a\", taskList));","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(DeleteCommand.validate(\"delete 0\", taskList));","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(DeleteCommand.validate(\"delete 4\", taskList));","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"tjingsheng"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"tjingsheng"},"content":"    public void testExecute_DeleteTask() {","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"tjingsheng"},"content":"        // Arrange","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"tjingsheng"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(\"delete 1\");","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"tjingsheng"},"content":"        Task task1 \u003d new TodoTask(\"some task 1\");","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"tjingsheng"},"content":"        TaskList taskList \u003d new TaskList(new Task[]{task1});","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"tjingsheng"},"content":"        // Act","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"tjingsheng"},"content":"        deleteCommand.execute(taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"tjingsheng"},"content":"        // Assert","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"tjingsheng"},"content":"        assertEquals(taskList.size(), 0);","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"tjingsheng"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"tjingsheng"},"content":"    public void testExecute_NoTaskDeletedIfValidationFails() {","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"tjingsheng"},"content":"        // Arrange","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"tjingsheng"},"content":"        TaskList taskList \u003d new TaskList(null);","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"tjingsheng"},"content":"        taskList.addTask(new TodoTask(\"Task 1\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"tjingsheng"},"content":"        DeleteCommand invalidCommand \u003d new DeleteCommand(\"delete 1?\");","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"tjingsheng"},"content":"        // Act","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"tjingsheng"},"content":"        invalidCommand.execute(taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"tjingsheng"},"content":"        // Assert","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"tjingsheng"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"tjingsheng":78}},{"path":"src/test/java/command/EventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjingsheng"},"content":"package command;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"tjingsheng"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"tjingsheng"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"tjingsheng"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"tjingsheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"tjingsheng"},"content":"import tasks.EventTask;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"tjingsheng"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"tjingsheng"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"tjingsheng"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"tjingsheng"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"tjingsheng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"tjingsheng"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"tjingsheng"},"content":"public class EventCommandTest {","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"tjingsheng"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"tjingsheng"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"tjingsheng"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"tjingsheng"},"content":"    public void setUpStreams() {","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"tjingsheng"},"content":"        // Redirect System.out to the ByteArrayOutputStream","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"tjingsheng"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"tjingsheng"},"content":"    @AfterEach","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"tjingsheng"},"content":"    public void restoreStreams() {","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"tjingsheng"},"content":"        // Restore the original System.out","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"tjingsheng"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"tjingsheng"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"tjingsheng"},"content":"    public void testValidate() {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"tjingsheng"},"content":"        // Arrange, Act, Assert","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"tjingsheng"},"content":"        assertTrue(EventCommand.validate(\"event some task /from 2023-01-01 /to 2023-12-31\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(EventCommand.validate(\"event\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(EventCommand.validate(\"event some task /from 2023-01-01\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(EventCommand.validate(\"event some task /to 2023-12-31\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(EventCommand.validate(\"deadline some task /from 2023-01-01 /to 2023-12-31\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"tjingsheng"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"tjingsheng"},"content":"    public void testExecute_CreateTask() {","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"tjingsheng"},"content":"        // Arrange","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"tjingsheng"},"content":"        TaskList taskList \u003d new TaskList(null);","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"tjingsheng"},"content":"        EventCommand eventCommand \u003d new EventCommand(\"event TaskName /from 2023-01-01 /to 2023-12-31\");","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"tjingsheng"},"content":"        // Act","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"tjingsheng"},"content":"        eventCommand.execute(taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"tjingsheng"},"content":"        LocalDate startDate \u003d LocalDate.parse(\"2023-01-01\", Duke.DATETIME_FORMATTER);","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"tjingsheng"},"content":"        LocalDate endDate \u003d LocalDate.parse(\"2023-12-31\", Duke.DATETIME_FORMATTER);","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"tjingsheng"},"content":"        EventTask expectedTask \u003d new EventTask(\"TaskName\", startDate, endDate);","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"tjingsheng"},"content":"        // Assert","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"tjingsheng"},"content":"        Task retrievedTask \u003d taskList.getTask(0);","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"tjingsheng"},"content":"        assertEquals(retrievedTask, expectedTask);","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"tjingsheng"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"tjingsheng"},"content":"    public void testExecute_NoTaskCreatedIfValidationFail() {","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"tjingsheng"},"content":"        // Arrange","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"tjingsheng"},"content":"        TaskList taskList \u003d new TaskList(null);","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"tjingsheng"},"content":"        EventCommand invalidCommand \u003d new EventCommand(\"event\");","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"tjingsheng"},"content":"        // Act","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"tjingsheng"},"content":"        invalidCommand.execute(taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"tjingsheng"},"content":"        // Assert","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"tjingsheng"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"tjingsheng":73}},{"path":"src/test/java/command/FindCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjingsheng"},"content":"package command;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"tjingsheng"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"tjingsheng"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"tjingsheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"tjingsheng"},"content":"import tasks.DeadlineTask;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"tjingsheng"},"content":"import tasks.EventTask;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"tjingsheng"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"tjingsheng"},"content":"import tasks.TodoTask;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"tjingsheng"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"tjingsheng"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"tjingsheng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"tjingsheng"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"tjingsheng"},"content":"public class FindCommandTest {","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"tjingsheng"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"tjingsheng"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"tjingsheng"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"tjingsheng"},"content":"    public void setUpStreams() {","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"tjingsheng"},"content":"        // Redirect System.out to the ByteArrayOutputStream","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"tjingsheng"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"tjingsheng"},"content":"    @AfterEach","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"tjingsheng"},"content":"    public void restoreStreams() {","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"tjingsheng"},"content":"        // Restore the original System.out","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"tjingsheng"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"tjingsheng"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"tjingsheng"},"content":"    public void testValidate() {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"tjingsheng"},"content":"        // Arrange, Act, Assert","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"tjingsheng"},"content":"        assertTrue(FindCommand.validate(\"find keyword\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"tjingsheng"},"content":"        assertTrue(FindCommand.validate(\"find keyword extra argument\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(FindCommand.validate(\"/find keyword\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(FindCommand.validate(\"find\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(FindCommand.validate(\"list keyword\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"tjingsheng"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"tjingsheng"},"content":"    public void testExecute_FindsMatchingTasks() {","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"tjingsheng"},"content":"        // Arrange","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"tjingsheng"},"content":"        TaskList taskList \u003d new TaskList(null);","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"tjingsheng"},"content":"        LocalDate startDate \u003d LocalDate.parse(\"2023-01-01\");","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"tjingsheng"},"content":"        LocalDate endDate \u003d LocalDate.parse(\"2023-12-31\");","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"tjingsheng"},"content":"        taskList.addTask(new TodoTask(\"Task 1\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"tjingsheng"},"content":"        taskList.addTask(new DeadlineTask(\"Task 2\", endDate));","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"tjingsheng"},"content":"        taskList.addTask(new EventTask(\"Task 3\", startDate, endDate));","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"tjingsheng"},"content":"        FindCommand findCommand \u003d new FindCommand(\"find Task 2\");","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"tjingsheng"},"content":"        String expectedOutput \u003d \"Here are the matching tasks in your list:\" + System.lineSeparator() +","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"tjingsheng"},"content":"                \"  2. [D][ ] Task 2 (by: 2023-12-31)\" + System.lineSeparator() +","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"tjingsheng"},"content":"                \"You have 3 tasks in the task list.\" + System.lineSeparator();","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"tjingsheng"},"content":"        // Redirecting System.out to capture console output","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"tjingsheng"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"tjingsheng"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"tjingsheng"},"content":"        // Act","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"tjingsheng"},"content":"        findCommand.execute(taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"tjingsheng"},"content":"        // Restore System.out","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"tjingsheng"},"content":"        System.setOut(System.out);","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"tjingsheng"},"content":"        // Assert","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"tjingsheng"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"tjingsheng"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"tjingsheng"},"content":"    public void testExecute_NoMatchingTasks() {","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"tjingsheng"},"content":"        // Arrange","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"tjingsheng"},"content":"        TaskList taskList \u003d new TaskList(null);","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"tjingsheng"},"content":"        taskList.addTask(new TodoTask(\"Task 1\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"tjingsheng"},"content":"        taskList.addTask(new DeadlineTask(\"Task 2\", LocalDate.parse(\"2023-12-31\")));","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"tjingsheng"},"content":"        taskList.addTask(new EventTask(\"Task 3\", LocalDate.parse(\"2023-01-01\"), LocalDate.parse(\"2023-12-31\")));","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"tjingsheng"},"content":"        FindCommand findCommand \u003d new FindCommand(\"find NonExistentTask\");","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"tjingsheng"},"content":"        String expectedOutput \u003d \"Here are the matching tasks in your list:\" + System.lineSeparator() +","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"tjingsheng"},"content":"                \"No tasks matched your keyword!\" + System.lineSeparator() +","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"tjingsheng"},"content":"                \"You have 3 tasks in the task list.\" + System.lineSeparator();","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"tjingsheng"},"content":"        // Redirecting System.out to capture console output","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"tjingsheng"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"tjingsheng"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"tjingsheng"},"content":"        // Act","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"tjingsheng"},"content":"        findCommand.execute(taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":93,"author":{"gitId":"tjingsheng"},"content":"        // Restore System.out","lastModifiedDate":"2023-09-06"},{"lineNumber":94,"author":{"gitId":"tjingsheng"},"content":"        System.setOut(System.out);","lastModifiedDate":"2023-09-06"},{"lineNumber":95,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"tjingsheng"},"content":"        // Assert","lastModifiedDate":"2023-09-06"},{"lineNumber":97,"author":{"gitId":"tjingsheng"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2023-09-06"},{"lineNumber":98,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":99,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"tjingsheng":99}},{"path":"src/test/java/command/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjingsheng"},"content":"package command;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"tjingsheng"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"tjingsheng"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"tjingsheng"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"tjingsheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"tjingsheng"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"tjingsheng"},"content":"import tasks.TodoTask;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"tjingsheng"},"content":"import tasks.DeadlineTask;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"tjingsheng"},"content":"import tasks.EventTask;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"tjingsheng"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"tjingsheng"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"tjingsheng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"tjingsheng"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"tjingsheng"},"content":"public class ListCommandTest {","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"tjingsheng"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"tjingsheng"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"tjingsheng"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"tjingsheng"},"content":"    public void setUpStreams() {","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"tjingsheng"},"content":"        // Redirect System.out to the ByteArrayOutputStream","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"tjingsheng"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"tjingsheng"},"content":"    @AfterEach","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"tjingsheng"},"content":"    public void restoreStreams() {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"tjingsheng"},"content":"        // Restore the original System.out","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"tjingsheng"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"tjingsheng"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"tjingsheng"},"content":"    public void testValidate() {","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"tjingsheng"},"content":"        // Arrange, Act, Assert","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"tjingsheng"},"content":"        assertTrue(ListCommand.validate(\"list\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(ListCommand.validate(\"/list\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(ListCommand.validate(\"list some argument\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(ListCommand.validate(\"todo\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(ListCommand.validate(\"event some task\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(ListCommand.validate(\"deadline some task\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"tjingsheng"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"tjingsheng"},"content":"    public void testExecute_ListsTasks() {","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"tjingsheng"},"content":"        // Arrange","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"tjingsheng"},"content":"        TaskList taskList \u003d new TaskList(null);","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"tjingsheng"},"content":"        LocalDate startDate \u003d LocalDate.parse(\"2023-01-01\", Duke.DATETIME_FORMATTER);","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"tjingsheng"},"content":"        LocalDate endDate \u003d LocalDate.parse(\"2023-12-31\", Duke.DATETIME_FORMATTER);","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"tjingsheng"},"content":"        taskList.addTask(new TodoTask(\"Task 1\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"tjingsheng"},"content":"        taskList.addTask(new DeadlineTask(\"Task 2\", endDate));","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"tjingsheng"},"content":"        taskList.addTask(new EventTask(\"Task 3\", startDate, endDate));","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"tjingsheng"},"content":"        ListCommand listCommand \u003d new ListCommand(\"list\");","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"tjingsheng"},"content":"        String expectedOutput \u003d \"Here are the tasks in your list:\" +System.lineSeparator() +","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"tjingsheng"},"content":"                \"  1. [T][ ] Task 1\" +System.lineSeparator() +","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"tjingsheng"},"content":"                \"  2. [D][ ] Task 2 (by: 2023-12-31)\" +System.lineSeparator() +","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"tjingsheng"},"content":"                \"  3. [E][ ] Task 3 (from: 2023-01-01 to 2023-12-31)\" +System.lineSeparator() +","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"tjingsheng"},"content":"                \"You have 3 tasks in the task list.\" + System.lineSeparator();","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"tjingsheng"},"content":"        // Redirecting System.out to capture console output","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"tjingsheng"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"tjingsheng"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"tjingsheng"},"content":"        // Act","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"tjingsheng"},"content":"        listCommand.execute(taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"tjingsheng"},"content":"        // Restore System.out","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"tjingsheng"},"content":"        System.setOut(System.out);","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"tjingsheng"},"content":"        // Assert","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"tjingsheng"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"tjingsheng"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"tjingsheng"},"content":"    public void testExecute_ListsNoTasks() {","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"tjingsheng"},"content":"        // Arrange","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"tjingsheng"},"content":"        TaskList taskList \u003d new TaskList(null);","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"tjingsheng"},"content":"        ListCommand listCommand \u003d new ListCommand(\"list\");","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"tjingsheng"},"content":"        String expectedOutput \u003d \"Here are the tasks in your list:\" + System.lineSeparator() +","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"tjingsheng"},"content":"                \"You have 0 tasks in the task list.\" + System.lineSeparator();","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"tjingsheng"},"content":"        // Redirecting System.out to capture console output","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"tjingsheng"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"tjingsheng"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"tjingsheng"},"content":"        // Act","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"tjingsheng"},"content":"        listCommand.execute(taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"tjingsheng"},"content":"        // Restore System.out","lastModifiedDate":"2023-09-06"},{"lineNumber":93,"author":{"gitId":"tjingsheng"},"content":"        System.setOut(System.out);","lastModifiedDate":"2023-09-06"},{"lineNumber":94,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":95,"author":{"gitId":"tjingsheng"},"content":"        // Assert","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"tjingsheng"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2023-09-06"},{"lineNumber":97,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":98,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"tjingsheng":98}},{"path":"src/test/java/command/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjingsheng"},"content":"package command;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"tjingsheng"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"tjingsheng"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"tjingsheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"tjingsheng"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"tjingsheng"},"content":"import tasks.TodoTask;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"tjingsheng"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"tjingsheng"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"tjingsheng"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"tjingsheng"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"tjingsheng"},"content":"public class MarkCommandTest {","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"tjingsheng"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"tjingsheng"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"tjingsheng"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"tjingsheng"},"content":"    public void setUpStreams() {","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"tjingsheng"},"content":"        // Redirect System.out to the ByteArrayOutputStream","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"tjingsheng"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"tjingsheng"},"content":"    @AfterEach","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"tjingsheng"},"content":"    public void restoreStreams() {","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"tjingsheng"},"content":"        // Restore the original System.out","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"tjingsheng"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"tjingsheng"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"tjingsheng"},"content":"    public void testValidate() {","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"tjingsheng"},"content":"        // Arrange","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"tjingsheng"},"content":"        TaskList taskList \u003d new TaskList(null);","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"tjingsheng"},"content":"        taskList.addTask(new TodoTask(\"Task 1\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"tjingsheng"},"content":"        taskList.addTask(new TodoTask(\"Task 2\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"tjingsheng"},"content":"        // Act, Assert","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"tjingsheng"},"content":"        assertTrue(MarkCommand.validate(\"mark 1\", taskList));","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"tjingsheng"},"content":"        assertTrue(MarkCommand.validate(\"mark 2\", taskList));","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(MarkCommand.validate(\"mark\", taskList));","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(MarkCommand.validate(\"mark 0\", taskList));","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(MarkCommand.validate(\"mark 3\", taskList));","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(MarkCommand.validate(\"mark a\", taskList));","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"tjingsheng"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"tjingsheng"},"content":"    public void testExecute_MarksTaskAsDone() {","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"tjingsheng"},"content":"        // Arrange","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"tjingsheng"},"content":"        TaskList taskList \u003d new TaskList(null);","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"tjingsheng"},"content":"        taskList.addTask(new TodoTask(\"Task 1\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"tjingsheng"},"content":"        taskList.addTask(new TodoTask(\"Task 2\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"tjingsheng"},"content":"        MarkCommand markCommand \u003d new MarkCommand(\"mark 1\");","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"tjingsheng"},"content":"        // Act","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"tjingsheng"},"content":"        markCommand.execute(taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"tjingsheng"},"content":"        // Assert","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"tjingsheng"},"content":"        Task task \u003d taskList.getTask(0);","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"tjingsheng"},"content":"        assertTrue(task.isDone());","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"tjingsheng"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"tjingsheng"},"content":"    public void testExecute_NoTaskMarkedIfValidationFails() {","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"tjingsheng"},"content":"        // Arrange","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"tjingsheng"},"content":"        TaskList taskList \u003d new TaskList(null);","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"tjingsheng"},"content":"        taskList.addTask(new TodoTask(\"Task 1\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"tjingsheng"},"content":"        taskList.addTask(new TodoTask(\"Task 2\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"tjingsheng"},"content":"        MarkCommand invalidCommand \u003d new MarkCommand(\"mark 0\");","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"tjingsheng"},"content":"        // Act","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"tjingsheng"},"content":"        invalidCommand.execute(taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"tjingsheng"},"content":"        // Assert","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"tjingsheng"},"content":"        Task task \u003d taskList.getTask(0);","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(task.isDone());","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"tjingsheng":81}},{"path":"src/test/java/command/NullCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjingsheng"},"content":"package command;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"tjingsheng"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"tjingsheng"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"tjingsheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"tjingsheng"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"tjingsheng"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"tjingsheng"},"content":"import tasks.TodoTask;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"tjingsheng"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"tjingsheng"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"tjingsheng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"tjingsheng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"tjingsheng"},"content":"public class NullCommandTest {","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"tjingsheng"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"tjingsheng"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"tjingsheng"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"tjingsheng"},"content":"    public void setUpStreams() {","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"tjingsheng"},"content":"        // Redirect System.out to the ByteArrayOutputStream","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"tjingsheng"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"tjingsheng"},"content":"    @AfterEach","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"tjingsheng"},"content":"    public void restoreStreams() {","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"tjingsheng"},"content":"        // Restore the original System.out","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"tjingsheng"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"tjingsheng"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"tjingsheng"},"content":"    public void testValidate() {","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"tjingsheng"},"content":"        // Arrange","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"tjingsheng"},"content":"        TaskList taskList \u003d new TaskList(null);","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"tjingsheng"},"content":"        taskList.addTask(new TodoTask(\"Task 1\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"tjingsheng"},"content":"        taskList.addTask(new TodoTask(\"Task 2\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"tjingsheng"},"content":"        // Act, Assert","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"tjingsheng"},"content":"        assertTrue(UnmarkCommand.validate(\"unmark 1\", taskList));","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"tjingsheng"},"content":"        assertTrue(UnmarkCommand.validate(\"unmark 2\", taskList));","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(UnmarkCommand.validate(\"unmark\", taskList));","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(UnmarkCommand.validate(\"unmark 0\", taskList));","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(UnmarkCommand.validate(\"unmark 3\", taskList));","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(UnmarkCommand.validate(\"unmark a\", taskList));","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"tjingsheng"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"tjingsheng"},"content":"    public void testExecute_MarksTaskAsDone() {","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"tjingsheng"},"content":"        // Arrange","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"tjingsheng"},"content":"        TaskList taskList \u003d new TaskList(null);","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"tjingsheng"},"content":"        taskList.addTask(new TodoTask(\"Task 1\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"tjingsheng"},"content":"        taskList.addTask(new TodoTask(\"Task 2\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"tjingsheng"},"content":"        MarkCommand markCommand \u003d new MarkCommand(\"mark 1\");","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"tjingsheng"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand(\"unmark 1\");","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"tjingsheng"},"content":"        // Act","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"tjingsheng"},"content":"        markCommand.execute(taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"tjingsheng"},"content":"        unmarkCommand.execute(taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"tjingsheng"},"content":"        // Assert","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"tjingsheng"},"content":"        Task task \u003d taskList.getTask(0);","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(task.isDone());","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"tjingsheng"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"tjingsheng"},"content":"    public void testExecute_NoTaskMarkedIfValidationFails() {","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"tjingsheng"},"content":"        // Arrange","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"tjingsheng"},"content":"        TaskList taskList \u003d new TaskList(null);","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"tjingsheng"},"content":"        taskList.addTask(new TodoTask(\"Task 1\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"tjingsheng"},"content":"        taskList.addTask(new TodoTask(\"Task 2\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"tjingsheng"},"content":"        MarkCommand markCommand \u003d new MarkCommand(\"mark 1\");","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"tjingsheng"},"content":"        MarkCommand invalidCommand \u003d new MarkCommand(\"unmark    1\");","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"tjingsheng"},"content":"        // Act","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"tjingsheng"},"content":"        markCommand.execute(taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"tjingsheng"},"content":"        invalidCommand.execute(taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"tjingsheng"},"content":"        // Assert","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"tjingsheng"},"content":"        Task task \u003d taskList.getTask(0);","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"tjingsheng"},"content":"        assertTrue(task.isDone());","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"tjingsheng":86}},{"path":"src/test/java/command/TodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjingsheng"},"content":"package command;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"tjingsheng"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"tjingsheng"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"tjingsheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"tjingsheng"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"tjingsheng"},"content":"import tasks.TodoTask;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"tjingsheng"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"tjingsheng"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"tjingsheng"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"tjingsheng"},"content":"public class TodoCommandTest {","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"tjingsheng"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"tjingsheng"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"tjingsheng"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"tjingsheng"},"content":"    public void setUpStreams() {","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"tjingsheng"},"content":"        // Redirect System.out to the ByteArrayOutputStream","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"tjingsheng"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"tjingsheng"},"content":"    @AfterEach","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"tjingsheng"},"content":"    public void restoreStreams() {","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"tjingsheng"},"content":"        // Restore the original System.out","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"tjingsheng"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"tjingsheng"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"tjingsheng"},"content":"    public void testValidate() {","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"tjingsheng"},"content":"        // Arrange, Act, Assert","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"tjingsheng"},"content":"        assertTrue(TodoCommand.validate(\"todo some task\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(TodoCommand.validate(\"todo\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(TodoCommand.validate(\"event some task\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(TodoCommand.validate(\"deadline some task\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"tjingsheng"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"tjingsheng"},"content":"    public void testExecute_CreateTask() {","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"tjingsheng"},"content":"        // Arrange","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"tjingsheng"},"content":"        TaskList taskList \u003d new TaskList(null);","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"tjingsheng"},"content":"        TodoCommand todoCommand \u003d new TodoCommand(\"todo TaskName\");","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"tjingsheng"},"content":"        // Act","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"tjingsheng"},"content":"        todoCommand.execute(taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"tjingsheng"},"content":"        TodoTask expectedTask \u003d new TodoTask(\"TaskName\");","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"tjingsheng"},"content":"        // Assert","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"tjingsheng"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"tjingsheng"},"content":"        assertEquals(expectedTask, taskList.getTask(0));","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"tjingsheng"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"tjingsheng"},"content":"    public void testExecute_NoTaskCreatedIfValidationFail() {","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"tjingsheng"},"content":"        // Arrange","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"tjingsheng"},"content":"        TaskList taskList \u003d new TaskList(null);","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"tjingsheng"},"content":"        TodoCommand invalidCommand \u003d new TodoCommand(\"todo\");","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"tjingsheng"},"content":"        // Act","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"tjingsheng"},"content":"        invalidCommand.execute(taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"tjingsheng"},"content":"        // Assert","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"tjingsheng"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"tjingsheng":66}},{"path":"src/test/java/command/UnmarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjingsheng"},"content":"package command;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"tjingsheng"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"tjingsheng"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"tjingsheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"tjingsheng"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"tjingsheng"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"tjingsheng"},"content":"import tasks.TodoTask;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"tjingsheng"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"tjingsheng"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"tjingsheng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"tjingsheng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"tjingsheng"},"content":"public class UnmarkCommandTest {","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"tjingsheng"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"tjingsheng"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"tjingsheng"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"tjingsheng"},"content":"    public void setUpStreams() {","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"tjingsheng"},"content":"        // Redirect System.out to the ByteArrayOutputStream","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"tjingsheng"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"tjingsheng"},"content":"    @AfterEach","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"tjingsheng"},"content":"    public void restoreStreams() {","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"tjingsheng"},"content":"        // Restore the original System.out","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"tjingsheng"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"tjingsheng"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"tjingsheng"},"content":"    public void testValidate() {","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"tjingsheng"},"content":"        // Arrange","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"tjingsheng"},"content":"        TaskList taskList \u003d new TaskList(null);","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"tjingsheng"},"content":"        taskList.addTask(new TodoTask(\"Task 1\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"tjingsheng"},"content":"        taskList.addTask(new TodoTask(\"Task 2\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"tjingsheng"},"content":"        // Act, Assert","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"tjingsheng"},"content":"        assertTrue(UnmarkCommand.validate(\"unmark 1\", taskList));","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"tjingsheng"},"content":"        assertTrue(UnmarkCommand.validate(\"unmark 2\", taskList));","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(UnmarkCommand.validate(\"unmark\", taskList));","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(UnmarkCommand.validate(\"unmark 0\", taskList));","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(UnmarkCommand.validate(\"unmark 3\", taskList));","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(UnmarkCommand.validate(\"unmark a\", taskList));","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"tjingsheng"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"tjingsheng"},"content":"    public void testExecute_MarksTaskAsDone() {","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"tjingsheng"},"content":"        // Arrange","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"tjingsheng"},"content":"        TaskList taskList \u003d new TaskList(null);","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"tjingsheng"},"content":"        taskList.addTask(new TodoTask(\"Task 1\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"tjingsheng"},"content":"        taskList.addTask(new TodoTask(\"Task 2\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"tjingsheng"},"content":"        MarkCommand markCommand \u003d new MarkCommand(\"mark 1\");","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"tjingsheng"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand(\"unmark 1\");","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"tjingsheng"},"content":"        // Act","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"tjingsheng"},"content":"        markCommand.execute(taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"tjingsheng"},"content":"        unmarkCommand.execute(taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"tjingsheng"},"content":"        // Assert","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"tjingsheng"},"content":"        Task task \u003d taskList.getTask(0);","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"tjingsheng"},"content":"        assertFalse(task.isDone());","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"tjingsheng"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"tjingsheng"},"content":"    public void testExecute_NoTaskMarkedIfValidationFails() {","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"tjingsheng"},"content":"        // Arrange","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"tjingsheng"},"content":"        TaskList taskList \u003d new TaskList(null);","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"tjingsheng"},"content":"        taskList.addTask(new TodoTask(\"Task 1\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"tjingsheng"},"content":"        taskList.addTask(new TodoTask(\"Task 2\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"tjingsheng"},"content":"        MarkCommand markCommand \u003d new MarkCommand(\"mark 1\");","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"tjingsheng"},"content":"        MarkCommand invalidCommand \u003d new MarkCommand(\"unmark    1\");","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"tjingsheng"},"content":"        // Act","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"tjingsheng"},"content":"        markCommand.execute(taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"tjingsheng"},"content":"        invalidCommand.execute(taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"tjingsheng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"tjingsheng"},"content":"        // Assert","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"tjingsheng"},"content":"        Task task \u003d taskList.getTask(0);","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"tjingsheng"},"content":"        assertTrue(task.isDone());","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"tjingsheng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"tjingsheng"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"tjingsheng":86}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tjingsheng"},"content":"todo borrow book","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"tjingsheng"},"content":"list","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"tjingsheng"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"tjingsheng"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"tjingsheng"},"content":"list","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"tjingsheng"},"content":"mark 1","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"tjingsheng"},"content":"list","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"tjingsheng"},"content":"unmark 1","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"tjingsheng"},"content":"list","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"tjingsheng":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"tjingsheng"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tjingsheng":1,"-":20}}]
