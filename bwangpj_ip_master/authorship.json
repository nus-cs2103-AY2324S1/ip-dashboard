[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"bwangpj"},"content":"    mainClass.set(\"penguin.Penguin\")","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"bwangpj"},"content":"    archiveBaseName \u003d \"penguin\"","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bwangpj":2,"-":40}},{"path":"src/main/java/penguin/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"package penguin;","lastModifiedDate":"2023-08-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-16"},{"lineNumber":5,"author":{"gitId":"bwangpj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"bwangpj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"bwangpj"},"content":"import static java.time.format.DateTimeFormatter.ISO_LOCAL_DATE;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"bwangpj"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"bwangpj"},"content":" * Deadline is a type of Task with a set to-do-by date.","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"bwangpj"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-16"},{"lineNumber":13,"author":{"gitId":"bwangpj"},"content":"    LocalDate by;","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public Deadline(String name, String by) {","lastModifiedDate":"2023-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(name);","lastModifiedDate":"2023-08-16"},{"lineNumber":16,"author":{"gitId":"bwangpj"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-16"},{"lineNumber":18,"author":{"gitId":"bwangpj"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"bwangpj"},"content":"     * Returns information about the deadline for output to the user.","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"bwangpj"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"bwangpj"},"content":"     * @return Information about the deadline in user-output format.","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"bwangpj"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public String getDisplay() {","lastModifiedDate":"2023-08-16"},{"lineNumber":24,"author":{"gitId":"bwangpj"},"content":"        return \"[D]\" + super.getDisplay() + \" by \" + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-16"},{"lineNumber":26,"author":{"gitId":"bwangpj"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"bwangpj"},"content":"     * Returns information about the deadline for internal storage purposes.","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"bwangpj"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"bwangpj"},"content":"     * @return Information about the deadline in internal storage format.","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"bwangpj"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"bwangpj"},"content":"    public String getSaveDisplay() {","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"bwangpj"},"content":"        return \"D | \" + super.getSaveDisplay() + \" | \" + this.by.format(ISO_LOCAL_DATE);","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-08-16"}],"authorContributionMap":{"bwangpj":24,"-":10}},{"path":"src/main/java/penguin/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"package penguin;","lastModifiedDate":"2023-08-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-16"},{"lineNumber":4,"author":{"gitId":"bwangpj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"bwangpj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"bwangpj"},"content":"import static java.time.format.DateTimeFormatter.ISO_LOCAL_DATE;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"bwangpj"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"bwangpj"},"content":" * Event is a type of Task with a set start and end date.","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"bwangpj"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-16"},{"lineNumber":13,"author":{"gitId":"bwangpj"},"content":"    LocalDate from;","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"bwangpj"},"content":"    LocalDate to;","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public Event(String name, String from, String to) {","lastModifiedDate":"2023-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        super(name);","lastModifiedDate":"2023-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"bwangpj"},"content":"        this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"bwangpj"},"content":"        this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-16"},{"lineNumber":22,"author":{"gitId":"bwangpj"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"bwangpj"},"content":"     * Returns information about the event for output to the user.","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"bwangpj"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"bwangpj"},"content":"     * @return Information about the event in user-output format.","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"bwangpj"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public String getDisplay() {","lastModifiedDate":"2023-08-16"},{"lineNumber":28,"author":{"gitId":"bwangpj"},"content":"        return \"[E]\" + super.getDisplay() + \" from \" + this.from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" to \"","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"bwangpj"},"content":"                + this.to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-16"},{"lineNumber":31,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"bwangpj"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"bwangpj"},"content":"     * Returns information about the event for internal storage purposes.","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"bwangpj"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"bwangpj"},"content":"     * @return Information about the event in internal storage format.","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"bwangpj"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"bwangpj"},"content":"    public String getSaveDisplay() {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"bwangpj"},"content":"        return \"E | \" + super.getSaveDisplay() + \" | \" + this.from.format(ISO_LOCAL_DATE) + \" | \" + this.to.format(ISO_LOCAL_DATE);","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-08-16"}],"authorContributionMap":{"bwangpj":29,"-":11}},{"path":"src/main/java/penguin/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bwangpj"},"content":"package penguin;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"bwangpj"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"bwangpj"},"content":" * Parser is responsible for parsing input commands from the user.","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"bwangpj"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"bwangpj"},"content":"public class Parser {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"bwangpj"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"bwangpj"},"content":"     * Parses the input command.","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"bwangpj"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"bwangpj"},"content":"     * @param command input command.","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"bwangpj"},"content":"     * @return Parsed type of command.","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"bwangpj"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"bwangpj"},"content":"    public String parse(String command) {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"bwangpj"},"content":"        if (command.equals(\"bye\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"bwangpj"},"content":"            return \"bye\";","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"bwangpj"},"content":"        } else if (command.equals(\"list\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"bwangpj"},"content":"            return \"list\";","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"bwangpj"},"content":"        } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"bwangpj"},"content":"            return \"mark\";","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"bwangpj"},"content":"        } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"bwangpj"},"content":"            return \"unmark\";","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"bwangpj"},"content":"        } else if (command.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"bwangpj"},"content":"            return \"todo\";","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"bwangpj"},"content":"        } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"bwangpj"},"content":"            return \"deadline\";","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"bwangpj"},"content":"        } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"bwangpj"},"content":"            return \"event\";","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"bwangpj"},"content":"        } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"bwangpj"},"content":"            return \"delete\";","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"bwangpj"},"content":"        } else if (command.startsWith(\"find\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"bwangpj"},"content":"            return \"find\"; ","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"bwangpj"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"bwangpj"},"content":"            return \"unknown\";","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"bwangpj"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"bwangpj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"bwangpj"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"bwangpj":36}},{"path":"src/main/java/penguin/Penguin.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package penguin;","lastModifiedDate":"2023-08-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-16"},{"lineNumber":3,"author":{"gitId":"bwangpj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-08-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Penguin is the main logic of Penguin chatbot; its main responsibility is to parse commands and handle errors.","lastModifiedDate":"2023-08-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-08-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Penguin {","lastModifiedDate":"2023-08-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private static final String GREETING \u003d \"Honk! I\u0027m Penguin! What can I do for you?\";","lastModifiedDate":"2023-08-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private static final String GOODBYE \u003d \"Honk! Hope to see you again soon!\";","lastModifiedDate":"2023-08-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private static final String MARK \u003d \"Honk honk! You did task \";","lastModifiedDate":"2023-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String UNMARK \u003d \"Fishes! You didn\u0027t do task \";","lastModifiedDate":"2023-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final String TODO \u003d \"Honk! You\u0027ll have to do \";","lastModifiedDate":"2023-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String DEADLINE \u003d \"Flap flap flap! Must do this \";","lastModifiedDate":"2023-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String EVENT \u003d \"Fish party?! \";","lastModifiedDate":"2023-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String DELETE \u003d \"This task is thrown into the sea! \";","lastModifiedDate":"2023-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private UI ui;","lastModifiedDate":"2023-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-16"},{"lineNumber":21,"author":{"gitId":"bwangpj"},"content":"    private Storage memory;","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"bwangpj"},"content":"    private Parser parser;","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructor for Penguin chatbot.","lastModifiedDate":"2023-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Penguin() {","lastModifiedDate":"2023-08-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.ui \u003d new UI();","lastModifiedDate":"2023-08-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2023-08-16"},{"lineNumber":29,"author":{"gitId":"bwangpj"},"content":"        this.memory \u003d new Storage(\"data/memory.txt\");","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"bwangpj"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Runs the Penguin chatbot.","lastModifiedDate":"2023-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param args arguments.","lastModifiedDate":"2023-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-16"},{"lineNumber":39,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        new Penguin().run();","lastModifiedDate":"2023-08-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-16"},{"lineNumber":42,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-16"},{"lineNumber":44,"author":{"gitId":"bwangpj"},"content":"     * Starts the main logic of Penguin chatbot; parses commands and handles errors.","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void run() {","lastModifiedDate":"2023-08-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        ui.out(GREETING);","lastModifiedDate":"2023-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        boolean running \u003d true;","lastModifiedDate":"2023-08-16"},{"lineNumber":49,"author":{"gitId":"bwangpj"},"content":"        this.taskList \u003d memory.load();","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (running) {","lastModifiedDate":"2023-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2023-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                String command \u003d ui.in();","lastModifiedDate":"2023-08-16"},{"lineNumber":54,"author":{"gitId":"bwangpj"},"content":"                String[] spl \u003d null;","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"bwangpj"},"content":"                int taskNo;","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"bwangpj"},"content":"                switch (parser.parse(command)) {","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"bwangpj"},"content":"                    case \"bye\":","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                        ui.out(GOODBYE);","lastModifiedDate":"2023-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                        running \u003d false;","lastModifiedDate":"2023-08-16"},{"lineNumber":61,"author":{"gitId":"bwangpj"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"bwangpj"},"content":"                    case \"list\":","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                        ui.out(taskList.printList());","lastModifiedDate":"2023-08-16"},{"lineNumber":64,"author":{"gitId":"bwangpj"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"bwangpj"},"content":"                    case \"mark\":","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"bwangpj"},"content":"                        spl \u003d command.split(\" \", 2);","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"bwangpj"},"content":"                        taskNo \u003d Integer.parseInt(spl[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                        taskList.list.get(taskNo - 1).done \u003d true;","lastModifiedDate":"2023-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                        ui.out(MARK + taskList.list.get(taskNo - 1).getDisplay());","lastModifiedDate":"2023-08-16"},{"lineNumber":70,"author":{"gitId":"bwangpj"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"bwangpj"},"content":"                    case \"unmark\":","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"bwangpj"},"content":"                        spl \u003d command.split(\" \", 2);","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"bwangpj"},"content":"                        taskNo \u003d Integer.parseInt(spl[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                        taskList.list.get(taskNo - 1).done \u003d false;","lastModifiedDate":"2023-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                        ui.out(UNMARK + taskList.list.get(taskNo - 1).getDisplay());","lastModifiedDate":"2023-08-16"},{"lineNumber":76,"author":{"gitId":"bwangpj"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"bwangpj"},"content":"                    case \"todo\":","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"bwangpj"},"content":"                        spl \u003d command.split(\"todo \");","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                        ToDo newToDo \u003d new ToDo(spl[1]);","lastModifiedDate":"2023-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                        taskList.addTask(newToDo);","lastModifiedDate":"2023-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                        ui.out(TODO + newToDo.getDisplay());","lastModifiedDate":"2023-08-16"},{"lineNumber":82,"author":{"gitId":"bwangpj"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"bwangpj"},"content":"                    case \"deadline\":","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"bwangpj"},"content":"                        spl \u003d command.split(\"deadline | /by \");","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                        Deadline newDeadline \u003d new Deadline(spl[1], spl[2]);","lastModifiedDate":"2023-08-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                        taskList.addTask(newDeadline);","lastModifiedDate":"2023-08-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                        ui.out(DEADLINE + newDeadline.getDisplay());","lastModifiedDate":"2023-08-16"},{"lineNumber":88,"author":{"gitId":"bwangpj"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"bwangpj"},"content":"                    case \"event\":","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"bwangpj"},"content":"                        spl \u003d command.split(\"event | /from | /to \");","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                        Event newEvent \u003d new Event(spl[1], spl[2], spl[3]);","lastModifiedDate":"2023-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                        taskList.addTask(newEvent);","lastModifiedDate":"2023-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                        ui.out(EVENT + newEvent.getDisplay());","lastModifiedDate":"2023-08-16"},{"lineNumber":94,"author":{"gitId":"bwangpj"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"bwangpj"},"content":"                    case \"delete\":","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"bwangpj"},"content":"                        spl \u003d command.split(\" \");","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"bwangpj"},"content":"                        taskNo \u003d Integer.parseInt(spl[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                        ui.out(DELETE + taskList.list.remove(taskNo - 1).getDisplay());","lastModifiedDate":"2023-08-16"},{"lineNumber":99,"author":{"gitId":"bwangpj"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"bwangpj"},"content":"                    case \"find\":","lastModifiedDate":"2023-08-26"},{"lineNumber":101,"author":{"gitId":"bwangpj"},"content":"                        spl \u003d command.split(\" \");","lastModifiedDate":"2023-08-26"},{"lineNumber":102,"author":{"gitId":"bwangpj"},"content":"                        String match \u003d spl[1];","lastModifiedDate":"2023-08-26"},{"lineNumber":103,"author":{"gitId":"bwangpj"},"content":"                        ui.out(taskList.findInList(match));","lastModifiedDate":"2023-08-26"},{"lineNumber":104,"author":{"gitId":"bwangpj"},"content":"                        break;","lastModifiedDate":"2023-08-26"},{"lineNumber":105,"author":{"gitId":"bwangpj"},"content":"                    case \"unknown\":","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                        throw new PenguinUnknownCommandException();","lastModifiedDate":"2023-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2023-08-16"},{"lineNumber":109,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"bwangpj"},"content":"                memory.save(taskList);","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            } catch (PenguinException e) {","lastModifiedDate":"2023-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                ui.out(\"Fishes!! \" + e.getMessage());","lastModifiedDate":"2023-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                ui.out(\"No fishes? One or more fields in your command is empty or malformed.\");","lastModifiedDate":"2023-08-16"},{"lineNumber":115,"author":{"gitId":"bwangpj"},"content":"            } catch(DateTimeParseException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"bwangpj"},"content":"                ui.out(\"Dates must be in penguin format yyyy-mm-dd!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                ui.out(\"Flap flap flap flap!! An unexpected error occurred...\");","lastModifiedDate":"2023-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-08-16"},{"lineNumber":121,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-08-16"}],"authorContributionMap":{"bwangpj":51,"-":72}},{"path":"src/main/java/penguin/PenguinUnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package penguin;","lastModifiedDate":"2023-08-16"},{"lineNumber":2,"author":{"gitId":"bwangpj"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"bwangpj"},"content":" * Any error specific to an unknown command issued to Penguin bot will throw a \u003ctt\u003ePenguinUnknownCommandException\u003c/tt\u003e.","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"bwangpj"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class PenguinUnknownCommandException extends PenguinException{","lastModifiedDate":"2023-08-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public PenguinUnknownCommandException() {","lastModifiedDate":"2023-08-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        super(\"My bird brain can\u0027t understand that!\");","lastModifiedDate":"2023-08-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-08-16"}],"authorContributionMap":{"bwangpj":3,"-":6}},{"path":"src/main/java/penguin/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bwangpj"},"content":"package penguin;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"bwangpj"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"bwangpj"},"content":"import java.io.File;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"bwangpj"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"bwangpj"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"bwangpj"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"bwangpj"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"bwangpj"},"content":" * Storage handles the save and load functionality of Penguin.","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"bwangpj"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"bwangpj"},"content":"public class Storage {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"bwangpj"},"content":"    private String file;","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"bwangpj"},"content":"    public Storage(String file) {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"bwangpj"},"content":"        this.file \u003d file;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"bwangpj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"bwangpj"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"bwangpj"},"content":"     * Saves tasks into storage.","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"bwangpj"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"bwangpj"},"content":"     * @param taskList the list of Tasks to be saved.","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"bwangpj"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"bwangpj"},"content":"    public void save(TaskList taskList) {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"bwangpj"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"bwangpj"},"content":"            File file \u003d new File(this.file);","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"bwangpj"},"content":"            // create directory if it does not exist","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"bwangpj"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"bwangpj"},"content":"            // create txt file if it does not exist","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"bwangpj"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"bwangpj"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"bwangpj"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"bwangpj"},"content":"            BufferedWriter taskSaver \u003d new BufferedWriter(new FileWriter(file));","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"bwangpj"},"content":"            String tasks \u003d \"\";","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"bwangpj"},"content":"            for (Task task : taskList.list) {","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"bwangpj"},"content":"                tasks +\u003d task.getSaveDisplay() + \"\\n\";","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"bwangpj"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"bwangpj"},"content":"            taskSaver.write(tasks);","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"bwangpj"},"content":"            taskSaver.close();","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"bwangpj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"bwangpj"},"content":"            System.out.println(\"Honk? My brain isn\u0027t working or is missing! \" + e.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"bwangpj"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"bwangpj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"bwangpj"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"bwangpj"},"content":"     * Loads tasks from storage.","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"bwangpj"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"bwangpj"},"content":"     * @return the list of Tasks that was saved.","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"bwangpj"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"bwangpj"},"content":"    public TaskList load() {","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"bwangpj"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"bwangpj"},"content":"        Scanner sc \u003d null;","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"bwangpj"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"bwangpj"},"content":"            File file \u003d new File(this.file);","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"bwangpj"},"content":"            // create directory if it does not exist","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"bwangpj"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"bwangpj"},"content":"            // create txt file if it does not exist","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"bwangpj"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"bwangpj"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"bwangpj"},"content":"                return taskList;","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"bwangpj"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"bwangpj"},"content":"            sc \u003d new Scanner(file);","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"bwangpj"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"bwangpj"},"content":"        catch (IOException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"bwangpj"},"content":"            System.out.println(\"Honk, something went wrong with my brain...\" + e.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"bwangpj"},"content":"            return taskList;","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"bwangpj"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"bwangpj"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"bwangpj"},"content":"            String taskString \u003d sc.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"bwangpj"},"content":"            String[] spl \u003d taskString.split(\" \\\\| \");","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"bwangpj"},"content":"            Task newTask \u003d new Task(\"\");","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"bwangpj"},"content":"            switch (spl[0]) {","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"bwangpj"},"content":"                case \"T\":","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"bwangpj"},"content":"                    newTask \u003d new ToDo(spl[2]);","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"bwangpj"},"content":"                    break;","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"bwangpj"},"content":"                case \"D\":","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"bwangpj"},"content":"                    newTask \u003d new Deadline(spl[2], spl[3]);","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"bwangpj"},"content":"                    break;","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"bwangpj"},"content":"                case \"E\":","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"bwangpj"},"content":"                    newTask \u003d new Event(spl[2], spl[3], spl[4]);","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"bwangpj"},"content":"                    break;","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"bwangpj"},"content":"                default:","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"bwangpj"},"content":"                    System.out.println(\"My memory seems corrupted!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"bwangpj"},"content":"                    break;","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"bwangpj"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"bwangpj"},"content":"            if (spl[1].equals(\"1\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"bwangpj"},"content":"                newTask.done \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"bwangpj"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"bwangpj"},"content":"            taskList.list.add(newTask);","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"bwangpj"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"bwangpj"},"content":"        return taskList;","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"bwangpj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"bwangpj"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"bwangpj":104}},{"path":"src/main/java/penguin/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"package penguin;","lastModifiedDate":"2023-08-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-16"},{"lineNumber":5,"author":{"gitId":"bwangpj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"bwangpj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-16"},{"lineNumber":9,"author":{"gitId":"bwangpj"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"bwangpj"},"content":" * Task contains information about a task that was input by the user for Penguin bot to remember.","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"bwangpj"},"content":" *","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"bwangpj"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Task {","lastModifiedDate":"2023-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    protected boolean done;","lastModifiedDate":"2023-08-16"},{"lineNumber":15,"author":{"gitId":"bwangpj"},"content":"    protected String name;","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-16"},{"lineNumber":21,"author":{"gitId":"bwangpj"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"bwangpj"},"content":"     * Returns information about the task for output to the user.","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"bwangpj"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"bwangpj"},"content":"     * @return Information about the task in user-output format.","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"bwangpj"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public String getDisplay() {","lastModifiedDate":"2023-08-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-08-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        if (this.done) {","lastModifiedDate":"2023-08-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            output +\u003d \"[X]\";","lastModifiedDate":"2023-08-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2023-08-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            output +\u003d \"[ ]\";","lastModifiedDate":"2023-08-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        output +\u003d this.name;","lastModifiedDate":"2023-08-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return output;","lastModifiedDate":"2023-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-16"},{"lineNumber":36,"author":{"gitId":"bwangpj"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"bwangpj"},"content":"     * Returns information about the task for internal storage purposes.","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"bwangpj"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"bwangpj"},"content":"     * @return Information about the task in internal storage format.","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"bwangpj"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"bwangpj"},"content":"    public String getSaveDisplay() {","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"bwangpj"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"bwangpj"},"content":"        if (this.done) {","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"bwangpj"},"content":"            output +\u003d \"1 | \";","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"bwangpj"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"bwangpj"},"content":"            output +\u003d \"0 | \";","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"bwangpj"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"bwangpj"},"content":"        output +\u003d this.name;","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"bwangpj"},"content":"        return output;","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"bwangpj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-08-16"}],"authorContributionMap":{"bwangpj":29,"-":22}},{"path":"src/main/java/penguin/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package penguin;","lastModifiedDate":"2023-08-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-08-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-16"},{"lineNumber":5,"author":{"gitId":"bwangpj"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"bwangpj"},"content":" * TaskList is a list of Tasks.","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"bwangpj"},"content":" *","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"bwangpj"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class TaskList {","lastModifiedDate":"2023-08-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    protected List\u003cTask\u003e list;","lastModifiedDate":"2023-08-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Constructor of List.","lastModifiedDate":"2023-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.list.add(task);","lastModifiedDate":"2023-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-16"},{"lineNumber":22,"author":{"gitId":"bwangpj"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"bwangpj"},"content":"     * Returns information about all tasks in the list for output to the user.","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"bwangpj"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"bwangpj"},"content":"     * @return Information about all tasks in the list in user-output format.","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"bwangpj"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public String printList() {","lastModifiedDate":"2023-08-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String output \u003d \"I\u0027m remembering the following tasks...\\n\";","lastModifiedDate":"2023-08-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        for (int i\u003d1; i\u003c\u003dthis.list.size(); i++) {","lastModifiedDate":"2023-08-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            output +\u003d i + \".\";","lastModifiedDate":"2023-08-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            output +\u003d this.list.get(i-1).getDisplay() + \"\\n\";","lastModifiedDate":"2023-08-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return output;","lastModifiedDate":"2023-08-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-16"},{"lineNumber":36,"author":{"gitId":"bwangpj"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"bwangpj"},"content":"     * Returns information about all tasks in the list whose name contains the given string.","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"bwangpj"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"bwangpj"},"content":"     * @param match String to search for in the list of tasks.","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"bwangpj"},"content":"     * @return Information about all matching tasks in the list in user-output format.","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"bwangpj"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"bwangpj"},"content":"    public String findInList(String match) {","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"bwangpj"},"content":"        String output \u003d \"Honk, I found the following matching tasks...\\n\";","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"bwangpj"},"content":"        for (int i\u003d1; i\u003c\u003dthis.list.size(); i++) {","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"bwangpj"},"content":"            if (this.list.get(i-1).name.contains(match)) {","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"bwangpj"},"content":"                output +\u003d i + \".\";","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"bwangpj"},"content":"                output +\u003d this.list.get(i-1).getDisplay() + \"\\n\";","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"bwangpj"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"bwangpj"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"bwangpj"},"content":"        return output;","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"bwangpj"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-08-16"}],"authorContributionMap":{"bwangpj":25,"-":27}},{"path":"src/main/java/penguin/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package penguin;","lastModifiedDate":"2023-08-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-16"},{"lineNumber":3,"author":{"gitId":"bwangpj"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"bwangpj"},"content":" * ToDo is a type of Task with no associated date.","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"bwangpj"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public ToDo(String name) {","lastModifiedDate":"2023-08-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(name);","lastModifiedDate":"2023-08-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-16"},{"lineNumber":10,"author":{"gitId":"bwangpj"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"bwangpj"},"content":"     * Returns information about the task for output to the user.","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"bwangpj"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"bwangpj"},"content":"     * @return Information about the task in user-output format.","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"bwangpj"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public String getDisplay() {","lastModifiedDate":"2023-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return \"[T]\" + super.getDisplay();","lastModifiedDate":"2023-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-16"},{"lineNumber":18,"author":{"gitId":"bwangpj"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"bwangpj"},"content":"     * Returns information about the task for internal storage purposes.","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"bwangpj"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"bwangpj"},"content":"     * @return Information about the task in internal storage format.","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"bwangpj"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"bwangpj"},"content":"    public String getSaveDisplay() {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"bwangpj"},"content":"        return \"T | \" + super.getSaveDisplay();","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"bwangpj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-08-16"}],"authorContributionMap":{"bwangpj":16,"-":10}},{"path":"src/main/java/penguin/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package penguin;","lastModifiedDate":"2023-08-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-08-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * UI handles the I/O functionality of Penguin chatbot.","lastModifiedDate":"2023-08-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-08-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class UI {","lastModifiedDate":"2023-08-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private static final String GREETING \u003d \"Honk! I\u0027m Penguin! What can I do for you?\";","lastModifiedDate":"2023-08-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Scanner input; ","lastModifiedDate":"2023-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public UI() {","lastModifiedDate":"2023-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.input \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-16"},{"lineNumber":17,"author":{"gitId":"bwangpj"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"bwangpj"},"content":"     * Obtains the next command input by the user.","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"bwangpj"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"bwangpj"},"content":"     * @return Next command from the user.","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"bwangpj"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public String in() {","lastModifiedDate":"2023-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return input.nextLine();","lastModifiedDate":"2023-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-16"},{"lineNumber":26,"author":{"gitId":"bwangpj"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"bwangpj"},"content":"     * Outputs a message for the user.","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"bwangpj"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"bwangpj"},"content":"     * @param msg Message to be output to the user.","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"bwangpj"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void out(String msg) {","lastModifiedDate":"2023-08-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        System.out.println(msg);","lastModifiedDate":"2023-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-08-16"}],"authorContributionMap":{"bwangpj":10,"-":25}},{"path":"src/test/java/penguin/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bwangpj"},"content":"package penguin;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"bwangpj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"bwangpj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"bwangpj"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"bwangpj"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"bwangpj"},"content":"    @Test","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"bwangpj"},"content":"    public void getDisplay_success() throws Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"bwangpj"},"content":"        assertEquals(\"[D][ ]Eat fishes by Aug 24 2023\",","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"bwangpj"},"content":"                new Deadline(\"Eat fishes\", \"2023-08-24\").getDisplay());","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"bwangpj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"bwangpj"},"content":"    @Test","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"bwangpj"},"content":"    public void newDeadline_exceptionThrown() {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"bwangpj"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"bwangpj"},"content":"            assertEquals(\"[D][ ]Eat fishes by Aug 24 2023\",","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"bwangpj"},"content":"                    new Deadline(\"Eat fishes\", \"Aug 24 2023\").getDisplay());","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"bwangpj"},"content":"            fail();","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"bwangpj"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"bwangpj"},"content":"            assertEquals(\"Text \u0027Aug 24 2023\u0027 could not be parsed at index 0\", e.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"bwangpj"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"bwangpj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"bwangpj"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"bwangpj":28}},{"path":"src/test/java/penguin/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bwangpj"},"content":"package penguin;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"bwangpj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"bwangpj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"bwangpj"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"bwangpj"},"content":"public class EventTest {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"bwangpj"},"content":"    @Test","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"bwangpj"},"content":"    public void getSaveDisplay_success() throws Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"bwangpj"},"content":"        assertEquals(\"E | 0 | Eat fishes | 2023-08-24 | 2023-08-25\",","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"bwangpj"},"content":"                new Event(\"Eat fishes\", \"2023-08-24\", \"2023-08-25\").getSaveDisplay());","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"bwangpj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"bwangpj"},"content":"    @Test","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"bwangpj"},"content":"    public void newEvent_exceptionThrown() {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"bwangpj"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"bwangpj"},"content":"            assertEquals(\"E | 0 | Eat fishes | 2023-08-24 | 2023-08-25\",","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"bwangpj"},"content":"                    new Event(\"Eat fishes\", \"Aug 24 2023\", \"Aug 25 2023\").getSaveDisplay());","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"bwangpj"},"content":"            fail();","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"bwangpj"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"bwangpj"},"content":"            assertEquals(\"Text \u0027Aug 24 2023\u0027 could not be parsed at index 0\", e.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"bwangpj"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"bwangpj"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"bwangpj"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"bwangpj"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"bwangpj":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bwangpj"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"bwangpj":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"bwangpj"},"content":"javac  -cp ..\\src\\main\\java\\penguin -Xlint:none -d ..\\bin ..\\src\\main\\java\\penguin\\*.java","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"bwangpj"},"content":"java -classpath ..\\bin penguin.Penguin \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bwangpj":2,"-":19}}]
