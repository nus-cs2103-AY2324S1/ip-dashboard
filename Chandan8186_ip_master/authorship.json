[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Chandan8186"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Chandan8186"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Chandan8186":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"Chandan8186"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Chandan8186"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Chandan8186"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Chandan8186"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Chandan8186"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Chandan8186"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Chandan8186"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Chandan8186"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Chandan8186"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Chandan8186"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Chandan8186"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Chandan8186"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Chandan8186"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Chandan8186"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"Chandan8186"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"Chandan8186"},"content":"checkstyle {","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"Chandan8186"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"Chandan8186"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"Chandan8186":21,"-":41}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chandan8186"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Chandan8186"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"Chandan8186"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"Chandan8186"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Chandan8186"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Chandan8186"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"Chandan8186"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"Chandan8186"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Chandan8186"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Chandan8186"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Chandan8186"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"Chandan8186"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Chandan8186"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Chandan8186"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"Chandan8186"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"Chandan8186"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"Chandan8186"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"Chandan8186"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"Chandan8186"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Chandan8186"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"Chandan8186"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"Chandan8186"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"Chandan8186"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Chandan8186"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"Chandan8186"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"Chandan8186"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"Chandan8186"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"Chandan8186"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"Chandan8186"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"Chandan8186"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"Chandan8186"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"Chandan8186"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"Chandan8186"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"Chandan8186"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"Chandan8186"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"Chandan8186"},"content":"    private void flip() {","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"Chandan8186"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"Chandan8186"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"Chandan8186"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"Chandan8186"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"Chandan8186"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"Chandan8186"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"Chandan8186"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"Chandan8186"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"Chandan8186"},"content":"        db.flip();","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"Chandan8186"},"content":"        return db;","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"Chandan8186"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"Chandan8186":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chandan8186"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Chandan8186"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"Chandan8186"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Chandan8186"},"content":"import tasks.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Chandan8186"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"Chandan8186"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Chandan8186"},"content":" * Duke is a chatbot that allows users to manage tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Chandan8186"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Chandan8186"},"content":"public class Duke {","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"Chandan8186"},"content":"    protected static TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"Chandan8186"},"content":"    protected static Storage storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Chandan8186"},"content":"     * Marks task as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Chandan8186"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Chandan8186"},"content":"     * @param index Index of task.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Chandan8186"},"content":"     * @return String to be shown to user.","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"Chandan8186"},"content":"     * @throws DukeException If index is out of range.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Chandan8186"},"content":"    public static String markTask(int index)","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"Chandan8186"},"content":"            throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Chandan8186"},"content":"        Task task \u003d Duke.taskList.markTaskAsDone(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Chandan8186"},"content":"        storage.saveChanges(Duke.taskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Chandan8186"},"content":"        return Ui.getTaskMarkingMessage(task);","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Chandan8186"},"content":"     * Marks task as not done.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Chandan8186"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Chandan8186"},"content":"     * @param index Index of task.","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Chandan8186"},"content":"     * @return String to be shown to user.","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"Chandan8186"},"content":"     * @throws DukeException If index is out of range.","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Chandan8186"},"content":"    public static String unmarkTask(int index)","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"Chandan8186"},"content":"            throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Chandan8186"},"content":"        Task task \u003d Duke.taskList.unmarkTask(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Chandan8186"},"content":"        storage.saveChanges(Duke.taskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Chandan8186"},"content":"        return Ui.getTaskUnmarkingMessage(task);","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Chandan8186"},"content":"     * Deletes task.","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Chandan8186"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Chandan8186"},"content":"     * @param index Index of task.","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"Chandan8186"},"content":"     * @return String to be shown to user.","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"Chandan8186"},"content":"     * @throws DukeException If index is out of range.","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"Chandan8186"},"content":"    public static String deleteTask(int index)","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"Chandan8186"},"content":"            throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"Chandan8186"},"content":"        Task task \u003d Duke.taskList.deleteTask(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"Chandan8186"},"content":"        storage.saveChanges(Duke.taskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"Chandan8186"},"content":"        return Ui.getTaskDeletingMessage(task, Duke.taskList.getSize());","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"Chandan8186"},"content":"     * Creates todo task.","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"Chandan8186"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"Chandan8186"},"content":"     * @param desc Description of task.","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"Chandan8186"},"content":"     * @return Message to be shown after task is created.","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"Chandan8186"},"content":"    public static String createTodo(String desc) {","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"Chandan8186"},"content":"        Task task \u003d Duke.taskList.addTodo(desc, 0);","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"Chandan8186"},"content":"        storage.saveChanges(Duke.taskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"Chandan8186"},"content":"        return Ui.getTaskAddingMessage(task, Duke.taskList.getSize());","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"Chandan8186"},"content":"     * Creates deadline task.","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"Chandan8186"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"Chandan8186"},"content":"     * @param desc     Description of task.","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"Chandan8186"},"content":"     * @param deadline Deadline date/time.","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"Chandan8186"},"content":"     * @return Message to be shown after task is created.","lastModifiedDate":"2023-09-04"},{"lineNumber":77,"author":{"gitId":"Chandan8186"},"content":"     * @throws DateTimeParseException If deadline doesn\u0027t match format \"yyyy-MM-dd HHmm\".","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"Chandan8186"},"content":"    public static String createDeadline(String desc, String deadline)","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"Chandan8186"},"content":"            throws DateTimeParseException {","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"Chandan8186"},"content":"        Task task \u003d Duke.taskList.addDeadline(desc, deadline, 0);","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"Chandan8186"},"content":"        storage.saveChanges(Duke.taskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"Chandan8186"},"content":"        return Ui.getTaskAddingMessage(task, Duke.taskList.getSize());","lastModifiedDate":"2023-09-04"},{"lineNumber":84,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":85,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":86,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"Chandan8186"},"content":"     * Creates event task.","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"Chandan8186"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"Chandan8186"},"content":"     * @param desc  Description of task.","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"Chandan8186"},"content":"     * @param start Start date/time.","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"Chandan8186"},"content":"     * @param end   End date/time.","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"Chandan8186"},"content":"     * @return Message to be shown after task is created.","lastModifiedDate":"2023-09-04"},{"lineNumber":93,"author":{"gitId":"Chandan8186"},"content":"     * @throws DateTimeParseException If start/end don\u0027t match format \"yyyy-MM-dd HHmm\".","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"Chandan8186"},"content":"    public static String createEvent(String desc, String start, String end)","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"Chandan8186"},"content":"            throws DateTimeParseException {","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"Chandan8186"},"content":"        Task task \u003d Duke.taskList.addEvent(desc, start, end, 0);","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"Chandan8186"},"content":"        storage.saveChanges(Duke.taskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"Chandan8186"},"content":"        return Ui.getTaskAddingMessage(task, Duke.taskList.getSize());","lastModifiedDate":"2023-09-04"},{"lineNumber":100,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":101,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":102,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"Chandan8186"},"content":"     * Gives list of current tasks in output message format.","lastModifiedDate":"2023-09-04"},{"lineNumber":104,"author":{"gitId":"Chandan8186"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"Chandan8186"},"content":"     * @return Message to be shown to user.","lastModifiedDate":"2023-09-04"},{"lineNumber":106,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"Chandan8186"},"content":"    public static String listTasks() {","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"Chandan8186"},"content":"        return Duke.taskList.toString();","lastModifiedDate":"2023-09-04"},{"lineNumber":109,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":110,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":111,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"Chandan8186"},"content":"     * Gives list of current tasks in output message format.","lastModifiedDate":"2023-09-04"},{"lineNumber":113,"author":{"gitId":"Chandan8186"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"Chandan8186"},"content":"     * @param keyword String of keyword.","lastModifiedDate":"2023-09-04"},{"lineNumber":115,"author":{"gitId":"Chandan8186"},"content":"     * @return Message to be shown to user.","lastModifiedDate":"2023-09-04"},{"lineNumber":116,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"Chandan8186"},"content":"    public static String listFilteredTasks(String keyword) {","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"Chandan8186"},"content":"        return Duke.taskList.getMatchingTasks(keyword);","lastModifiedDate":"2023-09-03"},{"lineNumber":119,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":122,"author":{"gitId":"Chandan8186"},"content":"     * Gives statistics of tasks in task list.","lastModifiedDate":"2023-09-10"},{"lineNumber":123,"author":{"gitId":"Chandan8186"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":124,"author":{"gitId":"Chandan8186"},"content":"     * @return String of statistics of tasks in task list.","lastModifiedDate":"2023-09-10"},{"lineNumber":125,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":126,"author":{"gitId":"Chandan8186"},"content":"    public static String getTaskStats() {","lastModifiedDate":"2023-09-10"},{"lineNumber":127,"author":{"gitId":"Chandan8186"},"content":"        return Duke.taskList.getTaskStats();","lastModifiedDate":"2023-09-10"},{"lineNumber":128,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":129,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":130,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"Chandan8186"},"content":"     * Gets the response string to be printed to the user after processing user input.","lastModifiedDate":"2023-09-04"},{"lineNumber":132,"author":{"gitId":"Chandan8186"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"Chandan8186"},"content":"     * @param userInput User input.","lastModifiedDate":"2023-09-04"},{"lineNumber":134,"author":{"gitId":"Chandan8186"},"content":"     * @return The response string.","lastModifiedDate":"2023-09-04"},{"lineNumber":135,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"Chandan8186"},"content":"    protected String getResponse(String userInput) {","lastModifiedDate":"2023-09-04"},{"lineNumber":137,"author":{"gitId":"Chandan8186"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-03"},{"lineNumber":138,"author":{"gitId":"Chandan8186"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":139,"author":{"gitId":"Chandan8186"},"content":"            output \u003d Parser.parseUserInput(userInput, Duke.taskList.getSize());","lastModifiedDate":"2023-09-03"},{"lineNumber":140,"author":{"gitId":"Chandan8186"},"content":"        } catch (RuntimeException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":141,"author":{"gitId":"Chandan8186"},"content":"            output \u003d e.getMessage();","lastModifiedDate":"2023-09-03"},{"lineNumber":142,"author":{"gitId":"Chandan8186"},"content":"        } finally {","lastModifiedDate":"2023-09-03"},{"lineNumber":143,"author":{"gitId":"Chandan8186"},"content":"            return output;","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"Chandan8186"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":145,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"Chandan8186"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"Chandan8186":147}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chandan8186"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Chandan8186"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Chandan8186"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Chandan8186"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Chandan8186"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Chandan8186"},"content":"public class Launcher {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Chandan8186"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Chandan8186"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Chandan8186"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"Chandan8186":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chandan8186"},"content":"package duke;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"Chandan8186"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"Chandan8186"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"Chandan8186"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"Chandan8186"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"Chandan8186"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"Chandan8186"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"Chandan8186"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"Chandan8186"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"Chandan8186"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"Chandan8186"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"Chandan8186"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"Chandan8186"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"Chandan8186"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"Chandan8186"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"Chandan8186"},"content":"            Storage storage \u003d new Storage(\"duke.txt\");","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"Chandan8186"},"content":"            duke.storage \u003d storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"Chandan8186"},"content":"            duke.taskList \u003d storage.retrieveSavedData();","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"Chandan8186"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"Chandan8186"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"Chandan8186"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"Chandan8186"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"Chandan8186"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"Chandan8186"},"content":"            stage.show();","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"Chandan8186"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"Chandan8186"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"Chandan8186"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"Chandan8186"},"content":"}","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"Chandan8186":36}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chandan8186"},"content":"package duke;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"Chandan8186"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"Chandan8186"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"Chandan8186"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"Chandan8186"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"Chandan8186"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"Chandan8186"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"Chandan8186"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"Chandan8186"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"Chandan8186"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"Chandan8186"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"Chandan8186"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"Chandan8186"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"Chandan8186"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"Chandan8186"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"Chandan8186"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"Chandan8186"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"Chandan8186"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"Chandan8186"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"Chandan8186"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"Chandan8186"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"Chandan8186"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"Chandan8186"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/userAvatar.png\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"Chandan8186"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/dukeAvatar.png\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"Chandan8186"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"Chandan8186"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"Chandan8186"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(Ui.getIntroMessage(), dukeImage));","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"Chandan8186"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"Chandan8186"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"Chandan8186"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"Chandan8186"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"Chandan8186"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"Chandan8186"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"Chandan8186"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"Chandan8186"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"Chandan8186"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"Chandan8186"},"content":"        DialogBox userDialog \u003d DialogBox.getUserDialog(input, userImage);","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"Chandan8186"},"content":"        userDialog.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"Chandan8186"},"content":"        DialogBox dukeDialog \u003d DialogBox.getDukeDialog(response, dukeImage);","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"Chandan8186"},"content":"        dukeDialog.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"Chandan8186"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"Chandan8186"},"content":"                userDialog,","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"Chandan8186"},"content":"                dukeDialog","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"Chandan8186"},"content":"        );","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"Chandan8186"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"Chandan8186"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"Chandan8186":60}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chandan8186"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Chandan8186"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Chandan8186"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Chandan8186"},"content":"import exceptions.InvalidDeadlineException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Chandan8186"},"content":"import exceptions.InvalidEventException;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Chandan8186"},"content":"import exceptions.InvalidIndexException;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Chandan8186"},"content":"import exceptions.InvalidTodoException;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Chandan8186"},"content":"import exceptions.UnknownCommandException;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Chandan8186"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Chandan8186"},"content":" * Parses user input and instructs Duke to act on the relevant command.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Chandan8186"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Chandan8186"},"content":"public class Parser {","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Chandan8186"},"content":"     * Parses the user input and asks Duke to invoke the relevant functions.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Chandan8186"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Chandan8186"},"content":"     * @param userInput The command and argument that the user enters.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Chandan8186"},"content":"     * @param taskListSize The current size of the task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Chandan8186"},"content":"     * @return The command of the user input, if valid.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Chandan8186"},"content":"     * @throws UnknownCommandException If the command doesn\u0027t match any of Duke\u0027s commands.","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Chandan8186"},"content":"     * @throws InvalidIndexException If the index provided is out of range, where relevant.","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Chandan8186"},"content":"     * @throws InvalidTodoException If the user input is invalid (e.g. no description).","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Chandan8186"},"content":"     * @throws InvalidDeadlineException If the user input is invalid (e.g. no deadline).","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Chandan8186"},"content":"     * @throws InvalidEventException If the user input is invalid (e.g. no start).","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Chandan8186"},"content":"    public static String parseUserInput(String userInput, int taskListSize)","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Chandan8186"},"content":"            throws UnknownCommandException,","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Chandan8186"},"content":"            InvalidIndexException,","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Chandan8186"},"content":"            InvalidTodoException,","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Chandan8186"},"content":"            InvalidDeadlineException,","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Chandan8186"},"content":"            InvalidEventException {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Chandan8186"},"content":"        String[] inputArr \u003d userInput.trim().split(\" \");","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Chandan8186"},"content":"        if (inputArr.length \u003d\u003d 0) {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Chandan8186"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Chandan8186"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Chandan8186"},"content":"        String command \u003d inputArr[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Chandan8186"},"content":"        switch(command) {","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Chandan8186"},"content":"        case \"list\":","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"Chandan8186"},"content":"            return Duke.listTasks();","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"Chandan8186"},"content":"        case \"stats\":","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"Chandan8186"},"content":"            return Duke.getTaskStats();","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"Chandan8186"},"content":"        case \"find\":","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Chandan8186"},"content":"            return parseFilter(userInput);","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"Chandan8186"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"Chandan8186"},"content":"            return parseMark(userInput, taskListSize);","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"Chandan8186"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"Chandan8186"},"content":"            return parseUnmark(userInput, taskListSize);","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"Chandan8186"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"Chandan8186"},"content":"            return parseDelete(userInput, taskListSize);","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"Chandan8186"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"Chandan8186"},"content":"            return parseTodo(userInput);","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"Chandan8186"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"Chandan8186"},"content":"            return parseDeadline(userInput);","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"Chandan8186"},"content":"        case \"event\":","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"Chandan8186"},"content":"            return parseEvent(userInput);","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"Chandan8186"},"content":"        case \"bye\":","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"Chandan8186"},"content":"            return Ui.getOutroMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"Chandan8186"},"content":"        default:","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"Chandan8186"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"Chandan8186"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"Chandan8186"},"content":"    private static String parseFilter(String userInput)","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"Chandan8186"},"content":"            throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"Chandan8186"},"content":"        String restOfInput \u003d userInput.trim().substring(4).trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"Chandan8186"},"content":"        if (restOfInput.equals(\"\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"Chandan8186"},"content":"            throw new DukeException(\"No keyword was provided, please enter again.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"Chandan8186"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"Chandan8186"},"content":"        return Duke.listFilteredTasks(restOfInput);","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"Chandan8186"},"content":"    private static String parseMark(String userInput, int taskListSize)","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"Chandan8186"},"content":"            throws InvalidIndexException {","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"Chandan8186"},"content":"        String restOfInput \u003d userInput.trim().substring(4).trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"Chandan8186"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"Chandan8186"},"content":"            int taskNum \u003d Integer.parseInt(restOfInput);","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"Chandan8186"},"content":"            return Duke.markTask(taskNum);","lastModifiedDate":"2023-09-04"},{"lineNumber":83,"author":{"gitId":"Chandan8186"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"Chandan8186"},"content":"            throw new InvalidIndexException(taskListSize);","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"Chandan8186"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"Chandan8186"},"content":"    private static String parseUnmark(String userInput, int taskListSize)","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"Chandan8186"},"content":"            throws InvalidIndexException {","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"Chandan8186"},"content":"        String restOfInput \u003d userInput.trim().substring(6).trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"Chandan8186"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"Chandan8186"},"content":"            int taskNum \u003d Integer.parseInt(restOfInput);","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"Chandan8186"},"content":"            return Duke.unmarkTask(taskNum);","lastModifiedDate":"2023-09-04"},{"lineNumber":94,"author":{"gitId":"Chandan8186"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":95,"author":{"gitId":"Chandan8186"},"content":"            throw new InvalidIndexException(taskListSize);","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"Chandan8186"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"Chandan8186"},"content":"    private static String parseDelete(String userInput, int taskListSize)","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"Chandan8186"},"content":"            throws InvalidIndexException {","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"Chandan8186"},"content":"        String restOfInput \u003d userInput.trim().substring(6).trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"Chandan8186"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"Chandan8186"},"content":"            int taskNum \u003d Integer.parseInt(restOfInput);","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"Chandan8186"},"content":"            return Duke.deleteTask(taskNum);","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"Chandan8186"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":106,"author":{"gitId":"Chandan8186"},"content":"            throw new InvalidIndexException(taskListSize);","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"Chandan8186"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"Chandan8186"},"content":"    private static String parseTodo(String userInput)","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"Chandan8186"},"content":"            throws InvalidTodoException {","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"Chandan8186"},"content":"        String restOfInput \u003d userInput.trim().substring(4).trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"Chandan8186"},"content":"        if (restOfInput.equals(\"\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"Chandan8186"},"content":"            throw new InvalidTodoException();","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"Chandan8186"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"Chandan8186"},"content":"        return Duke.createTodo(restOfInput);","lastModifiedDate":"2023-09-03"},{"lineNumber":117,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"Chandan8186"},"content":"    private static String parseDeadline(String userInput)","lastModifiedDate":"2023-09-03"},{"lineNumber":120,"author":{"gitId":"Chandan8186"},"content":"            throws InvalidDeadlineException {","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"Chandan8186"},"content":"        String restOfInput \u003d userInput.trim().substring(8).trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"Chandan8186"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"Chandan8186"},"content":"            if (!restOfInput.contains(\"/by\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"Chandan8186"},"content":"                throw new InvalidDeadlineException();","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"Chandan8186"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"Chandan8186"},"content":"            String[] arr \u003d restOfInput.split(\"/by\");","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"Chandan8186"},"content":"            if (arr.length \u003c 2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"Chandan8186"},"content":"                throw new InvalidDeadlineException();","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"Chandan8186"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"Chandan8186"},"content":"            String desc \u003d arr[0].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"Chandan8186"},"content":"            String deadline \u003d arr[1].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"Chandan8186"},"content":"            if (desc.equals(\"\") || deadline.equals(\"\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"Chandan8186"},"content":"                throw new InvalidDeadlineException();","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"Chandan8186"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"Chandan8186"},"content":"            return Duke.createDeadline(desc, deadline);","lastModifiedDate":"2023-09-03"},{"lineNumber":139,"author":{"gitId":"Chandan8186"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"Chandan8186"},"content":"            throw new InvalidDeadlineException();","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"Chandan8186"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"Chandan8186"},"content":"    private static String parseEvent(String userInput)","lastModifiedDate":"2023-09-03"},{"lineNumber":145,"author":{"gitId":"Chandan8186"},"content":"            throws InvalidEventException {","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"Chandan8186"},"content":"        String restOfInput \u003d userInput.trim().substring(5).trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"Chandan8186"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":148,"author":{"gitId":"Chandan8186"},"content":"            if (!restOfInput.contains(\"/from\") || !restOfInput.contains(\"/to\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":149,"author":{"gitId":"Chandan8186"},"content":"                throw new InvalidEventException();","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"Chandan8186"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":151,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":152,"author":{"gitId":"Chandan8186"},"content":"            String[] arr \u003d restOfInput.split(\"/from|/to\");","lastModifiedDate":"2023-08-29"},{"lineNumber":153,"author":{"gitId":"Chandan8186"},"content":"            if (arr.length \u003c 3) {","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"Chandan8186"},"content":"                throw new InvalidEventException();","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"Chandan8186"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"Chandan8186"},"content":"            String desc \u003d arr[0].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":158,"author":{"gitId":"Chandan8186"},"content":"            String start \u003d arr[1].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":159,"author":{"gitId":"Chandan8186"},"content":"            String end \u003d arr[2].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"Chandan8186"},"content":"            if (desc.equals(\"\") || start.equals(\"\") || end.equals(\"\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":162,"author":{"gitId":"Chandan8186"},"content":"                throw new InvalidEventException();","lastModifiedDate":"2023-08-29"},{"lineNumber":163,"author":{"gitId":"Chandan8186"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":164,"author":{"gitId":"Chandan8186"},"content":"            return Duke.createEvent(desc, start, end);","lastModifiedDate":"2023-09-03"},{"lineNumber":165,"author":{"gitId":"Chandan8186"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":166,"author":{"gitId":"Chandan8186"},"content":"            throw new InvalidEventException();","lastModifiedDate":"2023-08-29"},{"lineNumber":167,"author":{"gitId":"Chandan8186"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":168,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":169,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":170,"author":{"gitId":"Chandan8186"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Chandan8186":170}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chandan8186"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Chandan8186"},"content":"import java.io.File;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Chandan8186"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Chandan8186"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Chandan8186"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Chandan8186"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Chandan8186"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"Chandan8186"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"Chandan8186"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Chandan8186"},"content":" * Saves and retrieves tasks created by the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Chandan8186"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Chandan8186"},"content":"public class Storage {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Chandan8186"},"content":"    private final String FILENAME;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Chandan8186"},"content":"     * Constructor, initializes the file name indicated by the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Chandan8186"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Chandan8186"},"content":"     * @param filename Name of file to read or write task data to or from.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Chandan8186"},"content":"    public Storage(String filename) {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Chandan8186"},"content":"        assert !filename.equals(\"\") : \"File name should not be empty.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"Chandan8186"},"content":"        this.FILENAME \u003d filename;","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Chandan8186"},"content":"     * Obtains saved task data from data file and updates Duke with it.","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"Chandan8186"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Chandan8186"},"content":"     * @return A TaskList containing all the previously saved tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Chandan8186"},"content":"    public TaskList retrieveSavedData() {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Chandan8186"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Chandan8186"},"content":"            ArrayList\u003cString\u003e arr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"Chandan8186"},"content":"            File f \u003d new File(\"data/\" + FILENAME);","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Chandan8186"},"content":"            if (!f.exists()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"Chandan8186"},"content":"                return new TaskList();","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"Chandan8186"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"Chandan8186"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"Chandan8186"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"Chandan8186"},"content":"                String str \u003d s.nextLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"Chandan8186"},"content":"                arr.add(str);","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"Chandan8186"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"Chandan8186"},"content":"            s.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"Chandan8186"},"content":"            return populateTaskList(arr);","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"Chandan8186"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"Chandan8186"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"Chandan8186"},"content":"            return new TaskList();","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"Chandan8186"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"Chandan8186"},"content":"            System.out.println(\"There was an error parsing the data in the data file; \"","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"Chandan8186"},"content":"                    + \"the file might have been tampered with externally.\");","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"Chandan8186"},"content":"            System.out.println(\"Hence, the data will be cleared.\");","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"Chandan8186"},"content":"            return new TaskList();","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"Chandan8186"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"Chandan8186"},"content":"     * Parses stored task data and populates a TaskList with it.","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"Chandan8186"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"Chandan8186"},"content":"     * @param arr An array of tasks in the stored string format.","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"Chandan8186"},"content":"     * @return A TaskList of the said tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"Chandan8186"},"content":"    private TaskList populateTaskList(ArrayList\u003cString\u003e arr) {","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"Chandan8186"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"Chandan8186"},"content":"        for (String str : arr) {","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"Chandan8186"},"content":"            String[] segmented \u003d str.split(\"\\\\|\");","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"Chandan8186"},"content":"            String taskType \u003d segmented[0];","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"Chandan8186"},"content":"            int isMarked \u003d Integer.parseInt(segmented[1]);","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"Chandan8186"},"content":"            String desc \u003d segmented[2];","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"Chandan8186"},"content":"            String end;","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"Chandan8186"},"content":"            String start;","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"Chandan8186"},"content":"            switch (taskType) {","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"Chandan8186"},"content":"            case \"T\":","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"Chandan8186"},"content":"                taskList.addTodo(desc, isMarked);","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"Chandan8186"},"content":"                break;","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"Chandan8186"},"content":"            case \"D\":","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"Chandan8186"},"content":"                end \u003d segmented[3];","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"Chandan8186"},"content":"                taskList.addDeadline(desc, end, isMarked);","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"Chandan8186"},"content":"                break;","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"Chandan8186"},"content":"            case \"E\":","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"Chandan8186"},"content":"                end \u003d segmented[3];","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"Chandan8186"},"content":"                start \u003d segmented[4];","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"Chandan8186"},"content":"                taskList.addEvent(desc, start, end, isMarked);","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"Chandan8186"},"content":"                break;","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"Chandan8186"},"content":"            default:","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"Chandan8186"},"content":"                break;","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"Chandan8186"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":95,"author":{"gitId":"Chandan8186"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":96,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":97,"author":{"gitId":"Chandan8186"},"content":"        return taskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":98,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":99,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"Chandan8186"},"content":"     * Creates a new data file or opens the existing one to update it with the latest tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"Chandan8186"},"content":"     * The format of the task string is \"~tasktype~|~isMarked~|~desc~|~end~|~start~\".","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"Chandan8186"},"content":"     * Task type is T/D/E and isMarked is 0 for false and 1 for true.","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"Chandan8186"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"Chandan8186"},"content":"     * @param taskList The TaskList containing the latest tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"Chandan8186"},"content":"    public void saveChanges(TaskList taskList) {","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"Chandan8186"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":109,"author":{"gitId":"Chandan8186"},"content":"            File directory \u003d new File(\"data\");","lastModifiedDate":"2023-08-28"},{"lineNumber":110,"author":{"gitId":"Chandan8186"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":111,"author":{"gitId":"Chandan8186"},"content":"                directory.mkdirs();","lastModifiedDate":"2023-08-28"},{"lineNumber":112,"author":{"gitId":"Chandan8186"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":113,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":114,"author":{"gitId":"Chandan8186"},"content":"            FileWriter fileWriter \u003d new FileWriter(\"data/\" + FILENAME);","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"Chandan8186"},"content":"            fileWriter.write(\"\");","lastModifiedDate":"2023-08-28"},{"lineNumber":116,"author":{"gitId":"Chandan8186"},"content":"            fileWriter.append(taskList.getTextFormattedString());","lastModifiedDate":"2023-08-28"},{"lineNumber":117,"author":{"gitId":"Chandan8186"},"content":"            fileWriter.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":118,"author":{"gitId":"Chandan8186"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"Chandan8186"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-04"},{"lineNumber":120,"author":{"gitId":"Chandan8186"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":121,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":122,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":123,"author":{"gitId":"Chandan8186"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Chandan8186":123}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chandan8186"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Chandan8186"},"content":"import tasks.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Chandan8186"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Chandan8186"},"content":" * Provides formatted string outputs to be shown to user.","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"Chandan8186"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Chandan8186"},"content":"public class Ui {","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"Chandan8186"},"content":"    private static final String INTRO_MESSAGE \u003d \"Hello! I\u0027m ChatALot.\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"Chandan8186"},"content":"            + \"What can I do for you?\\n\";","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"Chandan8186"},"content":"    private static final String OUTRO_MESSAGE \u003d","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"Chandan8186"},"content":"            \"Bye. Hope to see you again soon!\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"Chandan8186"},"content":"            + \"You may close the window to end the chat.\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"Chandan8186"},"content":"    public static String getIntroMessage() {","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"Chandan8186"},"content":"        return INTRO_MESSAGE;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Chandan8186"},"content":"    public static String getOutroMessage() {","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"Chandan8186"},"content":"        return OUTRO_MESSAGE;","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Chandan8186"},"content":"     * Gives the formatted output for when a task is added.","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"Chandan8186"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Chandan8186"},"content":"     * @param task The task that was added.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Chandan8186"},"content":"     * @param taskListSize The task list size after the task was added.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Chandan8186"},"content":"     * @return The formatted output for when a task is added","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Chandan8186"},"content":"    public static String getTaskAddingMessage(Task task, int taskListSize) {","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"Chandan8186"},"content":"        return String.format(\"Got it. I\u0027ve added this task:\\n  %s\\nNow you have\"","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"Chandan8186"},"content":"                + \" %d tasks in the list.\", task, taskListSize);","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"Chandan8186"},"content":"     * Gives the formatted output for when a task is deleted.","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"Chandan8186"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"Chandan8186"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"Chandan8186"},"content":"     * @param taskListSize The task list size after the task was deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"Chandan8186"},"content":"     * @return The formatted output for when a task is deleted.","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"Chandan8186"},"content":"    public static String getTaskDeletingMessage(Task task, int taskListSize) {","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"Chandan8186"},"content":"        return String.format(\"Noted. I\u0027ve removed this task:\\n  %s\\nNow you have\"","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"Chandan8186"},"content":"                + \" %d tasks in the list.\", task, taskListSize);","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"Chandan8186"},"content":"     * Gives the formatted output for when a task is marked complete.","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"Chandan8186"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"Chandan8186"},"content":"     * @param task Task that was marked complete.","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"Chandan8186"},"content":"     * @return The formatted output for when a task is marked complete.","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"Chandan8186"},"content":"    public static String getTaskMarkingMessage(Task task) {","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"Chandan8186"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"Chandan8186"},"content":"                + \"  \"","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"Chandan8186"},"content":"                + task;","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"Chandan8186"},"content":"     * Gives the formatted output for when a task is marked incomplete.","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"Chandan8186"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"Chandan8186"},"content":"     * @param task Task that was marked incomplete.","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"Chandan8186"},"content":"     * @return The formatted output for when a task is marked incomplete.","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"Chandan8186"},"content":"    public static String getTaskUnmarkingMessage(Task task) {","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"Chandan8186"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"Chandan8186"},"content":"                + \"  \"","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"Chandan8186"},"content":"                + task;","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"Chandan8186"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Chandan8186":72}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chandan8186"},"content":"package exceptions;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Chandan8186"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Chandan8186"},"content":" * A runtime exception thrown by Duke chatbot.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Chandan8186"},"content":" * All other duke-specific exceptions will extend DukeException.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Chandan8186"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Chandan8186"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Chandan8186"},"content":"     * Constructor, initialises the error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Chandan8186"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Chandan8186"},"content":"     * @param errorMessage Error message to be shown.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Chandan8186"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"Chandan8186"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"Chandan8186"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Chandan8186":17}},{"path":"src/main/java/exceptions/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chandan8186"},"content":"package exceptions;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Chandan8186"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Chandan8186"},"content":" * A DukeException for invalid deadline task command.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Chandan8186"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Chandan8186"},"content":"public class InvalidDeadlineException extends DukeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Chandan8186"},"content":"     * Constructor, initializes the error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Chandan8186"},"content":"    public InvalidDeadlineException() {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Chandan8186"},"content":"        super(\"Missing description/end for deadline task.\\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Chandan8186"},"content":"                + \"Format should be: deadline \u003ctask description\u003e /by \u003cyyyy-MM-dd HHmm\u003e\");","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"Chandan8186"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Chandan8186":15}},{"path":"src/main/java/exceptions/InvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chandan8186"},"content":"package exceptions;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Chandan8186"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Chandan8186"},"content":" * A DukeException for invalid event task command.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Chandan8186"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Chandan8186"},"content":"public class InvalidEventException extends DukeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Chandan8186"},"content":"     * Constructor, initializes the error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Chandan8186"},"content":"    public InvalidEventException() {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Chandan8186"},"content":"        super(\"Missing description/start/end for event task.\\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Chandan8186"},"content":"                + \"Format should be: event \u003ctask description\u003e \"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Chandan8186"},"content":"                + \"/from \u003cyyyy-MM-dd HHmm\u003e /to \u003cyyyy-MM-dd HHmm\u003e\");","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"Chandan8186"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Chandan8186":16}},{"path":"src/main/java/exceptions/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chandan8186"},"content":"package exceptions;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Chandan8186"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Chandan8186"},"content":" * A DukeException for invalid index when marking, unmarking or deleting task.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Chandan8186"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Chandan8186"},"content":"public class InvalidIndexException extends DukeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Chandan8186"},"content":"     * Constructor, initializes the error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Chandan8186"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Chandan8186"},"content":"     * @param listSize The size of the current task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Chandan8186"},"content":"    public InvalidIndexException(int listSize) {","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"Chandan8186"},"content":"        super(String.format(\"Invalid index format.\\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Chandan8186"},"content":"                + \"Format should be: mark \u003ctask index\u003e OR unmark \u003ctask index\u003e \"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Chandan8186"},"content":"                + \"OR delete \u003ctask index\u003e\\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Chandan8186"},"content":"                + \"where index is from 1 to %d.\", listSize));","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"Chandan8186"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Chandan8186":19}},{"path":"src/main/java/exceptions/InvalidTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chandan8186"},"content":"package exceptions;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Chandan8186"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Chandan8186"},"content":" * A DukeException for invalid event task command.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Chandan8186"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Chandan8186"},"content":"public class InvalidTodoException extends DukeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Chandan8186"},"content":"     * Constructor, initializes the error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Chandan8186"},"content":"    public InvalidTodoException() {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Chandan8186"},"content":"        super(\"Missing description for todo task.\\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Chandan8186"},"content":"                + \"Format should be: todo \u003ctask description\u003e\");","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"Chandan8186"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Chandan8186":15}},{"path":"src/main/java/exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chandan8186"},"content":"package exceptions;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Chandan8186"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Chandan8186"},"content":" * A DukeException for an unknown command by the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Chandan8186"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Chandan8186"},"content":"public class UnknownCommandException extends DukeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Chandan8186"},"content":"     * Constructor, initializes the error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Chandan8186"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Chandan8186"},"content":"        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"Chandan8186"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Chandan8186":14}},{"path":"src/main/java/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chandan8186"},"content":"package tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"Chandan8186"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"Chandan8186"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Chandan8186"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"Chandan8186"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Chandan8186"},"content":" * A deadline task.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Chandan8186"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Chandan8186"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"Chandan8186"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"Chandan8186"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Chandan8186"},"content":"    private static final DateTimeFormatter DISPLAY_FORMAT \u003d","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"Chandan8186"},"content":"            DateTimeFormatter.ofPattern(\"dd-MMM-yyyy HHmm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Chandan8186"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Chandan8186"},"content":"     * Constructor, initializes task description, deadline and isMarked.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Chandan8186"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Chandan8186"},"content":"     * @param desc Task description.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Chandan8186"},"content":"     * @param deadline Deadline date/time of task.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Chandan8186"},"content":"     * @param isMarked 1 if is marked, 0 otherwise.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Chandan8186"},"content":"    public DeadlineTask(String desc, LocalDateTime deadline, int isMarked) {","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Chandan8186"},"content":"        super(desc);","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"Chandan8186"},"content":"        assert deadline !\u003d null : \"Deadline should not be null.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"Chandan8186"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"Chandan8186"},"content":"        if (isMarked \u003d\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"Chandan8186"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"Chandan8186"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"Chandan8186"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"Chandan8186"},"content":"    public boolean checkIfTaskDueToday() {","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"Chandan8186"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"Chandan8186"},"content":"        LocalDate taskDate \u003d this.deadline.toLocalDate();","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"Chandan8186"},"content":"        return currentDate.equals(taskDate);","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"Chandan8186"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"Chandan8186"},"content":"    protected String getTextFormattedString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"Chandan8186"},"content":"        return String.format(\"D|%d|%s|%s\", this.isDone ? 1 : 0,","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"Chandan8186"},"content":"                this.desc, this.deadline.format(INPUT_FORMAT));","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"Chandan8186"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"Chandan8186"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":49,"author":{"gitId":"Chandan8186"},"content":"        return String.format(\"[D]%s (by: %s)\",","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"Chandan8186"},"content":"                super.toString(),","lastModifiedDate":"2023-08-20"},{"lineNumber":51,"author":{"gitId":"Chandan8186"},"content":"                this.deadline.format(DISPLAY_FORMAT));","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":53,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":54,"author":{"gitId":"Chandan8186"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"Chandan8186":54}},{"path":"src/main/java/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chandan8186"},"content":"package tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"Chandan8186"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"Chandan8186"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Chandan8186"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Chandan8186"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Chandan8186"},"content":" * An event task.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Chandan8186"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Chandan8186"},"content":"public class EventTask extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"Chandan8186"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"Chandan8186"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Chandan8186"},"content":"    private static final DateTimeFormatter DISPLAY_FORMAT \u003d","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"Chandan8186"},"content":"            DateTimeFormatter.ofPattern(\"dd-MMM-yyyy HHmm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"Chandan8186"},"content":"    private final LocalDateTime start;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"Chandan8186"},"content":"    private final LocalDateTime end;","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Chandan8186"},"content":"     * Constructor, initializes task description, start, end and isMarked.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Chandan8186"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Chandan8186"},"content":"     * @param desc Task description.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Chandan8186"},"content":"     * @param start Start date/time of task.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Chandan8186"},"content":"     * @param end End date/time of task.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Chandan8186"},"content":"     * @param isMarked 1 if is marked, 0 otherwise.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Chandan8186"},"content":"    public EventTask(String desc, LocalDateTime start, LocalDateTime end, int isMarked) {","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"Chandan8186"},"content":"        super(desc);","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"Chandan8186"},"content":"        assert start !\u003d null : \"Start should not be null.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"Chandan8186"},"content":"        assert end !\u003d null : \"End should not be null.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"Chandan8186"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"Chandan8186"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"Chandan8186"},"content":"        if (isMarked \u003d\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"Chandan8186"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"Chandan8186"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"Chandan8186"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"Chandan8186"},"content":"    public boolean checkIfTaskDueToday() {","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"Chandan8186"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"Chandan8186"},"content":"        LocalDate taskDate \u003d this.end.toLocalDate();","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"Chandan8186"},"content":"        return currentDate.equals(taskDate);","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"Chandan8186"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"Chandan8186"},"content":"    protected String getTextFormattedString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"Chandan8186"},"content":"        return String.format(\"E|%d|%s|%s|%s\", this.isDone ? 1 : 0, this.desc,","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"Chandan8186"},"content":"                this.end.format(INPUT_FORMAT),","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"Chandan8186"},"content":"                this.start.format(INPUT_FORMAT));","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"Chandan8186"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":54,"author":{"gitId":"Chandan8186"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":55,"author":{"gitId":"Chandan8186"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\",","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"Chandan8186"},"content":"                super.toString(),","lastModifiedDate":"2023-08-20"},{"lineNumber":57,"author":{"gitId":"Chandan8186"},"content":"                this.start.format(DISPLAY_FORMAT),","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"Chandan8186"},"content":"                this.end.format(DISPLAY_FORMAT));","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":60,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":61,"author":{"gitId":"Chandan8186"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"Chandan8186":61}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chandan8186"},"content":"package tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"Chandan8186"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Chandan8186"},"content":" * Abstract class representing a task.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Chandan8186"},"content":" * All specific tasks will be its child classes.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Chandan8186"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Chandan8186"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Chandan8186"},"content":"    /** The task description */","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Chandan8186"},"content":"    protected String desc;","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Chandan8186"},"content":"    /** Boolean indicating completion status */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Chandan8186"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Chandan8186"},"content":"     * Constructor, initializes task description.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Chandan8186"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Chandan8186"},"content":"     * @param desc Task Description.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Chandan8186"},"content":"    public Task(String desc) {","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"Chandan8186"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"Chandan8186"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"Chandan8186"},"content":"    /** Method signature for abstract method getTextFormattedString */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Chandan8186"},"content":"    protected abstract String getTextFormattedString();","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Chandan8186"},"content":"    /** Method signature for abstract method checkIfTaskDueToday */","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"Chandan8186"},"content":"    public abstract boolean checkIfTaskDueToday();","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Chandan8186"},"content":"     * Returns string representation of completion status.","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Chandan8186"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Chandan8186"},"content":"     * @return String representation of completion status.","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Chandan8186"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"Chandan8186"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Chandan8186"},"content":"     * Marks task as done.","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Chandan8186"},"content":"    protected void markAsDone() {","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"Chandan8186"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":46,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":47,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"Chandan8186"},"content":"     * Marks task as not done.","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"Chandan8186"},"content":"    protected void unmark() {","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"Chandan8186"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":52,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":53,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":54,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"Chandan8186"},"content":"     * Returns string representation of task.","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"Chandan8186"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"Chandan8186"},"content":"     * @return String representation of task.","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"Chandan8186"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":60,"author":{"gitId":"Chandan8186"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":61,"author":{"gitId":"Chandan8186"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), this.desc);","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":63,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":64,"author":{"gitId":"Chandan8186"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"Chandan8186":64}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chandan8186"},"content":"package tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"Chandan8186"},"content":"import java.lang.StringBuilder;","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"Chandan8186"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"Chandan8186"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Chandan8186"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Chandan8186"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Chandan8186"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"Chandan8186"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Chandan8186"},"content":"import exceptions.InvalidIndexException;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Chandan8186"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Chandan8186"},"content":" * Represents a list of all user tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Chandan8186"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Chandan8186"},"content":"public class TaskList {","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"Chandan8186"},"content":"    protected static final DateTimeFormatter DATETIME_FORMAT \u003d","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Chandan8186"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Chandan8186"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Chandan8186"},"content":"     * Constructor, initializes array list.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Chandan8186"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"Chandan8186"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Chandan8186"},"content":"     * Creates a todo task.","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Chandan8186"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"Chandan8186"},"content":"     * @param desc Description of task.","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Chandan8186"},"content":"     * @param isMarked If task is marked, 1, else, 0.","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Chandan8186"},"content":"     * @return A todo task.","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Chandan8186"},"content":"    public Task addTodo(String desc, int isMarked) {","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"Chandan8186"},"content":"        assert isMarked \u003d\u003d 0 || isMarked \u003d\u003d 1 : \"isMarked must be 0 or 1.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"Chandan8186"},"content":"        Task task \u003d new TodoTask(desc, isMarked);","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"Chandan8186"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"Chandan8186"},"content":"        return task;","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Chandan8186"},"content":"     * Creates a deadline task.","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"Chandan8186"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"Chandan8186"},"content":"     * @param desc Description of task.","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"Chandan8186"},"content":"     * @param deadline Deadline date/time of task.","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"Chandan8186"},"content":"     * @param isMarked If task is marked, 1, else, 0.","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"Chandan8186"},"content":"     * @return A deadline task.","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"Chandan8186"},"content":"     * @throws DateTimeParseException If deadline doesn\u0027t have format \"yyyy-MM-dd HHmm\".","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"Chandan8186"},"content":"    public Task addDeadline(String desc, String deadline, int isMarked)","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"Chandan8186"},"content":"            throws DateTimeParseException {","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"Chandan8186"},"content":"        assert isMarked \u003d\u003d 0 || isMarked \u003d\u003d 1 : \"isMarked must be 0 or 1.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"Chandan8186"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(deadline, DATETIME_FORMAT);","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"Chandan8186"},"content":"        Task task \u003d new DeadlineTask(desc, dateTime, isMarked);","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"Chandan8186"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"Chandan8186"},"content":"        return task;","lastModifiedDate":"2023-08-20"},{"lineNumber":58,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":59,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":60,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"Chandan8186"},"content":"     * Creates an event task.","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"Chandan8186"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"Chandan8186"},"content":"     * @param desc Description of task.","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"Chandan8186"},"content":"     * @param start Start date/time of task.","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"Chandan8186"},"content":"     * @param end End date/time of task.","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"Chandan8186"},"content":"     * @param isMarked If task is marked, 1, else, 0.","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"Chandan8186"},"content":"     * @return An event task.","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"Chandan8186"},"content":"     * @throws DateTimeParseException If start/end doesn\u0027t have format \"yyyy-MM-dd HHmm\".","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"Chandan8186"},"content":"    public Task addEvent(String desc, String start, String end, int isMarked)","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"Chandan8186"},"content":"            throws DateTimeParseException {","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"Chandan8186"},"content":"        assert isMarked \u003d\u003d 0 || isMarked \u003d\u003d 1 : \"isMarked must be 0 or 1.\";","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"Chandan8186"},"content":"        LocalDateTime dateTimeStart \u003d LocalDateTime.parse(start, DATETIME_FORMAT);","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"Chandan8186"},"content":"        LocalDateTime dateTimeEnd \u003d LocalDateTime.parse(end, DATETIME_FORMAT);","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"Chandan8186"},"content":"        Task task \u003d new EventTask(desc, dateTimeStart, dateTimeEnd, isMarked);","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"Chandan8186"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"Chandan8186"},"content":"        return task;","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"Chandan8186"},"content":"     * Marks task as done.","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"Chandan8186"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"Chandan8186"},"content":"     * @param i Index of task to be marked done.","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"Chandan8186"},"content":"     * @return Task which was marked done.","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"Chandan8186"},"content":"    public Task markTaskAsDone(int i) {","lastModifiedDate":"2023-08-20"},{"lineNumber":87,"author":{"gitId":"Chandan8186"},"content":"        if (this.tasks.size() \u003c 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"Chandan8186"},"content":"            throw new DukeException(\"The task list is empty.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"Chandan8186"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"Chandan8186"},"content":"        if (i \u003c 1 || i \u003e this.tasks.size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"Chandan8186"},"content":"            throw new InvalidIndexException(this.tasks.size());","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"Chandan8186"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"Chandan8186"},"content":"        Task task \u003d this.tasks.get(i - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"Chandan8186"},"content":"        task.markAsDone();","lastModifiedDate":"2023-08-20"},{"lineNumber":95,"author":{"gitId":"Chandan8186"},"content":"        return task;","lastModifiedDate":"2023-08-20"},{"lineNumber":96,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":97,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":98,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"Chandan8186"},"content":"     * Marks task as not done.","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"Chandan8186"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"Chandan8186"},"content":"     * @param i Index of task to be marked not done.","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"Chandan8186"},"content":"     * @return Task which was marked not done.","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"Chandan8186"},"content":"    public Task unmarkTask(int i) {","lastModifiedDate":"2023-08-20"},{"lineNumber":105,"author":{"gitId":"Chandan8186"},"content":"        if (this.tasks.size() \u003c 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"Chandan8186"},"content":"            throw new DukeException(\"The task list is empty.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"Chandan8186"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"Chandan8186"},"content":"        if (i \u003c 1 || i \u003e this.tasks.size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"Chandan8186"},"content":"            throw new InvalidIndexException(this.tasks.size());","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"Chandan8186"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"Chandan8186"},"content":"        Task task \u003d this.tasks.get(i - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"Chandan8186"},"content":"        task.unmark();","lastModifiedDate":"2023-08-20"},{"lineNumber":113,"author":{"gitId":"Chandan8186"},"content":"        return task;","lastModifiedDate":"2023-08-20"},{"lineNumber":114,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":115,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":116,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"Chandan8186"},"content":"     * Deletes a task.","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"Chandan8186"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"Chandan8186"},"content":"     * @param i Index of task to be deleted.","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"Chandan8186"},"content":"     * @return The deleted task.","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"Chandan8186"},"content":"    public Task deleteTask(int i) {","lastModifiedDate":"2023-08-22"},{"lineNumber":123,"author":{"gitId":"Chandan8186"},"content":"        if (this.tasks.size() \u003c 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"Chandan8186"},"content":"            throw new DukeException(\"The task list is empty.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"Chandan8186"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"Chandan8186"},"content":"        if (i \u003c 1 || i \u003e this.tasks.size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"Chandan8186"},"content":"            throw new InvalidIndexException(this.tasks.size());","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"Chandan8186"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"Chandan8186"},"content":"        return this.tasks.remove(i - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":131,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":132,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"Chandan8186"},"content":"     * Returns size of task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"Chandan8186"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"Chandan8186"},"content":"     * @return Size of task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"Chandan8186"},"content":"    public int getSize() {","lastModifiedDate":"2023-08-20"},{"lineNumber":138,"author":{"gitId":"Chandan8186"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":140,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":141,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"Chandan8186"},"content":"     * Returns the task list in the relevant format for storing in data file.","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"Chandan8186"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"Chandan8186"},"content":"     * @return The task list string with the relevant format.","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"Chandan8186"},"content":"    public String getTextFormattedString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":147,"author":{"gitId":"Chandan8186"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2023-08-27"},{"lineNumber":148,"author":{"gitId":"Chandan8186"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"Chandan8186"},"content":"            str.append(task.getTextFormattedString() + \"\\n\");","lastModifiedDate":"2023-08-27"},{"lineNumber":150,"author":{"gitId":"Chandan8186"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":151,"author":{"gitId":"Chandan8186"},"content":"        return str.toString();","lastModifiedDate":"2023-08-27"},{"lineNumber":152,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":153,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":154,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"Chandan8186"},"content":"     * Returns string representation of filtered task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"Chandan8186"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"Chandan8186"},"content":"     * @return String representation of filtered task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"Chandan8186"},"content":"    public String getMatchingTasks(String keyword) {","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"Chandan8186"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"Chandan8186"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"Chandan8186"},"content":"            if (task.desc.contains(keyword)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"Chandan8186"},"content":"                filteredTasks.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"Chandan8186"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"Chandan8186"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"Chandan8186"},"content":"        if (filteredTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"Chandan8186"},"content":"            return \"No task matches the given keyword.\";","lastModifiedDate":"2023-08-30"},{"lineNumber":168,"author":{"gitId":"Chandan8186"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":169,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":170,"author":{"gitId":"Chandan8186"},"content":"        StringBuilder str \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":171,"author":{"gitId":"Chandan8186"},"content":"        for (int i \u003d 1; i \u003c\u003d filteredTasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":172,"author":{"gitId":"Chandan8186"},"content":"            str.append(i + \". \" + filteredTasks.get(i - 1).toString() + \"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":173,"author":{"gitId":"Chandan8186"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":174,"author":{"gitId":"Chandan8186"},"content":"        return str.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":175,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":176,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":177,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":178,"author":{"gitId":"Chandan8186"},"content":"     * Gives details of tasks.","lastModifiedDate":"2023-09-10"},{"lineNumber":179,"author":{"gitId":"Chandan8186"},"content":"     * Specifically, number of completed and incomplete tasks,","lastModifiedDate":"2023-09-10"},{"lineNumber":180,"author":{"gitId":"Chandan8186"},"content":"     * and deadline and event tasks due today.","lastModifiedDate":"2023-09-10"},{"lineNumber":181,"author":{"gitId":"Chandan8186"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":182,"author":{"gitId":"Chandan8186"},"content":"     * @return Details of tasks.","lastModifiedDate":"2023-09-10"},{"lineNumber":183,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":184,"author":{"gitId":"Chandan8186"},"content":"    public String getTaskStats() {","lastModifiedDate":"2023-09-10"},{"lineNumber":185,"author":{"gitId":"Chandan8186"},"content":"        long numOfCompletedTasks \u003d this.tasks.stream()","lastModifiedDate":"2023-09-10"},{"lineNumber":186,"author":{"gitId":"Chandan8186"},"content":"                .filter(task -\u003e task.isDone)","lastModifiedDate":"2023-09-10"},{"lineNumber":187,"author":{"gitId":"Chandan8186"},"content":"                .count();","lastModifiedDate":"2023-09-10"},{"lineNumber":188,"author":{"gitId":"Chandan8186"},"content":"        long numOfIncompleteTasks \u003d this.tasks.size() - numOfCompletedTasks;","lastModifiedDate":"2023-09-10"},{"lineNumber":189,"author":{"gitId":"Chandan8186"},"content":"        StringBuilder deadlineTasksDueToday \u003d new StringBuilder();","lastModifiedDate":"2023-09-10"},{"lineNumber":190,"author":{"gitId":"Chandan8186"},"content":"        StringBuilder eventTasksDueToday \u003d new StringBuilder();","lastModifiedDate":"2023-09-10"},{"lineNumber":191,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":192,"author":{"gitId":"Chandan8186"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2023-09-10"},{"lineNumber":193,"author":{"gitId":"Chandan8186"},"content":"            if (!task.checkIfTaskDueToday() || task.isDone) {","lastModifiedDate":"2023-09-10"},{"lineNumber":194,"author":{"gitId":"Chandan8186"},"content":"                continue;","lastModifiedDate":"2023-09-10"},{"lineNumber":195,"author":{"gitId":"Chandan8186"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":196,"author":{"gitId":"Chandan8186"},"content":"            if (task instanceof DeadlineTask) {","lastModifiedDate":"2023-09-10"},{"lineNumber":197,"author":{"gitId":"Chandan8186"},"content":"                deadlineTasksDueToday.append(task + \"\\n\");","lastModifiedDate":"2023-09-10"},{"lineNumber":198,"author":{"gitId":"Chandan8186"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":199,"author":{"gitId":"Chandan8186"},"content":"            if (task instanceof EventTask) {","lastModifiedDate":"2023-09-10"},{"lineNumber":200,"author":{"gitId":"Chandan8186"},"content":"                eventTasksDueToday.append(task + \"\\n\");","lastModifiedDate":"2023-09-10"},{"lineNumber":201,"author":{"gitId":"Chandan8186"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":202,"author":{"gitId":"Chandan8186"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":203,"author":{"gitId":"Chandan8186"},"content":"        return String.format(\"Number of completed tasks: %d\\n\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":204,"author":{"gitId":"Chandan8186"},"content":"                + \"Number of incomplete tasks: %d\\n\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":205,"author":{"gitId":"Chandan8186"},"content":"                + \"Deadline tasks due today: \\n%s\\n\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":206,"author":{"gitId":"Chandan8186"},"content":"                + \"Event tasks due today: \\n%s\",","lastModifiedDate":"2023-09-10"},{"lineNumber":207,"author":{"gitId":"Chandan8186"},"content":"                numOfCompletedTasks,","lastModifiedDate":"2023-09-10"},{"lineNumber":208,"author":{"gitId":"Chandan8186"},"content":"                numOfIncompleteTasks,","lastModifiedDate":"2023-09-10"},{"lineNumber":209,"author":{"gitId":"Chandan8186"},"content":"                deadlineTasksDueToday,","lastModifiedDate":"2023-09-10"},{"lineNumber":210,"author":{"gitId":"Chandan8186"},"content":"                eventTasksDueToday);","lastModifiedDate":"2023-09-10"},{"lineNumber":211,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":212,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":213,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":214,"author":{"gitId":"Chandan8186"},"content":"     * Returns string representation of task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":215,"author":{"gitId":"Chandan8186"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":216,"author":{"gitId":"Chandan8186"},"content":"     * @return String representation of task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":217,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":218,"author":{"gitId":"Chandan8186"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":219,"author":{"gitId":"Chandan8186"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":220,"author":{"gitId":"Chandan8186"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2023-08-20"},{"lineNumber":221,"author":{"gitId":"Chandan8186"},"content":"        int len \u003d this.tasks.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":222,"author":{"gitId":"Chandan8186"},"content":"        if (len \u003d\u003d 0) {","lastModifiedDate":"2023-08-20"},{"lineNumber":223,"author":{"gitId":"Chandan8186"},"content":"            return \"The task list is empty.\";","lastModifiedDate":"2023-08-20"},{"lineNumber":224,"author":{"gitId":"Chandan8186"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":225,"author":{"gitId":"Chandan8186"},"content":"        str.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-08-20"},{"lineNumber":226,"author":{"gitId":"Chandan8186"},"content":"        for (int i \u003d 1; i \u003c len; i++) {","lastModifiedDate":"2023-08-20"},{"lineNumber":227,"author":{"gitId":"Chandan8186"},"content":"            str.append(i + \". \" + this.tasks.get(i - 1) + \"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":228,"author":{"gitId":"Chandan8186"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":229,"author":{"gitId":"Chandan8186"},"content":"        str.append(len + \". \" + this.tasks.get(len - 1));","lastModifiedDate":"2023-08-30"},{"lineNumber":230,"author":{"gitId":"Chandan8186"},"content":"        return str.toString();","lastModifiedDate":"2023-08-20"},{"lineNumber":231,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":232,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":233,"author":{"gitId":"Chandan8186"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"Chandan8186":233}},{"path":"src/main/java/tasks/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chandan8186"},"content":"package tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"Chandan8186"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Chandan8186"},"content":" * A todo task.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Chandan8186"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Chandan8186"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"Chandan8186"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Chandan8186"},"content":"     * Constructor, initializes task description and isMarked.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Chandan8186"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Chandan8186"},"content":"     * @param desc Task description.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Chandan8186"},"content":"     * @param isMarked 1 if is marked, 0 otherwise.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Chandan8186"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Chandan8186"},"content":"    public TodoTask(String desc, int isMarked) {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"Chandan8186"},"content":"        super(desc);","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"Chandan8186"},"content":"        if (isMarked \u003d\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"Chandan8186"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"Chandan8186"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"Chandan8186"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"Chandan8186"},"content":"    public boolean checkIfTaskDueToday() {","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"Chandan8186"},"content":"        return false;","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"Chandan8186"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"Chandan8186"},"content":"    protected String getTextFormattedString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"Chandan8186"},"content":"        return String.format(\"T|%d|%s\", this.isDone ? 1 : 0, this.desc);","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"Chandan8186"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"Chandan8186"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"Chandan8186"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"Chandan8186"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"Chandan8186":36}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Chandan8186"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"Chandan8186"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"Chandan8186"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"Chandan8186"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"Chandan8186"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"Chandan8186"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"Chandan8186"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"Chandan8186"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"Chandan8186"},"content":"               style\u003d\"-fx-background-color: #CCEBF5 ; -fx-background-radius: 12px; -fx-border-color: black; -fx-border-radius: 12px;\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"Chandan8186"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"Chandan8186"},"content":"                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\"/\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"Chandan8186"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"Chandan8186"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"Chandan8186"},"content":"                \u003cInsets bottom\u003d\"6.0\" left\u003d\"6.0\" right\u003d\"6.0\" top\u003d\"6.0\"/\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"Chandan8186"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"Chandan8186"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"Chandan8186"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"Chandan8186"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"Chandan8186"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"Chandan8186"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"Chandan8186"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"Chandan8186"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"Chandan8186":24}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Chandan8186"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"Chandan8186"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"Chandan8186"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"Chandan8186"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"Chandan8186"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"Chandan8186"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"Chandan8186"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"Chandan8186"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"Chandan8186"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" style\u003d\"-fx-border-radius: 20px; -fx-background-radius: 20px;\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"Chandan8186"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-border-radius: 20px; -fx-background-radius: 20px;\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"Chandan8186"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" maxHeight\u003d\"1.7976931348623157E308\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"Chandan8186"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"Chandan8186"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"Chandan8186"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"Chandan8186"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"Chandan8186"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"Chandan8186"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"Chandan8186":19}},{"path":"src/test/java/tasks/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chandan8186"},"content":"package tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Chandan8186"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Chandan8186"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Chandan8186"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Chandan8186"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Chandan8186"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Chandan8186"},"content":"    public void testTodoTask_validInput_expectedOutcome() {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Chandan8186"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Chandan8186"},"content":"        Task todoTask \u003d taskList.addTodo(\"some todo\", 0);","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Chandan8186"},"content":"        assertEquals(\"[T][ ] some todo\", todoTask.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Chandan8186"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Chandan8186"},"content":"    public void testDeadlineTask_validInput_expectedOutcome() {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Chandan8186"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Chandan8186"},"content":"        Task deadlineTask \u003d taskList.addDeadline(\"some deadline\",","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Chandan8186"},"content":"                \"2023-01-01 1500\",","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Chandan8186"},"content":"                0);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Chandan8186"},"content":"        String expected \u003d \"[D][ ] some deadline (by: 01-Jan-2023 1500)\";","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Chandan8186"},"content":"        assertEquals(expected, deadlineTask.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Chandan8186"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Chandan8186"},"content":"    public void testDeadlineTask_invalidDatetime_exceptionThrown() {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Chandan8186"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Chandan8186"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Chandan8186"},"content":"            taskList.addDeadline(\"some deadline\",","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Chandan8186"},"content":"                    \"2023-01-01 later\",","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Chandan8186"},"content":"                    0);","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Chandan8186"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Chandan8186"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Chandan8186"},"content":"            String expected \u003d \"Text \u00272023-01-01 later\u0027 could not be parsed at index 11\";","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Chandan8186"},"content":"            assertEquals(expected, e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Chandan8186"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Chandan8186"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Chandan8186"},"content":"    public void testEventTask_validInput_expectedOutcome() {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Chandan8186"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Chandan8186"},"content":"        Task eventTask \u003d taskList.addEvent(\"some event\",","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"Chandan8186"},"content":"                \"2023-01-01 1530\",","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"Chandan8186"},"content":"                \"2023-01-01 1600\",","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"Chandan8186"},"content":"                0);","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"Chandan8186"},"content":"        String expected \u003d \"[E][ ] some event (from: 01-Jan-2023 1530 to: 01-Jan-2023 1600)\";","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"Chandan8186"},"content":"        assertEquals(expected, eventTask.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"Chandan8186"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"Chandan8186"},"content":"    public void testEventTask_invalidDatetime_exceptionThrown() {","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"Chandan8186"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"Chandan8186"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"Chandan8186"},"content":"            taskList.addEvent(\"some deadline\",","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"Chandan8186"},"content":"                    \"today\",","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"Chandan8186"},"content":"                    \"tomorrow\",","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"Chandan8186"},"content":"                    0);","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"Chandan8186"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"Chandan8186"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"Chandan8186"},"content":"            String expected \u003d \"Text \u0027today\u0027 could not be parsed at index 0\";","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"Chandan8186"},"content":"            assertEquals(expected, e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"Chandan8186"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"Chandan8186"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"Chandan8186"},"content":"    public void testMarkTask_validIndex_expectedOutcome() {","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"Chandan8186"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"Chandan8186"},"content":"        Task todoTask \u003d taskList.addTodo(\"A todo task.\", 0);","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"Chandan8186"},"content":"        assertEquals(\"[T][ ] A todo task.\", todoTask.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"Chandan8186"},"content":"        taskList.markTaskAsDone(1);","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"Chandan8186"},"content":"        assertEquals(\"[T][X] A todo task.\", todoTask.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"Chandan8186"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"Chandan8186"},"content":"    public void testMarkTask_invalidIndex_exceptionThrown() {","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"Chandan8186"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"Chandan8186"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"Chandan8186"},"content":"            taskList.addTodo(\"A todo task.\", 0);","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"Chandan8186"},"content":"            taskList.markTaskAsDone(3);","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"Chandan8186"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"Chandan8186"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"Chandan8186"},"content":"            String expected \u003d \"Invalid index format.\\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"Chandan8186"},"content":"                    + \"Format should be: mark \u003ctask index\u003e OR unmark \u003ctask index\u003e \"","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"Chandan8186"},"content":"                    + \"OR delete \u003ctask index\u003e\\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"Chandan8186"},"content":"                    + \"where index is from 1 to 1.\";","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"Chandan8186"},"content":"            assertEquals(expected, e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"Chandan8186"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"Chandan8186"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"Chandan8186"},"content":"    public void testUnmarkTask_validIndex_expectedOutcome() {","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"Chandan8186"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"Chandan8186"},"content":"        Task todoTask \u003d taskList.addTodo(\"Another todo task.\", 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"Chandan8186"},"content":"        assertEquals(\"[T][X] Another todo task.\", todoTask.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"Chandan8186"},"content":"        taskList.unmarkTask(1);","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"Chandan8186"},"content":"        assertEquals(\"[T][ ] Another todo task.\", todoTask.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"Chandan8186"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Chandan8186":100}},{"path":"src/test/java/tasks/TodoTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chandan8186"},"content":"package tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Chandan8186"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Chandan8186"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Chandan8186"},"content":"public class TodoTaskTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Chandan8186"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Chandan8186"},"content":"    public void testTodoTaskFormat_validInput_expectedOutcome() {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Chandan8186"},"content":"        Task task \u003d new TodoTask(\"A todo task\", 0);","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Chandan8186"},"content":"        assertEquals(\"T|0|A todo task\", task.getTextFormattedString());","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Chandan8186"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Chandan8186"},"content":"    public void testTodoTaskSaveFormat_validInput_expectedOutcome() {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Chandan8186"},"content":"        Task task \u003d new TodoTask(\"A todo task\", 0);","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Chandan8186"},"content":"        assertEquals(\"[T][ ] A todo task\", task.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Chandan8186"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Chandan8186"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Chandan8186":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Chandan8186"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"Chandan8186"},"content":"todo Assignment 1","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"Chandan8186"},"content":"deadline Assignment 2 /by 2023-01-01 1245","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Chandan8186"},"content":"event exam /from 2023-01-01 1245 /to 2023-01-01 1300","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Chandan8186"},"content":"mark 1","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"Chandan8186"},"content":"unmark 1","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"Chandan8186"},"content":"delete 2","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Chandan8186"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"Chandan8186"},"content":"unknown command","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"Chandan8186"},"content":"todo","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Chandan8186"},"content":"deadline /by","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Chandan8186"},"content":"event something /from /to tomorrow","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Chandan8186"},"content":"deadline a /by b","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Chandan8186"},"content":"event a /from b /to c","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Chandan8186"},"content":"mark 0","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"Chandan8186"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"Chandan8186"},"content":"bye","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"Chandan8186":17}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Chandan8186"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Chandan8186":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Chandan8186"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke/*.java","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Chandan8186":1,"-":37}}]
