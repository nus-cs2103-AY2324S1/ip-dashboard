[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"chewjh1234"},"content":"    mainClass.set(\"duke.Tired\")","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chewjh1234":1,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"T || 0 || read book ||  || ","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"E || 0 || project meeting || 2019-10-15 1800 || 2019-10-15 1800","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"T || 0 || join sports club ||  || ","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":"T || 0 || eat ||  || ","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":"D || 0 || shit ||  || 2019-10-15 2300","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":"T || 0 || eat ||  || ","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":"E || 0 || to || 2020-02-02 1900 || 2022-02-02 0900","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":"E || 0 || run || 2020-02-02 1000 || 2020-11-11 1009","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":"T || 0 || 3 ||  || ","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"chewjh1234"},"content":"T || 0 || eat ||  || ","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"chewjh1234":10}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":"    protected LocalDateTime date;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"chewjh1234"},"content":"    public Deadline(String description, String date) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"chewjh1234"},"content":"        super(description, TaskType.DEADLINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"chewjh1234"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"chewjh1234"},"content":"        this.date \u003d LocalDateTime.parse(date, formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"chewjh1234"},"content":"        if (description.trim().isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"chewjh1234"},"content":"            throw new DukeException(\"The description of a deadline task cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"chewjh1234"},"content":"        if (date.trim().isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"chewjh1234"},"content":"            throw new DukeException(\"The deadline cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"chewjh1234"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"chewjh1234"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"chewjh1234"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"chewjh1234"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"chewjh1234":27}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"chewjh1234"},"content":"        return (\":( OOPS!!! \" + super.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"chewjh1234"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"chewjh1234":12}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":"    public Event(String description, String start, String end) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"chewjh1234"},"content":"        super(description, TaskType.EVENT);","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"chewjh1234"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"chewjh1234"},"content":"        this.start \u003d LocalDateTime.parse(start, formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"chewjh1234"},"content":"        this.end \u003d LocalDateTime.parse(end, formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"chewjh1234"},"content":"        if (description.trim().isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"chewjh1234"},"content":"            throw new DukeException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"chewjh1234"},"content":"        if (start.trim().isEmpty() || end.trim().isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"chewjh1234"},"content":"            throw new DukeException(\"The start or end time of an event cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"chewjh1234"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"chewjh1234"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"chewjh1234"},"content":"        return \"[E]\" + super.toString() +","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"chewjh1234"},"content":"                \" (from: \" + start.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\"))","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"chewjh1234"},"content":"                + \" to: \" + end.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"chewjh1234"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"chewjh1234":29}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"public class Parser {","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":"    public static boolean isCreateTaskCommand(String input) {","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":"        String trimmedInput \u003d input.trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":"        return trimmedInput.startsWith(\"todo\")","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":"                || trimmedInput.startsWith(\"event\")","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":"                || trimmedInput.startsWith(\"deadline\");","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"chewjh1234"},"content":"    public static boolean isByeCommand(String input) {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"chewjh1234"},"content":"        return input.equals(\"bye\");","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"chewjh1234"},"content":"    public static boolean isListCommand(String input) {","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"chewjh1234"},"content":"        return input.equals(\"list\");","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"chewjh1234"},"content":"    public static boolean isMarkCommand(String input) {","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"chewjh1234"},"content":"        return input.startsWith(\"mark\");","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"chewjh1234"},"content":"    public static boolean isUnmarkCommand(String input) {","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"chewjh1234"},"content":"        return input.startsWith(\"unmark\");","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"chewjh1234"},"content":"    public static boolean isDeleteCommand(String input) {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"chewjh1234"},"content":"        return input.startsWith(\"delete\");","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"chewjh1234"},"content":"    public static boolean parseCommand(String input, TaskList tasks, Ui ui) throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"chewjh1234"},"content":"        int taskIndex;","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"chewjh1234"},"content":"        if (isDeleteCommand(input)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"chewjh1234"},"content":"            taskIndex \u003d Integer.parseInt(input.substring(7).trim()) - 1;","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"chewjh1234"},"content":"            if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.getSize()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"chewjh1234"},"content":"                tasks.removeTask(taskIndex);","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"chewjh1234"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"chewjh1234"},"content":"            return true;","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"chewjh1234"},"content":"        } else if (isMarkCommand(input)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"chewjh1234"},"content":"            taskIndex \u003d Integer.parseInt(input.substring(5).trim()) - 1;","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"chewjh1234"},"content":"            if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.getSize()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"chewjh1234"},"content":"                tasks.markTask(taskIndex);","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"chewjh1234"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"chewjh1234"},"content":"            return true;","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"chewjh1234"},"content":"        } else if (isUnmarkCommand(input)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"chewjh1234"},"content":"            taskIndex \u003d Integer.parseInt(input.substring(7).trim()) - 1;","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"chewjh1234"},"content":"            if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.getSize()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"chewjh1234"},"content":"                tasks.unmarkTask(taskIndex);","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"chewjh1234"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"chewjh1234"},"content":"            return true;","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"chewjh1234"},"content":"        if (isByeCommand(input)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"chewjh1234"},"content":"            return false;","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"chewjh1234"},"content":"        } else if (isListCommand(input)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"chewjh1234"},"content":"            ui.showTaskList(tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"chewjh1234"},"content":"        } else if (isCreateTaskCommand(input)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"chewjh1234"},"content":"            Task newTask \u003d parseCreateTaskInput(input);","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"chewjh1234"},"content":"            tasks.addTask(newTask);","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"chewjh1234"},"content":"        } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"chewjh1234"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"chewjh1234"},"content":"        return true;","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"chewjh1234"},"content":"    public static Task convertToTask(String line) throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"chewjh1234"},"content":"        String[] parts \u003d line.split(\"\\\\|\\\\|\");","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"chewjh1234"},"content":"        if (parts.length \u003c 5) {","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"chewjh1234"},"content":"            throw new DukeException(\"Invalid task format in file: \" + line);","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"chewjh1234"},"content":"        String taskType \u003d parts[0].trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"chewjh1234"},"content":"        String done \u003d parts[1].trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"chewjh1234"},"content":"        String taskDescription \u003d parts[2].trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"chewjh1234"},"content":"        System.out.println(taskDescription);","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"chewjh1234"},"content":"        String start \u003d parts[3].trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"chewjh1234"},"content":"        String end \u003d parts[4].trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"chewjh1234"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"chewjh1234"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"chewjh1234"},"content":"            switch (taskType) {","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"chewjh1234"},"content":"            case \"T\":","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"chewjh1234"},"content":"                task \u003d new ToDo(taskDescription);","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"chewjh1234"},"content":"                break;","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"chewjh1234"},"content":"            case \"D\":","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"chewjh1234"},"content":"                task \u003d new Deadline(taskDescription, end);","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"chewjh1234"},"content":"                break;","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"chewjh1234"},"content":"            case \"E\":","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"chewjh1234"},"content":"                task \u003d new Event(taskDescription, start, end);","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"chewjh1234"},"content":"                break;","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"chewjh1234"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"chewjh1234"},"content":"            if (done.equals(\"0\") \u0026\u0026 task !\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"chewjh1234"},"content":"                task.isDone \u003d false;","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"chewjh1234"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"chewjh1234"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"chewjh1234"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"chewjh1234"},"content":"        return task;","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"chewjh1234"},"content":"//","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"chewjh1234"},"content":"//    public static Task convertToTask(String line) throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"chewjh1234"},"content":"//","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"chewjh1234"},"content":"//        String[] parts \u003d line.split(\"\\\\|\\\\|\");","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"chewjh1234"},"content":"//","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"chewjh1234"},"content":"//        if (parts.length \u003c 5) {","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"chewjh1234"},"content":"//            throw new DukeException(\"Invalid task format in file: \" + line);","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"chewjh1234"},"content":"//        }","lastModifiedDate":"2023-09-03"},{"lineNumber":112,"author":{"gitId":"chewjh1234"},"content":"//","lastModifiedDate":"2023-09-03"},{"lineNumber":113,"author":{"gitId":"chewjh1234"},"content":"//        String taskType \u003d parts[0].trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":114,"author":{"gitId":"chewjh1234"},"content":"//        String done \u003d parts[1].trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":115,"author":{"gitId":"chewjh1234"},"content":"//        String taskDescription \u003d parts[2].trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":116,"author":{"gitId":"chewjh1234"},"content":"//        System.out.println(taskDescription);","lastModifiedDate":"2023-09-03"},{"lineNumber":117,"author":{"gitId":"chewjh1234"},"content":"//        String start \u003d parts[3].trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"chewjh1234"},"content":"//        String end \u003d parts[4].trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":119,"author":{"gitId":"chewjh1234"},"content":"//        Task task \u003d null;","lastModifiedDate":"2023-09-03"},{"lineNumber":120,"author":{"gitId":"chewjh1234"},"content":"//","lastModifiedDate":"2023-09-03"},{"lineNumber":121,"author":{"gitId":"chewjh1234"},"content":"//        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":122,"author":{"gitId":"chewjh1234"},"content":"//            switch (taskType) {","lastModifiedDate":"2023-09-03"},{"lineNumber":123,"author":{"gitId":"chewjh1234"},"content":"//            case \"T\":","lastModifiedDate":"2023-09-03"},{"lineNumber":124,"author":{"gitId":"chewjh1234"},"content":"//                task \u003d new ToDo(taskDescription);","lastModifiedDate":"2023-09-03"},{"lineNumber":125,"author":{"gitId":"chewjh1234"},"content":"//                break;","lastModifiedDate":"2023-09-03"},{"lineNumber":126,"author":{"gitId":"chewjh1234"},"content":"//            case \"D\":","lastModifiedDate":"2023-09-03"},{"lineNumber":127,"author":{"gitId":"chewjh1234"},"content":"//                task \u003d new Deadline(taskDescription, end);","lastModifiedDate":"2023-09-03"},{"lineNumber":128,"author":{"gitId":"chewjh1234"},"content":"//                break;","lastModifiedDate":"2023-09-03"},{"lineNumber":129,"author":{"gitId":"chewjh1234"},"content":"//            case \"E\":","lastModifiedDate":"2023-09-03"},{"lineNumber":130,"author":{"gitId":"chewjh1234"},"content":"//                task \u003d new Event(taskDescription, start, end);","lastModifiedDate":"2023-09-03"},{"lineNumber":131,"author":{"gitId":"chewjh1234"},"content":"//                break;","lastModifiedDate":"2023-09-03"},{"lineNumber":132,"author":{"gitId":"chewjh1234"},"content":"//            }","lastModifiedDate":"2023-09-03"},{"lineNumber":133,"author":{"gitId":"chewjh1234"},"content":"//            if (done.equals(\"0\") \u0026\u0026 task !\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":134,"author":{"gitId":"chewjh1234"},"content":"//                task.isDone \u003d false;","lastModifiedDate":"2023-09-03"},{"lineNumber":135,"author":{"gitId":"chewjh1234"},"content":"//            }","lastModifiedDate":"2023-09-03"},{"lineNumber":136,"author":{"gitId":"chewjh1234"},"content":"//        } catch (DukeException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":137,"author":{"gitId":"chewjh1234"},"content":"//            System.err.println(e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":138,"author":{"gitId":"chewjh1234"},"content":"//        }","lastModifiedDate":"2023-09-03"},{"lineNumber":139,"author":{"gitId":"chewjh1234"},"content":"//        return task;","lastModifiedDate":"2023-09-03"},{"lineNumber":140,"author":{"gitId":"chewjh1234"},"content":"//    }","lastModifiedDate":"2023-09-03"},{"lineNumber":141,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":142,"author":{"gitId":"chewjh1234"},"content":"    public static Task parseCreateTaskInput(String input) throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":143,"author":{"gitId":"chewjh1234"},"content":"        TaskType taskType;","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"chewjh1234"},"content":"        String[] parts \u003d input.split(\"/\");","lastModifiedDate":"2023-09-03"},{"lineNumber":145,"author":{"gitId":"chewjh1234"},"content":"        String taskDetails \u003d parts[0].trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":146,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":147,"author":{"gitId":"chewjh1234"},"content":"        if (taskDetails.startsWith(\"todo\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":148,"author":{"gitId":"chewjh1234"},"content":"            taskType \u003d TaskType.TODO;","lastModifiedDate":"2023-09-03"},{"lineNumber":149,"author":{"gitId":"chewjh1234"},"content":"            taskDetails \u003d taskDetails.substring(4).trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":150,"author":{"gitId":"chewjh1234"},"content":"        } else if (taskDetails.startsWith(\"deadline\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":151,"author":{"gitId":"chewjh1234"},"content":"            taskType \u003d TaskType.DEADLINE;","lastModifiedDate":"2023-09-03"},{"lineNumber":152,"author":{"gitId":"chewjh1234"},"content":"            taskDetails \u003d taskDetails.substring(8).trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":153,"author":{"gitId":"chewjh1234"},"content":"        } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":154,"author":{"gitId":"chewjh1234"},"content":"            taskType \u003d TaskType.EVENT;","lastModifiedDate":"2023-09-03"},{"lineNumber":155,"author":{"gitId":"chewjh1234"},"content":"            taskDetails \u003d taskDetails.substring(5).trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":156,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":157,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":158,"author":{"gitId":"chewjh1234"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2023-09-03"},{"lineNumber":159,"author":{"gitId":"chewjh1234"},"content":"        switch (taskType) {","lastModifiedDate":"2023-09-03"},{"lineNumber":160,"author":{"gitId":"chewjh1234"},"content":"        case TODO:","lastModifiedDate":"2023-09-03"},{"lineNumber":161,"author":{"gitId":"chewjh1234"},"content":"            newTask \u003d new ToDo(taskDetails);","lastModifiedDate":"2023-09-03"},{"lineNumber":162,"author":{"gitId":"chewjh1234"},"content":"            break;","lastModifiedDate":"2023-09-03"},{"lineNumber":163,"author":{"gitId":"chewjh1234"},"content":"        case DEADLINE:","lastModifiedDate":"2023-09-03"},{"lineNumber":164,"author":{"gitId":"chewjh1234"},"content":"            if (parts.length !\u003d 2 || parts[1].length() \u003c 2) {","lastModifiedDate":"2023-09-03"},{"lineNumber":165,"author":{"gitId":"chewjh1234"},"content":"                // prevent java.lang.StringIndexOutOfBoundsException","lastModifiedDate":"2023-09-03"},{"lineNumber":166,"author":{"gitId":"chewjh1234"},"content":"                throw new DukeException(\"Invalid input for a task with deadline. \" +","lastModifiedDate":"2023-09-03"},{"lineNumber":167,"author":{"gitId":"chewjh1234"},"content":"                        \"Please input \u0027deadline \u003ctask name\u003e /by \u003cend\u003e\u0027\");","lastModifiedDate":"2023-09-03"},{"lineNumber":168,"author":{"gitId":"chewjh1234"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":169,"author":{"gitId":"chewjh1234"},"content":"            String date \u003d parts[1].substring(2).trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":170,"author":{"gitId":"chewjh1234"},"content":"            newTask \u003d new Deadline(taskDetails, date);","lastModifiedDate":"2023-09-03"},{"lineNumber":171,"author":{"gitId":"chewjh1234"},"content":"            break;","lastModifiedDate":"2023-09-03"},{"lineNumber":172,"author":{"gitId":"chewjh1234"},"content":"        case EVENT:","lastModifiedDate":"2023-09-03"},{"lineNumber":173,"author":{"gitId":"chewjh1234"},"content":"            if (parts.length !\u003d 3 || parts[1].length() \u003c 5 || parts[2].length() \u003c 3) {","lastModifiedDate":"2023-09-03"},{"lineNumber":174,"author":{"gitId":"chewjh1234"},"content":"                // prevent java.lang.StringIndexOutOfBoundsException","lastModifiedDate":"2023-09-03"},{"lineNumber":175,"author":{"gitId":"chewjh1234"},"content":"                throw new DukeException(\"Invalid input for an event. \" +","lastModifiedDate":"2023-09-03"},{"lineNumber":176,"author":{"gitId":"chewjh1234"},"content":"                        \"Please input \u0027event \u003cevent name\u003e /from \u003cstart\u003e /to \u003cend\u003e\u0027\");","lastModifiedDate":"2023-09-03"},{"lineNumber":177,"author":{"gitId":"chewjh1234"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":178,"author":{"gitId":"chewjh1234"},"content":"            String start \u003d parts[1].substring(5).trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":179,"author":{"gitId":"chewjh1234"},"content":"            String end \u003d parts[2].substring(3).trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":180,"author":{"gitId":"chewjh1234"},"content":"            newTask \u003d new Event(taskDetails, start, end);","lastModifiedDate":"2023-09-03"},{"lineNumber":181,"author":{"gitId":"chewjh1234"},"content":"            break;","lastModifiedDate":"2023-09-03"},{"lineNumber":182,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":183,"author":{"gitId":"chewjh1234"},"content":"        return newTask;","lastModifiedDate":"2023-09-03"},{"lineNumber":184,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":185,"author":{"gitId":"chewjh1234"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"chewjh1234":185}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":"import java.util.List;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":"public class Storage {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"chewjh1234"},"content":"    private Path dataPath;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"chewjh1234"},"content":"    public Storage(String fileName) {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"chewjh1234"},"content":"        createFile(fileName);","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"chewjh1234"},"content":"        this.dataPath \u003d Path.of(\".\", \"data\", fileName);","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"chewjh1234"},"content":"    private void createFile(String fileName) {","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"chewjh1234"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"chewjh1234"},"content":"            Path dataDirectoryPath \u003d Path.of(\".\", \"data\");","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"chewjh1234"},"content":"            // Create directory because it doesn\u0027t exist","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"chewjh1234"},"content":"            if (!Files.exists(dataDirectoryPath)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"chewjh1234"},"content":"                Files.createDirectories(dataDirectoryPath);","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"chewjh1234"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"chewjh1234"},"content":"            Path dataPath \u003d dataDirectoryPath.resolve(fileName);","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"chewjh1234"},"content":"            // Create duke.txt if it doesn\u0027t exist","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"chewjh1234"},"content":"            if (!Files.exists(dataPath)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"chewjh1234"},"content":"                Files.createFile(dataPath);","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"chewjh1234"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"chewjh1234"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"chewjh1234"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"chewjh1234"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"chewjh1234"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"chewjh1234"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"chewjh1234"},"content":"            List\u003cString\u003e fileLines \u003d Files.readAllLines(dataPath);","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"chewjh1234"},"content":"            for (String line : fileLines) {","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"chewjh1234"},"content":"                Task task \u003d Parser.convertToTask(line);","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"chewjh1234"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"chewjh1234"},"content":"                    tasks.add(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"chewjh1234"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"chewjh1234"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"chewjh1234"},"content":"        } catch (IOException | DukeException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"chewjh1234"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"chewjh1234"},"content":"        return tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"chewjh1234"},"content":"    public void saveToFile(TaskList updatedTasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"chewjh1234"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"chewjh1234"},"content":"            if (updatedTasks \u003d\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"chewjh1234"},"content":"                return;","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"chewjh1234"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"chewjh1234"},"content":"            List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"chewjh1234"},"content":"            for (Task task : updatedTasks.tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"chewjh1234"},"content":"                lines.add(task.taskToFileString());","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"chewjh1234"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"chewjh1234"},"content":"            Files.write(dataPath, lines);","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"chewjh1234"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"chewjh1234"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"chewjh1234"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"chewjh1234":70}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":"    // inspired by partial solution on website","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":"    protected TaskType taskType;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"chewjh1234"},"content":"    public Task(String description, TaskType taskType) {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"chewjh1234"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"chewjh1234"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"chewjh1234"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"chewjh1234"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"chewjh1234"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"chewjh1234"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"chewjh1234"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"chewjh1234"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"chewjh1234"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"chewjh1234"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"chewjh1234"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"chewjh1234"},"content":"    public boolean isDone() { return this.isDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"chewjh1234"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"chewjh1234"},"content":"        return this.description;","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"chewjh1234"},"content":"    public String taskToFileString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"chewjh1234"},"content":"        String taskType \u003d \"\";","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"chewjh1234"},"content":"        String doneStatus \u003d this.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"chewjh1234"},"content":"        String taskDescription \u003d this.getDescription();","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"chewjh1234"},"content":"        String start \u003d \"\";","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"chewjh1234"},"content":"        String end \u003d \"\";","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"chewjh1234"},"content":"        if (this instanceof ToDo) {","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"chewjh1234"},"content":"            taskType \u003d \"T\";","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"chewjh1234"},"content":"        } else if (this instanceof Deadline) {","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"chewjh1234"},"content":"            taskType \u003d \"D\";","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"chewjh1234"},"content":"            end \u003d ((Deadline) this).date.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"chewjh1234"},"content":"        } else if (this instanceof Event) {","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"chewjh1234"},"content":"            taskType \u003d \"E\";","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"chewjh1234"},"content":"            start \u003d ((Event) this).start.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"chewjh1234"},"content":"            end \u003d ((Event) this).end.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"chewjh1234"},"content":"        return taskType + \" || \" + doneStatus + \" || \" + taskDescription + \" || \" + start + \" || \" + end;","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"chewjh1234"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"chewjh1234":60}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":"public class TaskList {","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"chewjh1234"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"chewjh1234"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"chewjh1234"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"chewjh1234"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"chewjh1234"},"content":"        System.out.println(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"chewjh1234"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"chewjh1234"},"content":"        System.out.println(\"Now you have \" + getSize() + \" task(s) in the list.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"chewjh1234"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"chewjh1234"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"chewjh1234"},"content":"        System.out.println(tasks.get(index).toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"chewjh1234"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"chewjh1234"},"content":"        System.out.println(\"Now you have \" + getSize() + \" task(s) in the list.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"chewjh1234"},"content":"    public void markTask(int taskIndex) {","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"chewjh1234"},"content":"        tasks.get(taskIndex).markAsDone();","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"chewjh1234"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"chewjh1234"},"content":"        System.out.println(tasks.get(taskIndex).toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"chewjh1234"},"content":"        System.out.println(\"Now you have \" + getSize() + \" task(s) in the list.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"chewjh1234"},"content":"    public void unmarkTask(int taskIndex) {","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"chewjh1234"},"content":"        tasks.get(taskIndex).markAsUndone();","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"chewjh1234"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"chewjh1234"},"content":"        System.out.println(tasks.get(taskIndex).toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"chewjh1234"},"content":"        System.out.println(\"Now you have \" + getSize() + \" task(s) in the list.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"chewjh1234"},"content":"    public int getSize() {","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"chewjh1234"},"content":"        return tasks.size();","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"chewjh1234"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"chewjh1234"},"content":"    public String toString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"chewjh1234"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"chewjh1234"},"content":"        stringBuilder.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"chewjh1234"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"chewjh1234"},"content":"            stringBuilder.append(i + 1).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"chewjh1234"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"chewjh1234"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"chewjh1234":57}},{"path":"src/main/java/duke/Tired.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"enum TaskType {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":"    TODO, DEADLINE, EVENT","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":"public class Tired {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"chewjh1234"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"chewjh1234"},"content":"    public Tired(String fileName) {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"chewjh1234"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"chewjh1234"},"content":"        storage \u003d new Storage(fileName);","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"chewjh1234"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"chewjh1234"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"chewjh1234"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"chewjh1234"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"chewjh1234"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"chewjh1234"},"content":"        } finally { }","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"chewjh1234"},"content":"    public void run() {","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"chewjh1234"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"chewjh1234"},"content":"        boolean isActive \u003d true;","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"chewjh1234"},"content":"        while (isActive) {","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"chewjh1234"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"chewjh1234"},"content":"            String input \u003d ui.readCommand().trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"chewjh1234"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"chewjh1234"},"content":"                isActive \u003d Parser.parseCommand(input, tasks, ui);","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"chewjh1234"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"chewjh1234"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"chewjh1234"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"chewjh1234"},"content":"            storage.saveToFile(tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"chewjh1234"},"content":"        ui.showGoodbyeMessage();","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"chewjh1234"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"chewjh1234"},"content":"        String fileName \u003d \"duke.txt\";","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"chewjh1234"},"content":"        new Tired(fileName).run();","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"chewjh1234"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"chewjh1234":43}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":"import duke.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":"import duke.TaskType;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":"    public ToDo(String description) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"chewjh1234"},"content":"        super(description, TaskType.TODO);","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"chewjh1234"},"content":"        if (description.trim().isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"chewjh1234"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"chewjh1234"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"chewjh1234"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"chewjh1234"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"chewjh1234"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"chewjh1234":21}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":"public class Ui {","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":"    private Scanner sc;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":"    String horizontalLine \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":"    public Ui() {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"chewjh1234"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"chewjh1234"},"content":"        String name \u003d \"duke.Tired\";","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"chewjh1234"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"chewjh1234"},"content":"        System.out.println(\"Hello! I\u0027m \" + name);","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"chewjh1234"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"chewjh1234"},"content":"        System.out.println(horizontalLine + \"\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"chewjh1234"},"content":"    public void showError(String message) {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"chewjh1234"},"content":"        System.out.println(message);","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"chewjh1234"},"content":"    public void showGoodbyeMessage() {","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"chewjh1234"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"chewjh1234"},"content":"    public String readCommand() {","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"chewjh1234"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"chewjh1234"},"content":"    public void showTaskList(TaskList tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"chewjh1234"},"content":"        System.out.println(tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"chewjh1234"},"content":"    // Will use in future","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"chewjh1234"},"content":"    public void showAddedTask(Task task) {","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"chewjh1234"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"chewjh1234"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"chewjh1234"},"content":"        System.out.println(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"chewjh1234"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"chewjh1234"},"content":"    public void showMarkedAsDone(Task task) {","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"chewjh1234"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"chewjh1234"},"content":"        System.out.println(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"chewjh1234"},"content":"    public void showMarkedAsUndone(Task task) {","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"chewjh1234"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"chewjh1234"},"content":"        System.out.println(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"chewjh1234"},"content":"    public void showRemovedTask(Task task) {","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"chewjh1234"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"chewjh1234"},"content":"        System.out.println(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"chewjh1234"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"chewjh1234":57}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"chewjh1234"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"chewjh1234"},"content":"    public void testIsCreateTaskCommandTodo() {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"chewjh1234"},"content":"        assertTrue(Parser.isCreateTaskCommand(\"todo task\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"chewjh1234"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"chewjh1234"},"content":"    public void testIsCreateTaskCommandEvent() {","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"chewjh1234"},"content":"        assertTrue(Parser.isCreateTaskCommand(\"event event task /from 2023-08-23 1800 /to 2023-08-24 0000\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"chewjh1234"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"chewjh1234"},"content":"    public void testIsCreateTaskCommandDeadline() {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"chewjh1234"},"content":"        assertTrue(Parser.isCreateTaskCommand(\"deadline deadline task /by 2023-08-23 0000\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"chewjh1234"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"chewjh1234"},"content":"    public void testIsCreateTaskCommandInvalid() {","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"chewjh1234"},"content":"        assertFalse(Parser.isCreateTaskCommand(\"random command\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"chewjh1234"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"chewjh1234"},"content":"    public void testParseCreateTaskInputTodo() throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"chewjh1234"},"content":"        Task task \u003d Parser.parseCreateTaskInput(\"todo A random task description\");","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"chewjh1234"},"content":"        assertEquals(\"A random task description\", task.getDescription());","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"chewjh1234"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"chewjh1234"},"content":"    public void testParseCreateTaskInputEvent() throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"chewjh1234"},"content":"        Task task \u003d Parser.parseCreateTaskInput(\"event Random Event Description /from 2023-08-23 0000 /to 2023-08-24 0000\");","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"chewjh1234"},"content":"        assertEquals(\"Random Event Description\", task.getDescription());","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"chewjh1234"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"chewjh1234"},"content":"    public void testParseCommandInvalid() {","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"chewjh1234"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"chewjh1234"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"chewjh1234"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"chewjh1234"},"content":"            Parser.parseCommand(\"eidcnihevb\", tasks, ui);","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"chewjh1234"},"content":"        });","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"chewjh1234"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"chewjh1234"},"content":"    public void testParseCommandList() throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"chewjh1234"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"chewjh1234"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"chewjh1234"},"content":"        assertTrue(Parser.parseCommand(\"list\", tasks, ui));","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"chewjh1234"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"chewjh1234"},"content":"    public void testParseCommandTodo() throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"chewjh1234"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"chewjh1234"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"chewjh1234"},"content":"        assertTrue(Parser.parseCommand(\"todo Task Description\", tasks, ui));","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"chewjh1234"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"chewjh1234"},"content":"    public void testParseCommandEvent() throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"chewjh1234"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"chewjh1234"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"chewjh1234"},"content":"        assertTrue(Parser.parseCommand(\"event Event Description /from 2023-08-23 1800 /to 2023-08-24 1900\", tasks, ui));","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"chewjh1234"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"chewjh1234"},"content":"    public void testParseCommandDeadline() throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"chewjh1234"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"chewjh1234"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"chewjh1234"},"content":"        assertTrue(Parser.parseCommand(\"deadline Deadline Description /by 2023-08-23 1900\", tasks, ui));","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"chewjh1234"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"chewjh1234"},"content":"    public void testParseCommandMark() throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"chewjh1234"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"chewjh1234"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"chewjh1234"},"content":"        assertTrue(Parser.parseCommand(\"mark 1\", tasks, ui));","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"chewjh1234"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"chewjh1234"},"content":"    public void testParseCommandUnmark() throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"chewjh1234"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"chewjh1234"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"chewjh1234"},"content":"        assertTrue(Parser.parseCommand(\"unmark 1\", tasks, ui));","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"chewjh1234"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"chewjh1234"},"content":"    public void testParseCommandDelete() throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"chewjh1234"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"chewjh1234"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"chewjh1234"},"content":"        assertTrue(Parser.parseCommand(\"delete 1\", tasks, ui));","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"chewjh1234"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"chewjh1234"},"content":"    public void testParseCommandUnknown() {","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"chewjh1234"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"chewjh1234"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"chewjh1234"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"chewjh1234"},"content":"            Parser.parseCommand(\"unknown\", tasks, ui);","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"chewjh1234"},"content":"        });","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"chewjh1234"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"chewjh1234"},"content":"    public void testConvertToTaskValid() throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":112,"author":{"gitId":"chewjh1234"},"content":"        String taskLine \u003d \"T || 0 || read book ||  || \";","lastModifiedDate":"2023-09-03"},{"lineNumber":113,"author":{"gitId":"chewjh1234"},"content":"        Task task \u003d Parser.convertToTask(taskLine);","lastModifiedDate":"2023-09-03"},{"lineNumber":114,"author":{"gitId":"chewjh1234"},"content":"        assertEquals(\"read book\", task.getDescription());","lastModifiedDate":"2023-09-03"},{"lineNumber":115,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":116,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":117,"author":{"gitId":"chewjh1234"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"chewjh1234"},"content":"    public void testConvertToTaskInvalid() {","lastModifiedDate":"2023-09-03"},{"lineNumber":119,"author":{"gitId":"chewjh1234"},"content":"        String invalidTaskLine \u003d \"T || 0 | A Task Description || ??????? ||\";","lastModifiedDate":"2023-09-03"},{"lineNumber":120,"author":{"gitId":"chewjh1234"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-09-03"},{"lineNumber":121,"author":{"gitId":"chewjh1234"},"content":"            Task invalidTask \u003d Parser.convertToTask(invalidTaskLine);","lastModifiedDate":"2023-09-03"},{"lineNumber":122,"author":{"gitId":"chewjh1234"},"content":"        });","lastModifiedDate":"2023-09-03"},{"lineNumber":123,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":124,"author":{"gitId":"chewjh1234"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"chewjh1234":124}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"chewjh1234"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"chewjh1234"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"chewjh1234"},"content":"    public void testAddTask() {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"chewjh1234"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"chewjh1234"},"content":"        assertEquals(0, taskList.getSize());","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"chewjh1234"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"chewjh1234"},"content":"            taskList.addTask(new ToDo(\"Test Task\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"chewjh1234"},"content":"            assertEquals(1, taskList.getSize());","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"chewjh1234"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"chewjh1234"},"content":"            fail(\"Exception should not be thrown: \" + e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"chewjh1234"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"chewjh1234"},"content":"    public void testRemoveTask() {","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"chewjh1234"},"content":"        // Create a TaskList with some tasks","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"chewjh1234"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"chewjh1234"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"chewjh1234"},"content":"            tasks.add(new ToDo(\"Task 1\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"chewjh1234"},"content":"            tasks.add(new Deadline(\"Task 2\", \"2023-08-23 1800\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"chewjh1234"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"chewjh1234"},"content":"            fail(\"Exception should not be thrown: \" + e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"chewjh1234"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"chewjh1234"},"content":"        assertEquals(2, taskList.getSize());","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"chewjh1234"},"content":"        // Remove a task","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"chewjh1234"},"content":"        taskList.removeTask(0);","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"chewjh1234"},"content":"        assertEquals(1, taskList.getSize());","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"chewjh1234"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"chewjh1234"},"content":"    public void testMarkTask() {","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"chewjh1234"},"content":"        // Create a TaskList with a task","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"chewjh1234"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"chewjh1234"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"chewjh1234"},"content":"            tasks.add(new ToDo(\"Task 1\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"chewjh1234"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"chewjh1234"},"content":"            fail(\"Exception should not be thrown: \" + e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"chewjh1234"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"chewjh1234"},"content":"        // Mark the task as done","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"chewjh1234"},"content":"        taskList.markTask(0);","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"chewjh1234"},"content":"        // Check if the task is marked as done","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"chewjh1234"},"content":"        assertTrue(tasks.get(0).isDone());","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"chewjh1234"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"chewjh1234"},"content":"    public void testUnmarkTask() {","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"chewjh1234"},"content":"        // Create a TaskList with a done task","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"chewjh1234"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"chewjh1234"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"chewjh1234"},"content":"            tasks.add(new ToDo(\"Task 1\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"chewjh1234"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"chewjh1234"},"content":"            fail(\"Exception should not be thrown: \" + e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"chewjh1234"},"content":"        tasks.get(0).markAsDone();","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"chewjh1234"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"chewjh1234"},"content":"        // Unmark the task as done","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"chewjh1234"},"content":"        taskList.unmarkTask(0);","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"chewjh1234"},"content":"        // Check if the task is marked as not done","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"chewjh1234"},"content":"        assertFalse(tasks.get(0).isDone());","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"chewjh1234"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"chewjh1234":82}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"todo eat","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"todo shit","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"deadline run /by 2019-02-03 1000","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":"deadline submit this /by 2023-01-09 1800","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":"event help /from 2022-02-02 1900 /to 2023-09-08 1000","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":"unmark 2","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":"blah","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"chewjh1234"},"content":"whysohard","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"chewjh1234"},"content":"delete 3","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"chewjh1234"},"content":"deadline","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"chewjh1234"},"content":"todo","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"chewjh1234"},"content":"event","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"chewjh1234"},"content":"bye","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"chewjh1234":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"chewjh1234"},"content":"java -classpath ..\\bin duke.Tired \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chewjh1234":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"chewjh1234"},"content":"java -classpath ../bin Tired \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chewjh1234":1,"-":37}}]
