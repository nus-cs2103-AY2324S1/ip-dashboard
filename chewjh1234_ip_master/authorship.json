[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"T || 0 || read book ||  || ","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"E || 0 || project meeting || 2019-10-15 1800 || 2019-10-15 1800","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"T || 0 || join sports club ||  || ","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":"T || 0 || eat ||  || ","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":"D || 0 || shit ||  || 2019-10-15 2300","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":"T || 0 || eat ||  || ","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":"T || 0 || shit\u0027 ||  || ","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":"D || 0 || shit ||  || 2019-02-02 1000","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":"E || 0 || to || 2020-02-02 1900 || 2022-02-02 0900","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"chewjh1234":9}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":"    protected LocalDateTime date;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":"    public Deadline(String description, String date) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":"        super(description, TaskType.DEADLINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"chewjh1234"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"chewjh1234"},"content":"        this.date \u003d LocalDateTime.parse(date, formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"chewjh1234"},"content":"        if (description.trim().isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"chewjh1234"},"content":"            throw new DukeException(\"The description of a deadline task cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"chewjh1234"},"content":"        if (date.trim().isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"chewjh1234"},"content":"            throw new DukeException(\"The deadline cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"chewjh1234"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"chewjh1234"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"chewjh1234"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"chewjh1234"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"chewjh1234":25}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":"        return (\":( OOPS!!! \" + super.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"chewjh1234"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"chewjh1234":10}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":"    public Event(String description, String start, String end) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":"        super(description, TaskType.EVENT);","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"chewjh1234"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"chewjh1234"},"content":"        this.start \u003d LocalDateTime.parse(start, formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"chewjh1234"},"content":"        this.end \u003d LocalDateTime.parse(end, formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"chewjh1234"},"content":"        if (description.trim().isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"chewjh1234"},"content":"            throw new DukeException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"chewjh1234"},"content":"        if (start.trim().isEmpty() || end.trim().isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"chewjh1234"},"content":"            throw new DukeException(\"The start or end time of an event cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"chewjh1234"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"chewjh1234"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"chewjh1234"},"content":"        return \"[E]\" + super.toString() +","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"chewjh1234"},"content":"                \" (from: \" + start.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\"))","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"chewjh1234"},"content":"                + \" to: \" + end.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"chewjh1234"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"chewjh1234":28}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"    // inspired by partial solution on website","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":"    protected TaskType taskType;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":"    public Task(String description, TaskType taskType) {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"chewjh1234"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"chewjh1234"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"chewjh1234"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"chewjh1234"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"chewjh1234"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"chewjh1234"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"chewjh1234"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"chewjh1234"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"chewjh1234"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"chewjh1234"},"content":"    public boolean isDone() { return this.isDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"chewjh1234"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"chewjh1234"},"content":"        return this.description;","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"chewjh1234"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"chewjh1234":35}},{"path":"src/main/java/Tired.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"chewjh1234"},"content":"enum TaskType {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"chewjh1234"},"content":"    TODO, DEADLINE, EVENT","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"chewjh1234"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"chewjh1234"},"content":"public class Tired {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"chewjh1234"},"content":"    private static void createFile() {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"chewjh1234"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"chewjh1234"},"content":"            Path dataDirectoryPath \u003d Path.of(\".\", \"data\");","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"chewjh1234"},"content":"            // Create directory because it doesn\u0027t exist","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"chewjh1234"},"content":"            if (!Files.exists(dataDirectoryPath)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"chewjh1234"},"content":"                Files.createDirectories(dataDirectoryPath);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"chewjh1234"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"chewjh1234"},"content":"            Path dataPath \u003d dataDirectoryPath.resolve(\"duke.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"chewjh1234"},"content":"            // Create duke.txt if it doesn\u0027t exist","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"chewjh1234"},"content":"            if (!Files.exists(dataPath)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"chewjh1234"},"content":"                Files.createFile(dataPath);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"chewjh1234"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"chewjh1234"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"chewjh1234"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"chewjh1234"},"content":"    private static ArrayList\u003cTask\u003e readFile() {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"chewjh1234"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"chewjh1234"},"content":"            Path dataPath \u003d Path.of(\".\", \"data\", \"duke.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"chewjh1234"},"content":"            List\u003cString\u003e fileLines \u003d Files.readAllLines(dataPath);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"chewjh1234"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"chewjh1234"},"content":"            for (String line : fileLines) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"chewjh1234"},"content":"                Task task \u003d convertToTask(line);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"chewjh1234"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"chewjh1234"},"content":"                    tasks.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"chewjh1234"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"chewjh1234"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"chewjh1234"},"content":"            return tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"chewjh1234"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"chewjh1234"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"chewjh1234"},"content":"            return null;","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"chewjh1234"},"content":"    private static Task convertToTask(String line) {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"chewjh1234"},"content":"        String[] parts \u003d line.split(\"\\\\|\\\\|\");","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"chewjh1234"},"content":"        if (parts.length \u003c 5) {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"chewjh1234"},"content":"            System.err.println(\"Invalid task format in file: \" + line);","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"chewjh1234"},"content":"            return null;","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"chewjh1234"},"content":"        String taskType \u003d parts[0].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"chewjh1234"},"content":"        String done \u003d parts[1].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"chewjh1234"},"content":"        String taskDescription \u003d parts[2].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"chewjh1234"},"content":"        System.out.println(taskDescription);","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"chewjh1234"},"content":"        String start \u003d parts[3].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"chewjh1234"},"content":"        String end \u003d parts[4].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"chewjh1234"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"chewjh1234"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"chewjh1234"},"content":"            switch (taskType) {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"chewjh1234"},"content":"            case \"T\":","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"chewjh1234"},"content":"                task \u003d new ToDo(taskDescription);","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"chewjh1234"},"content":"                break;","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"chewjh1234"},"content":"            case \"D\":","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"chewjh1234"},"content":"                task \u003d new Deadline(taskDescription, end);","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"chewjh1234"},"content":"                break;","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"chewjh1234"},"content":"            case \"E\":","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"chewjh1234"},"content":"                task \u003d new Event(taskDescription, start, end);","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"chewjh1234"},"content":"                break;","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"chewjh1234"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"chewjh1234"},"content":"            if (done.equals(\"0\") \u0026\u0026 task !\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"chewjh1234"},"content":"                task.isDone \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"chewjh1234"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"chewjh1234"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"chewjh1234"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"chewjh1234"},"content":"        return task;","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"chewjh1234"},"content":"    private static void saveToFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"chewjh1234"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"chewjh1234"},"content":"            if (tasks \u003d\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"chewjh1234"},"content":"                return;","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"chewjh1234"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"chewjh1234"},"content":"            Path dataPath \u003d Path.of(\".\", \"data\", \"duke.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"chewjh1234"},"content":"            List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"chewjh1234"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"chewjh1234"},"content":"                lines.add(taskToFileString(task));","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"chewjh1234"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"chewjh1234"},"content":"            Files.write(dataPath, lines);","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"chewjh1234"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"chewjh1234"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"chewjh1234"},"content":"    private static String taskToFileString(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"chewjh1234"},"content":"        String taskType \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"chewjh1234"},"content":"        String doneStatus \u003d task.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"chewjh1234"},"content":"        String taskDescription \u003d task.getDescription();","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"chewjh1234"},"content":"        String start \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"chewjh1234"},"content":"        String end \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"chewjh1234"},"content":"        if (task instanceof ToDo) {","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"chewjh1234"},"content":"            taskType \u003d \"T\";","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"chewjh1234"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"chewjh1234"},"content":"            taskType \u003d \"D\";","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"chewjh1234"},"content":"            end \u003d ((Deadline) task).date.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"chewjh1234"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"chewjh1234"},"content":"            taskType \u003d \"E\";","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"chewjh1234"},"content":"            start \u003d ((Event) task).start.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"chewjh1234"},"content":"            end \u003d ((Event) task).end.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"chewjh1234"},"content":"        return taskType + \" || \" + doneStatus + \" || \" + taskDescription + \" || \" + start + \" || \" + end;","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"chewjh1234"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-24"},{"lineNumber":132,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":133,"author":{"gitId":"chewjh1234"},"content":"        createFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"chewjh1234"},"content":"        ArrayList\u003cTask\u003e list \u003d readFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":136,"author":{"gitId":"chewjh1234"},"content":"        String name \u003d \"Tired\";","lastModifiedDate":"2023-08-23"},{"lineNumber":137,"author":{"gitId":"chewjh1234"},"content":"        String horizontalLine \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-08-23"},{"lineNumber":138,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":139,"author":{"gitId":"chewjh1234"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-08-23"},{"lineNumber":140,"author":{"gitId":"chewjh1234"},"content":"        System.out.println(\"Hello! I\u0027m \" + name);","lastModifiedDate":"2023-08-23"},{"lineNumber":141,"author":{"gitId":"chewjh1234"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-23"},{"lineNumber":142,"author":{"gitId":"chewjh1234"},"content":"        System.out.println(horizontalLine + \"\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":143,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":144,"author":{"gitId":"chewjh1234"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":145,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":146,"author":{"gitId":"chewjh1234"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"chewjh1234"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"chewjh1234"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"chewjh1234"},"content":"                break;","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"chewjh1234"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":152,"author":{"gitId":"chewjh1234"},"content":"            System.out.println(horizontalLine);","lastModifiedDate":"2023-08-23"},{"lineNumber":153,"author":{"gitId":"chewjh1234"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":154,"author":{"gitId":"chewjh1234"},"content":"                if (input.equals(\"list\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":155,"author":{"gitId":"chewjh1234"},"content":"                    System.out.println(\"Here are the tasks in your list: \");","lastModifiedDate":"2023-08-23"},{"lineNumber":156,"author":{"gitId":"chewjh1234"},"content":"                    for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-24"},{"lineNumber":157,"author":{"gitId":"chewjh1234"},"content":"                        System.out.println((i + 1) + \".\" + list.get(i).toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":158,"author":{"gitId":"chewjh1234"},"content":"                    }","lastModifiedDate":"2023-08-23"},{"lineNumber":159,"author":{"gitId":"chewjh1234"},"content":"                } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":160,"author":{"gitId":"chewjh1234"},"content":"                    int taskIndex \u003d Integer.parseInt(input.substring(5).trim()) - 1;","lastModifiedDate":"2023-08-23"},{"lineNumber":161,"author":{"gitId":"chewjh1234"},"content":"                    if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c list.size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":162,"author":{"gitId":"chewjh1234"},"content":"                        list.get(taskIndex).markAsDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":163,"author":{"gitId":"chewjh1234"},"content":"                        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":164,"author":{"gitId":"chewjh1234"},"content":"                        System.out.println(list.get(taskIndex).toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":165,"author":{"gitId":"chewjh1234"},"content":"                    }","lastModifiedDate":"2023-08-23"},{"lineNumber":166,"author":{"gitId":"chewjh1234"},"content":"                } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":167,"author":{"gitId":"chewjh1234"},"content":"                    int taskIndex \u003d Integer.parseInt(input.substring(7).trim()) - 1;","lastModifiedDate":"2023-08-23"},{"lineNumber":168,"author":{"gitId":"chewjh1234"},"content":"                    if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c list.size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":169,"author":{"gitId":"chewjh1234"},"content":"                        list.get(taskIndex).markAsUndone();","lastModifiedDate":"2023-08-24"},{"lineNumber":170,"author":{"gitId":"chewjh1234"},"content":"                        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":171,"author":{"gitId":"chewjh1234"},"content":"                        System.out.println(list.get(taskIndex).toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":172,"author":{"gitId":"chewjh1234"},"content":"                    }","lastModifiedDate":"2023-08-23"},{"lineNumber":173,"author":{"gitId":"chewjh1234"},"content":"                } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":174,"author":{"gitId":"chewjh1234"},"content":"                    int taskIndex \u003d Integer.parseInt(input.substring(7).trim()) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":175,"author":{"gitId":"chewjh1234"},"content":"                    if (taskIndex \u003e list.size() - 1 || taskIndex \u003c 0) {","lastModifiedDate":"2023-08-24"},{"lineNumber":176,"author":{"gitId":"chewjh1234"},"content":"                        throw new DukeException(\"Invalid task number!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":177,"author":{"gitId":"chewjh1234"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":178,"author":{"gitId":"chewjh1234"},"content":"                    System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":179,"author":{"gitId":"chewjh1234"},"content":"                    System.out.println(list.get(taskIndex).toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":180,"author":{"gitId":"chewjh1234"},"content":"                    list.remove(taskIndex);","lastModifiedDate":"2023-08-24"},{"lineNumber":181,"author":{"gitId":"chewjh1234"},"content":"                } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":182,"author":{"gitId":"chewjh1234"},"content":"                    TaskType taskType;","lastModifiedDate":"2023-08-24"},{"lineNumber":183,"author":{"gitId":"chewjh1234"},"content":"                    String[] parts \u003d input.split(\"/\");","lastModifiedDate":"2023-08-24"},{"lineNumber":184,"author":{"gitId":"chewjh1234"},"content":"                    String taskDetails \u003d parts[0].trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":185,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":186,"author":{"gitId":"chewjh1234"},"content":"                    if (taskDetails.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":187,"author":{"gitId":"chewjh1234"},"content":"                        taskType \u003d TaskType.TODO;","lastModifiedDate":"2023-08-24"},{"lineNumber":188,"author":{"gitId":"chewjh1234"},"content":"                        taskDetails \u003d taskDetails.substring(4).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":189,"author":{"gitId":"chewjh1234"},"content":"                    } else if (taskDetails.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":190,"author":{"gitId":"chewjh1234"},"content":"                        taskType \u003d TaskType.DEADLINE;","lastModifiedDate":"2023-08-24"},{"lineNumber":191,"author":{"gitId":"chewjh1234"},"content":"                        taskDetails \u003d taskDetails.substring(8).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":192,"author":{"gitId":"chewjh1234"},"content":"                    } else if (taskDetails.startsWith(\"event\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":193,"author":{"gitId":"chewjh1234"},"content":"                        taskType \u003d TaskType.EVENT;","lastModifiedDate":"2023-08-24"},{"lineNumber":194,"author":{"gitId":"chewjh1234"},"content":"                        taskDetails \u003d taskDetails.substring(5).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":195,"author":{"gitId":"chewjh1234"},"content":"                    } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":196,"author":{"gitId":"chewjh1234"},"content":"                        throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":197,"author":{"gitId":"chewjh1234"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":198,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":199,"author":{"gitId":"chewjh1234"},"content":"                    switch (taskType) {","lastModifiedDate":"2023-08-24"},{"lineNumber":200,"author":{"gitId":"chewjh1234"},"content":"                        case TODO:","lastModifiedDate":"2023-08-24"},{"lineNumber":201,"author":{"gitId":"chewjh1234"},"content":"                            Task t \u003d new ToDo(taskDetails);","lastModifiedDate":"2023-08-24"},{"lineNumber":202,"author":{"gitId":"chewjh1234"},"content":"                            list.add(t);","lastModifiedDate":"2023-08-24"},{"lineNumber":203,"author":{"gitId":"chewjh1234"},"content":"                            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":204,"author":{"gitId":"chewjh1234"},"content":"                            System.out.println(t);","lastModifiedDate":"2023-08-31"},{"lineNumber":205,"author":{"gitId":"chewjh1234"},"content":"                            break;","lastModifiedDate":"2023-08-24"},{"lineNumber":206,"author":{"gitId":"chewjh1234"},"content":"                        case DEADLINE:","lastModifiedDate":"2023-08-24"},{"lineNumber":207,"author":{"gitId":"chewjh1234"},"content":"                            if (parts.length !\u003d 2 || parts[1].length() \u003c 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":208,"author":{"gitId":"chewjh1234"},"content":"                                // prevent java.lang.StringIndexOutOfBoundsException","lastModifiedDate":"2023-08-24"},{"lineNumber":209,"author":{"gitId":"chewjh1234"},"content":"                                throw new DukeException(\"Invalid input for a task with deadline. \" +","lastModifiedDate":"2023-08-24"},{"lineNumber":210,"author":{"gitId":"chewjh1234"},"content":"                                        \"Please input \u0027deadline \u003ctask name\u003e /by \u003cend\u003e\u0027\");","lastModifiedDate":"2023-08-24"},{"lineNumber":211,"author":{"gitId":"chewjh1234"},"content":"                            }","lastModifiedDate":"2023-08-24"},{"lineNumber":212,"author":{"gitId":"chewjh1234"},"content":"                            String date \u003d parts[1].substring(2).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":213,"author":{"gitId":"chewjh1234"},"content":"                            Task deadlineTask \u003d new Deadline(taskDetails, date);","lastModifiedDate":"2023-08-24"},{"lineNumber":214,"author":{"gitId":"chewjh1234"},"content":"                            list.add(deadlineTask);","lastModifiedDate":"2023-08-24"},{"lineNumber":215,"author":{"gitId":"chewjh1234"},"content":"                            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":216,"author":{"gitId":"chewjh1234"},"content":"                            System.out.println(deadlineTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":217,"author":{"gitId":"chewjh1234"},"content":"                            break;","lastModifiedDate":"2023-08-24"},{"lineNumber":218,"author":{"gitId":"chewjh1234"},"content":"                        case EVENT:","lastModifiedDate":"2023-08-24"},{"lineNumber":219,"author":{"gitId":"chewjh1234"},"content":"                            if (parts.length !\u003d 3 || parts[1].length() \u003c 5 || parts[2].length() \u003c 3) {","lastModifiedDate":"2023-08-24"},{"lineNumber":220,"author":{"gitId":"chewjh1234"},"content":"                                // prevent java.lang.StringIndexOutOfBoundsException","lastModifiedDate":"2023-08-24"},{"lineNumber":221,"author":{"gitId":"chewjh1234"},"content":"                                throw new DukeException(\"Invalid input for an event. \" +","lastModifiedDate":"2023-08-24"},{"lineNumber":222,"author":{"gitId":"chewjh1234"},"content":"                                        \"Please input \u0027event \u003cevent name\u003e /from \u003cstart\u003e /to \u003cend\u003e\u0027\");","lastModifiedDate":"2023-08-24"},{"lineNumber":223,"author":{"gitId":"chewjh1234"},"content":"                            }","lastModifiedDate":"2023-08-24"},{"lineNumber":224,"author":{"gitId":"chewjh1234"},"content":"                            String start \u003d parts[1].substring(5).trim();","lastModifiedDate":"2023-08-23"},{"lineNumber":225,"author":{"gitId":"chewjh1234"},"content":"                            String end \u003d parts[2].substring(3).trim();","lastModifiedDate":"2023-08-23"},{"lineNumber":226,"author":{"gitId":"chewjh1234"},"content":"                            Task eventTask \u003d new Event(taskDetails, start, end);","lastModifiedDate":"2023-08-24"},{"lineNumber":227,"author":{"gitId":"chewjh1234"},"content":"                            list.add(eventTask);","lastModifiedDate":"2023-08-24"},{"lineNumber":228,"author":{"gitId":"chewjh1234"},"content":"                            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":229,"author":{"gitId":"chewjh1234"},"content":"                            System.out.println(eventTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":230,"author":{"gitId":"chewjh1234"},"content":"                            break;","lastModifiedDate":"2023-08-24"},{"lineNumber":231,"author":{"gitId":"chewjh1234"},"content":"                    }","lastModifiedDate":"2023-08-23"},{"lineNumber":232,"author":{"gitId":"chewjh1234"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":233,"author":{"gitId":"chewjh1234"},"content":"                saveToFile(list);","lastModifiedDate":"2023-08-31"},{"lineNumber":234,"author":{"gitId":"chewjh1234"},"content":"                System.out.println(\"Now you have \" + list.size() + \" task(s) in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":235,"author":{"gitId":"chewjh1234"},"content":"                System.out.println(horizontalLine + \"\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":236,"author":{"gitId":"chewjh1234"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":237,"author":{"gitId":"chewjh1234"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":238,"author":{"gitId":"chewjh1234"},"content":"                System.out.println(horizontalLine + \"\\n\");","lastModifiedDate":"2023-08-24"},{"lineNumber":239,"author":{"gitId":"chewjh1234"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":240,"author":{"gitId":"chewjh1234"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":241,"author":{"gitId":"chewjh1234"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":242,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":243,"author":{"gitId":"chewjh1234"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-08-23"},{"lineNumber":244,"author":{"gitId":"chewjh1234"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-23"},{"lineNumber":245,"author":{"gitId":"chewjh1234"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-08-23"},{"lineNumber":246,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":247,"author":{"gitId":"chewjh1234"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"chewjh1234":247}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"    public ToDo(String description) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":"        super(description, TaskType.TODO);","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":"        if (description.trim().isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"chewjh1234"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"chewjh1234"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"chewjh1234"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"chewjh1234"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"chewjh1234":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"todo eat","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"todo shit","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"deadline run /by 2019-02-03 1000","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":"deadline submit this /by 2023-01-09 1800","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":"event help /from 2022-02-02 1900 /to 2023-09-08 1000","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":"unmark 2","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":"blah","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"chewjh1234"},"content":"whysohard","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"chewjh1234":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"chewjh1234"},"content":"java -classpath ..\\bin Tired \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chewjh1234":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"chewjh1234"},"content":"java -classpath ../bin Tired \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chewjh1234":1,"-":37}}]
