[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"chewjh1234"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"chewjh1234"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"chewjh1234"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"chewjh1234"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"chewjh1234"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"chewjh1234"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"chewjh1234"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"chewjh1234"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"chewjh1234"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"chewjh1234"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"chewjh1234"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"chewjh1234"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"chewjh1234"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"chewjh1234"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"chewjh1234"},"content":"    archiveFileName \u003d \u0027Tired.jar\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"chewjh1234"},"content":"checkstyle {","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"chewjh1234"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chewjh1234":20,"-":43}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"T || 0 || eat ||  || ","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"T || 0 || eat ||  || ","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"E || 0 || run || 2020-02-02 1000 || 2020-11-11 1009","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":"T || 0 || run ||  || ","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":"T || 0 || run ||  || ","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":"T || 0 || run ||  || ","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":"T || 0 || run ||  || ","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"chewjh1234":7}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":" * Represents a task with a deadline in the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":" * A deadline task has a description and a specific deadline date and time.","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"chewjh1234"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"chewjh1234"},"content":"    protected LocalDateTime date;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"chewjh1234"},"content":"     * Creates a new Deadline task with the given description and deadline.","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"chewjh1234"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"chewjh1234"},"content":"     * @param date        The deadline date and time in the format \"yyyy-MM-dd HHmm\".","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"chewjh1234"},"content":"     * @throws DukeException If the description or date is empty.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"chewjh1234"},"content":"    public Deadline(String description, String date) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"chewjh1234"},"content":"        super(description, TaskType.DEADLINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"chewjh1234"},"content":"        assert date !\u003d null;","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"chewjh1234"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"chewjh1234"},"content":"        this.date \u003d LocalDateTime.parse(date, formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"chewjh1234"},"content":"        if (description.trim().isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"chewjh1234"},"content":"            throw new DukeException(\"The description of a deadline task cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"chewjh1234"},"content":"        if (date.trim().isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"chewjh1234"},"content":"            throw new DukeException(\"The deadline cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"chewjh1234"},"content":"     * Returns a string representation of the Deadline task for display.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"chewjh1234"},"content":"     * @return A string representing the Deadline task, including its type, description, and deadline.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"chewjh1234"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"chewjh1234"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"chewjh1234"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"chewjh1234"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"chewjh1234":47}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"package duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"chewjh1234"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"chewjh1234"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"chewjh1234"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"chewjh1234"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"chewjh1234"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"chewjh1234"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"chewjh1234"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"chewjh1234"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"chewjh1234"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"chewjh1234"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"chewjh1234"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"chewjh1234"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"chewjh1234"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"chewjh1234"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"chewjh1234"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"chewjh1234"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"chewjh1234"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"chewjh1234"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"chewjh1234"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"chewjh1234"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"chewjh1234"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"chewjh1234"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"chewjh1234"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"chewjh1234"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"chewjh1234"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"chewjh1234"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"chewjh1234"},"content":"        dialog.setPadding(new Insets(0, 20, 0, 20));","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"chewjh1234"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"chewjh1234"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"chewjh1234"},"content":"    private void flip() {","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"chewjh1234"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"chewjh1234"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"chewjh1234"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"chewjh1234"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"chewjh1234"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"chewjh1234"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"chewjh1234"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"chewjh1234"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"chewjh1234"},"content":"        db.flip();","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"chewjh1234"},"content":"        return db;","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"chewjh1234"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"chewjh1234":63}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":" * Represents an exception specific to the Duke application.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":" * DukeException is used to handle custom exceptions within the Duke application.","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":"class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"chewjh1234"},"content":"     * Creates a new DukeException with the specified error message.","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"chewjh1234"},"content":"     * @param message The error message associated with the exception.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"chewjh1234"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"chewjh1234"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"chewjh1234"},"content":"     * Returns the error message associated with this DukeException.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"chewjh1234"},"content":"     * @return A formatted error message with the Duke application-specific prefix.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"chewjh1234"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"chewjh1234"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"chewjh1234"},"content":"        return (\":( OOPS!!! \" + super.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"chewjh1234"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"chewjh1234":27}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":" * Represents an event task with a description, start time, and end time.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":" * Extends the Task class and includes methods for creating and displaying event tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"chewjh1234"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"chewjh1234"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"chewjh1234"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"chewjh1234"},"content":"     * Creates a new event task with the specified description, start time, and end time.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"chewjh1234"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"chewjh1234"},"content":"     * @param start       The start time of the event in \"yyyy-MM-dd HHmm\" format.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"chewjh1234"},"content":"     * @param end         The end time of the event in \"yyyy-MM-dd HHmm\" format.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"chewjh1234"},"content":"     * @throws DukeException If the description, start time, or end time is empty.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"chewjh1234"},"content":"    public Event(String description, String start, String end) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"chewjh1234"},"content":"        super(description, TaskType.EVENT);","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"chewjh1234"},"content":"        assert description !\u003d null : \"The description of an event cannot be empty!\";","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"chewjh1234"},"content":"        assert start !\u003d null : \"Start time cannot be empty!\";","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"chewjh1234"},"content":"        assert end !\u003d null : \"End time cannot be empty!\";","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"chewjh1234"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"chewjh1234"},"content":"        this.start \u003d LocalDateTime.parse(start, formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"chewjh1234"},"content":"        this.end \u003d LocalDateTime.parse(end, formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"chewjh1234"},"content":"        assert this.start.isBefore(this.end);","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"chewjh1234"},"content":"        if (description.trim().isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"chewjh1234"},"content":"            throw new DukeException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"chewjh1234"},"content":"        if (start.trim().isEmpty() || end.trim().isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"chewjh1234"},"content":"            throw new DukeException(\"The start or end time of an event cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"chewjh1234"},"content":"     * Returns a string representation of the event task, including its type, description,","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"chewjh1234"},"content":"     * start time, and end time.","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"chewjh1234"},"content":"     * @return A string representation of the event task.","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"chewjh1234"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"chewjh1234"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"chewjh1234"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"chewjh1234"},"content":"                + \" (from: \" + start.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\"))","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"chewjh1234"},"content":"                + \" to: \" + end.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"chewjh1234"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"chewjh1234":56}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":"public class Launcher {","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"chewjh1234"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"chewjh1234"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"chewjh1234":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"chewjh1234"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"chewjh1234"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"chewjh1234"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"chewjh1234"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"chewjh1234"},"content":"    private Tired duke \u003d new Tired();","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"chewjh1234"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"chewjh1234"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"chewjh1234"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"chewjh1234"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"chewjh1234"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"chewjh1234"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"chewjh1234"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"chewjh1234"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"chewjh1234"},"content":"            stage.show();","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"chewjh1234"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"chewjh1234"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"chewjh1234"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"chewjh1234":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"chewjh1234"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"chewjh1234"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"chewjh1234"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"chewjh1234"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"chewjh1234"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"chewjh1234"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"chewjh1234"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"chewjh1234"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"chewjh1234"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"chewjh1234"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"chewjh1234"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"chewjh1234"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"chewjh1234"},"content":"    private Tired duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"chewjh1234"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/UserCat.png\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"chewjh1234"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DukeCat.png\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"chewjh1234"},"content":"     * Initialises all the nodes and shows the welcome message","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"chewjh1234"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"chewjh1234"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"chewjh1234"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"chewjh1234"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"chewjh1234"},"content":"                DialogBox.getDukeDialog(\"Hello! I\u0027m Tired.\\n\" + \"What can I do for you?\", dukeImage)","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"chewjh1234"},"content":"        );","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"chewjh1234"},"content":"    public void setDuke(Tired d) {","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"chewjh1234"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"chewjh1234"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"chewjh1234"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"chewjh1234"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"chewjh1234"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"chewjh1234"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"chewjh1234"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"chewjh1234"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"chewjh1234"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"chewjh1234"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"chewjh1234"},"content":"        );","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"chewjh1234"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"chewjh1234"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"chewjh1234":58}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":" * The Parser class handles parsing of user commands and input for the Duke application.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":" * It provides methods to recognize and process different types of commands and tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":"public class Parser {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"chewjh1234"},"content":"     * Checks if the input is a command to find a task (todo, event, or deadline).","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"chewjh1234"},"content":"     * @param input The user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"chewjh1234"},"content":"     * @return True if the input is a find task command, false otherwise.","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"chewjh1234"},"content":"    public static boolean isFindCommand(String input) {","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"chewjh1234"},"content":"        return input.startsWith(\"find\");","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"chewjh1234"},"content":"     * Parses a \"find\" command.","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"chewjh1234"},"content":"     * @param input   The user input containing the \"find\" command and keyword.","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"chewjh1234"},"content":"     * @param tasks   The list of tasks to search within.","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"chewjh1234"},"content":"     * @param ui      The user interface responsible for displaying the matching tasks.","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"chewjh1234"},"content":"     * @return A string representation of the matching tasks.","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"chewjh1234"},"content":"    public static String parseFindCommand(String input, TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"chewjh1234"},"content":"        String keyword \u003d input.replace(\"find\", \"\").trim();","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"chewjh1234"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d tasks.findTasksWithKeyword(keyword);","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"chewjh1234"},"content":"        return ui.showMatchingTasks(matchingTasks);","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"chewjh1234"},"content":"     * Checks if the input is a command to create a task (todo, event, or deadline).","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"chewjh1234"},"content":"     * @param input The user input.","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"chewjh1234"},"content":"     * @return True if the input is a create task command, false otherwise.","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"chewjh1234"},"content":"    public static boolean isCreateTaskCommand(String input) {","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"chewjh1234"},"content":"        String trimmedInput \u003d input.trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"chewjh1234"},"content":"        return trimmedInput.startsWith(\"todo\")","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"chewjh1234"},"content":"                || trimmedInput.startsWith(\"event\")","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"chewjh1234"},"content":"                || trimmedInput.startsWith(\"deadline\");","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"chewjh1234"},"content":"     * Parses a command for creating a new task.","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"chewjh1234"},"content":"     * @param input The user input containing the command and task details.","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"chewjh1234"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"chewjh1234"},"content":"     * @param ui    The user interface.","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"chewjh1234"},"content":"     * @return A string message indicating the result of the create task operation.","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"chewjh1234"},"content":"     * @throws DukeException If there is an error in parsing the input or creating the task.","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"chewjh1234"},"content":"    private static String parseCreateTaskCommand(String input, TaskList tasks, Ui ui) throws DukeException {","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"chewjh1234"},"content":"        Task newTask \u003d parseStringToTask(input);","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"chewjh1234"},"content":"        return tasks.addTask(newTask, ui);","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"chewjh1234"},"content":"     * Checks if the input is a \"list\" command.","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"chewjh1234"},"content":"     * @param input The user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"chewjh1234"},"content":"     * @return True if the input is a \"list\" command, false otherwise.","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"chewjh1234"},"content":"    public static boolean isListCommand(String input) {","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"chewjh1234"},"content":"        return input.equals(\"list\");","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"chewjh1234"},"content":"     * Displays the list of tasks using the user interface.","lastModifiedDate":"2023-09-13"},{"lineNumber":74,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":75,"author":{"gitId":"chewjh1234"},"content":"     * @param tasks The list of tasks to be displayed.","lastModifiedDate":"2023-09-13"},{"lineNumber":76,"author":{"gitId":"chewjh1234"},"content":"     * @param ui    The user interface responsible for rendering the task list.","lastModifiedDate":"2023-09-13"},{"lineNumber":77,"author":{"gitId":"chewjh1234"},"content":"     * @return A string representation of the task list.","lastModifiedDate":"2023-09-13"},{"lineNumber":78,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":79,"author":{"gitId":"chewjh1234"},"content":"    private static String showTaskList(TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-13"},{"lineNumber":80,"author":{"gitId":"chewjh1234"},"content":"        return ui.showTaskList(tasks);","lastModifiedDate":"2023-09-13"},{"lineNumber":81,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":82,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":83,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"chewjh1234"},"content":"     * Checks if the input is a \"mark\" command.","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"chewjh1234"},"content":"     * @param input The user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"chewjh1234"},"content":"     * @return True if the input is a \"mark\" command, false otherwise.","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"chewjh1234"},"content":"    public static boolean isMarkCommand(String input) {","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"chewjh1234"},"content":"        return input.startsWith(\"mark\");","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":94,"author":{"gitId":"chewjh1234"},"content":"     * Parses a \"mark\" command.","lastModifiedDate":"2023-09-13"},{"lineNumber":95,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":96,"author":{"gitId":"chewjh1234"},"content":"     * @param input The user input containing the \"mark\" command and task index.","lastModifiedDate":"2023-09-13"},{"lineNumber":97,"author":{"gitId":"chewjh1234"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-09-13"},{"lineNumber":98,"author":{"gitId":"chewjh1234"},"content":"     * @param ui    The user interface.","lastModifiedDate":"2023-09-13"},{"lineNumber":99,"author":{"gitId":"chewjh1234"},"content":"     * @return A string message indicating the result of the mark operation.","lastModifiedDate":"2023-09-13"},{"lineNumber":100,"author":{"gitId":"chewjh1234"},"content":"     * @throws AssertionError If the task index is out of bounds.","lastModifiedDate":"2023-09-13"},{"lineNumber":101,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":102,"author":{"gitId":"chewjh1234"},"content":"    private static String parseMarkCommand(String input, TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-13"},{"lineNumber":103,"author":{"gitId":"chewjh1234"},"content":"        int taskIndex;","lastModifiedDate":"2023-09-13"},{"lineNumber":104,"author":{"gitId":"chewjh1234"},"content":"        taskIndex \u003d Integer.parseInt(input.replace(\"mark\", \"\").trim()) - 1;","lastModifiedDate":"2023-09-13"},{"lineNumber":105,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":106,"author":{"gitId":"chewjh1234"},"content":"        assert (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.getSize());","lastModifiedDate":"2023-09-13"},{"lineNumber":107,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":108,"author":{"gitId":"chewjh1234"},"content":"        return tasks.markTask(taskIndex, ui);","lastModifiedDate":"2023-09-13"},{"lineNumber":109,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":110,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":111,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":112,"author":{"gitId":"chewjh1234"},"content":"     * Checks if the input is an \"unmark\" command.","lastModifiedDate":"2023-09-13"},{"lineNumber":113,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":114,"author":{"gitId":"chewjh1234"},"content":"     * @param input The user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":115,"author":{"gitId":"chewjh1234"},"content":"     * @return True if the input is a \"mark\" command, false otherwise.","lastModifiedDate":"2023-09-03"},{"lineNumber":116,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":117,"author":{"gitId":"chewjh1234"},"content":"    public static boolean isUnmarkCommand(String input) {","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"chewjh1234"},"content":"        return input.startsWith(\"unmark\");","lastModifiedDate":"2023-09-03"},{"lineNumber":119,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":120,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":121,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":122,"author":{"gitId":"chewjh1234"},"content":"     * Parses an \"unmark\" command.","lastModifiedDate":"2023-09-13"},{"lineNumber":123,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":124,"author":{"gitId":"chewjh1234"},"content":"     * @param input The user input containing the \"unmark\" command and task index.","lastModifiedDate":"2023-09-13"},{"lineNumber":125,"author":{"gitId":"chewjh1234"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-09-13"},{"lineNumber":126,"author":{"gitId":"chewjh1234"},"content":"     * @param ui    The user interface.","lastModifiedDate":"2023-09-13"},{"lineNumber":127,"author":{"gitId":"chewjh1234"},"content":"     * @return A string message indicating the result of the unmark operation.","lastModifiedDate":"2023-09-13"},{"lineNumber":128,"author":{"gitId":"chewjh1234"},"content":"     * @throws AssertionError If the task index is out of bounds.","lastModifiedDate":"2023-09-13"},{"lineNumber":129,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":130,"author":{"gitId":"chewjh1234"},"content":"    private static String parseUnmarkCommand(String input, TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-13"},{"lineNumber":131,"author":{"gitId":"chewjh1234"},"content":"        int taskIndex;","lastModifiedDate":"2023-09-13"},{"lineNumber":132,"author":{"gitId":"chewjh1234"},"content":"        taskIndex \u003d Integer.parseInt(input.replace(\"unmark\", \"\").trim()) - 1;","lastModifiedDate":"2023-09-13"},{"lineNumber":133,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":134,"author":{"gitId":"chewjh1234"},"content":"        assert (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.getSize());","lastModifiedDate":"2023-09-13"},{"lineNumber":135,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":136,"author":{"gitId":"chewjh1234"},"content":"        return tasks.unmarkTask(taskIndex, ui);","lastModifiedDate":"2023-09-13"},{"lineNumber":137,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":138,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":139,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":140,"author":{"gitId":"chewjh1234"},"content":"     * Checks if the input is a \"delete\" command.","lastModifiedDate":"2023-09-03"},{"lineNumber":141,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":142,"author":{"gitId":"chewjh1234"},"content":"     * @param input The user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":143,"author":{"gitId":"chewjh1234"},"content":"     * @return True if the input is a \"delete\" command, false otherwise.","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":145,"author":{"gitId":"chewjh1234"},"content":"    public static boolean isDeleteCommand(String input) {","lastModifiedDate":"2023-09-03"},{"lineNumber":146,"author":{"gitId":"chewjh1234"},"content":"        return input.startsWith(\"delete\");","lastModifiedDate":"2023-09-03"},{"lineNumber":147,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":148,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":149,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":150,"author":{"gitId":"chewjh1234"},"content":"     * Parses a \"delete\" command.","lastModifiedDate":"2023-09-13"},{"lineNumber":151,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":152,"author":{"gitId":"chewjh1234"},"content":"     * @param input The user input containing the \"delete\" command and task index.","lastModifiedDate":"2023-09-13"},{"lineNumber":153,"author":{"gitId":"chewjh1234"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-09-13"},{"lineNumber":154,"author":{"gitId":"chewjh1234"},"content":"     * @param ui    The user interface.","lastModifiedDate":"2023-09-13"},{"lineNumber":155,"author":{"gitId":"chewjh1234"},"content":"     * @return A string message indicating the result of the delete operation.","lastModifiedDate":"2023-09-13"},{"lineNumber":156,"author":{"gitId":"chewjh1234"},"content":"     * @throws AssertionError If the task index is out of bounds.","lastModifiedDate":"2023-09-13"},{"lineNumber":157,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":158,"author":{"gitId":"chewjh1234"},"content":"    private static String parseDeleteCommand(String input, TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-13"},{"lineNumber":159,"author":{"gitId":"chewjh1234"},"content":"        int taskIndex;","lastModifiedDate":"2023-09-13"},{"lineNumber":160,"author":{"gitId":"chewjh1234"},"content":"        taskIndex \u003d Integer.parseInt(input.replace(\"delete\", \"\").trim()) - 1;","lastModifiedDate":"2023-09-13"},{"lineNumber":161,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":162,"author":{"gitId":"chewjh1234"},"content":"        assert (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.getSize());","lastModifiedDate":"2023-09-13"},{"lineNumber":163,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":164,"author":{"gitId":"chewjh1234"},"content":"        return tasks.removeTask(taskIndex, ui);","lastModifiedDate":"2023-09-13"},{"lineNumber":165,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":166,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":167,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":168,"author":{"gitId":"chewjh1234"},"content":"     * Performs a corresponding action based on the user\u0027s input.","lastModifiedDate":"2023-09-09"},{"lineNumber":169,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":170,"author":{"gitId":"chewjh1234"},"content":"     * @param input The user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":171,"author":{"gitId":"chewjh1234"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":172,"author":{"gitId":"chewjh1234"},"content":"     * @param ui    The user interface.","lastModifiedDate":"2023-09-03"},{"lineNumber":173,"author":{"gitId":"chewjh1234"},"content":"     * @return A string of the task or task list to be displayed on the UI.","lastModifiedDate":"2023-09-09"},{"lineNumber":174,"author":{"gitId":"chewjh1234"},"content":"     * @throws DukeException If there is an error in processing the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":175,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":176,"author":{"gitId":"chewjh1234"},"content":"    public static String parseCommand(String input, TaskList tasks, Ui ui) throws DukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":177,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":178,"author":{"gitId":"chewjh1234"},"content":"        assert ui !\u003d null;","lastModifiedDate":"2023-09-13"},{"lineNumber":179,"author":{"gitId":"chewjh1234"},"content":"      ","lastModifiedDate":"2023-09-13"},{"lineNumber":180,"author":{"gitId":"chewjh1234"},"content":"        if (isListCommand(input)) {","lastModifiedDate":"2023-09-09"},{"lineNumber":181,"author":{"gitId":"chewjh1234"},"content":"            return showTaskList(tasks, ui);","lastModifiedDate":"2023-09-13"},{"lineNumber":182,"author":{"gitId":"chewjh1234"},"content":"        } else if (isFindCommand(input)) {","lastModifiedDate":"2023-09-13"},{"lineNumber":183,"author":{"gitId":"chewjh1234"},"content":"            return parseFindCommand(input, tasks, ui);","lastModifiedDate":"2023-09-13"},{"lineNumber":184,"author":{"gitId":"chewjh1234"},"content":"        } else if (isCreateTaskCommand(input)) {","lastModifiedDate":"2023-09-13"},{"lineNumber":185,"author":{"gitId":"chewjh1234"},"content":"            return parseCreateTaskCommand(input, tasks, ui);","lastModifiedDate":"2023-09-13"},{"lineNumber":186,"author":{"gitId":"chewjh1234"},"content":"        } else if (isDeleteCommand(input)) {","lastModifiedDate":"2023-09-13"},{"lineNumber":187,"author":{"gitId":"chewjh1234"},"content":"            return parseDeleteCommand(input, tasks, ui);","lastModifiedDate":"2023-09-13"},{"lineNumber":188,"author":{"gitId":"chewjh1234"},"content":"        } else if (isMarkCommand(input)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":189,"author":{"gitId":"chewjh1234"},"content":"            return parseMarkCommand(input, tasks, ui);","lastModifiedDate":"2023-09-13"},{"lineNumber":190,"author":{"gitId":"chewjh1234"},"content":"        } else if (isUnmarkCommand(input)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":191,"author":{"gitId":"chewjh1234"},"content":"            return parseUnmarkCommand(input, tasks, ui);","lastModifiedDate":"2023-09-13"},{"lineNumber":192,"author":{"gitId":"chewjh1234"},"content":"        } else {","lastModifiedDate":"2023-09-13"},{"lineNumber":193,"author":{"gitId":"chewjh1234"},"content":"            throw new DukeException(\"Invalid input :(\");","lastModifiedDate":"2023-09-13"},{"lineNumber":194,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":195,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":196,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":197,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":198,"author":{"gitId":"chewjh1234"},"content":"     * Converts a string representation of a task into a Task object.","lastModifiedDate":"2023-09-03"},{"lineNumber":199,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":200,"author":{"gitId":"chewjh1234"},"content":"     * @param line The string representation of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":201,"author":{"gitId":"chewjh1234"},"content":"     * @return The Task object.","lastModifiedDate":"2023-09-03"},{"lineNumber":202,"author":{"gitId":"chewjh1234"},"content":"     * @throws DukeException If there is an error in parsing the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":203,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":204,"author":{"gitId":"chewjh1234"},"content":"    public static Task convertToTask(String line) throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":205,"author":{"gitId":"chewjh1234"},"content":"        String[] parts \u003d line.split(\"\\\\|\\\\|\");","lastModifiedDate":"2023-09-03"},{"lineNumber":206,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":207,"author":{"gitId":"chewjh1234"},"content":"        if (parts.length \u003c 5) {","lastModifiedDate":"2023-09-03"},{"lineNumber":208,"author":{"gitId":"chewjh1234"},"content":"            throw new DukeException(\"Invalid task format in file: \" + line);","lastModifiedDate":"2023-09-03"},{"lineNumber":209,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":210,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":211,"author":{"gitId":"chewjh1234"},"content":"        String taskType \u003d parts[0].trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":212,"author":{"gitId":"chewjh1234"},"content":"        String taskStatus \u003d parts[1].trim();","lastModifiedDate":"2023-09-08"},{"lineNumber":213,"author":{"gitId":"chewjh1234"},"content":"        String taskDescription \u003d parts[2].trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":214,"author":{"gitId":"chewjh1234"},"content":"        String start \u003d parts[3].trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":215,"author":{"gitId":"chewjh1234"},"content":"        String end \u003d parts[4].trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":216,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":217,"author":{"gitId":"chewjh1234"},"content":"        assert taskStatus.equals(\"0\") || taskStatus.equals(\"1\");","lastModifiedDate":"2023-09-13"},{"lineNumber":218,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":219,"author":{"gitId":"chewjh1234"},"content":"        Task task;","lastModifiedDate":"2023-09-13"},{"lineNumber":220,"author":{"gitId":"chewjh1234"},"content":"      ","lastModifiedDate":"2023-09-12"},{"lineNumber":221,"author":{"gitId":"chewjh1234"},"content":"        switch (taskType) {","lastModifiedDate":"2023-09-03"},{"lineNumber":222,"author":{"gitId":"chewjh1234"},"content":"        case \"T\":","lastModifiedDate":"2023-09-03"},{"lineNumber":223,"author":{"gitId":"chewjh1234"},"content":"            task \u003d new ToDo(taskDescription);","lastModifiedDate":"2023-09-03"},{"lineNumber":224,"author":{"gitId":"chewjh1234"},"content":"            break;","lastModifiedDate":"2023-09-03"},{"lineNumber":225,"author":{"gitId":"chewjh1234"},"content":"        case \"D\":","lastModifiedDate":"2023-09-03"},{"lineNumber":226,"author":{"gitId":"chewjh1234"},"content":"            task \u003d new Deadline(taskDescription, end);","lastModifiedDate":"2023-09-03"},{"lineNumber":227,"author":{"gitId":"chewjh1234"},"content":"            break;","lastModifiedDate":"2023-09-03"},{"lineNumber":228,"author":{"gitId":"chewjh1234"},"content":"        case \"E\":","lastModifiedDate":"2023-09-03"},{"lineNumber":229,"author":{"gitId":"chewjh1234"},"content":"            task \u003d new Event(taskDescription, start, end);","lastModifiedDate":"2023-09-03"},{"lineNumber":230,"author":{"gitId":"chewjh1234"},"content":"            break;","lastModifiedDate":"2023-09-03"},{"lineNumber":231,"author":{"gitId":"chewjh1234"},"content":"        default:","lastModifiedDate":"2023-09-12"},{"lineNumber":232,"author":{"gitId":"chewjh1234"},"content":"            throw new DukeException(\"Invalid task type!\");","lastModifiedDate":"2023-09-13"},{"lineNumber":233,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":234,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":235,"author":{"gitId":"chewjh1234"},"content":"        if (taskStatus.equals(\"0\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":236,"author":{"gitId":"chewjh1234"},"content":"            task.markAsUndone();","lastModifiedDate":"2023-09-13"},{"lineNumber":237,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":238,"author":{"gitId":"chewjh1234"},"content":"        return task;","lastModifiedDate":"2023-09-03"},{"lineNumber":239,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":240,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":241,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":242,"author":{"gitId":"chewjh1234"},"content":"     * Parses the user input for creating a new task and returns the corresponding Task object.","lastModifiedDate":"2023-09-03"},{"lineNumber":243,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":244,"author":{"gitId":"chewjh1234"},"content":"     * @param input The user input for creating a task.","lastModifiedDate":"2023-09-03"},{"lineNumber":245,"author":{"gitId":"chewjh1234"},"content":"     * @return The Task object created from the input.","lastModifiedDate":"2023-09-03"},{"lineNumber":246,"author":{"gitId":"chewjh1234"},"content":"     * @throws DukeException If there is an error in parsing the input or creating the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":247,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":248,"author":{"gitId":"chewjh1234"},"content":"    public static Task parseStringToTask(String input) throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":249,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":250,"author":{"gitId":"chewjh1234"},"content":"        assert input !\u003d null;","lastModifiedDate":"2023-09-13"},{"lineNumber":251,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":252,"author":{"gitId":"chewjh1234"},"content":"        String[] parts \u003d input.split(\"/\");","lastModifiedDate":"2023-09-03"},{"lineNumber":253,"author":{"gitId":"chewjh1234"},"content":"        String taskDetails \u003d parts[0].trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":254,"author":{"gitId":"chewjh1234"},"content":"        TaskType taskType \u003d determineTaskType(taskDetails);","lastModifiedDate":"2023-09-13"},{"lineNumber":255,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":256,"author":{"gitId":"chewjh1234"},"content":"        return createTask(taskType, taskDetails, parts);","lastModifiedDate":"2023-09-13"},{"lineNumber":257,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":258,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":259,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":260,"author":{"gitId":"chewjh1234"},"content":"     * Determines the type of task based on the provided task details.","lastModifiedDate":"2023-09-13"},{"lineNumber":261,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":262,"author":{"gitId":"chewjh1234"},"content":"     * @param taskDetails The description of the task.","lastModifiedDate":"2023-09-13"},{"lineNumber":263,"author":{"gitId":"chewjh1234"},"content":"     * @return The TaskType corresponding to the task details.","lastModifiedDate":"2023-09-13"},{"lineNumber":264,"author":{"gitId":"chewjh1234"},"content":"     * @throws DukeException If the task type is not recognized.","lastModifiedDate":"2023-09-13"},{"lineNumber":265,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":266,"author":{"gitId":"chewjh1234"},"content":"    private static TaskType determineTaskType(String taskDetails) throws DukeException {","lastModifiedDate":"2023-09-13"},{"lineNumber":267,"author":{"gitId":"chewjh1234"},"content":"        if (taskDetails.startsWith(\"todo\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":268,"author":{"gitId":"chewjh1234"},"content":"            return TaskType.TODO;","lastModifiedDate":"2023-09-13"},{"lineNumber":269,"author":{"gitId":"chewjh1234"},"content":"        } else if (taskDetails.startsWith(\"deadline\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":270,"author":{"gitId":"chewjh1234"},"content":"            return TaskType.DEADLINE;","lastModifiedDate":"2023-09-13"},{"lineNumber":271,"author":{"gitId":"chewjh1234"},"content":"        } else if (taskDetails.startsWith(\"event\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":272,"author":{"gitId":"chewjh1234"},"content":"            return TaskType.EVENT;","lastModifiedDate":"2023-09-13"},{"lineNumber":273,"author":{"gitId":"chewjh1234"},"content":"        } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":274,"author":{"gitId":"chewjh1234"},"content":"            throw new DukeException(\"Invalid task type\");","lastModifiedDate":"2023-09-13"},{"lineNumber":275,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":276,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":277,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":278,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":279,"author":{"gitId":"chewjh1234"},"content":"     * Creates a new task of the specified type with the given task details.","lastModifiedDate":"2023-09-13"},{"lineNumber":280,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":281,"author":{"gitId":"chewjh1234"},"content":"     * @param taskType    The type of the task (TODO, DEADLINE, or EVENT).","lastModifiedDate":"2023-09-13"},{"lineNumber":282,"author":{"gitId":"chewjh1234"},"content":"     * @param taskDetails The description of the task.","lastModifiedDate":"2023-09-13"},{"lineNumber":283,"author":{"gitId":"chewjh1234"},"content":"     * @param parts       An array containing the task details and additional information.","lastModifiedDate":"2023-09-13"},{"lineNumber":284,"author":{"gitId":"chewjh1234"},"content":"     * @return A new task of the specified type.","lastModifiedDate":"2023-09-13"},{"lineNumber":285,"author":{"gitId":"chewjh1234"},"content":"     * @throws DukeException If there is an error in creating the task or if the input format is invalid.","lastModifiedDate":"2023-09-13"},{"lineNumber":286,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":287,"author":{"gitId":"chewjh1234"},"content":"    private static Task createTask(TaskType taskType, String taskDetails, String[] parts) throws DukeException {","lastModifiedDate":"2023-09-13"},{"lineNumber":288,"author":{"gitId":"chewjh1234"},"content":"        String trimmedTaskDetails;","lastModifiedDate":"2023-09-13"},{"lineNumber":289,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":290,"author":{"gitId":"chewjh1234"},"content":"        switch (taskType) {","lastModifiedDate":"2023-09-03"},{"lineNumber":291,"author":{"gitId":"chewjh1234"},"content":"        case TODO:","lastModifiedDate":"2023-09-03"},{"lineNumber":292,"author":{"gitId":"chewjh1234"},"content":"            trimmedTaskDetails \u003d taskDetails.substring(4).trim();","lastModifiedDate":"2023-09-13"},{"lineNumber":293,"author":{"gitId":"chewjh1234"},"content":"            return createToDoTask(trimmedTaskDetails);","lastModifiedDate":"2023-09-13"},{"lineNumber":294,"author":{"gitId":"chewjh1234"},"content":"        case DEADLINE:","lastModifiedDate":"2023-09-03"},{"lineNumber":295,"author":{"gitId":"chewjh1234"},"content":"            trimmedTaskDetails \u003d taskDetails.substring(8).trim();","lastModifiedDate":"2023-09-13"},{"lineNumber":296,"author":{"gitId":"chewjh1234"},"content":"            return createDeadlineTask(trimmedTaskDetails, parts);","lastModifiedDate":"2023-09-13"},{"lineNumber":297,"author":{"gitId":"chewjh1234"},"content":"        case EVENT:","lastModifiedDate":"2023-09-13"},{"lineNumber":298,"author":{"gitId":"chewjh1234"},"content":"            trimmedTaskDetails \u003d taskDetails.substring(5).trim();","lastModifiedDate":"2023-09-13"},{"lineNumber":299,"author":{"gitId":"chewjh1234"},"content":"            return createEventTask(trimmedTaskDetails, parts);","lastModifiedDate":"2023-09-13"},{"lineNumber":300,"author":{"gitId":"chewjh1234"},"content":"        default:","lastModifiedDate":"2023-09-13"},{"lineNumber":301,"author":{"gitId":"chewjh1234"},"content":"            throw new DukeException(\"Invalid task type\");","lastModifiedDate":"2023-09-13"},{"lineNumber":302,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":303,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":304,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":305,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":306,"author":{"gitId":"chewjh1234"},"content":"     * Creates a new ToDo task with the given task details.","lastModifiedDate":"2023-09-13"},{"lineNumber":307,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":308,"author":{"gitId":"chewjh1234"},"content":"     * @param taskDetails The description of the ToDo task.","lastModifiedDate":"2023-09-13"},{"lineNumber":309,"author":{"gitId":"chewjh1234"},"content":"     * @return A new ToDo task.","lastModifiedDate":"2023-09-13"},{"lineNumber":310,"author":{"gitId":"chewjh1234"},"content":"     * @throws DukeException If there is an error in creating the task.","lastModifiedDate":"2023-09-13"},{"lineNumber":311,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":312,"author":{"gitId":"chewjh1234"},"content":"    private static Task createToDoTask(String taskDetails) throws DukeException {","lastModifiedDate":"2023-09-13"},{"lineNumber":313,"author":{"gitId":"chewjh1234"},"content":"        return new ToDo(taskDetails);","lastModifiedDate":"2023-09-13"},{"lineNumber":314,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":315,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":316,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":317,"author":{"gitId":"chewjh1234"},"content":"     * Creates a new Deadline task with the given task details and deadline date.","lastModifiedDate":"2023-09-13"},{"lineNumber":318,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":319,"author":{"gitId":"chewjh1234"},"content":"     * @param taskDetails The description of the Deadline task.","lastModifiedDate":"2023-09-13"},{"lineNumber":320,"author":{"gitId":"chewjh1234"},"content":"     * @param parts       An array containing the task details and deadline.","lastModifiedDate":"2023-09-13"},{"lineNumber":321,"author":{"gitId":"chewjh1234"},"content":"     * @return A new Deadline task.","lastModifiedDate":"2023-09-13"},{"lineNumber":322,"author":{"gitId":"chewjh1234"},"content":"     * @throws DukeException If there is an error in creating the task or if the input format is invalid.","lastModifiedDate":"2023-09-13"},{"lineNumber":323,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":324,"author":{"gitId":"chewjh1234"},"content":"    private static Task createDeadlineTask(String taskDetails, String[] parts) throws DukeException {","lastModifiedDate":"2023-09-13"},{"lineNumber":325,"author":{"gitId":"chewjh1234"},"content":"        if (parts.length !\u003d 2 || parts[1].length() \u003c 2) {","lastModifiedDate":"2023-09-03"},{"lineNumber":326,"author":{"gitId":"chewjh1234"},"content":"            throw new DukeException(\"Invalid input for a task with deadline. \"","lastModifiedDate":"2023-09-12"},{"lineNumber":327,"author":{"gitId":"chewjh1234"},"content":"                    + \"Please input \u0027deadline \u003ctask name\u003e /by \u003cend\u003e\u0027\");","lastModifiedDate":"2023-09-12"},{"lineNumber":328,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":329,"author":{"gitId":"chewjh1234"},"content":"        String date \u003d parts[1].substring(2).trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":330,"author":{"gitId":"chewjh1234"},"content":"        return new Deadline(taskDetails, date);","lastModifiedDate":"2023-09-13"},{"lineNumber":331,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":332,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":333,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":334,"author":{"gitId":"chewjh1234"},"content":"     * Creates a new Event task with the given task details, start time, and end time.","lastModifiedDate":"2023-09-13"},{"lineNumber":335,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":336,"author":{"gitId":"chewjh1234"},"content":"     * @param taskDetails The description of the Event task.","lastModifiedDate":"2023-09-13"},{"lineNumber":337,"author":{"gitId":"chewjh1234"},"content":"     * @param parts       An array containing the task details, start time, and end time.","lastModifiedDate":"2023-09-13"},{"lineNumber":338,"author":{"gitId":"chewjh1234"},"content":"     * @return A new Event task.","lastModifiedDate":"2023-09-13"},{"lineNumber":339,"author":{"gitId":"chewjh1234"},"content":"     * @throws DukeException If there is an error in creating the task or if the input format is invalid.","lastModifiedDate":"2023-09-13"},{"lineNumber":340,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":341,"author":{"gitId":"chewjh1234"},"content":"    private static Task createEventTask(String taskDetails, String[] parts) throws DukeException {","lastModifiedDate":"2023-09-13"},{"lineNumber":342,"author":{"gitId":"chewjh1234"},"content":"        if (parts.length !\u003d 3 || parts[1].length() \u003c 5 || parts[2].length() \u003c 3) {","lastModifiedDate":"2023-09-03"},{"lineNumber":343,"author":{"gitId":"chewjh1234"},"content":"            throw new DukeException(\"Invalid input for an event. \"","lastModifiedDate":"2023-09-12"},{"lineNumber":344,"author":{"gitId":"chewjh1234"},"content":"                    + \"Please input \u0027event \u003cevent name\u003e /from \u003cstart\u003e /to \u003cend\u003e\u0027\");","lastModifiedDate":"2023-09-12"},{"lineNumber":345,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":346,"author":{"gitId":"chewjh1234"},"content":"        String start \u003d parts[1].substring(5).trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":347,"author":{"gitId":"chewjh1234"},"content":"        String end \u003d parts[2].substring(3).trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":348,"author":{"gitId":"chewjh1234"},"content":"        return new Event(taskDetails, start, end);","lastModifiedDate":"2023-09-13"},{"lineNumber":349,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":350,"author":{"gitId":"chewjh1234"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"chewjh1234":350}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":"import java.util.List;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"chewjh1234"},"content":" * The Storage class manages the loading and saving of task data to a file.","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"chewjh1234"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"chewjh1234"},"content":"public class Storage {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"chewjh1234"},"content":"    private Path dataPath;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"chewjh1234"},"content":"     * Constructs a Storage object with the specified file name.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"chewjh1234"},"content":"     * If the file or directory does not exist, it will be created.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"chewjh1234"},"content":"     * @param fileName The name of the data file.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"chewjh1234"},"content":"    public Storage(String fileName) {","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"chewjh1234"},"content":"        assert fileName !\u003d null : \"File name cannot be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"chewjh1234"},"content":"        createFile(fileName);","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"chewjh1234"},"content":"        this.dataPath \u003d Path.of(\".\", \"data\", fileName);","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"chewjh1234"},"content":"     * Creates a new directory or file if either has not existed yet.","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"chewjh1234"},"content":"    private void createFile(String fileName) {","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"chewjh1234"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"chewjh1234"},"content":"            Path dataDirectoryPath \u003d Path.of(\".\", \"data\");","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"chewjh1234"},"content":"            if (!Files.exists(dataDirectoryPath)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"chewjh1234"},"content":"                Files.createDirectories(dataDirectoryPath);","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"chewjh1234"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"chewjh1234"},"content":"            Path dataPath \u003d dataDirectoryPath.resolve(fileName);","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"chewjh1234"},"content":"            if (!Files.exists(dataPath)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"chewjh1234"},"content":"                Files.createFile(dataPath);","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"chewjh1234"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"chewjh1234"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"chewjh1234"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"chewjh1234"},"content":"     * Loads tasks from the data file and returns them as an ArrayList.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"chewjh1234"},"content":"     * @return An ArrayList of Task objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"chewjh1234"},"content":"     * @throws DukeException If there is an error reading the data file or parsing the tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"chewjh1234"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"chewjh1234"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"chewjh1234"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"chewjh1234"},"content":"            List\u003cString\u003e fileLines \u003d Files.readAllLines(dataPath);","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"chewjh1234"},"content":"            for (String line : fileLines) {","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"chewjh1234"},"content":"                Task task \u003d Parser.convertToTask(line);","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"chewjh1234"},"content":"                assert task !\u003d null;","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"chewjh1234"},"content":"                tasks.add(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"chewjh1234"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"chewjh1234"},"content":"        } catch (IOException | DukeException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"chewjh1234"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"chewjh1234"},"content":"        return tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"chewjh1234"},"content":"     * Saves the updated list of tasks to the data file.","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"chewjh1234"},"content":"     * @param updatedTasks The TaskList containing the updated tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"chewjh1234"},"content":"    public void saveToFile(TaskList updatedTasks) throws DukeException {","lastModifiedDate":"2023-09-13"},{"lineNumber":75,"author":{"gitId":"chewjh1234"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"chewjh1234"},"content":"            if (updatedTasks \u003d\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"chewjh1234"},"content":"                return;","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"chewjh1234"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"chewjh1234"},"content":"            List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"chewjh1234"},"content":"            for (Task task : updatedTasks.tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"chewjh1234"},"content":"                lines.add(task.taskToFileString());","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"chewjh1234"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"chewjh1234"},"content":"            Files.write(dataPath, lines);","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"chewjh1234"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"chewjh1234"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-09-13"},{"lineNumber":88,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"chewjh1234"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"chewjh1234":90}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":" * The Task class represents a task with a description, status, and type.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"chewjh1234"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"chewjh1234"},"content":"    protected TaskType taskType;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"chewjh1234"},"content":"     * Constructs a Task object with the specified description and task type.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"chewjh1234"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"chewjh1234"},"content":"     * @param taskType    The type of the task (ToDo, Deadline, or Event).","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"chewjh1234"},"content":"    public Task(String description, TaskType taskType) {","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"chewjh1234"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"chewjh1234"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"chewjh1234"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"chewjh1234"},"content":"     * Returns an icon representing the status of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"chewjh1234"},"content":"     * @return \"X\" if the task is done, \" \" (empty) if the task is not done.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"chewjh1234"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"chewjh1234"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"chewjh1234"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"chewjh1234"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"chewjh1234"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"chewjh1234"},"content":"     * Marks the task as undone.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"chewjh1234"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"chewjh1234"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"chewjh1234"},"content":"     * Checks if the task is done.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"chewjh1234"},"content":"     * @return true if the task is done, false if it\u0027s not done.","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"chewjh1234"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"chewjh1234"},"content":"        return this.isDone;","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"chewjh1234"},"content":"     * Gets the description of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"chewjh1234"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"chewjh1234"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"chewjh1234"},"content":"        return this.description;","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"chewjh1234"},"content":"     * Converts the task to a formatted string for saving to a data file.","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"chewjh1234"},"content":"     * @return A formatted string representing the task in the format:","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"chewjh1234"},"content":"     *         \"taskType || doneStatus || taskDescription || start || end\"","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"chewjh1234"},"content":"    public String taskToFileString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"chewjh1234"},"content":"        String taskType \u003d \"\";","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"chewjh1234"},"content":"        String doneStatus \u003d this.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"chewjh1234"},"content":"        String taskDescription \u003d this.getDescription();","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"chewjh1234"},"content":"        String start \u003d \"\";","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"chewjh1234"},"content":"        String end \u003d \"\";","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"chewjh1234"},"content":"        if (this instanceof ToDo) {","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"chewjh1234"},"content":"            taskType \u003d \"T\";","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"chewjh1234"},"content":"        } else if (this instanceof Deadline) {","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"chewjh1234"},"content":"            taskType \u003d \"D\";","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"chewjh1234"},"content":"            end \u003d ((Deadline) this).date.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"chewjh1234"},"content":"        } else if (this instanceof Event) {","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"chewjh1234"},"content":"            taskType \u003d \"E\";","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"chewjh1234"},"content":"            start \u003d ((Event) this).start.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"chewjh1234"},"content":"            end \u003d ((Event) this).end.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"chewjh1234"},"content":"        return taskType + \" || \" + doneStatus + \" || \" + taskDescription + \" || \" + start + \" || \" + end;","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":93,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":94,"author":{"gitId":"chewjh1234"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2023-09-09"},{"lineNumber":95,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":96,"author":{"gitId":"chewjh1234"},"content":"     * @return A string in the format \"[X] description\" if the task is done,","lastModifiedDate":"2023-09-09"},{"lineNumber":97,"author":{"gitId":"chewjh1234"},"content":"     *         or \"[ ] description\" if the task is not done.","lastModifiedDate":"2023-09-09"},{"lineNumber":98,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":99,"author":{"gitId":"chewjh1234"},"content":"    public String toString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":100,"author":{"gitId":"chewjh1234"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-09-09"},{"lineNumber":101,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":102,"author":{"gitId":"chewjh1234"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"chewjh1234":102}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":" * The TaskList class manages a list of tasks and provides methods to manipulate the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":"public class TaskList {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"chewjh1234"},"content":"     * Constructs a TaskList object with the given list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"chewjh1234"},"content":"     * @param tasks The list of tasks to initialize the TaskList with.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"chewjh1234"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"chewjh1234"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"chewjh1234"},"content":"     * Constructs an empty TaskList object with overloading.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"chewjh1234"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"chewjh1234"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"chewjh1234"},"content":"     * Adds a task to the task list and displays a confirmation message.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"chewjh1234"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"chewjh1234"},"content":"     * @param ui The user interface object.","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"chewjh1234"},"content":"     * @return A confirmation message for adding the task.","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"chewjh1234"},"content":"    public String addTask(Task task, Ui ui) {","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"chewjh1234"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"chewjh1234"},"content":"        return ui.showAddTask(task, tasks.size());","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"chewjh1234"},"content":"     * Removes a task from the task list by its index and displays a confirmation message.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"chewjh1234"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"chewjh1234"},"content":"     * @param ui The user interface object.","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"chewjh1234"},"content":"     * @return A confirmation message for removing the task.","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"chewjh1234"},"content":"    public String removeTask(int index, Ui ui) {","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"chewjh1234"},"content":"        assert index \u003c tasks.size();","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"chewjh1234"},"content":"        Task removedTask \u003d tasks.get(index);","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"chewjh1234"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"chewjh1234"},"content":"        return ui.showDeletedTask(removedTask, tasks.size());","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"chewjh1234"},"content":"     * Marks a task as done by its index and displays a confirmation message.","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"chewjh1234"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"chewjh1234"},"content":"     * @param ui The user interface object.","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"chewjh1234"},"content":"     * @return A confirmation message for marking the task as done.","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"chewjh1234"},"content":"    public String markTask(int index, Ui ui) {","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"chewjh1234"},"content":"        assert index \u003c tasks.size();","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"chewjh1234"},"content":"        Task markedTask \u003d tasks.get(index);","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"chewjh1234"},"content":"        markedTask.markAsDone();","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"chewjh1234"},"content":"        return ui.showDone(markedTask);","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"chewjh1234"},"content":"     * Marks a task as not done by its index and displays a confirmation message.","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"chewjh1234"},"content":"     * @param index The index of the task to be marked as not done.","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"chewjh1234"},"content":"     * @param ui The user interface object.","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"chewjh1234"},"content":"     * @return A confirmation message for marking the task as not done.","lastModifiedDate":"2023-09-09"},{"lineNumber":73,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"chewjh1234"},"content":"    public String unmarkTask(int index, Ui ui) {","lastModifiedDate":"2023-09-09"},{"lineNumber":75,"author":{"gitId":"chewjh1234"},"content":"        assert index \u003c tasks.size();","lastModifiedDate":"2023-09-13"},{"lineNumber":76,"author":{"gitId":"chewjh1234"},"content":"        Task unmarkedTask \u003d tasks.get(index);","lastModifiedDate":"2023-09-09"},{"lineNumber":77,"author":{"gitId":"chewjh1234"},"content":"        unmarkedTask.markAsUndone();","lastModifiedDate":"2023-09-09"},{"lineNumber":78,"author":{"gitId":"chewjh1234"},"content":"        return ui.showUndone(unmarkedTask);","lastModifiedDate":"2023-09-09"},{"lineNumber":79,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":82,"author":{"gitId":"chewjh1234"},"content":"     * Calculates the size of the task list","lastModifiedDate":"2023-09-09"},{"lineNumber":83,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"chewjh1234"},"content":"     * @return The size of the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":85,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":86,"author":{"gitId":"chewjh1234"},"content":"    public int getSize() {","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"chewjh1234"},"content":"        return tasks.size();","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"chewjh1234"},"content":"     * Returns a string representation of the task list, including task numbers.","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"chewjh1234"},"content":"     * @return A formatted string displaying all tasks in the list with task numbers.","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"chewjh1234"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"chewjh1234"},"content":"    public String toString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"chewjh1234"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"chewjh1234"},"content":"        stringBuilder.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"chewjh1234"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"chewjh1234"},"content":"            stringBuilder.append(i + 1).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"chewjh1234"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":105,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":106,"author":{"gitId":"chewjh1234"},"content":"     * Finds and returns tasks containing the specified keyword in their descriptions.","lastModifiedDate":"2023-09-09"},{"lineNumber":107,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":108,"author":{"gitId":"chewjh1234"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2023-09-09"},{"lineNumber":109,"author":{"gitId":"chewjh1234"},"content":"     * @return An ArrayList of tasks that match the keyword.","lastModifiedDate":"2023-09-09"},{"lineNumber":110,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":111,"author":{"gitId":"chewjh1234"},"content":"    public ArrayList\u003cTask\u003e findTasksWithKeyword(String keyword) {","lastModifiedDate":"2023-09-04"},{"lineNumber":112,"author":{"gitId":"chewjh1234"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-04"},{"lineNumber":113,"author":{"gitId":"chewjh1234"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-04"},{"lineNumber":114,"author":{"gitId":"chewjh1234"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2023-09-04"},{"lineNumber":115,"author":{"gitId":"chewjh1234"},"content":"                filteredTasks.add(task);","lastModifiedDate":"2023-09-04"},{"lineNumber":116,"author":{"gitId":"chewjh1234"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":117,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":118,"author":{"gitId":"chewjh1234"},"content":"        return filteredTasks;","lastModifiedDate":"2023-09-04"},{"lineNumber":119,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":120,"author":{"gitId":"chewjh1234"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"chewjh1234":120}},{"path":"src/main/java/duke/Tired.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"enum TaskType {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":"    TODO, DEADLINE, EVENT","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":"/**","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":" * The Tired class is the main class for the Tired chatbot.","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":" */","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"chewjh1234"},"content":"public class Tired {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"chewjh1234"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"chewjh1234"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"chewjh1234"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"chewjh1234"},"content":"     * Constructs a `Tired` chatbot object.","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"chewjh1234"},"content":"    public Tired() {","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"chewjh1234"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"chewjh1234"},"content":"        storage \u003d new Storage(\"duke.txt\");","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"chewjh1234"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"chewjh1234"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"chewjh1234"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"chewjh1234"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"chewjh1234"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"chewjh1234"},"content":"     * Processes the user\u0027s input and returns a response.","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"chewjh1234"},"content":"     * @param input The user\u0027s input command.","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"chewjh1234"},"content":"     * @return The response message generated based on the input.","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"chewjh1234"},"content":"    String getResponse(String input) {","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"chewjh1234"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"chewjh1234"},"content":"            if (input.trim().equals(\"bye\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"chewjh1234"},"content":"                storage.saveToFile(tasks);","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"chewjh1234"},"content":"                return ui.showGoodbyeMessage();","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"chewjh1234"},"content":"            }","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"chewjh1234"},"content":"            return Parser.parseCommand(input, tasks, ui);","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"chewjh1234"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"chewjh1234"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"chewjh1234"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"chewjh1234":46}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":" * The ToDo class represents a to-do task in the task manager.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":" * It inherits from the Task class and adds functionality specific to to-do tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"chewjh1234"},"content":"    * Constructs a ToDo object with the specified description.","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"chewjh1234"},"content":"    *","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"chewjh1234"},"content":"    * @param description The description of the to-do task.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"chewjh1234"},"content":"    * @throws DukeException If the description is empty or blank.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"chewjh1234"},"content":"    */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"chewjh1234"},"content":"    public ToDo(String description) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"chewjh1234"},"content":"        super(description, TaskType.TODO);","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"chewjh1234"},"content":"        if (description.trim().isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"chewjh1234"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"chewjh1234"},"content":"     * Returns a string representation of the to-do task, including its status icon.","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"chewjh1234"},"content":"     * @return A string representation of the to-do task.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"chewjh1234"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"chewjh1234"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"chewjh1234"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"chewjh1234"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"chewjh1234":32}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":" * The Ui class is responsible for handling user interaction and displaying messages.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":"public class Ui {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"chewjh1234"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"chewjh1234"},"content":"     * @param message The error message to display.","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"chewjh1234"},"content":"    public String showError(String message) {","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"chewjh1234"},"content":"        return message;","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"chewjh1234"},"content":"     * Displays a goodbye message when the application exits.","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"chewjh1234"},"content":"     * @return A goodbye message.","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"chewjh1234"},"content":"    public String showGoodbyeMessage() {","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"chewjh1234"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"chewjh1234"},"content":"     * Shows the added task and the number of tasks remaining.","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"chewjh1234"},"content":"     * @param task The newly added task.","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"chewjh1234"},"content":"     * @param taskListSize The size of the task list after the addition of the new task.","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"chewjh1234"},"content":"     * @return A string containing the newly added task and the number of tasks in the list.","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"chewjh1234"},"content":"    public String showAddTask(Task task, int taskListSize) {","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"chewjh1234"},"content":"        return (\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"chewjh1234"},"content":"                + task + \"\\n\" + \"Now you have \" + taskListSize + \" task(s) in the list.\");","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"chewjh1234"},"content":"     * Shows the removed task and the number of tasks remaining.","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"chewjh1234"},"content":"     * @param task The removed task.","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"chewjh1234"},"content":"     * @param taskListSize The size of the task list after the removal of the deleted task.","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"chewjh1234"},"content":"     * @return A string containing the newly deleted task and the number of tasks in the list.","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"chewjh1234"},"content":"    public String showDeletedTask(Task task, int taskListSize) {","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"chewjh1234"},"content":"        return (\"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"chewjh1234"},"content":"                + task + \"\\n\" + \"Now you have \" + taskListSize + \" task(s) in the list.\");","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"chewjh1234"},"content":"     * Displays a confirmation message stating that task is mark done.","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"chewjh1234"},"content":"     * @param task The task marked as done.","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"chewjh1234"},"content":"     * @return A string containing the task marked as done.","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"chewjh1234"},"content":"    public String showDone(Task task) {","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"chewjh1234"},"content":"        return (\"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"chewjh1234"},"content":"                + task + \"\\n\");","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"chewjh1234"},"content":"     * Displays a confirmation message stating that task is mark undone.","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"chewjh1234"},"content":"     * @param task The task marked as undone.","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"chewjh1234"},"content":"     * @return A string containing the task marked as not done.","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"chewjh1234"},"content":"    public String showUndone(Task task) {","lastModifiedDate":"2023-09-09"},{"lineNumber":70,"author":{"gitId":"chewjh1234"},"content":"        return (\"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"chewjh1234"},"content":"                + task + \"\\n\");","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"chewjh1234"},"content":"     * Displays the list of tasks to the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"chewjh1234"},"content":"     * @param tasks The TaskList containing the tasks to display.","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"chewjh1234"},"content":"     * @return A string containing the complete task list.","lastModifiedDate":"2023-09-13"},{"lineNumber":79,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"chewjh1234"},"content":"    public String showTaskList(TaskList tasks) {","lastModifiedDate":"2023-09-09"},{"lineNumber":81,"author":{"gitId":"chewjh1234"},"content":"        if (tasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2023-09-09"},{"lineNumber":82,"author":{"gitId":"chewjh1234"},"content":"            return (\"Wow! You have no tasks in your task list!\");","lastModifiedDate":"2023-09-09"},{"lineNumber":83,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"chewjh1234"},"content":"        return tasks.toString();","lastModifiedDate":"2023-09-09"},{"lineNumber":85,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"chewjh1234"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":88,"author":{"gitId":"chewjh1234"},"content":"     * Displays the list of matching tasks found using the keyword to the user.","lastModifiedDate":"2023-09-04"},{"lineNumber":89,"author":{"gitId":"chewjh1234"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":90,"author":{"gitId":"chewjh1234"},"content":"     * @param matchingTasks The TaskList containing the tasks to display.","lastModifiedDate":"2023-09-04"},{"lineNumber":91,"author":{"gitId":"chewjh1234"},"content":"     * @return A string containing all matching tasks.","lastModifiedDate":"2023-09-13"},{"lineNumber":92,"author":{"gitId":"chewjh1234"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":93,"author":{"gitId":"chewjh1234"},"content":"    public String showMatchingTasks(ArrayList\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2023-09-09"},{"lineNumber":94,"author":{"gitId":"chewjh1234"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":95,"author":{"gitId":"chewjh1234"},"content":"            return (\"No matching tasks found.\");","lastModifiedDate":"2023-09-09"},{"lineNumber":96,"author":{"gitId":"chewjh1234"},"content":"        } else {","lastModifiedDate":"2023-09-04"},{"lineNumber":97,"author":{"gitId":"chewjh1234"},"content":"            StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-09-09"},{"lineNumber":98,"author":{"gitId":"chewjh1234"},"content":"            stringBuilder.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-09-09"},{"lineNumber":99,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":100,"author":{"gitId":"chewjh1234"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2023-09-09"},{"lineNumber":101,"author":{"gitId":"chewjh1234"},"content":"                stringBuilder.append(i + 1).append(\". \").append(matchingTasks.get(i)).append(\"\\n\");","lastModifiedDate":"2023-09-09"},{"lineNumber":102,"author":{"gitId":"chewjh1234"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":104,"author":{"gitId":"chewjh1234"},"content":"            return stringBuilder.toString();","lastModifiedDate":"2023-09-09"},{"lineNumber":105,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"chewjh1234"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"chewjh1234":107}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"chewjh1234"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"chewjh1234"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"chewjh1234"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"chewjh1234"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"chewjh1234"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"chewjh1234"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"chewjh1234"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"chewjh1234"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"chewjh1234":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"chewjh1234"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"chewjh1234"},"content":"            fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"chewjh1234"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"chewjh1234"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"chewjh1234"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"chewjh1234"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"chewjh1234"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"chewjh1234"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"chewjh1234"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"chewjh1234"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"chewjh1234"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"chewjh1234"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"chewjh1234"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"chewjh1234"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"chewjh1234":23}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"chewjh1234"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"chewjh1234"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"chewjh1234"},"content":"    public void parseCommand_emptyTaskList_expectedBehaviour() throws DukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"chewjh1234"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"chewjh1234"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"chewjh1234"},"content":"        assertEquals(\"Wow! You have no tasks in your task list!\",","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"chewjh1234"},"content":"                Parser.parseCommand(\"list\", tasks, ui));","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"chewjh1234"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"chewjh1234"},"content":"    public void parseCommand_addToDo_expectedBehaviour() throws DukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"chewjh1234"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"chewjh1234"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"chewjh1234"},"content":"        assertEquals(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"chewjh1234"},"content":"                        + \"[T][ ] Task Description\\n\"","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"chewjh1234"},"content":"                        + \"Now you have 1 task(s) in the list.\",","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"chewjh1234"},"content":"                Parser.parseCommand(\"todo Task Description\", tasks, ui));","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"chewjh1234"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"chewjh1234"},"content":"    public void parseCommand_addEvent_expectedBehaviour() throws DukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"chewjh1234"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"chewjh1234"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"chewjh1234"},"content":"        assertEquals(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"chewjh1234"},"content":"                        + \"[E][ ] Event Description (from: Aug 23 2023 1800 to: Aug 24 2023 1900)\\n\"","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"chewjh1234"},"content":"                        + \"Now you have 1 task(s) in the list.\",","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"chewjh1234"},"content":"                Parser.parseCommand(","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"chewjh1234"},"content":"                        \"event Event Description /from 2023-08-23 1800 /to 2023-08-24 1900\", tasks, ui));","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"chewjh1234"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"chewjh1234"},"content":"    public void parseCommand_addDeadline_expectedBehaviour() throws DukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"chewjh1234"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"chewjh1234"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"chewjh1234"},"content":"        assertEquals(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"chewjh1234"},"content":"                        + \"[D][ ] Deadline Description (by: Aug 23 2023 1900)\\n\"","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"chewjh1234"},"content":"                        + \"Now you have 1 task(s) in the list.\",","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"chewjh1234"},"content":"                Parser.parseCommand(\"deadline Deadline Description /by 2023-08-23 1900\", tasks, ui));","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"chewjh1234"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"chewjh1234"},"content":"    public void parseCommand_markTask_exceptionThrown() {","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"chewjh1234"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"chewjh1234"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"chewjh1234"},"content":"        assertThrows(java.lang.AssertionError.class, () -\u003e {","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"chewjh1234"},"content":"            Parser.parseCommand(\"mark 148840\", tasks, ui);","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"chewjh1234"},"content":"        });","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"chewjh1234"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"chewjh1234"},"content":"    public void parseCommand_unmarkTask_exceptionThrown() {","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"chewjh1234"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"chewjh1234"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"chewjh1234"},"content":"        assertThrows(java.lang.AssertionError.class, () -\u003e {","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"chewjh1234"},"content":"            Parser.parseCommand(\"unmark 10\", tasks, ui);","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"chewjh1234"},"content":"        });","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"chewjh1234"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"chewjh1234"},"content":"    public void parseCommand_deleteTask_exceptionThrown() {","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"chewjh1234"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"chewjh1234"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"chewjh1234"},"content":"        assertThrows(java.lang.AssertionError.class, () -\u003e {","lastModifiedDate":"2023-09-13"},{"lineNumber":74,"author":{"gitId":"chewjh1234"},"content":"            Parser.parseCommand(\"delete 1\", tasks, ui);","lastModifiedDate":"2023-09-09"},{"lineNumber":75,"author":{"gitId":"chewjh1234"},"content":"        });","lastModifiedDate":"2023-09-09"},{"lineNumber":76,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"chewjh1234"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"chewjh1234"},"content":"    public void parseCommand_invalidCommand_exceptionThrown() {","lastModifiedDate":"2023-09-09"},{"lineNumber":80,"author":{"gitId":"chewjh1234"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"chewjh1234"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"chewjh1234"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-09-09"},{"lineNumber":83,"author":{"gitId":"chewjh1234"},"content":"            Parser.parseCommand(\"eidcnihevb\", tasks, ui);","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"chewjh1234"},"content":"        });","lastModifiedDate":"2023-09-09"},{"lineNumber":85,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"chewjh1234"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"chewjh1234"},"content":"    public void isCreateTaskCommand_invalidCommand_expectedBehaviour() {","lastModifiedDate":"2023-09-09"},{"lineNumber":89,"author":{"gitId":"chewjh1234"},"content":"        assertFalse(Parser.isCreateTaskCommand(\"random command\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":90,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"chewjh1234"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"chewjh1234"},"content":"    public void parseStringToTask_validTodo_expectedBehaviour() throws DukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":94,"author":{"gitId":"chewjh1234"},"content":"        Task task \u003d Parser.parseStringToTask(\"todo A random task description\");","lastModifiedDate":"2023-09-09"},{"lineNumber":95,"author":{"gitId":"chewjh1234"},"content":"        assertEquals(\"A random task description\", task.getDescription());","lastModifiedDate":"2023-09-09"},{"lineNumber":96,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"chewjh1234"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"chewjh1234"},"content":"    public void parseStringToTask_validEvent_expectedBehaviour() throws DukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":100,"author":{"gitId":"chewjh1234"},"content":"        Task task \u003d Parser.parseStringToTask(","lastModifiedDate":"2023-09-09"},{"lineNumber":101,"author":{"gitId":"chewjh1234"},"content":"                \"event Random Event Description /from 2023-08-23 0000 /to 2023-08-24 0000\");","lastModifiedDate":"2023-09-09"},{"lineNumber":102,"author":{"gitId":"chewjh1234"},"content":"        assertEquals(\"Random Event Description\", task.getDescription());","lastModifiedDate":"2023-09-09"},{"lineNumber":103,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"chewjh1234"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"chewjh1234"},"content":"    public void convertToTask_validString_expectedBehaviour() throws DukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":107,"author":{"gitId":"chewjh1234"},"content":"        String taskLine \u003d \"T || 0 || read book ||  || \";","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"chewjh1234"},"content":"        Task task \u003d Parser.convertToTask(taskLine);","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"chewjh1234"},"content":"        assertEquals(\"read book\", task.getDescription());","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":112,"author":{"gitId":"chewjh1234"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":113,"author":{"gitId":"chewjh1234"},"content":"    public void convertToTask_invalidString_exceptionThrown() {","lastModifiedDate":"2023-09-09"},{"lineNumber":114,"author":{"gitId":"chewjh1234"},"content":"        String invalidTaskLine \u003d \"T || 0 | A Task Description || ??????? ||\";","lastModifiedDate":"2023-09-03"},{"lineNumber":115,"author":{"gitId":"chewjh1234"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-09-03"},{"lineNumber":116,"author":{"gitId":"chewjh1234"},"content":"            Task invalidTask \u003d Parser.convertToTask(invalidTaskLine);","lastModifiedDate":"2023-09-03"},{"lineNumber":117,"author":{"gitId":"chewjh1234"},"content":"        });","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":119,"author":{"gitId":"chewjh1234"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"chewjh1234":119}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"chewjh1234"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"chewjh1234"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"chewjh1234"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"chewjh1234"},"content":"    public void addTask_validTask_expectedBehaviour() {","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"chewjh1234"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"chewjh1234"},"content":"        assertEquals(0, taskList.getSize());","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"chewjh1234"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"chewjh1234"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"chewjh1234"},"content":"            String s \u003d taskList.addTask(new ToDo(\"Test Task\"), ui);","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"chewjh1234"},"content":"            assertEquals(1, taskList.getSize());","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"chewjh1234"},"content":"            assertEquals(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"chewjh1234"},"content":"                    + \"[T][ ] Test Task\\n\"","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"chewjh1234"},"content":"                    + \"Now you have 1 task(s) in the list.\", s);","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"chewjh1234"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"chewjh1234"},"content":"            fail(\"Exception should not be thrown: \" + e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"chewjh1234"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"chewjh1234"},"content":"    public void removeTask_validTask_expectedBehaviour() {","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"chewjh1234"},"content":"        // Create a TaskList with some tasks","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"chewjh1234"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"chewjh1234"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"chewjh1234"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"chewjh1234"},"content":"            tasks.add(new ToDo(\"Task 1\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"chewjh1234"},"content":"            tasks.add(new Deadline(\"Task 2\", \"2023-08-23 1800\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"chewjh1234"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"chewjh1234"},"content":"            fail(\"Exception should not be thrown: \" + e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"chewjh1234"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"chewjh1234"},"content":"        assertEquals(2, taskList.getSize());","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"chewjh1234"},"content":"        // Remove a task","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"chewjh1234"},"content":"        String s \u003d taskList.removeTask(0, ui);","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"chewjh1234"},"content":"        assertEquals(1, taskList.getSize());","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"chewjh1234"},"content":"        assertEquals(\"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"chewjh1234"},"content":"                + \"[T][ ] Task 1\\n\"","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"chewjh1234"},"content":"                + \"Now you have 1 task(s) in the list.\", s);","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"chewjh1234"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"chewjh1234"},"content":"    public void markTask_validTask_expectedBehaviour() {","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"chewjh1234"},"content":"        // Create a TaskList with a task","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"chewjh1234"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"chewjh1234"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"chewjh1234"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"chewjh1234"},"content":"            tasks.add(new ToDo(\"Task 1\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"chewjh1234"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"chewjh1234"},"content":"            fail(\"Exception should not be thrown: \" + e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"chewjh1234"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"chewjh1234"},"content":"        // Mark the task as done","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"chewjh1234"},"content":"        String s \u003d taskList.markTask(0, ui);","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"chewjh1234"},"content":"        // Check if the task is marked as done","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"chewjh1234"},"content":"        assertTrue(tasks.get(0).isDone());","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"chewjh1234"},"content":"        assertEquals(\"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"chewjh1234"},"content":"                + \"[T][X] Task 1\\n\", s);","lastModifiedDate":"2023-09-12"},{"lineNumber":77,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"chewjh1234"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"chewjh1234"},"content":"    public void unmarkTask_validTask_expectedBehaviour() {","lastModifiedDate":"2023-09-09"},{"lineNumber":81,"author":{"gitId":"chewjh1234"},"content":"        // Create a TaskList with a done task","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"chewjh1234"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"chewjh1234"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"chewjh1234"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"chewjh1234"},"content":"            tasks.add(new ToDo(\"Task 1\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"chewjh1234"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"chewjh1234"},"content":"            fail(\"Exception should not be thrown: \" + e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"chewjh1234"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"chewjh1234"},"content":"        tasks.get(0).markAsDone();","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"chewjh1234"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"chewjh1234"},"content":"        // Unmark the task as done","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"chewjh1234"},"content":"        String s \u003d taskList.unmarkTask(0, ui);","lastModifiedDate":"2023-09-09"},{"lineNumber":95,"author":{"gitId":"chewjh1234"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"chewjh1234"},"content":"        // Check if the task is marked as not done","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"chewjh1234"},"content":"        assertFalse(tasks.get(0).isDone());","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"chewjh1234"},"content":"        assertEquals(\"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-09-12"},{"lineNumber":99,"author":{"gitId":"chewjh1234"},"content":"                + \"[T][ ] Task 1\\n\", s);","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"chewjh1234"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"chewjh1234"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"chewjh1234":101}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chewjh1234"},"content":"todo eat","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"chewjh1234"},"content":"todo shit","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"chewjh1234"},"content":"deadline run /by 2019-02-03 1000","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"chewjh1234"},"content":"deadline submit this /by 2023-01-09 1800","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"chewjh1234"},"content":"event help /from 2022-02-02 1900 /to 2023-09-08 1000","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"chewjh1234"},"content":"unmark 2","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"chewjh1234"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"chewjh1234"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"chewjh1234"},"content":"blah","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"chewjh1234"},"content":"whysohard","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"chewjh1234"},"content":"delete 3","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"chewjh1234"},"content":"deadline","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"chewjh1234"},"content":"todo","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"chewjh1234"},"content":"event","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"chewjh1234"},"content":"bye","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"chewjh1234":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"chewjh1234"},"content":"java -classpath ..\\bin duke.Tired \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chewjh1234":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"chewjh1234"},"content":"if ! javac -cp ../src/main/java/duke -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"chewjh1234"},"content":"java -classpath ../bin Tired \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chewjh1234":2,"-":36}}]
