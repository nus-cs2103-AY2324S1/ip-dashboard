[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"javinchua":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"javinchua"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"javinchua"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"javinchua"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"javinchua"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"javinchua"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"javinchua"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"javinchua"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"javinchua"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"javinchua"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"javinchua"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"javinchua"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"javinchua"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"javinchua"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"javinchua"},"content":"checkstyle {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"javinchua"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"javinchua":21,"-":41}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":"import duke.command.Command;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":"import duke.exception.EmptyTaskException;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":"import duke.exception.InvalidDateTimeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":"import duke.exception.InvalidIndexException;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":"import duke.util.Parser;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"javinchua"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"javinchua"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"javinchua"},"content":" * Duke is a command-line task management application that allows users to manage tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"javinchua"},"content":" * It provides functionality to add tasks, mark tasks as done, delete tasks, and more.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"javinchua"},"content":" * This class serves as the entry point of the application and manages its execution.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"javinchua"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"javinchua"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"javinchua"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"javinchua"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"javinchua"},"content":"     * Constructs a new instance of the Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"javinchua"},"content":"     * Initializes the user interface, storage, and task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"javinchua"},"content":"     * Loads task from storage into the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"javinchua"},"content":"    public Duke() {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"javinchua"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"javinchua"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"javinchua"},"content":"        ArrayList\u003cTask\u003e tasks \u003d storage.load();","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"javinchua"},"content":"        this.tasks \u003d new TaskList(tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"javinchua"},"content":"        assert this.tasks !\u003d null : \"Tasks should be initialized!\";","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"javinchua"},"content":"        new Duke().run();","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"javinchua"},"content":"     * Runs the main loop of the Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"javinchua"},"content":"     * Displays a welcome message and processes user input until an exit command is encountered.","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"javinchua"},"content":"    public void run() {","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"javinchua"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"javinchua"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"javinchua"},"content":"        while (!isExit) {","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"javinchua"},"content":"            try {","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"javinchua"},"content":"                String input \u003d ui.getUserInput();","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"javinchua"},"content":"                ui.showLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"javinchua"},"content":"                Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"javinchua"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"javinchua"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"javinchua"},"content":"            } catch (DukeException | InvalidIndexException | EmptyTaskException | InvalidDateTimeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"javinchua"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"javinchua"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"javinchua"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"javinchua"},"content":"            } finally {","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"javinchua"},"content":"                ui.showLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"javinchua"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"javinchua"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":76,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":78,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":79,"author":{"gitId":"javinchua"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":80,"author":{"gitId":"javinchua"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-04"},{"lineNumber":81,"author":{"gitId":"javinchua"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2023-09-04"},{"lineNumber":82,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":83,"author":{"gitId":"javinchua"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":84,"author":{"gitId":"javinchua"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-09-04"},{"lineNumber":85,"author":{"gitId":"javinchua"},"content":"            response.append(c.execute(tasks, ui, storage));","lastModifiedDate":"2023-09-04"},{"lineNumber":86,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":87,"author":{"gitId":"javinchua"},"content":"            if (c.isExit()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":88,"author":{"gitId":"javinchua"},"content":"                System.exit(0);","lastModifiedDate":"2023-09-04"},{"lineNumber":89,"author":{"gitId":"javinchua"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":90,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":91,"author":{"gitId":"javinchua"},"content":"        } catch (DukeException | InvalidIndexException | EmptyTaskException | InvalidDateTimeException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":92,"author":{"gitId":"javinchua"},"content":"            response.append(e.getMessage());","lastModifiedDate":"2023-09-04"},{"lineNumber":93,"author":{"gitId":"javinchua"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":94,"author":{"gitId":"javinchua"},"content":"            response.append(\"An error occurred: \").append(e.getMessage());","lastModifiedDate":"2023-09-04"},{"lineNumber":95,"author":{"gitId":"javinchua"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":96,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":97,"author":{"gitId":"javinchua"},"content":"        return response.toString();","lastModifiedDate":"2023-09-04"},{"lineNumber":98,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":99,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":100,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":101,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"javinchua":98,"-":4}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package duke;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"import duke.gui.Main;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":"public class Launcher {","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"javinchua":13}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":" * Represents a command to add a deadline task to the task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":" * The {@code AddDeadlineCommand} class encapsulates the details of the deadline,","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":" * including its description and due date. When executed, the deadline is added","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"javinchua"},"content":" * to the task list and the list is saved using the provided storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"javinchua"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"javinchua"},"content":"     * Due date of the deadline task.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"javinchua"},"content":"    private final String by;","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"javinchua"},"content":"     * Description of the deadline task.","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"javinchua"},"content":"    private final String description;","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"javinchua"},"content":"     * Constructs a new {@code AddDeadlineCommand} with the provided description","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"javinchua"},"content":"     * and due date.","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"javinchua"},"content":"     * @param description description of the deadline task.","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"javinchua"},"content":"     * @param by due date of the deadline task.","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"javinchua"},"content":"    public AddDeadlineCommand(String description, String by) {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"javinchua"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"javinchua"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"javinchua"},"content":"     * Executes the command by adding a new deadline to the provided task list,","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"javinchua"},"content":"     * and saving the updated list using the provided storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"javinchua"},"content":"     * @param tasks list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"javinchua"},"content":"     * @param ui user interface.","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"javinchua"},"content":"     * @param storage storage system.","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"javinchua"},"content":"     * @return A confirmation message for adding of deadline.","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"javinchua"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"javinchua"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"javinchua"},"content":"        String output \u003d tasks.addTask(new Deadline(description, by));","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"javinchua"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"javinchua"},"content":"        return output;","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"javinchua"},"content":"     * Indicates that this command doesn\u0027t terminate the application.","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"javinchua"},"content":"     * @return {@code false} since this command doesn\u0027t cause the application to exit.","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"javinchua"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"javinchua"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"javinchua"},"content":"        return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"javinchua":66}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":" * Represents a command to add an event task to the task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":" * The {@code AddEventCommand} class encapsulates the details of the event,","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":" * including its description and the duration it spans (from-to). When executed,","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":" * the event is added to the task list and the list is saved using the provided storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"javinchua"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"javinchua"},"content":"     * Starting time/date of the event.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"javinchua"},"content":"    private final String from;","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"javinchua"},"content":"     * Ending time/date of the event.","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"javinchua"},"content":"    private final String to;","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"javinchua"},"content":"     * Description of the event.","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"javinchua"},"content":"    private final String description;","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"javinchua"},"content":"     * Constructs a new {@code AddEventCommand} with the provided description","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"javinchua"},"content":"     * and the duration (from-to) it spans.","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"javinchua"},"content":"     * @param description description of the event task.","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"javinchua"},"content":"     * @param from starting time/date of the event.","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"javinchua"},"content":"     * @param to ending time/date of the event.","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"javinchua"},"content":"    public AddEventCommand(String description, String from, String to) {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"javinchua"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"javinchua"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"javinchua"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"javinchua"},"content":"     * Executes the command by adding a new event to the provided task list,","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"javinchua"},"content":"     * and saving the updated list using the provided storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"javinchua"},"content":"     * @param tasks list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"javinchua"},"content":"     * @param ui user interface.","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"javinchua"},"content":"     * @param storage storage system.","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"javinchua"},"content":"     * @return A confirmation message for adding of event.","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"javinchua"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"javinchua"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"javinchua"},"content":"        String output \u003d tasks.addTask(new Event(description, from, to));","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"javinchua"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"javinchua"},"content":"        return output;","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"javinchua"},"content":"     * Indicates that this command doesn\u0027t terminate the application.","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"javinchua"},"content":"     * @return {@code false} since this command doesn\u0027t cause the application to exit.","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"javinchua"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"javinchua"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"javinchua"},"content":"        return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"javinchua":72}},{"path":"src/main/java/duke/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":" * Represents a command to add a to-do task to the task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":" * The {@code AddTodoCommand} class encapsulates the details of the to-do,","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":" * specifically its description. When executed, the to-do is added to the","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"javinchua"},"content":" * task list and the list is saved using the provided storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"javinchua"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"javinchua"},"content":"     * Description of the to-do task.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"javinchua"},"content":"    private final String description;","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"javinchua"},"content":"     * Constructs a new {@code AddTodoCommand} with the provided description.","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"javinchua"},"content":"     * @param description Description of the to-do task.","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"javinchua"},"content":"    public AddTodoCommand(String description) {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"javinchua"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"javinchua"},"content":"     * Executes the command by adding a new to-do to the provided task list,","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"javinchua"},"content":"     * and saving the updated list using the provided storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"javinchua"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"javinchua"},"content":"     * @param ui User interface.","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"javinchua"},"content":"     * @param storage Storage system.","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"javinchua"},"content":"     * @return A confirmation message for adding of todo.","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"javinchua"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"javinchua"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"javinchua"},"content":"        String output \u003d tasks.addTask(new Todo(description));","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"javinchua"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"javinchua"},"content":"        return output;","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"javinchua"},"content":"     * Indicates that this command doesn\u0027t terminate the application.","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"javinchua"},"content":"     * @return {@code false} since this command doesn\u0027t cause the application to exit.","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"javinchua"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"javinchua"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"javinchua"},"content":"        return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"javinchua":58}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":" * Represents an abstract command that can be executed in the application.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":"     * Executes the specific command using the provided task list, user interface, and storage system.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":"     * @param ui User interface.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"javinchua"},"content":"     * @param storage Storage system.","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"javinchua"},"content":"     * @return A response message indicating the result of the command execution.","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"javinchua"},"content":"     * @throws Exception If there\u0027s any error during the command execution.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"javinchua"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws Exception;","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"javinchua"},"content":"     * Checks if this command triggers an exit from the application.","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"javinchua"},"content":"     * @return {@code true} if the command causes the application to exit, otherwise {@code false}.","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"javinchua"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"javinchua":29}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"import duke.exception.InvalidIndexException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":" * Represents a command to delete a specific task from the task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":" * This command deletes a task identified by its index from the provided task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":" * Once deleted, it also saves the updated list to storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"javinchua"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"javinchua"},"content":"    /** The index of the task to be deleted. */","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"javinchua"},"content":"    private final int index;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"javinchua"},"content":"     * Constructs a new DeleteCommand with the specified index.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"javinchua"},"content":"     * @param index The index of the task in the task list to be deleted.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"javinchua"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"javinchua"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"javinchua"},"content":"     * Deletes the task from the task list based on its index and saves the updated list to storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"javinchua"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"javinchua"},"content":"     * @param ui User interface.","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"javinchua"},"content":"     * @param storage Storage system.","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"javinchua"},"content":"     * @return A confirmation message for deleting of task.","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"javinchua"},"content":"     * @throws InvalidIndexException If the provided index is not valid.","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"javinchua"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"javinchua"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws InvalidIndexException {","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"javinchua"},"content":"        String output \u003d tasks.deleteTask(index);","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"javinchua"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"javinchua"},"content":"        return output;","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"javinchua"},"content":"     * Specifies that executing a DeleteCommand will not cause the application to exit.","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"javinchua"},"content":"     * @return {@code false} as deleting a task doesn\u0027t terminate the application.","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"javinchua"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"javinchua"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"javinchua"},"content":"        return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"javinchua":54}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":" * When executed, this command displays an exit message to the user and indicates to the application","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":" * that it should terminate.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"javinchua"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"javinchua"},"content":"     * Executes the exit command, displaying an exit message to the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"javinchua"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"javinchua"},"content":"     * @param ui User interface.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"javinchua"},"content":"     * @param storage Storage system.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"javinchua"},"content":"     * @return A confirmation message for exiting of program.","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"javinchua"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"javinchua"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"javinchua"},"content":"        return ui.showExitMessage();","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"javinchua"},"content":"     * Specifies that executing an ExitCommand will cause the application to exit.","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"javinchua"},"content":"     * @return {@code true} indicating the application should terminate.","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"javinchua"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"javinchua"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"javinchua"},"content":"        return true;","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"javinchua":38}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":" * Represents a command to search for tasks that match a given keyword.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":" * The {@code FindCommand} allows users to find tasks in their list based","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":" * on a keyword they provide.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"javinchua"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":"     * Keyword to search against.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"javinchua"},"content":"    private final String keyword;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"javinchua"},"content":"     * Constructs a new {@code FindCommand} with the provided keyword.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"javinchua"},"content":"     * @param keyword Keyword to search against","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"javinchua"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"javinchua"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"javinchua"},"content":"     * Executes the command by searching for the keyword in the provided task list,","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"javinchua"},"content":"     * and printing the results.","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"javinchua"},"content":"     * @param tasks List of duke.tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"javinchua"},"content":"     * @param ui User interface.","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"javinchua"},"content":"     * @param storage Storage system.","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"javinchua"},"content":"     * @return A confirmation message for finding tasks from keyword.","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"javinchua"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"javinchua"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"javinchua"},"content":"        return tasks.findTasks(keyword);","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"javinchua"},"content":"     * Indicates that this command doesn\u0027t terminate the application.","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"javinchua"},"content":"     * @return {@code false} since this command doesn\u0027t cause the application to exit.","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"javinchua"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"javinchua"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"javinchua"},"content":"        return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"javinchua":52}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":" * Represents a command to list all tasks in the application.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":" * When executed, this command will display all tasks in the task list to the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":"     * Executes the list command, displaying all tasks in the task list to the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"javinchua"},"content":"     * @param tasks List of tasks to be displayed.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"javinchua"},"content":"     * @param ui User interface.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"javinchua"},"content":"     * @param storage Storage system (not used in this command but retained for consistency).","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"javinchua"},"content":"     * @return A confirmation message for listing of tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"javinchua"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"javinchua"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"javinchua"},"content":"        return tasks.listTasks();","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"javinchua"},"content":"     * Specifies that executing a ListCommand will not cause the application to exit.","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"javinchua"},"content":"     * @return {@code false} indicating the application should continue running.","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"javinchua"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"javinchua"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"javinchua"},"content":"        return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"javinchua":37}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"import duke.exception.InvalidIndexException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":" * Represents a command to mark a task as completed.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":" * When executed, this command will mark the task at the specified index as completed.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"javinchua"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":"    /** The index of the task to be marked as completed. */","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"javinchua"},"content":"    private final int index;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"javinchua"},"content":"     * Constructs a new MarkCommand with the specified index.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"javinchua"},"content":"     * @param index Index of the task to be marked as completed.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"javinchua"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"javinchua"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"javinchua"},"content":"     * Executes the mark command, marking the task at the specified index as completed.","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"javinchua"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"javinchua"},"content":"     * @param ui User interface.","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"javinchua"},"content":"     * @param storage Storage system.","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"javinchua"},"content":"     * @return A confirmation message for marking of task.","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"javinchua"},"content":"     * @throws InvalidIndexException If the given index is out of bounds.","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"javinchua"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"javinchua"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws InvalidIndexException {","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"javinchua"},"content":"        String output \u003d tasks.markTask(index);","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"javinchua"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"javinchua"},"content":"        return output;","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"javinchua"},"content":"     * Specifies that executing a MarkCommand will not cause the application to exit.","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"javinchua"},"content":"     * @return {@code false} indicating the application should continue running.","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"javinchua"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"javinchua"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"javinchua"},"content":"        return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"javinchua":53}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"import duke.exception.InvalidIndexException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":" * Represents a command to unmark a task as completed.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":" * When executed, this command will unmark the task at the specified index as completed.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"javinchua"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":"    /** The index of the task to be unmarked as completed. */","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"javinchua"},"content":"    private final int index;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"javinchua"},"content":"     * Constructs a new UnmarkCommand with the specified index.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"javinchua"},"content":"     * @param index Index of the task to be unmarked as completed.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"javinchua"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"javinchua"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"javinchua"},"content":"     * Executes the unmark command, unmarking the task at the specified index as completed.","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"javinchua"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"javinchua"},"content":"     * @param ui User interface.","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"javinchua"},"content":"     * @param storage Storage system.","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"javinchua"},"content":"     * @return A confirmation message for unmarking of task.","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"javinchua"},"content":"     * @throws InvalidIndexException If the given index is out of bounds.","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"javinchua"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"javinchua"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws InvalidIndexException {","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"javinchua"},"content":"        String output \u003d tasks.unmarkTask(index);","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"javinchua"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"javinchua"},"content":"        return output;","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"javinchua"},"content":"     * Specifies that executing an UnmarkCommand will not cause the application to exit.","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"javinchua"},"content":"     * @return {@code false} indicating the application should continue running.","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"javinchua"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"javinchua"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"javinchua"},"content":"        return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"javinchua":53}},{"path":"src/main/java/duke/command/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package duke.command;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"import duke.exception.InvalidIndexException;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":" * Represents a command to update a specific task in the task list.","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":" * This command allows updating various attributes of a task based on its index. The attributes","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":" * that can be updated include the task\u0027s description, start time/date (\u0027from\u0027), end time/date (\u0027to\u0027),","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":" * and the deadline (\u0027by\u0027). Only provided attributes will be updated, while the others remain unchanged.","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"javinchua"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":"public class UpdateCommand extends Command {","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"javinchua"},"content":"     * Starting time/date of the event.","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"javinchua"},"content":"    private final String from;","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"javinchua"},"content":"     * Ending time/date of the event.","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"javinchua"},"content":"    private final String to;","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"javinchua"},"content":"     * Description of the event.","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"javinchua"},"content":"    private final String description;","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"javinchua"},"content":"     * Due date of the deadline task.","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"javinchua"},"content":"    private final String by;","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"javinchua"},"content":"     * Index of the task to be updated.","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"javinchua"},"content":"    private final int index;","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"javinchua"},"content":"     * Constructs an UpdateCommand with specified parameters.","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"javinchua"},"content":"     * @param index Index of the task in the task list.","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"javinchua"},"content":"     * @param description Updated description of the task. Null if unchanged.","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"javinchua"},"content":"     * @param from Updated starting time/date of the event. Null if unchanged.","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"javinchua"},"content":"     * @param to Updated ending time/date of the event. Null if unchanged.","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"javinchua"},"content":"     * @param by Updated due date of the deadline task. Null if unchanged.","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"javinchua"},"content":"    public UpdateCommand(int index, String description, String from, String to, String by) {","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"javinchua"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"javinchua"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"javinchua"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"javinchua"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"javinchua"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"javinchua"},"content":"     * Executes the update command, updating the specified task attributes and saving the changes.","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"javinchua"},"content":"     * @param tasks The list of tasks to be updated.","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"javinchua"},"content":"     * @param ui The user interface to interact with the user.","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"javinchua"},"content":"     * @param storage The storage to save tasks after updating.","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"javinchua"},"content":"     * @return A confirmation message indicating the success of the update operation.","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"javinchua"},"content":"     * @throws InvalidIndexException If the provided index is out of bounds.","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"javinchua"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"javinchua"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws InvalidIndexException {","lastModifiedDate":"2023-09-10"},{"lineNumber":71,"author":{"gitId":"javinchua"},"content":"        String output \u003d tasks.updateTask(index, description, from, to, by);","lastModifiedDate":"2023-09-10"},{"lineNumber":72,"author":{"gitId":"javinchua"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"javinchua"},"content":"        return output;","lastModifiedDate":"2023-09-10"},{"lineNumber":74,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":75,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":76,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":77,"author":{"gitId":"javinchua"},"content":"     * Indicates that this command doesn\u0027t terminate the application.","lastModifiedDate":"2023-09-10"},{"lineNumber":78,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":79,"author":{"gitId":"javinchua"},"content":"     * @return {@code false} since this command doesn\u0027t cause the application to exit.","lastModifiedDate":"2023-09-10"},{"lineNumber":80,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":81,"author":{"gitId":"javinchua"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":82,"author":{"gitId":"javinchua"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-10"},{"lineNumber":83,"author":{"gitId":"javinchua"},"content":"        return false;","lastModifiedDate":"2023-09-10"},{"lineNumber":84,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":85,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"javinchua":85}},{"path":"src/main/java/duke/exception/CorruptHarddriveException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package duke.exception;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":" * Represents an duke.exception that is thrown when the application encounters corrupted or incorrectly formatted data.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":" * This duke.exception indicates that the data read from the storage or hard drive is not in the expected format.","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":"public class CorruptHarddriveException extends Exception {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":"     * Constructs a new CorruptHarddriveException with a default error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"javinchua"},"content":"    public CorruptHarddriveException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but the data is not in the correct format :-(\");","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"javinchua":17}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package duke.exception;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":" * Exception thrown when an unrecognized command is provided to the Duke chatbot.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":"     * Constructs a DukeException with a default error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":"    public DukeException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"javinchua":13}},{"path":"src/main/java/duke/exception/EmptyTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package duke.exception;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"import duke.tasks.TaskType;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":" * Exception thrown when a task\u0027s field (description, by, from, to) is found to be empty.","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":"public class EmptyTaskException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":"     * Constructs an duke.exception.EmptyTaskException with a specific error message","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":"     * based on the type of task and the empty field.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":"     * @param type  The type of task (e.g., todo, deadline, event).","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"javinchua"},"content":"     * @param field The specific field (e.g., description, by, from, to) that is empty.","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":"    public EmptyTaskException(TaskType type, String field) {","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"javinchua"},"content":"        super(\"☹ OOPS!!! The \" + field + \" of a \" + type + \" cannot be empty.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"javinchua":19}},{"path":"src/main/java/duke/exception/InvalidDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package duke.exception;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":" * Represents an duke.exception that is thrown when the application encounters an invalid date and time input.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":" * This duke.exception is triggered when the user provides a date","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":" * and time format that does not match the expected formats:","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":" * \"yyyy-MM-dd\" or \"yyyy-MM-dd HHmm\".","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":"public class InvalidDateTimeException extends Exception {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"javinchua"},"content":"     * Constructs a new InvalidDateTimeException with a default error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":"    public InvalidDateTimeException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"javinchua"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but the input of date and time is invalid.\"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"javinchua"},"content":"                + \" Please follow the format of yyyy-MM-dd or yyyy-MM-dd HHmm :-(\");","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"javinchua":20}},{"path":"src/main/java/duke/exception/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package duke.exception;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":" * Exception thrown when an invalid index is used to access a list.","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":"public class InvalidIndexException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":"     * Constructs an duke.exception.InvalidIndexException with a default error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":"    public InvalidIndexException() {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":"        super(\"☹ OOPS!!! This index is out of the list\u0027s bounds.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"javinchua":13}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package duke.gui;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"javinchua"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"javinchua"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"javinchua"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"javinchua"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"javinchua"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"javinchua"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"javinchua"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"javinchua"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"javinchua"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"javinchua"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"javinchua"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"javinchua"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"javinchua"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"javinchua"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"javinchua"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"javinchua"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"javinchua"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"javinchua"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"javinchua"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"javinchua"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"javinchua"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"javinchua"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"javinchua"},"content":"        double radius \u003d 35;","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"javinchua"},"content":"        Circle clip \u003d new Circle(radius, radius, radius);","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"javinchua"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"javinchua"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"javinchua"},"content":"    private void flip() {","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"javinchua"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"javinchua"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"javinchua"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"javinchua"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"javinchua"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"javinchua"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"javinchua"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"javinchua"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"javinchua"},"content":"        db.flip();","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"javinchua"},"content":"        return db;","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"javinchua":65}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package duke.gui;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"javinchua"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"javinchua"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"javinchua"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"javinchua"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"javinchua"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"javinchua"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"javinchua"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"javinchua"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"javinchua"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"javinchua"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"javinchua"},"content":"            stage.show();","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"javinchua"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"javinchua"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"javinchua"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"javinchua":33}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package duke.gui;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"javinchua"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"javinchua"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"javinchua"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"javinchua"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"javinchua"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"javinchua"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"javinchua"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"javinchua"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"javinchua"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"javinchua"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"javinchua"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"javinchua"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"javinchua"},"content":"     * Initializes the main window with default UI settings and behaviors.","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"javinchua"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"javinchua"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"javinchua"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"javinchua"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(Ui.showWelcomeMessage(), dukeImage));","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"javinchua"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"javinchua"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"javinchua"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"javinchua"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"javinchua"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"javinchua"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"javinchua"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"javinchua"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"javinchua"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"javinchua"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"javinchua"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"javinchua"},"content":"        );","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"javinchua"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"javinchua"},"content":"     * Handles the style of the send button when the mouse hovers over it.","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"javinchua"},"content":"     * Changes the background color and cursor style for improved user feedback.","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"javinchua"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"javinchua"},"content":"    public void onHoverButton() {","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"javinchua"},"content":"        sendButton.setStyle(\"-fx-background-color: #005792; -fx-text-fill: #fff; \"","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"javinchua"},"content":"                + \"-fx-background-radius: 20; -fx-border-radius: 20; -fx-cursor: hand;\");","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"javinchua"},"content":"     * Reverts the style of the send button when the mouse exits the button area.","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"javinchua"},"content":"     * Resets the background color and maintains the cursor style for a consistent user experience.","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"javinchua"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"javinchua"},"content":"    public void onExitButton() {","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"javinchua"},"content":"        sendButton.setStyle(\"-fx-background-color: #0077B5; -fx-text-fill: #fff; \"","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"javinchua"},"content":"                + \"-fx-background-radius: 20; -fx-border-radius: 20; -fx-cursor: hand;\");","lastModifiedDate":"2023-09-04"},{"lineNumber":77,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":78,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":79,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-09-04"},{"lineNumber":80,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"javinchua":80}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":" * Represents a task with a specific deadline.","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":" * \u003cp\u003e A Deadline task is an extension of the basic Task, with an added","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":" * characteristic of a \"by\" field that represents the deadline of the task. \u003c/p\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":"    private String by;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":"     * Creates a new deadline task with the specified description and deadline.","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":"     * @param by          The deadline of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"javinchua"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"javinchua"},"content":"        super(TaskType.DEADLINE, description);","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"javinchua"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"javinchua"},"content":"     * Returns a string representation of the deadline task.","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"javinchua"},"content":"     * @return A formatted string showing the deadline task\u0027s type, status, description, and deadline.","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"javinchua"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"javinchua"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"javinchua"},"content":"        return super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"javinchua"},"content":"     * Returns a transformed format of the deadline task, useful for data storage or other operations.","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"javinchua"},"content":"     * @return A string that represents the deadline task in a unique format.","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"javinchua"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"javinchua"},"content":"    public String transformFormat() {","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"javinchua"},"content":"        return super.transformFormat() + \" | \" + this.by;","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"javinchua"},"content":"     * Returns the deadline of this task.","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"javinchua"},"content":"     * @return A {@code String} representing the deadline of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"javinchua"},"content":"    public String getBy() {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"javinchua"},"content":"        return this.by;","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"javinchua"},"content":"     * Modifies the by of this task.","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"javinchua"},"content":"    public void setBy(String newBy) {","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"javinchua"},"content":"        this.by \u003d newBy;","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"javinchua":57}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":" * Represents a task that occurs during a specific period.","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":" * \u003cp\u003e An Event task is an extension of the basic Task, with additional characteristics of","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":" * \"from\" and \"to\" fields representing the start and end times of the event, respectively. \u003c/p\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":"    private String from;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":"    private String to;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"javinchua"},"content":"     * Creates a new event task with the specified description, start time, and end time.","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"javinchua"},"content":"     * @param from        The start time of the event.","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"javinchua"},"content":"     * @param to          The end time of the event.","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"javinchua"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"javinchua"},"content":"        super(TaskType.EVENT, description);","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"javinchua"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"javinchua"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"javinchua"},"content":"     * Returns a string representation of the event task.","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"javinchua"},"content":"     * @return A formatted string showing the event task\u0027s type, status, description, start time, and end time.","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"javinchua"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"javinchua"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"javinchua"},"content":"        return super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"javinchua"},"content":"     * Returns a transformed format of the event task, useful for data storage or other operations.","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"javinchua"},"content":"     * @return A string that represents the event task in a unique format.","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"javinchua"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"javinchua"},"content":"    public String transformFormat() {","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"javinchua"},"content":"        return super.transformFormat() + \" | \" + this.from + \" | \" + this.to;","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"javinchua"},"content":"     * Returns the start of this task.","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"javinchua"},"content":"     * @return A {@code String} representing the start of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"javinchua"},"content":"    public String getFrom() {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"javinchua"},"content":"        return this.from;","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"javinchua"},"content":"     * Returns the end of this task.","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"javinchua"},"content":"     * @return A {@code String} representing the end of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"javinchua"},"content":"    public String getTo() {","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"javinchua"},"content":"        return this.to;","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"javinchua"},"content":"     * Modifies the from of this task.","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"javinchua"},"content":"    public void setFrom(String newFrom) {","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"javinchua"},"content":"        this.from \u003d newFrom;","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"javinchua"},"content":"     * Modifies the to of this task.","lastModifiedDate":"2023-09-10"},{"lineNumber":71,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":72,"author":{"gitId":"javinchua"},"content":"    public void setTo(String newTo) {","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"javinchua"},"content":"        this.to \u003d newTo;","lastModifiedDate":"2023-09-10"},{"lineNumber":74,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":75,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"javinchua":75}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":" * Represents a generic task with a specific type, description, and completion status.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":" * \u003cp\u003e The Task class is a fundamental representation of a task that can be of various types","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":" * such as TODO, DEADLINE, or EVENT.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":" * Each task has a type, a description, and a flag that indicates whether it has been completed. \u003c/p\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":"public class Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":"    private TaskType type;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":"    private String description;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":"    private boolean done;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":"     * Constructs a new Task instance with the specified type and description.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"javinchua"},"content":"     * @param type        The type of the task, which can be one of the values in {@link TaskType}.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"javinchua"},"content":"     * @param description A brief description of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"javinchua"},"content":"    public Task(TaskType type, String description) {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"javinchua"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"javinchua"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"javinchua"},"content":"        this.done \u003d false; // Default value for a new task","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"javinchua"},"content":"     * Provides a string representation of the task, which includes its type, completion status, and description.","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"javinchua"},"content":"     * @return A formatted string indicating the task\u0027s type, whether it\u0027s done, and its description.","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"javinchua"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"javinchua"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"javinchua"},"content":"        String printType;","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"javinchua"},"content":"        switch (type) {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"javinchua"},"content":"        case TODO:","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"javinchua"},"content":"            printType \u003d \"T\";","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"javinchua"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"javinchua"},"content":"        case EVENT:","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"javinchua"},"content":"            printType \u003d \"E\";","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"javinchua"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"javinchua"},"content":"        case DEADLINE:","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"javinchua"},"content":"            printType \u003d \"D\";","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"javinchua"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"javinchua"},"content":"        default:","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"javinchua"},"content":"            printType \u003d \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"javinchua"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"javinchua"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"javinchua"},"content":"        String indicator \u003d done ? \"X\" : \" \";","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"javinchua"},"content":"        return \"[\" + printType + \"][\" + indicator + \"] \" + description;","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"javinchua"},"content":"     * Sets the task\u0027s completion status to \u0027done\u0027.","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"javinchua"},"content":"    public void mark() {","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"javinchua"},"content":"        this.done \u003d true;","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"javinchua"},"content":"     * Resets the task\u0027s completion status to \u0027not done\u0027.","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"javinchua"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"javinchua"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"javinchua"},"content":"     * Transforms the task\u0027s data into a specific format, useful for data storage or other representations.","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"javinchua"},"content":"     * @return A string that represents the task\u0027s type, completion status, and description in a unique format.","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"javinchua"},"content":"    public String transformFormat() {","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"javinchua"},"content":"        String printType;","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"javinchua"},"content":"        switch (type) {","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"javinchua"},"content":"        case TODO:","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"javinchua"},"content":"            printType \u003d \"T\";","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"javinchua"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"javinchua"},"content":"        case EVENT:","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"javinchua"},"content":"            printType \u003d \"E\";","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"javinchua"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"javinchua"},"content":"        case DEADLINE:","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"javinchua"},"content":"            printType \u003d \"D\";","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"javinchua"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"javinchua"},"content":"        default:","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"javinchua"},"content":"            printType \u003d \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"javinchua"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"javinchua"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"javinchua"},"content":"        return printType + \" | \" + this.done + \" | \" + this.description;","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"javinchua"},"content":"     * Returns the type of this task.","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"javinchua"},"content":"     * @return A {@code TaskType} representing the type of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"javinchua"},"content":"    public TaskType getTaskType() {","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"javinchua"},"content":"        return this.type;","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"javinchua"},"content":"     * Returns the description of this task.","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"javinchua"},"content":"     * @return A {@code String} representing the description of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"javinchua"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"javinchua"},"content":"        return this.description;","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"javinchua"},"content":"     * Returns the completion of this task.","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"javinchua"},"content":"     * @return A {@code boolean} representing the completion of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"javinchua"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"javinchua"},"content":"        return this.done;","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":118,"author":{"gitId":"javinchua"},"content":"     * Modifies the description of this task.","lastModifiedDate":"2023-09-10"},{"lineNumber":119,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":120,"author":{"gitId":"javinchua"},"content":"    public void setDescription(String newDescription) {","lastModifiedDate":"2023-09-10"},{"lineNumber":121,"author":{"gitId":"javinchua"},"content":"        this.description \u003d newDescription;","lastModifiedDate":"2023-09-10"},{"lineNumber":122,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":123,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"javinchua":123}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":"import duke.exception.InvalidIndexException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":" * Represents a list of tasks, allowing for various operations such as","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":" * adding, deleting, marking tasks as done, and unmarking tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":" * \u003cp\u003eThe TaskList class provides a comprehensive set of methods to manage and manipulate","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":" * a list of tasks. Each task in the list can be accessed by its index.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":" * Methods throw {@link InvalidIndexException} if operations are attempted on invalid indices.\u003c/p\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"javinchua"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":"public class TaskList {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"javinchua"},"content":"    private ArrayList\u003cTask\u003e store;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"javinchua"},"content":"     * Initializes an empty list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"javinchua"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"javinchua"},"content":"        this.store \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"javinchua"},"content":"     * Initializes a task list with a given list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"javinchua"},"content":"     * @param tasks An ArrayList of tasks to initialize the task list with.","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"javinchua"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"javinchua"},"content":"        if (tasks \u003d\u003d null) {","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"javinchua"},"content":"            throw new IllegalArgumentException(\"Task list cannot be null\");","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"javinchua"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"javinchua"},"content":"        this.store \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"javinchua"},"content":"     * Adds a task to the list.","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"javinchua"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"javinchua"},"content":"     * @return Confirmation message indicating task addition.","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"javinchua"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"javinchua"},"content":"        int initialSize \u003d store.size();","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"javinchua"},"content":"        store.add(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"javinchua"},"content":"        assert store.size() \u003d\u003d initialSize + 1 : \"Task addition failed!\";","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"javinchua"},"content":"        return String.format(\"Got it. I\u0027ve added this task:\\n\\t%s\\nNow you have %d tasks in the list.\\n\", task, store.size());","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"javinchua"},"content":"     * Deletes a task from the list based on its index.","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"javinchua"},"content":"     * @param index Index of the task to be deleted.","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"javinchua"},"content":"     * @return Confirmation message indicating task deletion.","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"javinchua"},"content":"     * @throws InvalidIndexException If the provided index is out of bounds.","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"javinchua"},"content":"    public String deleteTask(int index) throws InvalidIndexException {","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"javinchua"},"content":"        int initialSize \u003d store.size();","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"javinchua"},"content":"        validateIndex(index);","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"javinchua"},"content":"        Task task \u003d store.remove(index - 1);","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"javinchua"},"content":"        assert store.size() \u003d\u003d initialSize - 1 : \"Task deletion failed!\";","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"javinchua"},"content":"        return String.format(\"Noted. I\u0027ve removed this task:\\n\\t%s\\nNow you have %d tasks in the list.\\n\", task, store.size());","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"javinchua"},"content":"     * Lists all tasks currently in the list.","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"javinchua"},"content":"     * @return Formatted string of all tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"javinchua"},"content":"    public String listTasks() {","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"javinchua"},"content":"        StringBuilder output \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"javinchua"},"content":"        int counter \u003d 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"javinchua"},"content":"        for (Task task : store) {","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"javinchua"},"content":"            output.append(counter++).append(\".\").append(task).append(\"\\n\");","lastModifiedDate":"2023-09-10"},{"lineNumber":76,"author":{"gitId":"javinchua"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"javinchua"},"content":"        return output.toString();","lastModifiedDate":"2023-09-10"},{"lineNumber":78,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"javinchua"},"content":"     * Marks a task as done based on its index.","lastModifiedDate":"2023-09-04"},{"lineNumber":81,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"javinchua"},"content":"     * @param index Index of the task to be marked as done.","lastModifiedDate":"2023-09-04"},{"lineNumber":83,"author":{"gitId":"javinchua"},"content":"     * @return Confirmation message indicating task status change to done.","lastModifiedDate":"2023-09-04"},{"lineNumber":84,"author":{"gitId":"javinchua"},"content":"     * @throws InvalidIndexException If the provided index is out of bounds.","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"javinchua"},"content":"    public String markTask(int index) throws InvalidIndexException {","lastModifiedDate":"2023-09-04"},{"lineNumber":87,"author":{"gitId":"javinchua"},"content":"        validateIndex(index);","lastModifiedDate":"2023-09-10"},{"lineNumber":88,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":89,"author":{"gitId":"javinchua"},"content":"        Task curr \u003d store.get(index - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"javinchua"},"content":"        curr.mark();","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"javinchua"},"content":"        return String.format(\"Nice! I\u0027ve marked this task as done:\\n\\t%s\\n\", curr);","lastModifiedDate":"2023-09-10"},{"lineNumber":92,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"javinchua"},"content":"     * Marks a task as not done based on its index.","lastModifiedDate":"2023-09-04"},{"lineNumber":96,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"javinchua"},"content":"     * @param index Index of the task to be marked as not done.","lastModifiedDate":"2023-09-04"},{"lineNumber":98,"author":{"gitId":"javinchua"},"content":"     * @return Confirmation message indicating task status change to not done.","lastModifiedDate":"2023-09-04"},{"lineNumber":99,"author":{"gitId":"javinchua"},"content":"     * @throws InvalidIndexException If the provided index is out of bounds.","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"javinchua"},"content":"    public String unmarkTask(int index) throws InvalidIndexException {","lastModifiedDate":"2023-09-04"},{"lineNumber":102,"author":{"gitId":"javinchua"},"content":"        validateIndex(index);","lastModifiedDate":"2023-09-10"},{"lineNumber":103,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":104,"author":{"gitId":"javinchua"},"content":"        Task curr \u003d store.get(index - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"javinchua"},"content":"        curr.unmark();","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"javinchua"},"content":"        return String.format(\"OK, I\u0027ve marked this task as not done yet:\\n\\t%s\\n\", curr);","lastModifiedDate":"2023-09-10"},{"lineNumber":107,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"javinchua"},"content":"     * Retrieves the current list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"javinchua"},"content":"     * @return A clone of the ArrayList containing all the tasks.","lastModifiedDate":"2023-09-10"},{"lineNumber":113,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"javinchua"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"javinchua"},"content":"        return new ArrayList\u003c\u003e(store);","lastModifiedDate":"2023-09-10"},{"lineNumber":116,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"javinchua"},"content":"     * Searches and provides tasks containing the specified keyword.","lastModifiedDate":"2023-09-04"},{"lineNumber":120,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"javinchua"},"content":"     * @param keyword Keyword to search for in task descriptions.","lastModifiedDate":"2023-09-04"},{"lineNumber":122,"author":{"gitId":"javinchua"},"content":"     * @return Formatted string of matching tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":123,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"javinchua"},"content":"    public String findTasks(String keyword) {","lastModifiedDate":"2023-09-04"},{"lineNumber":125,"author":{"gitId":"javinchua"},"content":"        StringBuilder output \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-09-10"},{"lineNumber":126,"author":{"gitId":"javinchua"},"content":"        boolean found \u003d false;","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":128,"author":{"gitId":"javinchua"},"content":"        for (int i \u003d 0; i \u003c store.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"javinchua"},"content":"            if (store.get(i).getDescription().contains(keyword)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"javinchua"},"content":"                found \u003d true;","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"javinchua"},"content":"                output.append(i + 1).append(\".\").append(store.get(i)).append(\"\\n\");","lastModifiedDate":"2023-09-10"},{"lineNumber":132,"author":{"gitId":"javinchua"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"javinchua"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":135,"author":{"gitId":"javinchua"},"content":"        if (!found) {","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"javinchua"},"content":"            output.append(\"No matching tasks found.\\n\");","lastModifiedDate":"2023-09-10"},{"lineNumber":137,"author":{"gitId":"javinchua"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":138,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":139,"author":{"gitId":"javinchua"},"content":"        return output.toString();","lastModifiedDate":"2023-09-10"},{"lineNumber":140,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":141,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":142,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":143,"author":{"gitId":"javinchua"},"content":"     * Validates the provided index against the task store\u0027s size.","lastModifiedDate":"2023-09-10"},{"lineNumber":144,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":145,"author":{"gitId":"javinchua"},"content":"     * @param index Index to validate.","lastModifiedDate":"2023-09-10"},{"lineNumber":146,"author":{"gitId":"javinchua"},"content":"     * @throws InvalidIndexException if the index is invalid.","lastModifiedDate":"2023-09-10"},{"lineNumber":147,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":148,"author":{"gitId":"javinchua"},"content":"    private void validateIndex(int index) throws InvalidIndexException {","lastModifiedDate":"2023-09-10"},{"lineNumber":149,"author":{"gitId":"javinchua"},"content":"        if (index \u003c 1 || index \u003e store.size()) {","lastModifiedDate":"2023-09-10"},{"lineNumber":150,"author":{"gitId":"javinchua"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2023-09-10"},{"lineNumber":151,"author":{"gitId":"javinchua"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":152,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":153,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":154,"author":{"gitId":"javinchua"},"content":"     * Updates the attributes of a task in the task list based on the provided index.","lastModifiedDate":"2023-09-10"},{"lineNumber":155,"author":{"gitId":"javinchua"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":156,"author":{"gitId":"javinchua"},"content":"     * The method supports updating the description for all task types. For {@code Event} tasks,","lastModifiedDate":"2023-09-10"},{"lineNumber":157,"author":{"gitId":"javinchua"},"content":"     * the \u0027from\u0027 and \u0027to\u0027 attributes can be updated. For {@code Deadline} tasks, the \u0027by\u0027 attribute","lastModifiedDate":"2023-09-10"},{"lineNumber":158,"author":{"gitId":"javinchua"},"content":"     * can be updated. Only the provided attributes are updated, while the others remain unchanged.","lastModifiedDate":"2023-09-10"},{"lineNumber":159,"author":{"gitId":"javinchua"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":160,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":161,"author":{"gitId":"javinchua"},"content":"     * @param index Index of the task in the task list to be updated.","lastModifiedDate":"2023-09-10"},{"lineNumber":162,"author":{"gitId":"javinchua"},"content":"     * @param newDescription New description for the task. If {@code null}, description remains unchanged.","lastModifiedDate":"2023-09-10"},{"lineNumber":163,"author":{"gitId":"javinchua"},"content":"     * @param newFrom New starting time/date for an {@code Event} task. If {@code null} or if task is not an event,","lastModifiedDate":"2023-09-10"},{"lineNumber":164,"author":{"gitId":"javinchua"},"content":"     *               remains unchanged.","lastModifiedDate":"2023-09-10"},{"lineNumber":165,"author":{"gitId":"javinchua"},"content":"     * @param newTo New ending time/date for an {@code Event} task. If {@code null} or if task is not an event,","lastModifiedDate":"2023-09-10"},{"lineNumber":166,"author":{"gitId":"javinchua"},"content":"     *             remains unchanged.","lastModifiedDate":"2023-09-10"},{"lineNumber":167,"author":{"gitId":"javinchua"},"content":"     * @param newBy New due date for a {@code Deadline} task. If {@code null} or if task is not a deadline,","lastModifiedDate":"2023-09-10"},{"lineNumber":168,"author":{"gitId":"javinchua"},"content":"     *             remains unchanged.","lastModifiedDate":"2023-09-10"},{"lineNumber":169,"author":{"gitId":"javinchua"},"content":"     * @return A confirmation message indicating the updated task details.","lastModifiedDate":"2023-09-10"},{"lineNumber":170,"author":{"gitId":"javinchua"},"content":"     * @throws InvalidIndexException If the provided index is out of the range of the task list.","lastModifiedDate":"2023-09-10"},{"lineNumber":171,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":172,"author":{"gitId":"javinchua"},"content":"    public String updateTask(int index, String newDescription, String newFrom, String newTo, String newBy)","lastModifiedDate":"2023-09-10"},{"lineNumber":173,"author":{"gitId":"javinchua"},"content":"            throws InvalidIndexException {","lastModifiedDate":"2023-09-10"},{"lineNumber":174,"author":{"gitId":"javinchua"},"content":"        validateIndex(index);","lastModifiedDate":"2023-09-10"},{"lineNumber":175,"author":{"gitId":"javinchua"},"content":"        Task task \u003d store.get(index - 1);","lastModifiedDate":"2023-09-10"},{"lineNumber":176,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":177,"author":{"gitId":"javinchua"},"content":"        if (newDescription !\u003d null) {","lastModifiedDate":"2023-09-10"},{"lineNumber":178,"author":{"gitId":"javinchua"},"content":"            task.setDescription(newDescription);","lastModifiedDate":"2023-09-10"},{"lineNumber":179,"author":{"gitId":"javinchua"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":180,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":181,"author":{"gitId":"javinchua"},"content":"        if (task instanceof Event) {","lastModifiedDate":"2023-09-10"},{"lineNumber":182,"author":{"gitId":"javinchua"},"content":"            Event eventTask \u003d (Event) task;","lastModifiedDate":"2023-09-10"},{"lineNumber":183,"author":{"gitId":"javinchua"},"content":"            if (newFrom !\u003d null) {","lastModifiedDate":"2023-09-10"},{"lineNumber":184,"author":{"gitId":"javinchua"},"content":"                eventTask.setFrom(newFrom);","lastModifiedDate":"2023-09-10"},{"lineNumber":185,"author":{"gitId":"javinchua"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":186,"author":{"gitId":"javinchua"},"content":"            if (newTo !\u003d null) {","lastModifiedDate":"2023-09-10"},{"lineNumber":187,"author":{"gitId":"javinchua"},"content":"                eventTask.setTo(newTo);","lastModifiedDate":"2023-09-10"},{"lineNumber":188,"author":{"gitId":"javinchua"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":189,"author":{"gitId":"javinchua"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2023-09-10"},{"lineNumber":190,"author":{"gitId":"javinchua"},"content":"            Deadline deadlineTask \u003d (Deadline) task;","lastModifiedDate":"2023-09-10"},{"lineNumber":191,"author":{"gitId":"javinchua"},"content":"            if (newBy !\u003d null) {","lastModifiedDate":"2023-09-10"},{"lineNumber":192,"author":{"gitId":"javinchua"},"content":"                deadlineTask.setBy(newBy);","lastModifiedDate":"2023-09-10"},{"lineNumber":193,"author":{"gitId":"javinchua"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":194,"author":{"gitId":"javinchua"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":195,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":196,"author":{"gitId":"javinchua"},"content":"        return \"Updated task:\\n\\t\" + task;","lastModifiedDate":"2023-09-10"},{"lineNumber":197,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":198,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":199,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":200,"author":{"gitId":"javinchua"},"content":"     * Validates the provided index for array list access.","lastModifiedDate":"2023-09-10"},{"lineNumber":201,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":202,"author":{"gitId":"javinchua"},"content":"     * @param index The index to validate.","lastModifiedDate":"2023-09-10"},{"lineNumber":203,"author":{"gitId":"javinchua"},"content":"     * @throws InvalidIndexException If the index is out of bounds.","lastModifiedDate":"2023-09-10"},{"lineNumber":204,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":205,"author":{"gitId":"javinchua"},"content":"    private void validateIndex(int index) throws InvalidIndexException {","lastModifiedDate":"2023-09-10"},{"lineNumber":206,"author":{"gitId":"javinchua"},"content":"        if (index \u003c\u003d 0 || index \u003e store.size()) {","lastModifiedDate":"2023-09-10"},{"lineNumber":207,"author":{"gitId":"javinchua"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2023-09-10"},{"lineNumber":208,"author":{"gitId":"javinchua"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":209,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":210,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"javinchua":210}},{"path":"src/main/java/duke/tasks/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":" * Enum representing the types of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":"public enum TaskType {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":"    TODO, DEADLINE, EVENT","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"javinchua":8}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":" * Represents a todo task, a type of task without a specific deadline or duration.","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":"     * Creates a new todo task with the specified description.","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"javinchua"},"content":"        super(TaskType.TODO, description);","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"javinchua":17}},{"path":"src/main/java/duke/util/DateParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package duke.util;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":"import duke.exception.InvalidDateTimeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":" * Utility class for parsing and transforming date-time strings.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"javinchua"},"content":" * The DateParser class provides functionality for transforming date and datetime strings from","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":" * one format to another. The class currently supports date strings in the format \"yyyy-MM-dd\"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":" * and datetime strings in the format \"yyyy-MM-dd HHmm\".","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"javinchua"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"javinchua"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"javinchua"},"content":"public class DateParser {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"javinchua"},"content":"     * Formatter for parsing input date strings in the format \"yyyy-MM-dd\".","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"javinchua"},"content":"    private static final DateTimeFormatter INPUT_DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"javinchua"},"content":"     * Formatter for parsing input datetime strings in the format \"yyyy-MM-dd HHmm\".","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"javinchua"},"content":"    private static final DateTimeFormatter INPUT_DATETIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"javinchua"},"content":"     * Formatter for producing output date strings in the format \"MMM dd yyyy\".","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"javinchua"},"content":"    private static final DateTimeFormatter OUTPUT_DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"javinchua"},"content":"     * Formatter for producing output datetime strings in the format \"MMM dd yyyy, h:mma\".","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"javinchua"},"content":"    private static final DateTimeFormatter OUTPUT_DATETIME_FORMATTER \u003d","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"javinchua"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\");","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"javinchua"},"content":"     * Pattern for validating input datetime strings.","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"javinchua"},"content":"    private static final Pattern DATETIME_PATTERN \u003d Pattern.compile(\"^\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{4}$\");","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"javinchua"},"content":"     * Pattern for validating input date strings.","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"javinchua"},"content":"    private static final Pattern DATE_PATTERN \u003d Pattern.compile(\"^\\\\d{4}-\\\\d{2}-\\\\d{2}$\");","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"javinchua"},"content":"     * Transforms the input date or datetime string to a different format.","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"javinchua"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"javinchua"},"content":"     * If the input string matches the datetime pattern \"yyyy-MM-dd HHmm\", it will be transformed to","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"javinchua"},"content":"     * \"MMM dd yyyy, h:mma\". If the input string matches the date pattern \"yyyy-MM-dd\", it will be","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"javinchua"},"content":"     * transformed to \"MMM dd yyyy\". If the input string doesn\u0027t match any of the known patterns,","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"javinchua"},"content":"     * an InvalidDateTimeException will be thrown.","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"javinchua"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"javinchua"},"content":"     * @param dateTimeStr the input date or datetime string.","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"javinchua"},"content":"     * @return a transformed date or datetime string.","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"javinchua"},"content":"     * @throws InvalidDateTimeException if the input string format is invalid.","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"javinchua"},"content":"    public static String transformDateTimeFormat(String dateTimeStr) throws InvalidDateTimeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"javinchua"},"content":"        if (DATETIME_PATTERN.matcher(dateTimeStr).matches()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"javinchua"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(dateTimeStr, INPUT_DATETIME_FORMATTER);","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"javinchua"},"content":"            return dateTime.format(OUTPUT_DATETIME_FORMATTER);","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"javinchua"},"content":"        } else if (DATE_PATTERN.matcher(dateTimeStr).matches()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"javinchua"},"content":"            LocalDate date \u003d LocalDate.parse(dateTimeStr, INPUT_DATE_FORMATTER);","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"javinchua"},"content":"            return date.format(OUTPUT_DATE_FORMATTER);","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"javinchua"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"javinchua"},"content":"            throw new InvalidDateTimeException();","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"javinchua"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"javinchua":76}},{"path":"src/main/java/duke/util/Pair.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package duke.util;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":" * Represents an immutable key-value pair.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":"public class Pair {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":"    private final String key;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":"    private final String value;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":"     * Initializes a new Pair with the specified key and value.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"javinchua"},"content":"     * @param key   The key for this pair.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":"     * @param value The value to be paired with the specified key.","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"javinchua"},"content":"    public Pair(String key, String value) {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"javinchua"},"content":"        this.key \u003d key;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"javinchua"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"javinchua"},"content":"     * Retrieves the key of this pair.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"javinchua"},"content":"     * @return The key associated with this pair.","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"javinchua"},"content":"    public String getKey() {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"javinchua"},"content":"        return key;","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"javinchua"},"content":"     * Retrieves the value of this pair.","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"javinchua"},"content":"     * @return The value associated with this pair.","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"javinchua"},"content":"    public String getValue() {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"javinchua"},"content":"        return value;","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"javinchua":39}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package duke.util;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":"import duke.command.*;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":"import duke.exception.EmptyTaskException;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":"import duke.exception.InvalidDateTimeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":"import duke.tasks.TaskType;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"javinchua"},"content":" * Provides functionality to parse user input into commands that the application can understand.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":"public class Parser {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"javinchua"},"content":"     * Parses the input string into a Command.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"javinchua"},"content":"     * @param input The raw input string from the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"javinchua"},"content":"     * @return A Command that corresponds to the input instruction.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"javinchua"},"content":"     * @throws DukeException If the input does not match any command or is invalid.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"javinchua"},"content":"     * @throws EmptyTaskException If the input is missing essential information.","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"javinchua"},"content":"     * @throws InvalidDateTimeException If the date or time format is invalid.","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"javinchua"},"content":"    public static Command parse(String input) throws DukeException, EmptyTaskException, InvalidDateTimeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"javinchua"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"javinchua"},"content":"            throw new DukeException();","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"javinchua"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"javinchua"},"content":"        String[] pairSplit \u003d input.split(\"/\");","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"javinchua"},"content":"        Pair commandPair \u003d parsePair(pairSplit[0]);","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"javinchua"},"content":"        String command \u003d commandPair.getKey();","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"javinchua"},"content":"        String argument \u003d commandPair.getValue();","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"javinchua"},"content":"        HashMap\u003cString, String\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"javinchua"},"content":"        for (int i \u003d 1; i \u003c pairSplit.length; i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"javinchua"},"content":"            Pair temp \u003d parsePair(pairSplit[i]);","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"javinchua"},"content":"            map.put(temp.getKey(), temp.getValue());","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"javinchua"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"javinchua"},"content":"        int index;","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"javinchua"},"content":"        switch (command) {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"javinchua"},"content":"        case \"bye\":","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"javinchua"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"javinchua"},"content":"        case \"list\":","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"javinchua"},"content":"            return new ListCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"javinchua"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"javinchua"},"content":"            index \u003d parseInt(argument);","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"javinchua"},"content":"            return new MarkCommand(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"javinchua"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"javinchua"},"content":"            index \u003d parseInt(argument);","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"javinchua"},"content":"            return new UnmarkCommand(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"javinchua"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"javinchua"},"content":"            index \u003d parseInt(argument);","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"javinchua"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"javinchua"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"javinchua"},"content":"            if (argument.isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"javinchua"},"content":"                throw new EmptyTaskException(TaskType.TODO, \"description\");","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"javinchua"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"javinchua"},"content":"            return new AddTodoCommand(argument);","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"javinchua"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"javinchua"},"content":"            if (argument.isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"javinchua"},"content":"                throw new EmptyTaskException(TaskType.TODO, \"description\");","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"javinchua"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"javinchua"},"content":"            String by \u003d map.getOrDefault(\"by\", \"\");","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"javinchua"},"content":"            if (by.isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"javinchua"},"content":"                throw new EmptyTaskException(TaskType.DEADLINE, \"by\");","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"javinchua"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"javinchua"},"content":"            return new AddDeadlineCommand(argument, DateParser.transformDateTimeFormat(by));","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"javinchua"},"content":"        case \"event\":","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"javinchua"},"content":"            if (argument.isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"javinchua"},"content":"                throw new EmptyTaskException(TaskType.TODO, \"description\");","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"javinchua"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"javinchua"},"content":"            String from \u003d map.getOrDefault(\"from\", \"\");","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"javinchua"},"content":"            if (from.isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"javinchua"},"content":"                throw new EmptyTaskException(TaskType.EVENT, \"from\");","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"javinchua"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"javinchua"},"content":"            String to \u003d map.getOrDefault(\"to\", \"\");","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"javinchua"},"content":"            if (to.isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"javinchua"},"content":"                throw new EmptyTaskException(TaskType.EVENT, \"to\");","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"javinchua"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"javinchua"},"content":"            return new AddEventCommand(argument,","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"javinchua"},"content":"                    DateParser.transformDateTimeFormat(from),","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"javinchua"},"content":"                    DateParser.transformDateTimeFormat(to));","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"javinchua"},"content":"        case \"find\":","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"javinchua"},"content":"            return new FindCommand(argument);","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"javinchua"},"content":"        case \"update\":","lastModifiedDate":"2023-09-10"},{"lineNumber":91,"author":{"gitId":"javinchua"},"content":"            index \u003d parseInt(argument);","lastModifiedDate":"2023-09-10"},{"lineNumber":92,"author":{"gitId":"javinchua"},"content":"            String newDescription \u003d map.getOrDefault(\"description\", null);","lastModifiedDate":"2023-09-10"},{"lineNumber":93,"author":{"gitId":"javinchua"},"content":"            String newFrom \u003d map.getOrDefault(\"from\", null);","lastModifiedDate":"2023-09-10"},{"lineNumber":94,"author":{"gitId":"javinchua"},"content":"            String newTo \u003d map.getOrDefault(\"to\", null);","lastModifiedDate":"2023-09-10"},{"lineNumber":95,"author":{"gitId":"javinchua"},"content":"            String newBy \u003d map.getOrDefault(\"by\", null);","lastModifiedDate":"2023-09-10"},{"lineNumber":96,"author":{"gitId":"javinchua"},"content":"            return new UpdateCommand(index, newDescription, newFrom, newTo, newBy);","lastModifiedDate":"2023-09-10"},{"lineNumber":97,"author":{"gitId":"javinchua"},"content":"        default:","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"javinchua"},"content":"            throw new DukeException();","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"javinchua"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"javinchua"},"content":"     * Parses a string to extract a pair of values.","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"javinchua"},"content":"     * @param input The string to parse.","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"javinchua"},"content":"     * @return A Pair where the key is the first word of the input, and the value is the rest of the string.","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"javinchua"},"content":"     * @throws DukeException If the input string is empty.","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"javinchua"},"content":"    private static Pair parsePair(String input) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"javinchua"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"javinchua"},"content":"            throw new DukeException();","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"javinchua"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"javinchua"},"content":"        String[] parts \u003d input.split(\"\\\\s+\", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"javinchua"},"content":"        String firstWord \u003d parts[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"javinchua"},"content":"        String restOfString \u003d parts.length \u003e 1 ? parts[1] : \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"javinchua"},"content":"        return new Pair(firstWord.trim(), restOfString.trim());","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"javinchua"},"content":"     * Converts a string to an integer.","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"javinchua"},"content":"     * @param argument The string to parse.","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"javinchua"},"content":"     * @return The integer representation of the string.","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"javinchua"},"content":"     * @throws DukeException If the string cannot be parsed into an integer.","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"javinchua"},"content":"    private static int parseInt(String argument) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"javinchua"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"javinchua"},"content":"            return Integer.parseInt(argument);","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"javinchua"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"javinchua"},"content":"            throw new DukeException();","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"javinchua"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"javinchua":135}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package duke.util;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":"import duke.exception.CorruptHarddriveException;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"javinchua"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"javinchua"},"content":" * Provides functionality for storing tasks in a file and retrieving tasks from a file.","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"javinchua"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"javinchua"},"content":"public class Storage {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"javinchua"},"content":"    /** File path to where the tasks are saved. */","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"javinchua"},"content":"    private static final String filePath \u003d \"./data/hardrive.txt\";","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"javinchua"},"content":"    /** Directory path to where the file is located. */","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"javinchua"},"content":"    private static final String dataFolderPath \u003d \"./data\";","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"javinchua"},"content":"     * Loads the tasks from the hard drive.","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"javinchua"},"content":"     * @return An ArrayList of Task objects, each representing a task retrieved from the hard drive.","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"javinchua"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"javinchua"},"content":"        ArrayList\u003cTask\u003e store \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"javinchua"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"javinchua"},"content":"            File f \u003d new File(filePath); // create a File for the given file path","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"javinchua"},"content":"            Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"javinchua"},"content":"            int index \u003d 0;","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"javinchua"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"javinchua"},"content":"                index++;","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"javinchua"},"content":"                String data \u003d s.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"javinchua"},"content":"                String[] dataSplit \u003d data.split(\"\\\\|\");","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"javinchua"},"content":"                String type \u003d dataSplit[0].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"javinchua"},"content":"                Task task;","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"javinchua"},"content":"                switch (type) {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"javinchua"},"content":"                case \"T\":","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"javinchua"},"content":"                    if (dataSplit.length !\u003d 3) {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"javinchua"},"content":"                        throw new CorruptHarddriveException();","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"javinchua"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"javinchua"},"content":"                    task \u003d new Todo(dataSplit[2].trim());","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"javinchua"},"content":"                    store.add(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"javinchua"},"content":"                    if (Boolean.valueOf(dataSplit[1].trim())) {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"javinchua"},"content":"                        task.mark();","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"javinchua"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"javinchua"},"content":"                    break;","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"javinchua"},"content":"                case \"D\":","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"javinchua"},"content":"                    if (dataSplit.length !\u003d 4) {","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"javinchua"},"content":"                        throw new CorruptHarddriveException();","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"javinchua"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"javinchua"},"content":"                    task \u003d new Deadline(dataSplit[2].trim(), dataSplit[3].trim());","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"javinchua"},"content":"                    store.add(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"javinchua"},"content":"                    if (Boolean.valueOf(dataSplit[1].trim())) {","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"javinchua"},"content":"                        task.mark();","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"javinchua"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"javinchua"},"content":"                    break;","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"javinchua"},"content":"                case \"E\":","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"javinchua"},"content":"                    if (dataSplit.length !\u003d 5) {","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"javinchua"},"content":"                        throw new CorruptHarddriveException();","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"javinchua"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"javinchua"},"content":"                    task \u003d new Event(dataSplit[2].trim(), dataSplit[3].trim(), dataSplit[4].trim());","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"javinchua"},"content":"                    store.add(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"javinchua"},"content":"                    if (Boolean.valueOf(dataSplit[1].trim())) {","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"javinchua"},"content":"                        task.mark();","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"javinchua"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"javinchua"},"content":"                    break;","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"javinchua"},"content":"                default:","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"javinchua"},"content":"                    throw new CorruptHarddriveException();","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"javinchua"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"javinchua"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"javinchua"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"javinchua"},"content":"            System.out.println(\"No initial file\");","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"javinchua"},"content":"        } catch (CorruptHarddriveException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"javinchua"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"javinchua"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"javinchua"},"content":"        return store;","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"javinchua"},"content":"     * Saves the given list of tasks to the hard drive.","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"javinchua"},"content":"     * @param store The list of tasks to save.","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"javinchua"},"content":"    public void save(ArrayList\u003cTask\u003e store) {","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"javinchua"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"javinchua"},"content":"            File dataFolder \u003d new File(dataFolderPath);","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"javinchua"},"content":"            if (!dataFolder.exists()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"javinchua"},"content":"                dataFolder.mkdirs();","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"javinchua"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"javinchua"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"javinchua"},"content":"            for (Task element : store) {","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"javinchua"},"content":"                String data \u003d element.transformFormat();","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"javinchua"},"content":"                fw.write(data);","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"javinchua"},"content":"                fw.write(System.lineSeparator());","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"javinchua"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"javinchua"},"content":"            fw.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"javinchua"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"javinchua"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"javinchua"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"javinchua":113}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package duke.util;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":" * Represents the user interface for managing input and output to the console.","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":" * Provides methods to show welcome and exit messages, get user input, and display a horizontal line.","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":"public class Ui {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":"    /** The horizontal line used for formatting output */","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":"    private static final String HORIZONTAL_LINE \u003d \"----------------------------------------\";","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"javinchua"},"content":"    /** The name of the bot */","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":"    private static final String name \u003d \"Code Buddy\";","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":"    /** Scanner object to read user input */","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"javinchua"},"content":"    private Scanner inputScanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"javinchua"},"content":"     * Initializes a new Ui object, setting up the scanner for user input.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"javinchua"},"content":"    public Ui() {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"javinchua"},"content":"        this.inputScanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"javinchua"},"content":"     * Displays the welcome message to the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"javinchua"},"content":"     * @return A string continaing the welcome message.","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"javinchua"},"content":"    public static String showWelcomeMessage() {","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"javinchua"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"javinchua"},"content":"        output +\u003d HORIZONTAL_LINE + \"\\n\";","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"javinchua"},"content":"        output +\u003d \"Hello! I\u0027m \" + name + \"\\n\";","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"javinchua"},"content":"        output +\u003d \"What can I do for you?\\n\";","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"javinchua"},"content":"        output +\u003d HORIZONTAL_LINE + \"\\n\";","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"javinchua"},"content":"        return output;","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"javinchua"},"content":"     * Retrieves a line of input from the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"javinchua"},"content":"     * @return A string containing the user\u0027s input.","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"javinchua"},"content":"    public String getUserInput() {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"javinchua"},"content":"        return inputScanner.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"javinchua"},"content":"     * Displays the exit message to the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"javinchua"},"content":"     * @return A string containing the exit message.","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"javinchua"},"content":"    public String showExitMessage() {","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"javinchua"},"content":"        return \"Bye. Hope to see you again soon !\\n\";","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"javinchua"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"javinchua"},"content":"     * Displays a horizontal line for formatting purposes.","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"javinchua"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"javinchua"},"content":"     * @return A string representing a horizontal line.","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"javinchua"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"javinchua"},"content":"    public String showLine() {","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"javinchua"},"content":"        return HORIZONTAL_LINE + \"\\n\";","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"javinchua":65}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-spacing: 10;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: #ECECEC; -fx-background-radius: 15; -fx-border-radius: 32; -fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.6), 5, 0, 0, 2);\" text\u003d\"Label\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":"                \u003cInsets bottom\u003d\"8.0\" left\u003d\"16.0\" right\u003d\"16.0\" top\u003d\"8.0\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"javinchua"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"70.0\" fitWidth\u003d\"70.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"javinchua"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"javinchua"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"javinchua"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"javinchua"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"javinchua":21}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" style\u003d\"-fx-background-color: linear-gradient(to bottom right, #ECECEC, #FFFFFF); -fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.6), 5, 0, 0, 2);\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":"        \u003cTextField fx:id\u003d\"userInput\" style\u003d\"-fx-background-radius: 15; -fx-border-radius: 15;\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":"        \u003cButton fx:id\u003d\"sendButton\" style\u003d\"-fx-background-color: #0077B5; -fx-text-fill: #fff; -fx-background-radius: 20; -fx-border-radius: 20; -fx-cursor: hand;\" onMouseEntered\u003d\"#onHoverButton\" onMouseExited\u003d\"#onExitButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"javinchua"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" spacing\u003d\"10\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"javinchua"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"javinchua"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"javinchua":18}},{"path":"src/test/java/duke/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":"    // Testing the creation of a Deadline task and its default values.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":"    public void createDeadlineTest() {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":"        Deadline deadline \u003d new Deadline(\"Complete project\", \"2023-09-01\");","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":"        assertEquals(TaskType.DEADLINE, deadline.getTaskType());","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"javinchua"},"content":"        assertEquals(\"Complete project\", deadline.getDescription());","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":"        assertFalse(deadline.isDone()); // Ensure that by default, tasks are not done.","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":"        assertEquals(\"2023-09-01\", deadline.getBy());","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"javinchua"},"content":"    // Testing the string representation of a Deadline task.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"javinchua"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"javinchua"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"javinchua"},"content":"        Deadline deadline \u003d new Deadline(\"Complete project\", \"2023-09-01\");","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"javinchua"},"content":"        assertEquals(\"[D][ ] Complete project (by: 2023-09-01)\", deadline.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"javinchua"},"content":"    // Testing the transformFormat method for a Deadline task.","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"javinchua"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"javinchua"},"content":"    public void transformFormatTest() {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"javinchua"},"content":"        Deadline deadline \u003d new Deadline(\"Complete project\", \"2023-09-01\");","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"javinchua"},"content":"        assertEquals(\"D | false | Complete project | 2023-09-01\", deadline.transformFormat());","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"javinchua":33}},{"path":"src/test/java/duke/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":"public class EventTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":"    // Testing the creation of an Event task and its default values.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":"    public void createEventTest() {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":"        Event event \u003d new Event(\"Team Meeting\", \"9:00AM\", \"11:00AM\");","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":"        assertEquals(TaskType.EVENT, event.getTaskType());","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":"        assertEquals(\"Team Meeting\", event.getDescription());","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"javinchua"},"content":"        assertFalse(event.isDone()); // Ensure that by default, tasks are not done.","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"javinchua"},"content":"        assertEquals(\"9:00AM\", event.getFrom());","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"javinchua"},"content":"        assertEquals(\"11:00AM\", event.getTo());","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"javinchua"},"content":"    // Testing the string representation of an Event task.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"javinchua"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"javinchua"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"javinchua"},"content":"        Event event \u003d new Event(\"Team Meeting\", \"9:00AM\", \"11:00AM\");","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"javinchua"},"content":"        assertEquals(\"[E][ ] Team Meeting (from: 9:00AM to: 11:00AM)\", event.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"javinchua"},"content":"    // Testing the transformFormat method for an Event task.","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"javinchua"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"javinchua"},"content":"    public void transformFormatTest() {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"javinchua"},"content":"        Event event \u003d new Event(\"Team Meeting\", \"9:00AM\", \"11:00AM\");","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"javinchua"},"content":"        assertEquals(\"E | false | Team Meeting | 9:00AM | 11:00AM\", event.transformFormat());","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"javinchua":36}},{"path":"src/test/java/duke/tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":"public class TaskTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":"    // Testing the creation of a task and its default values.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":"    public void createTaskTest() {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":"        Task task \u003d new Task(TaskType.TODO, \"Test description\");","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":"        assertEquals(TaskType.TODO, task.getTaskType());","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"javinchua"},"content":"        assertEquals(\"Test description\", task.getDescription());","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":"        assertFalse(task.isDone()); // Ensure that by default, tasks are not done.","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"javinchua"},"content":"    // Testing the string representation of a task.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"javinchua"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"javinchua"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"javinchua"},"content":"        Task todoTask \u003d new Task(TaskType.TODO, \"Todo task\");","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"javinchua"},"content":"        assertEquals(\"[T][ ] Todo task\", todoTask.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"javinchua"},"content":"        Task eventTask \u003d new Task(TaskType.EVENT, \"Event task\");","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"javinchua"},"content":"        assertEquals(\"[E][ ] Event task\", eventTask.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"javinchua"},"content":"        Task deadlineTask \u003d new Task(TaskType.DEADLINE, \"Deadline task\");","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"javinchua"},"content":"        assertEquals(\"[D][ ] Deadline task\", deadlineTask.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"javinchua"},"content":"    // Testing marking a task as done.","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"javinchua"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"javinchua"},"content":"    public void markTaskTest() {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"javinchua"},"content":"        Task task \u003d new Task(TaskType.TODO, \"Test description\");","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"javinchua"},"content":"        task.mark();","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"javinchua"},"content":"        assertTrue(task.isDone());","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"javinchua"},"content":"        assertEquals(\"[T][X] Test description\", task.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"javinchua"},"content":"    // Testing unmarking a task.","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"javinchua"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"javinchua"},"content":"    public void unmarkTaskTest() {","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"javinchua"},"content":"        Task task \u003d new Task(TaskType.TODO, \"Test description\");","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"javinchua"},"content":"        task.mark();","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"javinchua"},"content":"        task.unmark();","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"javinchua"},"content":"        assertFalse(task.isDone());","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"javinchua"},"content":"        assertEquals(\"[T][ ] Test description\", task.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"javinchua"},"content":"    // Testing the transformFormat method.","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"javinchua"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"javinchua"},"content":"    public void transformFormatTest() {","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"javinchua"},"content":"        Task todoTask \u003d new Task(TaskType.TODO, \"Todo task\");","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"javinchua"},"content":"        assertEquals(\"T | false | Todo task\", todoTask.transformFormat());","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"javinchua"},"content":"        Task eventTask \u003d new Task(TaskType.EVENT, \"Event task\");","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"javinchua"},"content":"        assertEquals(\"E | false | Event task\", eventTask.transformFormat());","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"javinchua"},"content":"        Task deadlineTask \u003d new Task(TaskType.DEADLINE, \"Deadline task\");","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"javinchua"},"content":"        assertEquals(\"D | false | Deadline task\", deadlineTask.transformFormat());","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"javinchua":64}},{"path":"src/test/java/duke/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":"public class TodoTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":"    public void createTodoTest() {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":"        Todo todo \u003d new Todo(\"Test description\");","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":"        assertEquals(TaskType.TODO, todo.getTaskType());","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":"        assertEquals(\"Test description\", todo.getDescription());","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"javinchua":13}},{"path":"src/test/java/duke/util/DateParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package duke.util;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"import duke.exception.InvalidDateTimeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":"public class DateParserTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":"    public void transformDateTimeFormat_validDateTimeString_transformed() throws InvalidDateTimeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":"        String input \u003d \"2023-08-28 1430\";","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"javinchua"},"content":"        String expectedOutput \u003d \"Aug 28 2023, 2:30pm\";","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":"        assertEquals(expectedOutput, DateParser.transformDateTimeFormat(input));","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"javinchua"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"javinchua"},"content":"    public void transformDateTimeFormat_validDateString_transformed() throws InvalidDateTimeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"javinchua"},"content":"        String input \u003d \"2023-08-28\";","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"javinchua"},"content":"        String expectedOutput \u003d \"Aug 28 2023\";","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"javinchua"},"content":"        assertEquals(expectedOutput, DateParser.transformDateTimeFormat(input));","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"javinchua"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"javinchua"},"content":"    public void transformDateTimeFormat_invalidDateString_exceptionThrown() {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"javinchua"},"content":"        String input \u003d \"2023/08/28\";","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"javinchua"},"content":"        assertThrows(InvalidDateTimeException.class, () -\u003e DateParser.transformDateTimeFormat(input));","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"javinchua"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"javinchua"},"content":"    public void transformDateTimeFormat_invalidDateTimeString_exceptionThrown() {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"javinchua"},"content":"        String input \u003d \"2023/08/28 14:30\";","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"javinchua"},"content":"        assertThrows(InvalidDateTimeException.class, () -\u003e DateParser.transformDateTimeFormat(input));","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"javinchua"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"javinchua"},"content":"    public void transformDateTimeFormat_invalidString_exceptionThrown() {","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"javinchua"},"content":"        String input \u003d \"invalid date\";","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"javinchua"},"content":"        assertThrows(InvalidDateTimeException.class, () -\u003e DateParser.transformDateTimeFormat(input));","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"javinchua":47}},{"path":"src/test/java/duke/util/PairTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package duke.util;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":"public class PairTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":"    public void getKey_validPair_correctKeyReturned() {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":"        Pair pair \u003d new Pair(\"name\", \"duke\");","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":"        assertEquals(\"name\", pair.getKey());","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"javinchua"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":"    public void getValue_validPair_correctValueReturned() {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":"        Pair pair \u003d new Pair(\"name\", \"duke\");","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"javinchua"},"content":"        assertEquals(\"duke\", pair.getValue());","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"javinchua":20}},{"path":"src/test/java/duke/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"package duke.util;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"import duke.command.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":"import duke.exception.EmptyTaskException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":"import duke.exception.InvalidDateTimeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"javinchua"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"javinchua"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"javinchua"},"content":"    public void parse_emptyInput_dukeExceptionThrown() {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"javinchua"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":"            Parser.parse(\"\");","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"javinchua"},"content":"        });","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"javinchua"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"javinchua"},"content":"    public void parse_validByeCommand_exitCommandReturned() throws DukeException, EmptyTaskException, InvalidDateTimeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"javinchua"},"content":"        Command cmd \u003d Parser.parse(\"bye\");","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"javinchua"},"content":"        assertTrue(cmd instanceof ExitCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"javinchua"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"javinchua"},"content":"    public void parse_validListCommand_listCommandReturned() throws DukeException, EmptyTaskException, InvalidDateTimeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"javinchua"},"content":"        Command cmd \u003d Parser.parse(\"list\");","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"javinchua"},"content":"        assertTrue(cmd instanceof ListCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"javinchua"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"javinchua"},"content":"    public void parse_invalidCommand_dukeExceptionThrown() {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"javinchua"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"javinchua"},"content":"            Parser.parse(\"invalidcommand\");","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"javinchua"},"content":"        });","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"javinchua"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"javinchua"},"content":"    public void parse_markCommandWithValidIndex_markCommandReturned() throws DukeException, EmptyTaskException, InvalidDateTimeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"javinchua"},"content":"        Command cmd \u003d Parser.parse(\"mark 2\");","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"javinchua"},"content":"        assertTrue(cmd instanceof MarkCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"javinchua"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"javinchua"},"content":"    public void parse_unmarkCommandWithValidIndex_unmarkCommandReturned() throws DukeException, EmptyTaskException, InvalidDateTimeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"javinchua"},"content":"        Command cmd \u003d Parser.parse(\"unmark 2\");","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"javinchua"},"content":"        assertTrue(cmd instanceof UnmarkCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"javinchua"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"javinchua"},"content":"    public void parse_deleteCommandWithValidIndex_deleteCommandReturned() throws DukeException, EmptyTaskException, InvalidDateTimeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"javinchua"},"content":"        Command cmd \u003d Parser.parse(\"delete 2\");","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"javinchua"},"content":"        assertTrue(cmd instanceof DeleteCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"javinchua"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"javinchua"},"content":"    public void parse_todoCommandWithDescription_addTodoCommandReturned() throws DukeException, EmptyTaskException, InvalidDateTimeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"javinchua"},"content":"        Command cmd \u003d Parser.parse(\"todo sample todo\");","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"javinchua"},"content":"        assertTrue(cmd instanceof AddTodoCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"javinchua"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"javinchua"},"content":"    public void parse_todoCommandWithoutDescription_emptyTaskExceptionThrown() {","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"javinchua"},"content":"        assertThrows(EmptyTaskException.class, () -\u003e {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"javinchua"},"content":"            Parser.parse(\"todo \");","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"javinchua"},"content":"        });","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"javinchua"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"javinchua"},"content":"    public void parse_deadlineCommandWithDescriptionAndBy_addDeadlineCommandReturned() throws DukeException, EmptyTaskException, InvalidDateTimeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"javinchua"},"content":"        Command cmd \u003d Parser.parse(\"deadline sample /by 2023-08-28\");","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"javinchua"},"content":"        assertTrue(cmd instanceof AddDeadlineCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"javinchua"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"javinchua"},"content":"    public void parse_deadlineCommandWithoutBy_emptyTaskExceptionThrown() {","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"javinchua"},"content":"        assertThrows(EmptyTaskException.class, () -\u003e {","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"javinchua"},"content":"            Parser.parse(\"deadline sample deadline\");","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"javinchua"},"content":"        });","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"javinchua"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"javinchua"},"content":"    public void parse_eventCommandWithDescriptionFromAndTo_addEventCommandReturned() throws DukeException, EmptyTaskException, InvalidDateTimeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"javinchua"},"content":"        Command cmd \u003d Parser.parse(\"event sample /from 2023-08-28 1200 /to 2023-08-28 1400\");","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"javinchua"},"content":"        assertTrue(cmd instanceof AddEventCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"javinchua"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"javinchua"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"javinchua"},"content":"    public void parse_eventCommandWithoutTo_emptyTaskExceptionThrown() {","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"javinchua"},"content":"        assertThrows(EmptyTaskException.class, () -\u003e {","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"javinchua"},"content":"            Parser.parse(\"event sample /from 2023-08-28 1200\");","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"javinchua"},"content":"        });","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"javinchua"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"javinchua"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"javinchua":95}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"javinchua"},"content":"todo borrow book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"javinchua"},"content":"deadline return book /by 2019-12-11 1800","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"javinchua"},"content":"event project meeting /from 2019-12-11 1800 /to 2020-01-21 2130","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"javinchua"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"javinchua"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"javinchua"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"javinchua"},"content":"unmark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"javinchua"},"content":"delete 3","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"javinchua"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"javinchua"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"javinchua":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"javinchua"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"javinchua":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"javinchua"},"content":"if ! javac -cp ../src/main/java/duke -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/**/*.java","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"javinchua":1,"-":37}}]
