[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"    protected String deadline;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public Deadline (String list, String deadline ,TaskType type) {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":"        super(list, type);","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"Khaleelur-Rahman"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Marks the task as completed and returns a message indicating the task\u0027s new status.","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message indicating the successful marking of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If the task has already been marked as done.","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String setMarked() throws DukeException{","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"Khaleelur-Rahman"},"content":"        super.setMarked();","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Marks the task as not completed and returns a message indicating the task\u0027s new status.","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message indicating the successful unmarking of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If the task has already been marked as not done.","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String setUnmarked() throws DukeException{","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"Khaleelur-Rahman"},"content":"        super.setUnmarked();","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return super.toString() + \"( by: \" + this.deadline + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"Khaleelur-Rahman"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Khaleelur-Rahman":38}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":"    ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"Khaleelur-Rahman"},"content":"    String divider \u003d \"------------------------------------\\n\";","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"Khaleelur-Rahman"},"content":"    String greet \u003d divider +","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"Khaleelur-Rahman"},"content":"            \"Hello! I\u0027m Khaleelur!\\n\" +","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"Khaleelur-Rahman"},"content":"            \"What can I do for you?\\n \" +","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"Khaleelur-Rahman"},"content":"            divider;","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"Khaleelur-Rahman"},"content":"    String exit \u003d divider +","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"Khaleelur-Rahman"},"content":"            \"Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"Khaleelur-Rahman"},"content":"            divider;","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Retrieves a formatted string showing the number of tasks left in the list.","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A string indicating the number of tasks remaining.","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String getTaskLeft() {","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return \"Now you have \" + list.size() + (list.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\";","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Retrieves a formatted string containing all tasks in the list.","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A string listing all tasks in the task list.","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If there are no tasks in the list.","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String getAllToDo() throws DukeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"Khaleelur-Rahman"},"content":"        StringBuilder res \u003d new StringBuilder();","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"Oh no! No tasks for now! Add more tasks :)\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"Khaleelur-Rahman"},"content":"        res.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"Khaleelur-Rahman"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"Khaleelur-Rahman"},"content":"            res.append(i + 1).append(\".\")","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"Khaleelur-Rahman"},"content":"                    .append(list.get(i).toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"Khaleelur-Rahman"},"content":"            if (i !\u003d list.size() - 1) res.append(\"\\n\");","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return res.toString();","lastModifiedDate":"2023-08-20"},{"lineNumber":49,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":50,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":51,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Retrieves a formatted string indicating the success of marking a task.","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param input  The input by the user.","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message confirming the action\u0027s success.","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If there\u0027s an issue with the task list or input.","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String markTask(String input) throws DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String res \u003d \"\";","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"Khaleelur-Rahman"},"content":"        //No index to mark","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"Specify index to mark task!\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (parts.length \u003e 2 ) {","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"Enter mark command properly!\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"Khaleelur-Rahman"},"content":"        //No task to mark","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-22"},{"lineNumber":75,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"No tasks! Add more tasks to mark!\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":78,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"Khaleelur-Rahman"},"content":"            String sec \u003d parts[1];","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"Khaleelur-Rahman"},"content":"            //index is not valid integer","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"Khaleelur-Rahman"},"content":"            try {","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"Khaleelur-Rahman"},"content":"                int index \u003d Integer.parseInt(sec);","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"Khaleelur-Rahman"},"content":"                //index entered is more than totalTodos","lastModifiedDate":"2023-08-22"},{"lineNumber":86,"author":{"gitId":"Khaleelur-Rahman"},"content":"                if (index \u003e list.size() || index \u003c\u003d 0) {","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"Khaleelur-Rahman"},"content":"                    throw new DukeException(\"Enter mark command with positive index lesser than \" + (list.size() + 1) + \"\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":88,"author":{"gitId":"Khaleelur-Rahman"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":89,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":90,"author":{"gitId":"Khaleelur-Rahman"},"content":"                res \u003d list.get(index - 1).setMarked();","lastModifiedDate":"2023-08-23"},{"lineNumber":91,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":92,"author":{"gitId":"Khaleelur-Rahman"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":93,"author":{"gitId":"Khaleelur-Rahman"},"content":"                throw new DukeException(\"Enter a valid positive integer after your markcommand!\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":94,"author":{"gitId":"Khaleelur-Rahman"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":95,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":96,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return res;","lastModifiedDate":"2023-08-23"},{"lineNumber":97,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":98,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":99,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Retrieves a formatted string indicating the success of unmarking a task.","lastModifiedDate":"2023-08-23"},{"lineNumber":101,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":102,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param input  The input by the user.","lastModifiedDate":"2023-08-23"},{"lineNumber":103,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message confirming the action\u0027s success.","lastModifiedDate":"2023-08-23"},{"lineNumber":104,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If there\u0027s an issue with the task list or input.","lastModifiedDate":"2023-08-23"},{"lineNumber":105,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":106,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String unmarkTask(String input) throws DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":107,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":108,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2023-08-20"},{"lineNumber":109,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":110,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String res \u003d \"\";","lastModifiedDate":"2023-08-23"},{"lineNumber":111,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":112,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":113,"author":{"gitId":"Khaleelur-Rahman"},"content":"        //No index to mark","lastModifiedDate":"2023-08-23"},{"lineNumber":114,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-23"},{"lineNumber":115,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"Specify index to unmark task!\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":116,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":117,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":118,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (parts.length \u003e 2 ) {","lastModifiedDate":"2023-08-23"},{"lineNumber":119,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"Enter unmark command properly!\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":120,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":121,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":122,"author":{"gitId":"Khaleelur-Rahman"},"content":"        //No task to mark","lastModifiedDate":"2023-08-23"},{"lineNumber":123,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-23"},{"lineNumber":124,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"No tasks! Add more tasks to unmark!\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":125,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":126,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":127,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-23"},{"lineNumber":128,"author":{"gitId":"Khaleelur-Rahman"},"content":"            String sec \u003d parts[1];","lastModifiedDate":"2023-08-20"},{"lineNumber":129,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":130,"author":{"gitId":"Khaleelur-Rahman"},"content":"            //index is not valid integer","lastModifiedDate":"2023-08-22"},{"lineNumber":131,"author":{"gitId":"Khaleelur-Rahman"},"content":"            try {","lastModifiedDate":"2023-08-20"},{"lineNumber":132,"author":{"gitId":"Khaleelur-Rahman"},"content":"                int index \u003d Integer.parseInt(sec);","lastModifiedDate":"2023-08-23"},{"lineNumber":133,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":134,"author":{"gitId":"Khaleelur-Rahman"},"content":"                //index entered is more than totalTodos","lastModifiedDate":"2023-08-23"},{"lineNumber":135,"author":{"gitId":"Khaleelur-Rahman"},"content":"                if (index \u003e list.size() || index \u003c\u003d 0) {","lastModifiedDate":"2023-08-23"},{"lineNumber":136,"author":{"gitId":"Khaleelur-Rahman"},"content":"                    throw new DukeException(\"Enter umark command with positive index lesser than \" + (list.size() + 1) + \"\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":137,"author":{"gitId":"Khaleelur-Rahman"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":138,"author":{"gitId":"Khaleelur-Rahman"},"content":"                res \u003d list.get(index - 1).setUnmarked();","lastModifiedDate":"2023-08-23"},{"lineNumber":139,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":140,"author":{"gitId":"Khaleelur-Rahman"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-20"},{"lineNumber":141,"author":{"gitId":"Khaleelur-Rahman"},"content":"                throw new DukeException(\"Enter a valid positive integer after your unmark command!\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":142,"author":{"gitId":"Khaleelur-Rahman"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":143,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":144,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return res;","lastModifiedDate":"2023-08-23"},{"lineNumber":145,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":146,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":147,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":148,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Deletes a task from the task list based on the provided index.","lastModifiedDate":"2023-08-23"},{"lineNumber":149,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":150,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param input The input of the task to be deleted.","lastModifiedDate":"2023-08-23"},{"lineNumber":151,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message indicating the success of the deletion.","lastModifiedDate":"2023-08-23"},{"lineNumber":152,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If there\u0027s an issue with the task list or input.","lastModifiedDate":"2023-08-23"},{"lineNumber":153,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":154,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String deleteTask(String input) throws DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":155,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":156,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2023-08-22"},{"lineNumber":157,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":158,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String res \u003d \"\";","lastModifiedDate":"2023-08-23"},{"lineNumber":159,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":160,"author":{"gitId":"Khaleelur-Rahman"},"content":"        //No index to delete","lastModifiedDate":"2023-08-23"},{"lineNumber":161,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (input.equals(\"delete\") \u0026\u0026 parts.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-22"},{"lineNumber":162,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"Specify index to delete task!\\n\");","lastModifiedDate":"2023-08-22"},{"lineNumber":163,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":164,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":165,"author":{"gitId":"Khaleelur-Rahman"},"content":"        //No task to delete","lastModifiedDate":"2023-08-23"},{"lineNumber":166,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-23"},{"lineNumber":167,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"No tasks to delete! Add more tasks to delete!\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":168,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":169,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":170,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if ((parts[0].equals(\"delete\")) \u0026\u0026 parts.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-22"},{"lineNumber":171,"author":{"gitId":"Khaleelur-Rahman"},"content":"            String sec \u003d parts[1];","lastModifiedDate":"2023-08-22"},{"lineNumber":172,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":173,"author":{"gitId":"Khaleelur-Rahman"},"content":"            //index is not valid integer","lastModifiedDate":"2023-08-22"},{"lineNumber":174,"author":{"gitId":"Khaleelur-Rahman"},"content":"            try {","lastModifiedDate":"2023-08-22"},{"lineNumber":175,"author":{"gitId":"Khaleelur-Rahman"},"content":"                int index \u003d Integer.parseInt(sec);","lastModifiedDate":"2023-08-23"},{"lineNumber":176,"author":{"gitId":"Khaleelur-Rahman"},"content":"                String removedTask \u003d list.get(index).toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":177,"author":{"gitId":"Khaleelur-Rahman"},"content":"                list.remove(index);","lastModifiedDate":"2023-08-23"},{"lineNumber":178,"author":{"gitId":"Khaleelur-Rahman"},"content":"                res \u003d \"Noted. I\u0027ve removed this task: \\n \" + \"  \" + removedTask + \"\\n\" + getTaskLeft();","lastModifiedDate":"2023-08-23"},{"lineNumber":179,"author":{"gitId":"Khaleelur-Rahman"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":180,"author":{"gitId":"Khaleelur-Rahman"},"content":"                throw new DukeException(\"Enter a valid positive integer after your mark/unmark command!\\n\");","lastModifiedDate":"2023-08-22"},{"lineNumber":181,"author":{"gitId":"Khaleelur-Rahman"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":182,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":183,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return res;","lastModifiedDate":"2023-08-23"},{"lineNumber":184,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":185,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":186,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":187,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Adds a ToDo task to the task list based on the provided input.","lastModifiedDate":"2023-08-23"},{"lineNumber":188,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":189,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param input The user input containing the task description.","lastModifiedDate":"2023-08-23"},{"lineNumber":190,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message indicating the success of adding the ToDo task.","lastModifiedDate":"2023-08-23"},{"lineNumber":191,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If there\u0027s an issue with the input or task description.","lastModifiedDate":"2023-08-23"},{"lineNumber":192,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":193,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String todoTask(String input) throws DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":194,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String task \u003d \"\";","lastModifiedDate":"2023-08-23"},{"lineNumber":195,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":196,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2023-08-23"},{"lineNumber":197,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":198,"author":{"gitId":"Khaleelur-Rahman"},"content":"        for (int i \u003d 1; i \u003c parts.length; i++) {","lastModifiedDate":"2023-08-23"},{"lineNumber":199,"author":{"gitId":"Khaleelur-Rahman"},"content":"            task +\u003d parts[i] + \" \";","lastModifiedDate":"2023-08-23"},{"lineNumber":200,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":201,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":202,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (task.equals(\"\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":203,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"No description specified la dei!! How to do work when no work is said?! Enter again!\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":204,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":205,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":206,"author":{"gitId":"Khaleelur-Rahman"},"content":"        list.add(new ToDo(task, TaskType.TODO));","lastModifiedDate":"2023-08-23"},{"lineNumber":207,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String res \u003d \"Got it. I\u0027ve added this task :\\n\" + list.get(list.size() - 1).toString() + \"\\n\";","lastModifiedDate":"2023-08-23"},{"lineNumber":208,"author":{"gitId":"Khaleelur-Rahman"},"content":"        res +\u003d getTaskLeft();","lastModifiedDate":"2023-08-23"},{"lineNumber":209,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":210,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return res;","lastModifiedDate":"2023-08-23"},{"lineNumber":211,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":212,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":213,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":214,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Adds a Deadline task to the task list based on the provided input.","lastModifiedDate":"2023-08-23"},{"lineNumber":215,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":216,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param input The user input containing the task description and deadline.","lastModifiedDate":"2023-08-23"},{"lineNumber":217,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message indicating the success of adding the Deadline task.","lastModifiedDate":"2023-08-23"},{"lineNumber":218,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If there\u0027s an issue with the input, task description, or deadline.","lastModifiedDate":"2023-08-23"},{"lineNumber":219,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":220,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String deadlineTask(String input) throws DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":221,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String task \u003d \"\";","lastModifiedDate":"2023-08-22"},{"lineNumber":222,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String by \u003d \"\";","lastModifiedDate":"2023-08-22"},{"lineNumber":223,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":224,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2023-08-22"},{"lineNumber":225,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":226,"author":{"gitId":"Khaleelur-Rahman"},"content":"        boolean found \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":227,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":228,"author":{"gitId":"Khaleelur-Rahman"},"content":"        for (int i \u003d 1; i \u003c parts.length; i++) {","lastModifiedDate":"2023-08-22"},{"lineNumber":229,"author":{"gitId":"Khaleelur-Rahman"},"content":"            if (parts[i].equals(\"/by\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":230,"author":{"gitId":"Khaleelur-Rahman"},"content":"                found \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":231,"author":{"gitId":"Khaleelur-Rahman"},"content":"            } else if (found) {","lastModifiedDate":"2023-08-23"},{"lineNumber":232,"author":{"gitId":"Khaleelur-Rahman"},"content":"                by +\u003d parts[i] + \" \";","lastModifiedDate":"2023-08-22"},{"lineNumber":233,"author":{"gitId":"Khaleelur-Rahman"},"content":"            } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":234,"author":{"gitId":"Khaleelur-Rahman"},"content":"                task +\u003d parts[i] + \" \";","lastModifiedDate":"2023-08-22"},{"lineNumber":235,"author":{"gitId":"Khaleelur-Rahman"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":236,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":237,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":238,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (task.equals(\"\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":239,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"No description specified la dei!! How to do work when no work is said!! Enter again!\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":240,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":241,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":242,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (by.isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":243,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"deadline task must have /by time\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":244,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":245,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":246,"author":{"gitId":"Khaleelur-Rahman"},"content":"        list.add(new Deadline(task, by, TaskType.DEADLINE));","lastModifiedDate":"2023-08-23"},{"lineNumber":247,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":248,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String res \u003d \"Got it. I\u0027ve added this task :\\n\" + list.get(list.size() - 1).toString() + \"\\n\";","lastModifiedDate":"2023-08-23"},{"lineNumber":249,"author":{"gitId":"Khaleelur-Rahman"},"content":"        res +\u003d getTaskLeft();","lastModifiedDate":"2023-08-23"},{"lineNumber":250,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":251,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return res;","lastModifiedDate":"2023-08-23"},{"lineNumber":252,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":253,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":254,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":255,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Adds an Event task to the task list based on the provided input.","lastModifiedDate":"2023-08-23"},{"lineNumber":256,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":257,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param input The user input containing the task description and event timings.","lastModifiedDate":"2023-08-23"},{"lineNumber":258,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message indicating the success of adding the Event task.","lastModifiedDate":"2023-08-23"},{"lineNumber":259,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If there\u0027s an issue with the input, task description, or event timings.","lastModifiedDate":"2023-08-23"},{"lineNumber":260,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":261,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String eventTask(String input) throws DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":262,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String task \u003d \"\";","lastModifiedDate":"2023-08-23"},{"lineNumber":263,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String from \u003d \"\";","lastModifiedDate":"2023-08-23"},{"lineNumber":264,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String to \u003d \"\";","lastModifiedDate":"2023-08-23"},{"lineNumber":265,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":266,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2023-08-23"},{"lineNumber":267,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":268,"author":{"gitId":"Khaleelur-Rahman"},"content":"        boolean startFound \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":269,"author":{"gitId":"Khaleelur-Rahman"},"content":"        boolean endFound \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":270,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":271,"author":{"gitId":"Khaleelur-Rahman"},"content":"        for (int i \u003d 1; i \u003c parts.length; i++) {","lastModifiedDate":"2023-08-22"},{"lineNumber":272,"author":{"gitId":"Khaleelur-Rahman"},"content":"            if (parts[i].equals(\"/from\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":273,"author":{"gitId":"Khaleelur-Rahman"},"content":"                startFound \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":274,"author":{"gitId":"Khaleelur-Rahman"},"content":"            } else if (parts[i].equals(\"/to\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":275,"author":{"gitId":"Khaleelur-Rahman"},"content":"                startFound \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":276,"author":{"gitId":"Khaleelur-Rahman"},"content":"                endFound \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":277,"author":{"gitId":"Khaleelur-Rahman"},"content":"            } else if (startFound) {","lastModifiedDate":"2023-08-22"},{"lineNumber":278,"author":{"gitId":"Khaleelur-Rahman"},"content":"                from +\u003d parts[i] + \" \";","lastModifiedDate":"2023-08-22"},{"lineNumber":279,"author":{"gitId":"Khaleelur-Rahman"},"content":"            } else if (endFound) {","lastModifiedDate":"2023-08-22"},{"lineNumber":280,"author":{"gitId":"Khaleelur-Rahman"},"content":"                to +\u003d parts[i] + \" \";","lastModifiedDate":"2023-08-22"},{"lineNumber":281,"author":{"gitId":"Khaleelur-Rahman"},"content":"            } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":282,"author":{"gitId":"Khaleelur-Rahman"},"content":"                task +\u003d parts[i] + \" \";","lastModifiedDate":"2023-08-22"},{"lineNumber":283,"author":{"gitId":"Khaleelur-Rahman"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":284,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":285,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":286,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (task.equals(\"\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":287,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"No description specified la dei!! How to do work when no work is said!! Enter again!\\n\");","lastModifiedDate":"2023-08-22"},{"lineNumber":288,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":289,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":290,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (from.isEmpty() || to.isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":291,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"event task must have both /from and /to times\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":292,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":293,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":294,"author":{"gitId":"Khaleelur-Rahman"},"content":"        list.add(new Event(task, from, to, TaskType.EVENT));","lastModifiedDate":"2023-08-23"},{"lineNumber":295,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":296,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String res \u003d \"Got it. I\u0027ve added this task :\\n\" + list.get(list.size() - 1).toString() + \"\\n\";","lastModifiedDate":"2023-08-23"},{"lineNumber":297,"author":{"gitId":"Khaleelur-Rahman"},"content":"        res +\u003d getTaskLeft();","lastModifiedDate":"2023-08-23"},{"lineNumber":298,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":299,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return res;","lastModifiedDate":"2023-08-23"},{"lineNumber":300,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":301,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":302,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":303,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Handles user input and performs the relevant actions based on the commands.","lastModifiedDate":"2023-08-23"},{"lineNumber":304,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Continuously listens for user input until the \"bye\" command is entered.","lastModifiedDate":"2023-08-23"},{"lineNumber":305,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":306,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public void handleUserInput() {","lastModifiedDate":"2023-08-23"},{"lineNumber":307,"author":{"gitId":"Khaleelur-Rahman"},"content":"        Scanner obj \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":308,"author":{"gitId":"Khaleelur-Rahman"},"content":"        while (true) {","lastModifiedDate":"2023-08-23"},{"lineNumber":309,"author":{"gitId":"Khaleelur-Rahman"},"content":"            String userInput \u003d obj.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":310,"author":{"gitId":"Khaleelur-Rahman"},"content":"            try {","lastModifiedDate":"2023-08-22"},{"lineNumber":311,"author":{"gitId":"Khaleelur-Rahman"},"content":"                if (userInput.equals(\"bye\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":312,"author":{"gitId":"Khaleelur-Rahman"},"content":"                    return;","lastModifiedDate":"2023-08-23"},{"lineNumber":313,"author":{"gitId":"Khaleelur-Rahman"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":314,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":315,"author":{"gitId":"Khaleelur-Rahman"},"content":"                if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":316,"author":{"gitId":"Khaleelur-Rahman"},"content":"                    System.out.println(divider + markTask(userInput) + \"\\n\" + divider);","lastModifiedDate":"2023-08-23"},{"lineNumber":317,"author":{"gitId":"Khaleelur-Rahman"},"content":"                } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":318,"author":{"gitId":"Khaleelur-Rahman"},"content":"                    System.out.println(divider + unmarkTask(userInput) + \"\\n\" + divider);","lastModifiedDate":"2023-08-23"},{"lineNumber":319,"author":{"gitId":"Khaleelur-Rahman"},"content":"                } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":320,"author":{"gitId":"Khaleelur-Rahman"},"content":"                    System.out.println(divider + deleteTask(userInput) + \"\\n\" + divider);","lastModifiedDate":"2023-08-23"},{"lineNumber":321,"author":{"gitId":"Khaleelur-Rahman"},"content":"                } else if (userInput.startsWith(\"list\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":322,"author":{"gitId":"Khaleelur-Rahman"},"content":"                    System.out.println(divider + getAllToDo() + \"\\n\" + divider);","lastModifiedDate":"2023-08-23"},{"lineNumber":323,"author":{"gitId":"Khaleelur-Rahman"},"content":"                } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":324,"author":{"gitId":"Khaleelur-Rahman"},"content":"                    System.out.println(divider + todoTask(userInput) + \"\\n\" + divider);","lastModifiedDate":"2023-08-23"},{"lineNumber":325,"author":{"gitId":"Khaleelur-Rahman"},"content":"                } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":326,"author":{"gitId":"Khaleelur-Rahman"},"content":"                    System.out.println(divider + deadlineTask(userInput) + \"\\n\" + divider);","lastModifiedDate":"2023-08-23"},{"lineNumber":327,"author":{"gitId":"Khaleelur-Rahman"},"content":"                } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":328,"author":{"gitId":"Khaleelur-Rahman"},"content":"                    System.out.println(divider + eventTask(userInput) + \"\\n\" + divider);","lastModifiedDate":"2023-08-23"},{"lineNumber":329,"author":{"gitId":"Khaleelur-Rahman"},"content":"                } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":330,"author":{"gitId":"Khaleelur-Rahman"},"content":"                    throw new InvalidInputExpression(\"Invalid input!! Specify commands as list, mark, unmark, or deadline, event and todo followed by the task please la dei!\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":331,"author":{"gitId":"Khaleelur-Rahman"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":332,"author":{"gitId":"Khaleelur-Rahman"},"content":"            } catch (DukeException | InvalidInputExpression e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":333,"author":{"gitId":"Khaleelur-Rahman"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-22"},{"lineNumber":334,"author":{"gitId":"Khaleelur-Rahman"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":335,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":336,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":337,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-23"},{"lineNumber":339,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":340,"author":{"gitId":"Khaleelur-Rahman"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2023-08-23"},{"lineNumber":341,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":342,"author":{"gitId":"Khaleelur-Rahman"},"content":"        System.out.println(duke.greet);","lastModifiedDate":"2023-08-23"},{"lineNumber":343,"author":{"gitId":"Khaleelur-Rahman"},"content":"        duke.handleUserInput();","lastModifiedDate":"2023-08-23"},{"lineNumber":344,"author":{"gitId":"Khaleelur-Rahman"},"content":"        System.out.println(duke.exit);","lastModifiedDate":"2023-08-22"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":347,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Khaleelur-Rahman":343,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public DukeException(String input) {","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"        super(input);","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Khaleelur-Rahman":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"public class Event extends Task{","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"    protected String start;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"    protected String end;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public Event(String list, String start, String end, TaskType type) {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"Khaleelur-Rahman"},"content":"        super(list, type);","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"Khaleelur-Rahman"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Khaleelur-Rahman"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Marks the task as completed and returns a message indicating the task\u0027s new status.","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message indicating the successful marking of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If the task has already been marked as done.","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String setMarked() throws DukeException{","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"Khaleelur-Rahman"},"content":"        super.setMarked();","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Marks the task as not completed and returns a message indicating the task\u0027s new status.","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message indicating the successful unmarking of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If the task has already been marked as not done.","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String setUnmarked() throws DukeException{","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"Khaleelur-Rahman"},"content":"        super.setUnmarked();","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return super.toString() + \" ( from: \" + this.start + \" to: \" + this.end +\")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"Khaleelur-Rahman"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Khaleelur-Rahman":40}},{"path":"src/main/java/InvalidInputExpression.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"public class InvalidInputExpression extends Exception {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public InvalidInputExpression(String input) {","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"        super(input);","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Khaleelur-Rahman":5}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"public class Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"    String list;","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"    boolean completed;","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":"    TaskType type;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public Task(String list, TaskType type) {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"Khaleelur-Rahman"},"content":"        this.list \u003d list;","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"Khaleelur-Rahman"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Marks the task as completed and returns a message indicating the task\u0027s new status.","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message indicating the successful marking of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If the task has already been marked as done.","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String setMarked() throws DukeException{","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if(this.completed) {","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"This task has already been marked as done!\\n\");","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"Khaleelur-Rahman"},"content":"        this.completed \u003d true;","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return \"\";","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Marks the task as not completed and returns a message indicating the task\u0027s new status.","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message indicating the successful unmarking of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If the task has already been marked as not done.","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String setUnmarked() throws DukeException{","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if(!this.completed) {","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"This task has already been marked as not done!\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"Khaleelur-Rahman"},"content":"        this.completed \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return \"\";","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String typeSymbol \u003d \"\";","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"Khaleelur-Rahman"},"content":"        switch (type) {","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"Khaleelur-Rahman"},"content":"            case TODO:","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"Khaleelur-Rahman"},"content":"                typeSymbol \u003d \"[T]\";","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"Khaleelur-Rahman"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"Khaleelur-Rahman"},"content":"            case EVENT:","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"Khaleelur-Rahman"},"content":"                typeSymbol \u003d \"[E]\";","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"Khaleelur-Rahman"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"Khaleelur-Rahman"},"content":"            case DEADLINE:","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"Khaleelur-Rahman"},"content":"                typeSymbol \u003d \"[D]\";","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"Khaleelur-Rahman"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return typeSymbol + (this.completed ? \"[X] \" : \"[ ] \") + this.list;","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":55,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"Khaleelur-Rahman"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"Khaleelur-Rahman":56}},{"path":"src/main/java/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"public enum TaskType {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"    TODO, DEADLINE, EVENT;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Khaleelur-Rahman":3}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"public class ToDo extends Task{","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public ToDo(String list, TaskType type) {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"        super(list, type);","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Marks the task as completed and returns a message indicating the task\u0027s new status.","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message indicating the successful marking of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If the task has already been marked as done.","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String setMarked() throws DukeException{","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"Khaleelur-Rahman"},"content":"        super.setMarked();","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Marks the task as not completed and returns a message indicating the task\u0027s new status.","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message indicating the successful unmarking of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If the task has already been marked as not done.","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String setUnmarked() throws DukeException{","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"Khaleelur-Rahman"},"content":"        super.setUnmarked();","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"Khaleelur-Rahman"},"content":"    ","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"Khaleelur-Rahman"},"content":" }","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Khaleelur-Rahman":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"todo play soccer","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"event NUSMS WT /from 5pm /to 11pm","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"mark 2","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Khaleelur-Rahman":5}}]
