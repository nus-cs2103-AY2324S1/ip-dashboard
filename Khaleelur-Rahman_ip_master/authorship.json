[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Khaleelur-Rahman"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Khaleelur-Rahman":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"Khaleelur-Rahman"},"content":"checkstyle {","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"Khaleelur-Rahman"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"Khaleelur-Rahman"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"Khaleelur-Rahman"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"Khaleelur-Rahman"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"Khaleelur-Rahman"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"Khaleelur-Rahman"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"Khaleelur-Rahman"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"Khaleelur-Rahman"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"Khaleelur-Rahman"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"Khaleelur-Rahman"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"Khaleelur-Rahman"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"Khaleelur-Rahman"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"Khaleelur-Rahman"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"Khaleelur-Rahman"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"Khaleelur-Rahman"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Khaleelur-Rahman":19,"-":46}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"Khaleelur-Rahman"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"Khaleelur-Rahman"},"content":" * Class to maintain the deadline tasks entered by user.","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"Khaleelur-Rahman"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"Khaleelur-Rahman"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Khaleelur-Rahman"},"content":"    protected LocalDate deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Khaleelur-Rahman"},"content":"    protected LocalTime endTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Constructor for Deadline class.","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param list List to add","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param deadline deadline","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param endTime end time of deadline task","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param type enum type","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public Deadline(String list, String deadline, String endTime, TaskType type) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Khaleelur-Rahman"},"content":"        super(list, type);","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"Khaleelur-Rahman"},"content":"        this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Khaleelur-Rahman"},"content":"        this.endTime \u003d LocalTime.parse(endTime);","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Marks the task as completed and returns a message indicating the task\u0027s new status.","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message indicating the successful marking of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If the task has already been marked as done.","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String setMarked() throws DukeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"Khaleelur-Rahman"},"content":"        super.setMarked();","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Marks the task as not completed and returns a message indicating the task\u0027s new status.","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message indicating the successful unmarking of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If the task has already been marked as not done.","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String setUnmarked() throws DukeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"Khaleelur-Rahman"},"content":"        super.setUnmarked();","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return super.toString()","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"Khaleelur-Rahman"},"content":"                + \"(by: \" + this.deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"Khaleelur-Rahman"},"content":"                + \" \" + this.endTime + \")\";","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"Khaleelur-Rahman"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Khaleelur-Rahman":60}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Khaleelur-Rahman"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Khaleelur-Rahman"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Khaleelur-Rahman"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Khaleelur-Rahman"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Khaleelur-Rahman"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"Khaleelur-Rahman"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"Khaleelur-Rahman"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"Khaleelur-Rahman"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Khaleelur-Rahman"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"Khaleelur-Rahman"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"Khaleelur-Rahman"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"Khaleelur-Rahman"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"Khaleelur-Rahman"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"Khaleelur-Rahman"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"Khaleelur-Rahman"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"Khaleelur-Rahman"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"Khaleelur-Rahman"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"Khaleelur-Rahman"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Method to display the dialog box","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param text input text","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param img image for user or duke","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"Khaleelur-Rahman"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"Khaleelur-Rahman"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"Khaleelur-Rahman"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"Khaleelur-Rahman"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"Khaleelur-Rahman"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"Khaleelur-Rahman"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"Khaleelur-Rahman"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"Khaleelur-Rahman"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"Khaleelur-Rahman"},"content":"        dialog.setMinSize(Label.USE_PREF_SIZE, Label.USE_PREF_SIZE);","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"Khaleelur-Rahman"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"Khaleelur-Rahman"},"content":"    private void flip() {","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"Khaleelur-Rahman"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"Khaleelur-Rahman"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"Khaleelur-Rahman"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"Khaleelur-Rahman"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"Khaleelur-Rahman"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"Khaleelur-Rahman"},"content":"        db.flip();","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return db;","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"Khaleelur-Rahman"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"Khaleelur-Rahman":68}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Khaleelur-Rahman"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"Khaleelur-Rahman"},"content":" * Main to class to handle duke operations","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"Khaleelur-Rahman"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"Khaleelur-Rahman"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Khaleelur-Rahman"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Khaleelur-Rahman"},"content":"    private Parser parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Khaleelur-Rahman"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Constructor","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public Duke() {","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"Khaleelur-Rahman"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"Khaleelur-Rahman"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Khaleelur-Rahman"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"Khaleelur-Rahman"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"Khaleelur-Rahman"},"content":"            String tasksFromStorage \u003d storage.handleReadAllTasksFromFile();","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"Khaleelur-Rahman"},"content":"            tasks \u003d new TaskList(tasksFromStorage);","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"Khaleelur-Rahman"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Khaleelur-Rahman"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"Khaleelur-Rahman"},"content":"    String getResponse(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"Khaleelur-Rahman"},"content":"            return ui.exit();","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"Khaleelur-Rahman"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"Khaleelur-Rahman"},"content":"            String[] commandType \u003d parser.handleUserInput(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"Khaleelur-Rahman"},"content":"            String str \u003d handleCommand(commandType[0], commandType[1]);","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"Khaleelur-Rahman"},"content":"            ArrayList\u003cTask\u003ecurrentTasks \u003d tasks.getTasks();","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"Khaleelur-Rahman"},"content":"            storage.handleChangesInFile(currentTasks);","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"Khaleelur-Rahman"},"content":"            return str;","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"Khaleelur-Rahman"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"Khaleelur-Rahman"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Method to handle input","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param command command of user","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param input inout of user","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return String representing the process performed","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws IOException","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String handleCommand(String command, String input) throws DukeException, IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (input.equals(\"\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"Invalid Command!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"Khaleelur-Rahman"},"content":"        switch (command) {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"Khaleelur-Rahman"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"Khaleelur-Rahman"},"content":"            return tasks.markTask(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"Khaleelur-Rahman"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"Khaleelur-Rahman"},"content":"            return tasks.unmarkTask(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"Khaleelur-Rahman"},"content":"        case \"list\":","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"Khaleelur-Rahman"},"content":"            return tasks.getAllToDo();","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"Khaleelur-Rahman"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"Khaleelur-Rahman"},"content":"            return tasks.handleTodoTask(input);","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"Khaleelur-Rahman"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"Khaleelur-Rahman"},"content":"            return tasks.handleDeadlineTask(input, \"user\");","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"Khaleelur-Rahman"},"content":"        case \"event\":","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"Khaleelur-Rahman"},"content":"            return tasks.handleEventTask(input, \"user\");","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"Khaleelur-Rahman"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"Khaleelur-Rahman"},"content":"            return tasks.deleteTask(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"Khaleelur-Rahman"},"content":"        case \"find\":","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"Khaleelur-Rahman"},"content":"            return tasks.handleFindTask(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"Khaleelur-Rahman"},"content":"        default:","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"Invalid Command!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Khaleelur-Rahman":79,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":" * Custom exception class to handle exceptions with Duke","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"Khaleelur-Rahman"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public DukeException(String input) {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Khaleelur-Rahman"},"content":"        super(input);","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Khaleelur-Rahman"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Khaleelur-Rahman":10}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"Khaleelur-Rahman"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"Khaleelur-Rahman"},"content":" * Class to handle event task","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"Khaleelur-Rahman"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"Khaleelur-Rahman"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Khaleelur-Rahman"},"content":"    protected LocalDate start;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Khaleelur-Rahman"},"content":"    protected LocalDate end;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Khaleelur-Rahman"},"content":"    protected LocalTime startTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Khaleelur-Rahman"},"content":"    protected LocalTime endTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Constructor","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param list list of input","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param startDate start date","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param endDate end date","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param startTime start time","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param endTime end time","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param type","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public Event(String list, String startDate, String endDate, String startTime, String endTime, TaskType type) {","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"Khaleelur-Rahman"},"content":"        super(list, type);","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"Khaleelur-Rahman"},"content":"        this.start \u003d LocalDate.parse(startDate);","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"Khaleelur-Rahman"},"content":"        this.end \u003d LocalDate.parse(endDate);","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"Khaleelur-Rahman"},"content":"        this.startTime \u003d LocalTime.parse(startTime);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Khaleelur-Rahman"},"content":"        this.endTime \u003d LocalTime.parse(endTime);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Marks the task as completed and returns a message indicating the task\u0027s new status.","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message indicating the successful marking of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If the task has already been marked as done.","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String setMarked() throws DukeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"Khaleelur-Rahman"},"content":"        super.setMarked();","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Marks the task as not completed and returns a message indicating the task\u0027s new status.","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message indicating the successful unmarking of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If the task has already been marked as not done.","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String setUnmarked() throws DukeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"Khaleelur-Rahman"},"content":"        super.setUnmarked();","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return super.toString()","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"Khaleelur-Rahman"},"content":"                + \"(from: \" + this.start.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"Khaleelur-Rahman"},"content":"                + \" \" + this.startTime + \" to: \" + this.end.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"Khaleelur-Rahman"},"content":"                + \" \" + this.endTime + \")\";","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"Khaleelur-Rahman"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Khaleelur-Rahman":65}},{"path":"src/main/java/duke/InvalidInputExpression.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":" * Custom class to handle invalid inout exception","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"Khaleelur-Rahman"},"content":"public class InvalidInputExpression extends Exception {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public InvalidInputExpression(String input) {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Khaleelur-Rahman"},"content":"        super(input);","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Khaleelur-Rahman"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Khaleelur-Rahman":10}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Khaleelur-Rahman"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Khaleelur-Rahman"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Khaleelur-Rahman"},"content":"public class Launcher {","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Khaleelur-Rahman"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"Khaleelur-Rahman"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"Khaleelur-Rahman":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Khaleelur-Rahman"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Khaleelur-Rahman"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Khaleelur-Rahman"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Khaleelur-Rahman"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"Khaleelur-Rahman"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"Khaleelur-Rahman"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"Khaleelur-Rahman"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Khaleelur-Rahman"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Khaleelur-Rahman"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"Khaleelur-Rahman"},"content":"    private MainWindow mainWindow \u003d new MainWindow();","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"Khaleelur-Rahman"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"Khaleelur-Rahman"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"Khaleelur-Rahman"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"Khaleelur-Rahman"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"Khaleelur-Rahman"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"Khaleelur-Rahman"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"Khaleelur-Rahman"},"content":"            stage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"Khaleelur-Rahman"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"Khaleelur-Rahman"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"Khaleelur-Rahman"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"Khaleelur-Rahman":33}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Khaleelur-Rahman"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Khaleelur-Rahman"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Khaleelur-Rahman"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Khaleelur-Rahman"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Khaleelur-Rahman"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"Khaleelur-Rahman"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"Khaleelur-Rahman"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Khaleelur-Rahman"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"Khaleelur-Rahman"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Khaleelur-Rahman"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"Khaleelur-Rahman"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"Khaleelur-Rahman"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"Khaleelur-Rahman"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"Khaleelur-Rahman"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"Khaleelur-Rahman"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"Khaleelur-Rahman"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"Khaleelur-Rahman"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"Khaleelur-Rahman"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"Khaleelur-Rahman"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Method to initialise the dialogContainer","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"Khaleelur-Rahman"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"Khaleelur-Rahman"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"Khaleelur-Rahman"},"content":"                DialogBox.getDukeDialog(ui.greet(), dukeImage));","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"Khaleelur-Rahman"},"content":"        dialogContainer.autosize();","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"Khaleelur-Rahman"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"Khaleelur-Rahman"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"Khaleelur-Rahman"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"Khaleelur-Rahman"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"Khaleelur-Rahman"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"Khaleelur-Rahman"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"Khaleelur-Rahman"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"Khaleelur-Rahman"},"content":"            PauseTransition pause \u003d new PauseTransition(Duration.seconds(3));","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"Khaleelur-Rahman"},"content":"            pause.setOnFinished(event -\u003e {","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"Khaleelur-Rahman"},"content":"                Platform.exit();","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"Khaleelur-Rahman"},"content":"            });","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"Khaleelur-Rahman"},"content":"            pause.play();","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"Khaleelur-Rahman"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"Khaleelur-Rahman":72}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":" * Class to parse the input","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"Khaleelur-Rahman"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Handles user input and determines the relevant command and input for further processing.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Parses the user input and extracts the command type and associated input.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Supports commands such as \"mark,\" \"unmark,\" \"delete,\" \"list,\" \"todo,\" \"deadline,\" and \"event.\"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param userInput The input string entered by the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return An array containing the command type and associated input.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws InvalidInputExpression If the user input does not match any supported command.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String[] handleUserInput(String userInput) throws InvalidInputExpression {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Khaleelur-Rahman"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"Khaleelur-Rahman"},"content":"            if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"Khaleelur-Rahman"},"content":"                return new String[]{\"mark\", userInput};","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"Khaleelur-Rahman"},"content":"            } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"Khaleelur-Rahman"},"content":"                return new String[]{\"unmark\", userInput};","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"Khaleelur-Rahman"},"content":"            } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"Khaleelur-Rahman"},"content":"                return new String[]{\"delete\", userInput};","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"Khaleelur-Rahman"},"content":"            } else if (userInput.startsWith(\"list\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"Khaleelur-Rahman"},"content":"                return new String[]{\"list\", userInput};","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"Khaleelur-Rahman"},"content":"            } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"Khaleelur-Rahman"},"content":"                return new String[]{\"todo\", userInput};","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"Khaleelur-Rahman"},"content":"            } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"Khaleelur-Rahman"},"content":"                return new String[]{\"deadline\", userInput};","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"Khaleelur-Rahman"},"content":"            } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"Khaleelur-Rahman"},"content":"                return new String[]{\"event\", userInput};","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"Khaleelur-Rahman"},"content":"            } else if (userInput.startsWith(\"find\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"Khaleelur-Rahman"},"content":"                return new String[]{\"find\", userInput};","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"Khaleelur-Rahman"},"content":"            } else {","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"Khaleelur-Rahman"},"content":"                throw new InvalidInputExpression(\"Invalid input!! \"","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"Khaleelur-Rahman"},"content":"                        + \"Specify commands as list, mark, unmark, or deadline, event \"","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"Khaleelur-Rahman"},"content":"                        + \"and todo followed by the task please la dei!\\n\");","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"Khaleelur-Rahman"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Khaleelur-Rahman"},"content":"        } catch (InvalidInputExpression e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new InvalidInputExpression(\"Invalid input!! \"","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"Khaleelur-Rahman"},"content":"                    + \"Specify commands as list, mark, unmark, or deadline, event \"","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"Khaleelur-Rahman"},"content":"                    + \"and todo followed by the task please la dei!\\n\");","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Khaleelur-Rahman"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Khaleelur-Rahman":46}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.io.File;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.io.Writer;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Khaleelur-Rahman"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"Khaleelur-Rahman"},"content":" * Class to handle storage of tasks","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"Khaleelur-Rahman"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"Khaleelur-Rahman"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Khaleelur-Rahman"},"content":"    private String filePath;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public Storage() {","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"Khaleelur-Rahman"},"content":"        this.filePath \u003d \"src/data/duke.txt\";","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Reads tasks from a file and processes them based on their types.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * The tasks are parsed and passed to respective handler methods.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Handles Todo, duke.Deadline, and duke.Event tasks stored in the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String handleReadAllTasksFromFile() throws FileNotFoundException {","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Khaleelur-Rahman"},"content":"        //Check if file exists","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"Khaleelur-Rahman"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Khaleelur-Rahman"},"content":"            new File(filePath);","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"Khaleelur-Rahman"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Khaleelur-Rahman"},"content":"            System.out.println(\"Please create a folder at the specified folder : src/data/duke.txt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String tasks \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Khaleelur-Rahman"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Khaleelur-Rahman"},"content":"            File obj \u003d new File(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Khaleelur-Rahman"},"content":"            Scanner reader \u003d new Scanner(obj);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Khaleelur-Rahman"},"content":"            while (reader.hasNextLine()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Khaleelur-Rahman"},"content":"                tasks +\u003d reader.nextLine() + \"\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"Khaleelur-Rahman"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Khaleelur-Rahman"},"content":"            reader.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"Khaleelur-Rahman"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"Khaleelur-Rahman"},"content":"            System.out.println(\"Please create a folder at the specified folder : src/data/duke.txt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Writes changes in the task list to the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Each task is written as a formatted string in the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public void handleChangesInFile(ArrayList\u003cTask\u003e list) throws IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"Khaleelur-Rahman"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"Khaleelur-Rahman"},"content":"            Writer writer \u003d new FileWriter(filePath, false);","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"Khaleelur-Rahman"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"Khaleelur-Rahman"},"content":"                writer.append(\"\" + (i + 1)).append(\".\").append(list.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"Khaleelur-Rahman"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"Khaleelur-Rahman"},"content":"            writer.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"Khaleelur-Rahman"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new IOException(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"Khaleelur-Rahman"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Khaleelur-Rahman":67}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":" * Class to handle the task","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"Khaleelur-Rahman"},"content":"public class Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"Khaleelur-Rahman"},"content":"    private String list;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"Khaleelur-Rahman"},"content":"    private boolean isCompleted;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"Khaleelur-Rahman"},"content":"    private TaskType type;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Constructor","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param list user list","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param type user input type","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public Task(String list, TaskType type) {","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"Khaleelur-Rahman"},"content":"        this.list \u003d list;","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"Khaleelur-Rahman"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Marks the task as isCompleted and returns a message indicating the task\u0027s new status.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message indicating the successful marking of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If the task has already been marked as done.","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String setMarked() throws DukeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (this.isCompleted) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"This task has already been marked as done!\\n\");","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"Khaleelur-Rahman"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return \"\";","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Marks the task as not isCompleted and returns a message indicating the task\u0027s new status.","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message indicating the successful unmarking of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If the task has already been marked as not done.","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String setUnmarked() throws DukeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (!this.isCompleted) {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"This task has already been marked as not done!\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"Khaleelur-Rahman"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return \"\";","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":49,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String typeSymbol \u003d \"\";","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"Khaleelur-Rahman"},"content":"        switch (type) {","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"Khaleelur-Rahman"},"content":"        case TODO:","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"Khaleelur-Rahman"},"content":"            typeSymbol \u003d \"[T]\";","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"Khaleelur-Rahman"},"content":"            break;","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"Khaleelur-Rahman"},"content":"        case EVENT:","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"Khaleelur-Rahman"},"content":"            typeSymbol \u003d \"[E]\";","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"Khaleelur-Rahman"},"content":"            break;","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"Khaleelur-Rahman"},"content":"        case DEADLINE:","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"Khaleelur-Rahman"},"content":"            typeSymbol \u003d \"[D]\";","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"Khaleelur-Rahman"},"content":"            break;","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"Khaleelur-Rahman"},"content":"        default:","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"Khaleelur-Rahman"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return typeSymbol + (this.isCompleted ? \"[X] \" : \"[ ] \") + this.list;","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":67,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"Khaleelur-Rahman"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"Khaleelur-Rahman":68}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Khaleelur-Rahman"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"Khaleelur-Rahman"},"content":" * Class to handle the tasklist operations","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"Khaleelur-Rahman"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"Khaleelur-Rahman"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Khaleelur-Rahman"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public TaskList(String tasksFromFile) throws DukeException, IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Khaleelur-Rahman"},"content":"        convertTasksToList(tasksFromFile);","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Khaleelur-Rahman"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Converts tasks read from a file to a list of tasks and processes each task.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Reads task strings from the provided input, parses them, and handles them based on their types.","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param tasksFromFile The string containing tasks read from a file.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If there is an error while processing a task.","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws IOException If there is an I/O error during processing.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public void convertTasksToList(String tasksFromFile) throws DukeException, IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Khaleelur-Rahman"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Khaleelur-Rahman"},"content":"        int j \u003d 0;","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Khaleelur-Rahman"},"content":"        while (i \u003c tasksFromFile.length()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Khaleelur-Rahman"},"content":"            String input \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Khaleelur-Rahman"},"content":"            for (; tasksFromFile.charAt(j) !\u003d \u0027\\n\u0027; j++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Khaleelur-Rahman"},"content":"                input +\u003d tasksFromFile.charAt(j);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Khaleelur-Rahman"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"Khaleelur-Rahman"},"content":"            String taskType \u003d input.substring(3, 4);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Khaleelur-Rahman"},"content":"            String taskDescription \u003d input.substring(9);","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Khaleelur-Rahman"},"content":"            switch (taskType) {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"Khaleelur-Rahman"},"content":"            case \"T\":","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"Khaleelur-Rahman"},"content":"                handleTodoTask(\"todo \" + taskDescription);","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"Khaleelur-Rahman"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Khaleelur-Rahman"},"content":"            case \"D\":","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Khaleelur-Rahman"},"content":"                handleDeadlineTask(\"deadline \" + taskDescription, \"file\");","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Khaleelur-Rahman"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Khaleelur-Rahman"},"content":"            case \"E\":","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"Khaleelur-Rahman"},"content":"                handleEventTask(\"event \" + taskDescription, \"file\");","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"Khaleelur-Rahman"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"Khaleelur-Rahman"},"content":"            default:","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"Khaleelur-Rahman"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"Khaleelur-Rahman"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"Khaleelur-Rahman"},"content":"            i \u003d j;","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"Khaleelur-Rahman"},"content":"            j++;","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"Khaleelur-Rahman"},"content":"            i++;","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Retrieves a formatted string showing the number of tasks left in the tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A string indicating the number of tasks remaining.","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String getTaskLeft() {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String taskOrTasks \u003d (tasks.size() \u003d\u003d 1 ? \" task\" : \" tasks\");","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return \"Now you have \" + tasks.size() + taskOrTasks + \" in the tasks.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Retrieves a formatted string containing all tasks in the tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A string tasksing all tasks in the task tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If there are no tasks in the tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String getAllToDo() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"Khaleelur-Rahman"},"content":"        StringBuilder res \u003d new StringBuilder();","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"Oh no! No tasks for now! Add more tasks :)\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"Khaleelur-Rahman"},"content":"        res.append(\"Here are the tasks in your tasks:\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"Khaleelur-Rahman"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"Khaleelur-Rahman"},"content":"            res.append(i + 1).append(\".\")","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"Khaleelur-Rahman"},"content":"                    .append(tasks.get(i).toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"Khaleelur-Rahman"},"content":"            //Append new line for all lines except last line","lastModifiedDate":"2023-09-12"},{"lineNumber":90,"author":{"gitId":"Khaleelur-Rahman"},"content":"            if (i !\u003d tasks.size() - 1) {","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"Khaleelur-Rahman"},"content":"                res.append(\"\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"Khaleelur-Rahman"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return res.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":97,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Method to check if index is valid or not","lastModifiedDate":"2023-09-13"},{"lineNumber":98,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param index index to check","lastModifiedDate":"2023-09-13"},{"lineNumber":99,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException if it is indeed invalid","lastModifiedDate":"2023-09-13"},{"lineNumber":100,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":101,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public void checkIfIndexIsValid(int index) throws DukeException {","lastModifiedDate":"2023-09-13"},{"lineNumber":102,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (index \u003e tasks.size() || index \u003c\u003d 0) {","lastModifiedDate":"2023-09-13"},{"lineNumber":103,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"Enter command with positive index lesser than \"","lastModifiedDate":"2023-09-13"},{"lineNumber":104,"author":{"gitId":"Khaleelur-Rahman"},"content":"                    + (tasks.size() + 1) + \"\\n\");","lastModifiedDate":"2023-09-13"},{"lineNumber":105,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":106,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":107,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Retrieves a formatted string indicating the success of marking a task.","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param input  The input by the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message confirming the action\u0027s success.","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If there\u0027s an issue with the task tasks or input.","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String markTask(String input) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String res \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"Khaleelur-Rahman"},"content":"        //No index to mark","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"Specify index to mark task!\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (parts.length \u003e 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"Enter mark command properly!\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"Khaleelur-Rahman"},"content":"        //No task to mark","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"No tasks! Add more tasks to mark!\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"Khaleelur-Rahman"},"content":"            String sec \u003d parts[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"Khaleelur-Rahman"},"content":"            //index is not valid integer","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"Khaleelur-Rahman"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"Khaleelur-Rahman"},"content":"                int index \u003d Integer.parseInt(sec);","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"Khaleelur-Rahman"},"content":"                //index entered is more than totalTodos or negative index","lastModifiedDate":"2023-09-13"},{"lineNumber":142,"author":{"gitId":"Khaleelur-Rahman"},"content":"                checkIfIndexIsValid(index);","lastModifiedDate":"2023-09-13"},{"lineNumber":143,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"Khaleelur-Rahman"},"content":"                res \u003d tasks.get(index - 1).setMarked();","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"Khaleelur-Rahman"},"content":"                assert !res.isEmpty() : \"Failed to mark task.\";","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"Khaleelur-Rahman"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"Khaleelur-Rahman"},"content":"                throw new DukeException(\"Enter a valid positive integer after your markcommand!\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"Khaleelur-Rahman"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return res;","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":153,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":154,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Retrieves a formatted string indicating the success of unmarking a task.","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param input  The input by the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message confirming the action\u0027s success.","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If there\u0027s an issue with the task tasks or input.","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String unmarkTask(String input) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String res \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"Khaleelur-Rahman"},"content":"        //No index to mark","lastModifiedDate":"2023-08-30"},{"lineNumber":168,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":169,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"Specify index to unmark task!\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":170,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":171,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":172,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (parts.length \u003e 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":173,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"Enter unmark command properly!\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":174,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":175,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":176,"author":{"gitId":"Khaleelur-Rahman"},"content":"        //No task to mark","lastModifiedDate":"2023-08-30"},{"lineNumber":177,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":178,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"No tasks! Add more tasks to unmark!\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":179,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":180,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":181,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":182,"author":{"gitId":"Khaleelur-Rahman"},"content":"            String sec \u003d parts[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":183,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":184,"author":{"gitId":"Khaleelur-Rahman"},"content":"            //index is not valid integer","lastModifiedDate":"2023-08-30"},{"lineNumber":185,"author":{"gitId":"Khaleelur-Rahman"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":186,"author":{"gitId":"Khaleelur-Rahman"},"content":"                int index \u003d Integer.parseInt(sec);","lastModifiedDate":"2023-08-30"},{"lineNumber":187,"author":{"gitId":"Khaleelur-Rahman"},"content":"                //index entered is more than totalTodos or negative index","lastModifiedDate":"2023-09-13"},{"lineNumber":188,"author":{"gitId":"Khaleelur-Rahman"},"content":"                checkIfIndexIsValid(index);","lastModifiedDate":"2023-09-13"},{"lineNumber":189,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":190,"author":{"gitId":"Khaleelur-Rahman"},"content":"                res \u003d tasks.get(index - 1).setUnmarked();","lastModifiedDate":"2023-08-30"},{"lineNumber":191,"author":{"gitId":"Khaleelur-Rahman"},"content":"                assert !res.isEmpty() : \"Failed to unmark task.\";","lastModifiedDate":"2023-09-12"},{"lineNumber":192,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":193,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":194,"author":{"gitId":"Khaleelur-Rahman"},"content":"                res \u003d tasks.get(index - 1).setUnmarked();","lastModifiedDate":"2023-09-13"},{"lineNumber":195,"author":{"gitId":"Khaleelur-Rahman"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":196,"author":{"gitId":"Khaleelur-Rahman"},"content":"                throw new DukeException(\"Enter a valid positive integer after your unmark command!\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":197,"author":{"gitId":"Khaleelur-Rahman"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":198,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":199,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return res;","lastModifiedDate":"2023-08-30"},{"lineNumber":200,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":201,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":202,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Deletes a task from the task tasks based on the provided index.","lastModifiedDate":"2023-08-30"},{"lineNumber":203,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":204,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param input The input of the task to be deleted.","lastModifiedDate":"2023-08-30"},{"lineNumber":205,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message indicating the success of the deletion.","lastModifiedDate":"2023-08-30"},{"lineNumber":206,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If there\u0027s an issue with the task tasks or input.","lastModifiedDate":"2023-08-30"},{"lineNumber":207,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":208,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String deleteTask(String input) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":209,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":210,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":211,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":212,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String res \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":213,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":214,"author":{"gitId":"Khaleelur-Rahman"},"content":"        //No index to delete","lastModifiedDate":"2023-08-30"},{"lineNumber":215,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (input.equals(\"delete\") \u0026\u0026 parts.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":216,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"Specify index to delete task!\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":217,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":218,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":219,"author":{"gitId":"Khaleelur-Rahman"},"content":"        //No task to delete","lastModifiedDate":"2023-08-30"},{"lineNumber":220,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":221,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"No tasks to delete! Add more tasks to delete!\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":222,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":223,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":224,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if ((parts[0].equals(\"delete\")) \u0026\u0026 parts.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":225,"author":{"gitId":"Khaleelur-Rahman"},"content":"            String sec \u003d parts[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":226,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":227,"author":{"gitId":"Khaleelur-Rahman"},"content":"            //index is not valid integer","lastModifiedDate":"2023-08-30"},{"lineNumber":228,"author":{"gitId":"Khaleelur-Rahman"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":229,"author":{"gitId":"Khaleelur-Rahman"},"content":"                int index \u003d Integer.parseInt(sec);","lastModifiedDate":"2023-08-30"},{"lineNumber":230,"author":{"gitId":"Khaleelur-Rahman"},"content":"                String removedTask \u003d tasks.get(index - 1).toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":231,"author":{"gitId":"Khaleelur-Rahman"},"content":"                tasks.remove(index - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":232,"author":{"gitId":"Khaleelur-Rahman"},"content":"                res \u003d \"Noted. I\u0027ve removed this task: \\n \" + \"  \" + removedTask + \"\\n\" + getTaskLeft();","lastModifiedDate":"2023-08-30"},{"lineNumber":233,"author":{"gitId":"Khaleelur-Rahman"},"content":"                assert !res.isEmpty() : \"Failed to delete task.\";","lastModifiedDate":"2023-09-12"},{"lineNumber":234,"author":{"gitId":"Khaleelur-Rahman"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":235,"author":{"gitId":"Khaleelur-Rahman"},"content":"                throw new DukeException(\"Enter a valid positive integer after your mark/unmark command!\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":236,"author":{"gitId":"Khaleelur-Rahman"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":237,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":238,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":239,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return res;","lastModifiedDate":"2023-08-30"},{"lineNumber":240,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":241,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":242,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":243,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Adds a duke.ToDo task to the task tasks based on the provided input.","lastModifiedDate":"2023-08-30"},{"lineNumber":244,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":245,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param input The user input containing the task description.","lastModifiedDate":"2023-08-30"},{"lineNumber":246,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message indicating the success of adding the duke.ToDo task.","lastModifiedDate":"2023-08-30"},{"lineNumber":247,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If there\u0027s an issue with the input or task description.","lastModifiedDate":"2023-08-30"},{"lineNumber":248,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":249,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String handleTodoTask(String input) throws DukeException, IOException {","lastModifiedDate":"2023-09-13"},{"lineNumber":250,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String task \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":251,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":252,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":253,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":254,"author":{"gitId":"Khaleelur-Rahman"},"content":"        for (int i \u003d 1; i \u003c parts.length; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":255,"author":{"gitId":"Khaleelur-Rahman"},"content":"            task +\u003d parts[i] + \" \";","lastModifiedDate":"2023-08-30"},{"lineNumber":256,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":257,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":258,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (task.equals(\"\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":259,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"No description specified la dei!! How to do work when no work is said?! \"","lastModifiedDate":"2023-09-05"},{"lineNumber":260,"author":{"gitId":"Khaleelur-Rahman"},"content":"                    + \"Enter again!\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":261,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":262,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":263,"author":{"gitId":"Khaleelur-Rahman"},"content":"        tasks.add(new ToDo(task, TaskType.TODO));","lastModifiedDate":"2023-08-30"},{"lineNumber":264,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":265,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String str \u003d tasks.get(tasks.size() - 1).toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":266,"author":{"gitId":"Khaleelur-Rahman"},"content":"        assert !str.isEmpty() : \"Failed to add todo task.\";","lastModifiedDate":"2023-09-12"},{"lineNumber":267,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String res \u003d \"Got it. I\u0027ve added this task :\\n\" + str + \"\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":268,"author":{"gitId":"Khaleelur-Rahman"},"content":"        res +\u003d getTaskLeft();","lastModifiedDate":"2023-08-30"},{"lineNumber":269,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":270,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":271,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return res;","lastModifiedDate":"2023-08-30"},{"lineNumber":272,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":273,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":274,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":275,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Adds a duke.Deadline task to the task tasks based on the provided input.","lastModifiedDate":"2023-08-30"},{"lineNumber":276,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":277,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param input The user input containing the task description and deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":278,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message indicating the success of adding the duke.Deadline task.","lastModifiedDate":"2023-08-30"},{"lineNumber":279,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If there\u0027s an issue with the input, task description, or deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":280,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":281,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String handleDeadlineTask(String input, String from) throws DukeException, IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":282,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String[] result;","lastModifiedDate":"2023-09-13"},{"lineNumber":283,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (from.equals(\"user\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":284,"author":{"gitId":"Khaleelur-Rahman"},"content":"            result \u003d handleDeadlineTaskFromUser(input);","lastModifiedDate":"2023-09-13"},{"lineNumber":285,"author":{"gitId":"Khaleelur-Rahman"},"content":"        } else {","lastModifiedDate":"2023-09-13"},{"lineNumber":286,"author":{"gitId":"Khaleelur-Rahman"},"content":"            result \u003d handleDeadlineTaskFromFile(input);","lastModifiedDate":"2023-09-13"},{"lineNumber":287,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":288,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String task \u003d result[0];","lastModifiedDate":"2023-09-13"},{"lineNumber":289,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String byDate \u003d result[1];","lastModifiedDate":"2023-09-13"},{"lineNumber":290,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String endTime \u003d result[2];","lastModifiedDate":"2023-09-13"},{"lineNumber":291,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (task.equals(\"\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":292,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"No description specified la dei!! How to do work when no work is said!! \"","lastModifiedDate":"2023-09-13"},{"lineNumber":293,"author":{"gitId":"Khaleelur-Rahman"},"content":"                    + \"Enter again!\\n\");","lastModifiedDate":"2023-09-13"},{"lineNumber":294,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":295,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":296,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (byDate.isEmpty()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":297,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"deadline task must have /by date and time\\n\");","lastModifiedDate":"2023-09-13"},{"lineNumber":298,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":299,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":300,"author":{"gitId":"Khaleelur-Rahman"},"content":"        tasks.add(new Deadline(task, byDate, endTime + \":00\", TaskType.DEADLINE));","lastModifiedDate":"2023-09-13"},{"lineNumber":301,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":302,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String str \u003d tasks.get(tasks.size() - 1).toString();","lastModifiedDate":"2023-09-13"},{"lineNumber":303,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String res \u003d \"Got it. I\u0027ve added this task :\\n\" + str + \"\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":304,"author":{"gitId":"Khaleelur-Rahman"},"content":"        res +\u003d getTaskLeft();","lastModifiedDate":"2023-09-13"},{"lineNumber":305,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":306,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return res;","lastModifiedDate":"2023-09-13"},{"lineNumber":307,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":308,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":309,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":310,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Method to handle deadline task from user","lastModifiedDate":"2023-09-13"},{"lineNumber":311,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param input user input","lastModifiedDate":"2023-09-13"},{"lineNumber":312,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return string array consisting of the contents of deadline task","lastModifiedDate":"2023-09-13"},{"lineNumber":313,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException","lastModifiedDate":"2023-09-13"},{"lineNumber":314,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":315,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String[] handleDeadlineTaskFromUser(String input) throws DukeException {","lastModifiedDate":"2023-09-13"},{"lineNumber":316,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String task \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":317,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String byDate \u003d \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":318,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String endTime \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":319,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String[] parts \u003d input.split(\"/by \");","lastModifiedDate":"2023-08-30"},{"lineNumber":320,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String[] taskArray \u003d parts[0].split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":321,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":322,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"Specify by date and time!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":323,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":324,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String[] deadlineInfo \u003d parts[1].split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":325,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":326,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (deadlineInfo.length !\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":327,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"Specify both date and time in the following manner : yyyy-mm-dd hh:mm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":328,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":329,"author":{"gitId":"Khaleelur-Rahman"},"content":"        byDate \u003d deadlineInfo[0];","lastModifiedDate":"2023-09-13"},{"lineNumber":330,"author":{"gitId":"Khaleelur-Rahman"},"content":"        endTime \u003d deadlineInfo[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":331,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":332,"author":{"gitId":"Khaleelur-Rahman"},"content":"        for (int i \u003d 1; i \u003c taskArray.length; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":333,"author":{"gitId":"Khaleelur-Rahman"},"content":"            task +\u003d taskArray[i] + \" \";","lastModifiedDate":"2023-08-30"},{"lineNumber":334,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":335,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return new String[]{task, byDate, endTime};","lastModifiedDate":"2023-09-13"},{"lineNumber":336,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":337,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":338,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Method to handle deadline task from file","lastModifiedDate":"2023-09-13"},{"lineNumber":339,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param input user input","lastModifiedDate":"2023-09-13"},{"lineNumber":340,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return string array consisting of the contents of deadline task","lastModifiedDate":"2023-09-13"},{"lineNumber":341,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException","lastModifiedDate":"2023-09-13"},{"lineNumber":342,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":343,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String[] handleDeadlineTaskFromFile(String input) throws DukeException {","lastModifiedDate":"2023-09-13"},{"lineNumber":344,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String task \u003d \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":345,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String byDate \u003d \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":346,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String endTime \u003d \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":347,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String [] parts \u003d input.split(\"\\\\(by: \");","lastModifiedDate":"2023-09-07"},{"lineNumber":348,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String[] taskArray \u003d parts[0].split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":349,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String[] deadlineInfo \u003d parts[1].split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":350,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":351,"author":{"gitId":"Khaleelur-Rahman"},"content":"        for (int i \u003d 1; i \u003c taskArray.length; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":352,"author":{"gitId":"Khaleelur-Rahman"},"content":"            task +\u003d taskArray[i] + \" \";","lastModifiedDate":"2023-08-30"},{"lineNumber":353,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":354,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":355,"author":{"gitId":"Khaleelur-Rahman"},"content":"        for (int i \u003d 0; i \u003c 3; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":356,"author":{"gitId":"Khaleelur-Rahman"},"content":"            byDate +\u003d deadlineInfo[i] + \" \";","lastModifiedDate":"2023-09-13"},{"lineNumber":357,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":358,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":359,"author":{"gitId":"Khaleelur-Rahman"},"content":"        byDate \u003d byDate.substring(0, 11);","lastModifiedDate":"2023-09-13"},{"lineNumber":360,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":361,"author":{"gitId":"Khaleelur-Rahman"},"content":"        endTime \u003d deadlineInfo[3];","lastModifiedDate":"2023-08-30"},{"lineNumber":362,"author":{"gitId":"Khaleelur-Rahman"},"content":"        endTime \u003d endTime.substring(0, endTime.length() - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":363,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":364,"author":{"gitId":"Khaleelur-Rahman"},"content":"        DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-08-30"},{"lineNumber":365,"author":{"gitId":"Khaleelur-Rahman"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-08-30"},{"lineNumber":366,"author":{"gitId":"Khaleelur-Rahman"},"content":"        LocalDate localDate \u003d LocalDate.parse(byDate, inputFormatter);","lastModifiedDate":"2023-09-13"},{"lineNumber":367,"author":{"gitId":"Khaleelur-Rahman"},"content":"        byDate \u003d localDate.format(outputFormatter);","lastModifiedDate":"2023-09-13"},{"lineNumber":368,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return new String[]{task, byDate, endTime};","lastModifiedDate":"2023-09-13"},{"lineNumber":369,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":370,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":371,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Adds an duke.Event task to the task tasks based on the provided input.","lastModifiedDate":"2023-09-13"},{"lineNumber":372,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param input The user input containing the task description and event timings.","lastModifiedDate":"2023-09-13"},{"lineNumber":373,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message indicating the success of adding the duke.Event task.","lastModifiedDate":"2023-09-13"},{"lineNumber":374,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If there\u0027s an issue with the input, task description, or event timings.","lastModifiedDate":"2023-09-13"},{"lineNumber":375,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":376,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String handleEventTask(String input, String from) throws DukeException, IOException {","lastModifiedDate":"2023-09-13"},{"lineNumber":377,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String[] result;","lastModifiedDate":"2023-09-13"},{"lineNumber":378,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (from.equals(\"user\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":379,"author":{"gitId":"Khaleelur-Rahman"},"content":"            result \u003d handleEventFromUser(input);","lastModifiedDate":"2023-09-13"},{"lineNumber":380,"author":{"gitId":"Khaleelur-Rahman"},"content":"        } else {","lastModifiedDate":"2023-09-13"},{"lineNumber":381,"author":{"gitId":"Khaleelur-Rahman"},"content":"            result \u003d handleEventFromFile(input);","lastModifiedDate":"2023-09-13"},{"lineNumber":382,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":383,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":384,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String task \u003d result[0];","lastModifiedDate":"2023-09-13"},{"lineNumber":385,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String startDate \u003d result[1];","lastModifiedDate":"2023-09-13"},{"lineNumber":386,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String endDate \u003d result[2];","lastModifiedDate":"2023-09-13"},{"lineNumber":387,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String startTime \u003d result[3];","lastModifiedDate":"2023-09-13"},{"lineNumber":388,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String endTime \u003d result[4];","lastModifiedDate":"2023-09-13"},{"lineNumber":389,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":390,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (task.equals(\"\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":391,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"No description specified la dei!! How to do work when no work is said!! \"","lastModifiedDate":"2023-09-05"},{"lineNumber":392,"author":{"gitId":"Khaleelur-Rahman"},"content":"                    + \"Enter again!\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":393,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":394,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":395,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (startDate.isEmpty() || endDate.isEmpty()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":396,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"event task must have both /from and /to times\\n\");","lastModifiedDate":"2023-09-13"},{"lineNumber":397,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":398,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":399,"author":{"gitId":"Khaleelur-Rahman"},"content":"        tasks.add(new Event(task, startDate, endDate, startTime + \":00\", endTime + \":00\", TaskType.EVENT));","lastModifiedDate":"2023-09-13"},{"lineNumber":400,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":401,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String str \u003d tasks.get(tasks.size() - 1).toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":402,"author":{"gitId":"Khaleelur-Rahman"},"content":"        assert !str.isEmpty() : \"Failed to add deadline task.\";","lastModifiedDate":"2023-09-12"},{"lineNumber":403,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String res \u003d \"Got it. I\u0027ve added this task :\\n\" + str + \"\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":404,"author":{"gitId":"Khaleelur-Rahman"},"content":"        res +\u003d getTaskLeft();","lastModifiedDate":"2023-08-30"},{"lineNumber":405,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":406,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return res;","lastModifiedDate":"2023-08-30"},{"lineNumber":407,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":408,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":409,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":410,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Method to handle event task from user","lastModifiedDate":"2023-09-13"},{"lineNumber":411,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param input user input","lastModifiedDate":"2023-09-13"},{"lineNumber":412,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return string array consisting of the contents of event task","lastModifiedDate":"2023-09-13"},{"lineNumber":413,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException","lastModifiedDate":"2023-09-13"},{"lineNumber":414,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":415,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String[] handleEventFromUser(String input) throws DukeException {","lastModifiedDate":"2023-09-13"},{"lineNumber":416,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String task \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":417,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String startDate \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":418,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String endDate \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":419,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String startTime \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":420,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String endTime \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":421,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String[] parts \u003d input.split(\"/from \");","lastModifiedDate":"2023-08-30"},{"lineNumber":422,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":423,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"Specify from and to date and time!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":424,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":425,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String[] taskArray \u003d parts[0].split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":426,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String[] taskInfo \u003d parts[1].split(\"/to \");","lastModifiedDate":"2023-08-30"},{"lineNumber":427,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":428,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (taskInfo.length !\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":429,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"Specify both date and time for /from and /to in the following manner \"","lastModifiedDate":"2023-09-05"},{"lineNumber":430,"author":{"gitId":"Khaleelur-Rahman"},"content":"                    + \": yyyy-mm-dd hh:mm\");","lastModifiedDate":"2023-09-05"},{"lineNumber":431,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":432,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":433,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String[] fromInfo \u003d taskInfo[0].split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":434,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String[] toInfo \u003d taskInfo[1].split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":435,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":436,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (fromInfo.length !\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":437,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"Specify both date and time for /from in the following manner \"","lastModifiedDate":"2023-09-05"},{"lineNumber":438,"author":{"gitId":"Khaleelur-Rahman"},"content":"                    + \": yyyy-mm-dd hh:mm\");","lastModifiedDate":"2023-09-05"},{"lineNumber":439,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":440,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":441,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (toInfo.length !\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":442,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"Specify both date and time for /to in the following manner \"","lastModifiedDate":"2023-09-05"},{"lineNumber":443,"author":{"gitId":"Khaleelur-Rahman"},"content":"                    + \": yyyy-mm-dd hh:mm\");","lastModifiedDate":"2023-09-05"},{"lineNumber":444,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":445,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":446,"author":{"gitId":"Khaleelur-Rahman"},"content":"        startDate \u003d fromInfo[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":447,"author":{"gitId":"Khaleelur-Rahman"},"content":"        startTime \u003d fromInfo[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":448,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":449,"author":{"gitId":"Khaleelur-Rahman"},"content":"        endDate \u003d toInfo[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":450,"author":{"gitId":"Khaleelur-Rahman"},"content":"        endTime \u003d toInfo[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":451,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":452,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":453,"author":{"gitId":"Khaleelur-Rahman"},"content":"        for (int i \u003d 1; i \u003c taskArray.length; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":454,"author":{"gitId":"Khaleelur-Rahman"},"content":"            task +\u003d taskArray[i] + \" \";","lastModifiedDate":"2023-08-30"},{"lineNumber":455,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":456,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return new String[] {task, startDate, endDate, startTime, endTime};","lastModifiedDate":"2023-09-13"},{"lineNumber":457,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":458,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":459,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":460,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Method to handle event task from file","lastModifiedDate":"2023-09-13"},{"lineNumber":461,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param input user input","lastModifiedDate":"2023-09-13"},{"lineNumber":462,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return string array consisting of the contents of event task","lastModifiedDate":"2023-09-13"},{"lineNumber":463,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException","lastModifiedDate":"2023-09-13"},{"lineNumber":464,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":465,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String[] handleEventFromFile(String input) {","lastModifiedDate":"2023-09-13"},{"lineNumber":466,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String task \u003d \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":467,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String startDate \u003d \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":468,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String endDate \u003d \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":469,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String startTime \u003d \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":470,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String endTime \u003d \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":471,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String[] parts \u003d input.split(\"\\\\(from: \");","lastModifiedDate":"2023-09-07"},{"lineNumber":472,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String[] taskArray \u003d parts[0].split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":473,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String[] taskInfo \u003d parts[1].split(\"to: \");","lastModifiedDate":"2023-08-30"},{"lineNumber":474,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":475,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String[] fromInfo \u003d taskInfo[0].split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":476,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String[] toInfo \u003d taskInfo[1].split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":477,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":478,"author":{"gitId":"Khaleelur-Rahman"},"content":"        for (int i \u003d 1; i \u003c taskArray.length; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":479,"author":{"gitId":"Khaleelur-Rahman"},"content":"            task +\u003d taskArray[i] + \" \";","lastModifiedDate":"2023-08-30"},{"lineNumber":480,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":481,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":482,"author":{"gitId":"Khaleelur-Rahman"},"content":"        for (int i \u003d 0; i \u003c 3; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":483,"author":{"gitId":"Khaleelur-Rahman"},"content":"            startDate +\u003d fromInfo[i] + \" \";","lastModifiedDate":"2023-08-30"},{"lineNumber":484,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":485,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":486,"author":{"gitId":"Khaleelur-Rahman"},"content":"        for (int i \u003d 0; i \u003c 3; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":487,"author":{"gitId":"Khaleelur-Rahman"},"content":"            endDate +\u003d toInfo[i] + \" \";","lastModifiedDate":"2023-08-30"},{"lineNumber":488,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":489,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":490,"author":{"gitId":"Khaleelur-Rahman"},"content":"        startDate \u003d startDate.substring(0, 11);","lastModifiedDate":"2023-08-30"},{"lineNumber":491,"author":{"gitId":"Khaleelur-Rahman"},"content":"        endDate \u003d endDate.substring(0, 11);","lastModifiedDate":"2023-08-30"},{"lineNumber":492,"author":{"gitId":"Khaleelur-Rahman"},"content":"        startTime \u003d fromInfo[3];","lastModifiedDate":"2023-08-30"},{"lineNumber":493,"author":{"gitId":"Khaleelur-Rahman"},"content":"        endTime \u003d toInfo[3];","lastModifiedDate":"2023-08-30"},{"lineNumber":494,"author":{"gitId":"Khaleelur-Rahman"},"content":"        endTime \u003d endTime.substring(0, endTime.length() - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":495,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":496,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return new String[]{task, startDate, endDate, startTime, endTime};","lastModifiedDate":"2023-09-13"},{"lineNumber":497,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":498,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":499,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":500,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * method to handle find operation","lastModifiedDate":"2023-09-05"},{"lineNumber":501,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param input user\u0027s input","lastModifiedDate":"2023-09-05"},{"lineNumber":502,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return string representation of operayion","lastModifiedDate":"2023-09-05"},{"lineNumber":503,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException","lastModifiedDate":"2023-09-05"},{"lineNumber":504,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":505,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":506,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String handleFindTask(String input) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":507,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String results \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":508,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2023-09-05"},{"lineNumber":509,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":510,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":511,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"Specify keyword to search for!\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":512,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":513,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":514,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (parts.length \u003e 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":515,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"Enter only one keyword to search!\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":516,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":517,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":518,"author":{"gitId":"Khaleelur-Rahman"},"content":"        int resultCounter \u003d 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":519,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String keyword \u003d parts[1];","lastModifiedDate":"2023-09-13"},{"lineNumber":520,"author":{"gitId":"Khaleelur-Rahman"},"content":"        boolean[] addedTaskToResults \u003d new boolean[tasks.size()];","lastModifiedDate":"2023-09-13"},{"lineNumber":521,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":522,"author":{"gitId":"Khaleelur-Rahman"},"content":"        for (int startIndex \u003d 0; startIndex \u003c keyword.length(); startIndex++) {","lastModifiedDate":"2023-09-13"},{"lineNumber":523,"author":{"gitId":"Khaleelur-Rahman"},"content":"            for (int endIndex \u003d startIndex + 1; endIndex \u003c keyword.length(); endIndex++) {","lastModifiedDate":"2023-09-13"},{"lineNumber":524,"author":{"gitId":"Khaleelur-Rahman"},"content":"                String keywordToSearch \u003d keyword.substring(startIndex, endIndex + 1);","lastModifiedDate":"2023-09-13"},{"lineNumber":525,"author":{"gitId":"Khaleelur-Rahman"},"content":"                results +\u003d searchForKeyword(keywordToSearch, addedTaskToResults, resultCounter);","lastModifiedDate":"2023-09-13"},{"lineNumber":526,"author":{"gitId":"Khaleelur-Rahman"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":527,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":528,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":529,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (results.equals(\"\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":530,"author":{"gitId":"Khaleelur-Rahman"},"content":"            return \"No results found!\";","lastModifiedDate":"2023-08-30"},{"lineNumber":531,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":532,"author":{"gitId":"Khaleelur-Rahman"},"content":"        assert !results.isEmpty() : \"No results found.\";","lastModifiedDate":"2023-09-12"},{"lineNumber":533,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return results;","lastModifiedDate":"2023-08-30"},{"lineNumber":534,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":535,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":536,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String searchForKeyword(String keywordToSearch, boolean[] addedTaskToResults, int resultCounter) {","lastModifiedDate":"2023-09-13"},{"lineNumber":537,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String res \u003d \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":538,"author":{"gitId":"Khaleelur-Rahman"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-13"},{"lineNumber":539,"author":{"gitId":"Khaleelur-Rahman"},"content":"            if (tasks.get(i).toString().contains(keywordToSearch) \u0026\u0026 !addedTaskToResults[i]) {","lastModifiedDate":"2023-09-13"},{"lineNumber":540,"author":{"gitId":"Khaleelur-Rahman"},"content":"                res \u003d resultCounter + \".\" + tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":541,"author":{"gitId":"Khaleelur-Rahman"},"content":"                resultCounter++;","lastModifiedDate":"2023-09-13"},{"lineNumber":542,"author":{"gitId":"Khaleelur-Rahman"},"content":"                addedTaskToResults[i] \u003d true;","lastModifiedDate":"2023-09-13"},{"lineNumber":543,"author":{"gitId":"Khaleelur-Rahman"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":544,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":545,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return res;","lastModifiedDate":"2023-09-13"},{"lineNumber":546,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":547,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":548,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-08-30"},{"lineNumber":549,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return this.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":550,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":551,"author":{"gitId":"Khaleelur-Rahman"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Khaleelur-Rahman":551}},{"path":"src/main/java/duke/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":" * Enumeration for task types","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"Khaleelur-Rahman"},"content":"public enum TaskType {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"Khaleelur-Rahman"},"content":"    TODO, DEADLINE, EVENT;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"Khaleelur-Rahman"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Khaleelur-Rahman":8}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":" * Class to hanlde todo tasks","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"Khaleelur-Rahman"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public ToDo(String list, TaskType type) {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"Khaleelur-Rahman"},"content":"        super(list, type);","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Marks the task as completed and returns a message indicating the task\u0027s new status.","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message indicating the successful marking of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If the task has already been marked as done.","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String setMarked() throws DukeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"Khaleelur-Rahman"},"content":"        super.setMarked();","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + this;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Marks the task as not completed and returns a message indicating the task\u0027s new status.","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message indicating the successful unmarking of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If the task has already been marked as not done.","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String setUnmarked() throws DukeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"Khaleelur-Rahman"},"content":"        super.setUnmarked();","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + this;","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"Khaleelur-Rahman"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Khaleelur-Rahman":39}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"package duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":" * Class to take care of UI","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"Khaleelur-Rahman"},"content":"public class Ui {","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"Khaleelur-Rahman"},"content":"    private String greetMessage \u003d \"Hello! I\u0027m Khaleelur!\\n\" + \"What can I do for you?\\n \";","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"Khaleelur-Rahman"},"content":"    private String exitMessage \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Displays a greeting message.","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String greet() {","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return greetMessage;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Displays an exit message.","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String exit() {","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return exitMessage;","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"Khaleelur-Rahman"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"Khaleelur-Rahman":22}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Khaleelur-Rahman"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Khaleelur-Rahman"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"300.0\" style\u003d\"-fx-border-color: silver; -fx-border-width: 3; -fx-border-radius: 10; -fx-font-family: Verdana; -fx-font-size: 14;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"Khaleelur-Rahman"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Khaleelur-Rahman"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" maxWidth\u003d\"800.0\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"Khaleelur-Rahman"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"Khaleelur-Rahman"},"content":"                \u003cInsets bottom\u003d\"15.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"Khaleelur-Rahman"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Khaleelur-Rahman"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"Khaleelur-Rahman"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"Khaleelur-Rahman"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"Khaleelur-Rahman"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"Khaleelur-Rahman"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"Khaleelur-Rahman"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"Khaleelur-Rahman"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"Khaleelur-Rahman":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"\u003c?import javafx.scene.Cursor?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Khaleelur-Rahman"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Khaleelur-Rahman"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Khaleelur-Rahman"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Khaleelur-Rahman"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"Khaleelur-Rahman"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"Khaleelur-Rahman"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"Khaleelur-Rahman"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Enter message here\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Khaleelur-Rahman"},"content":"            \u003cfont\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"Khaleelur-Rahman"},"content":"                \u003cFont name\u003d\"System Bold\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Khaleelur-Rahman"},"content":"            \u003c/font\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"Khaleelur-Rahman"},"content":"        \u003c/TextField\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"Khaleelur-Rahman"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"315.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"85.0\" text\u003d\"Send\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"Khaleelur-Rahman"},"content":"            \u003ccursor\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"Khaleelur-Rahman"},"content":"                \u003cCursor fx:constant\u003d\"DEFAULT\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"Khaleelur-Rahman"},"content":"            \u003c/cursor\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"Khaleelur-Rahman"},"content":"        \u003c/Button\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"Khaleelur-Rahman"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"Khaleelur-Rahman"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"Khaleelur-Rahman"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"Khaleelur-Rahman"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"Khaleelur-Rahman"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"Khaleelur-Rahman"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"Khaleelur-Rahman"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"Khaleelur-Rahman":29}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Khaleelur-Rahman"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public void markTask_withNegativeIndex() {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Khaleelur-Rahman"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Khaleelur-Rahman"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Khaleelur-Rahman"},"content":"            taskList.handleTodoTask(\"todo borrow\");","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"Khaleelur-Rahman"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Khaleelur-Rahman"},"content":"            assertEquals(\"Enter mark command with positive index lesser than 2\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public void deadlineTask_noBy_exception() {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Khaleelur-Rahman"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Khaleelur-Rahman"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Khaleelur-Rahman"},"content":"            taskList.handleDeadlineTask(\"deadline borrow\", \"user\");","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Khaleelur-Rahman"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Khaleelur-Rahman"},"content":"            assertEquals(\"Specify by date and time!\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public void eventTask_noDescription_exception() {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Khaleelur-Rahman"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Khaleelur-Rahman"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Khaleelur-Rahman"},"content":"            taskList.handleEventTask(\"event /from 2022-10-12 20:00 /to 2022-11-10 00:00\", \"user\");","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Khaleelur-Rahman"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Khaleelur-Rahman"},"content":"            assertEquals(\"No description specified la dei!! How to do work when no work is said!! \"","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"Khaleelur-Rahman"},"content":"                    + \"Enter again!\\n\", e.getMessage());","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"Khaleelur-Rahman"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Khaleelur-Rahman":42}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"Khaleelur-Rahman"},"content":"public class TodoTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public void toDo_toString_success() {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Khaleelur-Rahman"},"content":"        ToDo todo \u003d new ToDo(\"borrow book\", TaskType.TODO);","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Khaleelur-Rahman"},"content":"        assertEquals(\"[T][ ] borrow book\", todo.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public void toDo_setMarkAgain_exception() throws DukeException{","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Khaleelur-Rahman"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Khaleelur-Rahman"},"content":"            ToDo todo \u003d new ToDo(\"borrow book\", TaskType.TODO);","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Khaleelur-Rahman"},"content":"            todo.setMarked();","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Khaleelur-Rahman"},"content":"            todo.setMarked();","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Khaleelur-Rahman"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Khaleelur-Rahman"},"content":"            assertEquals(\"This task has already been marked as done!\\n\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public void toDo_setUnMarkAgain_exception() throws DukeException{","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Khaleelur-Rahman"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Khaleelur-Rahman"},"content":"            ToDo todo \u003d new ToDo(\"borrow book\", TaskType.TODO);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Khaleelur-Rahman"},"content":"            todo.setUnmarked();","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Khaleelur-Rahman"},"content":"            todo.setUnmarked();","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Khaleelur-Rahman"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Khaleelur-Rahman"},"content":"            assertEquals(\"This task has already been marked as not done!\\n\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Khaleelur-Rahman"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Khaleelur-Rahman":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"todo play soccer","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"event NUSMS WT /from 5pm /to 11pm","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"mark 2","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Khaleelur-Rahman":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Khaleelur-Rahman"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Khaleelur-Rahman":1,"-":20}}]
