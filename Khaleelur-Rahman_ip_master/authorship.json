[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Khaleelur-Rahman"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Khaleelur-Rahman":2,"-":22}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Khaleelur-Rahman"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Khaleelur-Rahman"},"content":"    protected LocalDate deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Khaleelur-Rahman"},"content":"    protected LocalTime endTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public Deadline (String list, String deadline, String endTime, TaskType type) {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Khaleelur-Rahman"},"content":"        super(list, type);","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"Khaleelur-Rahman"},"content":"        this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Khaleelur-Rahman"},"content":"        this.endTime \u003d LocalTime.parse(endTime);","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Marks the task as completed and returns a message indicating the task\u0027s new status.","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message indicating the successful marking of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If the task has already been marked as done.","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String setMarked() throws DukeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"Khaleelur-Rahman"},"content":"        super.setMarked();","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Marks the task as not completed and returns a message indicating the task\u0027s new status.","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message indicating the successful unmarking of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If the task has already been marked as not done.","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String setUnmarked() throws DukeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"Khaleelur-Rahman"},"content":"        super.setUnmarked();","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return super.toString() + \"(by: \" + this.deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" + this.endTime + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"Khaleelur-Rahman"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Khaleelur-Rahman":46}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.io.*;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"Khaleelur-Rahman"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Khaleelur-Rahman"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Khaleelur-Rahman"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Khaleelur-Rahman"},"content":"    private Parser parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Khaleelur-Rahman"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Khaleelur-Rahman"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Khaleelur-Rahman"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Khaleelur-Rahman"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"Khaleelur-Rahman"},"content":"            tasks \u003d new TaskList(storage.handleReadAllTasksFromFile());","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Khaleelur-Rahman"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Khaleelur-Rahman"},"content":"            ui.showLoadingError(e);","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Khaleelur-Rahman"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public void run(){","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Khaleelur-Rahman"},"content":"        ui.greet();","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Khaleelur-Rahman"},"content":"        Scanner obj \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Khaleelur-Rahman"},"content":"        while (true) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Khaleelur-Rahman"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Khaleelur-Rahman"},"content":"                String userInput \u003d obj.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Khaleelur-Rahman"},"content":"                if (userInput.equals(\"bye\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Khaleelur-Rahman"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Khaleelur-Rahman"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Khaleelur-Rahman"},"content":"                String[] commandType \u003d parser.handleUserInput(userInput);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Khaleelur-Rahman"},"content":"                ui.print(handleCommand(commandType[0], commandType[1]));","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Khaleelur-Rahman"},"content":"                storage.handleChangesInFile(tasks.getTasks());","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"Khaleelur-Rahman"},"content":"            } catch (DukeException | IOException | InvalidInputExpression e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Khaleelur-Rahman"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Khaleelur-Rahman"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"Khaleelur-Rahman"},"content":"        ui.exit();","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String handleCommand(String command, String input) throws DukeException, IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Khaleelur-Rahman"},"content":"        switch (command) {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Khaleelur-Rahman"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"Khaleelur-Rahman"},"content":"            return tasks.markTask(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"Khaleelur-Rahman"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"Khaleelur-Rahman"},"content":"            return tasks.unmarkTask(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"Khaleelur-Rahman"},"content":"        case \"list\":","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"Khaleelur-Rahman"},"content":"            return tasks.getAllToDo();","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"Khaleelur-Rahman"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"Khaleelur-Rahman"},"content":"            return tasks.handleTodoTask(input, \"user\");","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"Khaleelur-Rahman"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"Khaleelur-Rahman"},"content":"            return tasks.handleDeadlineTask(input, \"user\");","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"Khaleelur-Rahman"},"content":"        case \"event\":","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"Khaleelur-Rahman"},"content":"            return tasks.handleEventTask(input, \"user\");","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"Khaleelur-Rahman"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"Khaleelur-Rahman"},"content":"            return tasks.deleteTask(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"Khaleelur-Rahman"},"content":"        case \"find\":","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"Khaleelur-Rahman"},"content":"            return tasks.handleFindTask(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"Khaleelur-Rahman"},"content":"        default:","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":66,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"Khaleelur-Rahman"},"content":"        new Duke(\"./src/data/duke.txt\").run();","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Khaleelur-Rahman":69,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public DukeException(String input) {","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":"        super(input);","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Khaleelur-Rahman"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Khaleelur-Rahman":7}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Khaleelur-Rahman"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Khaleelur-Rahman"},"content":"    protected LocalDate start;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Khaleelur-Rahman"},"content":"    protected LocalDate end;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Khaleelur-Rahman"},"content":"    protected LocalTime startTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Khaleelur-Rahman"},"content":"    protected LocalTime endTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public Event(String list, String start, String end, String startTime, String endTime, TaskType type) {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Khaleelur-Rahman"},"content":"        super(list, type);","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"Khaleelur-Rahman"},"content":"        this.start \u003d LocalDate.parse(start);","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Khaleelur-Rahman"},"content":"        this.end \u003d LocalDate.parse(end);","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Khaleelur-Rahman"},"content":"        this.startTime \u003d LocalTime.parse(startTime);","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Khaleelur-Rahman"},"content":"        this.endTime \u003d LocalTime.parse(endTime);","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Marks the task as completed and returns a message indicating the task\u0027s new status.","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message indicating the successful marking of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If the task has already been marked as done.","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String setMarked() throws DukeException{","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"Khaleelur-Rahman"},"content":"        super.setMarked();","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Marks the task as not completed and returns a message indicating the task\u0027s new status.","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message indicating the successful unmarking of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If the task has already been marked as not done.","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String setUnmarked() throws DukeException{","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"Khaleelur-Rahman"},"content":"        super.setUnmarked();","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return super.toString() + \"(from: \" + this.start.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" + this.startTime + \" to: \" + this.end.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" + this.endTime + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"Khaleelur-Rahman"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Khaleelur-Rahman":53}},{"path":"src/main/java/duke/InvalidInputExpression.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"public class InvalidInputExpression extends Exception {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public InvalidInputExpression(String input) {","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":"        super(input);","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Khaleelur-Rahman"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Khaleelur-Rahman":7}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Handles user input and determines the relevant command and input for further processing.","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Parses the user input and extracts the command type and associated input.","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Supports commands such as \"mark,\" \"unmark,\" \"delete,\" \"list,\" \"todo,\" \"deadline,\" and \"event.\"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param userInput The input string entered by the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return An array containing the command type and associated input.","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws InvalidInputExpression If the user input does not match any supported command.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String[] handleUserInput(String userInput) throws InvalidInputExpression {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Khaleelur-Rahman"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Khaleelur-Rahman"},"content":"            if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Khaleelur-Rahman"},"content":"                return new String[]{\"mark\", userInput};","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Khaleelur-Rahman"},"content":"            } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Khaleelur-Rahman"},"content":"                return new String[]{\"unmark\", userInput};","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Khaleelur-Rahman"},"content":"            } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Khaleelur-Rahman"},"content":"                return new String[]{\"delete\", userInput};","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Khaleelur-Rahman"},"content":"            } else if (userInput.startsWith(\"list\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Khaleelur-Rahman"},"content":"                return new String[]{\"list\", userInput};","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Khaleelur-Rahman"},"content":"            } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Khaleelur-Rahman"},"content":"                return new String[]{\"todo\", userInput};","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Khaleelur-Rahman"},"content":"            } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Khaleelur-Rahman"},"content":"                return new String[]{\"deadline\", userInput};","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Khaleelur-Rahman"},"content":"            } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Khaleelur-Rahman"},"content":"                return new String[]{\"event\", userInput};","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Khaleelur-Rahman"},"content":"            } else if (userInput.startsWith(\"find\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Khaleelur-Rahman"},"content":"                return new String[]{\"find\", userInput};","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Khaleelur-Rahman"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Khaleelur-Rahman"},"content":"                throw new InvalidInputExpression(\"Invalid input!! Specify commands as list, mark, unmark, or deadline, event and todo followed by the task please la dei!\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Khaleelur-Rahman"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Khaleelur-Rahman"},"content":"        } catch (InvalidInputExpression e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Khaleelur-Rahman"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return new String[]{\"\"};","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Khaleelur-Rahman"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Khaleelur-Rahman":41}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.io.*;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Khaleelur-Rahman"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Khaleelur-Rahman"},"content":"    String filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Khaleelur-Rahman"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Reads tasks from a file and processes them based on their types.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * The tasks are parsed and passed to respective handler methods.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Handles Todo, duke.Deadline, and duke.Event tasks stored in the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String handleReadAllTasksFromFile() {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Khaleelur-Rahman"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Khaleelur-Rahman"},"content":"            File obj \u003d new File(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Khaleelur-Rahman"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Khaleelur-Rahman"},"content":"            System.out.println(\"Please create a folder at the specified folder : src/data/duke.txt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String tasks \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Khaleelur-Rahman"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Khaleelur-Rahman"},"content":"            File obj \u003d new File(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Khaleelur-Rahman"},"content":"            Scanner reader \u003d new Scanner(obj);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Khaleelur-Rahman"},"content":"            while (reader.hasNextLine()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Khaleelur-Rahman"},"content":"                tasks +\u003d reader.nextLine() + \"\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Khaleelur-Rahman"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Khaleelur-Rahman"},"content":"            reader.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Khaleelur-Rahman"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Khaleelur-Rahman"},"content":"            System.out.println(\"Please create a folder at the specified folder : src/data/duke.txt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Writes changes in the task list to the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Each task is written as a formatted string in the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public void handleChangesInFile(ArrayList\u003cTask\u003e list) throws IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"Khaleelur-Rahman"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"Khaleelur-Rahman"},"content":"            Writer writer \u003d new FileWriter(filePath, false);","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"Khaleelur-Rahman"},"content":"            for(int i \u003d 0;i \u003c list.size();i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"Khaleelur-Rahman"},"content":"                writer.append(\"\" + (i+1)).append(\".\").append(list.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"Khaleelur-Rahman"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"Khaleelur-Rahman"},"content":"            writer.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"Khaleelur-Rahman"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new IOException(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"Khaleelur-Rahman"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Khaleelur-Rahman":61}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":"public class Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"Khaleelur-Rahman"},"content":"    String list;","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"Khaleelur-Rahman"},"content":"    boolean isCompleted;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Khaleelur-Rahman"},"content":"    TaskType type;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public Task(String list, TaskType type) {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"Khaleelur-Rahman"},"content":"        this.list \u003d list;","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"Khaleelur-Rahman"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Marks the task as isCompleted and returns a message indicating the task\u0027s new status.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message indicating the successful marking of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If the task has already been marked as done.","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String setMarked() throws DukeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if(this.isCompleted) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"This task has already been marked as done!\\n\");","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"Khaleelur-Rahman"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return \"\";","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Marks the task as not isCompleted and returns a message indicating the task\u0027s new status.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message indicating the successful unmarking of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If the task has already been marked as not done.","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String setUnmarked() throws DukeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if(!this.isCompleted) {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"This task has already been marked as not done!\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"Khaleelur-Rahman"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return \"\";","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":43,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String typeSymbol \u003d \"\";","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"Khaleelur-Rahman"},"content":"        switch (type) {","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"Khaleelur-Rahman"},"content":"         case TODO:","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"Khaleelur-Rahman"},"content":"             typeSymbol \u003d \"[T]\";","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"Khaleelur-Rahman"},"content":"             break;","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"Khaleelur-Rahman"},"content":"         case EVENT:","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"Khaleelur-Rahman"},"content":"             typeSymbol \u003d \"[E]\";","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"Khaleelur-Rahman"},"content":"             break;","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"Khaleelur-Rahman"},"content":"         case DEADLINE:","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"Khaleelur-Rahman"},"content":"             typeSymbol \u003d \"[D]\";","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"Khaleelur-Rahman"},"content":"             break;","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"Khaleelur-Rahman"},"content":"         default:","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"Khaleelur-Rahman"},"content":"             break;","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return typeSymbol + (this.isCompleted ? \"[X] \" : \"[ ] \") + this.list;","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":61,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"Khaleelur-Rahman"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"Khaleelur-Rahman":62}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Khaleelur-Rahman"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Khaleelur-Rahman"},"content":"    ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public TaskList(String tasksFromFile) throws DukeException, IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Khaleelur-Rahman"},"content":"        convertTasksToList(tasksFromFile);","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Khaleelur-Rahman"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Converts tasks read from a file to a list of tasks and processes each task.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Reads task strings from the provided input, parses them, and handles them based on their types.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param tasksFromFile The string containing tasks read from a file.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If there is an error while processing a task.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws IOException If there is an I/O error during processing.","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public void convertTasksToList(String tasksFromFile) throws DukeException, IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Khaleelur-Rahman"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Khaleelur-Rahman"},"content":"        int j \u003d 0;","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Khaleelur-Rahman"},"content":"        while (i \u003c tasksFromFile.length()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Khaleelur-Rahman"},"content":"            String input \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Khaleelur-Rahman"},"content":"            for (; tasksFromFile.charAt(j) !\u003d \u0027\\n\u0027; j++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Khaleelur-Rahman"},"content":"                input +\u003d tasksFromFile.charAt(j);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Khaleelur-Rahman"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Khaleelur-Rahman"},"content":"            String taskType \u003d input.substring(3, 4);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"Khaleelur-Rahman"},"content":"            String taskDescription \u003d input.substring(9);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Khaleelur-Rahman"},"content":"            switch (taskType) {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Khaleelur-Rahman"},"content":"            case \"T\":","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"Khaleelur-Rahman"},"content":"                handleTodoTask(\"todo \" + taskDescription, \"file\");","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"Khaleelur-Rahman"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"Khaleelur-Rahman"},"content":"            case \"D\":","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Khaleelur-Rahman"},"content":"                handleDeadlineTask(\"deadline \" + taskDescription, \"file\");","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Khaleelur-Rahman"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Khaleelur-Rahman"},"content":"            case \"E\":","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Khaleelur-Rahman"},"content":"                handleEventTask(\"event \" + taskDescription, \"file\");","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"Khaleelur-Rahman"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"Khaleelur-Rahman"},"content":"            default:","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"Khaleelur-Rahman"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"Khaleelur-Rahman"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"Khaleelur-Rahman"},"content":"            i \u003d j;","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"Khaleelur-Rahman"},"content":"            j++;","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"Khaleelur-Rahman"},"content":"            i++;","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Retrieves a formatted string showing the number of tasks left in the tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A string indicating the number of tasks remaining.","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String getTaskLeft() {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return \"Now you have \" + tasks.size() + (tasks.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the tasks.\";","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Retrieves a formatted string containing all tasks in the tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A string tasksing all tasks in the task tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If there are no tasks in the tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String getAllToDo() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"Khaleelur-Rahman"},"content":"        StringBuilder res \u003d new StringBuilder();","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"Oh no! No tasks for now! Add more tasks :)\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"Khaleelur-Rahman"},"content":"        res.append(\"Here are the tasks in your tasks:\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"Khaleelur-Rahman"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"Khaleelur-Rahman"},"content":"            res.append(i + 1).append(\".\")","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"Khaleelur-Rahman"},"content":"                    .append(tasks.get(i).toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"Khaleelur-Rahman"},"content":"            if (i !\u003d tasks.size() - 1) res.append(\"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return res.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Retrieves a formatted string indicating the success of marking a task.","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param input  The input by the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message confirming the action\u0027s success.","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If there\u0027s an issue with the task tasks or input.","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String markTask(String input) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String res \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"Khaleelur-Rahman"},"content":"        //No index to mark","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"Specify index to mark task!\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (parts.length \u003e 2 ) {","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"Enter mark command properly!\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"Khaleelur-Rahman"},"content":"        //No task to mark","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"No tasks! Add more tasks to mark!\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"Khaleelur-Rahman"},"content":"            String sec \u003d parts[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"Khaleelur-Rahman"},"content":"            //index is not valid integer","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"Khaleelur-Rahman"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"Khaleelur-Rahman"},"content":"                int index \u003d Integer.parseInt(sec);","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"Khaleelur-Rahman"},"content":"                //index entered is more than totalTodos","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"Khaleelur-Rahman"},"content":"                if (index \u003e tasks.size() || index \u003c\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"Khaleelur-Rahman"},"content":"                    throw new DukeException(\"Enter mark command with positive index lesser than \" + (tasks.size() + 1) + \"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"Khaleelur-Rahman"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"Khaleelur-Rahman"},"content":"                res \u003d tasks.get(index - 1).setMarked();","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"Khaleelur-Rahman"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"Khaleelur-Rahman"},"content":"                throw new DukeException(\"Enter a valid positive integer after your markcommand!\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"Khaleelur-Rahman"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return res;","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Retrieves a formatted string indicating the success of unmarking a task.","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param input  The input by the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message confirming the action\u0027s success.","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If there\u0027s an issue with the task tasks or input.","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String unmarkTask(String input) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String res \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":153,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":154,"author":{"gitId":"Khaleelur-Rahman"},"content":"        //No index to mark","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"Specify index to unmark task!\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (parts.length \u003e 2 ) {","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"Enter unmark command properly!\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"Khaleelur-Rahman"},"content":"        //No task to mark","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"No tasks! Add more tasks to unmark!\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":168,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":169,"author":{"gitId":"Khaleelur-Rahman"},"content":"            String sec \u003d parts[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":170,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":171,"author":{"gitId":"Khaleelur-Rahman"},"content":"            //index is not valid integer","lastModifiedDate":"2023-08-30"},{"lineNumber":172,"author":{"gitId":"Khaleelur-Rahman"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":173,"author":{"gitId":"Khaleelur-Rahman"},"content":"                int index \u003d Integer.parseInt(sec);","lastModifiedDate":"2023-08-30"},{"lineNumber":174,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":175,"author":{"gitId":"Khaleelur-Rahman"},"content":"                //index entered is more than totalTodos","lastModifiedDate":"2023-08-30"},{"lineNumber":176,"author":{"gitId":"Khaleelur-Rahman"},"content":"                if (index \u003e tasks.size() || index \u003c\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":177,"author":{"gitId":"Khaleelur-Rahman"},"content":"                    throw new DukeException(\"Enter umark command with positive index lesser than \" + (tasks.size() + 1) + \"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":178,"author":{"gitId":"Khaleelur-Rahman"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":179,"author":{"gitId":"Khaleelur-Rahman"},"content":"                res \u003d tasks.get(index - 1).setUnmarked();","lastModifiedDate":"2023-08-30"},{"lineNumber":180,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":181,"author":{"gitId":"Khaleelur-Rahman"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":182,"author":{"gitId":"Khaleelur-Rahman"},"content":"                throw new DukeException(\"Enter a valid positive integer after your unmark command!\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":183,"author":{"gitId":"Khaleelur-Rahman"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":184,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":185,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return res;","lastModifiedDate":"2023-08-30"},{"lineNumber":186,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":187,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":188,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":189,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":190,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Deletes a task from the task tasks based on the provided index.","lastModifiedDate":"2023-08-30"},{"lineNumber":191,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":192,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param input The input of the task to be deleted.","lastModifiedDate":"2023-08-30"},{"lineNumber":193,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message indicating the success of the deletion.","lastModifiedDate":"2023-08-30"},{"lineNumber":194,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If there\u0027s an issue with the task tasks or input.","lastModifiedDate":"2023-08-30"},{"lineNumber":195,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":196,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String deleteTask(String input) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":197,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":198,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":199,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":200,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String res \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":201,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":202,"author":{"gitId":"Khaleelur-Rahman"},"content":"        //No index to delete","lastModifiedDate":"2023-08-30"},{"lineNumber":203,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (input.equals(\"delete\") \u0026\u0026 parts.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":204,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"Specify index to delete task!\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":205,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":206,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":207,"author":{"gitId":"Khaleelur-Rahman"},"content":"        //No task to delete","lastModifiedDate":"2023-08-30"},{"lineNumber":208,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":209,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"No tasks to delete! Add more tasks to delete!\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":210,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":211,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":212,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if ((parts[0].equals(\"delete\")) \u0026\u0026 parts.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":213,"author":{"gitId":"Khaleelur-Rahman"},"content":"            String sec \u003d parts[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":214,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":215,"author":{"gitId":"Khaleelur-Rahman"},"content":"            //index is not valid integer","lastModifiedDate":"2023-08-30"},{"lineNumber":216,"author":{"gitId":"Khaleelur-Rahman"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":217,"author":{"gitId":"Khaleelur-Rahman"},"content":"                int index \u003d Integer.parseInt(sec);","lastModifiedDate":"2023-08-30"},{"lineNumber":218,"author":{"gitId":"Khaleelur-Rahman"},"content":"                String removedTask \u003d tasks.get(index - 1).toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":219,"author":{"gitId":"Khaleelur-Rahman"},"content":"                tasks.remove(index - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":220,"author":{"gitId":"Khaleelur-Rahman"},"content":"                res \u003d \"Noted. I\u0027ve removed this task: \\n \" + \"  \" + removedTask + \"\\n\" + getTaskLeft();","lastModifiedDate":"2023-08-30"},{"lineNumber":221,"author":{"gitId":"Khaleelur-Rahman"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":222,"author":{"gitId":"Khaleelur-Rahman"},"content":"                throw new DukeException(\"Enter a valid positive integer after your mark/unmark command!\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":223,"author":{"gitId":"Khaleelur-Rahman"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":224,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":225,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":226,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return res;","lastModifiedDate":"2023-08-30"},{"lineNumber":227,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":228,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":229,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":230,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Adds a duke.ToDo task to the task tasks based on the provided input.","lastModifiedDate":"2023-08-30"},{"lineNumber":231,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":232,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param input The user input containing the task description.","lastModifiedDate":"2023-08-30"},{"lineNumber":233,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message indicating the success of adding the duke.ToDo task.","lastModifiedDate":"2023-08-30"},{"lineNumber":234,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If there\u0027s an issue with the input or task description.","lastModifiedDate":"2023-08-30"},{"lineNumber":235,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":236,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String handleTodoTask(String input, String from) throws DukeException, IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":237,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String task \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":238,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":239,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":240,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":241,"author":{"gitId":"Khaleelur-Rahman"},"content":"        for (int i \u003d 1; i \u003c parts.length; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":242,"author":{"gitId":"Khaleelur-Rahman"},"content":"            task +\u003d parts[i] + \" \";","lastModifiedDate":"2023-08-30"},{"lineNumber":243,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":244,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":245,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (task.equals(\"\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":246,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"No description specified la dei!! How to do work when no work is said?! Enter again!\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":247,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":248,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":249,"author":{"gitId":"Khaleelur-Rahman"},"content":"        tasks.add(new ToDo(task, TaskType.TODO));","lastModifiedDate":"2023-08-30"},{"lineNumber":250,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":251,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String str \u003d tasks.get(tasks.size() - 1).toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":252,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String res \u003d \"Got it. I\u0027ve added this task :\\n\" + str + \"\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":253,"author":{"gitId":"Khaleelur-Rahman"},"content":"        res +\u003d getTaskLeft();","lastModifiedDate":"2023-08-30"},{"lineNumber":254,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":255,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":256,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return res;","lastModifiedDate":"2023-08-30"},{"lineNumber":257,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":258,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":259,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":260,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Adds a duke.Deadline task to the task tasks based on the provided input.","lastModifiedDate":"2023-08-30"},{"lineNumber":261,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":262,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param input The user input containing the task description and deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":263,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message indicating the success of adding the duke.Deadline task.","lastModifiedDate":"2023-08-30"},{"lineNumber":264,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If there\u0027s an issue with the input, task description, or deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":265,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":266,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String handleDeadlineTask(String input,String from) throws DukeException, IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":267,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String task \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":268,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String by \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":269,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String endTime \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":270,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":271,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (from.equals(\"user\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":272,"author":{"gitId":"Khaleelur-Rahman"},"content":"            String[] parts \u003d input.split(\"/by \");","lastModifiedDate":"2023-08-30"},{"lineNumber":273,"author":{"gitId":"Khaleelur-Rahman"},"content":"            String[] taskArray \u003d parts[0].split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":274,"author":{"gitId":"Khaleelur-Rahman"},"content":"            if (parts.length !\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":275,"author":{"gitId":"Khaleelur-Rahman"},"content":"                throw new DukeException(\"Specify by date and time!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":276,"author":{"gitId":"Khaleelur-Rahman"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":277,"author":{"gitId":"Khaleelur-Rahman"},"content":"            String[] deadlineInfo \u003d parts[1].split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":278,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":279,"author":{"gitId":"Khaleelur-Rahman"},"content":"            if (deadlineInfo.length !\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":280,"author":{"gitId":"Khaleelur-Rahman"},"content":"                throw new DukeException(\"Specify both date and time in the following manner : yyyy-mm-dd hh:mm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":281,"author":{"gitId":"Khaleelur-Rahman"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":282,"author":{"gitId":"Khaleelur-Rahman"},"content":"            by \u003d deadlineInfo[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":283,"author":{"gitId":"Khaleelur-Rahman"},"content":"            endTime \u003d deadlineInfo[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":284,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":285,"author":{"gitId":"Khaleelur-Rahman"},"content":"            for (int i \u003d 1; i \u003c taskArray.length; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":286,"author":{"gitId":"Khaleelur-Rahman"},"content":"                task +\u003d taskArray[i] + \" \";","lastModifiedDate":"2023-08-30"},{"lineNumber":287,"author":{"gitId":"Khaleelur-Rahman"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":288,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":289,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":290,"author":{"gitId":"Khaleelur-Rahman"},"content":"        else if (from.equals(\"file\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":291,"author":{"gitId":"Khaleelur-Rahman"},"content":"            String [] parts \u003d input.split(\"by: \");","lastModifiedDate":"2023-08-30"},{"lineNumber":292,"author":{"gitId":"Khaleelur-Rahman"},"content":"            String[] taskArray \u003d parts[0].split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":293,"author":{"gitId":"Khaleelur-Rahman"},"content":"            String[] deadlineInfo \u003d parts[1].split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":294,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":295,"author":{"gitId":"Khaleelur-Rahman"},"content":"            for (int i \u003d 1; i \u003c taskArray.length; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":296,"author":{"gitId":"Khaleelur-Rahman"},"content":"                task +\u003d taskArray[i] + \" \";","lastModifiedDate":"2023-08-30"},{"lineNumber":297,"author":{"gitId":"Khaleelur-Rahman"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":298,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":299,"author":{"gitId":"Khaleelur-Rahman"},"content":"            for (int i \u003d 0; i \u003c 3; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":300,"author":{"gitId":"Khaleelur-Rahman"},"content":"                by +\u003d deadlineInfo[i] + \" \";","lastModifiedDate":"2023-08-30"},{"lineNumber":301,"author":{"gitId":"Khaleelur-Rahman"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":302,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":303,"author":{"gitId":"Khaleelur-Rahman"},"content":"            by \u003d by.substring(0,11);","lastModifiedDate":"2023-08-30"},{"lineNumber":304,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":305,"author":{"gitId":"Khaleelur-Rahman"},"content":"            endTime \u003d deadlineInfo[3];","lastModifiedDate":"2023-08-30"},{"lineNumber":306,"author":{"gitId":"Khaleelur-Rahman"},"content":"            endTime \u003d endTime.substring(0, endTime.length() - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":307,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":308,"author":{"gitId":"Khaleelur-Rahman"},"content":"            DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-08-30"},{"lineNumber":309,"author":{"gitId":"Khaleelur-Rahman"},"content":"            DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-08-30"},{"lineNumber":310,"author":{"gitId":"Khaleelur-Rahman"},"content":"            LocalDate localDate \u003d LocalDate.parse(by, inputFormatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":311,"author":{"gitId":"Khaleelur-Rahman"},"content":"            by \u003d localDate.format(outputFormatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":312,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":313,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":314,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (task.equals(\"\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":315,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"No description specified la dei!! How to do work when no work is said!! Enter again!\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":316,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":317,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":318,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (by.isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":319,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"deadline task must have /by date and time\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":320,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":321,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":322,"author":{"gitId":"Khaleelur-Rahman"},"content":"        tasks.add(new Deadline(task, by, endTime+\":00\", TaskType.DEADLINE));","lastModifiedDate":"2023-08-30"},{"lineNumber":323,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":324,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String str \u003d tasks.get(tasks.size() - 1).toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":325,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String res \u003d \"Got it. I\u0027ve added this task :\\n\" + str + \"\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":326,"author":{"gitId":"Khaleelur-Rahman"},"content":"        res +\u003d getTaskLeft();","lastModifiedDate":"2023-08-30"},{"lineNumber":327,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":328,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":329,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return res;","lastModifiedDate":"2023-08-30"},{"lineNumber":330,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":331,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":332,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":333,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Adds an duke.Event task to the task tasks based on the provided input.","lastModifiedDate":"2023-08-30"},{"lineNumber":334,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":335,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param input The user input containing the task description and event timings.","lastModifiedDate":"2023-08-30"},{"lineNumber":336,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message indicating the success of adding the duke.Event task.","lastModifiedDate":"2023-08-30"},{"lineNumber":337,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If there\u0027s an issue with the input, task description, or event timings.","lastModifiedDate":"2023-08-30"},{"lineNumber":338,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":339,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String handleEventTask(String input,String from) throws DukeException, IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":340,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String task \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":341,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String startDate \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":342,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String endDate \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":343,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String startTime \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":344,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String endTime \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":345,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":346,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (from.equals(\"user\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":347,"author":{"gitId":"Khaleelur-Rahman"},"content":"            String[] parts \u003d input.split(\"/from \");","lastModifiedDate":"2023-08-30"},{"lineNumber":348,"author":{"gitId":"Khaleelur-Rahman"},"content":"            if (parts.length !\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":349,"author":{"gitId":"Khaleelur-Rahman"},"content":"                throw new DukeException(\"Specify from and to date and time!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":350,"author":{"gitId":"Khaleelur-Rahman"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":351,"author":{"gitId":"Khaleelur-Rahman"},"content":"            String[] taskArray \u003d parts[0].split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":352,"author":{"gitId":"Khaleelur-Rahman"},"content":"            String[] taskInfo \u003d parts[1].split(\"/to \");","lastModifiedDate":"2023-08-30"},{"lineNumber":353,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":354,"author":{"gitId":"Khaleelur-Rahman"},"content":"            if (taskInfo.length !\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":355,"author":{"gitId":"Khaleelur-Rahman"},"content":"                throw new DukeException(\"Specify both date and time for /from and /to in the following manner : yyyy-mm-dd hh:mm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":356,"author":{"gitId":"Khaleelur-Rahman"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":357,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":358,"author":{"gitId":"Khaleelur-Rahman"},"content":"            String[] fromInfo \u003d taskInfo[0].split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":359,"author":{"gitId":"Khaleelur-Rahman"},"content":"            String[] toInfo \u003d taskInfo[1].split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":360,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":361,"author":{"gitId":"Khaleelur-Rahman"},"content":"            if (fromInfo.length !\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":362,"author":{"gitId":"Khaleelur-Rahman"},"content":"                throw new DukeException(\"Specify both date and time for /from in the following manner : yyyy-mm-dd hh:mm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":363,"author":{"gitId":"Khaleelur-Rahman"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":364,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":365,"author":{"gitId":"Khaleelur-Rahman"},"content":"            if (toInfo.length !\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":366,"author":{"gitId":"Khaleelur-Rahman"},"content":"                throw new DukeException(\"Specify both date and time for /to in the following manner : yyyy-mm-dd hh:mm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":367,"author":{"gitId":"Khaleelur-Rahman"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":368,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":369,"author":{"gitId":"Khaleelur-Rahman"},"content":"            startDate \u003d fromInfo[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":370,"author":{"gitId":"Khaleelur-Rahman"},"content":"            startTime \u003d fromInfo[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":371,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":372,"author":{"gitId":"Khaleelur-Rahman"},"content":"            endDate \u003d toInfo[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":373,"author":{"gitId":"Khaleelur-Rahman"},"content":"            endTime \u003d toInfo[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":374,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":375,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":376,"author":{"gitId":"Khaleelur-Rahman"},"content":"            for (int i \u003d 1; i \u003c taskArray.length; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":377,"author":{"gitId":"Khaleelur-Rahman"},"content":"                task +\u003d taskArray[i] + \" \";","lastModifiedDate":"2023-08-30"},{"lineNumber":378,"author":{"gitId":"Khaleelur-Rahman"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":379,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":380,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":381,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (from.equals(\"file\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":382,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":383,"author":{"gitId":"Khaleelur-Rahman"},"content":"            String[] parts \u003d input.split(\"from: \");","lastModifiedDate":"2023-08-30"},{"lineNumber":384,"author":{"gitId":"Khaleelur-Rahman"},"content":"            String[] taskArray \u003d parts[0].split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":385,"author":{"gitId":"Khaleelur-Rahman"},"content":"            String[] taskInfo \u003d parts[1].split(\"to: \");","lastModifiedDate":"2023-08-30"},{"lineNumber":386,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":387,"author":{"gitId":"Khaleelur-Rahman"},"content":"            String[] fromInfo \u003d taskInfo[0].split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":388,"author":{"gitId":"Khaleelur-Rahman"},"content":"            String[] toInfo \u003d taskInfo[1].split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":389,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":390,"author":{"gitId":"Khaleelur-Rahman"},"content":"            for (int i \u003d 1; i \u003c taskArray.length; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":391,"author":{"gitId":"Khaleelur-Rahman"},"content":"                task +\u003d taskArray[i] + \" \";","lastModifiedDate":"2023-08-30"},{"lineNumber":392,"author":{"gitId":"Khaleelur-Rahman"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":393,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":394,"author":{"gitId":"Khaleelur-Rahman"},"content":"            for (int i \u003d 0; i \u003c 3; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":395,"author":{"gitId":"Khaleelur-Rahman"},"content":"                startDate +\u003d fromInfo[i] + \" \";","lastModifiedDate":"2023-08-30"},{"lineNumber":396,"author":{"gitId":"Khaleelur-Rahman"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":397,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":398,"author":{"gitId":"Khaleelur-Rahman"},"content":"            for (int i \u003d 0; i \u003c 3; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":399,"author":{"gitId":"Khaleelur-Rahman"},"content":"                endDate +\u003d toInfo[i] + \" \";","lastModifiedDate":"2023-08-30"},{"lineNumber":400,"author":{"gitId":"Khaleelur-Rahman"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":401,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":402,"author":{"gitId":"Khaleelur-Rahman"},"content":"            startDate \u003d startDate.substring(0,11);","lastModifiedDate":"2023-08-30"},{"lineNumber":403,"author":{"gitId":"Khaleelur-Rahman"},"content":"            endDate \u003d endDate.substring(0,11);","lastModifiedDate":"2023-08-30"},{"lineNumber":404,"author":{"gitId":"Khaleelur-Rahman"},"content":"            startTime \u003d fromInfo[3];","lastModifiedDate":"2023-08-30"},{"lineNumber":405,"author":{"gitId":"Khaleelur-Rahman"},"content":"            endTime \u003d toInfo[3];","lastModifiedDate":"2023-08-30"},{"lineNumber":406,"author":{"gitId":"Khaleelur-Rahman"},"content":"            endTime \u003d endTime.substring(0, endTime.length() - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":407,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":408,"author":{"gitId":"Khaleelur-Rahman"},"content":"            DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-08-30"},{"lineNumber":409,"author":{"gitId":"Khaleelur-Rahman"},"content":"            DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-08-30"},{"lineNumber":410,"author":{"gitId":"Khaleelur-Rahman"},"content":"            LocalDate localDateStart \u003d LocalDate.parse(startDate, inputFormatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":411,"author":{"gitId":"Khaleelur-Rahman"},"content":"            LocalDate localDateEnd \u003d LocalDate.parse(endDate, inputFormatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":412,"author":{"gitId":"Khaleelur-Rahman"},"content":"            startDate \u003d localDateStart.format(outputFormatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":413,"author":{"gitId":"Khaleelur-Rahman"},"content":"            endDate \u003d localDateEnd.format(outputFormatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":414,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":415,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":416,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (task.equals(\"\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":417,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"No description specified la dei!! How to do work when no work is said!! Enter again!\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":418,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":419,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":420,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (startDate.isEmpty() || endDate.isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":421,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"event task must have both /from and /to times\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":422,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":423,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":424,"author":{"gitId":"Khaleelur-Rahman"},"content":"        tasks.add(new Event(task, startDate, endDate, startTime+\":00\", endTime+\":00\", TaskType.EVENT));","lastModifiedDate":"2023-08-30"},{"lineNumber":425,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":426,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String str \u003d tasks.get(tasks.size() - 1).toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":427,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String res \u003d \"Got it. I\u0027ve added this task :\\n\" + str + \"\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":428,"author":{"gitId":"Khaleelur-Rahman"},"content":"        res +\u003d getTaskLeft();","lastModifiedDate":"2023-08-30"},{"lineNumber":429,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":430,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return res;","lastModifiedDate":"2023-08-30"},{"lineNumber":431,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":432,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":433,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String handleFindTask(String input) throws DukeException{","lastModifiedDate":"2023-08-30"},{"lineNumber":434,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String results \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":435,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String parts[] \u003d input.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":436,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":437,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":438,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"Specify keyword to search for!\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":439,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":440,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":441,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (parts.length \u003e 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":442,"author":{"gitId":"Khaleelur-Rahman"},"content":"            throw new DukeException(\"Enter only one keyword to search!\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":443,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":444,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":445,"author":{"gitId":"Khaleelur-Rahman"},"content":"        int resultCounter \u003d 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":446,"author":{"gitId":"Khaleelur-Rahman"},"content":"        String keyword \u003d \" \" + parts[1] + \" \";","lastModifiedDate":"2023-08-30"},{"lineNumber":447,"author":{"gitId":"Khaleelur-Rahman"},"content":"        for (int i \u003d 0;i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":448,"author":{"gitId":"Khaleelur-Rahman"},"content":"            if (tasks.get(i).toString().contains(keyword)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":449,"author":{"gitId":"Khaleelur-Rahman"},"content":"                results +\u003d resultCounter + \".\" + tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":450,"author":{"gitId":"Khaleelur-Rahman"},"content":"                resultCounter++;","lastModifiedDate":"2023-08-30"},{"lineNumber":451,"author":{"gitId":"Khaleelur-Rahman"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":452,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":453,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":454,"author":{"gitId":"Khaleelur-Rahman"},"content":"        if (results.equals(\"\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":455,"author":{"gitId":"Khaleelur-Rahman"},"content":"            return \"No results found!\";","lastModifiedDate":"2023-08-30"},{"lineNumber":456,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":457,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return results;","lastModifiedDate":"2023-08-30"},{"lineNumber":458,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":459,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":460,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-08-30"},{"lineNumber":461,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return this.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":462,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":463,"author":{"gitId":"Khaleelur-Rahman"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Khaleelur-Rahman":463}},{"path":"src/main/java/duke/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"public enum TaskType {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":"    TODO, DEADLINE, EVENT;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"Khaleelur-Rahman":5}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public ToDo(String list, TaskType type) {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":"        super(list, type);","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Marks the task as completed and returns a message indicating the task\u0027s new status.","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message indicating the successful marking of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If the task has already been marked as done.","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String setMarked() throws DukeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"Khaleelur-Rahman"},"content":"        super.setMarked();","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + this;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Marks the task as not completed and returns a message indicating the task\u0027s new status.","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @return A message indicating the successful unmarking of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @throws DukeException If the task has already been marked as not done.","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String setUnmarked() throws DukeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"Khaleelur-Rahman"},"content":"        super.setUnmarked();","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + this;","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"Khaleelur-Rahman"},"content":"        return super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"Khaleelur-Rahman"},"content":"    ","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"Khaleelur-Rahman"},"content":" }","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Khaleelur-Rahman":37}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":"    String divider \u003d \"------------------------------------\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Khaleelur-Rahman"},"content":"    String greet \u003d divider +","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Khaleelur-Rahman"},"content":"            \"Hello! I\u0027m Khaleelur!\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Khaleelur-Rahman"},"content":"            \"What can I do for you?\\n \" +","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Khaleelur-Rahman"},"content":"            divider;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Khaleelur-Rahman"},"content":"    String exit \u003d divider +","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Khaleelur-Rahman"},"content":"            \"Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Khaleelur-Rahman"},"content":"            divider;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Khaleelur-Rahman"},"content":"    ","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Displays a greeting message.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public void greet() {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Khaleelur-Rahman"},"content":"        System.out.println(greet);","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Displays an exit message.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public void exit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Khaleelur-Rahman"},"content":"        System.out.println(exit);","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Prints the provided string surrounded by a divider.","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param toPrint The string to be printed.","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public void print(String toPrint) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Khaleelur-Rahman"},"content":"        System.out.println(divider + toPrint + \"\\n\" + divider);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"Khaleelur-Rahman"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * Displays an error message related to loading.","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Khaleelur-Rahman"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"Khaleelur-Rahman"},"content":"     * @param e The exception containing the error message.","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"Khaleelur-Rahman"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public void showLoadingError(Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Khaleelur-Rahman"},"content":"        System.out.println(divider + e.getMessage() + \"\\n\" + divider);","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Khaleelur-Rahman"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Khaleelur-Rahman":47}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Khaleelur-Rahman"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Khaleelur-Rahman"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public void markTask_withNegativeIndex() {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Khaleelur-Rahman"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Khaleelur-Rahman"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Khaleelur-Rahman"},"content":"            taskList.handleTodoTask(\"todo borrow\", \"user\");","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Khaleelur-Rahman"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Khaleelur-Rahman"},"content":"            assertEquals(\"Enter mark command with positive index lesser than 2\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public void deadlineTask_noBy_exception() {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Khaleelur-Rahman"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Khaleelur-Rahman"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Khaleelur-Rahman"},"content":"            taskList.handleDeadlineTask(\"deadline borrow\", \"user\");","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Khaleelur-Rahman"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Khaleelur-Rahman"},"content":"            assertEquals(\"Specify by date and time!\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public void eventTask_noDescription_exception() {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Khaleelur-Rahman"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Khaleelur-Rahman"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Khaleelur-Rahman"},"content":"            taskList.handleEventTask(\"event /from 2022-10-12 20:00 /to 2022-11-10 00:00\", \"user\");","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Khaleelur-Rahman"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Khaleelur-Rahman"},"content":"            assertEquals(\"No description specified la dei!! How to do work when no work is said!! Enter again!\\n\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Khaleelur-Rahman"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Khaleelur-Rahman":41}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":"public class TodoTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public void toDo_toString_success() {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Khaleelur-Rahman"},"content":"        ToDo todo \u003d new ToDo(\"borrow book\", TaskType.TODO);","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Khaleelur-Rahman"},"content":"        assertEquals(\"[T][ ] borrow book\", todo.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public void toDo_setMarkAgain_exception() throws DukeException{","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Khaleelur-Rahman"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Khaleelur-Rahman"},"content":"            ToDo todo \u003d new ToDo(\"borrow book\", TaskType.TODO);","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Khaleelur-Rahman"},"content":"            todo.setMarked();","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Khaleelur-Rahman"},"content":"            todo.setMarked();","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Khaleelur-Rahman"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Khaleelur-Rahman"},"content":"            assertEquals(\"This task has already been marked as done!\\n\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Khaleelur-Rahman"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Khaleelur-Rahman"},"content":"    public void toDo_setUnMarkAgain_exception() throws DukeException{","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Khaleelur-Rahman"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Khaleelur-Rahman"},"content":"            ToDo todo \u003d new ToDo(\"borrow book\", TaskType.TODO);","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Khaleelur-Rahman"},"content":"            todo.setUnmarked();","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Khaleelur-Rahman"},"content":"            todo.setUnmarked();","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Khaleelur-Rahman"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Khaleelur-Rahman"},"content":"            assertEquals(\"This task has already been marked as not done!\\n\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Khaleelur-Rahman"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Khaleelur-Rahman"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Khaleelur-Rahman"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Khaleelur-Rahman"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Khaleelur-Rahman":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Khaleelur-Rahman"},"content":"todo play soccer","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Khaleelur-Rahman"},"content":"event NUSMS WT /from 5pm /to 11pm","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Khaleelur-Rahman"},"content":"mark 2","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Khaleelur-Rahman"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Khaleelur-Rahman"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Khaleelur-Rahman":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Khaleelur-Rahman"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Khaleelur-Rahman":1,"-":20}}]
