[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":" * The Deadline class represents a task with a deadline.","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":" * It extends the Task class.","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":" * Adds a \u0027by\u0027 field to store the date of the deadline.","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"    protected String by;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"     * Constructor for Deadline class.","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"     * @param description the description of the task","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"     * @param by          the deadline of the task","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"AlyssaPng"},"content":"     * Overides toString method from Task","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"     * returns a String representation of Deadline task.","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":"     * @return The String representation of Deadline task","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"AlyssaPng"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"AlyssaPng"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"AlyssaPng"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"AlyssaPng":30}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":" * Duke is a class in-charge of task management.","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":" * It allows users to add, delete, mark, unmark, specify, and list tasks.","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"     * The main function of the Duke application.","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"     * @param args Command line arguments","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"     * @throws DukeException If an error has occurred in the Duke application.","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"        System.out.println(\"Hello! I\u0027m Chatty\\n\" + \"What can I do for you?\");","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"        while (true) {","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"AlyssaPng"},"content":"            try {","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"                String[] words \u003d userInput.split(\" \");","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"                if (words.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":"                    if (words[0].equals(\"mark\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"AlyssaPng"},"content":"                        int taskIndex \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"AlyssaPng"},"content":"                        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c taskList.size()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"AlyssaPng"},"content":"                            Task task \u003d taskList.get(taskIndex);","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"AlyssaPng"},"content":"                            task.markAsDone();","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"AlyssaPng"},"content":"                            System.out.println(\"Nice! I\u0027ve marked this task as done:\\n \" + task);","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"AlyssaPng"},"content":"                            continue;","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"AlyssaPng"},"content":"                        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"AlyssaPng"},"content":"                            throw new InvalidRangeException(\"Invalid task index. You have \" +","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"AlyssaPng"},"content":"                                    taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"AlyssaPng"},"content":"                        }","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"AlyssaPng"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"AlyssaPng"},"content":"                    if (words[0].equals(\"unmark\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"AlyssaPng"},"content":"                        int taskIndex \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"AlyssaPng"},"content":"                        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c taskList.size()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"AlyssaPng"},"content":"                            Task task \u003d taskList.get(taskIndex);","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"AlyssaPng"},"content":"                            task.markAsUndone();","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"AlyssaPng"},"content":"                            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n \" + task);","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"AlyssaPng"},"content":"                            continue;","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"AlyssaPng"},"content":"                        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"AlyssaPng"},"content":"                            throw new InvalidRangeException(\"Invalid task index. You have \" +","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"AlyssaPng"},"content":"                                    taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"AlyssaPng"},"content":"                        }","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"AlyssaPng"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"AlyssaPng"},"content":"                    if (words[0].equals(\"delete\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"AlyssaPng"},"content":"                        int taskIndex \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"AlyssaPng"},"content":"                        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c taskList.size()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"AlyssaPng"},"content":"                            Task deletedTask \u003d taskList.remove(taskIndex);","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"AlyssaPng"},"content":"                            System.out.println(\"Noted. I\u0027ve removed this task:\\n \" + deletedTask","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"AlyssaPng"},"content":"                                    + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"AlyssaPng"},"content":"                            continue;","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"AlyssaPng"},"content":"                        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"AlyssaPng"},"content":"                            throw new InvalidRangeException(\"Invalid task index. You have \" +","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"AlyssaPng"},"content":"                                    taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"AlyssaPng"},"content":"                        }","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"AlyssaPng"},"content":"                    }","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"AlyssaPng"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"AlyssaPng"},"content":"                if (userInput.equals(\"list\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"AlyssaPng"},"content":"                    System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"AlyssaPng"},"content":"                    for (int j \u003d 0; j \u003c taskList.size(); j++) {","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"AlyssaPng"},"content":"                        int index \u003d j + 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"AlyssaPng"},"content":"                        System.out.println(index + \".\" + taskList.get(j).toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"AlyssaPng"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"AlyssaPng"},"content":"                } else if (userInput.equals(\"bye\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"AlyssaPng"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"AlyssaPng"},"content":"                } else if (isValid(userInput)) {","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"AlyssaPng"},"content":"                    Task newTask \u003d createNewTask(userInput);","lastModifiedDate":"2023-08-22"},{"lineNumber":74,"author":{"gitId":"AlyssaPng"},"content":"                    taskList.add(newTask);","lastModifiedDate":"2023-08-22"},{"lineNumber":75,"author":{"gitId":"AlyssaPng"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\\n \" + newTask","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"AlyssaPng"},"content":"                            + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"AlyssaPng"},"content":"                } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"AlyssaPng"},"content":"                    // ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"AlyssaPng"},"content":"                    throw new InvalidInputException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"AlyssaPng"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"AlyssaPng"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"AlyssaPng"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"AlyssaPng"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":85,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":86,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":87,"author":{"gitId":"AlyssaPng"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":89,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":90,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":91,"author":{"gitId":"AlyssaPng"},"content":"     * Checks if the user input is a valid task type.","lastModifiedDate":"2023-08-23"},{"lineNumber":92,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":93,"author":{"gitId":"AlyssaPng"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2023-08-23"},{"lineNumber":94,"author":{"gitId":"AlyssaPng"},"content":"     * @return True if the input is a valid task type, false otherwise.","lastModifiedDate":"2023-08-23"},{"lineNumber":95,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":96,"author":{"gitId":"AlyssaPng"},"content":"    private static boolean isValid(String userInput) {","lastModifiedDate":"2023-08-23"},{"lineNumber":97,"author":{"gitId":"AlyssaPng"},"content":"        return userInput.startsWith(\"todo\") || userInput.startsWith(\"deadline\") || userInput.startsWith(\"event\");","lastModifiedDate":"2023-08-23"},{"lineNumber":98,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":99,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":101,"author":{"gitId":"AlyssaPng"},"content":"     * Creates a new task based on the user\u0027s input.","lastModifiedDate":"2023-08-23"},{"lineNumber":102,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":103,"author":{"gitId":"AlyssaPng"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2023-08-23"},{"lineNumber":104,"author":{"gitId":"AlyssaPng"},"content":"     * @return A new Task object.","lastModifiedDate":"2023-08-23"},{"lineNumber":105,"author":{"gitId":"AlyssaPng"},"content":"     * @throws DukeException If userInput does not meet task requirements.","lastModifiedDate":"2023-08-23"},{"lineNumber":106,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":107,"author":{"gitId":"AlyssaPng"},"content":"    private static Task createNewTask(String userInput) throws DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":108,"author":{"gitId":"AlyssaPng"},"content":"        Task newTask;","lastModifiedDate":"2023-08-22"},{"lineNumber":109,"author":{"gitId":"AlyssaPng"},"content":"        //Remove first word","lastModifiedDate":"2023-08-22"},{"lineNumber":110,"author":{"gitId":"AlyssaPng"},"content":"        String[] arr \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-08-22"},{"lineNumber":111,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":112,"author":{"gitId":"AlyssaPng"},"content":"        if (arr.length !\u003d 2 || arr[1].isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":113,"author":{"gitId":"AlyssaPng"},"content":"            // ☹ OOPS!!! The description of a _____ cannot be empty.","lastModifiedDate":"2023-08-23"},{"lineNumber":114,"author":{"gitId":"AlyssaPng"},"content":"            throw new EmptyTaskException(arr[0]);","lastModifiedDate":"2023-08-23"},{"lineNumber":115,"author":{"gitId":"AlyssaPng"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":116,"author":{"gitId":"AlyssaPng"},"content":"            if (arr[0].equals(\"todo\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":117,"author":{"gitId":"AlyssaPng"},"content":"                newTask \u003d new ToDo(arr[1]);","lastModifiedDate":"2023-08-22"},{"lineNumber":118,"author":{"gitId":"AlyssaPng"},"content":"            } else if (arr[0].equals(\"deadline\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":119,"author":{"gitId":"AlyssaPng"},"content":"                String[] a \u003d arr[1].split(\" /by \");","lastModifiedDate":"2023-08-22"},{"lineNumber":120,"author":{"gitId":"AlyssaPng"},"content":"                if (a.length !\u003d 2 || a[1].isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":121,"author":{"gitId":"AlyssaPng"},"content":"                    throw new EmptyDateException(arr[0]);","lastModifiedDate":"2023-08-23"},{"lineNumber":122,"author":{"gitId":"AlyssaPng"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":123,"author":{"gitId":"AlyssaPng"},"content":"                newTask \u003d new Deadline(a[0], a[1]);","lastModifiedDate":"2023-08-22"},{"lineNumber":124,"author":{"gitId":"AlyssaPng"},"content":"            } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":125,"author":{"gitId":"AlyssaPng"},"content":"                String[] a \u003d arr[1].split(\" /from \");","lastModifiedDate":"2023-08-22"},{"lineNumber":126,"author":{"gitId":"AlyssaPng"},"content":"                if (a.length !\u003d 2 || a[1].isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":127,"author":{"gitId":"AlyssaPng"},"content":"                    throw new EmptyDateException(arr[0]);","lastModifiedDate":"2023-08-23"},{"lineNumber":128,"author":{"gitId":"AlyssaPng"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":129,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":130,"author":{"gitId":"AlyssaPng"},"content":"                String[] fromto \u003d a[1].split(\"/to \");","lastModifiedDate":"2023-08-22"},{"lineNumber":131,"author":{"gitId":"AlyssaPng"},"content":"                if (fromto.length !\u003d 2 || fromto[1].isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":132,"author":{"gitId":"AlyssaPng"},"content":"                    throw new NoEndDateException(\"☹ OOPS!!! Please provide a end date for your event.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":133,"author":{"gitId":"AlyssaPng"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":134,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":135,"author":{"gitId":"AlyssaPng"},"content":"                newTask \u003d new Event(a[0], fromto[0], fromto[1]);","lastModifiedDate":"2023-08-22"},{"lineNumber":136,"author":{"gitId":"AlyssaPng"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":137,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":138,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":139,"author":{"gitId":"AlyssaPng"},"content":"        return newTask;","lastModifiedDate":"2023-08-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"AlyssaPng":137,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":" * The DukeException class represents a custom exception used in the Duke class.","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"     * Constructor for DukeException class.","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"     * @param msg The error message of the exception.","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"        super(msg);","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"AlyssaPng":13}},{"path":"src/main/java/EmptyDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":" * The EmptyDateException class represents a custom exception used in the Duke class.","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":" * It extends the DukeException class.","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":" * It is thrown when the date of a deadline or event task is empty.","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"public class EmptyDateException extends DukeException{","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"     * Constructor for EmptyDateException class.","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"     * @param msg The type of task for which the date is left empty.","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"    public EmptyDateException(String msg) {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"        super(\"☹ OOPS!!! The date of a \" + msg + \" cannot be empty.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"AlyssaPng":15}},{"path":"src/main/java/EmptyTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":" * The EmptyTaskException class represents a custom exception used in the Duke class.","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":" * It extends the DukeException class.","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":" * It is thrown when the description of a task is empty.","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"public class EmptyTaskException extends DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"     * Constructor for EmptyTaskException class.","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"     * @param msg The type of task for which the description is left empty.","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"    public EmptyTaskException (String msg) {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"        super(\"☹ OOPS!!! The description of a \" + msg + \" cannot be empty.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"AlyssaPng":15}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":" * The Event class represents a task with a start date and end date.","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":" * It extends the Task class.","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":" * Adds a \u0027from\u0027 and \u0027to\u0027 fields to store the state date and end date respectively of the event.","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"    protected String from;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"    protected String to;","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"     * Constructor for Event class.","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"     * @param description the description of the task","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"     * @param from        the start date of the task","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"     * @param to          the end date of the task","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":"     * Overides toString method from Task","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"AlyssaPng"},"content":"     * returns a String representation of Event task.","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"AlyssaPng"},"content":"     * @return The String representation of Event task","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"AlyssaPng"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"AlyssaPng"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"AlyssaPng"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \"to: \" + to + \")\";","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"AlyssaPng":33}},{"path":"src/main/java/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":" * The InvalidInputException class represents a custom exception used in the Duke class.","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":" * It extends the DukeException class.","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":" * It is thrown when the user input is invalid.","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"public class InvalidInputException extends DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"     * Constructor for InvalidInputException class.","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"     * @param msg The error message of the exception.","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"    public InvalidInputException(String msg) {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"        super(msg);","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"AlyssaPng":15}},{"path":"src/main/java/InvalidRangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":" * The InvalidRangeException class represents a custom exception used in the Duke class.","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":" * It extends the DukeException class.","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":" * It is thrown when the user input for mark, unmark and delete of tasks exceed list length.","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"public class InvalidRangeException extends DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"     * Constructor for InvalidRangeException class.","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"     * @param msg The error message of the exception.","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"    public InvalidRangeException(String msg) {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"        super(msg);","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"AlyssaPng":15}},{"path":"src/main/java/NoEndDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":" * The NoEndDateException class represents a custom exception used in the Duke class.","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":" * It extends the DukeException class.","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":" * It is thrown when the end date of the event task is empty.","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"public class NoEndDateException extends DukeException{","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"     * Constructor for NoEndDateException class.","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"     * @param msg The error message of the exception.","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"    public NoEndDateException(String msg) {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"        super(msg);","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"AlyssaPng":15}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":" * The Task class represents a basic task with a description and status to determine if task is done.","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":" * Tasks can be marked as done or undone.","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"    protected String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"     * Constructor for the Task class","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"     * @param description description of the task","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"     * A method that marks the task as undone","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"AlyssaPng"},"content":"     * A method that marks the task as done","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"AlyssaPng"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"AlyssaPng"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"AlyssaPng"},"content":"     * An accessor method to retrieve the status of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"AlyssaPng"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"AlyssaPng"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"AlyssaPng"},"content":"     * Overides toString method from Object","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"AlyssaPng"},"content":"     * returns a String representation of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"AlyssaPng"},"content":"     * @return The String representation of the task","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"AlyssaPng"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"AlyssaPng"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"AlyssaPng"},"content":"        return (\"[\" + getStatusIcon() + \"] \" + this.description);","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"AlyssaPng":51}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":" * The ToDo class represents a task that has to be done.","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":" * It extends the Task class.","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":"public class ToDo extends Task{","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"     * Constructor for ToDo class.","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"     * @param description the description of the task","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"     * Overides toString method from Task","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"     * returns a String representation of ToDo task.","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"     * @return The String representation of ToDo task","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"AlyssaPng"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"AlyssaPng":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"todo","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"todo borrow book","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"deadline finish work /by","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":"event project meeting /from","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"event project meeting /from Mon 2pm /to","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"mark 4","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"unmark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"unmark 4","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"delete 2","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"delete 3","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"AlyssaPng":19}}]
