[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":" * The Deadline class represents a task with a deadline.","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":" * It extends the Task class.","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":" * Adds a \u0027by\u0027 field to store the date of the deadline.","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"    protected String by;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"     * Constructor for Deadline class.","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"     * @param description the description of the task","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"     * @param by          the deadline of the task","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"AlyssaPng"},"content":"     * Overides toString method from Task","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"     * returns a String representation of Deadline task.","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":"     * @return The String representation of Deadline task","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"AlyssaPng"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"AlyssaPng"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"AlyssaPng"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"AlyssaPng":30}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":" * Duke is a class in-charge of task management.","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":" * It allows users to add, delete, mark, unmark, specify, and list tasks.","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"     * The main function of the Duke application.","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"     * @param args Command line arguments","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"     * @throws DukeException If an error has occurred in the Duke application.","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"AlyssaPng"},"content":"        System.out.println(\"Hello! I\u0027m Chatty\\n\" + \"What can I do for you?\");","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"        ArrayList\u003cTask\u003e taskList \u003d readData();","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":"        ","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"AlyssaPng"},"content":"        while (true) {","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"AlyssaPng"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"AlyssaPng"},"content":"            try {","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"AlyssaPng"},"content":"                String[] words \u003d userInput.split(\" \");","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"AlyssaPng"},"content":"                if (words.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"AlyssaPng"},"content":"                    if (words[0].equals(\"mark\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"AlyssaPng"},"content":"                        int taskIndex \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"AlyssaPng"},"content":"                        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c taskList.size()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"AlyssaPng"},"content":"                            Task task \u003d taskList.get(taskIndex);","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"AlyssaPng"},"content":"                            task.markAsDone();","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"AlyssaPng"},"content":"                            System.out.println(\"Nice! I\u0027ve marked this task as done:\\n \" + task);","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"AlyssaPng"},"content":"                            continue;","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"AlyssaPng"},"content":"                        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"AlyssaPng"},"content":"                            throw new InvalidRangeException(\"Invalid task index. You have \" +","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"AlyssaPng"},"content":"                                    taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"AlyssaPng"},"content":"                        }","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"AlyssaPng"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"AlyssaPng"},"content":"                    if (words[0].equals(\"unmark\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"AlyssaPng"},"content":"                        int taskIndex \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"AlyssaPng"},"content":"                        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c taskList.size()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"AlyssaPng"},"content":"                            Task task \u003d taskList.get(taskIndex);","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"AlyssaPng"},"content":"                            task.markAsUndone();","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"AlyssaPng"},"content":"                            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n \" + task);","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"AlyssaPng"},"content":"                            continue;","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"AlyssaPng"},"content":"                        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"AlyssaPng"},"content":"                            throw new InvalidRangeException(\"Invalid task index. You have \" +","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"AlyssaPng"},"content":"                                    taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"AlyssaPng"},"content":"                        }","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"AlyssaPng"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"AlyssaPng"},"content":"                    if (words[0].equals(\"delete\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"AlyssaPng"},"content":"                        int taskIndex \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"AlyssaPng"},"content":"                        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c taskList.size()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"AlyssaPng"},"content":"                            Task deletedTask \u003d taskList.remove(taskIndex);","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"AlyssaPng"},"content":"                            System.out.println(\"Noted. I\u0027ve removed this task:\\n \" + deletedTask","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"AlyssaPng"},"content":"                                    + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"AlyssaPng"},"content":"                            continue;","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"AlyssaPng"},"content":"                        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"AlyssaPng"},"content":"                            throw new InvalidRangeException(\"Invalid task index. You have \" +","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"AlyssaPng"},"content":"                                    taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"AlyssaPng"},"content":"                        }","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"AlyssaPng"},"content":"                    }","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"AlyssaPng"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"AlyssaPng"},"content":"                if (userInput.equals(\"list\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"AlyssaPng"},"content":"                    System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"AlyssaPng"},"content":"                    for (int j \u003d 0; j \u003c taskList.size(); j++) {","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"AlyssaPng"},"content":"                        int index \u003d j + 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":74,"author":{"gitId":"AlyssaPng"},"content":"                        System.out.println(index + \".\" + taskList.get(j).toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":75,"author":{"gitId":"AlyssaPng"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"AlyssaPng"},"content":"                } else if (userInput.equals(\"bye\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"AlyssaPng"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":78,"author":{"gitId":"AlyssaPng"},"content":"                } else if (isValid(userInput)) {","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"AlyssaPng"},"content":"                    Task newTask \u003d createNewTask(userInput);","lastModifiedDate":"2023-08-22"},{"lineNumber":80,"author":{"gitId":"AlyssaPng"},"content":"                    taskList.add(newTask);","lastModifiedDate":"2023-08-22"},{"lineNumber":81,"author":{"gitId":"AlyssaPng"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\\n \" + newTask","lastModifiedDate":"2023-08-22"},{"lineNumber":82,"author":{"gitId":"AlyssaPng"},"content":"                            + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":83,"author":{"gitId":"AlyssaPng"},"content":"                } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"AlyssaPng"},"content":"                    // ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"AlyssaPng"},"content":"                    throw new InvalidInputException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"AlyssaPng"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":88,"author":{"gitId":"AlyssaPng"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":89,"author":{"gitId":"AlyssaPng"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"AlyssaPng"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":91,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":92,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":93,"author":{"gitId":"AlyssaPng"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":95,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":96,"author":{"gitId":"AlyssaPng"},"content":"    private static String getDate(String inputDate) {","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"AlyssaPng"},"content":"        String[] dateTime \u003d inputDate.split(\" \");","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"AlyssaPng"},"content":"        if (!dateTime[0].isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"AlyssaPng"},"content":"            DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"[M/d/yyyy][MM/dd/yyyy][yyyy-MM-dd]\");","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"AlyssaPng"},"content":"            DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"AlyssaPng"},"content":"            if (dateTime[0].contains(\"-\") || dateTime[0].contains(\"/\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"AlyssaPng"},"content":"                LocalDate date \u003d LocalDate.parse(dateTime[0], inputFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"AlyssaPng"},"content":"                dateTime[0] \u003d date.format(outputFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"AlyssaPng"},"content":"                inputDate \u003d dateTime[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"AlyssaPng"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"AlyssaPng"},"content":"        // Time","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"AlyssaPng"},"content":"        if (dateTime.length \u003d\u003d 2 \u0026\u0026 !dateTime[1].isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"AlyssaPng"},"content":"            inputDate \u003d dateTime[0] + \" \" + getTime(dateTime[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"AlyssaPng"},"content":"        return inputDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"AlyssaPng"},"content":"    private static String getTime(String time) {","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"AlyssaPng"},"content":"        // check if is integer","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"AlyssaPng"},"content":"        if (time.matches(\"^-?\\\\d+$\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"AlyssaPng"},"content":"            DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"AlyssaPng"},"content":"            DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"ha\");","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"AlyssaPng"},"content":"            LocalTime outputTime \u003d LocalTime.parse(time, inputFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"AlyssaPng"},"content":"            time \u003d outputTime.format(outputFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"AlyssaPng"},"content":"        return time;","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":130,"author":{"gitId":"AlyssaPng"},"content":"     * Checks if the user input is a valid task type.","lastModifiedDate":"2023-08-23"},{"lineNumber":131,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":132,"author":{"gitId":"AlyssaPng"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2023-08-23"},{"lineNumber":133,"author":{"gitId":"AlyssaPng"},"content":"     * @return True if the input is a valid task type, false otherwise.","lastModifiedDate":"2023-08-23"},{"lineNumber":134,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":135,"author":{"gitId":"AlyssaPng"},"content":"    private static boolean isValid(String userInput) {","lastModifiedDate":"2023-08-23"},{"lineNumber":136,"author":{"gitId":"AlyssaPng"},"content":"        return userInput.startsWith(\"todo\") || userInput.startsWith(\"deadline\") || userInput.startsWith(\"event\");","lastModifiedDate":"2023-08-23"},{"lineNumber":137,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":138,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":139,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":140,"author":{"gitId":"AlyssaPng"},"content":"     * Creates a new task based on the user\u0027s input.","lastModifiedDate":"2023-08-23"},{"lineNumber":141,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":142,"author":{"gitId":"AlyssaPng"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2023-08-23"},{"lineNumber":143,"author":{"gitId":"AlyssaPng"},"content":"     * @return A new Task object.","lastModifiedDate":"2023-08-23"},{"lineNumber":144,"author":{"gitId":"AlyssaPng"},"content":"     * @throws DukeException If userInput does not meet task requirements.","lastModifiedDate":"2023-08-23"},{"lineNumber":145,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":146,"author":{"gitId":"AlyssaPng"},"content":"    private static Task createNewTask(String userInput) throws DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":147,"author":{"gitId":"AlyssaPng"},"content":"        Task newTask;","lastModifiedDate":"2023-08-22"},{"lineNumber":148,"author":{"gitId":"AlyssaPng"},"content":"        //Remove first word","lastModifiedDate":"2023-08-22"},{"lineNumber":149,"author":{"gitId":"AlyssaPng"},"content":"        String[] arr \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-08-22"},{"lineNumber":150,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":151,"author":{"gitId":"AlyssaPng"},"content":"        if (arr.length !\u003d 2 || arr[1].isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":152,"author":{"gitId":"AlyssaPng"},"content":"            // ☹ OOPS!!! The description of a _____ cannot be empty.","lastModifiedDate":"2023-08-23"},{"lineNumber":153,"author":{"gitId":"AlyssaPng"},"content":"            throw new EmptyTaskException(arr[0]);","lastModifiedDate":"2023-08-23"},{"lineNumber":154,"author":{"gitId":"AlyssaPng"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":155,"author":{"gitId":"AlyssaPng"},"content":"            if (arr[0].equals(\"todo\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":156,"author":{"gitId":"AlyssaPng"},"content":"                newTask \u003d new ToDo(arr[1]);","lastModifiedDate":"2023-08-22"},{"lineNumber":157,"author":{"gitId":"AlyssaPng"},"content":"            } else if (arr[0].equals(\"deadline\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":158,"author":{"gitId":"AlyssaPng"},"content":"                String[] a \u003d arr[1].split(\" /by \");","lastModifiedDate":"2023-08-22"},{"lineNumber":159,"author":{"gitId":"AlyssaPng"},"content":"                if (a.length !\u003d 2 || a[1].isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":160,"author":{"gitId":"AlyssaPng"},"content":"                    throw new EmptyDateException(arr[0]);","lastModifiedDate":"2023-08-23"},{"lineNumber":161,"author":{"gitId":"AlyssaPng"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":162,"author":{"gitId":"AlyssaPng"},"content":"                newTask \u003d new Deadline(a[0], getDate(a[1]));","lastModifiedDate":"2023-08-29"},{"lineNumber":163,"author":{"gitId":"AlyssaPng"},"content":"            } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":164,"author":{"gitId":"AlyssaPng"},"content":"                String[] a \u003d arr[1].split(\" /from \");","lastModifiedDate":"2023-08-22"},{"lineNumber":165,"author":{"gitId":"AlyssaPng"},"content":"                if (a.length !\u003d 2 || a[1].isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":166,"author":{"gitId":"AlyssaPng"},"content":"                    throw new EmptyDateException(arr[0]);","lastModifiedDate":"2023-08-23"},{"lineNumber":167,"author":{"gitId":"AlyssaPng"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":168,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":169,"author":{"gitId":"AlyssaPng"},"content":"                String[] fromto \u003d a[1].split(\"/to \");","lastModifiedDate":"2023-08-22"},{"lineNumber":170,"author":{"gitId":"AlyssaPng"},"content":"                if (fromto.length !\u003d 2 || fromto[1].isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":171,"author":{"gitId":"AlyssaPng"},"content":"                    throw new NoEndDateException(\"☹ OOPS!!! Please provide a end date for your event.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":172,"author":{"gitId":"AlyssaPng"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":173,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":174,"author":{"gitId":"AlyssaPng"},"content":"                newTask \u003d new Event(a[0], getDate(fromto[0]), getTime(fromto[1]));","lastModifiedDate":"2023-08-29"},{"lineNumber":175,"author":{"gitId":"AlyssaPng"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":176,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":177,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":178,"author":{"gitId":"AlyssaPng"},"content":"        return newTask;","lastModifiedDate":"2023-08-22"},{"lineNumber":179,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":180,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":181,"author":{"gitId":"AlyssaPng"},"content":"    private static ArrayList\u003cTask\u003e readData() throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":182,"author":{"gitId":"AlyssaPng"},"content":"        String filePath \u003d \"./src/main/java/data/duke.txt\";","lastModifiedDate":"2023-08-29"},{"lineNumber":183,"author":{"gitId":"AlyssaPng"},"content":"        ArrayList\u003cString\u003e dataArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":184,"author":{"gitId":"AlyssaPng"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":185,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":186,"author":{"gitId":"AlyssaPng"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":187,"author":{"gitId":"AlyssaPng"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":188,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":189,"author":{"gitId":"AlyssaPng"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-08-29"},{"lineNumber":190,"author":{"gitId":"AlyssaPng"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":191,"author":{"gitId":"AlyssaPng"},"content":"                String input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":192,"author":{"gitId":"AlyssaPng"},"content":"                dataArray.add(input);","lastModifiedDate":"2023-08-29"},{"lineNumber":193,"author":{"gitId":"AlyssaPng"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":194,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":195,"author":{"gitId":"AlyssaPng"},"content":"            scanner.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":196,"author":{"gitId":"AlyssaPng"},"content":"            String[] data \u003d dataArray.toArray(new String[dataArray.size()]);","lastModifiedDate":"2023-08-29"},{"lineNumber":197,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":198,"author":{"gitId":"AlyssaPng"},"content":"            for (String item : data) {","lastModifiedDate":"2023-08-29"},{"lineNumber":199,"author":{"gitId":"AlyssaPng"},"content":"                taskList.add(loadData(item));","lastModifiedDate":"2023-08-29"},{"lineNumber":200,"author":{"gitId":"AlyssaPng"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":201,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":202,"author":{"gitId":"AlyssaPng"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":203,"author":{"gitId":"AlyssaPng"},"content":"            System.out.println(\"Working Directory \u003d \" + System.getProperty(\"user.dir\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":204,"author":{"gitId":"AlyssaPng"},"content":"            System.out.println(\"File not found: \" + filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":205,"author":{"gitId":"AlyssaPng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":206,"author":{"gitId":"AlyssaPng"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":207,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":208,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":209,"author":{"gitId":"AlyssaPng"},"content":"        return taskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":210,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":211,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":212,"author":{"gitId":"AlyssaPng"},"content":"    private static Task loadData(String dataInput) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":213,"author":{"gitId":"AlyssaPng"},"content":"        Task newTask;","lastModifiedDate":"2023-08-29"},{"lineNumber":214,"author":{"gitId":"AlyssaPng"},"content":"        String[] arr \u003d dataInput.split(\"\\\\|\");","lastModifiedDate":"2023-08-29"},{"lineNumber":215,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":216,"author":{"gitId":"AlyssaPng"},"content":"        for (int i \u003d 0; i \u003c arr.length; i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":217,"author":{"gitId":"AlyssaPng"},"content":"            arr[i] \u003d arr[i].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":218,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":219,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":220,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":221,"author":{"gitId":"AlyssaPng"},"content":"        if (arr[0].equals(\"T\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":222,"author":{"gitId":"AlyssaPng"},"content":"            if (arr.length \u003c 3 || arr[2].isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":223,"author":{"gitId":"AlyssaPng"},"content":"                throw new EmptyTaskException(\"todo\");","lastModifiedDate":"2023-08-29"},{"lineNumber":224,"author":{"gitId":"AlyssaPng"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":225,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":226,"author":{"gitId":"AlyssaPng"},"content":"            newTask \u003d new ToDo(arr[2]);","lastModifiedDate":"2023-08-29"},{"lineNumber":227,"author":{"gitId":"AlyssaPng"},"content":"        } else if (arr[0].equals(\"D\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":228,"author":{"gitId":"AlyssaPng"},"content":"            if (arr.length \u003c 3 || arr[2].isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":229,"author":{"gitId":"AlyssaPng"},"content":"                throw new EmptyTaskException(\"deadline\");","lastModifiedDate":"2023-08-29"},{"lineNumber":230,"author":{"gitId":"AlyssaPng"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":231,"author":{"gitId":"AlyssaPng"},"content":"            if (arr.length !\u003d 4|| arr[3].isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":232,"author":{"gitId":"AlyssaPng"},"content":"                throw new EmptyDateException(\"deadline\");","lastModifiedDate":"2023-08-29"},{"lineNumber":233,"author":{"gitId":"AlyssaPng"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":234,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":235,"author":{"gitId":"AlyssaPng"},"content":"            newTask \u003d new Deadline(arr[2], arr[3]);","lastModifiedDate":"2023-08-29"},{"lineNumber":236,"author":{"gitId":"AlyssaPng"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":237,"author":{"gitId":"AlyssaPng"},"content":"            if (arr.length \u003c 3 || arr[2].isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":238,"author":{"gitId":"AlyssaPng"},"content":"                throw new EmptyTaskException(\"event\");","lastModifiedDate":"2023-08-29"},{"lineNumber":239,"author":{"gitId":"AlyssaPng"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":240,"author":{"gitId":"AlyssaPng"},"content":"            if (arr.length \u003c 4 || arr[3].isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":241,"author":{"gitId":"AlyssaPng"},"content":"                throw new EmptyDateException(\"event\");","lastModifiedDate":"2023-08-29"},{"lineNumber":242,"author":{"gitId":"AlyssaPng"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":243,"author":{"gitId":"AlyssaPng"},"content":"            if (arr.length !\u003d 5 || arr[4].isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":244,"author":{"gitId":"AlyssaPng"},"content":"                throw new NoEndDateException(\"☹ OOPS!!! Please provide a end date for your event.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":245,"author":{"gitId":"AlyssaPng"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":246,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":247,"author":{"gitId":"AlyssaPng"},"content":"            newTask \u003d new Event(arr[2], arr[3], arr[4]);","lastModifiedDate":"2023-08-29"},{"lineNumber":248,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":249,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":250,"author":{"gitId":"AlyssaPng"},"content":"        // mark as done","lastModifiedDate":"2023-08-29"},{"lineNumber":251,"author":{"gitId":"AlyssaPng"},"content":"        if (arr[1].equals(\"1\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":252,"author":{"gitId":"AlyssaPng"},"content":"            newTask.markAsDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":253,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":254,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":255,"author":{"gitId":"AlyssaPng"},"content":"        return newTask;","lastModifiedDate":"2023-08-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"AlyssaPng":253,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":" * The DukeException class represents a custom exception used in the Duke class.","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"     * Constructor for DukeException class.","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"     * @param msg The error message of the exception.","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"        super(msg);","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"AlyssaPng":13}},{"path":"src/main/java/EmptyDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":" * The EmptyDateException class represents a custom exception used in the Duke class.","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":" * It extends the DukeException class.","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":" * It is thrown when the date of a deadline or event task is empty.","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"public class EmptyDateException extends DukeException{","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"     * Constructor for EmptyDateException class.","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"     * @param msg The type of task for which the date is left empty.","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"    public EmptyDateException(String msg) {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"        super(\"☹ OOPS!!! The date of a \" + msg + \" cannot be empty.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"AlyssaPng":15}},{"path":"src/main/java/EmptyTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":" * The EmptyTaskException class represents a custom exception used in the Duke class.","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":" * It extends the DukeException class.","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":" * It is thrown when the description of a task is empty.","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"public class EmptyTaskException extends DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"     * Constructor for EmptyTaskException class.","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"     * @param msg The type of task for which the description is left empty.","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"    public EmptyTaskException (String msg) {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"        super(\"☹ OOPS!!! The description of a \" + msg + \" cannot be empty.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"AlyssaPng":15}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":" * The Event class represents a task with a start date and end date.","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":" * It extends the Task class.","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":" * Adds a \u0027from\u0027 and \u0027to\u0027 fields to store the state date and end date respectively of the event.","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"    protected String from;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"    protected String to;","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"     * Constructor for Event class.","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"     * @param description the description of the task","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"     * @param from        the start date of the task","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"     * @param to          the end date of the task","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":"     * Overides toString method from Task","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"AlyssaPng"},"content":"     * returns a String representation of Event task.","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"AlyssaPng"},"content":"     * @return The String representation of Event task","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"AlyssaPng"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"AlyssaPng"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"AlyssaPng"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"AlyssaPng":33}},{"path":"src/main/java/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":" * The InvalidInputException class represents a custom exception used in the Duke class.","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":" * It extends the DukeException class.","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":" * It is thrown when the user input is invalid.","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"public class InvalidInputException extends DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"     * Constructor for InvalidInputException class.","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"     * @param msg The error message of the exception.","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"    public InvalidInputException(String msg) {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"        super(msg);","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"AlyssaPng":15}},{"path":"src/main/java/InvalidRangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":" * The InvalidRangeException class represents a custom exception used in the Duke class.","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":" * It extends the DukeException class.","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":" * It is thrown when the user input for mark, unmark and delete of tasks exceed list length.","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"public class InvalidRangeException extends DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"     * Constructor for InvalidRangeException class.","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"     * @param msg The error message of the exception.","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"    public InvalidRangeException(String msg) {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"        super(msg);","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"AlyssaPng":15}},{"path":"src/main/java/NoEndDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":" * The NoEndDateException class represents a custom exception used in the Duke class.","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":" * It extends the DukeException class.","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":" * It is thrown when the end date of the event task is empty.","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"public class NoEndDateException extends DukeException{","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"     * Constructor for NoEndDateException class.","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"     * @param msg The error message of the exception.","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"    public NoEndDateException(String msg) {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"        super(msg);","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"AlyssaPng":15}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":" * The Task class represents a basic task with a description and status to determine if task is done.","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":" * Tasks can be marked as done or undone.","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"    protected String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"     * Constructor for the Task class","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"     * @param description description of the task","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"     * A method that marks the task as undone","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"AlyssaPng"},"content":"     * A method that marks the task as done","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"AlyssaPng"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"AlyssaPng"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"AlyssaPng"},"content":"     * An accessor method to retrieve the status of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"AlyssaPng"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"AlyssaPng"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"AlyssaPng"},"content":"     * Overides toString method from Object","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"AlyssaPng"},"content":"     * returns a String representation of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"AlyssaPng"},"content":"     * @return The String representation of the task","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"AlyssaPng"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"AlyssaPng"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"AlyssaPng"},"content":"        return (\"[\" + getStatusIcon() + \"] \" + this.description);","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"AlyssaPng":51}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":" * The ToDo class represents a task that has to be done.","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":" * It extends the Task class.","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":"public class ToDo extends Task{","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"     * Constructor for ToDo class.","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"     * @param description the description of the task","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"     * Overides toString method from Task","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"     * returns a String representation of ToDo task.","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"     * @return The String representation of ToDo task","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"AlyssaPng"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"AlyssaPng":25}},{"path":"src/main/java/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"T | 1 | read book","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"D | 0 | return book | June 6th","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"E | 0 | project meeting | Aug 6th 2pm | 4pm","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":"T | 1 | join sports club","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"AlyssaPng":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"todo","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"todo borrow book","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"deadline finish work /by","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":"deadline return book /by 2/12/2019 1800","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"event project meeting /from","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"event project meeting /from Mon 2pm /to","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"event project meeting /from 2019-10-15 1400 /to 4pm","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"mark 4","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"unmark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"unmark 4","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"delete 2","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"delete 3","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"AlyssaPng"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"AlyssaPng":21}}]
