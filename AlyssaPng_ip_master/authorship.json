[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"AlyssaPng":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"javafx {","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"    version \u003d \"17.0.7\"","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.base\u0027, \u0027javafx.fxml\u0027, \u0027javafx.graphics\u0027 ]","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"checkstyle {","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"AlyssaPng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"AlyssaPng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"AlyssaPng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"AlyssaPng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"AlyssaPng":18,"-":42}},{"path":"src/main/java/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"T | 1 | read book","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"D | 0 | return book | June 6th","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"E | 0 | project meeting | Aug 6th 2pm | 4pm","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":"T | 1 | join sports club","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"AlyssaPng":4}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":" * The duke.Deadline class represents a task with a deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":" * It extends the duke.Task class.","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":" * Adds a \u0027by\u0027 field to store the date of the deadline.","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"    protected String by;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"     * Constructor for duke.Deadline class.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"     * @param description the description of the task","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"     * @param by          the deadline of the task","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"     * Overides toString method from duke.Task","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":"     * returns a String representation of duke.Deadline task.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"AlyssaPng"},"content":"     * @return The String representation of duke.Deadline task","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"AlyssaPng"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"AlyssaPng"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"AlyssaPng"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"AlyssaPng":32}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"AlyssaPng"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"AlyssaPng"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"AlyssaPng"},"content":"     * Constructor for DialogBox class","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"AlyssaPng"},"content":"     * @param text The String to be displayed on the Label","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"AlyssaPng"},"content":"     * @param img The Image of the DialogBox","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"AlyssaPng"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"AlyssaPng"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"AlyssaPng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"AlyssaPng"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"AlyssaPng"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"AlyssaPng"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"AlyssaPng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"AlyssaPng"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"AlyssaPng"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"AlyssaPng"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"AlyssaPng"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"AlyssaPng"},"content":"    private void flip() {","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"AlyssaPng"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"AlyssaPng"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"AlyssaPng"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"AlyssaPng"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"AlyssaPng"},"content":"     * Creates a DialogBox Object for the user","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"AlyssaPng"},"content":"     * @param text the dialog to be shown on the Label Object","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"AlyssaPng"},"content":"     * @param img the image of the dialog","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"AlyssaPng"},"content":"     * @return The DialogBox for the user","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"AlyssaPng"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"AlyssaPng"},"content":"        DialogBox userDialog \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"AlyssaPng"},"content":"        userDialog.setStyle(\"-fx-background-color: #f0f0f0; \"","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"AlyssaPng"},"content":"                + \"-fx-border-color: #ccc; \"","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"AlyssaPng"},"content":"                + \"-fx-border-width: 1px; \"","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"AlyssaPng"},"content":"                + \"-fx-padding: 5px;\");","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"AlyssaPng"},"content":"        return userDialog;","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"AlyssaPng"},"content":"     * Creates a DialogBox Object for duke","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"AlyssaPng"},"content":"     * @param text the dialog to be shown on the Label Object","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"AlyssaPng"},"content":"     * @param img the image of the dialog","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"AlyssaPng"},"content":"     * @return The DialogBox for the duke","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"AlyssaPng"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"AlyssaPng"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"AlyssaPng"},"content":"        db.flip();","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"AlyssaPng"},"content":"        db.setStyle(\"-fx-background-color: #e0e0e0;\"","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"AlyssaPng"},"content":"                + \"-fx-border-color: #ccc;\"","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"AlyssaPng"},"content":"                + \"-fx-border-width: 1px;\"","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"AlyssaPng"},"content":"                + \"-fx-padding: 5px;\");","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"AlyssaPng"},"content":"        return db;","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"AlyssaPng":92}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":" * duke.Duke is a class in-charge of task management.","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":" * It allows users to add, delete, mark, unmark, specify, and list tasks.","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"     * Constructor for duke.Duke class with no parameters","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"    public Duke() {","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":"     * Constructor for duke.Duke class","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"AlyssaPng"},"content":"     * @param filePath The filepath where task data is stored.","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"AlyssaPng"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"AlyssaPng"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"AlyssaPng"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"AlyssaPng"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"AlyssaPng"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"AlyssaPng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"AlyssaPng"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"AlyssaPng"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"AlyssaPng"},"content":"     * Runs the duke.Duke application","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"AlyssaPng"},"content":"    public void run() {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"AlyssaPng"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"AlyssaPng"},"content":"        boolean isDone \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"AlyssaPng"},"content":"        while (isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"AlyssaPng"},"content":"            String userInput \u003d ui.readCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"AlyssaPng"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"AlyssaPng"},"content":"                isDone \u003d Parser.parseCommand(userInput, this.tasks, this.ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"AlyssaPng"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"AlyssaPng"},"content":"                ui.showMessage(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"AlyssaPng"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"AlyssaPng"},"content":"     * Run for GUI Duke application","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"AlyssaPng"},"content":"     * @param userInput The user\u0027s input","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"AlyssaPng"},"content":"     * @return The String response for the given user\u0027s input","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"AlyssaPng"},"content":"    public String runInput(String userInput) {","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"AlyssaPng"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"AlyssaPng"},"content":"            return Parser.parseInput(userInput, this.tasks, this.ui);","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"AlyssaPng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"AlyssaPng"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"AlyssaPng"},"content":"     * The main function of the duke.Duke application.","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"AlyssaPng"},"content":"     * @param args Command line arguments","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"AlyssaPng"},"content":"     * @throws DukeException If an error has occurred in the duke.Duke application.","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"AlyssaPng"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"AlyssaPng"},"content":"        new Duke(\"C:/repos/ip/src/main/java/data/duke.txt\").run();","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"AlyssaPng":77,"-":2}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":" * The duke.Event class represents a task with a start date and end date.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":" * It extends the duke.Task class.","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":" * Adds a \u0027from\u0027 and \u0027to\u0027 fields to store the state date and end date respectively of the event.","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"    protected String from;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"    protected String to;","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"     * Constructor for duke.Event class.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"     * @param description the description of the task","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"     * @param from        the start date of the task","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"     * @param to          the end date of the task","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"AlyssaPng"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"AlyssaPng"},"content":"     * Overides toString method from duke.Task","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"AlyssaPng"},"content":"     * returns a String representation of duke.Event task.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"AlyssaPng"},"content":"     * @return The String representation of duke.Event task","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"AlyssaPng"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"AlyssaPng"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"AlyssaPng"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"AlyssaPng":35}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"public class Launcher {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"     * The main function of the Launcher class.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"     * @param args Command line arguments","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"AlyssaPng":19}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"     * Starts the Duke application on GUI","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"     * @param stage the primary stage for this application, onto which","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"AlyssaPng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"AlyssaPng"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"AlyssaPng"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"AlyssaPng"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"AlyssaPng"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"AlyssaPng"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"AlyssaPng"},"content":"            stage.show();","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"AlyssaPng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"AlyssaPng"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"AlyssaPng":37}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"AlyssaPng"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"AlyssaPng"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"AlyssaPng"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"AlyssaPng"},"content":"     * Initialise the application","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"AlyssaPng"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"AlyssaPng"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"AlyssaPng"},"content":"        String welcome \u003d \"Hello! I\u0027m Chatty\\n\" + \"What can I do for you?\";","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"AlyssaPng"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"AlyssaPng"},"content":"                DialogBox.getDukeDialog(welcome, dukeImage)","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"AlyssaPng"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"AlyssaPng"},"content":"        dialogContainer.setStyle(\"-fx-background-color: #f0f0f0;\"","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"AlyssaPng"},"content":"                + \"-fx-border-color: #ccc;\"","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"AlyssaPng"},"content":"                + \"-fx-border-width: 1px;\"","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"AlyssaPng"},"content":"                + \"-fx-padding: 10px;\");","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"AlyssaPng"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"AlyssaPng"},"content":"     * A mutator method for the duke field","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"AlyssaPng"},"content":"     * @param d The Duke application object","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"AlyssaPng"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"AlyssaPng"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"AlyssaPng"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"AlyssaPng"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"AlyssaPng"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"AlyssaPng"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"AlyssaPng"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"AlyssaPng"},"content":"        String response \u003d getResponse(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"AlyssaPng"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"AlyssaPng"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"AlyssaPng"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"AlyssaPng"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"AlyssaPng"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"AlyssaPng"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"AlyssaPng"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"AlyssaPng"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"AlyssaPng"},"content":"        String output \u003d duke.runInput(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"AlyssaPng"},"content":"        return \"Chatty responded: \\n\" + output;","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"AlyssaPng":76}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":" * The duke.Parser class is responsible for interpreting user commands and converting them into actions or tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"     * Checks if the user input is an exit command.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"     * @return True if the input is an exit command, false otherwise.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"    public static boolean isExitCommand(String userInput) {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"        return userInput.equals(\"bye\");","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"     * Checks if the user input is a list command.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"AlyssaPng"},"content":"     * @return True if the input is a list command, false otherwise.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"AlyssaPng"},"content":"    public static boolean isListCommand(String userInput) {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"AlyssaPng"},"content":"        return userInput.equals(\"list\");","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"AlyssaPng"},"content":"     * Checks if the user input is a mark command.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"AlyssaPng"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"AlyssaPng"},"content":"     * @return True if the input is a mark command, false otherwise.","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"AlyssaPng"},"content":"    public static boolean isMarkCommand(String userInput) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"AlyssaPng"},"content":"        return userInput.startsWith(\"mark\");","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"AlyssaPng"},"content":"     * Checks if the user input is an unmark command.","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"AlyssaPng"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"AlyssaPng"},"content":"     * @return True if the input is an unmark command, false otherwise.","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"AlyssaPng"},"content":"    public static boolean isUnmarkCommand(String userInput) {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"AlyssaPng"},"content":"        return userInput.startsWith(\"unmark\");","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"AlyssaPng"},"content":"     * Checks if the user input is a delete command.","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"AlyssaPng"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"AlyssaPng"},"content":"     * @return True if the input is a delete command, false otherwise.","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"AlyssaPng"},"content":"    public static boolean isDeleteCommand(String userInput) {","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"AlyssaPng"},"content":"        return userInput.startsWith(\"delete\");","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"AlyssaPng"},"content":"     * Checks if the user input is a find command.","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"AlyssaPng"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"AlyssaPng"},"content":"     * @return True if the input is a find command, false otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"AlyssaPng"},"content":"    public static boolean isFindCommand(String userInput) {","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"AlyssaPng"},"content":"        return userInput.startsWith(\"find\");","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"AlyssaPng"},"content":"     * Checks if the user input is a valid task type.","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"AlyssaPng"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"AlyssaPng"},"content":"     * @return True if the input is a valid task type, false otherwise.","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"AlyssaPng"},"content":"    public static boolean isValidCommand(String userInput) {","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"AlyssaPng"},"content":"        return userInput.startsWith(\"todo\") || userInput.startsWith(\"deadline\") || userInput.startsWith(\"event\");","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"AlyssaPng"},"content":"     * Parses the user\u0027s input and performs the corresponding operations.","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"AlyssaPng"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"AlyssaPng"},"content":"     * @param tasks     The current duke.TaskList with all the tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"AlyssaPng"},"content":"     * @param ui        The current duke.Ui for user interaction.","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"AlyssaPng"},"content":"     * @return True if the program should continue running, false if it should exit.","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"AlyssaPng"},"content":"     * @throws DukeException If there\u0027s an issue with the user input or task operations.","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"AlyssaPng"},"content":"    public static boolean parseCommand(String userInput, TaskList tasks, Ui ui) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"AlyssaPng"},"content":"        String[] words \u003d userInput.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"AlyssaPng"},"content":"        if (words.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"AlyssaPng"},"content":"            if (isMarkCommand(words[0])) {","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"AlyssaPng"},"content":"                int taskIndex \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"AlyssaPng"},"content":"                String output \u003d tasks.markTaskAsDone(taskIndex);","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"AlyssaPng"},"content":"                ui.showMessage(output);","lastModifiedDate":"2023-09-06"},{"lineNumber":97,"author":{"gitId":"AlyssaPng"},"content":"                return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"AlyssaPng"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"AlyssaPng"},"content":"            if (isUnmarkCommand(words[0])) {","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"AlyssaPng"},"content":"                int taskIndex \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"AlyssaPng"},"content":"                String output \u003d tasks.unmarkTaskAsDone(taskIndex);","lastModifiedDate":"2023-09-06"},{"lineNumber":103,"author":{"gitId":"AlyssaPng"},"content":"                ui.showMessage(output);","lastModifiedDate":"2023-09-06"},{"lineNumber":104,"author":{"gitId":"AlyssaPng"},"content":"                return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"AlyssaPng"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"AlyssaPng"},"content":"            if (isDeleteCommand(words[0])) {","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"AlyssaPng"},"content":"                int taskIndex \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"AlyssaPng"},"content":"                String output \u003d tasks.deleteTask(taskIndex);","lastModifiedDate":"2023-09-06"},{"lineNumber":110,"author":{"gitId":"AlyssaPng"},"content":"                ui.showMessage(output);","lastModifiedDate":"2023-09-06"},{"lineNumber":111,"author":{"gitId":"AlyssaPng"},"content":"                return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"AlyssaPng"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"AlyssaPng"},"content":"        if (isListCommand(userInput)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"AlyssaPng"},"content":"            ui.showList(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"AlyssaPng"},"content":"        } else if (isExitCommand(userInput)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"AlyssaPng"},"content":"            ui.showBye();","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"AlyssaPng"},"content":"            return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"AlyssaPng"},"content":"        } else if (isFindCommand(userInput)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"AlyssaPng"},"content":"            String keyword \u003d userInput.replaceFirst(\"find\", \"\").trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"AlyssaPng"},"content":"            if (keyword.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"AlyssaPng"},"content":"                throw new InvalidInputException(\"☹ OOPS!!! I\u0027m sorry, please provide a keyword to search.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"AlyssaPng"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"AlyssaPng"},"content":"            ui.showMessage(tasks.findTasks(keyword));","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"AlyssaPng"},"content":"        } else if (isValidCommand(userInput)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"AlyssaPng"},"content":"            ui.showMessage(tasks.addTask(userInput));","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"AlyssaPng"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"AlyssaPng"},"content":"            throw new InvalidInputException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"AlyssaPng"},"content":"        return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":134,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":135,"author":{"gitId":"AlyssaPng"},"content":"     * Parses the user\u0027s input and performs the corresponding operations.","lastModifiedDate":"2023-09-06"},{"lineNumber":136,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":137,"author":{"gitId":"AlyssaPng"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2023-09-06"},{"lineNumber":138,"author":{"gitId":"AlyssaPng"},"content":"     * @param tasks     The current duke.TaskList with all the tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":139,"author":{"gitId":"AlyssaPng"},"content":"     * @param ui        The current duke.Ui for user interaction.","lastModifiedDate":"2023-09-06"},{"lineNumber":140,"author":{"gitId":"AlyssaPng"},"content":"     * @return String the String response of the GUI chat box.","lastModifiedDate":"2023-09-06"},{"lineNumber":141,"author":{"gitId":"AlyssaPng"},"content":"     * @throws DukeException If there\u0027s an issue with the user input or task operations.","lastModifiedDate":"2023-09-06"},{"lineNumber":142,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":143,"author":{"gitId":"AlyssaPng"},"content":"    public static String parseInput(String userInput, TaskList tasks, Ui ui) throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":144,"author":{"gitId":"AlyssaPng"},"content":"        String[] words \u003d userInput.split(\" \");","lastModifiedDate":"2023-09-06"},{"lineNumber":145,"author":{"gitId":"AlyssaPng"},"content":"        if (words.length \u003d\u003d 2) {","lastModifiedDate":"2023-09-06"},{"lineNumber":146,"author":{"gitId":"AlyssaPng"},"content":"            if (isMarkCommand(words[0])) {","lastModifiedDate":"2023-09-06"},{"lineNumber":147,"author":{"gitId":"AlyssaPng"},"content":"                int taskIndex \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2023-09-06"},{"lineNumber":148,"author":{"gitId":"AlyssaPng"},"content":"                return tasks.markTaskAsDone(taskIndex);","lastModifiedDate":"2023-09-06"},{"lineNumber":149,"author":{"gitId":"AlyssaPng"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":150,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":151,"author":{"gitId":"AlyssaPng"},"content":"            if (isUnmarkCommand(words[0])) {","lastModifiedDate":"2023-09-06"},{"lineNumber":152,"author":{"gitId":"AlyssaPng"},"content":"                int taskIndex \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2023-09-06"},{"lineNumber":153,"author":{"gitId":"AlyssaPng"},"content":"                return tasks.unmarkTaskAsDone(taskIndex);","lastModifiedDate":"2023-09-06"},{"lineNumber":154,"author":{"gitId":"AlyssaPng"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":155,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":156,"author":{"gitId":"AlyssaPng"},"content":"            if (isDeleteCommand(words[0])) {","lastModifiedDate":"2023-09-06"},{"lineNumber":157,"author":{"gitId":"AlyssaPng"},"content":"                int taskIndex \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2023-09-06"},{"lineNumber":158,"author":{"gitId":"AlyssaPng"},"content":"                return tasks.deleteTask(taskIndex);","lastModifiedDate":"2023-09-06"},{"lineNumber":159,"author":{"gitId":"AlyssaPng"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":160,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":161,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":162,"author":{"gitId":"AlyssaPng"},"content":"        if (isListCommand(userInput)) {","lastModifiedDate":"2023-09-06"},{"lineNumber":163,"author":{"gitId":"AlyssaPng"},"content":"            return ui.showList(tasks);","lastModifiedDate":"2023-09-06"},{"lineNumber":164,"author":{"gitId":"AlyssaPng"},"content":"        } else if (isExitCommand(userInput)) {","lastModifiedDate":"2023-09-06"},{"lineNumber":165,"author":{"gitId":"AlyssaPng"},"content":"            return ui.showBye();","lastModifiedDate":"2023-09-06"},{"lineNumber":166,"author":{"gitId":"AlyssaPng"},"content":"        } else if (isFindCommand(userInput)) {","lastModifiedDate":"2023-09-06"},{"lineNumber":167,"author":{"gitId":"AlyssaPng"},"content":"            String keyword \u003d userInput.replaceFirst(\"find\", \"\").trim();","lastModifiedDate":"2023-09-06"},{"lineNumber":168,"author":{"gitId":"AlyssaPng"},"content":"            if (keyword.isEmpty()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":169,"author":{"gitId":"AlyssaPng"},"content":"                throw new InvalidInputException(\"OOPS!!! I\u0027m sorry, please provide a keyword to search.\");","lastModifiedDate":"2023-09-06"},{"lineNumber":170,"author":{"gitId":"AlyssaPng"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":171,"author":{"gitId":"AlyssaPng"},"content":"            return tasks.findTasks(keyword);","lastModifiedDate":"2023-09-06"},{"lineNumber":172,"author":{"gitId":"AlyssaPng"},"content":"        } else if (isValidCommand(userInput)) {","lastModifiedDate":"2023-09-06"},{"lineNumber":173,"author":{"gitId":"AlyssaPng"},"content":"            return tasks.addTask(userInput);","lastModifiedDate":"2023-09-06"},{"lineNumber":174,"author":{"gitId":"AlyssaPng"},"content":"        } else {","lastModifiedDate":"2023-09-06"},{"lineNumber":175,"author":{"gitId":"AlyssaPng"},"content":"            throw new InvalidInputException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-06"},{"lineNumber":176,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":177,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":178,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AlyssaPng":178}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"import duke.exception.EmptyDateException;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"import duke.exception.EmptyTaskException;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"import duke.exception.NoEndDateException;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":" * The duke.Storage class is responsible for loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"    protected String filepath;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"AlyssaPng"},"content":"     * Constructor for duke.Storage class.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"     * @param filepath The file path where the tasks are stored.","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"AlyssaPng"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"AlyssaPng"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"AlyssaPng"},"content":"     * Loads tasks from the file using the file path.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"AlyssaPng"},"content":"     * @return An ArrayList of tasks loaded from the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"AlyssaPng"},"content":"     * @throws DukeException If there is an issue loading tasks or parsing the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"AlyssaPng"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"AlyssaPng"},"content":"        ArrayList\u003cString\u003e dataArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"AlyssaPng"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"AlyssaPng"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"AlyssaPng"},"content":"            File file \u003d new File(this.filepath);","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"AlyssaPng"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"AlyssaPng"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"AlyssaPng"},"content":"                String input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"AlyssaPng"},"content":"                dataArray.add(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"AlyssaPng"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"AlyssaPng"},"content":"            scanner.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"AlyssaPng"},"content":"            String[] data \u003d dataArray.toArray(new String[dataArray.size()]);","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"AlyssaPng"},"content":"            for (String item : data) {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"AlyssaPng"},"content":"                taskList.add(loadData(item));","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"AlyssaPng"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"AlyssaPng"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"AlyssaPng"},"content":"            throw new DukeException(\"File Not Found: \" + this.filepath);","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"AlyssaPng"},"content":"        return taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"AlyssaPng"},"content":"     * Creates a duke.Task from the string representation from the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"AlyssaPng"},"content":"     * @param dataInput The string representation of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"AlyssaPng"},"content":"     * @return The created duke.Task object.","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"AlyssaPng"},"content":"     * @throws DukeException If the string representation does not meet task requirements.","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"AlyssaPng"},"content":"    public Task loadData(String dataInput) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"AlyssaPng"},"content":"        Task newTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"AlyssaPng"},"content":"        String[] arr \u003d dataInput.split(\"\\\\|\");","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"AlyssaPng"},"content":"        for (int i \u003d 0; i \u003c arr.length; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"AlyssaPng"},"content":"            arr[i] \u003d arr[i].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"AlyssaPng"},"content":"        if (arr[0].equals(\"T\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"AlyssaPng"},"content":"            if (arr.length \u003c 3 || arr[2].isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"AlyssaPng"},"content":"                throw new EmptyTaskException(\"todo\");","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"AlyssaPng"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"AlyssaPng"},"content":"            newTask \u003d new ToDo(arr[2]);","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"AlyssaPng"},"content":"        } else if (arr[0].equals(\"D\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"AlyssaPng"},"content":"            if (arr.length \u003c 3 || arr[2].isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"AlyssaPng"},"content":"                throw new EmptyTaskException(\"deadline\");","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"AlyssaPng"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"AlyssaPng"},"content":"            if (arr.length !\u003d 4 || arr[3].isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"AlyssaPng"},"content":"                throw new EmptyDateException(\"deadline\");","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"AlyssaPng"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"AlyssaPng"},"content":"            newTask \u003d new Deadline(arr[2], arr[3]);","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"AlyssaPng"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"AlyssaPng"},"content":"            if (arr.length \u003c 3 || arr[2].isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"AlyssaPng"},"content":"                throw new EmptyTaskException(\"event\");","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"AlyssaPng"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"AlyssaPng"},"content":"            if (arr.length \u003c 4 || arr[3].isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"AlyssaPng"},"content":"                throw new EmptyDateException(\"event\");","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"AlyssaPng"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"AlyssaPng"},"content":"            if (arr.length !\u003d 5 || arr[4].isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"AlyssaPng"},"content":"                throw new NoEndDateException();","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"AlyssaPng"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"AlyssaPng"},"content":"            newTask \u003d new Event(arr[2], arr[3], arr[4]);","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"AlyssaPng"},"content":"        // mark as done","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"AlyssaPng"},"content":"        if (arr[1].equals(\"1\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"AlyssaPng"},"content":"            newTask.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"AlyssaPng"},"content":"        return newTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AlyssaPng":112}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":" * The duke.Task class represents a basic task with a description and status to determine if task is done.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":" * Tasks can be marked as done or undone.","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"    protected String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"     * Constructor for the duke.Task class","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"     * @param description description of the task","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"     * A method that marks the task as undone","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"AlyssaPng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"AlyssaPng"},"content":"     * A method that marks the task as done","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"AlyssaPng"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"AlyssaPng"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"AlyssaPng"},"content":"     * An accessor method to retrieve the status of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"AlyssaPng"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"AlyssaPng"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"AlyssaPng"},"content":"     * An accessor method to retrieve the description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"AlyssaPng"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"AlyssaPng"},"content":"        return this.description;","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"AlyssaPng"},"content":"     * Overides toString method from Object","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"AlyssaPng"},"content":"     * returns a String representation of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"AlyssaPng"},"content":"     * @return The String representation of the task","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"AlyssaPng"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"AlyssaPng"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"AlyssaPng"},"content":"        return (\"[\" + getStatusIcon() + \"] \" + this.description);","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"AlyssaPng":61}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"import duke.exception.EmptyDateException;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"import duke.exception.EmptyTaskException;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"import duke.exception.InvalidRangeException;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"import duke.exception.NoEndDateException;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":" * Tasklist is a class in-charge of task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":" * It has method to add, delete, unmark and mark tasks in the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"     * Constructs a new empty duke.TaskList.","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"AlyssaPng"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"AlyssaPng"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"AlyssaPng"},"content":"     * Constructs a new duke.TaskList with an existing list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"AlyssaPng"},"content":"     * @param tasks The list of tasks to initialize the duke.TaskList.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"AlyssaPng"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"AlyssaPng"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"AlyssaPng"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"AlyssaPng"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"AlyssaPng"},"content":"     * @return String message to be printed","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"AlyssaPng"},"content":"     * @throws DukeException If userInput does not meet task requirements.","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"AlyssaPng"},"content":"    public String addTask(String userInput) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"AlyssaPng"},"content":"        Task newTask \u003d createNewTask(userInput);","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"AlyssaPng"},"content":"        this.tasks.add(newTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"AlyssaPng"},"content":"        return (\"Got it. I\u0027ve added this task:\\n \" + newTask","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"AlyssaPng"},"content":"                + \"\\nNow you have \" + this.tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"AlyssaPng"},"content":"     * Creates a new task based on the user\u0027s input.","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"AlyssaPng"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"AlyssaPng"},"content":"     * @return A new duke.Task object.","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"AlyssaPng"},"content":"     * @throws DukeException If userInput does not meet task requirements.","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"AlyssaPng"},"content":"    public Task createNewTask(String userInput) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"AlyssaPng"},"content":"        Task newTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"AlyssaPng"},"content":"        String[] arr \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"AlyssaPng"},"content":"        if (arr.length !\u003d 2 || arr[1].isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"AlyssaPng"},"content":"            throw new EmptyTaskException(arr[0]);","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"AlyssaPng"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"AlyssaPng"},"content":"            if (arr[0].equals(\"todo\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"AlyssaPng"},"content":"                newTask \u003d new ToDo(arr[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"AlyssaPng"},"content":"            } else if (arr[0].equals(\"deadline\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"AlyssaPng"},"content":"                String[] a \u003d arr[1].split(\" /by \");","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"AlyssaPng"},"content":"                if (a.length !\u003d 2 || a[1].isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"AlyssaPng"},"content":"                    throw new EmptyDateException(arr[0]);","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"AlyssaPng"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"AlyssaPng"},"content":"                newTask \u003d new Deadline(a[0], getDate(a[1]));","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"AlyssaPng"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"AlyssaPng"},"content":"                String[] a \u003d arr[1].split(\" /from \");","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"AlyssaPng"},"content":"                if (a.length !\u003d 2 || a[1].isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"AlyssaPng"},"content":"                    throw new EmptyDateException(arr[0]);","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"AlyssaPng"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"AlyssaPng"},"content":"                String[] fromto \u003d a[1].split(\"/to \");","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"AlyssaPng"},"content":"                if (fromto.length !\u003d 2 || fromto[1].isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"AlyssaPng"},"content":"                    throw new NoEndDateException();","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"AlyssaPng"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"AlyssaPng"},"content":"                newTask \u003d new Event(a[0], getDate(fromto[0]), getTime(fromto[1]));","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"AlyssaPng"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"AlyssaPng"},"content":"        return newTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"AlyssaPng"},"content":"     * Change the input date and time to the correct format.","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"AlyssaPng"},"content":"     * @param inputDate The user\u0027s input date.","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"AlyssaPng"},"content":"     * @return The correct date and time format.","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"AlyssaPng"},"content":"    public String getDate(String inputDate) {","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"AlyssaPng"},"content":"        String[] dateTime \u003d inputDate.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"AlyssaPng"},"content":"        if (!dateTime[0].isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"AlyssaPng"},"content":"            DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"AlyssaPng"},"content":"                    \"[M/d/yyyy][MM/dd/yyyy][yyyy-MM-dd]\");","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"AlyssaPng"},"content":"            DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"AlyssaPng"},"content":"            if (dateTime[0].contains(\"-\") || dateTime[0].contains(\"/\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"AlyssaPng"},"content":"                LocalDate date \u003d LocalDate.parse(dateTime[0], inputFormatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"AlyssaPng"},"content":"                dateTime[0] \u003d date.format(outputFormatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"AlyssaPng"},"content":"                inputDate \u003d dateTime[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"AlyssaPng"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"AlyssaPng"},"content":"        // Time","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"AlyssaPng"},"content":"        if (dateTime.length \u003d\u003d 2 \u0026\u0026 !dateTime[1].isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"AlyssaPng"},"content":"            inputDate \u003d dateTime[0] + \" \" + getTime(dateTime[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"AlyssaPng"},"content":"        return inputDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"AlyssaPng"},"content":"     * Change the input time to the correct format.","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"AlyssaPng"},"content":"     * @param time The user\u0027s input time.","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"AlyssaPng"},"content":"     * @return The correct time format.","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"AlyssaPng"},"content":"    public String getTime(String time) {","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"AlyssaPng"},"content":"        // check if is integer","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"AlyssaPng"},"content":"        if (time.matches(\"^-?\\\\d+$\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"AlyssaPng"},"content":"            DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"AlyssaPng"},"content":"            DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"ha\");","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"AlyssaPng"},"content":"            LocalTime outputTime \u003d LocalTime.parse(time, inputFormatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"AlyssaPng"},"content":"            time \u003d outputTime.format(outputFormatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"AlyssaPng"},"content":"        return time;","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"AlyssaPng"},"content":"     * Deletes the desired task from the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"AlyssaPng"},"content":"     * @param taskIndex The index of the desired deleted task.","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"AlyssaPng"},"content":"     * @return A message confirming the deletion of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"AlyssaPng"},"content":"     * @throws InvalidRangeException If the task index is exceeds the range.","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"AlyssaPng"},"content":"    public String deleteTask(int taskIndex) throws InvalidRangeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"AlyssaPng"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c this.tasks.size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"AlyssaPng"},"content":"            Task deletedTask \u003d this.tasks.remove(taskIndex);","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"AlyssaPng"},"content":"            return (\"Noted. I\u0027ve removed this task:\\n \" + deletedTask","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"AlyssaPng"},"content":"                    + \"\\nNow you have \" + this.tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"AlyssaPng"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"AlyssaPng"},"content":"            throw new InvalidRangeException(\"Invalid task index. You have \"","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"AlyssaPng"},"content":"                    + this.tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":154,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"AlyssaPng"},"content":"     * Unmarks the desired task as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"AlyssaPng"},"content":"     * @param taskIndex The index of the task to mark as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"AlyssaPng"},"content":"     * @return A message confirming the task as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"AlyssaPng"},"content":"     * @throws InvalidRangeException If the task index is exceeds the range.","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"AlyssaPng"},"content":"    public String markTaskAsDone(int taskIndex) throws InvalidRangeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"AlyssaPng"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c this.tasks.size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"AlyssaPng"},"content":"            Task task \u003d this.tasks.get(taskIndex);","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"AlyssaPng"},"content":"            task.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":168,"author":{"gitId":"AlyssaPng"},"content":"            return (\"Nice! I\u0027ve marked this task as done:\\n \" + task);","lastModifiedDate":"2023-08-30"},{"lineNumber":169,"author":{"gitId":"AlyssaPng"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":170,"author":{"gitId":"AlyssaPng"},"content":"            throw new InvalidRangeException(\"Invalid task index. You have \"","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"AlyssaPng"},"content":"                    + this.tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":173,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":174,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":175,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":176,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":177,"author":{"gitId":"AlyssaPng"},"content":"     * Marks the desired task as undone.","lastModifiedDate":"2023-08-30"},{"lineNumber":178,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":179,"author":{"gitId":"AlyssaPng"},"content":"     * @param taskIndex The index of the task to mark as undone.","lastModifiedDate":"2023-08-30"},{"lineNumber":180,"author":{"gitId":"AlyssaPng"},"content":"     * @return A message confirming the task as undone.","lastModifiedDate":"2023-08-30"},{"lineNumber":181,"author":{"gitId":"AlyssaPng"},"content":"     * @throws InvalidRangeException If the task index is exceeds the range.","lastModifiedDate":"2023-08-30"},{"lineNumber":182,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":183,"author":{"gitId":"AlyssaPng"},"content":"    public String unmarkTaskAsDone(int taskIndex) throws InvalidRangeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":184,"author":{"gitId":"AlyssaPng"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c this.tasks.size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":185,"author":{"gitId":"AlyssaPng"},"content":"            Task task \u003d this.tasks.get(taskIndex);","lastModifiedDate":"2023-08-30"},{"lineNumber":186,"author":{"gitId":"AlyssaPng"},"content":"            task.markAsUndone();","lastModifiedDate":"2023-08-30"},{"lineNumber":187,"author":{"gitId":"AlyssaPng"},"content":"            return (\"OK, I\u0027ve marked this task as not done yet:\\n \" + task);","lastModifiedDate":"2023-08-30"},{"lineNumber":188,"author":{"gitId":"AlyssaPng"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":189,"author":{"gitId":"AlyssaPng"},"content":"            throw new InvalidRangeException(\"Invalid task index. You have \"","lastModifiedDate":"2023-08-31"},{"lineNumber":190,"author":{"gitId":"AlyssaPng"},"content":"                    + this.tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":191,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":192,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":193,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":194,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":195,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":196,"author":{"gitId":"AlyssaPng"},"content":"     * Finds tasks that contains a given keyword.","lastModifiedDate":"2023-08-31"},{"lineNumber":197,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":198,"author":{"gitId":"AlyssaPng"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2023-08-31"},{"lineNumber":199,"author":{"gitId":"AlyssaPng"},"content":"     * @return The string representation of the matching task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":200,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":201,"author":{"gitId":"AlyssaPng"},"content":"    public String findTasks(String keyword) {","lastModifiedDate":"2023-08-31"},{"lineNumber":202,"author":{"gitId":"AlyssaPng"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2023-08-31"},{"lineNumber":203,"author":{"gitId":"AlyssaPng"},"content":"                tasks.stream()","lastModifiedDate":"2023-08-31"},{"lineNumber":204,"author":{"gitId":"AlyssaPng"},"content":"                        .filter(task -\u003e task.getDescription().contains(keyword))","lastModifiedDate":"2023-08-31"},{"lineNumber":205,"author":{"gitId":"AlyssaPng"},"content":"                        .collect(Collectors.toList()));","lastModifiedDate":"2023-08-31"},{"lineNumber":206,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":207,"author":{"gitId":"AlyssaPng"},"content":"        // String representation of matching task","lastModifiedDate":"2023-08-31"},{"lineNumber":208,"author":{"gitId":"AlyssaPng"},"content":"        String taskList \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2023-08-31"},{"lineNumber":209,"author":{"gitId":"AlyssaPng"},"content":"        for (int j \u003d 0; j \u003c matchingTasks.size(); j++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":210,"author":{"gitId":"AlyssaPng"},"content":"            int index \u003d j + 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":211,"author":{"gitId":"AlyssaPng"},"content":"            taskList +\u003d (\"\\n\" + index + \".\" + matchingTasks.get(j).toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":212,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":213,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":214,"author":{"gitId":"AlyssaPng"},"content":"        return taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":215,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":216,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":217,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":218,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":219,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":220,"author":{"gitId":"AlyssaPng"},"content":"     * Returns a string representation of the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":221,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":222,"author":{"gitId":"AlyssaPng"},"content":"     * @return The string representation of the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":223,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":224,"author":{"gitId":"AlyssaPng"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":225,"author":{"gitId":"AlyssaPng"},"content":"    public String toString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":226,"author":{"gitId":"AlyssaPng"},"content":"        String taskList \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2023-08-30"},{"lineNumber":227,"author":{"gitId":"AlyssaPng"},"content":"        for (int j \u003d 0; j \u003c this.tasks.size(); j++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":228,"author":{"gitId":"AlyssaPng"},"content":"            int index \u003d j + 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":229,"author":{"gitId":"AlyssaPng"},"content":"            taskList +\u003d (\"\\n\" + index + \".\" + this.tasks.get(j).toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":230,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":231,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":232,"author":{"gitId":"AlyssaPng"},"content":"        return taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":233,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":234,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AlyssaPng":234}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":" * The duke.ToDo class represents a task that has to be done.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":" * It extends the duke.Task class.","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"     * Constructor for duke.ToDo class.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"     * @param description the description of the task","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"        super(description);","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"     * Overides toString method from duke.Task","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"     * returns a String representation of duke.ToDo task.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"AlyssaPng"},"content":"     * @return The String representation of duke.ToDo task","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":"    public String toString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"AlyssaPng"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AlyssaPng":27}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":" * duke.UI is a class that handles interactions with the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":" * It is responsible for displaying messages, and reading user input.","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"     * Constructor for UI class","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"    public Ui() {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"AlyssaPng"},"content":"     * Display Welcome Message.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":"        System.out.println(\"Hello! I\u0027m Chatty\\n\" + \"What can I do for you?\");","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"AlyssaPng"},"content":"     * Displays a given message to the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"AlyssaPng"},"content":"     * @param msg The message to be displayed.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"AlyssaPng"},"content":"    public void showMessage(String msg) {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"AlyssaPng"},"content":"        System.out.println(msg);","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"AlyssaPng"},"content":"     * Reads user\u0027s input.","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"AlyssaPng"},"content":"     * @return The user\u0027s input as a String.","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"AlyssaPng"},"content":"    public String readCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"AlyssaPng"},"content":"        return this.scanner.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"AlyssaPng"},"content":"     * Displays an error message indicating that loading a file has failed.","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"AlyssaPng"},"content":"     * @return The output as a String.","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"AlyssaPng"},"content":"    public String showLoadingError() {","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"AlyssaPng"},"content":"        System.out.println(\"File not found\");","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"AlyssaPng"},"content":"        return \"File not found\";","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"AlyssaPng"},"content":"     * Displays the list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"AlyssaPng"},"content":"     * @param tasks The current duke.TaskList containing tasks to display.","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"AlyssaPng"},"content":"     * @return The output as a String.","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"AlyssaPng"},"content":"    public String showList(TaskList tasks) {","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"AlyssaPng"},"content":"        System.out.println(tasks.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"AlyssaPng"},"content":"        return tasks.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"AlyssaPng"},"content":"     * Displays a goodbye message to the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"AlyssaPng"},"content":"     * @return The output as a String.","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"AlyssaPng"},"content":"    public String showBye() {","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"AlyssaPng"},"content":"        this.scanner.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"AlyssaPng"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"AlyssaPng"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AlyssaPng":76}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"package duke.exception;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":" * The duke.exception.DukeException class represents a custom exception used in the duke.Duke class.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"     * Constructor for duke.exception.DukeException class.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"     * @param msg The error message of the exception.","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"        super(msg);","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"AlyssaPng":15}},{"path":"src/main/java/duke/exception/EmptyDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"package duke.exception;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":" * The duke.exception.EmptyDateException class represents a custom exception used in the duke.Duke class.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":" * It extends the duke.exception.DukeException class.","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":" * It is thrown when the date of a deadline or event task is empty.","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"public class EmptyDateException extends DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"     * Constructor for duke.exception.EmptyDateException class.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"     * @param msg The type of task for which the date is left empty.","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"    public EmptyDateException(String msg) {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"        super(\"☹ OOPS!!! The date of a \" + msg + \" cannot be empty.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"AlyssaPng":17}},{"path":"src/main/java/duke/exception/EmptyTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"package duke.exception;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":" * The duke.exception.EmptyTaskException class represents a custom exception used in the duke.Duke class.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":" * It extends the duke.exception.DukeException class.","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":" * It is thrown when the description of a task is empty.","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"public class EmptyTaskException extends DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"     * Constructor for duke.exception.EmptyTaskException class.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"     * @param msg The type of task for which the description is left empty.","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"    public EmptyTaskException(String msg) {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"        super(\"☹ OOPS!!! The description of a \" + msg + \" cannot be empty.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"AlyssaPng":17}},{"path":"src/main/java/duke/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"package duke.exception;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":" * The duke.exception.InvalidInputException class represents a custom exception used in the duke.Duke class.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":" * It extends the duke.exception.DukeException class.","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":" * It is thrown when the user input is invalid.","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"public class InvalidInputException extends DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"     * Constructor for duke.exception.InvalidInputException class.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"     * @param msg The error message of the exception.","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"    public InvalidInputException(String msg) {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"        super(msg);","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"AlyssaPng":17}},{"path":"src/main/java/duke/exception/InvalidRangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"package duke.exception;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":" * The duke.exception.InvalidRangeException class represents a custom exception used in the duke.Duke class.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":" * It extends the duke.exception.DukeException class.","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":" * It is thrown when the user input for mark, unmark and delete of tasks exceed list length.","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"public class InvalidRangeException extends DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"     * Constructor for duke.exception.InvalidRangeException class.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"     * @param msg The error message of the exception.","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"    public InvalidRangeException(String msg) {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"        super(msg);","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"AlyssaPng":17}},{"path":"src/main/java/duke/exception/NoEndDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"package duke.exception;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":" * The duke.exception.NoEndDateException class represents a custom exception used in the duke.Duke class.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":" * It extends the duke.exception.DukeException class.","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":" * It is thrown when the end date of the event task is empty.","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"public class NoEndDateException extends DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"     * Constructor for duke.exception.NoEndDateException class.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"    public NoEndDateException() {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"        super(\"☹ OOPS!!! Please provide a end date for your event.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"AlyssaPng":16}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"AlyssaPng"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"AlyssaPng":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"AlyssaPng":20}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"import duke.exception.EmptyDateException;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"import duke.exception.EmptyTaskException;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"import duke.exception.NoEndDateException;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":" * The {@code StorageTest} class contains JUnit tests for the {@link Storage} class.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":" * It tests the loading of task data from a storage file.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"public class StorageTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"     * Tests loading a \u0027todo\u0027 task from a given String representation.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"     * @throws DukeException If there is an issue with task loading.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"AlyssaPng"},"content":"    public void testLoadTodo() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"AlyssaPng"},"content":"        Storage storage \u003d new Storage(\"\");","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"AlyssaPng"},"content":"        String test1 \u003d \"T | 1 | read book\";","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"AlyssaPng"},"content":"        Task output1 \u003d new ToDo(\"read book\");","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"AlyssaPng"},"content":"        output1.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"AlyssaPng"},"content":"        assertEquals(output1.toString(), storage.loadData(test1).toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"AlyssaPng"},"content":"     * Tests loading a \u0027dealine\u0027 task from a given String representation.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"AlyssaPng"},"content":"     * @throws DukeException If there is an issue with task loading.","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"AlyssaPng"},"content":"    public void testLoadDealine() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"AlyssaPng"},"content":"        Storage storage \u003d new Storage(\"\");","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"AlyssaPng"},"content":"        String test2 \u003d \"D | 0 | return book | June 6th\";","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"AlyssaPng"},"content":"        Task output2 \u003d new Deadline(\"return book\", \"June 6th\");","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"AlyssaPng"},"content":"        assertEquals(output2.toString(), storage.loadData(test2).toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"AlyssaPng"},"content":"     * Tests loading a \u0027even\u0027 task from a given String representation.","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"AlyssaPng"},"content":"     * @throws DukeException If there is an issue with task loading.","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"AlyssaPng"},"content":"    public void testLoadEvent() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"AlyssaPng"},"content":"        Storage storage \u003d new Storage(\"\");","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"AlyssaPng"},"content":"        String test3 \u003d \"E | 0 | project meeting | Aug 6th 2pm | 4pm\";","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"AlyssaPng"},"content":"        Task output3 \u003d new Event(\"project meeting\", \"Aug 6th 2pm\", \"4pm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"AlyssaPng"},"content":"        assertEquals(output3.toString(), storage.loadData(test3).toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"AlyssaPng"},"content":"     * Tests loading an invalid string representation of a task.","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"AlyssaPng"},"content":"     * @throws DukeException If there is an issue with task loading.","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"AlyssaPng"},"content":"    public void testInvalidData() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"AlyssaPng"},"content":"        Storage storage \u003d new Storage(\"\");","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"AlyssaPng"},"content":"        String test4 \u003d \"T | 1 |\";","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"AlyssaPng"},"content":"        assertThrows(EmptyTaskException.class, () -\u003e storage.loadData(test4));","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"AlyssaPng"},"content":"        String test5 \u003d \"D | 0 | return book |\";","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"AlyssaPng"},"content":"        assertThrows(EmptyDateException.class, () -\u003e storage.loadData(test5));","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"AlyssaPng"},"content":"        String test6 \u003d \"E | 0 | project meeting | Aug 6th 2pm | \";","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"AlyssaPng"},"content":"        assertThrows(NoEndDateException.class, () -\u003e storage.loadData(test6));","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AlyssaPng":76}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"import duke.exception.EmptyDateException;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"import duke.exception.EmptyTaskException;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"import duke.exception.NoEndDateException;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":" * The {@code TaskListTest} class contains JUnit tests for the {@link TaskList} class.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":" * It tests the functionality of managing tasks in the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"AlyssaPng"},"content":"     * Tests adding tasks to the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"     * @throws DukeException If there is an issue with the creation of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"AlyssaPng"},"content":"    public void testAddTask() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"AlyssaPng"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"AlyssaPng"},"content":"        String test1 \u003d \"todo Buy groceries\";","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"AlyssaPng"},"content":"        String output1 \u003d \"Got it. I\u0027ve added this task:\\n \" + \"[T][ ] Buy groceries\"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"AlyssaPng"},"content":"                + \"\\nNow you have 1 tasks in the list.\";","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"AlyssaPng"},"content":"        assertEquals(output1, taskList.addTask(test1));","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"AlyssaPng"},"content":"        String test2 \u003d \"deadline Finish project /by 2023-12-31 1800\";","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"AlyssaPng"},"content":"        String output2 \u003d \"Got it. I\u0027ve added this task:\\n \" + \"[D][ ] Finish project (by: Dec 31 2023 6pm)\"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"AlyssaPng"},"content":"                + \"\\nNow you have 2 tasks in the list.\";","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"AlyssaPng"},"content":"        assertEquals(output2, taskList.addTask(test2));","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"AlyssaPng"},"content":"        String test3 \u003d \"todo\";","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"AlyssaPng"},"content":"        assertThrows(EmptyTaskException.class, () -\u003e taskList.addTask(test3));","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"AlyssaPng"},"content":"        String test4 \u003d \"dealine Finish Meeting /by\";","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"AlyssaPng"},"content":"        assertThrows(EmptyDateException.class, () -\u003e taskList.addTask(test4));","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"AlyssaPng"},"content":"        String test5 \u003d \"event Meeting /from Mon 2pm\";","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"AlyssaPng"},"content":"        assertThrows(NoEndDateException.class, () -\u003e taskList.addTask(test5));","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AlyssaPng":50}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"todo","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"todo borrow book","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"deadline finish work /by","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":"deadline return book /by 2/12/2019 1800","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"event project meeting /from","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"event project meeting /from Mon 2pm /to","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"event project meeting /from 2019-10-15 1400 /to 4pm","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"mark 4","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"unmark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"unmark 4","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"delete 2","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"delete 3","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"find","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"AlyssaPng"},"content":"find","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"find sports","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"find project meeting","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"AlyssaPng"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"AlyssaPng":25}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"AlyssaPng":2,"-":19}}]
