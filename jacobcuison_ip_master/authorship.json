[{"path":"src/main/java/Max.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jacobcuison"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"jacobcuison"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"jacobcuison"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"jacobcuison"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"jacobcuison"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jacobcuison"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jacobcuison"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"jacobcuison"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"jacobcuison"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"jacobcuison"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"jacobcuison"},"content":"public class Max {","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"jacobcuison"},"content":"    private static String line \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"jacobcuison"},"content":"    private static ArrayList\u003cTask\u003e myList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"jacobcuison"},"content":"    private static int numOfItems \u003d 0;","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"jacobcuison"},"content":"    public static class Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"jacobcuison"},"content":"        private String item;","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"jacobcuison"},"content":"        private boolean done;","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"jacobcuison"},"content":"        public Task(String item) {","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"jacobcuison"},"content":"            this.item \u003d item;","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"jacobcuison"},"content":"            this.done \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"jacobcuison"},"content":"        private void mark() {","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"jacobcuison"},"content":"            this.done \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"jacobcuison"},"content":"            System.out.println(\"     Good job on completing your task!\");","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"jacobcuison"},"content":"            System.out.println(\"       \" + this);","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"jacobcuison"},"content":"            System.out.println(Max.line);","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"jacobcuison"},"content":"        private void unmark() {","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"jacobcuison"},"content":"            this.done \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"jacobcuison"},"content":"            System.out.println(\"     Okay, I\u0027ve marked this as not done yet!\");","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"jacobcuison"},"content":"            System.out.println(\"       \" + this);","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"jacobcuison"},"content":"            System.out.println(Max.line);","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"jacobcuison"},"content":"        @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"jacobcuison"},"content":"        public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"jacobcuison"},"content":"            String doneStatus \u003d this.done ? \"X\" : \" \";","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"jacobcuison"},"content":"            return \"[\" + doneStatus + \"] \" + item;","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"jacobcuison"},"content":"    public static class Todo extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"jacobcuison"},"content":"        public Todo(String item) {","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"jacobcuison"},"content":"            super(item);","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"jacobcuison"},"content":"        @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"jacobcuison"},"content":"        public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"jacobcuison"},"content":"            return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-21"},{"lineNumber":51,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"jacobcuison"},"content":"    public static class Deadline extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"jacobcuison"},"content":"        private LocalDate byDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"jacobcuison"},"content":"        public Deadline(String item, LocalDate byDate) {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"jacobcuison"},"content":"            super(item);","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"jacobcuison"},"content":"            this.byDate \u003d byDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"jacobcuison"},"content":"        @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"jacobcuison"},"content":"        public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":61,"author":{"gitId":"jacobcuison"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + byDate.toString() + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":63,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":64,"author":{"gitId":"jacobcuison"},"content":"    public static class Event extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":65,"author":{"gitId":"jacobcuison"},"content":"        private LocalDate fromDate, toDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"jacobcuison"},"content":"        public Event(String item, LocalDate fromDate, LocalDate toDate) {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"jacobcuison"},"content":"            super(item);","lastModifiedDate":"2023-08-21"},{"lineNumber":68,"author":{"gitId":"jacobcuison"},"content":"            this.fromDate \u003d fromDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"jacobcuison"},"content":"            this.toDate \u003d toDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":71,"author":{"gitId":"jacobcuison"},"content":"        @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":72,"author":{"gitId":"jacobcuison"},"content":"        public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":73,"author":{"gitId":"jacobcuison"},"content":"            return \"[E]\" + super.toString() + \" (from: \" + fromDate.toString() + \" to: \" + toDate.toString() +\")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":75,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":76,"author":{"gitId":"jacobcuison"},"content":"    public static class MaxException extends Exception {","lastModifiedDate":"2023-08-21"},{"lineNumber":77,"author":{"gitId":"jacobcuison"},"content":"        public MaxException(String msg) {","lastModifiedDate":"2023-08-21"},{"lineNumber":78,"author":{"gitId":"jacobcuison"},"content":"            super(msg);","lastModifiedDate":"2023-08-21"},{"lineNumber":79,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":80,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":81,"author":{"gitId":"jacobcuison"},"content":"    public static void greet() {","lastModifiedDate":"2023-08-20"},{"lineNumber":82,"author":{"gitId":"jacobcuison"},"content":"        System.out.println(\"     Hello from\");","lastModifiedDate":"2023-08-21"},{"lineNumber":83,"author":{"gitId":"jacobcuison"},"content":"        System.out.println(\"       /\\\\/\\\\   __ ___  __\");","lastModifiedDate":"2023-08-21"},{"lineNumber":84,"author":{"gitId":"jacobcuison"},"content":"        System.out.println(\"      /    \\\\ / _` \\\\ \\\\/ /\");","lastModifiedDate":"2023-08-21"},{"lineNumber":85,"author":{"gitId":"jacobcuison"},"content":"        System.out.println(\"     / /\\\\/\\\\ \\\\ (_| |\u003e  \u003c\");","lastModifiedDate":"2023-08-21"},{"lineNumber":86,"author":{"gitId":"jacobcuison"},"content":"        System.out.println(\"     \\\\/    \\\\/\\\\__,_/_/\\\\_\\\\\");","lastModifiedDate":"2023-08-21"},{"lineNumber":87,"author":{"gitId":"jacobcuison"},"content":"        System.out.println(\"     How may I assist you?\");","lastModifiedDate":"2023-08-21"},{"lineNumber":88,"author":{"gitId":"jacobcuison"},"content":"        System.out.println(Max.line);","lastModifiedDate":"2023-08-20"},{"lineNumber":89,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":90,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":91,"author":{"gitId":"jacobcuison"},"content":"    public static void add(String task) throws MaxException {","lastModifiedDate":"2023-08-21"},{"lineNumber":92,"author":{"gitId":"jacobcuison"},"content":"        // Parse command based on type of task (Todo, Deadline, Event)","lastModifiedDate":"2023-08-21"},{"lineNumber":93,"author":{"gitId":"jacobcuison"},"content":"        if (task.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":94,"author":{"gitId":"jacobcuison"},"content":"            // Error checking: empty fields","lastModifiedDate":"2023-08-21"},{"lineNumber":95,"author":{"gitId":"jacobcuison"},"content":"            if (task.length() \u003c 6) {","lastModifiedDate":"2023-08-21"},{"lineNumber":96,"author":{"gitId":"jacobcuison"},"content":"                throw new MaxException(\"     Watch out -- todo description cannot be empty.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":97,"author":{"gitId":"jacobcuison"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":98,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":99,"author":{"gitId":"jacobcuison"},"content":"            String description \u003d task.substring(5).trim();","lastModifiedDate":"2023-08-21"},{"lineNumber":100,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":101,"author":{"gitId":"jacobcuison"},"content":"            Max.myList.add(new Todo(description));","lastModifiedDate":"2023-08-21"},{"lineNumber":102,"author":{"gitId":"jacobcuison"},"content":"        } else if (task.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":103,"author":{"gitId":"jacobcuison"},"content":"            int byIndex \u003d task.indexOf(\"/by\");","lastModifiedDate":"2023-08-21"},{"lineNumber":104,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":105,"author":{"gitId":"jacobcuison"},"content":"            // Error checking: no /by tag","lastModifiedDate":"2023-08-21"},{"lineNumber":106,"author":{"gitId":"jacobcuison"},"content":"            if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2023-08-21"},{"lineNumber":107,"author":{"gitId":"jacobcuison"},"content":"                throw new MaxException(\"     Try again... deadline must include a \u0027/by\u0027 tag!\");","lastModifiedDate":"2023-08-21"},{"lineNumber":108,"author":{"gitId":"jacobcuison"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":109,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":110,"author":{"gitId":"jacobcuison"},"content":"            String item \u003d task.substring(8, byIndex - 1).trim();","lastModifiedDate":"2023-08-21"},{"lineNumber":111,"author":{"gitId":"jacobcuison"},"content":"            String by \u003d task.substring(byIndex + 3).trim();","lastModifiedDate":"2023-08-21"},{"lineNumber":112,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":113,"author":{"gitId":"jacobcuison"},"content":"            LocalDate byDate \u003d LocalDate.parse(by);","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"jacobcuison"},"content":"            // Error checking: empty fields","lastModifiedDate":"2023-08-21"},{"lineNumber":116,"author":{"gitId":"jacobcuison"},"content":"            if (item.isEmpty() || by.isEmpty()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":117,"author":{"gitId":"jacobcuison"},"content":"                throw new MaxException(\"     Oops... Deadline item or \u0027by\u0027 date cannot be empty.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":118,"author":{"gitId":"jacobcuison"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":119,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":120,"author":{"gitId":"jacobcuison"},"content":"            Max.myList.add(new Deadline(item, byDate));","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"jacobcuison"},"content":"        } else if (task.startsWith(\"event\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":122,"author":{"gitId":"jacobcuison"},"content":"            int fromIndex \u003d task.indexOf(\"/from\");","lastModifiedDate":"2023-08-21"},{"lineNumber":123,"author":{"gitId":"jacobcuison"},"content":"            int toIndex \u003d task.indexOf(\"/to\");","lastModifiedDate":"2023-08-21"},{"lineNumber":124,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":125,"author":{"gitId":"jacobcuison"},"content":"            // Error checking: no /from or /to tag","lastModifiedDate":"2023-08-21"},{"lineNumber":126,"author":{"gitId":"jacobcuison"},"content":"            if (fromIndex \u003d\u003d -1 || toIndex \u003d\u003d -1) {","lastModifiedDate":"2023-08-21"},{"lineNumber":127,"author":{"gitId":"jacobcuison"},"content":"                throw new MaxException(\"     Hey! Event must contain \u0027/from\u0027 and \u0027/to\u0027 tags.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":128,"author":{"gitId":"jacobcuison"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":129,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":130,"author":{"gitId":"jacobcuison"},"content":"            String item \u003d task.substring(5, fromIndex - 1).trim();","lastModifiedDate":"2023-08-21"},{"lineNumber":131,"author":{"gitId":"jacobcuison"},"content":"            String from \u003d task.substring(fromIndex + 5, toIndex -1).trim();","lastModifiedDate":"2023-08-21"},{"lineNumber":132,"author":{"gitId":"jacobcuison"},"content":"            String to \u003d task.substring(toIndex + 3).trim();","lastModifiedDate":"2023-08-21"},{"lineNumber":133,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":134,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"jacobcuison"},"content":"            LocalDate fromDate \u003d LocalDate.parse(from);","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"jacobcuison"},"content":"            LocalDate toDate \u003d LocalDate.parse(to);","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"jacobcuison"},"content":"            // Error checking: empty fields","lastModifiedDate":"2023-08-21"},{"lineNumber":139,"author":{"gitId":"jacobcuison"},"content":"            if (item.isEmpty() || from.isEmpty() || to.isEmpty()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":140,"author":{"gitId":"jacobcuison"},"content":"                throw new MaxException(\"     Oh no! Event item, \u0027from\u0027 date, or \u0027to\u0027 date cannot be empty.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":141,"author":{"gitId":"jacobcuison"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":142,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":143,"author":{"gitId":"jacobcuison"},"content":"            Max.myList.add(new Event(item, fromDate, toDate));","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":145,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":146,"author":{"gitId":"jacobcuison"},"content":"        // Visual feedback from chatbot","lastModifiedDate":"2023-08-21"},{"lineNumber":147,"author":{"gitId":"jacobcuison"},"content":"        System.out.println(\"     I gotchu. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":148,"author":{"gitId":"jacobcuison"},"content":"        System.out.println(\"       \" + Max.myList.get(numOfItems));","lastModifiedDate":"2023-08-21"},{"lineNumber":149,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":150,"author":{"gitId":"jacobcuison"},"content":"        // Increment pointer","lastModifiedDate":"2023-08-21"},{"lineNumber":151,"author":{"gitId":"jacobcuison"},"content":"        numOfItems++;","lastModifiedDate":"2023-08-21"},{"lineNumber":152,"author":{"gitId":"jacobcuison"},"content":"        if (numOfItems \u003d\u003d 1) {","lastModifiedDate":"2023-08-21"},{"lineNumber":153,"author":{"gitId":"jacobcuison"},"content":"            System.out.println(\"     Now you have 1 task in the list.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":154,"author":{"gitId":"jacobcuison"},"content":"        } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":155,"author":{"gitId":"jacobcuison"},"content":"            System.out.println(\"     Now you have \" + numOfItems + \" tasks in the list.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":156,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":157,"author":{"gitId":"jacobcuison"},"content":"        System.out.println(Max.line);","lastModifiedDate":"2023-08-21"},{"lineNumber":158,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":159,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":160,"author":{"gitId":"jacobcuison"},"content":"    public static void list() {","lastModifiedDate":"2023-08-21"},{"lineNumber":161,"author":{"gitId":"jacobcuison"},"content":"        System.out.println(\"     Here are all your tasks:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":162,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":163,"author":{"gitId":"jacobcuison"},"content":"        // Iterate through ArrayList of tasks and enumerate them","lastModifiedDate":"2023-08-21"},{"lineNumber":164,"author":{"gitId":"jacobcuison"},"content":"        for (int i \u003d 0; i \u003c numOfItems; i++) {","lastModifiedDate":"2023-08-21"},{"lineNumber":165,"author":{"gitId":"jacobcuison"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2023-08-21"},{"lineNumber":166,"author":{"gitId":"jacobcuison"},"content":"            System.out.println(\"     \" + index + \". \" + myList.get(i));","lastModifiedDate":"2023-08-21"},{"lineNumber":167,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":168,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":169,"author":{"gitId":"jacobcuison"},"content":"        System.out.println(Max.line);","lastModifiedDate":"2023-08-21"},{"lineNumber":170,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":171,"author":{"gitId":"jacobcuison"},"content":"    public static void delete(int taskNumber) throws MaxException {","lastModifiedDate":"2023-08-21"},{"lineNumber":172,"author":{"gitId":"jacobcuison"},"content":"        if (taskNumber \u003e numOfItems) {","lastModifiedDate":"2023-08-21"},{"lineNumber":173,"author":{"gitId":"jacobcuison"},"content":"            throw new MaxException(\"     Seems like that number is out of range. Check again!\");","lastModifiedDate":"2023-08-21"},{"lineNumber":174,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":175,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":176,"author":{"gitId":"jacobcuison"},"content":"        Task toDelete \u003d myList.get(taskNumber - 1);","lastModifiedDate":"2023-08-21"},{"lineNumber":177,"author":{"gitId":"jacobcuison"},"content":"        myList.remove(toDelete);","lastModifiedDate":"2023-08-21"},{"lineNumber":178,"author":{"gitId":"jacobcuison"},"content":"        numOfItems--;","lastModifiedDate":"2023-08-21"},{"lineNumber":179,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":180,"author":{"gitId":"jacobcuison"},"content":"        // Visual feedback","lastModifiedDate":"2023-08-21"},{"lineNumber":181,"author":{"gitId":"jacobcuison"},"content":"        System.out.println(\"     Alright. I have removed this task:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":182,"author":{"gitId":"jacobcuison"},"content":"        System.out.println(\"       \" + toDelete);","lastModifiedDate":"2023-08-21"},{"lineNumber":183,"author":{"gitId":"jacobcuison"},"content":"        if (numOfItems \u003d\u003d 1) {","lastModifiedDate":"2023-08-21"},{"lineNumber":184,"author":{"gitId":"jacobcuison"},"content":"            System.out.println(\"     Now you have 1 task left.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":185,"author":{"gitId":"jacobcuison"},"content":"        } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":186,"author":{"gitId":"jacobcuison"},"content":"            System.out.println(\"     Now you have \" + numOfItems + \" tasks left.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":187,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":188,"author":{"gitId":"jacobcuison"},"content":"        System.out.println(Max.line);","lastModifiedDate":"2023-08-20"},{"lineNumber":189,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":190,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":191,"author":{"gitId":"jacobcuison"},"content":"    public static void exit() {","lastModifiedDate":"2023-08-20"},{"lineNumber":192,"author":{"gitId":"jacobcuison"},"content":"        System.out.println(\"     Bye! Please come again!\");","lastModifiedDate":"2023-08-20"},{"lineNumber":193,"author":{"gitId":"jacobcuison"},"content":"        System.out.println(Max.line);","lastModifiedDate":"2023-08-20"},{"lineNumber":194,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":195,"author":{"gitId":"jacobcuison"},"content":"    public static enum Command {","lastModifiedDate":"2023-08-21"},{"lineNumber":196,"author":{"gitId":"jacobcuison"},"content":"        LIST, MARK, UNMARK, BYE, ADD, DELETE, UNKNOWN","lastModifiedDate":"2023-08-21"},{"lineNumber":197,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":198,"author":{"gitId":"jacobcuison"},"content":"    public static void writeToFile() {","lastModifiedDate":"2023-08-29"},{"lineNumber":199,"author":{"gitId":"jacobcuison"},"content":"        // Save the task list to the system upon change","lastModifiedDate":"2023-08-29"},{"lineNumber":200,"author":{"gitId":"jacobcuison"},"content":"        File file \u003d new File(\"./data/max.txt\");","lastModifiedDate":"2023-08-29"},{"lineNumber":201,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":202,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":203,"author":{"gitId":"jacobcuison"},"content":"        File dataDirectory \u003d new File(\"./data/\");","lastModifiedDate":"2023-08-29"},{"lineNumber":204,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":205,"author":{"gitId":"jacobcuison"},"content":"        // Handle case where the data file doesn\u0027t exist at the start","lastModifiedDate":"2023-08-29"},{"lineNumber":206,"author":{"gitId":"jacobcuison"},"content":"        if (!dataDirectory.exists()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":207,"author":{"gitId":"jacobcuison"},"content":"            dataDirectory.mkdirs(); // Create the directory if it doesn\u0027t exist","lastModifiedDate":"2023-08-29"},{"lineNumber":208,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":209,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":210,"author":{"gitId":"jacobcuison"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":211,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":212,"author":{"gitId":"jacobcuison"},"content":"            FileWriter fileWriter \u003d new FileWriter(file);","lastModifiedDate":"2023-08-29"},{"lineNumber":213,"author":{"gitId":"jacobcuison"},"content":"            BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);","lastModifiedDate":"2023-08-29"},{"lineNumber":214,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":215,"author":{"gitId":"jacobcuison"},"content":"            // Write tasks to file","lastModifiedDate":"2023-08-29"},{"lineNumber":216,"author":{"gitId":"jacobcuison"},"content":"            for (int i \u003d 0; i \u003c numOfItems; i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":217,"author":{"gitId":"jacobcuison"},"content":"                int index \u003d i + 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":218,"author":{"gitId":"jacobcuison"},"content":"                bufferedWriter.write(index + \". \" + myList.get(i));","lastModifiedDate":"2023-08-29"},{"lineNumber":219,"author":{"gitId":"jacobcuison"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":220,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":221,"author":{"gitId":"jacobcuison"},"content":"            // Close the writer","lastModifiedDate":"2023-08-29"},{"lineNumber":222,"author":{"gitId":"jacobcuison"},"content":"            bufferedWriter.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":223,"author":{"gitId":"jacobcuison"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":224,"author":{"gitId":"jacobcuison"},"content":"            System.err.println(\"Uh oh! There was an error writing to file: \" + e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":225,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":226,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":227,"author":{"gitId":"jacobcuison"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-20"},{"lineNumber":228,"author":{"gitId":"jacobcuison"},"content":"        Max.greet();","lastModifiedDate":"2023-08-20"},{"lineNumber":229,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":230,"author":{"gitId":"jacobcuison"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-20"},{"lineNumber":231,"author":{"gitId":"jacobcuison"},"content":"        boolean scannerOpen \u003d true;","lastModifiedDate":"2023-08-20"},{"lineNumber":232,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":233,"author":{"gitId":"jacobcuison"},"content":"        // User is interacting with chatbot","lastModifiedDate":"2023-08-20"},{"lineNumber":234,"author":{"gitId":"jacobcuison"},"content":"        while (scannerOpen) {","lastModifiedDate":"2023-08-20"},{"lineNumber":235,"author":{"gitId":"jacobcuison"},"content":"            String userInput \u003d input.nextLine();","lastModifiedDate":"2023-08-21"},{"lineNumber":236,"author":{"gitId":"jacobcuison"},"content":"            String command \u003d userInput.split(\" \")[0];","lastModifiedDate":"2023-08-21"},{"lineNumber":237,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":238,"author":{"gitId":"jacobcuison"},"content":"            // Initialise enum type for Command","lastModifiedDate":"2023-08-21"},{"lineNumber":239,"author":{"gitId":"jacobcuison"},"content":"            Command commandEnum;","lastModifiedDate":"2023-08-21"},{"lineNumber":240,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":241,"author":{"gitId":"jacobcuison"},"content":"            try {","lastModifiedDate":"2023-08-21"},{"lineNumber":242,"author":{"gitId":"jacobcuison"},"content":"                if (command.equals(\"bye\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":243,"author":{"gitId":"jacobcuison"},"content":"                    // User wants to exit the chatbot","lastModifiedDate":"2023-08-21"},{"lineNumber":244,"author":{"gitId":"jacobcuison"},"content":"                    commandEnum \u003d Command.BYE;","lastModifiedDate":"2023-08-21"},{"lineNumber":245,"author":{"gitId":"jacobcuison"},"content":"                } else if (command.equals(\"list\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":246,"author":{"gitId":"jacobcuison"},"content":"                    commandEnum \u003d Command.LIST;","lastModifiedDate":"2023-08-21"},{"lineNumber":247,"author":{"gitId":"jacobcuison"},"content":"                } else if (command.contains(\"unmark\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":248,"author":{"gitId":"jacobcuison"},"content":"                    commandEnum \u003d Command.UNMARK;","lastModifiedDate":"2023-08-21"},{"lineNumber":249,"author":{"gitId":"jacobcuison"},"content":"                } else if (command.contains(\"mark\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":250,"author":{"gitId":"jacobcuison"},"content":"                    commandEnum \u003d Command.MARK;","lastModifiedDate":"2023-08-21"},{"lineNumber":251,"author":{"gitId":"jacobcuison"},"content":"                } else if (command.contains(\"event\") || command.contains(\"todo\") ||","lastModifiedDate":"2023-08-21"},{"lineNumber":252,"author":{"gitId":"jacobcuison"},"content":"                    command.contains(\"deadline\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":253,"author":{"gitId":"jacobcuison"},"content":"                    commandEnum \u003d Command.ADD;","lastModifiedDate":"2023-08-21"},{"lineNumber":254,"author":{"gitId":"jacobcuison"},"content":"                } else if (command.contains(\"delete\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":255,"author":{"gitId":"jacobcuison"},"content":"                    commandEnum \u003d Command.DELETE;","lastModifiedDate":"2023-08-21"},{"lineNumber":256,"author":{"gitId":"jacobcuison"},"content":"                } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":257,"author":{"gitId":"jacobcuison"},"content":"                    commandEnum \u003d Command.UNKNOWN;","lastModifiedDate":"2023-08-21"},{"lineNumber":258,"author":{"gitId":"jacobcuison"},"content":"                }","lastModifiedDate":"2023-08-21"},{"lineNumber":259,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":260,"author":{"gitId":"jacobcuison"},"content":"                switch (commandEnum) {","lastModifiedDate":"2023-08-21"},{"lineNumber":261,"author":{"gitId":"jacobcuison"},"content":"                    case BYE:","lastModifiedDate":"2023-08-21"},{"lineNumber":262,"author":{"gitId":"jacobcuison"},"content":"                        scannerOpen \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":263,"author":{"gitId":"jacobcuison"},"content":"                        break;","lastModifiedDate":"2023-08-21"},{"lineNumber":264,"author":{"gitId":"jacobcuison"},"content":"                    case LIST:","lastModifiedDate":"2023-08-21"},{"lineNumber":265,"author":{"gitId":"jacobcuison"},"content":"                        Max.list();","lastModifiedDate":"2023-08-21"},{"lineNumber":266,"author":{"gitId":"jacobcuison"},"content":"                        break;","lastModifiedDate":"2023-08-21"},{"lineNumber":267,"author":{"gitId":"jacobcuison"},"content":"                    case ADD:","lastModifiedDate":"2023-08-21"},{"lineNumber":268,"author":{"gitId":"jacobcuison"},"content":"                        Max.add(userInput);","lastModifiedDate":"2023-08-21"},{"lineNumber":269,"author":{"gitId":"jacobcuison"},"content":"                        break;","lastModifiedDate":"2023-08-21"},{"lineNumber":270,"author":{"gitId":"jacobcuison"},"content":"                    case UNMARK:","lastModifiedDate":"2023-08-21"},{"lineNumber":271,"author":{"gitId":"jacobcuison"},"content":"                        int unmarkNumber \u003d parseInt(userInput.substring(7));","lastModifiedDate":"2023-08-21"},{"lineNumber":272,"author":{"gitId":"jacobcuison"},"content":"                        myList.get(unmarkNumber - 1).unmark();","lastModifiedDate":"2023-08-21"},{"lineNumber":273,"author":{"gitId":"jacobcuison"},"content":"                        break;","lastModifiedDate":"2023-08-21"},{"lineNumber":274,"author":{"gitId":"jacobcuison"},"content":"                    case MARK:","lastModifiedDate":"2023-08-21"},{"lineNumber":275,"author":{"gitId":"jacobcuison"},"content":"                        int markNumber \u003d parseInt(userInput.substring(5));","lastModifiedDate":"2023-08-21"},{"lineNumber":276,"author":{"gitId":"jacobcuison"},"content":"                        myList.get(markNumber - 1).mark();","lastModifiedDate":"2023-08-21"},{"lineNumber":277,"author":{"gitId":"jacobcuison"},"content":"                        break;","lastModifiedDate":"2023-08-21"},{"lineNumber":278,"author":{"gitId":"jacobcuison"},"content":"                    case DELETE:","lastModifiedDate":"2023-08-21"},{"lineNumber":279,"author":{"gitId":"jacobcuison"},"content":"                        int deleteNumber \u003d parseInt(userInput.substring(7));","lastModifiedDate":"2023-08-21"},{"lineNumber":280,"author":{"gitId":"jacobcuison"},"content":"                        Max.delete(deleteNumber);","lastModifiedDate":"2023-08-21"},{"lineNumber":281,"author":{"gitId":"jacobcuison"},"content":"                        break;","lastModifiedDate":"2023-08-21"},{"lineNumber":282,"author":{"gitId":"jacobcuison"},"content":"                    case UNKNOWN:","lastModifiedDate":"2023-08-21"},{"lineNumber":283,"author":{"gitId":"jacobcuison"},"content":"                        throw new MaxException(\"     Oh no! I cannot recognise that command.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":284,"author":{"gitId":"jacobcuison"},"content":"                    default:","lastModifiedDate":"2023-08-21"},{"lineNumber":285,"author":{"gitId":"jacobcuison"},"content":"                        break;","lastModifiedDate":"2023-08-21"},{"lineNumber":286,"author":{"gitId":"jacobcuison"},"content":"                }","lastModifiedDate":"2023-08-21"},{"lineNumber":287,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":288,"author":{"gitId":"jacobcuison"},"content":"                writeToFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":289,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":290,"author":{"gitId":"jacobcuison"},"content":"            } catch (MaxException e) {","lastModifiedDate":"2023-08-21"},{"lineNumber":291,"author":{"gitId":"jacobcuison"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-21"},{"lineNumber":292,"author":{"gitId":"jacobcuison"},"content":"                System.out.println(Max.line);","lastModifiedDate":"2023-08-21"},{"lineNumber":293,"author":{"gitId":"jacobcuison"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":294,"author":{"gitId":"jacobcuison"},"content":"                System.out.println(\"Please use yyyy-mm-dd format!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":295,"author":{"gitId":"jacobcuison"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":296,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":297,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":298,"author":{"gitId":"jacobcuison"},"content":"        // User has exited the chatbot","lastModifiedDate":"2023-08-20"},{"lineNumber":299,"author":{"gitId":"jacobcuison"},"content":"        input.close();","lastModifiedDate":"2023-08-20"},{"lineNumber":300,"author":{"gitId":"jacobcuison"},"content":"        Max.exit();","lastModifiedDate":"2023-08-20"},{"lineNumber":301,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":302,"author":{"gitId":"jacobcuison"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"jacobcuison":302}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jacobcuison"},"content":"todo meal prep","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"jacobcuison"},"content":"deadline cook chicken /by 6pm","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"jacobcuison"},"content":"event dinner /from 6.30pm /to 7.30pm","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"jacobcuison"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"jacobcuison"},"content":"mark 1","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"jacobcuison"},"content":"mark 2","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"jacobcuison"},"content":"mark 3","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"jacobcuison"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"jacobcuison"},"content":"todo","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"jacobcuison"},"content":"deadline","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"jacobcuison"},"content":"event","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"jacobcuison"},"content":"deadline bake rice /by","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"jacobcuison"},"content":"deadline /by 2pm","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"jacobcuison"},"content":"event /from","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"jacobcuison"},"content":"event /to","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"jacobcuison"},"content":"event /from /to","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"jacobcuison"},"content":"event class /from /to","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"jacobcuison"},"content":"event class /from 12pm /to","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"jacobcuison"},"content":"event class /from /to 12pm","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"jacobcuison"},"content":"remove 10","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"jacobcuison"},"content":"delete 10","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"jacobcuison"},"content":"delete 2","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"jacobcuison"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"jacobcuison"},"content":"bye","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"jacobcuison":24}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"jacobcuison"},"content":"java -classpath ..\\bin Max \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jacobcuison":1,"-":20}}]
