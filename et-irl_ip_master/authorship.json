[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"et-irl"},"content":"# BauBauBot","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"et-irl"},"content":"BauBauBot is a Java-based chatbot that helps you keep track of your to-dos, deadlines, and events. With BauBauBot, you can easily manage your tasks and stay organized. ü§ñ","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"et-irl"},"content":"## User Guide","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"et-irl"},"content":"You can access the user guide [here](https://et-irl.github.io/ip/)!","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"et-irl"},"content":"## Getting Started","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"et-irl"},"content":"To use BauBauBot, follow these simple steps:","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"et-irl"},"content":"1. **Download the JAR File**: You can download the JAR file for BauBauBot from the latest releases from [here](https://github.com/et-irl/ip/releases).","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"et-irl"},"content":"2. **Run the JAR File**: After downloading the JAR file, open your command terminal and navigate to the directory where the JAR file is located. Use the following command to run BauBauBot:","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"et-irl"},"content":"   java -jar taskbot.jar","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"et-irl"},"content":"   This will launch BauBauBot, and you can start interacting with it right away. üöÄ","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"et-irl"},"content":"## Commands","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"et-irl"},"content":"BauBauBot understands a variety of commands to help you manage your tasks. Here are some of the key commands:","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"et-irl"},"content":"- üìÖ **Add a Deadline**: You can add a deadline task using the following command or its alias:","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"et-irl"},"content":"  ","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"et-irl"},"content":"  ```","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"et-irl"},"content":"  deadline [NAME] /by [TIME]","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"et-irl"},"content":"  ```","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"et-irl"},"content":"  Alias: `d` ","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":35,"author":{"gitId":"et-irl"},"content":"- üìÜ **Add an Event**: To add an event task, use the following command or its alias:","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"et-irl"},"content":"  ","lastModifiedDate":"2023-09-11"},{"lineNumber":37,"author":{"gitId":"et-irl"},"content":"  ```","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"et-irl"},"content":"  event [NAME] /from [START TIME] /to [END TIME]","lastModifiedDate":"2023-09-11"},{"lineNumber":39,"author":{"gitId":"et-irl"},"content":"  ```","lastModifiedDate":"2023-09-11"},{"lineNumber":40,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"et-irl"},"content":"  Alias: `e`","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":43,"author":{"gitId":"et-irl"},"content":"- ‚úÖ **Add a To-Do**: Add a simple to-do task with this command or its alias:","lastModifiedDate":"2023-09-11"},{"lineNumber":44,"author":{"gitId":"et-irl"},"content":"  ","lastModifiedDate":"2023-09-11"},{"lineNumber":45,"author":{"gitId":"et-irl"},"content":"  ```","lastModifiedDate":"2023-09-11"},{"lineNumber":46,"author":{"gitId":"et-irl"},"content":"  todo [NAME]","lastModifiedDate":"2023-09-11"},{"lineNumber":47,"author":{"gitId":"et-irl"},"content":"  ```","lastModifiedDate":"2023-09-11"},{"lineNumber":48,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":49,"author":{"gitId":"et-irl"},"content":"  Alias: `t`","lastModifiedDate":"2023-09-11"},{"lineNumber":50,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":51,"author":{"gitId":"et-irl"},"content":"- üóëÔ∏è **Delete a Task**: Remove a task from your list using this command or its alias:","lastModifiedDate":"2023-09-11"},{"lineNumber":52,"author":{"gitId":"et-irl"},"content":"  ","lastModifiedDate":"2023-09-11"},{"lineNumber":53,"author":{"gitId":"et-irl"},"content":"  ```","lastModifiedDate":"2023-09-11"},{"lineNumber":54,"author":{"gitId":"et-irl"},"content":"  delete [TASK NUMBER]","lastModifiedDate":"2023-09-11"},{"lineNumber":55,"author":{"gitId":"et-irl"},"content":"  ```","lastModifiedDate":"2023-09-11"},{"lineNumber":56,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":57,"author":{"gitId":"et-irl"},"content":"  Alias: `rm`","lastModifiedDate":"2023-09-11"},{"lineNumber":58,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":59,"author":{"gitId":"et-irl"},"content":"- üîç **Find Tasks**: To search for tasks that match a partial search term in their names, use this command or its alias:","lastModifiedDate":"2023-09-11"},{"lineNumber":60,"author":{"gitId":"et-irl"},"content":"  ","lastModifiedDate":"2023-09-11"},{"lineNumber":61,"author":{"gitId":"et-irl"},"content":"  ```","lastModifiedDate":"2023-09-11"},{"lineNumber":62,"author":{"gitId":"et-irl"},"content":"  find [PARTIAL SEARCH TERM]","lastModifiedDate":"2023-09-11"},{"lineNumber":63,"author":{"gitId":"et-irl"},"content":"  ```","lastModifiedDate":"2023-09-11"},{"lineNumber":64,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":65,"author":{"gitId":"et-irl"},"content":"  Alias: `f`","lastModifiedDate":"2023-09-11"},{"lineNumber":66,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":67,"author":{"gitId":"et-irl"},"content":"- üìã **List Tasks**: View all your tasks with this command or its alias:","lastModifiedDate":"2023-09-11"},{"lineNumber":68,"author":{"gitId":"et-irl"},"content":"  ","lastModifiedDate":"2023-09-11"},{"lineNumber":69,"author":{"gitId":"et-irl"},"content":"  ```","lastModifiedDate":"2023-09-11"},{"lineNumber":70,"author":{"gitId":"et-irl"},"content":"  list","lastModifiedDate":"2023-09-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2020-05-25"},{"lineNumber":72,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":73,"author":{"gitId":"et-irl"},"content":"  Alias: `ls`","lastModifiedDate":"2023-09-11"},{"lineNumber":74,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":75,"author":{"gitId":"et-irl"},"content":"- ‚úÖ **Mark Task as Done**: Mark a task as completed with this command or its alias:","lastModifiedDate":"2023-09-11"},{"lineNumber":76,"author":{"gitId":"et-irl"},"content":"  ","lastModifiedDate":"2023-09-11"},{"lineNumber":77,"author":{"gitId":"et-irl"},"content":"  ```","lastModifiedDate":"2023-09-11"},{"lineNumber":78,"author":{"gitId":"et-irl"},"content":"  mark [TASK NUMBER]","lastModifiedDate":"2023-09-11"},{"lineNumber":79,"author":{"gitId":"et-irl"},"content":"  ```","lastModifiedDate":"2023-09-11"},{"lineNumber":80,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":81,"author":{"gitId":"et-irl"},"content":"  Alias: `m`","lastModifiedDate":"2023-09-11"},{"lineNumber":82,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":83,"author":{"gitId":"et-irl"},"content":"- ‚ùå **Mark Task as Undone**: Reverse a completed task to its undone status with this command or its alias:","lastModifiedDate":"2023-09-11"},{"lineNumber":84,"author":{"gitId":"et-irl"},"content":"  ","lastModifiedDate":"2023-09-11"},{"lineNumber":85,"author":{"gitId":"et-irl"},"content":"  ```","lastModifiedDate":"2023-09-11"},{"lineNumber":86,"author":{"gitId":"et-irl"},"content":"  unmark [TASK NUMBER]","lastModifiedDate":"2023-09-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2020-05-25"},{"lineNumber":88,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":89,"author":{"gitId":"et-irl"},"content":"  Alias: `um`","lastModifiedDate":"2023-09-11"},{"lineNumber":90,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":91,"author":{"gitId":"et-irl"},"content":"## Development","lastModifiedDate":"2023-09-11"},{"lineNumber":92,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":93,"author":{"gitId":"et-irl"},"content":"If you\u0027re interested in contributing to BauBauBot or exploring its code, here\u0027s how you can get started:","lastModifiedDate":"2023-09-11"},{"lineNumber":94,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":95,"author":{"gitId":"et-irl"},"content":"- **Clone the Repository**: You can clone the BauBauBot repository from GitHub using the following command:","lastModifiedDate":"2023-09-11"},{"lineNumber":96,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":97,"author":{"gitId":"et-irl"},"content":"  ```","lastModifiedDate":"2023-09-11"},{"lineNumber":98,"author":{"gitId":"et-irl"},"content":"  git clone https://github.com/et-irl/ip.git","lastModifiedDate":"2023-09-11"},{"lineNumber":99,"author":{"gitId":"et-irl"},"content":"  ```","lastModifiedDate":"2023-09-11"},{"lineNumber":100,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":101,"author":{"gitId":"et-irl"},"content":"- **Install Java 11**: Ensure that you have Java 11 or higher installed on your system. You can download Java 11 for Windows or Linux from the official Oracle website or use your preferred package manager. ‚òï","lastModifiedDate":"2023-09-11"},{"lineNumber":102,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":103,"author":{"gitId":"et-irl"},"content":"- **Build and Run**: Use the following Gradle commands to build, run, clean, and test the project:","lastModifiedDate":"2023-09-11"},{"lineNumber":104,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":105,"author":{"gitId":"et-irl"},"content":"  - To build the project:","lastModifiedDate":"2023-09-11"},{"lineNumber":106,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":107,"author":{"gitId":"et-irl"},"content":"    ```","lastModifiedDate":"2023-09-11"},{"lineNumber":108,"author":{"gitId":"et-irl"},"content":"    ./gradlew build","lastModifiedDate":"2023-09-11"},{"lineNumber":109,"author":{"gitId":"et-irl"},"content":"    ```","lastModifiedDate":"2023-09-11"},{"lineNumber":110,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":111,"author":{"gitId":"et-irl"},"content":"  - To run the project:","lastModifiedDate":"2023-09-11"},{"lineNumber":112,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":113,"author":{"gitId":"et-irl"},"content":"    ```","lastModifiedDate":"2023-09-11"},{"lineNumber":114,"author":{"gitId":"et-irl"},"content":"    ./gradlew run","lastModifiedDate":"2023-09-11"},{"lineNumber":115,"author":{"gitId":"et-irl"},"content":"    ```","lastModifiedDate":"2023-09-11"},{"lineNumber":116,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":117,"author":{"gitId":"et-irl"},"content":"  - To clean the project:","lastModifiedDate":"2023-09-11"},{"lineNumber":118,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":119,"author":{"gitId":"et-irl"},"content":"    ```","lastModifiedDate":"2023-09-11"},{"lineNumber":120,"author":{"gitId":"et-irl"},"content":"    ./gradlew clean","lastModifiedDate":"2023-09-11"},{"lineNumber":121,"author":{"gitId":"et-irl"},"content":"    ```","lastModifiedDate":"2023-09-11"},{"lineNumber":122,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":123,"author":{"gitId":"et-irl"},"content":"  - To run tests:","lastModifiedDate":"2023-09-11"},{"lineNumber":124,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":125,"author":{"gitId":"et-irl"},"content":"    ```","lastModifiedDate":"2023-09-11"},{"lineNumber":126,"author":{"gitId":"et-irl"},"content":"    ./gradlew test","lastModifiedDate":"2023-09-11"},{"lineNumber":127,"author":{"gitId":"et-irl"},"content":"    ```","lastModifiedDate":"2023-09-11"},{"lineNumber":128,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":129,"author":{"gitId":"et-irl"},"content":"We welcome pull requests and issue reports from the community. Feel free to contribute and help improve BauBauBot. üôå","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"et-irl":119,"-":10}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"et-irl"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"et-irl"},"content":"    // Junit","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":17,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"et-irl"},"content":"    // javaFx","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"et-irl"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"et-irl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"et-irl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"et-irl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"et-irl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"et-irl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"et-irl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"et-irl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"et-irl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"et-irl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"et-irl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"et-irl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"et-irl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"et-irl"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"et-irl"},"content":"checkstyle {","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"et-irl"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"et-irl"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"et-irl":24,"-":41}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"et-irl"},"content":"# [BauBauBot Guide](https://github.com/et-irl/ip)","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"et-irl"},"content":"BauBauBot is a Java-based chatbot designed to help you manage your tasks effectively. This user guide will walk you through its features and how to use them.","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"et-irl"},"content":"### üìÖ Add a Deadline","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"et-irl"},"content":"You can add a deadline task using the following command or its alias:","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"et-irl"},"content":"```","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"et-irl"},"content":"deadline [NAME] /by [TIME]","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"et-irl"},"content":"```","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"et-irl"},"content":"Alias: `d`","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"et-irl"},"content":"### üìÜ Add an Event","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"et-irl"},"content":"To add an event task, use the following command or its alias:","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"et-irl"},"content":"```","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"et-irl"},"content":"event [NAME] /from [START TIME] /to [END TIME]","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"et-irl"},"content":"```","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"et-irl"},"content":"Alias: `e`","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"et-irl"},"content":"### ‚úÖ Add a To-Do","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"et-irl"},"content":"Add a simple to-do task with this command or its alias:","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"et-irl"},"content":"```","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"et-irl"},"content":"todo [NAME]","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"et-irl"},"content":"```","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":35,"author":{"gitId":"et-irl"},"content":"Alias: `t`","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":37,"author":{"gitId":"et-irl"},"content":"### üóëÔ∏è Delete a Task","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":39,"author":{"gitId":"et-irl"},"content":"Remove a task from your list using this command or its alias:","lastModifiedDate":"2023-09-11"},{"lineNumber":40,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"et-irl"},"content":"```","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"et-irl"},"content":"delete [TASK NUMBER]","lastModifiedDate":"2023-09-11"},{"lineNumber":43,"author":{"gitId":"et-irl"},"content":"```","lastModifiedDate":"2023-09-11"},{"lineNumber":44,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":45,"author":{"gitId":"et-irl"},"content":"Alias: `rm`","lastModifiedDate":"2023-09-11"},{"lineNumber":46,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":47,"author":{"gitId":"et-irl"},"content":"### üîç Find Tasks","lastModifiedDate":"2023-09-11"},{"lineNumber":48,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":49,"author":{"gitId":"et-irl"},"content":"To search for tasks that match a partial search term in their names, use this command or its alias:","lastModifiedDate":"2023-09-11"},{"lineNumber":50,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":51,"author":{"gitId":"et-irl"},"content":"```","lastModifiedDate":"2023-09-11"},{"lineNumber":52,"author":{"gitId":"et-irl"},"content":"find [PARTIAL SEARCH TERM]","lastModifiedDate":"2023-09-11"},{"lineNumber":53,"author":{"gitId":"et-irl"},"content":"```","lastModifiedDate":"2023-09-11"},{"lineNumber":54,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":55,"author":{"gitId":"et-irl"},"content":"Alias: `f`","lastModifiedDate":"2023-09-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":57,"author":{"gitId":"et-irl"},"content":"### üìã List Tasks","lastModifiedDate":"2023-09-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":59,"author":{"gitId":"et-irl"},"content":"View all your tasks with this command or its alias:","lastModifiedDate":"2023-09-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":61,"author":{"gitId":"et-irl"},"content":"```","lastModifiedDate":"2023-09-11"},{"lineNumber":62,"author":{"gitId":"et-irl"},"content":"list","lastModifiedDate":"2023-09-11"},{"lineNumber":63,"author":{"gitId":"et-irl"},"content":"```","lastModifiedDate":"2023-09-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":65,"author":{"gitId":"et-irl"},"content":"Alias: `ls`","lastModifiedDate":"2023-09-11"},{"lineNumber":66,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":67,"author":{"gitId":"et-irl"},"content":"### ‚úÖ Mark Task as Done","lastModifiedDate":"2023-09-11"},{"lineNumber":68,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":69,"author":{"gitId":"et-irl"},"content":"Mark a task as completed with this command or its alias:","lastModifiedDate":"2023-09-11"},{"lineNumber":70,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":71,"author":{"gitId":"et-irl"},"content":"```","lastModifiedDate":"2023-09-11"},{"lineNumber":72,"author":{"gitId":"et-irl"},"content":"mark [TASK NUMBER]","lastModifiedDate":"2023-09-11"},{"lineNumber":73,"author":{"gitId":"et-irl"},"content":"```","lastModifiedDate":"2023-09-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":75,"author":{"gitId":"et-irl"},"content":"Alias: `m`","lastModifiedDate":"2023-09-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":77,"author":{"gitId":"et-irl"},"content":"### ‚ùå Mark Task as Undone","lastModifiedDate":"2023-09-11"},{"lineNumber":78,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":79,"author":{"gitId":"et-irl"},"content":"Reverse a completed task to its undone status with this command or its alias:","lastModifiedDate":"2023-09-11"},{"lineNumber":80,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":81,"author":{"gitId":"et-irl"},"content":"```","lastModifiedDate":"2023-09-11"},{"lineNumber":82,"author":{"gitId":"et-irl"},"content":"unmark [TASK NUMBER]","lastModifiedDate":"2023-09-11"},{"lineNumber":83,"author":{"gitId":"et-irl"},"content":"```","lastModifiedDate":"2023-09-11"},{"lineNumber":84,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":85,"author":{"gitId":"et-irl"},"content":"Alias: `um`","lastModifiedDate":"2023-09-11"},{"lineNumber":86,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":87,"author":{"gitId":"et-irl"},"content":"## Usage","lastModifiedDate":"2023-09-11"},{"lineNumber":88,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":89,"author":{"gitId":"et-irl"},"content":"Each feature has a specific command associated with it. You can use these commands to interact with BauBauBot and manage your tasks efficiently.","lastModifiedDate":"2023-09-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":93,"author":{"gitId":"et-irl"},"content":"```","lastModifiedDate":"2023-09-11"},{"lineNumber":94,"author":{"gitId":"et-irl"},"content":"deadline Finish Report /by 2023-12-31","lastModifiedDate":"2023-09-11"},{"lineNumber":95,"author":{"gitId":"et-irl"},"content":"```","lastModifiedDate":"2023-09-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":99,"author":{"gitId":"et-irl"},"content":"BauBauBot will add a new deadline task named \"Finish Report\" with the due date of December 31, 2023.","lastModifiedDate":"2023-09-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":102,"author":{"gitId":"et-irl"},"content":"Expected output:","lastModifiedDate":"2023-09-11"},{"lineNumber":103,"author":{"gitId":"et-irl"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-11"},{"lineNumber":104,"author":{"gitId":"et-irl"},"content":"[D][ ] Finish Report (by: Dec 31, 2023)","lastModifiedDate":"2023-09-11"},{"lineNumber":105,"author":{"gitId":"et-irl"},"content":"Now you have X tasks in the list.","lastModifiedDate":"2023-09-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":107,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":108,"author":{"gitId":"et-irl"},"content":"Follow similar patterns for other commands, and BauBauBot will help you organize your tasks seamlessly.","lastModifiedDate":"2023-09-11"},{"lineNumber":109,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":110,"author":{"gitId":"et-irl"},"content":"This user guide should help you get started with BauBauBot, making task management a breeze!","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"et-irl":87,"-":23}},{"path":"src/main/java/duke/DateFormatter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"et-irl"},"content":"package duke;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"et-irl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"et-irl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"et-irl"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"et-irl"},"content":"/**","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"et-irl"},"content":" * A utility class for formatting date strings.","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"et-irl"},"content":" */","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"et-irl"},"content":"public class DateFormatter {","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"et-irl"},"content":"     * Formats the input date string based on the specified format.","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"et-irl"},"content":"     * @param input  The date string to be formatted.","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"et-irl"},"content":"     * @param format The desired format pattern for the output.","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"et-irl"},"content":"     * @return The formatted date string if input is a valid date, otherwise returns the original input.","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"et-irl"},"content":"    public static String format(String input, String format) {","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"et-irl"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"et-irl"},"content":"            LocalDate date \u003d LocalDate.parse(input);","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"et-irl"},"content":"            return date.format(DateTimeFormatter.ofPattern(format));","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"et-irl"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"et-irl"},"content":"            return input;","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"et-irl"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"et-irl"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"et-irl":27}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"et-irl"},"content":"package duke;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"et-irl"},"content":"/**","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"et-irl"},"content":" * Represents a task with a specified deadline.","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"et-irl"},"content":" */","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"et-irl"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"et-irl"},"content":"    private String endTime;","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"et-irl"},"content":"     * Constructs a deadline task with the given name and end time.","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"et-irl"},"content":"     * @param name    The name of the task.","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"et-irl"},"content":"     * @param endTime The end time of the task.","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"et-irl"},"content":"    public Deadline(String name, String endTime) {","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"et-irl"},"content":"        super(name);","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"et-irl"},"content":"        this.endTime \u003d DateFormatter.format(endTime, \"MMM d yyyy\");","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"et-irl"},"content":"     * Generates a formatted string representation of the deadline task.","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"et-irl"},"content":"     * @return A formatted string representing the deadline task.","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"et-irl"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":26,"author":{"gitId":"et-irl"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":27,"author":{"gitId":"et-irl"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.endTime);","lastModifiedDate":"2023-08-19"},{"lineNumber":28,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":29,"author":{"gitId":"et-irl"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"et-irl":29}},{"path":"src/main/java/duke/DeadlineAdder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"et-irl"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"et-irl"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"et-irl"},"content":" * Represents a class for adding a deadline task to the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"et-irl"},"content":" * This class implements the Executable interface to define the behavior","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"et-irl"},"content":" * of adding a deadline task when executed.","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"et-irl"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"et-irl"},"content":"public class DeadlineAdder implements Executable {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"et-irl"},"content":"    private String name;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"et-irl"},"content":"    private String endTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"et-irl"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"et-irl"},"content":"     * Constructs a DeadlineAdder with the specified task list, task name, and end time.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"et-irl"},"content":"     * @param tasks   The task list to which the deadline task will be added.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"et-irl"},"content":"     * @param name    The name of the deadline task.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"et-irl"},"content":"     * @param endTime The end time of the deadline task.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"et-irl"},"content":"    public DeadlineAdder(TaskList tasks, String name, String endTime) {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"et-irl"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"et-irl"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"et-irl"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"et-irl"},"content":"     * Executes the DeadlineAdder to add a deadline task to the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"et-irl"},"content":"     * @return A message indicating the successful addition of the task and the updated task count.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"et-irl"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"et-irl"},"content":"    public String execute() {","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"et-irl"},"content":"        Task task \u003d new Deadline(name, endTime);","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"et-irl"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"et-irl"},"content":"        return String.format(\"Got it! I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"et-irl"},"content":"                +","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"et-irl"},"content":"                \"%s\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"et-irl"},"content":"                +","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"et-irl"},"content":"                \"Now you have %d tasks in the list.\",","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"et-irl"},"content":"                task.toString(),","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"et-irl"},"content":"                tasks.size());","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"et-irl"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"et-irl":43}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"et-irl"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"et-irl"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"et-irl"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"et-irl"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"et-irl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"et-irl"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"et-irl"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"et-irl"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"et-irl"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"et-irl"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"et-irl"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"et-irl"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"et-irl"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"et-irl"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"et-irl"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"et-irl"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"et-irl"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"et-irl"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"et-irl"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"et-irl"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"et-irl"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"et-irl"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"et-irl"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"et-irl"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"et-irl"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"et-irl"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"et-irl"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"et-irl"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"et-irl"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"et-irl"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"et-irl"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"et-irl"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"et-irl"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"et-irl"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"et-irl"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"et-irl"},"content":"    private void flip() {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"et-irl"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"et-irl"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"et-irl"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"et-irl"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"et-irl"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"et-irl"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"et-irl"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"et-irl"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"et-irl"},"content":"        db.flip();","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"et-irl"},"content":"        return db;","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"et-irl"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"et-irl":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"et-irl"},"content":"package duke;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"et-irl"},"content":"/**","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"et-irl"},"content":" * Duke is a simple task management program that allows users to add, delete, mark, and list tasks.","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"et-irl"},"content":" */","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"et-irl"},"content":"public class Duke {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"et-irl"},"content":"    private static TaskList taskList;","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"et-irl"},"content":"    private static Parser parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"et-irl"},"content":"     * Constructs a Duke instance.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"et-irl"},"content":"     * Initializes the task list and parser.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"et-irl"},"content":"    public Duke() {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"et-irl"},"content":"        final String dataDirectory \u003d \"data\";","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"et-irl"},"content":"        String projectRoot \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"et-irl"},"content":"        String dataFilePath \u003d projectRoot + \"/\" + dataDirectory + \"/tasks.ser\";","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"et-irl"},"content":"        taskList \u003d new TaskList(dataFilePath);","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"et-irl"},"content":"        parser \u003d new Parser(taskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"et-irl"},"content":"     * Gets a response based on the user input.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"et-irl"},"content":"     * @param input The user input to process.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"et-irl"},"content":"     * @return A response message based on the input.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"et-irl"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"et-irl"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"et-irl"},"content":"            Executable executable \u003d parser.parseCommand(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"et-irl"},"content":"            return executable.execute();","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"et-irl"},"content":"        } catch (IndexOutOfBoundsException | IllegalArgumentException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"et-irl"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"et-irl"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"et-irl":35,"-":2}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"et-irl"},"content":"package duke;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"et-irl"},"content":"/**","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"et-irl"},"content":" * Represents an event task that occurs within a specified time frame.","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"et-irl"},"content":" */","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"et-irl"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"et-irl"},"content":"    private String startTime;","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"et-irl"},"content":"    private String endTime;","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"et-irl"},"content":"     * Constructs an event task with the given name, start time, and end time.","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"et-irl"},"content":"     * @param name      The name of the event.","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"et-irl"},"content":"     * @param startTime The start time of the event.","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"et-irl"},"content":"     * @param endTime   The end time of the event.","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"et-irl"},"content":"    public Event(String name, String startTime, String endTime) {","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"et-irl"},"content":"        super(name);","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"et-irl"},"content":"        this.startTime \u003d DateFormatter.format(startTime, \"MMM d yyyy\");","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"et-irl"},"content":"        this.endTime \u003d DateFormatter.format(endTime, \"MMM d yyyy\");","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"et-irl"},"content":"     * Generates a formatted string representation of the event.","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":26,"author":{"gitId":"et-irl"},"content":"     * @return A formatted string representing the event.","lastModifiedDate":"2023-08-19"},{"lineNumber":27,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":28,"author":{"gitId":"et-irl"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":29,"author":{"gitId":"et-irl"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":30,"author":{"gitId":"et-irl"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), this.startTime, this.endTime);","lastModifiedDate":"2023-08-19"},{"lineNumber":31,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":32,"author":{"gitId":"et-irl"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"et-irl":32}},{"path":"src/main/java/duke/EventAdder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"et-irl"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"et-irl"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"et-irl"},"content":" * Represents an executable task for adding an event.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"et-irl"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"et-irl"},"content":"public class EventAdder implements Executable {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"et-irl"},"content":"    private String name;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"et-irl"},"content":"    private String startTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"et-irl"},"content":"    private String endTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"et-irl"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"et-irl"},"content":"     * Constructs an EventAdder instance.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"et-irl"},"content":"     * @param tasks     The task list to add the event to.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"et-irl"},"content":"     * @param name      The name of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"et-irl"},"content":"     * @param startTime The start time of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"et-irl"},"content":"     * @param endTime   The end time of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"et-irl"},"content":"    public EventAdder(TaskList tasks, String name, String startTime, String endTime) {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"et-irl"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"et-irl"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"et-irl"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"et-irl"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"et-irl"},"content":"     * Executes the task of adding an event.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"et-irl"},"content":"     * @return A response message indicating the task has been added and the updated number of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"et-irl"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"et-irl"},"content":"    public String execute() {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"et-irl"},"content":"        Task task \u003d new Event(name, startTime, endTime);","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"et-irl"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"et-irl"},"content":"        return String.format(\"Got it! I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"et-irl"},"content":"                +","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"et-irl"},"content":"                \"%s\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"et-irl"},"content":"                +","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"et-irl"},"content":"                \"Now you have %d tasks in the list.\",","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"et-irl"},"content":"                task.toString(),","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"et-irl"},"content":"                tasks.size());","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"et-irl"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"et-irl":44}},{"path":"src/main/java/duke/Executable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"et-irl"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"et-irl"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"et-irl"},"content":" * Represents an executable task that can be executed to perform an action.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"et-irl"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"et-irl"},"content":"public interface Executable {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"et-irl"},"content":"     * Executes the task and returns a response message.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"et-irl"},"content":"     * @return A response message indicating the result of executing the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"et-irl"},"content":"    String execute();","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"et-irl"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"et-irl":13}},{"path":"src/main/java/duke/Finder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"et-irl"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"et-irl"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"et-irl"},"content":" * Represents a task finder that can filter and retrieve tasks based on a regular expression.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"et-irl"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"et-irl"},"content":"public class Finder implements Executable {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"et-irl"},"content":"    private String regex;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"et-irl"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"et-irl"},"content":"     * Constructs a Finder with the specified regular expression and TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"et-irl"},"content":"     * @param tasks The TaskList containing the tasks to filter.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"et-irl"},"content":"     * @param regex The regular expression used for filtering tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"et-irl"},"content":"    public Finder(TaskList tasks, String regex) {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"et-irl"},"content":"        this.regex \u003d regex;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"et-irl"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"et-irl"},"content":"     * Executes the task finder and returns a string representation of filtered tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"et-irl"},"content":"     * @return A string representing the tasks that match the provided regular expression.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"et-irl"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"et-irl"},"content":"    public String execute() {","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"et-irl"},"content":"        return tasks.filteredToString(regex);","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"et-irl"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"et-irl":30}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"et-irl"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"et-irl"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"et-irl"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"et-irl"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"et-irl"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"et-irl"},"content":"public class Launcher {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"et-irl"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"et-irl"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"et-irl"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"et-irl":12}},{"path":"src/main/java/duke/Lister.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"et-irl"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"et-irl"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"et-irl"},"content":" * Represents a task lister that can retrieve and display all tasks in a TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"et-irl"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"et-irl"},"content":"public class Lister implements Executable {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"et-irl"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"et-irl"},"content":"     * Constructs a Lister with the specified TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"et-irl"},"content":"     * @param tasks The TaskList containing the tasks to list.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"et-irl"},"content":"    public Lister(TaskList tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"et-irl"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"et-irl"},"content":"     * Executes the task lister and returns a string representation of all tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"et-irl"},"content":"     * @return A string representing all tasks in the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"et-irl"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"et-irl"},"content":"    public String execute() {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"et-irl"},"content":"        return tasks.toString();","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"et-irl"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"et-irl":27}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"et-irl"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"et-irl"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"et-irl"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"et-irl"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"et-irl"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"et-irl"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"et-irl"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"et-irl"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"et-irl"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"et-irl"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"et-irl"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"et-irl"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"et-irl"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"et-irl"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"et-irl"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"et-irl"},"content":"            stage.setTitle(\"BauBauBot\");","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"et-irl"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"et-irl"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"et-irl"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"et-irl"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"et-irl"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"et-irl"},"content":"            stage.show();","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"et-irl"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"et-irl"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"et-irl"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"et-irl"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"et-irl":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"et-irl"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"et-irl"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"et-irl"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"et-irl"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"et-irl"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"et-irl"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"et-irl"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"et-irl"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"et-irl"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"et-irl"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"et-irl"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"et-irl"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"et-irl"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"et-irl"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"et-irl"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"et-irl"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"et-irl"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"et-irl"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"et-irl"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"et-irl"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"et-irl"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"et-irl"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"et-irl"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.png\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"et-irl"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"et-irl"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"et-irl"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"et-irl"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"et-irl"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"et-irl"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"et-irl"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"et-irl"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"et-irl"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"et-irl"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"et-irl"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"et-irl"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"et-irl"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"et-irl"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"et-irl"},"content":"        );","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"et-irl"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"et-irl"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"et-irl":52}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"et-irl"},"content":"package duke;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"et-irl"},"content":"/**","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"et-irl"},"content":" * Represents the parser of the chatbot.","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"et-irl"},"content":" */","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"et-irl"},"content":"public class Parser {","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"et-irl"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"et-irl"},"content":"    public Parser(TaskList tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"et-irl"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"et-irl"},"content":"     * Parses the user input and returns an executable command based on the input.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"et-irl"},"content":"     * @param input The user\u0027s input string to be parsed.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"et-irl"},"content":"     * @return An Executable representing the parsed command.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"et-irl"},"content":"     * @throws IllegalArgumentException If the input is not a valid command or is missing required parameters.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"et-irl"},"content":"    public Executable parseCommand(String input) {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"et-irl"},"content":"        // Split into command and restOfCommand","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"et-irl"},"content":"        String[] words \u003d input.split(\" \", 2);","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"et-irl"},"content":"        final String command \u003d words[0];","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"et-irl"},"content":"        final String restOfCommand \u003d words.length \u003e 1 ? words[1] : \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"et-irl"},"content":"        switch (command) {","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"et-irl"},"content":"        case \"d\":","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"et-irl"},"content":"        case \"deadline\": {","lastModifiedDate":"2023-08-25"},{"lineNumber":29,"author":{"gitId":"et-irl"},"content":"            try {","lastModifiedDate":"2023-08-25"},{"lineNumber":30,"author":{"gitId":"et-irl"},"content":"                final String[] deadlineParts \u003d restOfCommand.split(\" /by \", 2);","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"et-irl"},"content":"                final String name \u003d deadlineParts[0];","lastModifiedDate":"2023-08-25"},{"lineNumber":32,"author":{"gitId":"et-irl"},"content":"                final String endTime \u003d deadlineParts[1];","lastModifiedDate":"2023-08-25"},{"lineNumber":33,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"et-irl"},"content":"                return new DeadlineAdder(tasks, name, endTime);","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"et-irl"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":36,"author":{"gitId":"et-irl"},"content":"                throw new IllegalArgumentException(\"Invalid format. Usage: deadline \u003cname\u003e /by \u003ctime\u003e\");","lastModifiedDate":"2023-08-25"},{"lineNumber":37,"author":{"gitId":"et-irl"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":38,"author":{"gitId":"et-irl"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":39,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":40,"author":{"gitId":"et-irl"},"content":"        case \"rm\":","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"et-irl"},"content":"        case \"delete\": {","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"et-irl"},"content":"            if (restOfCommand.isEmpty()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"et-irl"},"content":"                throw new IllegalArgumentException(\"Task index is missing.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"et-irl"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"et-irl"},"content":"            int index \u003d Integer.parseInt(restOfCommand);","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"et-irl"},"content":"            return new TaskDeleter(tasks, index);","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"et-irl"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"et-irl"},"content":"        case \"e\":","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"et-irl"},"content":"        case \"event\": {","lastModifiedDate":"2023-08-25"},{"lineNumber":51,"author":{"gitId":"et-irl"},"content":"            try {","lastModifiedDate":"2023-08-25"},{"lineNumber":52,"author":{"gitId":"et-irl"},"content":"                final String[] deadlineParts \u003d restOfCommand.split(\" /from \", 2);","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"et-irl"},"content":"                final String name \u003d deadlineParts[0];","lastModifiedDate":"2023-08-25"},{"lineNumber":54,"author":{"gitId":"et-irl"},"content":"                final String deadline \u003d deadlineParts[1];","lastModifiedDate":"2023-08-25"},{"lineNumber":55,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":56,"author":{"gitId":"et-irl"},"content":"                final String[] startAndEndParts \u003d deadline.split(\" /to \", 2);","lastModifiedDate":"2023-08-25"},{"lineNumber":57,"author":{"gitId":"et-irl"},"content":"                final String startTime \u003d startAndEndParts[0];","lastModifiedDate":"2023-08-25"},{"lineNumber":58,"author":{"gitId":"et-irl"},"content":"                final String endTime \u003d startAndEndParts[1];","lastModifiedDate":"2023-08-25"},{"lineNumber":59,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":60,"author":{"gitId":"et-irl"},"content":"                return new EventAdder(tasks, name, startTime, endTime);","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"et-irl"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":62,"author":{"gitId":"et-irl"},"content":"                throw new IllegalArgumentException(\"Invalid format. Usage: event \u003cname\u003e /from \u003ctime\u003e /to \u003ctime\u003e\");","lastModifiedDate":"2023-08-25"},{"lineNumber":63,"author":{"gitId":"et-irl"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":64,"author":{"gitId":"et-irl"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":65,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":66,"author":{"gitId":"et-irl"},"content":"        case \"f\":","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"et-irl"},"content":"        case \"find\": {","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"et-irl"},"content":"            return new Finder(tasks, restOfCommand);","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"et-irl"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"et-irl"},"content":"        case \"ls\":","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"et-irl"},"content":"        case \"list\": {","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"et-irl"},"content":"            return new Lister(tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"et-irl"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"et-irl"},"content":"        case \"m\":","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"et-irl"},"content":"        case \"mark\": {","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"et-irl"},"content":"            if (restOfCommand.isEmpty()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"et-irl"},"content":"                throw new IllegalArgumentException(\"Task index is missing.\");","lastModifiedDate":"2023-08-25"},{"lineNumber":80,"author":{"gitId":"et-irl"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":81,"author":{"gitId":"et-irl"},"content":"            int index \u003d Integer.parseInt(restOfCommand);","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"et-irl"},"content":"            assert index \u003e\u003d 0 : \"Parsing failed; value is not a non-negative integer.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"et-irl"},"content":"            return new TaskMarker(tasks, index);","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"et-irl"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":85,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":86,"author":{"gitId":"et-irl"},"content":"        case \"t\":","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"et-irl"},"content":"        case \"todo\": {","lastModifiedDate":"2023-08-26"},{"lineNumber":88,"author":{"gitId":"et-irl"},"content":"            return new ToDoAdder(tasks, restOfCommand);","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"et-irl"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":90,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":91,"author":{"gitId":"et-irl"},"content":"        case \"um\":","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"et-irl"},"content":"        case \"unmark\": {","lastModifiedDate":"2023-08-26"},{"lineNumber":93,"author":{"gitId":"et-irl"},"content":"            if (restOfCommand.isEmpty()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"et-irl"},"content":"                throw new IllegalArgumentException(\"Task index is missing.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":95,"author":{"gitId":"et-irl"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":96,"author":{"gitId":"et-irl"},"content":"            int index \u003d Integer.parseInt(restOfCommand);","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"et-irl"},"content":"            assert index \u003e\u003d 0 : \"Parsing failed; value is not a non-negative integer.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"et-irl"},"content":"            return new TaskUnmarker(tasks, index);","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"et-irl"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":100,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":101,"author":{"gitId":"et-irl"},"content":"        default: {","lastModifiedDate":"2023-08-25"},{"lineNumber":102,"author":{"gitId":"et-irl"},"content":"            throw new IllegalArgumentException(\"Unknown command.\");","lastModifiedDate":"2023-08-25"},{"lineNumber":103,"author":{"gitId":"et-irl"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":104,"author":{"gitId":"et-irl"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":105,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":106,"author":{"gitId":"et-irl"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"et-irl":106}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"et-irl"},"content":"package duke;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"et-irl"},"content":"import java.io.EOFException;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"et-irl"},"content":"import java.io.File;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"et-irl"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"et-irl"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"et-irl"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"et-irl"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"et-irl"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"et-irl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"et-irl"},"content":"/**","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"et-irl"},"content":" * This class handles the storage and retrieval of task data using serialization.","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"et-irl"},"content":" * It provides methods to save and load ArrayList of Task objects to/from a file on the hard disk.","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"et-irl"},"content":" */","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"et-irl"},"content":"public class Storage {","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"et-irl"},"content":"    private String filePath;","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"et-irl"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"et-irl"},"content":"     * @param filePath The path to the file where task data will be stored and retrieved.","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"et-irl"},"content":"     *                 If the file path does not exist, the necessary directories will be created.","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"et-irl"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"et-irl"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"et-irl"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-08-25"},{"lineNumber":29,"author":{"gitId":"et-irl"},"content":"        File parentDirectory \u003d file.getParentFile();","lastModifiedDate":"2023-08-25"},{"lineNumber":30,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":31,"author":{"gitId":"et-irl"},"content":"        if (!parentDirectory.exists()) {","lastModifiedDate":"2023-08-25"},{"lineNumber":32,"author":{"gitId":"et-irl"},"content":"            parentDirectory.mkdirs();","lastModifiedDate":"2023-08-25"},{"lineNumber":33,"author":{"gitId":"et-irl"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":34,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"et-irl"},"content":"        if (file.exists()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"et-irl"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"et-irl"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"et-irl"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":40,"author":{"gitId":"et-irl"},"content":"            file.createNewFile();","lastModifiedDate":"2023-08-25"},{"lineNumber":41,"author":{"gitId":"et-irl"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":42,"author":{"gitId":"et-irl"},"content":"            System.out.println(\"Error creating file: \" + e.getMessage());","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"et-irl"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":44,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":45,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":46,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":47,"author":{"gitId":"et-irl"},"content":"     * Saves the list of tasks to a file on the hard disk using serialization.","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-25"},{"lineNumber":49,"author":{"gitId":"et-irl"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2023-08-25"},{"lineNumber":50,"author":{"gitId":"et-irl"},"content":"     * @throws IOException If there\u0027s an error while writing to the file.","lastModifiedDate":"2023-08-25"},{"lineNumber":51,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":52,"author":{"gitId":"et-irl"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-08-25"},{"lineNumber":53,"author":{"gitId":"et-irl"},"content":"        ObjectOutputStream outputStream \u003d null;","lastModifiedDate":"2023-08-25"},{"lineNumber":54,"author":{"gitId":"et-irl"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":55,"author":{"gitId":"et-irl"},"content":"            outputStream \u003d new ObjectOutputStream(new FileOutputStream(filePath));","lastModifiedDate":"2023-08-25"},{"lineNumber":56,"author":{"gitId":"et-irl"},"content":"            outputStream.writeObject(tasks);","lastModifiedDate":"2023-08-25"},{"lineNumber":57,"author":{"gitId":"et-irl"},"content":"        } finally {","lastModifiedDate":"2023-08-25"},{"lineNumber":58,"author":{"gitId":"et-irl"},"content":"            if (outputStream !\u003d null) {","lastModifiedDate":"2023-08-25"},{"lineNumber":59,"author":{"gitId":"et-irl"},"content":"                outputStream.close();","lastModifiedDate":"2023-08-25"},{"lineNumber":60,"author":{"gitId":"et-irl"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":61,"author":{"gitId":"et-irl"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":62,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":63,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":64,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":65,"author":{"gitId":"et-irl"},"content":"     * Loads the list of tasks from a file on the hard disk using deserialization.","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-25"},{"lineNumber":67,"author":{"gitId":"et-irl"},"content":"     * @return The loaded list of tasks.","lastModifiedDate":"2023-08-25"},{"lineNumber":68,"author":{"gitId":"et-irl"},"content":"     * @throws IOException            If there\u0027s an error while reading from the file.","lastModifiedDate":"2023-08-25"},{"lineNumber":69,"author":{"gitId":"et-irl"},"content":"     * @throws ClassNotFoundException If the class of the serialized object cannot be found.","lastModifiedDate":"2023-08-25"},{"lineNumber":70,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":71,"author":{"gitId":"et-irl"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws IOException, ClassNotFoundException {","lastModifiedDate":"2023-08-25"},{"lineNumber":72,"author":{"gitId":"et-irl"},"content":"        ObjectInputStream inputStream \u003d null;","lastModifiedDate":"2023-08-25"},{"lineNumber":73,"author":{"gitId":"et-irl"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":74,"author":{"gitId":"et-irl"},"content":"            inputStream \u003d new ObjectInputStream(new FileInputStream(filePath));","lastModifiedDate":"2023-08-25"},{"lineNumber":75,"author":{"gitId":"et-irl"},"content":"            // Suppressing unchecked cast warning because we know the deserialized object is an ArrayList\u003cTask\u003e.","lastModifiedDate":"2023-08-25"},{"lineNumber":76,"author":{"gitId":"et-irl"},"content":"            @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2023-08-25"},{"lineNumber":77,"author":{"gitId":"et-irl"},"content":"            ArrayList\u003cTask\u003e tasks \u003d (ArrayList\u003cTask\u003e) inputStream.readObject();","lastModifiedDate":"2023-08-25"},{"lineNumber":78,"author":{"gitId":"et-irl"},"content":"            return tasks;","lastModifiedDate":"2023-08-25"},{"lineNumber":79,"author":{"gitId":"et-irl"},"content":"        } catch (EOFException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":80,"author":{"gitId":"et-irl"},"content":"            // The file is empty: There are no tasks.","lastModifiedDate":"2023-08-25"},{"lineNumber":81,"author":{"gitId":"et-irl"},"content":"            return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-25"},{"lineNumber":82,"author":{"gitId":"et-irl"},"content":"        } finally {","lastModifiedDate":"2023-08-25"},{"lineNumber":83,"author":{"gitId":"et-irl"},"content":"            if (inputStream !\u003d null) {","lastModifiedDate":"2023-08-25"},{"lineNumber":84,"author":{"gitId":"et-irl"},"content":"                inputStream.close();","lastModifiedDate":"2023-08-25"},{"lineNumber":85,"author":{"gitId":"et-irl"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":86,"author":{"gitId":"et-irl"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":87,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":88,"author":{"gitId":"et-irl"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"et-irl":88}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"et-irl"},"content":"package duke;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"et-irl"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"et-irl"},"content":"/**","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"et-irl"},"content":" * Represents a generic task.","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"et-irl"},"content":" * This class implements Serializable to allow tasks to be serialized and deserialized,","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"et-irl"},"content":" * enabling them to be stored and retrieved from external sources, such as files.","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"et-irl"},"content":" */","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"et-irl"},"content":"public abstract class Task implements Serializable {","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"et-irl"},"content":"    private String name;","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"et-irl"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"et-irl"},"content":"     * Constructs a task with the given name.","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"et-irl"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"et-irl"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"et-irl"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"et-irl"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"et-irl"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-08-19"},{"lineNumber":26,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":27,"author":{"gitId":"et-irl"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-19"},{"lineNumber":28,"author":{"gitId":"et-irl"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-19"},{"lineNumber":29,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":30,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":31,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":32,"author":{"gitId":"et-irl"},"content":"     * Marks the task as undone.","lastModifiedDate":"2023-08-19"},{"lineNumber":33,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":34,"author":{"gitId":"et-irl"},"content":"    public void markUndone() {","lastModifiedDate":"2023-08-19"},{"lineNumber":35,"author":{"gitId":"et-irl"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-19"},{"lineNumber":36,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":37,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":38,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":39,"author":{"gitId":"et-irl"},"content":"     * Checks if the task is done.","lastModifiedDate":"2023-08-19"},{"lineNumber":40,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":41,"author":{"gitId":"et-irl"},"content":"     * @return {@code true} if the task is done, {@code false} otherwise.","lastModifiedDate":"2023-08-19"},{"lineNumber":42,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":43,"author":{"gitId":"et-irl"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-19"},{"lineNumber":44,"author":{"gitId":"et-irl"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-19"},{"lineNumber":45,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":46,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":47,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":48,"author":{"gitId":"et-irl"},"content":"     * Gets the name of the task.","lastModifiedDate":"2023-08-19"},{"lineNumber":49,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":50,"author":{"gitId":"et-irl"},"content":"     * @return The name of the task.","lastModifiedDate":"2023-08-19"},{"lineNumber":51,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":52,"author":{"gitId":"et-irl"},"content":"    public String getName() {","lastModifiedDate":"2023-08-19"},{"lineNumber":53,"author":{"gitId":"et-irl"},"content":"        return this.name;","lastModifiedDate":"2023-08-19"},{"lineNumber":54,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":55,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":56,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":57,"author":{"gitId":"et-irl"},"content":"     * Generates a formatted string representation of the task.","lastModifiedDate":"2023-08-19"},{"lineNumber":58,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":59,"author":{"gitId":"et-irl"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2023-08-19"},{"lineNumber":60,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":61,"author":{"gitId":"et-irl"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":62,"author":{"gitId":"et-irl"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":63,"author":{"gitId":"et-irl"},"content":"        return \"[\"","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"et-irl"},"content":"            + (","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"et-irl"},"content":"            isDone ? \"X\" : \" \")","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"et-irl"},"content":"            +","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"et-irl"},"content":"            \"] \"","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"et-irl"},"content":"            +","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"et-irl"},"content":"            this.name;","lastModifiedDate":"2023-08-19"},{"lineNumber":70,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":71,"author":{"gitId":"et-irl"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"et-irl":71}},{"path":"src/main/java/duke/TaskDeleter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"et-irl"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"et-irl"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"et-irl"},"content":" * Represents an executable command for deleting a task from the task list by its index.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"et-irl"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"et-irl"},"content":"public class TaskDeleter implements Executable {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"et-irl"},"content":"    private int index;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"et-irl"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"et-irl"},"content":"     * Constructs a TaskDeleter with the specified task list and index.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"et-irl"},"content":"     * @param tasks The task list from which the task will be deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"et-irl"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"et-irl"},"content":"    public TaskDeleter(TaskList tasks, int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"et-irl"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"et-irl"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"et-irl"},"content":"     * Deletes the task from the task list and returns a confirmation message.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"et-irl"},"content":"     * @return A message confirming the deletion of the task and the updated task list size.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"et-irl"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"et-irl"},"content":"    public String execute() {","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"et-irl"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"et-irl"},"content":"        tasks.delete(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"et-irl"},"content":"        return String.format(\"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"et-irl"},"content":"                +","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"et-irl"},"content":"                \"%s\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"et-irl"},"content":"                +","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"et-irl"},"content":"                \"Now you have %d tasks in the list.\",","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"et-irl"},"content":"                task.toString(),","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"et-irl"},"content":"                tasks.size());","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"et-irl"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"et-irl":38}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"et-irl"},"content":"package duke;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"et-irl"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"et-irl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"et-irl"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"et-irl"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"et-irl"},"content":"/**","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"et-irl"},"content":" * Represents a TaskList that holds tasks.","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"et-irl"},"content":" */","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"et-irl"},"content":"public class TaskList {","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"et-irl"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"et-irl"},"content":"    private Storage dataStorage;","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"et-irl"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"et-irl"},"content":"    public TaskList(String dataFilePath) {","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"et-irl"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"et-irl"},"content":"        dataStorage \u003d new Storage(dataFilePath);","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"et-irl"},"content":"        load();","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"et-irl"},"content":"     * Saves the list of tasks to the data file.","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"et-irl"},"content":"    private void save() {","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"et-irl"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":29,"author":{"gitId":"et-irl"},"content":"            dataStorage.saveTasks(tasks);","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"et-irl"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":31,"author":{"gitId":"et-irl"},"content":"            System.out.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2023-08-25"},{"lineNumber":32,"author":{"gitId":"et-irl"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":33,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":34,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":36,"author":{"gitId":"et-irl"},"content":"     * Loads the list of tasks from the data file.","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":38,"author":{"gitId":"et-irl"},"content":"    private void load() {","lastModifiedDate":"2023-08-25"},{"lineNumber":39,"author":{"gitId":"et-irl"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":40,"author":{"gitId":"et-irl"},"content":"            ArrayList\u003cTask\u003e loadedTasks \u003d dataStorage.loadTasks();","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"et-irl"},"content":"            tasks \u003d loadedTasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"et-irl"},"content":"        } catch (IOException | ClassNotFoundException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"et-irl"},"content":"            System.out.println(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2023-08-25"},{"lineNumber":44,"author":{"gitId":"et-irl"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":45,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":46,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":47,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":48,"author":{"gitId":"et-irl"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2023-08-25"},{"lineNumber":49,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":50,"author":{"gitId":"et-irl"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-08-19"},{"lineNumber":51,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":52,"author":{"gitId":"et-irl"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-08-19"},{"lineNumber":53,"author":{"gitId":"et-irl"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"et-irl"},"content":"        save();","lastModifiedDate":"2023-08-25"},{"lineNumber":55,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":56,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":57,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":58,"author":{"gitId":"et-irl"},"content":"     * Deletes a task at the specified index.","lastModifiedDate":"2023-08-19"},{"lineNumber":59,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":60,"author":{"gitId":"et-irl"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-08-19"},{"lineNumber":61,"author":{"gitId":"et-irl"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range.","lastModifiedDate":"2023-08-19"},{"lineNumber":62,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":63,"author":{"gitId":"et-irl"},"content":"    public void delete(int index) {","lastModifiedDate":"2023-08-19"},{"lineNumber":64,"author":{"gitId":"et-irl"},"content":"        assert tasks.size() \u003e 0 : \"You should only delete on a task list with at least 1 element\";","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"et-irl"},"content":"        if (index \u003c 1 || index \u003e tasks.size()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"et-irl"},"content":"            throw new IndexOutOfBoundsException(\"Task index is out of range.\");","lastModifiedDate":"2023-08-19"},{"lineNumber":67,"author":{"gitId":"et-irl"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":68,"author":{"gitId":"et-irl"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"et-irl"},"content":"        save();","lastModifiedDate":"2023-08-25"},{"lineNumber":70,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":71,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":72,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":73,"author":{"gitId":"et-irl"},"content":"     * Marks a task at the specified index as done.","lastModifiedDate":"2023-08-19"},{"lineNumber":74,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":75,"author":{"gitId":"et-irl"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2023-08-19"},{"lineNumber":76,"author":{"gitId":"et-irl"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range.","lastModifiedDate":"2023-08-19"},{"lineNumber":77,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":78,"author":{"gitId":"et-irl"},"content":"    public void mark(int index) {","lastModifiedDate":"2023-08-19"},{"lineNumber":79,"author":{"gitId":"et-irl"},"content":"        assert 0 \u003c\u003d index \u0026\u0026 index \u003c tasks.size() : \"Task should be in the task list\";","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"et-irl"},"content":"        if (index \u003c 1 || index \u003e tasks.size()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":81,"author":{"gitId":"et-irl"},"content":"            throw new IndexOutOfBoundsException(\"Task index is out of range.\");","lastModifiedDate":"2023-08-19"},{"lineNumber":82,"author":{"gitId":"et-irl"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":83,"author":{"gitId":"et-irl"},"content":"        tasks.get(index - 1).markDone();","lastModifiedDate":"2023-08-26"},{"lineNumber":84,"author":{"gitId":"et-irl"},"content":"        save();","lastModifiedDate":"2023-08-25"},{"lineNumber":85,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":86,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":87,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":88,"author":{"gitId":"et-irl"},"content":"     * Marks a task at the specified index as undone.","lastModifiedDate":"2023-08-19"},{"lineNumber":89,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":90,"author":{"gitId":"et-irl"},"content":"     * @param index The index of the task to be marked as undone.","lastModifiedDate":"2023-08-19"},{"lineNumber":91,"author":{"gitId":"et-irl"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range.","lastModifiedDate":"2023-08-19"},{"lineNumber":92,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":93,"author":{"gitId":"et-irl"},"content":"    public void unmark(int index) {","lastModifiedDate":"2023-08-19"},{"lineNumber":94,"author":{"gitId":"et-irl"},"content":"        assert 0 \u003c\u003d index \u0026\u0026 index \u003c tasks.size() : \"Task should be in the task list\";","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"et-irl"},"content":"        if (index \u003c 1 || index \u003e tasks.size()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":96,"author":{"gitId":"et-irl"},"content":"            throw new IndexOutOfBoundsException(\"Task index is out of range.\");","lastModifiedDate":"2023-08-19"},{"lineNumber":97,"author":{"gitId":"et-irl"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":98,"author":{"gitId":"et-irl"},"content":"        tasks.get(index - 1).markUndone();","lastModifiedDate":"2023-08-26"},{"lineNumber":99,"author":{"gitId":"et-irl"},"content":"        save();","lastModifiedDate":"2023-08-25"},{"lineNumber":100,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":101,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":102,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":103,"author":{"gitId":"et-irl"},"content":"     * Retrieves a task at the specified index.","lastModifiedDate":"2023-08-19"},{"lineNumber":104,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":105,"author":{"gitId":"et-irl"},"content":"     * @param index The index of the task to be retrieved.","lastModifiedDate":"2023-08-19"},{"lineNumber":106,"author":{"gitId":"et-irl"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-08-19"},{"lineNumber":107,"author":{"gitId":"et-irl"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range.","lastModifiedDate":"2023-08-19"},{"lineNumber":108,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":109,"author":{"gitId":"et-irl"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-08-19"},{"lineNumber":110,"author":{"gitId":"et-irl"},"content":"        assert 0 \u003c\u003d index \u0026\u0026 index \u003c tasks.size() : \"Task should be in the task list\";","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"et-irl"},"content":"        if (index \u003c 1 || index \u003e tasks.size()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":112,"author":{"gitId":"et-irl"},"content":"            throw new IndexOutOfBoundsException(\"Task index is out of range.\");","lastModifiedDate":"2023-08-19"},{"lineNumber":113,"author":{"gitId":"et-irl"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":114,"author":{"gitId":"et-irl"},"content":"        return tasks.get(index - 1);","lastModifiedDate":"2023-08-26"},{"lineNumber":115,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":116,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":117,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":118,"author":{"gitId":"et-irl"},"content":"     * Returns the number of tasks in the TaskList.","lastModifiedDate":"2023-08-25"},{"lineNumber":119,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":120,"author":{"gitId":"et-irl"},"content":"     * @return The number of tasks.","lastModifiedDate":"2023-08-19"},{"lineNumber":121,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":122,"author":{"gitId":"et-irl"},"content":"    public int size() {","lastModifiedDate":"2023-08-19"},{"lineNumber":123,"author":{"gitId":"et-irl"},"content":"        return tasks.size();","lastModifiedDate":"2023-08-26"},{"lineNumber":124,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":125,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":126,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"et-irl"},"content":"     * Generates a string representation of the tasks in the TaskList","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"et-irl"},"content":"     * that match the specified regular expression (regex).","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"et-irl"},"content":"     * @param regex The regular expression used to filter tasks by their string representation.","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"et-irl"},"content":"     * @return A formatted string containing tasks that match the given regex, along with their index in the list.","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"et-irl"},"content":"    public String filteredToString(String regex) {","lastModifiedDate":"2023-08-26"},{"lineNumber":134,"author":{"gitId":"et-irl"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-08-19"},{"lineNumber":135,"author":{"gitId":"et-irl"},"content":"        Pattern pattern \u003d Pattern.compile(regex, Pattern.CASE_INSENSITIVE); // Compiles the regex pattern","lastModifiedDate":"2023-08-26"},{"lineNumber":136,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":137,"author":{"gitId":"et-irl"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-26"},{"lineNumber":138,"author":{"gitId":"et-irl"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-08-26"},{"lineNumber":139,"author":{"gitId":"et-irl"},"content":"            Matcher matcher \u003d pattern.matcher(task.toString()); // Match the task\u0027s string representation with the regex","lastModifiedDate":"2023-08-26"},{"lineNumber":140,"author":{"gitId":"et-irl"},"content":"            if (!matcher.find()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":141,"author":{"gitId":"et-irl"},"content":"                continue;","lastModifiedDate":"2023-09-07"},{"lineNumber":142,"author":{"gitId":"et-irl"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":143,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":144,"author":{"gitId":"et-irl"},"content":"            result.append((i + 1) + \". \" + task);","lastModifiedDate":"2023-08-26"},{"lineNumber":145,"author":{"gitId":"et-irl"},"content":"            if (i + 1 \u003c tasks.size()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":146,"author":{"gitId":"et-irl"},"content":"                result.append(\"\\n\");","lastModifiedDate":"2023-08-19"},{"lineNumber":147,"author":{"gitId":"et-irl"},"content":"            }","lastModifiedDate":"2023-08-19"},{"lineNumber":148,"author":{"gitId":"et-irl"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":149,"author":{"gitId":"et-irl"},"content":"        return result.toString();","lastModifiedDate":"2023-08-19"},{"lineNumber":150,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":151,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":152,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":153,"author":{"gitId":"et-irl"},"content":"     * Generates a string representation of the TaskList.","lastModifiedDate":"2023-08-26"},{"lineNumber":154,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":155,"author":{"gitId":"et-irl"},"content":"     * @return A formatted string of tasks in the TaskList.","lastModifiedDate":"2023-08-26"},{"lineNumber":156,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":157,"author":{"gitId":"et-irl"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":158,"author":{"gitId":"et-irl"},"content":"    public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":159,"author":{"gitId":"et-irl"},"content":"        return filteredToString(\".*\");","lastModifiedDate":"2023-08-26"},{"lineNumber":160,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":161,"author":{"gitId":"et-irl"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"et-irl":161}},{"path":"src/main/java/duke/TaskMarker.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"et-irl"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"et-irl"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"et-irl"},"content":" * Represents an executable command for marking a task as done in the task list by its index.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"et-irl"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"et-irl"},"content":"public class TaskMarker implements Executable {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"et-irl"},"content":"    private int index;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"et-irl"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"et-irl"},"content":"     * Constructs a TaskMarker with the specified task list and index.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"et-irl"},"content":"     * @param tasks The task list in which the task will be marked as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"et-irl"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"et-irl"},"content":"    public TaskMarker(TaskList tasks, int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"et-irl"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"et-irl"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"et-irl"},"content":"     * Marks the specified task as done and returns a confirmation message.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"et-irl"},"content":"     * @return A message confirming the task has been marked as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"et-irl"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"et-irl"},"content":"    public String execute() {","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"et-irl"},"content":"        tasks.mark(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"et-irl"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"et-irl"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + task.toString();","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"et-irl"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"et-irl":32}},{"path":"src/main/java/duke/TaskUnmarker.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"et-irl"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"et-irl"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"et-irl"},"content":" * Represents an executable command for marking a task as not done in the task list by its index.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"et-irl"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"et-irl"},"content":"public class TaskUnmarker implements Executable {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"et-irl"},"content":"    private int index;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"et-irl"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"et-irl"},"content":"     * Constructs a TaskUnmarker with the specified task list and index.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"et-irl"},"content":"     * @param tasks The task list in which the task will be marked as not done.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"et-irl"},"content":"     * @param index The index of the task to be marked as not done.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"et-irl"},"content":"    public TaskUnmarker(TaskList tasks, int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"et-irl"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"et-irl"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"et-irl"},"content":"     * Marks the specified task as not done and returns a confirmation message.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"et-irl"},"content":"     * @return A message confirming the task has been marked as not done.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"et-irl"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"et-irl"},"content":"    public String execute() {","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"et-irl"},"content":"        tasks.unmark(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"et-irl"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"et-irl"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + task.toString();","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"et-irl"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"et-irl":32}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"et-irl"},"content":"package duke;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"et-irl"},"content":"/**","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"et-irl"},"content":" * Represents a ToDo task.","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"et-irl"},"content":" */","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"et-irl"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"et-irl"},"content":"     * Constructs a ToDo task with the given name.","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"et-irl"},"content":"     * @param name The name of the ToDo task.","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"et-irl"},"content":"    public ToDo(String name) {","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"et-irl"},"content":"        super(name);","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"et-irl"},"content":"     * Generates a formatted string representation of the ToDo task.","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"et-irl"},"content":"     * @return A formatted string representing the ToDo task.","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"et-irl"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"et-irl"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"et-irl"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"et-irl"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"et-irl":25}},{"path":"src/main/java/duke/ToDoAdder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"et-irl"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"et-irl"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"et-irl"},"content":" * Represents an executable command for adding a new ToDo task to the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"et-irl"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"et-irl"},"content":"public class ToDoAdder implements Executable {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"et-irl"},"content":"    private String name;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"et-irl"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"et-irl"},"content":"     * Constructs a ToDoAdder with the specified task list and task name.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"et-irl"},"content":"     * @param tasks The task list in which the task will be added.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"et-irl"},"content":"     * @param name  The name of the ToDo task to be added.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"et-irl"},"content":"    public ToDoAdder(TaskList tasks, String name) {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"et-irl"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"et-irl"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"et-irl"},"content":"     * Adds a new ToDo task to the task list and returns a confirmation message.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"et-irl"},"content":"     * @return A message confirming the task has been added to the list.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"et-irl"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"et-irl"},"content":"    public String execute() {","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"et-irl"},"content":"        Task task \u003d new ToDo(name);","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"et-irl"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"et-irl"},"content":"        return String.format(\"Got it! I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"et-irl"},"content":"                +","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"et-irl"},"content":"                \"%s\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"et-irl"},"content":"                +","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"et-irl"},"content":"                \"Now you have %d tasks in the list.\",","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"et-irl"},"content":"                task.toString(),","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"et-irl"},"content":"                tasks.size());","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"et-irl"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"et-irl":38}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"et-irl"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"et-irl"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"et-irl"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"et-irl"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"et-irl"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"et-irl"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"et-irl"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"et-irl"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"et-irl"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"et-irl"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"et-irl"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"et-irl"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"et-irl"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"et-irl"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"et-irl":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"et-irl"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"et-irl"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"et-irl"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"et-irl"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"et-irl"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"et-irl"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"et-irl"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"et-irl"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"et-irl"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"et-irl"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"et-irl"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"et-irl"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"et-irl"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"et-irl"},"content":"      \u003c/content\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"et-irl"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"et-irl"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"et-irl"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"et-irl":19}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"et-irl"},"content":"package duke;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"et-irl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"et-irl"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"et-irl"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"et-irl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"et-irl"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"et-irl"},"content":" * Test cases for the {@link Deadline} class.","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"et-irl"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"et-irl"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"et-irl"},"content":"     * Test the {@link Deadline#toString()} method.","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"et-irl"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"et-irl"},"content":"    public void testToString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"et-irl"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report\", \"2023-08-15\");","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"et-irl"},"content":"        assertEquals(\"[D][ ] Submit report (by: Aug 15 2023)\", deadline.toString());","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"et-irl"},"content":"     * Test the {@link Deadline#markDone()} method.","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"et-irl"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"et-irl"},"content":"    public void testMarkDone() {","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"et-irl"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report\", \"2023-08-15\");","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"et-irl"},"content":"        deadline.markDone();","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"et-irl"},"content":"        assertTrue(deadline.isDone());","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"et-irl"},"content":"     * Test the {@link Deadline#markUndone()} method.","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"et-irl"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"et-irl"},"content":"    public void testMarkUndone() {","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"et-irl"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report\", \"2023-08-15\");","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"et-irl"},"content":"        deadline.markDone();","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"et-irl"},"content":"        deadline.markUndone();","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"et-irl"},"content":"        assertFalse(deadline.isDone());","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"et-irl"},"content":"     * Test the {@link Deadline#getName()} method.","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"et-irl"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"et-irl"},"content":"    public void testGetName() {","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"et-irl"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report\", \"2023-08-15\");","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"et-irl"},"content":"        assertEquals(\"Submit report\", deadline.getName());","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"et-irl"},"content":"     * Test the {@link Deadline#toString()} method with an invalid deadline.","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"et-irl"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"et-irl"},"content":"    public void testToStringWithInvalidDeadline() {","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"et-irl"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report\", \"invalid-date\");","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"et-irl"},"content":"        assertEquals(\"[D][ ] Submit report (by: invalid-date)\", deadline.toString());","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"et-irl"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"et-irl":61}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"et-irl"},"content":"package duke;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"et-irl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"et-irl"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"et-irl"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"et-irl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"et-irl"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"et-irl"},"content":" * Test cases for the {@link Event} class.","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"et-irl"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"et-irl"},"content":"public class EventTest {","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"et-irl"},"content":"     * Test the {@link Event#toString()} method.","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"et-irl"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"et-irl"},"content":"    public void testToString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"et-irl"},"content":"        Event event \u003d new Event(\"Meeting\", \"2023-08-15\", \"2023-08-16\");","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"et-irl"},"content":"        assertEquals(\"[E][ ] Meeting (from: Aug 15 2023 to: Aug 16 2023)\", event.toString());","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"et-irl"},"content":"     * Test the {@link Event#markDone()} method.","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"et-irl"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"et-irl"},"content":"    public void testMarkDone() {","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"et-irl"},"content":"        Event event \u003d new Event(\"Party\", \"2023-08-20\", \"2023-08-21\");","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"et-irl"},"content":"        assertFalse(event.isDone());","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"et-irl"},"content":"        event.markDone();","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"et-irl"},"content":"        assertTrue(event.isDone());","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"et-irl"},"content":"     * Test the {@link Event#markUndone()} method.","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"et-irl"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"et-irl"},"content":"    public void testMarkUndone() {","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"et-irl"},"content":"        Event event \u003d new Event(\"Conference\", \"2023-08-25\", \"2023-08-26\");","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"et-irl"},"content":"        event.markDone();","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"et-irl"},"content":"        assertTrue(event.isDone());","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"et-irl"},"content":"        event.markUndone();","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"et-irl"},"content":"        assertFalse(event.isDone());","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"et-irl"},"content":"     * Test the {@link Event#getName()} method.","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"et-irl"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"et-irl"},"content":"    public void testGetName() {","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"et-irl"},"content":"        Event event \u003d new Event(\"Gathering\", \"2023-08-30\", \"2023-08-31\");","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"et-irl"},"content":"        assertEquals(\"Gathering\", event.getName());","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"et-irl"},"content":"     * Test the {@link Event#toString()} method with invalid dates.","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"et-irl"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"et-irl"},"content":"    public void testToStringWithInvalidDates() {","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"et-irl"},"content":"        Event event \u003d new Event(\"Invalid Event\", \"invalid-start\", \"invalid-end\");","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"et-irl"},"content":"        assertEquals(\"[E][ ] Invalid Event (from: invalid-start to: invalid-end)\", event.toString());","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"et-irl"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"et-irl":62}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"et-irl"},"content":"package duke;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"et-irl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"et-irl"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"et-irl"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"et-irl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"et-irl"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"et-irl"},"content":" * Test cases for the {@link ToDo} class.","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"et-irl"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"et-irl"},"content":"public class ToDoTest {","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"et-irl"},"content":"     * Test the {@link ToDo#markDone()} method.","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"et-irl"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"et-irl"},"content":"    public void testMarkDone() {","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"et-irl"},"content":"        ToDo todo \u003d new ToDo(\"Buy groceries\");","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"et-irl"},"content":"        assertFalse(todo.isDone());","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"et-irl"},"content":"        todo.markDone();","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"et-irl"},"content":"        assertTrue(todo.isDone());","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"et-irl"},"content":"     * Test the {@link ToDo#markUndone()} method.","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"et-irl"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"et-irl"},"content":"    public void testMarkUndone() {","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"et-irl"},"content":"        ToDo todo \u003d new ToDo(\"Buy groceries\");","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"et-irl"},"content":"        todo.markDone();","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"et-irl"},"content":"        assertTrue(todo.isDone());","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"et-irl"},"content":"        todo.markUndone();","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"et-irl"},"content":"        assertFalse(todo.isDone());","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"et-irl"},"content":"     * Test the {@link ToDo#getName()} method.","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"et-irl"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"et-irl"},"content":"    public void testGetName() {","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"et-irl"},"content":"        ToDo todo \u003d new ToDo(\"Buy groceries\");","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"et-irl"},"content":"        assertEquals(\"Buy groceries\", todo.getName());","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"et-irl"},"content":"     * Test the {@link ToDo#toString()} method.","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"et-irl"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"et-irl"},"content":"    public void testToString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"et-irl"},"content":"        ToDo todoUndone \u003d new ToDo(\"Buy groceries\");","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"et-irl"},"content":"        assertEquals(\"[T][ ] Buy groceries\", todoUndone.toString());","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"et-irl"},"content":"        ToDo todoDone \u003d new ToDo(\"Buy groceries\");","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"et-irl"},"content":"        todoDone.markDone();","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"et-irl"},"content":"        assertEquals(\"[T][X] Buy groceries\", todoDone.toString());","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"et-irl"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"et-irl":60}}]
