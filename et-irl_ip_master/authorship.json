[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"et-irl"},"content":"/**","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"et-irl"},"content":" * Represents a task with a specified deadline.","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"et-irl"},"content":" */","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"et-irl"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"et-irl"},"content":"    private String endTime;","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"et-irl"},"content":"     * Constructs a deadline task with the given name and end time.","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"et-irl"},"content":"     * @param name    The name of the task.","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"et-irl"},"content":"     * @param endTime The end time of the task.","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"et-irl"},"content":"    public Deadline(String name, String endTime) {","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"et-irl"},"content":"        super(name);","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"et-irl"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"et-irl"},"content":"     * Generates a formatted string representation of the deadline task.","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"et-irl"},"content":"     * @return A formatted string representing the deadline task.","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"et-irl"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"et-irl"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"et-irl"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.endTime);","lastModifiedDate":"2023-08-19"},{"lineNumber":26,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":27,"author":{"gitId":"et-irl"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"et-irl":27}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"et-irl"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"et-irl"},"content":"/**","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"et-irl"},"content":" * Duke is a simple task management program that allows users to add, delete, mark, and list tasks.","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"et-irl"},"content":" */","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"et-irl"},"content":"    private static ToDoList toDoList \u003d new ToDoList();","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"et-irl"},"content":"     * Greets the user with a welcome message.","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"et-irl"},"content":"    private static void greet() {","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"et-irl"},"content":"        System.out.println(\"Hello! I\u0027m Untitled!\");","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"et-irl"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"et-irl"},"content":"     * Displays a farewell message when exiting the program.","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"et-irl"},"content":"    private static void exit() {","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"et-irl"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"et-irl"},"content":"     * Adds a task to the ToDoList and displays a confirmation message.","lastModifiedDate":"2023-08-19"},{"lineNumber":26,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":27,"author":{"gitId":"et-irl"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-08-19"},{"lineNumber":28,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":29,"author":{"gitId":"et-irl"},"content":"    private static void add(Task task) {","lastModifiedDate":"2023-08-19"},{"lineNumber":30,"author":{"gitId":"et-irl"},"content":"        toDoList.add(task);","lastModifiedDate":"2023-08-19"},{"lineNumber":31,"author":{"gitId":"et-irl"},"content":"        System.out.println(\"Got it! I\u0027ve added this task:\");","lastModifiedDate":"2023-08-19"},{"lineNumber":32,"author":{"gitId":"et-irl"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2023-08-19"},{"lineNumber":33,"author":{"gitId":"et-irl"},"content":"        System.out.println(\"Now you have \" + toDoList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-19"},{"lineNumber":34,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":35,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":36,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":37,"author":{"gitId":"et-irl"},"content":"     * Deletes a task at the specified index from the ToDoList and displays a confirmation message.","lastModifiedDate":"2023-08-19"},{"lineNumber":38,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":39,"author":{"gitId":"et-irl"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-08-19"},{"lineNumber":40,"author":{"gitId":"et-irl"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range.","lastModifiedDate":"2023-08-19"},{"lineNumber":41,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":42,"author":{"gitId":"et-irl"},"content":"    private static void delete(int index) {","lastModifiedDate":"2023-08-19"},{"lineNumber":43,"author":{"gitId":"et-irl"},"content":"        final Task deletedTask \u003d toDoList.get(index);","lastModifiedDate":"2023-08-19"},{"lineNumber":44,"author":{"gitId":"et-irl"},"content":"        toDoList.delete(index);","lastModifiedDate":"2023-08-19"},{"lineNumber":45,"author":{"gitId":"et-irl"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-19"},{"lineNumber":46,"author":{"gitId":"et-irl"},"content":"        System.out.println(deletedTask.toString());","lastModifiedDate":"2023-08-19"},{"lineNumber":47,"author":{"gitId":"et-irl"},"content":"        System.out.println(\"Now you have \" + toDoList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-19"},{"lineNumber":48,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":49,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":50,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":51,"author":{"gitId":"et-irl"},"content":"     * Lists all tasks in the ToDoList and displays them.","lastModifiedDate":"2023-08-19"},{"lineNumber":52,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":53,"author":{"gitId":"et-irl"},"content":"    private static void list() {","lastModifiedDate":"2023-08-19"},{"lineNumber":54,"author":{"gitId":"et-irl"},"content":"        System.out.println(toDoList);","lastModifiedDate":"2023-08-19"},{"lineNumber":55,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":56,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":57,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":58,"author":{"gitId":"et-irl"},"content":"     * Marks a task at the specified index as done and displays a confirmation message.","lastModifiedDate":"2023-08-19"},{"lineNumber":59,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":60,"author":{"gitId":"et-irl"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2023-08-19"},{"lineNumber":61,"author":{"gitId":"et-irl"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range.","lastModifiedDate":"2023-08-19"},{"lineNumber":62,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":63,"author":{"gitId":"et-irl"},"content":"    private static void mark(int index) {","lastModifiedDate":"2023-08-19"},{"lineNumber":64,"author":{"gitId":"et-irl"},"content":"        toDoList.mark(index);","lastModifiedDate":"2023-08-19"},{"lineNumber":65,"author":{"gitId":"et-irl"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-19"},{"lineNumber":66,"author":{"gitId":"et-irl"},"content":"        System.out.println(toDoList.get(index));","lastModifiedDate":"2023-08-19"},{"lineNumber":67,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":68,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":69,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":70,"author":{"gitId":"et-irl"},"content":"     * Marks a task at the specified index as not done yet and displays a confirmation message.","lastModifiedDate":"2023-08-19"},{"lineNumber":71,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":72,"author":{"gitId":"et-irl"},"content":"     * @param index The index of the task to be marked as not done yet.","lastModifiedDate":"2023-08-19"},{"lineNumber":73,"author":{"gitId":"et-irl"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range.","lastModifiedDate":"2023-08-19"},{"lineNumber":74,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":75,"author":{"gitId":"et-irl"},"content":"    private static void unmark(int index) {","lastModifiedDate":"2023-08-19"},{"lineNumber":76,"author":{"gitId":"et-irl"},"content":"        toDoList.unmark(index);","lastModifiedDate":"2023-08-19"},{"lineNumber":77,"author":{"gitId":"et-irl"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-19"},{"lineNumber":78,"author":{"gitId":"et-irl"},"content":"        System.out.println(toDoList.get(index));","lastModifiedDate":"2023-08-19"},{"lineNumber":79,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":80,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":81,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":82,"author":{"gitId":"et-irl"},"content":"     * Parses the user\u0027s input and performs the corresponding action.","lastModifiedDate":"2023-08-19"},{"lineNumber":83,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":84,"author":{"gitId":"et-irl"},"content":"     * @param input The user\u0027s input command.","lastModifiedDate":"2023-08-19"},{"lineNumber":85,"author":{"gitId":"et-irl"},"content":"     * @return {@code true} if parsing should continue, {@code false} if parsing should stop.","lastModifiedDate":"2023-08-19"},{"lineNumber":86,"author":{"gitId":"et-irl"},"content":"     * @throws IllegalArgumentException If the input command has invalid arguments.","lastModifiedDate":"2023-08-19"},{"lineNumber":87,"author":{"gitId":"et-irl"},"content":"     * @throws IndexOutOfBoundsException If the input command refers to an out-of-range index.","lastModifiedDate":"2023-08-19"},{"lineNumber":88,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":89,"author":{"gitId":"et-irl"},"content":"    private static boolean parseCommand(String input) {","lastModifiedDate":"2023-08-19"},{"lineNumber":90,"author":{"gitId":"et-irl"},"content":"        // Split into command and rest","lastModifiedDate":"2023-08-19"},{"lineNumber":91,"author":{"gitId":"et-irl"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-19"},{"lineNumber":92,"author":{"gitId":"et-irl"},"content":"        final String command \u003d parts[0];","lastModifiedDate":"2023-08-19"},{"lineNumber":93,"author":{"gitId":"et-irl"},"content":"        final String rest \u003d parts.length \u003e 1 ? parts[1] : \"\";","lastModifiedDate":"2023-08-19"},{"lineNumber":94,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":95,"author":{"gitId":"et-irl"},"content":"        switch (command) {","lastModifiedDate":"2023-08-19"},{"lineNumber":96,"author":{"gitId":"et-irl"},"content":"            case \"bye\": {","lastModifiedDate":"2023-08-19"},{"lineNumber":97,"author":{"gitId":"et-irl"},"content":"                Duke.exit();","lastModifiedDate":"2023-08-19"},{"lineNumber":98,"author":{"gitId":"et-irl"},"content":"                return false;","lastModifiedDate":"2023-08-19"},{"lineNumber":99,"author":{"gitId":"et-irl"},"content":"            }","lastModifiedDate":"2023-08-19"},{"lineNumber":100,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":101,"author":{"gitId":"et-irl"},"content":"            case \"list\": {","lastModifiedDate":"2023-08-19"},{"lineNumber":102,"author":{"gitId":"et-irl"},"content":"                Duke.list();","lastModifiedDate":"2023-08-19"},{"lineNumber":103,"author":{"gitId":"et-irl"},"content":"                break;","lastModifiedDate":"2023-08-19"},{"lineNumber":104,"author":{"gitId":"et-irl"},"content":"            }","lastModifiedDate":"2023-08-19"},{"lineNumber":105,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":106,"author":{"gitId":"et-irl"},"content":"            case \"mark\": {","lastModifiedDate":"2023-08-19"},{"lineNumber":107,"author":{"gitId":"et-irl"},"content":"                if (rest.isEmpty()) {","lastModifiedDate":"2023-08-19"},{"lineNumber":108,"author":{"gitId":"et-irl"},"content":"                    throw new IllegalArgumentException(\"Task index is missing.\");","lastModifiedDate":"2023-08-19"},{"lineNumber":109,"author":{"gitId":"et-irl"},"content":"                }","lastModifiedDate":"2023-08-19"},{"lineNumber":110,"author":{"gitId":"et-irl"},"content":"                int index \u003d Integer.parseInt(rest);","lastModifiedDate":"2023-08-19"},{"lineNumber":111,"author":{"gitId":"et-irl"},"content":"                Duke.mark(index);","lastModifiedDate":"2023-08-19"},{"lineNumber":112,"author":{"gitId":"et-irl"},"content":"                break;","lastModifiedDate":"2023-08-19"},{"lineNumber":113,"author":{"gitId":"et-irl"},"content":"            }","lastModifiedDate":"2023-08-19"},{"lineNumber":114,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":115,"author":{"gitId":"et-irl"},"content":"            case \"unmark\": {","lastModifiedDate":"2023-08-19"},{"lineNumber":116,"author":{"gitId":"et-irl"},"content":"                if (rest.isEmpty()) {","lastModifiedDate":"2023-08-19"},{"lineNumber":117,"author":{"gitId":"et-irl"},"content":"                    throw new IllegalArgumentException(\"Task index is missing.\");","lastModifiedDate":"2023-08-19"},{"lineNumber":118,"author":{"gitId":"et-irl"},"content":"                }","lastModifiedDate":"2023-08-19"},{"lineNumber":119,"author":{"gitId":"et-irl"},"content":"                int index \u003d Integer.parseInt(rest);","lastModifiedDate":"2023-08-19"},{"lineNumber":120,"author":{"gitId":"et-irl"},"content":"                Duke.unmark(index);","lastModifiedDate":"2023-08-19"},{"lineNumber":121,"author":{"gitId":"et-irl"},"content":"                break;","lastModifiedDate":"2023-08-19"},{"lineNumber":122,"author":{"gitId":"et-irl"},"content":"            }","lastModifiedDate":"2023-08-19"},{"lineNumber":123,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":124,"author":{"gitId":"et-irl"},"content":"            case \"todo\": {","lastModifiedDate":"2023-08-19"},{"lineNumber":125,"author":{"gitId":"et-irl"},"content":"                Duke.add(new ToDo(rest));","lastModifiedDate":"2023-08-19"},{"lineNumber":126,"author":{"gitId":"et-irl"},"content":"                break;","lastModifiedDate":"2023-08-19"},{"lineNumber":127,"author":{"gitId":"et-irl"},"content":"            }","lastModifiedDate":"2023-08-19"},{"lineNumber":128,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":129,"author":{"gitId":"et-irl"},"content":"            case \"deadline\": {","lastModifiedDate":"2023-08-19"},{"lineNumber":130,"author":{"gitId":"et-irl"},"content":"                try {","lastModifiedDate":"2023-08-19"},{"lineNumber":131,"author":{"gitId":"et-irl"},"content":"                    final String[] deadlineParts \u003d rest.split(\" /by \", 2);","lastModifiedDate":"2023-08-19"},{"lineNumber":132,"author":{"gitId":"et-irl"},"content":"                    final String name \u003d deadlineParts[0];","lastModifiedDate":"2023-08-19"},{"lineNumber":133,"author":{"gitId":"et-irl"},"content":"                    final String endTime \u003d deadlineParts[1];","lastModifiedDate":"2023-08-19"},{"lineNumber":134,"author":{"gitId":"et-irl"},"content":"                    Duke.add(new Deadline(name, endTime));","lastModifiedDate":"2023-08-19"},{"lineNumber":135,"author":{"gitId":"et-irl"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-19"},{"lineNumber":136,"author":{"gitId":"et-irl"},"content":"                    throw new IllegalArgumentException(\"Invalid format. Usage: deadline \u003cname\u003e /by \u003ctime\u003e\");","lastModifiedDate":"2023-08-19"},{"lineNumber":137,"author":{"gitId":"et-irl"},"content":"                }","lastModifiedDate":"2023-08-19"},{"lineNumber":138,"author":{"gitId":"et-irl"},"content":"                break;","lastModifiedDate":"2023-08-19"},{"lineNumber":139,"author":{"gitId":"et-irl"},"content":"            }","lastModifiedDate":"2023-08-19"},{"lineNumber":140,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":141,"author":{"gitId":"et-irl"},"content":"            case \"event\": {","lastModifiedDate":"2023-08-19"},{"lineNumber":142,"author":{"gitId":"et-irl"},"content":"                try {","lastModifiedDate":"2023-08-19"},{"lineNumber":143,"author":{"gitId":"et-irl"},"content":"                    final String[] deadlineParts \u003d rest.split(\" /from \", 2);","lastModifiedDate":"2023-08-19"},{"lineNumber":144,"author":{"gitId":"et-irl"},"content":"                    final String name \u003d deadlineParts[0];","lastModifiedDate":"2023-08-19"},{"lineNumber":145,"author":{"gitId":"et-irl"},"content":"                    final String deadline \u003d deadlineParts[1];","lastModifiedDate":"2023-08-19"},{"lineNumber":146,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":147,"author":{"gitId":"et-irl"},"content":"                    final String[] startAndEndParts \u003d deadline.split(\" /to \", 2);","lastModifiedDate":"2023-08-19"},{"lineNumber":148,"author":{"gitId":"et-irl"},"content":"                    final String startTime \u003d startAndEndParts[0];","lastModifiedDate":"2023-08-19"},{"lineNumber":149,"author":{"gitId":"et-irl"},"content":"                    final String endTime \u003d startAndEndParts[1];","lastModifiedDate":"2023-08-19"},{"lineNumber":150,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":151,"author":{"gitId":"et-irl"},"content":"                    Duke.add(new Event(name, startTime, endTime));","lastModifiedDate":"2023-08-19"},{"lineNumber":152,"author":{"gitId":"et-irl"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-19"},{"lineNumber":153,"author":{"gitId":"et-irl"},"content":"                    throw new IllegalArgumentException(\"Invalid format. Usage: event \u003cname\u003e /from \u003ctime\u003e /to \u003ctime\u003e\");","lastModifiedDate":"2023-08-19"},{"lineNumber":154,"author":{"gitId":"et-irl"},"content":"                }","lastModifiedDate":"2023-08-19"},{"lineNumber":155,"author":{"gitId":"et-irl"},"content":"                break;","lastModifiedDate":"2023-08-19"},{"lineNumber":156,"author":{"gitId":"et-irl"},"content":"            }","lastModifiedDate":"2023-08-19"},{"lineNumber":157,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":158,"author":{"gitId":"et-irl"},"content":"            case \"delete\": {","lastModifiedDate":"2023-08-19"},{"lineNumber":159,"author":{"gitId":"et-irl"},"content":"                if (rest.isEmpty()) {","lastModifiedDate":"2023-08-19"},{"lineNumber":160,"author":{"gitId":"et-irl"},"content":"                    throw new IllegalArgumentException(\"Task index is missing.\");","lastModifiedDate":"2023-08-19"},{"lineNumber":161,"author":{"gitId":"et-irl"},"content":"                }","lastModifiedDate":"2023-08-19"},{"lineNumber":162,"author":{"gitId":"et-irl"},"content":"                int index \u003d Integer.parseInt(rest);","lastModifiedDate":"2023-08-19"},{"lineNumber":163,"author":{"gitId":"et-irl"},"content":"                Duke.delete(index);","lastModifiedDate":"2023-08-19"},{"lineNumber":164,"author":{"gitId":"et-irl"},"content":"                break;","lastModifiedDate":"2023-08-19"},{"lineNumber":165,"author":{"gitId":"et-irl"},"content":"            }","lastModifiedDate":"2023-08-19"},{"lineNumber":166,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":167,"author":{"gitId":"et-irl"},"content":"            default: {","lastModifiedDate":"2023-08-19"},{"lineNumber":168,"author":{"gitId":"et-irl"},"content":"                throw new IllegalArgumentException(\"Unknown command.\");","lastModifiedDate":"2023-08-19"},{"lineNumber":169,"author":{"gitId":"et-irl"},"content":"            }","lastModifiedDate":"2023-08-19"},{"lineNumber":170,"author":{"gitId":"et-irl"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":171,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":172,"author":{"gitId":"et-irl"},"content":"        return true;","lastModifiedDate":"2023-08-19"},{"lineNumber":173,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":174,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":175,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":176,"author":{"gitId":"et-irl"},"content":"     * Main method to run the Duke program.","lastModifiedDate":"2023-08-19"},{"lineNumber":177,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":178,"author":{"gitId":"et-irl"},"content":"     * @param args Command line arguments (not used).","lastModifiedDate":"2023-08-19"},{"lineNumber":179,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":181,"author":{"gitId":"et-irl"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-19"},{"lineNumber":182,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":183,"author":{"gitId":"et-irl"},"content":"        Duke.greet();","lastModifiedDate":"2023-08-19"},{"lineNumber":184,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":185,"author":{"gitId":"et-irl"},"content":"        boolean continueParsing \u003d true;","lastModifiedDate":"2023-08-19"},{"lineNumber":186,"author":{"gitId":"et-irl"},"content":"        while (continueParsing) {","lastModifiedDate":"2023-08-19"},{"lineNumber":187,"author":{"gitId":"et-irl"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-19"},{"lineNumber":188,"author":{"gitId":"et-irl"},"content":"            try {","lastModifiedDate":"2023-08-19"},{"lineNumber":189,"author":{"gitId":"et-irl"},"content":"                continueParsing \u003d Duke.parseCommand(input);","lastModifiedDate":"2023-08-19"},{"lineNumber":190,"author":{"gitId":"et-irl"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-19"},{"lineNumber":191,"author":{"gitId":"et-irl"},"content":"                System.out.println(\"Argument Error: \" + e.getMessage());","lastModifiedDate":"2023-08-19"},{"lineNumber":192,"author":{"gitId":"et-irl"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-19"},{"lineNumber":193,"author":{"gitId":"et-irl"},"content":"                System.out.println(\"Out of Bounds Error: \" + e.getMessage());","lastModifiedDate":"2023-08-19"},{"lineNumber":194,"author":{"gitId":"et-irl"},"content":"            }","lastModifiedDate":"2023-08-19"},{"lineNumber":195,"author":{"gitId":"et-irl"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":196,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":197,"author":{"gitId":"et-irl"},"content":"        scanner.close();","lastModifiedDate":"2023-08-19"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"et-irl":195,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"et-irl"},"content":"/**","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"et-irl"},"content":" * Represents an event task that occurs within a specified time frame.","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"et-irl"},"content":" */","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"et-irl"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"et-irl"},"content":"    private String startTime;","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"et-irl"},"content":"    private String endTime;","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"et-irl"},"content":"     * Constructs an event task with the given name, start time, and end time.","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"et-irl"},"content":"     * @param name      The name of the event.","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"et-irl"},"content":"     * @param startTime The start time of the event.","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"et-irl"},"content":"     * @param endTime   The end time of the event.","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"et-irl"},"content":"    public Event(String name, String startTime, String endTime) {","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"et-irl"},"content":"        super(name);","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"et-irl"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"et-irl"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"et-irl"},"content":"     * Generates a formatted string representation of the event.","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"et-irl"},"content":"     * @return A formatted string representing the event.","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":26,"author":{"gitId":"et-irl"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":27,"author":{"gitId":"et-irl"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":28,"author":{"gitId":"et-irl"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), this.startTime, this.endTime);","lastModifiedDate":"2023-08-19"},{"lineNumber":29,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":30,"author":{"gitId":"et-irl"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"et-irl":30}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"et-irl"},"content":"/**","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"et-irl"},"content":" * Represents a generic task.","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"et-irl"},"content":" */","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"et-irl"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"et-irl"},"content":"    private String name;","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"et-irl"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"et-irl"},"content":"     * Constructs a task with the given name.","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"et-irl"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"et-irl"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"et-irl"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"et-irl"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"et-irl"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"et-irl"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"et-irl"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":26,"author":{"gitId":"et-irl"},"content":"     * Marks the task as undone.","lastModifiedDate":"2023-08-19"},{"lineNumber":27,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":28,"author":{"gitId":"et-irl"},"content":"    public void markUndone() {","lastModifiedDate":"2023-08-19"},{"lineNumber":29,"author":{"gitId":"et-irl"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-19"},{"lineNumber":30,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":31,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":32,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":33,"author":{"gitId":"et-irl"},"content":"     * Checks if the task is done.","lastModifiedDate":"2023-08-19"},{"lineNumber":34,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":35,"author":{"gitId":"et-irl"},"content":"     * @return {@code true} if the task is done, {@code false} otherwise.","lastModifiedDate":"2023-08-19"},{"lineNumber":36,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":37,"author":{"gitId":"et-irl"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-19"},{"lineNumber":38,"author":{"gitId":"et-irl"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-19"},{"lineNumber":39,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":40,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":41,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":42,"author":{"gitId":"et-irl"},"content":"     * Gets the name of the task.","lastModifiedDate":"2023-08-19"},{"lineNumber":43,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":44,"author":{"gitId":"et-irl"},"content":"     * @return The name of the task.","lastModifiedDate":"2023-08-19"},{"lineNumber":45,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":46,"author":{"gitId":"et-irl"},"content":"    public String getName() {","lastModifiedDate":"2023-08-19"},{"lineNumber":47,"author":{"gitId":"et-irl"},"content":"        return this.name;","lastModifiedDate":"2023-08-19"},{"lineNumber":48,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":49,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":50,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":51,"author":{"gitId":"et-irl"},"content":"     * Generates a formatted string representation of the task.","lastModifiedDate":"2023-08-19"},{"lineNumber":52,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":53,"author":{"gitId":"et-irl"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2023-08-19"},{"lineNumber":54,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":55,"author":{"gitId":"et-irl"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":56,"author":{"gitId":"et-irl"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":57,"author":{"gitId":"et-irl"},"content":"        return \"[\" +","lastModifiedDate":"2023-08-19"},{"lineNumber":58,"author":{"gitId":"et-irl"},"content":"            (isDone ? \"X\" : \" \") +","lastModifiedDate":"2023-08-19"},{"lineNumber":59,"author":{"gitId":"et-irl"},"content":"            \"] \" +","lastModifiedDate":"2023-08-19"},{"lineNumber":60,"author":{"gitId":"et-irl"},"content":"            this.name;","lastModifiedDate":"2023-08-19"},{"lineNumber":61,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":62,"author":{"gitId":"et-irl"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"et-irl":62}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"et-irl"},"content":"/**","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"et-irl"},"content":" * Represents a ToDo task.","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"et-irl"},"content":" */","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"et-irl"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"et-irl"},"content":"     * Constructs a ToDo task with the given name.","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"et-irl"},"content":"     * @param name The name of the ToDo task.","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"et-irl"},"content":"    public ToDo(String name) {","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"et-irl"},"content":"        super(name);","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"et-irl"},"content":"     * Generates a formatted string representation of the ToDo task.","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"et-irl"},"content":"     * @return A formatted string representing the ToDo task.","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"et-irl"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"et-irl"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"et-irl"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"et-irl"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"et-irl":23}},{"path":"src/main/java/ToDoList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"et-irl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"et-irl"},"content":"/**","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"et-irl"},"content":" * Represents a ToDoList that holds tasks.","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"et-irl"},"content":" */","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"et-irl"},"content":"public class ToDoList {","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"et-irl"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"et-irl"},"content":"     * Constructs an empty ToDoList.","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"et-irl"},"content":"    public ToDoList() {","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"et-irl"},"content":"        list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"et-irl"},"content":"     * Adds a task to the ToDoList.","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"et-irl"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"et-irl"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"et-irl"},"content":"        list.add(task);","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":26,"author":{"gitId":"et-irl"},"content":"     * Deletes a task at the specified index.","lastModifiedDate":"2023-08-19"},{"lineNumber":27,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":28,"author":{"gitId":"et-irl"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-08-19"},{"lineNumber":29,"author":{"gitId":"et-irl"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range.","lastModifiedDate":"2023-08-19"},{"lineNumber":30,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":31,"author":{"gitId":"et-irl"},"content":"    public void delete(int index) {","lastModifiedDate":"2023-08-19"},{"lineNumber":32,"author":{"gitId":"et-irl"},"content":"        if (index \u003c 1 || index \u003e list.size()) {","lastModifiedDate":"2023-08-19"},{"lineNumber":33,"author":{"gitId":"et-irl"},"content":"            throw new IndexOutOfBoundsException(\"Task index is out of range.\");","lastModifiedDate":"2023-08-19"},{"lineNumber":34,"author":{"gitId":"et-irl"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":35,"author":{"gitId":"et-irl"},"content":"        list.remove(index - 1);","lastModifiedDate":"2023-08-19"},{"lineNumber":36,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":37,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":38,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":39,"author":{"gitId":"et-irl"},"content":"     * Marks a task at the specified index as done.","lastModifiedDate":"2023-08-19"},{"lineNumber":40,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":41,"author":{"gitId":"et-irl"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2023-08-19"},{"lineNumber":42,"author":{"gitId":"et-irl"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range.","lastModifiedDate":"2023-08-19"},{"lineNumber":43,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":44,"author":{"gitId":"et-irl"},"content":"    public void mark(int index) {","lastModifiedDate":"2023-08-19"},{"lineNumber":45,"author":{"gitId":"et-irl"},"content":"        if (index \u003c 1 || index \u003e list.size()) {","lastModifiedDate":"2023-08-19"},{"lineNumber":46,"author":{"gitId":"et-irl"},"content":"            throw new IndexOutOfBoundsException(\"Task index is out of range.\");","lastModifiedDate":"2023-08-19"},{"lineNumber":47,"author":{"gitId":"et-irl"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":48,"author":{"gitId":"et-irl"},"content":"        list.get(index - 1).markDone();","lastModifiedDate":"2023-08-19"},{"lineNumber":49,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":50,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":51,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":52,"author":{"gitId":"et-irl"},"content":"     * Marks a task at the specified index as undone.","lastModifiedDate":"2023-08-19"},{"lineNumber":53,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":54,"author":{"gitId":"et-irl"},"content":"     * @param index The index of the task to be marked as undone.","lastModifiedDate":"2023-08-19"},{"lineNumber":55,"author":{"gitId":"et-irl"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range.","lastModifiedDate":"2023-08-19"},{"lineNumber":56,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":57,"author":{"gitId":"et-irl"},"content":"    public void unmark(int index) {","lastModifiedDate":"2023-08-19"},{"lineNumber":58,"author":{"gitId":"et-irl"},"content":"        if (index \u003c 1 || index \u003e list.size()) {","lastModifiedDate":"2023-08-19"},{"lineNumber":59,"author":{"gitId":"et-irl"},"content":"            throw new IndexOutOfBoundsException(\"Task index is out of range.\");","lastModifiedDate":"2023-08-19"},{"lineNumber":60,"author":{"gitId":"et-irl"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":61,"author":{"gitId":"et-irl"},"content":"        list.get(index - 1).markUndone();","lastModifiedDate":"2023-08-19"},{"lineNumber":62,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":63,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":64,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":65,"author":{"gitId":"et-irl"},"content":"     * Retrieves a task at the specified index.","lastModifiedDate":"2023-08-19"},{"lineNumber":66,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":67,"author":{"gitId":"et-irl"},"content":"     * @param index The index of the task to be retrieved.","lastModifiedDate":"2023-08-19"},{"lineNumber":68,"author":{"gitId":"et-irl"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-08-19"},{"lineNumber":69,"author":{"gitId":"et-irl"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range.","lastModifiedDate":"2023-08-19"},{"lineNumber":70,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":71,"author":{"gitId":"et-irl"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-08-19"},{"lineNumber":72,"author":{"gitId":"et-irl"},"content":"        if (index \u003c 1 || index \u003e list.size()) {","lastModifiedDate":"2023-08-19"},{"lineNumber":73,"author":{"gitId":"et-irl"},"content":"            throw new IndexOutOfBoundsException(\"Task index is out of range.\");","lastModifiedDate":"2023-08-19"},{"lineNumber":74,"author":{"gitId":"et-irl"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":75,"author":{"gitId":"et-irl"},"content":"        return list.get(index - 1);","lastModifiedDate":"2023-08-19"},{"lineNumber":76,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":77,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":78,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":79,"author":{"gitId":"et-irl"},"content":"     * Returns the number of tasks in the ToDoList.","lastModifiedDate":"2023-08-19"},{"lineNumber":80,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":81,"author":{"gitId":"et-irl"},"content":"     * @return The number of tasks.","lastModifiedDate":"2023-08-19"},{"lineNumber":82,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":83,"author":{"gitId":"et-irl"},"content":"    public int size() {","lastModifiedDate":"2023-08-19"},{"lineNumber":84,"author":{"gitId":"et-irl"},"content":"        return list.size();","lastModifiedDate":"2023-08-19"},{"lineNumber":85,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":86,"author":{"gitId":"et-irl"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":87,"author":{"gitId":"et-irl"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":88,"author":{"gitId":"et-irl"},"content":"     * Generates a string representation of the ToDoList.","lastModifiedDate":"2023-08-19"},{"lineNumber":89,"author":{"gitId":"et-irl"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":90,"author":{"gitId":"et-irl"},"content":"     * @return A formatted string of tasks in the ToDoList.","lastModifiedDate":"2023-08-19"},{"lineNumber":91,"author":{"gitId":"et-irl"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":92,"author":{"gitId":"et-irl"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":93,"author":{"gitId":"et-irl"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":94,"author":{"gitId":"et-irl"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-08-19"},{"lineNumber":95,"author":{"gitId":"et-irl"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-19"},{"lineNumber":96,"author":{"gitId":"et-irl"},"content":"            result.append((i + 1) + \". \" + list.get(i));","lastModifiedDate":"2023-08-19"},{"lineNumber":97,"author":{"gitId":"et-irl"},"content":"            if (i + 1 \u003c list.size()) {","lastModifiedDate":"2023-08-19"},{"lineNumber":98,"author":{"gitId":"et-irl"},"content":"                result.append(\"\\n\");","lastModifiedDate":"2023-08-19"},{"lineNumber":99,"author":{"gitId":"et-irl"},"content":"            }","lastModifiedDate":"2023-08-19"},{"lineNumber":100,"author":{"gitId":"et-irl"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":101,"author":{"gitId":"et-irl"},"content":"        return result.toString();","lastModifiedDate":"2023-08-19"},{"lineNumber":102,"author":{"gitId":"et-irl"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":103,"author":{"gitId":"et-irl"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"et-irl":103}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"et-irl"},"content":"todo borrow book","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"et-irl"},"content":"todo","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"et-irl"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"et-irl"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"et-irl"},"content":"deadline return book","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"et-irl"},"content":"deadline","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"et-irl"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"et-irl"},"content":"event project meeting /from Mon 2pm","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"et-irl"},"content":"event project meeting","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"et-irl"},"content":"event","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"et-irl"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"et-irl"},"content":"event no idea /from no idea /to no idea","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"et-irl"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"et-irl"},"content":"unmark -2","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"et-irl"},"content":"mark -2","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"et-irl"},"content":"unmark 0","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"et-irl"},"content":"mark 0","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"et-irl"},"content":"unmark 0","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"et-irl"},"content":"mark 2","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"et-irl"},"content":"mark 4","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"et-irl"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"et-irl"},"content":"invalidcommand","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"et-irl"},"content":"bye","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"et-irl":23}}]
