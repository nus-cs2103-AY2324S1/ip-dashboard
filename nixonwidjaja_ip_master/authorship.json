[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"nixonwidjaja"},"content":"# AdaBot","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"nixonwidjaja"},"content":"\u003e \"Adapt. Improvise. Overcome.\" - Tom Cruise","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"nixonwidjaja"},"content":"AdaBot frees your mind of having to remember things you need to do. It\u0027s,","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"nixonwidjaja"},"content":"* text-based","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"nixonwidjaja"},"content":"* easy to learn","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"nixonwidjaja"},"content":"* ~~FAST~~ SUPER FAST to use","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"nixonwidjaja"},"content":"All you need to do is,","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"nixonwidjaja"},"content":"1. Add your tasks","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"nixonwidjaja"},"content":"2. Let it manage your tasks for you ðŸ˜‰","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"nixonwidjaja"},"content":"And it is **FREE!**","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"nixonwidjaja"},"content":"Features:","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"nixonwidjaja"},"content":"- [x] Managing tasks","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"nixonwidjaja"},"content":"- [x] Managing deadline","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"nixonwidjaja"},"content":"- [x] Managing events","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"nixonwidjaja"},"content":"- [x] User-friendly and intuitive GUI","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"nixonwidjaja"},"content":"# User Guide","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"nixonwidjaja"},"content":"See User Guide [here](http://nixonwidjaja.github.io/ip/)","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"nixonwidjaja"},"content":"# Get Started","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"nixonwidjaja"},"content":"- You can download the jar file [here](https://github.com/nixonwidjaja/ip/releases)","lastModifiedDate":"2023-09-17"},{"lineNumber":27,"author":{"gitId":"nixonwidjaja"},"content":"- Make sure you have Java and JRE installed on your device","lastModifiedDate":"2023-09-17"},{"lineNumber":28,"author":{"gitId":"nixonwidjaja"},"content":"- Run the jar file","lastModifiedDate":"2023-09-17"},{"lineNumber":29,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":30,"author":{"gitId":"nixonwidjaja"},"content":"##","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"nixonwidjaja"},"content":"If you Java programmer, you can use it to practice Java too. Here\u0027s the ```main``` method in ```Duke.java```:","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"nixonwidjaja"},"content":"```java","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"nixonwidjaja"},"content":" public static void main(String[] args) {","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"nixonwidjaja"},"content":"     new Duke().run();","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"nixonwidjaja"},"content":" }","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nixonwidjaja":31,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"nixonwidjaja"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"nixonwidjaja"},"content":"}","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"nixonwidjaja"},"content":"checkstyle {","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"nixonwidjaja"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"nixonwidjaja"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.15.2\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"nixonwidjaja"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.15.2\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"nixonwidjaja"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"nixonwidjaja"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"nixonwidjaja"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"nixonwidjaja"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"nixonwidjaja"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"nixonwidjaja"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"nixonwidjaja"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"nixonwidjaja"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"nixonwidjaja"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"nixonwidjaja"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"nixonwidjaja"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"nixonwidjaja"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"nixonwidjaja"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"nixonwidjaja"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"nixonwidjaja"},"content":"    archiveFileName \u003d \"AdaBot.jar\"","lastModifiedDate":"2023-09-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nixonwidjaja":23,"-":38}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"nixonwidjaja"},"content":"# AdaBot User Guide","lastModifiedDate":"2023-09-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":3,"author":{"gitId":"nixonwidjaja"},"content":"![UI Example](Ui.png)","lastModifiedDate":"2023-09-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":5,"author":{"gitId":"nixonwidjaja"},"content":"## About","lastModifiedDate":"2023-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":7,"author":{"gitId":"nixonwidjaja"},"content":"AdaBot is a **fast chatbot app** designed to help you manage your tasks.","lastModifiedDate":"2023-09-17"},{"lineNumber":8,"author":{"gitId":"nixonwidjaja"},"content":"Simply type your commands and AdaBot will handle the rest.","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"nixonwidjaja"},"content":"### User-friendly GUI","lastModifiedDate":"2023-09-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"nixonwidjaja"},"content":"As we can see from the image above, AdaBot is user-friendly and intuitive.","lastModifiedDate":"2023-09-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"nixonwidjaja"},"content":"### Local Storage","lastModifiedDate":"2023-09-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"nixonwidjaja"},"content":"Your interaction with AdaBot will be saved in a task list stored in your local device,","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"nixonwidjaja"},"content":"so all your tasks will be safe as long as your device is safe.","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"nixonwidjaja"},"content":"### Deadline, Event, Todo","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"nixonwidjaja"},"content":"AdaBot handles 3 types of tasks:","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"nixonwidjaja"},"content":"- Deadline, which has a deadline date","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"nixonwidjaja"},"content":"- Event, which has start and end dates","lastModifiedDate":"2023-09-17"},{"lineNumber":27,"author":{"gitId":"nixonwidjaja"},"content":"- Todo, which is not associated with time","lastModifiedDate":"2023-09-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":29,"author":{"gitId":"nixonwidjaja"},"content":"## Usage - List of Commands","lastModifiedDate":"2023-09-17"},{"lineNumber":30,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":31,"author":{"gitId":"nixonwidjaja"},"content":"### ` ` - List all available commands","lastModifiedDate":"2023-09-17"},{"lineNumber":32,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":33,"author":{"gitId":"nixonwidjaja"},"content":"You\u0027re a new user? Don\u0027t worry! Simply type nothing and click Enter to see all available commands.","lastModifiedDate":"2023-09-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":35,"author":{"gitId":"nixonwidjaja"},"content":"To support fast typers, AdaBot provides an alias for each command.","lastModifiedDate":"2023-09-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":37,"author":{"gitId":"nixonwidjaja"},"content":"### `list`/`l` - List all tasks","lastModifiedDate":"2023-09-17"},{"lineNumber":38,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":39,"author":{"gitId":"nixonwidjaja"},"content":"List all tasks saved on AdaBot.","lastModifiedDate":"2023-09-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":41,"author":{"gitId":"nixonwidjaja"},"content":"\u003e `list`","lastModifiedDate":"2023-09-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"nixonwidjaja"},"content":"### `deadline`/`d` Add a deadline","lastModifiedDate":"2023-09-17"},{"lineNumber":44,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":45,"author":{"gitId":"nixonwidjaja"},"content":"Add a deadline to your task list with specified `YYYY-MM-DD` deadline date","lastModifiedDate":"2023-09-17"},{"lineNumber":46,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":47,"author":{"gitId":"nixonwidjaja"},"content":"\u003e `deadline [description] /by [YYYY-MM-DD]`","lastModifiedDate":"2023-09-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"nixonwidjaja"},"content":"Example:","lastModifiedDate":"2023-09-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"nixonwidjaja"},"content":"`deadline homework /by 2023-12-31` will add a deadline named **homework** that is due on 31 Dec 2023.","lastModifiedDate":"2023-09-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"nixonwidjaja"},"content":"### `event`/`e` Add an event","lastModifiedDate":"2023-09-17"},{"lineNumber":54,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":55,"author":{"gitId":"nixonwidjaja"},"content":"Add an event to your task list with specified `YYYY-MM-DD` start date and `YYYY-MM-DD` end date","lastModifiedDate":"2023-09-17"},{"lineNumber":56,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":57,"author":{"gitId":"nixonwidjaja"},"content":"\u003e `event [description] /from [YYYY-MM-DD] /to [YYYY-MM-DD]`","lastModifiedDate":"2023-09-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"nixonwidjaja"},"content":"Example:","lastModifiedDate":"2023-09-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"nixonwidjaja"},"content":"`event holiday /from 2023-12-01 /to 2023-12-31` will add an event named **holiday** from 1 Dec 2023 to 31 Dec 2023.","lastModifiedDate":"2023-09-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"nixonwidjaja"},"content":"### `todo`/`t` Add a todo","lastModifiedDate":"2023-09-17"},{"lineNumber":64,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":65,"author":{"gitId":"nixonwidjaja"},"content":"Add a todo to your task list without any specified date","lastModifiedDate":"2023-09-17"},{"lineNumber":66,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":67,"author":{"gitId":"nixonwidjaja"},"content":"\u003e `todo [description]`","lastModifiedDate":"2023-09-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":69,"author":{"gitId":"nixonwidjaja"},"content":"Example:","lastModifiedDate":"2023-09-17"},{"lineNumber":70,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":71,"author":{"gitId":"nixonwidjaja"},"content":"`todo workout` will add a todo task named **workout** to your task list.","lastModifiedDate":"2023-09-17"},{"lineNumber":72,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":73,"author":{"gitId":"nixonwidjaja"},"content":"### `mark`/`m` Mark your task as done","lastModifiedDate":"2023-09-17"},{"lineNumber":74,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":75,"author":{"gitId":"nixonwidjaja"},"content":"\u003e `mark [number]`","lastModifiedDate":"2023-09-17"},{"lineNumber":76,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":77,"author":{"gitId":"nixonwidjaja"},"content":"Example:","lastModifiedDate":"2023-09-17"},{"lineNumber":78,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":79,"author":{"gitId":"nixonwidjaja"},"content":"`mark 3` will mark **the third task**, i.e., task number 3 in your task list as done.","lastModifiedDate":"2023-09-17"},{"lineNumber":80,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":81,"author":{"gitId":"nixonwidjaja"},"content":"Outcome:","lastModifiedDate":"2023-09-17"},{"lineNumber":82,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":84,"author":{"gitId":"nixonwidjaja"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-09-17"},{"lineNumber":85,"author":{"gitId":"nixonwidjaja"},"content":" [E][X] holiday (1 Dec 2023 - 31 Dec 2023)","lastModifiedDate":"2023-09-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":87,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":88,"author":{"gitId":"nixonwidjaja"},"content":"### `unmark`/`u` Mark your task as not done","lastModifiedDate":"2023-09-17"},{"lineNumber":89,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":90,"author":{"gitId":"nixonwidjaja"},"content":"\u003e `unmark [number]`","lastModifiedDate":"2023-09-17"},{"lineNumber":91,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":92,"author":{"gitId":"nixonwidjaja"},"content":"Example:","lastModifiedDate":"2023-09-17"},{"lineNumber":93,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":94,"author":{"gitId":"nixonwidjaja"},"content":"`unmark 3` will mark **the third task**, i.e., task number 3 in your task list as not done.","lastModifiedDate":"2023-09-17"},{"lineNumber":95,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":96,"author":{"gitId":"nixonwidjaja"},"content":"### `find`/`f` Find all tasks with specified keyword","lastModifiedDate":"2023-09-17"},{"lineNumber":97,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":98,"author":{"gitId":"nixonwidjaja"},"content":"This command will list all tasks that contain the keyword you\u0027re looking for.","lastModifiedDate":"2023-09-17"},{"lineNumber":99,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":100,"author":{"gitId":"nixonwidjaja"},"content":"\u003e `find [keyword]`","lastModifiedDate":"2023-09-17"},{"lineNumber":101,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":102,"author":{"gitId":"nixonwidjaja"},"content":"Example:","lastModifiedDate":"2023-09-17"},{"lineNumber":103,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":104,"author":{"gitId":"nixonwidjaja"},"content":"`find exam` will list all tasks in your task list that contain the word \"exam\" in it. Keyword is case-sensitive.","lastModifiedDate":"2023-09-17"},{"lineNumber":105,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":106,"author":{"gitId":"nixonwidjaja"},"content":"### `date`/`a` Find all tasks you have on a specific date","lastModifiedDate":"2023-09-17"},{"lineNumber":107,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":108,"author":{"gitId":"nixonwidjaja"},"content":"\u003e `date [YYYY-MM-DD]`","lastModifiedDate":"2023-09-17"},{"lineNumber":109,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":110,"author":{"gitId":"nixonwidjaja"},"content":"Example:","lastModifiedDate":"2023-09-17"},{"lineNumber":111,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":112,"author":{"gitId":"nixonwidjaja"},"content":"`date 2023-12-31` will list all tasks you have on 31 Dec 2023.","lastModifiedDate":"2023-09-17"},{"lineNumber":113,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":114,"author":{"gitId":"nixonwidjaja"},"content":"Outcome:","lastModifiedDate":"2023-09-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-17"},{"lineNumber":117,"author":{"gitId":"nixonwidjaja"},"content":"Here are the tasks on 31 Dec 2023:","lastModifiedDate":"2023-09-17"},{"lineNumber":118,"author":{"gitId":"nixonwidjaja"},"content":"1.[E][X] holiday (1 Dec 2023 - 31 Dec 2023)","lastModifiedDate":"2023-09-17"},{"lineNumber":119,"author":{"gitId":"nixonwidjaja"},"content":"2.[D][] tP (by: 31 Dec 2023)","lastModifiedDate":"2023-09-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-17"},{"lineNumber":121,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":122,"author":{"gitId":"nixonwidjaja"},"content":"### `delete`/`del` Delete a task","lastModifiedDate":"2023-09-17"},{"lineNumber":123,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":124,"author":{"gitId":"nixonwidjaja"},"content":"\u003e `delete [number]`","lastModifiedDate":"2023-09-17"},{"lineNumber":125,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":126,"author":{"gitId":"nixonwidjaja"},"content":"Example:","lastModifiedDate":"2023-09-17"},{"lineNumber":127,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":128,"author":{"gitId":"nixonwidjaja"},"content":"`delete 3` will delete **the third task**, i.e., task number 3 in your task list.","lastModifiedDate":"2023-09-17"},{"lineNumber":129,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":130,"author":{"gitId":"nixonwidjaja"},"content":"### `bye`/`b` Close AdaBot","lastModifiedDate":"2023-09-17"},{"lineNumber":131,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":132,"author":{"gitId":"nixonwidjaja"},"content":"Terminates the AdaBot session. Note that the window is not automatically closed.","lastModifiedDate":"2023-09-17"},{"lineNumber":133,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":134,"author":{"gitId":"nixonwidjaja"},"content":"\u003e `bye`","lastModifiedDate":"2023-09-17"},{"lineNumber":135,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":136,"author":{"gitId":"nixonwidjaja"},"content":"Outcome:","lastModifiedDate":"2023-09-17"},{"lineNumber":137,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":138,"author":{"gitId":"nixonwidjaja"},"content":"```","lastModifiedDate":"2023-09-17"},{"lineNumber":139,"author":{"gitId":"nixonwidjaja"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2023-09-17"},{"lineNumber":140,"author":{"gitId":"nixonwidjaja"},"content":"AdaBot is terminated. You may close this window.","lastModifiedDate":"2023-09-17"},{"lineNumber":141,"author":{"gitId":"nixonwidjaja"},"content":"```","lastModifiedDate":"2023-09-17"},{"lineNumber":142,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":143,"author":{"gitId":"nixonwidjaja"},"content":"## Command Summary","lastModifiedDate":"2023-09-17"},{"lineNumber":144,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":145,"author":{"gitId":"nixonwidjaja"},"content":"| Alias                                                 | Command Word | Function                                   |","lastModifiedDate":"2023-09-17"},{"lineNumber":146,"author":{"gitId":"nixonwidjaja"},"content":"| ----------------------------------------------------- | ------------ | ------------------------------------------ |","lastModifiedDate":"2023-09-17"},{"lineNumber":147,"author":{"gitId":"nixonwidjaja"},"content":"| ` `                                                   | ` `          | List all available commands                |","lastModifiedDate":"2023-09-17"},{"lineNumber":148,"author":{"gitId":"nixonwidjaja"},"content":"| `l`                                                   | `list`       | List all tasks                             |","lastModifiedDate":"2023-09-17"},{"lineNumber":149,"author":{"gitId":"nixonwidjaja"},"content":"| `d [description] /by [YYYY-MM-DD]`                    | `deadline`   | Add a deadline                             |","lastModifiedDate":"2023-09-17"},{"lineNumber":150,"author":{"gitId":"nixonwidjaja"},"content":"| `e [description] /from [YYYY-MM-DD] /to [YYYY-MM-DD]` | `event`      | Add an event                               |","lastModifiedDate":"2023-09-17"},{"lineNumber":151,"author":{"gitId":"nixonwidjaja"},"content":"| `t [description]`                                     | `todo`       | Add a todo task                            |","lastModifiedDate":"2023-09-17"},{"lineNumber":152,"author":{"gitId":"nixonwidjaja"},"content":"| `m [number]`                                          | `mark`       | Mark task as done                          |","lastModifiedDate":"2023-09-17"},{"lineNumber":153,"author":{"gitId":"nixonwidjaja"},"content":"| `u [number]`                                          | `unmark`     | Mark task as not done                      |","lastModifiedDate":"2023-09-17"},{"lineNumber":154,"author":{"gitId":"nixonwidjaja"},"content":"| `f [keyword]`                                         | `find`       | Find all tasks with specified keyword      |","lastModifiedDate":"2023-09-17"},{"lineNumber":155,"author":{"gitId":"nixonwidjaja"},"content":"| `a [YYYY-MM-DD]`                                      | `date`       | Find all tasks you have on a specific date |","lastModifiedDate":"2023-09-17"},{"lineNumber":156,"author":{"gitId":"nixonwidjaja"},"content":"| `del [number]`                                        | `delete`     | Delete a task                              |","lastModifiedDate":"2023-09-17"},{"lineNumber":157,"author":{"gitId":"nixonwidjaja"},"content":"| `b`                                                   | `bye`        | Close AdaBot                               |","lastModifiedDate":"2023-09-17"},{"lineNumber":158,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":159,"author":{"gitId":"nixonwidjaja"},"content":"# Get Started","lastModifiedDate":"2023-09-17"},{"lineNumber":160,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":161,"author":{"gitId":"nixonwidjaja"},"content":"- You can download the jar file [here](https://github.com/nixonwidjaja/ip/releases)","lastModifiedDate":"2023-09-17"},{"lineNumber":162,"author":{"gitId":"nixonwidjaja"},"content":"- Make sure you have Java and JRE installed on your device","lastModifiedDate":"2023-09-17"},{"lineNumber":163,"author":{"gitId":"nixonwidjaja"},"content":"- Run the jar file","lastModifiedDate":"2023-09-17"}],"authorContributionMap":{"nixonwidjaja":134,"-":29}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nixonwidjaja"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"nixonwidjaja"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"nixonwidjaja"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"nixonwidjaja"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"nixonwidjaja"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"nixonwidjaja"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"nixonwidjaja"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"nixonwidjaja"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nixonwidjaja"},"content":" * The backbone of the program.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nixonwidjaja"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nixonwidjaja"},"content":"public class Duke {","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"nixonwidjaja"},"content":"    private boolean isTerminated;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"nixonwidjaja"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"nixonwidjaja"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"nixonwidjaja"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"nixonwidjaja"},"content":"     * Constructor for Duke.","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"nixonwidjaja"},"content":"    public Duke() {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"nixonwidjaja"},"content":"        this.isTerminated \u003d false;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"nixonwidjaja"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"nixonwidjaja"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"nixonwidjaja"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":29,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":30,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"nixonwidjaja"},"content":"     * Constructor for Duke with specified filePath.","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"nixonwidjaja"},"content":"     * @param filePath","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"nixonwidjaja"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"nixonwidjaja"},"content":"        this.isTerminated \u003d false;","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"nixonwidjaja"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"nixonwidjaja"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"nixonwidjaja"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":40,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":41,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"nixonwidjaja"},"content":"     * Runs the program.","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"nixonwidjaja"},"content":"    public void run() {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"nixonwidjaja"},"content":"        ui.print(init());","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"nixonwidjaja"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-19"},{"lineNumber":48,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":49,"author":{"gitId":"nixonwidjaja"},"content":"        while (input.hasNextLine()) {","lastModifiedDate":"2023-08-19"},{"lineNumber":50,"author":{"gitId":"nixonwidjaja"},"content":"            try {","lastModifiedDate":"2023-08-19"},{"lineNumber":51,"author":{"gitId":"nixonwidjaja"},"content":"                String response \u003d input.nextLine();","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"nixonwidjaja"},"content":"                ui.print(process(response));","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"nixonwidjaja"},"content":"                if (isTerminated) {","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"nixonwidjaja"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"nixonwidjaja"},"content":"                }","lastModifiedDate":"2023-08-19"},{"lineNumber":56,"author":{"gitId":"nixonwidjaja"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-19"},{"lineNumber":57,"author":{"gitId":"nixonwidjaja"},"content":"                ui.printError(e.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"nixonwidjaja"},"content":"            }","lastModifiedDate":"2023-08-19"},{"lineNumber":59,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":60,"author":{"gitId":"nixonwidjaja"},"content":"        input.close();","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"nixonwidjaja"},"content":"     * Inititates the task list from file data and prints hello.","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"nixonwidjaja"},"content":"     * @return","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":67,"author":{"gitId":"nixonwidjaja"},"content":"    public String init() {","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"nixonwidjaja"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"nixonwidjaja"},"content":"            tasks \u003d storage.read();","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"nixonwidjaja"},"content":"            return ui.hello();","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"nixonwidjaja"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"nixonwidjaja"},"content":"            return e.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":77,"author":{"gitId":"nixonwidjaja"},"content":"     * Processes user input and executes the appropriate command.","lastModifiedDate":"2023-09-13"},{"lineNumber":78,"author":{"gitId":"nixonwidjaja"},"content":"     * @param input user input","lastModifiedDate":"2023-09-13"},{"lineNumber":79,"author":{"gitId":"nixonwidjaja"},"content":"     * @return Duke\u0027s respond","lastModifiedDate":"2023-09-13"},{"lineNumber":80,"author":{"gitId":"nixonwidjaja"},"content":"     * @throws DukeException if invalid input","lastModifiedDate":"2023-09-13"},{"lineNumber":81,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":82,"author":{"gitId":"nixonwidjaja"},"content":"    public String process(String input) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"nixonwidjaja"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"nixonwidjaja"},"content":"        isTerminated \u003d command.isExit();","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"nixonwidjaja"},"content":"        String res \u003d command.execute(tasks, ui);","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"nixonwidjaja"},"content":"        storage.write(tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"nixonwidjaja"},"content":"        return res;","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":89,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"nixonwidjaja"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"nixonwidjaja"},"content":"        new Duke().run();","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"nixonwidjaja"},"content":"    public boolean isTerminated() {","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"nixonwidjaja"},"content":"        return isTerminated;","lastModifiedDate":"2023-09-07"},{"lineNumber":96,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"nixonwidjaja"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"nixonwidjaja":97}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nixonwidjaja"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"nixonwidjaja"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"nixonwidjaja"},"content":" * Specialized exception for Duke project.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"nixonwidjaja"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"nixonwidjaja"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"nixonwidjaja"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"nixonwidjaja"},"content":"        super(message);","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"nixonwidjaja"},"content":"    public DukeException(String message, Throwable cause) {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"nixonwidjaja"},"content":"        super(message, cause);","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"nixonwidjaja"},"content":"    public DukeException(Throwable cause) {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"nixonwidjaja"},"content":"        super(cause);","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"nixonwidjaja"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"nixonwidjaja"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"nixonwidjaja"},"content":"        return super.getMessage();","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"nixonwidjaja"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"nixonwidjaja":23}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nixonwidjaja"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"nixonwidjaja"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"nixonwidjaja"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"nixonwidjaja"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"nixonwidjaja"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"nixonwidjaja"},"content":"public class Launcher {","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"nixonwidjaja"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"nixonwidjaja"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"nixonwidjaja"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"nixonwidjaja":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nixonwidjaja"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"nixonwidjaja"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"nixonwidjaja"},"content":"import gui.MainWindow;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"nixonwidjaja"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"nixonwidjaja"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"nixonwidjaja"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"nixonwidjaja"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"nixonwidjaja"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"nixonwidjaja"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"nixonwidjaja"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"nixonwidjaja"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"nixonwidjaja"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"nixonwidjaja"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"nixonwidjaja"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"nixonwidjaja"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"nixonwidjaja"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"nixonwidjaja"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"nixonwidjaja"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"nixonwidjaja"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"nixonwidjaja"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"nixonwidjaja"},"content":"            stage.setTitle(\"AdaBot\");","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"nixonwidjaja"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"nixonwidjaja"},"content":"            stage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"nixonwidjaja"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"nixonwidjaja"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"nixonwidjaja"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"nixonwidjaja":33}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nixonwidjaja"},"content":"package duke.command;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"nixonwidjaja"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"nixonwidjaja"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"nixonwidjaja"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"nixonwidjaja"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"nixonwidjaja"},"content":" * This command functions to add task to a task list.","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"nixonwidjaja"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"nixonwidjaja"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"nixonwidjaja"},"content":"    private Task task;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"nixonwidjaja"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"nixonwidjaja"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"nixonwidjaja"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"nixonwidjaja"},"content":"    public String execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"nixonwidjaja"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"nixonwidjaja"},"content":"        return ui.addTask(tasks, task);","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"nixonwidjaja"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"nixonwidjaja":22}},{"path":"src/main/java/duke/command/AllCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nixonwidjaja"},"content":"package duke.command;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"nixonwidjaja"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"nixonwidjaja"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"nixonwidjaja"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"nixonwidjaja"},"content":" * This command functions to list all available commands.","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"nixonwidjaja"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"nixonwidjaja"},"content":"public class AllCommand extends Command {","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"nixonwidjaja"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"nixonwidjaja"},"content":"    public String execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"nixonwidjaja"},"content":"        return ui.all();","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"nixonwidjaja"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"nixonwidjaja":14}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nixonwidjaja"},"content":"package duke.command;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"nixonwidjaja"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"nixonwidjaja"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"nixonwidjaja"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"nixonwidjaja"},"content":" * This command functions to terminate the program.","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"nixonwidjaja"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"nixonwidjaja"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"nixonwidjaja"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"nixonwidjaja"},"content":"        return true;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"nixonwidjaja"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"nixonwidjaja"},"content":"    public String execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"nixonwidjaja"},"content":"        return ui.bye();","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"nixonwidjaja"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"nixonwidjaja":18}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nixonwidjaja"},"content":"package duke.command;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"nixonwidjaja"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"nixonwidjaja"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"nixonwidjaja"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"nixonwidjaja"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"nixonwidjaja"},"content":" * This abstract class represents command and becomes the parent","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"nixonwidjaja"},"content":" * of all commands.","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"nixonwidjaja"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"nixonwidjaja"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"nixonwidjaja"},"content":"     * Returns a boolean to state whether the program terminates on command.","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"nixonwidjaja"},"content":"     * @return boolean whether the program terminates on command.","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"nixonwidjaja"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"nixonwidjaja"},"content":"        return false;","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"nixonwidjaja"},"content":"     * Provides a template to execute function.","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"nixonwidjaja"},"content":"     * @param tasks","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"nixonwidjaja"},"content":"     * @param ui","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"nixonwidjaja"},"content":"     * @throws DukeException","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"nixonwidjaja"},"content":"    public abstract String execute(TaskList tasks, Ui ui) throws DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"nixonwidjaja"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"nixonwidjaja":27}},{"path":"src/main/java/duke/command/DateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nixonwidjaja"},"content":"package duke.command;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"nixonwidjaja"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"nixonwidjaja"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"nixonwidjaja"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"nixonwidjaja"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"nixonwidjaja"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"nixonwidjaja"},"content":" * This command functions to return all tasks that happen on specified date.","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"nixonwidjaja"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"nixonwidjaja"},"content":"public class DateCommand extends Command {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"nixonwidjaja"},"content":"    private String date;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"nixonwidjaja"},"content":"    public DateCommand(String date) {","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"nixonwidjaja"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"nixonwidjaja"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"nixonwidjaja"},"content":"    public String execute(TaskList tasks, Ui ui) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"nixonwidjaja"},"content":"        TaskList tasksToday \u003d new TaskList();","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"nixonwidjaja"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"nixonwidjaja"},"content":"            if (task.isToday(date)) {","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"nixonwidjaja"},"content":"                tasksToday.add(task);","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"nixonwidjaja"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"nixonwidjaja"},"content":"        return ui.date(tasksToday, date);","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"nixonwidjaja"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"nixonwidjaja":28}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nixonwidjaja"},"content":"package duke.command;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"nixonwidjaja"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"nixonwidjaja"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"nixonwidjaja"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"nixonwidjaja"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"nixonwidjaja"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"nixonwidjaja"},"content":" * This command functions to delete a task at specified index.","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"nixonwidjaja"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"nixonwidjaja"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"nixonwidjaja"},"content":"    private int index;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"nixonwidjaja"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"nixonwidjaja"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"nixonwidjaja"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"nixonwidjaja"},"content":"    public String execute(TaskList tasks, Ui ui) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"nixonwidjaja"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"nixonwidjaja"},"content":"            throw new DukeException(\"Invalid task index\");","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"nixonwidjaja"},"content":"        Task task \u003d tasks.remove(index);","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"nixonwidjaja"},"content":"        return ui.deleteTask(tasks, task);","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"nixonwidjaja"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"nixonwidjaja":26}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nixonwidjaja"},"content":"package duke.command;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"nixonwidjaja"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"nixonwidjaja"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"nixonwidjaja"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"nixonwidjaja"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"nixonwidjaja"},"content":" * This command functions to find a task that contains a specified keyword.","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"nixonwidjaja"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"nixonwidjaja"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"nixonwidjaja"},"content":"    private String keyword;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"nixonwidjaja"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"nixonwidjaja"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"nixonwidjaja"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"nixonwidjaja"},"content":"    public String execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"nixonwidjaja"},"content":"        TaskList tasksWithKeyword \u003d new TaskList();","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"nixonwidjaja"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"nixonwidjaja"},"content":"            if (task.contains(keyword)) {","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"nixonwidjaja"},"content":"                tasksWithKeyword.add(task);","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"nixonwidjaja"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"nixonwidjaja"},"content":"        return ui.find(tasksWithKeyword, keyword);","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"nixonwidjaja"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"nixonwidjaja":27}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nixonwidjaja"},"content":"package duke.command;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"nixonwidjaja"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"nixonwidjaja"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"nixonwidjaja"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"nixonwidjaja"},"content":" * This command functions to list all saved tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"nixonwidjaja"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"nixonwidjaja"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"nixonwidjaja"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"nixonwidjaja"},"content":"    public String execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"nixonwidjaja"},"content":"        return ui.list(tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"nixonwidjaja"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"nixonwidjaja":14}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nixonwidjaja"},"content":"package duke.command;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"nixonwidjaja"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"nixonwidjaja"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"nixonwidjaja"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"nixonwidjaja"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"nixonwidjaja"},"content":" * This command functions to mark a task at specified index.","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"nixonwidjaja"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"nixonwidjaja"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"nixonwidjaja"},"content":"    private int index;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"nixonwidjaja"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"nixonwidjaja"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"nixonwidjaja"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"nixonwidjaja"},"content":"    public String execute(TaskList tasks, Ui ui) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"nixonwidjaja"},"content":"        boolean marked \u003d tasks.markDone(index);","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"nixonwidjaja"},"content":"        return ui.mark(tasks.get(index), marked);","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"nixonwidjaja"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"nixonwidjaja":22}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nixonwidjaja"},"content":"package duke.command;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"nixonwidjaja"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"nixonwidjaja"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"nixonwidjaja"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"nixonwidjaja"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"nixonwidjaja"},"content":" * This command functions to unmark a task at specified index.","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"nixonwidjaja"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"nixonwidjaja"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"nixonwidjaja"},"content":"    private int index;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"nixonwidjaja"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"nixonwidjaja"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"nixonwidjaja"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"nixonwidjaja"},"content":"    public String execute(TaskList tasks, Ui ui) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"nixonwidjaja"},"content":"        boolean success \u003d tasks.unmarkDone(index);","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"nixonwidjaja"},"content":"        return ui.unmark(tasks.get(index), success);","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"nixonwidjaja"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"nixonwidjaja":22}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nixonwidjaja"},"content":"package duke.parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"nixonwidjaja"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"nixonwidjaja"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"nixonwidjaja"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"nixonwidjaja"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"nixonwidjaja"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"nixonwidjaja"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"nixonwidjaja"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"nixonwidjaja"},"content":"import duke.command.AllCommand;","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"nixonwidjaja"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"nixonwidjaja"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"nixonwidjaja"},"content":"import duke.command.DateCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"nixonwidjaja"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"nixonwidjaja"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"nixonwidjaja"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"nixonwidjaja"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"nixonwidjaja"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"nixonwidjaja"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"nixonwidjaja"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"nixonwidjaja"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"nixonwidjaja"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"nixonwidjaja"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"nixonwidjaja"},"content":" * Provides static methods to parse user queries and data file.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"nixonwidjaja"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"nixonwidjaja"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"nixonwidjaja"},"content":"    private static final String EMPTY_DEADLINE_DATE \u003d \"Please specify deadline date using /by\\n\"","lastModifiedDate":"2023-09-17"},{"lineNumber":30,"author":{"gitId":"nixonwidjaja"},"content":"        + \"e.g. deadline report /by 2023-12-31\";","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"nixonwidjaja"},"content":"    private static final String EMPTY_EVENT_DATE \u003d \"Please specify event start and end dates using /from and /to\\n\"","lastModifiedDate":"2023-09-17"},{"lineNumber":32,"author":{"gitId":"nixonwidjaja"},"content":"        + \"e.g. event holiday /from 2023-06-01 /to 2023-06-30\";","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"nixonwidjaja"},"content":"    private static final String EMPTY_DEADLINE_DESC \u003d \"The description of a deadline cannot be empty.\\n\"","lastModifiedDate":"2023-09-17"},{"lineNumber":34,"author":{"gitId":"nixonwidjaja"},"content":"        + \"e.g. deadline report /by 2023-12-31\";","lastModifiedDate":"2023-09-17"},{"lineNumber":35,"author":{"gitId":"nixonwidjaja"},"content":"    private static final String EMPTY_EVENT_DESC \u003d \"The description of a event cannot be empty.\\n\"","lastModifiedDate":"2023-09-17"},{"lineNumber":36,"author":{"gitId":"nixonwidjaja"},"content":"        + \"e.g. event holiday /from 2023-06-01 /to 2023-06-30\";","lastModifiedDate":"2023-09-17"},{"lineNumber":37,"author":{"gitId":"nixonwidjaja"},"content":"    private static final String EMPTY_KEYWORD \u003d \"What are you trying to find?\\n\"","lastModifiedDate":"2023-09-17"},{"lineNumber":38,"author":{"gitId":"nixonwidjaja"},"content":"        + \"e.g. find holiday\";","lastModifiedDate":"2023-09-17"},{"lineNumber":39,"author":{"gitId":"nixonwidjaja"},"content":"    private static final String EMPTY_DELETE_INDEX \u003d \"Please specify the index of which task you would \"","lastModifiedDate":"2023-09-17"},{"lineNumber":40,"author":{"gitId":"nixonwidjaja"},"content":"        + \"like to delete.\\ne.g. delete 3\";","lastModifiedDate":"2023-09-17"},{"lineNumber":41,"author":{"gitId":"nixonwidjaja"},"content":"    private static final String EMPTY_MARK_INDEX \u003d \"Please specify the index of which task you would like to mark.\\n\"","lastModifiedDate":"2023-09-17"},{"lineNumber":42,"author":{"gitId":"nixonwidjaja"},"content":"        + \"e.g. mark 3\";","lastModifiedDate":"2023-09-17"},{"lineNumber":43,"author":{"gitId":"nixonwidjaja"},"content":"    private static final String EMPTY_UNMARK_INDEX \u003d \"Please specify the index of which task you would \"","lastModifiedDate":"2023-09-17"},{"lineNumber":44,"author":{"gitId":"nixonwidjaja"},"content":"        + \"like to unmark.\\ne.g. unmark 3\";","lastModifiedDate":"2023-09-17"},{"lineNumber":45,"author":{"gitId":"nixonwidjaja"},"content":"    private static final String EMPTY_TODO_DESC \u003d \"The description of a todo cannot be empty.\\n\"","lastModifiedDate":"2023-09-17"},{"lineNumber":46,"author":{"gitId":"nixonwidjaja"},"content":"        + \"e.g. todo workout\";","lastModifiedDate":"2023-09-17"},{"lineNumber":47,"author":{"gitId":"nixonwidjaja"},"content":"    private static final String ERROR_DATE_PARSE_FILE \u003d \"Error parsing date in file\";","lastModifiedDate":"2023-09-17"},{"lineNumber":48,"author":{"gitId":"nixonwidjaja"},"content":"    private static final String ERROR_NUMBER_FORMAT \u003d \"Seems like it\u0027s not a number.\";","lastModifiedDate":"2023-09-17"},{"lineNumber":49,"author":{"gitId":"nixonwidjaja"},"content":"    private static final String ERROR_PARSING_FILE \u003d \"Error parsing file data\";","lastModifiedDate":"2023-09-17"},{"lineNumber":50,"author":{"gitId":"nixonwidjaja"},"content":"    private static final String INVALID_COMMAND \u003d \"I\u0027m sorry, but I don\u0027t know what that means :(\";","lastModifiedDate":"2023-09-17"},{"lineNumber":51,"author":{"gitId":"nixonwidjaja"},"content":"    private static final String INVALID_DATE \u003d \"Please provide a valid date with the following format: YYYY-MM-DD\";","lastModifiedDate":"2023-09-17"},{"lineNumber":52,"author":{"gitId":"nixonwidjaja"},"content":"    private static final String INVALID_END_DATE \u003d \"Your end date is before start date\";","lastModifiedDate":"2023-09-17"},{"lineNumber":53,"author":{"gitId":"nixonwidjaja"},"content":"    private static final String INVALID_QUERY_LIST \u003d \"Invalid query list of 0 length.\";","lastModifiedDate":"2023-09-17"},{"lineNumber":54,"author":{"gitId":"nixonwidjaja"},"content":"    private static final String OVERPARAMETER \u003d \"You provide too many parameters for this command.\";","lastModifiedDate":"2023-09-17"},{"lineNumber":55,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"nixonwidjaja"},"content":"     * Converts a String date from YYYY-MM-DD to d MMM yyyy format.","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"nixonwidjaja"},"content":"     * @param dateStr String date of YYYY-MM-DD format","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"nixonwidjaja"},"content":"     * @return String date of d MMM yyyy format","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"nixonwidjaja"},"content":"     * @throws DukeException if invalid date","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"nixonwidjaja"},"content":"    public static String convertToDmy(String dateStr) throws DukeException {","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"nixonwidjaja"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"nixonwidjaja"},"content":"            LocalDate date \u003d LocalDate.parse(dateStr);","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"nixonwidjaja"},"content":"            return date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"nixonwidjaja"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"nixonwidjaja"},"content":"            throw new DukeException(INVALID_DATE);","lastModifiedDate":"2023-09-17"},{"lineNumber":68,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"nixonwidjaja"},"content":"     * Converts any string separated by white spaces to List of String.","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"nixonwidjaja"},"content":"     * @param s String separated by white spaces","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"nixonwidjaja"},"content":"     * @return List of String","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"nixonwidjaja"},"content":"    private static List\u003cString\u003e convertToList(String s) {","lastModifiedDate":"2023-09-04"},{"lineNumber":77,"author":{"gitId":"nixonwidjaja"},"content":"        String[] queries \u003d s.trim().split(\"\\\\s+\");","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"nixonwidjaja"},"content":"        List\u003cString\u003e queryList \u003d Arrays.asList(queries);","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"nixonwidjaja"},"content":"        return queryList;","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"nixonwidjaja"},"content":"     * Parses each line of String in data file into Task.","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"nixonwidjaja"},"content":"     * @param s Line of String in data file","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"nixonwidjaja"},"content":"     * @return Task","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"nixonwidjaja"},"content":"     * @throws DukeException if String cannot be parsed due to invalid","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"nixonwidjaja"},"content":"     *     format or invalid date","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"nixonwidjaja"},"content":"    public static Task parseFile(String s) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"nixonwidjaja"},"content":"        String[] q \u003d s.trim().split(\",\u003e\");","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"nixonwidjaja"},"content":"        List\u003cString\u003e queryList \u003d Arrays.asList(q);","lastModifiedDate":"2023-09-13"},{"lineNumber":92,"author":{"gitId":"nixonwidjaja"},"content":"        assert queryList.size() \u003e 0 : INVALID_QUERY_LIST;","lastModifiedDate":"2023-09-17"},{"lineNumber":93,"author":{"gitId":"nixonwidjaja"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":94,"author":{"gitId":"nixonwidjaja"},"content":"            switch (q[0]) {","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"nixonwidjaja"},"content":"            case \"deadline\":","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"nixonwidjaja"},"content":"                return new Deadline(q[1], q[2].equals(\"X\"), LocalDate.parse(q[3]));","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"nixonwidjaja"},"content":"            case \"event\":","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"nixonwidjaja"},"content":"                return new Event(q[1], q[2].equals(\"X\"), LocalDate.parse(q[3]), LocalDate.parse(q[4]));","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"nixonwidjaja"},"content":"            case \"todo\":","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"nixonwidjaja"},"content":"                return new ToDo(q[1], q[2].equals(\"X\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"nixonwidjaja"},"content":"            default:","lastModifiedDate":"2023-09-04"},{"lineNumber":102,"author":{"gitId":"nixonwidjaja"},"content":"                throw new DukeException(ERROR_PARSING_FILE);","lastModifiedDate":"2023-09-17"},{"lineNumber":103,"author":{"gitId":"nixonwidjaja"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"nixonwidjaja"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"nixonwidjaja"},"content":"            throw new DukeException(ERROR_DATE_PARSE_FILE);","lastModifiedDate":"2023-09-17"},{"lineNumber":106,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"nixonwidjaja"},"content":"     * Parses user query of deadline into a Deadline instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"nixonwidjaja"},"content":"     * @param queryList User query list","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"nixonwidjaja"},"content":"     * @return Deadline instance","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"nixonwidjaja"},"content":"     * @throws DukeException if no deadline description, invalid format, or invalid date","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"nixonwidjaja"},"content":"    private static Deadline parseUserDeadline(List\u003cString\u003e queryList) throws DukeException {","lastModifiedDate":"2023-09-04"},{"lineNumber":116,"author":{"gitId":"nixonwidjaja"},"content":"        assert queryList.size() \u003e 0 : INVALID_QUERY_LIST;","lastModifiedDate":"2023-09-17"},{"lineNumber":117,"author":{"gitId":"nixonwidjaja"},"content":"        if (queryList.size() \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"nixonwidjaja"},"content":"            throw new DukeException(EMPTY_DEADLINE_DESC);","lastModifiedDate":"2023-09-17"},{"lineNumber":119,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"nixonwidjaja"},"content":"        String name \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"nixonwidjaja"},"content":"        String deadlineString \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"nixonwidjaja"},"content":"        int byIndex \u003d -1;","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"nixonwidjaja"},"content":"        for (int i \u003d 1; i \u003c queryList.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"nixonwidjaja"},"content":"            if (queryList.get(i).equals(\"/by\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"nixonwidjaja"},"content":"                byIndex \u003d i;","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"nixonwidjaja"},"content":"                continue;","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"nixonwidjaja"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"nixonwidjaja"},"content":"            if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"nixonwidjaja"},"content":"                name +\u003d i \u003e 1 ? \" \" : \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"nixonwidjaja"},"content":"                name +\u003d queryList.get(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"nixonwidjaja"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"nixonwidjaja"},"content":"                deadlineString +\u003d i \u003e byIndex + 1 ? \" \" : \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"nixonwidjaja"},"content":"                deadlineString +\u003d queryList.get(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"nixonwidjaja"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"nixonwidjaja"},"content":"        if (deadlineString.equals(\"\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"nixonwidjaja"},"content":"            throw new DukeException(EMPTY_DEADLINE_DATE);","lastModifiedDate":"2023-09-17"},{"lineNumber":138,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"nixonwidjaja"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"nixonwidjaja"},"content":"            LocalDate deadline \u003d LocalDate.parse(deadlineString);","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"nixonwidjaja"},"content":"            return new Deadline(name, deadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"nixonwidjaja"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"nixonwidjaja"},"content":"            throw new DukeException(INVALID_DATE);","lastModifiedDate":"2023-09-17"},{"lineNumber":144,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"nixonwidjaja"},"content":"     * Parses user query of event into an Event instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"nixonwidjaja"},"content":"     * @param queryList User query list","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"nixonwidjaja"},"content":"     * @return Event instance","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"nixonwidjaja"},"content":"     * @throws DukeException if no event description, invalid format, or invalid date","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"nixonwidjaja"},"content":"    private static Event parseUserEvent(List\u003cString\u003e queryList) throws DukeException {","lastModifiedDate":"2023-09-04"},{"lineNumber":154,"author":{"gitId":"nixonwidjaja"},"content":"        assert queryList.size() \u003e 0 : INVALID_QUERY_LIST;","lastModifiedDate":"2023-09-17"},{"lineNumber":155,"author":{"gitId":"nixonwidjaja"},"content":"        if (queryList.size() \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"nixonwidjaja"},"content":"            throw new DukeException(EMPTY_EVENT_DESC);","lastModifiedDate":"2023-09-17"},{"lineNumber":157,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"nixonwidjaja"},"content":"        String name \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"nixonwidjaja"},"content":"        String fromStr \u003d \"\";","lastModifiedDate":"2023-09-04"},{"lineNumber":160,"author":{"gitId":"nixonwidjaja"},"content":"        String toStr \u003d \"\";","lastModifiedDate":"2023-09-04"},{"lineNumber":161,"author":{"gitId":"nixonwidjaja"},"content":"        int fromIndex \u003d -1;","lastModifiedDate":"2023-09-04"},{"lineNumber":162,"author":{"gitId":"nixonwidjaja"},"content":"        int toIndex \u003d -1;","lastModifiedDate":"2023-09-04"},{"lineNumber":163,"author":{"gitId":"nixonwidjaja"},"content":"        for (int i \u003d 1; i \u003c queryList.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"nixonwidjaja"},"content":"            if (queryList.get(i).equals(\"/from\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"nixonwidjaja"},"content":"                fromIndex \u003d i;","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"nixonwidjaja"},"content":"                toIndex \u003d -1;","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"nixonwidjaja"},"content":"                continue;","lastModifiedDate":"2023-08-30"},{"lineNumber":168,"author":{"gitId":"nixonwidjaja"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":169,"author":{"gitId":"nixonwidjaja"},"content":"            if (queryList.get(i).equals(\"/to\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":170,"author":{"gitId":"nixonwidjaja"},"content":"                toIndex \u003d i;","lastModifiedDate":"2023-08-30"},{"lineNumber":171,"author":{"gitId":"nixonwidjaja"},"content":"                fromIndex \u003d -1;","lastModifiedDate":"2023-08-30"},{"lineNumber":172,"author":{"gitId":"nixonwidjaja"},"content":"                continue;","lastModifiedDate":"2023-08-30"},{"lineNumber":173,"author":{"gitId":"nixonwidjaja"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":174,"author":{"gitId":"nixonwidjaja"},"content":"            if (fromIndex \u003d\u003d -1 \u0026\u0026 toIndex \u003d\u003d -1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":175,"author":{"gitId":"nixonwidjaja"},"content":"                name +\u003d i \u003e 1 ? \" \" : \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":176,"author":{"gitId":"nixonwidjaja"},"content":"                name +\u003d queryList.get(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":177,"author":{"gitId":"nixonwidjaja"},"content":"            } else if (fromIndex \u003e -1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":178,"author":{"gitId":"nixonwidjaja"},"content":"                fromStr +\u003d i \u003e fromIndex + 1 ? \" \" : \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":179,"author":{"gitId":"nixonwidjaja"},"content":"                fromStr +\u003d queryList.get(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":180,"author":{"gitId":"nixonwidjaja"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":181,"author":{"gitId":"nixonwidjaja"},"content":"                toStr +\u003d i \u003e toIndex + 1 ? \" \" : \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":182,"author":{"gitId":"nixonwidjaja"},"content":"                toStr +\u003d queryList.get(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":183,"author":{"gitId":"nixonwidjaja"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":184,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":185,"author":{"gitId":"nixonwidjaja"},"content":"        return checkEvent(name, fromStr, toStr);","lastModifiedDate":"2023-09-17"},{"lineNumber":186,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":187,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":188,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":189,"author":{"gitId":"nixonwidjaja"},"content":"     * Checks event parameters to be valid.","lastModifiedDate":"2023-09-17"},{"lineNumber":190,"author":{"gitId":"nixonwidjaja"},"content":"     * @param name event name","lastModifiedDate":"2023-09-17"},{"lineNumber":191,"author":{"gitId":"nixonwidjaja"},"content":"     * @param fromStr from date","lastModifiedDate":"2023-09-17"},{"lineNumber":192,"author":{"gitId":"nixonwidjaja"},"content":"     * @param toStr to date","lastModifiedDate":"2023-09-17"},{"lineNumber":193,"author":{"gitId":"nixonwidjaja"},"content":"     * @return event","lastModifiedDate":"2023-09-17"},{"lineNumber":194,"author":{"gitId":"nixonwidjaja"},"content":"     * @throws DukeException if invalid parameters","lastModifiedDate":"2023-09-17"},{"lineNumber":195,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":196,"author":{"gitId":"nixonwidjaja"},"content":"    private static Event checkEvent(String name, String fromStr, String toStr) throws DukeException {","lastModifiedDate":"2023-09-17"},{"lineNumber":197,"author":{"gitId":"nixonwidjaja"},"content":"        if (fromStr.equals(\"\") || toStr.equals(\"\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":198,"author":{"gitId":"nixonwidjaja"},"content":"            throw new DukeException(EMPTY_EVENT_DATE);","lastModifiedDate":"2023-09-17"},{"lineNumber":199,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":200,"author":{"gitId":"nixonwidjaja"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":201,"author":{"gitId":"nixonwidjaja"},"content":"            LocalDate from \u003d LocalDate.parse(fromStr);","lastModifiedDate":"2023-08-30"},{"lineNumber":202,"author":{"gitId":"nixonwidjaja"},"content":"            LocalDate to \u003d LocalDate.parse(toStr);","lastModifiedDate":"2023-08-30"},{"lineNumber":203,"author":{"gitId":"nixonwidjaja"},"content":"            if (from.compareTo(to) \u003e 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":204,"author":{"gitId":"nixonwidjaja"},"content":"                throw new DukeException(INVALID_END_DATE);","lastModifiedDate":"2023-09-17"},{"lineNumber":205,"author":{"gitId":"nixonwidjaja"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":206,"author":{"gitId":"nixonwidjaja"},"content":"            return new Event(name, from, to);","lastModifiedDate":"2023-08-30"},{"lineNumber":207,"author":{"gitId":"nixonwidjaja"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":208,"author":{"gitId":"nixonwidjaja"},"content":"            throw new DukeException(INVALID_DATE);","lastModifiedDate":"2023-09-17"},{"lineNumber":209,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":210,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":211,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":212,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":213,"author":{"gitId":"nixonwidjaja"},"content":"     * Parses user query of todo into an ToDo instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":214,"author":{"gitId":"nixonwidjaja"},"content":"     * @param queryList User query list","lastModifiedDate":"2023-08-31"},{"lineNumber":215,"author":{"gitId":"nixonwidjaja"},"content":"     * @return ToDo instance","lastModifiedDate":"2023-08-31"},{"lineNumber":216,"author":{"gitId":"nixonwidjaja"},"content":"     * @throws DukeException if no todo description","lastModifiedDate":"2023-08-31"},{"lineNumber":217,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":218,"author":{"gitId":"nixonwidjaja"},"content":"    public static ToDo parseUserToDo(List\u003cString\u003e queryList) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":219,"author":{"gitId":"nixonwidjaja"},"content":"        assert queryList.size() \u003e 0 : INVALID_QUERY_LIST;","lastModifiedDate":"2023-09-17"},{"lineNumber":220,"author":{"gitId":"nixonwidjaja"},"content":"        if (queryList.size() \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":221,"author":{"gitId":"nixonwidjaja"},"content":"            throw new DukeException(EMPTY_TODO_DESC);","lastModifiedDate":"2023-09-17"},{"lineNumber":222,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":223,"author":{"gitId":"nixonwidjaja"},"content":"        String name \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":224,"author":{"gitId":"nixonwidjaja"},"content":"        for (int i \u003d 1; i \u003c queryList.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":225,"author":{"gitId":"nixonwidjaja"},"content":"            name +\u003d i \u003e 1 ? \" \" : \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":226,"author":{"gitId":"nixonwidjaja"},"content":"            name +\u003d queryList.get(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":227,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":228,"author":{"gitId":"nixonwidjaja"},"content":"        return new ToDo(name);","lastModifiedDate":"2023-08-30"},{"lineNumber":229,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":230,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":231,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":232,"author":{"gitId":"nixonwidjaja"},"content":"     * Parses user query list of Find command.","lastModifiedDate":"2023-08-31"},{"lineNumber":233,"author":{"gitId":"nixonwidjaja"},"content":"     * @param queryList User query list","lastModifiedDate":"2023-08-31"},{"lineNumber":234,"author":{"gitId":"nixonwidjaja"},"content":"     * @return Keyword of what user searches","lastModifiedDate":"2023-08-31"},{"lineNumber":235,"author":{"gitId":"nixonwidjaja"},"content":"     * @throws DukeException if no keywoard given","lastModifiedDate":"2023-08-31"},{"lineNumber":236,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":237,"author":{"gitId":"nixonwidjaja"},"content":"    public static String parseUserFind(List\u003cString\u003e queryList) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":238,"author":{"gitId":"nixonwidjaja"},"content":"        assert queryList.size() \u003e 0 : INVALID_QUERY_LIST;","lastModifiedDate":"2023-09-17"},{"lineNumber":239,"author":{"gitId":"nixonwidjaja"},"content":"        if (queryList.size() \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":240,"author":{"gitId":"nixonwidjaja"},"content":"            throw new DukeException(EMPTY_KEYWORD);","lastModifiedDate":"2023-09-17"},{"lineNumber":241,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":242,"author":{"gitId":"nixonwidjaja"},"content":"        String keyword \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":243,"author":{"gitId":"nixonwidjaja"},"content":"        for (int i \u003d 1; i \u003c queryList.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":244,"author":{"gitId":"nixonwidjaja"},"content":"            keyword +\u003d i \u003e 1 ? \" \" : \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":245,"author":{"gitId":"nixonwidjaja"},"content":"            keyword +\u003d queryList.get(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":246,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":247,"author":{"gitId":"nixonwidjaja"},"content":"        return keyword;","lastModifiedDate":"2023-08-30"},{"lineNumber":248,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":249,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":250,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":251,"author":{"gitId":"nixonwidjaja"},"content":"     * Parses user input and returns the corresponding command.","lastModifiedDate":"2023-09-04"},{"lineNumber":252,"author":{"gitId":"nixonwidjaja"},"content":"     * @param input","lastModifiedDate":"2023-09-04"},{"lineNumber":253,"author":{"gitId":"nixonwidjaja"},"content":"     * @return Command to execute","lastModifiedDate":"2023-09-04"},{"lineNumber":254,"author":{"gitId":"nixonwidjaja"},"content":"     * @throws DukeException if invalid user input","lastModifiedDate":"2023-09-04"},{"lineNumber":255,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":256,"author":{"gitId":"nixonwidjaja"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2023-09-04"},{"lineNumber":257,"author":{"gitId":"nixonwidjaja"},"content":"        List\u003cString\u003e queryList \u003d convertToList(input);","lastModifiedDate":"2023-09-04"},{"lineNumber":258,"author":{"gitId":"nixonwidjaja"},"content":"        int size \u003d queryList.size();","lastModifiedDate":"2023-09-17"},{"lineNumber":259,"author":{"gitId":"nixonwidjaja"},"content":"        assert size \u003e 0 : INVALID_QUERY_LIST;","lastModifiedDate":"2023-09-17"},{"lineNumber":260,"author":{"gitId":"nixonwidjaja"},"content":"        switch (queryList.get(0)) {","lastModifiedDate":"2023-09-04"},{"lineNumber":261,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":262,"author":{"gitId":"nixonwidjaja"},"content":"        case \"\":","lastModifiedDate":"2023-09-13"},{"lineNumber":263,"author":{"gitId":"nixonwidjaja"},"content":"            return new AllCommand();","lastModifiedDate":"2023-09-13"},{"lineNumber":264,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":265,"author":{"gitId":"nixonwidjaja"},"content":"        case \"10\":","lastModifiedDate":"2023-09-13"},{"lineNumber":266,"author":{"gitId":"nixonwidjaja"},"content":"        case \"b\":","lastModifiedDate":"2023-09-13"},{"lineNumber":267,"author":{"gitId":"nixonwidjaja"},"content":"        case \"bye\":","lastModifiedDate":"2023-09-04"},{"lineNumber":268,"author":{"gitId":"nixonwidjaja"},"content":"            if (size \u003e 1) {","lastModifiedDate":"2023-09-17"},{"lineNumber":269,"author":{"gitId":"nixonwidjaja"},"content":"                throw new DukeException(OVERPARAMETER);","lastModifiedDate":"2023-09-17"},{"lineNumber":270,"author":{"gitId":"nixonwidjaja"},"content":"            }","lastModifiedDate":"2023-09-17"},{"lineNumber":271,"author":{"gitId":"nixonwidjaja"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-09-04"},{"lineNumber":272,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":273,"author":{"gitId":"nixonwidjaja"},"content":"        case \"8\":","lastModifiedDate":"2023-09-13"},{"lineNumber":274,"author":{"gitId":"nixonwidjaja"},"content":"        case \"a\":","lastModifiedDate":"2023-09-13"},{"lineNumber":275,"author":{"gitId":"nixonwidjaja"},"content":"        case \"date\":","lastModifiedDate":"2023-09-04"},{"lineNumber":276,"author":{"gitId":"nixonwidjaja"},"content":"            if (size \u003c 2) {","lastModifiedDate":"2023-09-17"},{"lineNumber":277,"author":{"gitId":"nixonwidjaja"},"content":"                throw new DukeException(INVALID_DATE);","lastModifiedDate":"2023-09-17"},{"lineNumber":278,"author":{"gitId":"nixonwidjaja"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":279,"author":{"gitId":"nixonwidjaja"},"content":"            return new DateCommand(queryList.get(1));","lastModifiedDate":"2023-09-04"},{"lineNumber":280,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":281,"author":{"gitId":"nixonwidjaja"},"content":"        case \"2\":","lastModifiedDate":"2023-09-13"},{"lineNumber":282,"author":{"gitId":"nixonwidjaja"},"content":"        case \"d\":","lastModifiedDate":"2023-09-13"},{"lineNumber":283,"author":{"gitId":"nixonwidjaja"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-04"},{"lineNumber":284,"author":{"gitId":"nixonwidjaja"},"content":"            return new AddCommand(parseUserDeadline(queryList));","lastModifiedDate":"2023-09-04"},{"lineNumber":285,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":286,"author":{"gitId":"nixonwidjaja"},"content":"        default:","lastModifiedDate":"2023-09-17"},{"lineNumber":287,"author":{"gitId":"nixonwidjaja"},"content":"            return parseHelper(queryList);","lastModifiedDate":"2023-09-17"},{"lineNumber":288,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":289,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":290,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":291,"author":{"gitId":"nixonwidjaja"},"content":"    private static Command parseHelper(List\u003cString\u003e queryList) throws DukeException {","lastModifiedDate":"2023-09-17"},{"lineNumber":292,"author":{"gitId":"nixonwidjaja"},"content":"        int size \u003d queryList.size();","lastModifiedDate":"2023-09-17"},{"lineNumber":293,"author":{"gitId":"nixonwidjaja"},"content":"        switch (queryList.get(0)) {","lastModifiedDate":"2023-09-17"},{"lineNumber":294,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":295,"author":{"gitId":"nixonwidjaja"},"content":"        case \"3\":","lastModifiedDate":"2023-09-13"},{"lineNumber":296,"author":{"gitId":"nixonwidjaja"},"content":"        case \"e\":","lastModifiedDate":"2023-09-13"},{"lineNumber":297,"author":{"gitId":"nixonwidjaja"},"content":"        case \"event\":","lastModifiedDate":"2023-09-04"},{"lineNumber":298,"author":{"gitId":"nixonwidjaja"},"content":"            return new AddCommand(parseUserEvent(queryList));","lastModifiedDate":"2023-09-04"},{"lineNumber":299,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":300,"author":{"gitId":"nixonwidjaja"},"content":"        case \"7\":","lastModifiedDate":"2023-09-13"},{"lineNumber":301,"author":{"gitId":"nixonwidjaja"},"content":"        case \"f\":","lastModifiedDate":"2023-09-13"},{"lineNumber":302,"author":{"gitId":"nixonwidjaja"},"content":"        case \"find\":","lastModifiedDate":"2023-09-04"},{"lineNumber":303,"author":{"gitId":"nixonwidjaja"},"content":"            String keyword \u003d Parser.parseUserFind(queryList);","lastModifiedDate":"2023-09-04"},{"lineNumber":304,"author":{"gitId":"nixonwidjaja"},"content":"            return new FindCommand(keyword);","lastModifiedDate":"2023-09-04"},{"lineNumber":305,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":306,"author":{"gitId":"nixonwidjaja"},"content":"        case \"1\":","lastModifiedDate":"2023-09-13"},{"lineNumber":307,"author":{"gitId":"nixonwidjaja"},"content":"        case \"l\":","lastModifiedDate":"2023-09-13"},{"lineNumber":308,"author":{"gitId":"nixonwidjaja"},"content":"        case \"list\":","lastModifiedDate":"2023-09-04"},{"lineNumber":309,"author":{"gitId":"nixonwidjaja"},"content":"            if (size \u003e 1) {","lastModifiedDate":"2023-09-17"},{"lineNumber":310,"author":{"gitId":"nixonwidjaja"},"content":"                throw new DukeException(OVERPARAMETER);","lastModifiedDate":"2023-09-17"},{"lineNumber":311,"author":{"gitId":"nixonwidjaja"},"content":"            }","lastModifiedDate":"2023-09-17"},{"lineNumber":312,"author":{"gitId":"nixonwidjaja"},"content":"            return new ListCommand();","lastModifiedDate":"2023-09-04"},{"lineNumber":313,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":314,"author":{"gitId":"nixonwidjaja"},"content":"        case \"5\":","lastModifiedDate":"2023-09-13"},{"lineNumber":315,"author":{"gitId":"nixonwidjaja"},"content":"        case \"m\":","lastModifiedDate":"2023-09-13"},{"lineNumber":316,"author":{"gitId":"nixonwidjaja"},"content":"        case \"mark\":","lastModifiedDate":"2023-09-04"},{"lineNumber":317,"author":{"gitId":"nixonwidjaja"},"content":"            if (size \u003e 2) {","lastModifiedDate":"2023-09-17"},{"lineNumber":318,"author":{"gitId":"nixonwidjaja"},"content":"                throw new DukeException(OVERPARAMETER);","lastModifiedDate":"2023-09-17"},{"lineNumber":319,"author":{"gitId":"nixonwidjaja"},"content":"            }","lastModifiedDate":"2023-09-17"},{"lineNumber":320,"author":{"gitId":"nixonwidjaja"},"content":"            try {","lastModifiedDate":"2023-09-04"},{"lineNumber":321,"author":{"gitId":"nixonwidjaja"},"content":"                int index \u003d Integer.parseInt(queryList.get(1)) - 1;","lastModifiedDate":"2023-09-04"},{"lineNumber":322,"author":{"gitId":"nixonwidjaja"},"content":"                return new MarkCommand(index);","lastModifiedDate":"2023-09-04"},{"lineNumber":323,"author":{"gitId":"nixonwidjaja"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":324,"author":{"gitId":"nixonwidjaja"},"content":"                throw new DukeException(EMPTY_MARK_INDEX);","lastModifiedDate":"2023-09-17"},{"lineNumber":325,"author":{"gitId":"nixonwidjaja"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":326,"author":{"gitId":"nixonwidjaja"},"content":"                throw new DukeException(ERROR_NUMBER_FORMAT);","lastModifiedDate":"2023-09-17"},{"lineNumber":327,"author":{"gitId":"nixonwidjaja"},"content":"            }","lastModifiedDate":"2023-09-17"},{"lineNumber":328,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":329,"author":{"gitId":"nixonwidjaja"},"content":"        default:","lastModifiedDate":"2023-09-17"},{"lineNumber":330,"author":{"gitId":"nixonwidjaja"},"content":"            return parseHelper2(queryList);","lastModifiedDate":"2023-09-17"},{"lineNumber":331,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":332,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":333,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":334,"author":{"gitId":"nixonwidjaja"},"content":"    private static Command parseHelper2(List\u003cString\u003e queryList) throws DukeException {","lastModifiedDate":"2023-09-17"},{"lineNumber":335,"author":{"gitId":"nixonwidjaja"},"content":"        int size \u003d queryList.size();","lastModifiedDate":"2023-09-17"},{"lineNumber":336,"author":{"gitId":"nixonwidjaja"},"content":"        switch (queryList.get(0)) {","lastModifiedDate":"2023-09-17"},{"lineNumber":337,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":338,"author":{"gitId":"nixonwidjaja"},"content":"        case \"9\":","lastModifiedDate":"2023-09-17"},{"lineNumber":339,"author":{"gitId":"nixonwidjaja"},"content":"        case \"del\":","lastModifiedDate":"2023-09-17"},{"lineNumber":340,"author":{"gitId":"nixonwidjaja"},"content":"        case \"delete\":","lastModifiedDate":"2023-09-17"},{"lineNumber":341,"author":{"gitId":"nixonwidjaja"},"content":"            if (size \u003e 2) {","lastModifiedDate":"2023-09-17"},{"lineNumber":342,"author":{"gitId":"nixonwidjaja"},"content":"                throw new DukeException(OVERPARAMETER);","lastModifiedDate":"2023-09-17"},{"lineNumber":343,"author":{"gitId":"nixonwidjaja"},"content":"            }","lastModifiedDate":"2023-09-17"},{"lineNumber":344,"author":{"gitId":"nixonwidjaja"},"content":"            try {","lastModifiedDate":"2023-09-17"},{"lineNumber":345,"author":{"gitId":"nixonwidjaja"},"content":"                int index \u003d Integer.parseInt(queryList.get(1)) - 1;","lastModifiedDate":"2023-09-17"},{"lineNumber":346,"author":{"gitId":"nixonwidjaja"},"content":"                return new DeleteCommand(index);","lastModifiedDate":"2023-09-17"},{"lineNumber":347,"author":{"gitId":"nixonwidjaja"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-17"},{"lineNumber":348,"author":{"gitId":"nixonwidjaja"},"content":"                throw new DukeException(EMPTY_DELETE_INDEX);","lastModifiedDate":"2023-09-17"},{"lineNumber":349,"author":{"gitId":"nixonwidjaja"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-17"},{"lineNumber":350,"author":{"gitId":"nixonwidjaja"},"content":"                throw new DukeException(ERROR_NUMBER_FORMAT);","lastModifiedDate":"2023-09-17"},{"lineNumber":351,"author":{"gitId":"nixonwidjaja"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":352,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":353,"author":{"gitId":"nixonwidjaja"},"content":"        case \"4\":","lastModifiedDate":"2023-09-13"},{"lineNumber":354,"author":{"gitId":"nixonwidjaja"},"content":"        case \"t\":","lastModifiedDate":"2023-09-13"},{"lineNumber":355,"author":{"gitId":"nixonwidjaja"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-04"},{"lineNumber":356,"author":{"gitId":"nixonwidjaja"},"content":"            return new AddCommand(parseUserToDo(queryList));","lastModifiedDate":"2023-09-04"},{"lineNumber":357,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":358,"author":{"gitId":"nixonwidjaja"},"content":"        case \"6\":","lastModifiedDate":"2023-09-13"},{"lineNumber":359,"author":{"gitId":"nixonwidjaja"},"content":"        case \"u\":","lastModifiedDate":"2023-09-13"},{"lineNumber":360,"author":{"gitId":"nixonwidjaja"},"content":"        case \"unmark\":","lastModifiedDate":"2023-09-04"},{"lineNumber":361,"author":{"gitId":"nixonwidjaja"},"content":"            if (size \u003e 2) {","lastModifiedDate":"2023-09-17"},{"lineNumber":362,"author":{"gitId":"nixonwidjaja"},"content":"                throw new DukeException(OVERPARAMETER);","lastModifiedDate":"2023-09-17"},{"lineNumber":363,"author":{"gitId":"nixonwidjaja"},"content":"            }","lastModifiedDate":"2023-09-17"},{"lineNumber":364,"author":{"gitId":"nixonwidjaja"},"content":"            try {","lastModifiedDate":"2023-09-04"},{"lineNumber":365,"author":{"gitId":"nixonwidjaja"},"content":"                int index \u003d Integer.parseInt(queryList.get(1)) - 1;","lastModifiedDate":"2023-09-04"},{"lineNumber":366,"author":{"gitId":"nixonwidjaja"},"content":"                return new UnmarkCommand(index);","lastModifiedDate":"2023-09-04"},{"lineNumber":367,"author":{"gitId":"nixonwidjaja"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":368,"author":{"gitId":"nixonwidjaja"},"content":"                throw new DukeException(EMPTY_UNMARK_INDEX);","lastModifiedDate":"2023-09-17"},{"lineNumber":369,"author":{"gitId":"nixonwidjaja"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":370,"author":{"gitId":"nixonwidjaja"},"content":"                throw new DukeException(ERROR_NUMBER_FORMAT);","lastModifiedDate":"2023-09-17"},{"lineNumber":371,"author":{"gitId":"nixonwidjaja"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":372,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":373,"author":{"gitId":"nixonwidjaja"},"content":"        default:","lastModifiedDate":"2023-09-04"},{"lineNumber":374,"author":{"gitId":"nixonwidjaja"},"content":"            throw new DukeException(INVALID_COMMAND);","lastModifiedDate":"2023-09-17"},{"lineNumber":375,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":376,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":377,"author":{"gitId":"nixonwidjaja"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"nixonwidjaja":377}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nixonwidjaja"},"content":"package duke.storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"nixonwidjaja"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"nixonwidjaja"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"nixonwidjaja"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"nixonwidjaja"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"nixonwidjaja"},"content":"import java.net.URL;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"nixonwidjaja"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"nixonwidjaja"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"nixonwidjaja"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"nixonwidjaja"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"nixonwidjaja"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"nixonwidjaja"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"nixonwidjaja"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"nixonwidjaja"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nixonwidjaja"},"content":" * Handles read and write to file data.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nixonwidjaja"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nixonwidjaja"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"nixonwidjaja"},"content":"    private String home;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"nixonwidjaja"},"content":"    private Path path;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"nixonwidjaja"},"content":"    private String filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"nixonwidjaja"},"content":"     * Constructor for storage.","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"nixonwidjaja"},"content":"    public Storage() {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"nixonwidjaja"},"content":"        this.home \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"nixonwidjaja"},"content":"        this.path \u003d Paths.get(home, \"data\", \"duke.txt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"nixonwidjaja"},"content":"        this.filePath \u003d this.path.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"nixonwidjaja"},"content":"     * Constructor for storage with specified filePath.","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"nixonwidjaja"},"content":"     * @param filePath","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"nixonwidjaja"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"nixonwidjaja"},"content":"        this.home \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"nixonwidjaja"},"content":"        this.path \u003d Paths.get(home, filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"nixonwidjaja"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"nixonwidjaja"},"content":"     * Reads from the specified file.","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"nixonwidjaja"},"content":"     * @return TaskList instance containing all tasks in file","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"nixonwidjaja"},"content":"     * @throws DukeException if error reading file","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"nixonwidjaja"},"content":"    public TaskList read() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"nixonwidjaja"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"nixonwidjaja"},"content":"        if (Files.exists(this.path)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"nixonwidjaja"},"content":"            File f \u003d new File(this.filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"nixonwidjaja"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"nixonwidjaja"},"content":"                Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"nixonwidjaja"},"content":"                while (s.hasNextLine()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"nixonwidjaja"},"content":"                    String nextLine \u003d s.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"nixonwidjaja"},"content":"                    if (nextLine.equals(\"\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"nixonwidjaja"},"content":"                        continue;","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"nixonwidjaja"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"nixonwidjaja"},"content":"                    tasks.add(Parser.parseFile(nextLine));","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"nixonwidjaja"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"nixonwidjaja"},"content":"                s.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"nixonwidjaja"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"nixonwidjaja"},"content":"                throw new DukeException(\"Error reading file\");","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"nixonwidjaja"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"nixonwidjaja"},"content":"        return tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"nixonwidjaja"},"content":"     * Writes to the specified file.","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"nixonwidjaja"},"content":"     * @param textToAdd All tasks exported to text format","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"nixonwidjaja"},"content":"     * @throws DukeException if error writing to file","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"nixonwidjaja"},"content":"    private void writeToFile(String textToAdd) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"nixonwidjaja"},"content":"        Path folder \u003d this.path.getParent();","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"nixonwidjaja"},"content":"        if (!Files.exists(folder)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"nixonwidjaja"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"nixonwidjaja"},"content":"                Files.createDirectories(folder);","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"nixonwidjaja"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"nixonwidjaja"},"content":"                throw new DukeException(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"nixonwidjaja"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"nixonwidjaja"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"nixonwidjaja"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"nixonwidjaja"},"content":"            fw.write(textToAdd);","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"nixonwidjaja"},"content":"            fw.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"nixonwidjaja"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"nixonwidjaja"},"content":"            throw new DukeException(\"Error writing to file\");","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"nixonwidjaja"},"content":"     * Takes TaskList of the program and exports it to text file.","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"nixonwidjaja"},"content":"     * @param tasks TaskList","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"nixonwidjaja"},"content":"     * @throws DukeException if error writing to file","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"nixonwidjaja"},"content":"    public void write(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"nixonwidjaja"},"content":"        String data \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"nixonwidjaja"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"nixonwidjaja"},"content":"            data +\u003d tasks.get(i).exportToText();","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"nixonwidjaja"},"content":"            if (i \u003c tasks.size() - 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"nixonwidjaja"},"content":"                data +\u003d System.lineSeparator();","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"nixonwidjaja"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"nixonwidjaja"},"content":"        writeToFile(data);","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"nixonwidjaja"},"content":"     * Converts String paths to URL","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"nixonwidjaja"},"content":"     * @param more directories","lastModifiedDate":"2023-09-07"},{"lineNumber":112,"author":{"gitId":"nixonwidjaja"},"content":"     * @return URL","lastModifiedDate":"2023-09-07"},{"lineNumber":113,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":114,"author":{"gitId":"nixonwidjaja"},"content":"    public static URL toUrl(String... more) {","lastModifiedDate":"2023-09-07"},{"lineNumber":115,"author":{"gitId":"nixonwidjaja"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":116,"author":{"gitId":"nixonwidjaja"},"content":"            String home \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2023-09-07"},{"lineNumber":117,"author":{"gitId":"nixonwidjaja"},"content":"            Path path \u003d Paths.get(home, more);","lastModifiedDate":"2023-09-07"},{"lineNumber":118,"author":{"gitId":"nixonwidjaja"},"content":"            return path.toUri().toURL();","lastModifiedDate":"2023-09-07"},{"lineNumber":119,"author":{"gitId":"nixonwidjaja"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":120,"author":{"gitId":"nixonwidjaja"},"content":"            return null;","lastModifiedDate":"2023-09-07"},{"lineNumber":121,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":122,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":123,"author":{"gitId":"nixonwidjaja"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"nixonwidjaja":123}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nixonwidjaja"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"nixonwidjaja"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"nixonwidjaja"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"nixonwidjaja"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"nixonwidjaja"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"nixonwidjaja"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nixonwidjaja"},"content":" * Represents a deadline inherits from a Task.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nixonwidjaja"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nixonwidjaja"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"nixonwidjaja"},"content":"    private static final String INVALID_DATE \u003d \"Please provide date with the following format: YYYY-MM-DD\";","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"nixonwidjaja"},"content":"    private LocalDate deadline;","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"nixonwidjaja"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"nixonwidjaja"},"content":"     * @param name","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"nixonwidjaja"},"content":"     * @param deadline","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"nixonwidjaja"},"content":"    public Deadline(String name, LocalDate deadline) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"nixonwidjaja"},"content":"        super(name);","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"nixonwidjaja"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":26,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"nixonwidjaja"},"content":"     * Constructor for Deadline with specified isDone.","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"nixonwidjaja"},"content":"     * @param name","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"nixonwidjaja"},"content":"     * @param isDone","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"nixonwidjaja"},"content":"     * @param deadline","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"nixonwidjaja"},"content":"    public Deadline(String name, boolean isDone, LocalDate deadline) {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"nixonwidjaja"},"content":"        super(name, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"nixonwidjaja"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"nixonwidjaja"},"content":"     * Checks if a deadline is on specified String date","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"nixonwidjaja"},"content":"     * @param dateStr date in String format","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"nixonwidjaja"},"content":"     * @return boolean whether a deadline is on specified String date","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"nixonwidjaja"},"content":"     * @throws DukeException if invalid date","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"nixonwidjaja"},"content":"    public boolean isToday(String dateStr) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"nixonwidjaja"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"nixonwidjaja"},"content":"            LocalDate date \u003d LocalDate.parse(dateStr);","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"nixonwidjaja"},"content":"            return this.deadline.compareTo(date) \u003d\u003d 0;","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"nixonwidjaja"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"nixonwidjaja"},"content":"            throw new DukeException(INVALID_DATE);","lastModifiedDate":"2023-09-17"},{"lineNumber":49,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"nixonwidjaja"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":53,"author":{"gitId":"nixonwidjaja"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":54,"author":{"gitId":"nixonwidjaja"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(),","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"nixonwidjaja"},"content":"            this.deadline.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")));","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":57,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"nixonwidjaja"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"nixonwidjaja"},"content":"    public String exportToText() {","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"nixonwidjaja"},"content":"        return String.format(\"deadline,\u003e%s,\u003e%s\", super.exportToText(), this.deadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"nixonwidjaja"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"nixonwidjaja":62}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nixonwidjaja"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"nixonwidjaja"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"nixonwidjaja"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"nixonwidjaja"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"nixonwidjaja"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"nixonwidjaja"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nixonwidjaja"},"content":" * Represents an event inherits from a Task.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nixonwidjaja"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nixonwidjaja"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"nixonwidjaja"},"content":"    private static final String INVALID_DATE \u003d \"Please provide dates with the following format: YYYY-MM-DD\";","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"nixonwidjaja"},"content":"    private LocalDate from;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"nixonwidjaja"},"content":"    private LocalDate to;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"nixonwidjaja"},"content":"     * Constructor for Event.","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"nixonwidjaja"},"content":"     * @param name","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"nixonwidjaja"},"content":"     * @param from","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"nixonwidjaja"},"content":"     * @param to","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"nixonwidjaja"},"content":"    public Event(String name, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"nixonwidjaja"},"content":"        super(name);","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"nixonwidjaja"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-19"},{"lineNumber":26,"author":{"gitId":"nixonwidjaja"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-19"},{"lineNumber":27,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":28,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":29,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"nixonwidjaja"},"content":"     * Constructor for Event with specified isDone.","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"nixonwidjaja"},"content":"     * @param name","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"nixonwidjaja"},"content":"     * @param isDone","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"nixonwidjaja"},"content":"     * @param from","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"nixonwidjaja"},"content":"     * @param to","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"nixonwidjaja"},"content":"    public Event(String name, boolean isDone, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"nixonwidjaja"},"content":"        super(name, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"nixonwidjaja"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"nixonwidjaja"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"nixonwidjaja"},"content":"     * Checks if an event is happening on specified String date","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"nixonwidjaja"},"content":"     * @param dateStr date in String format","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"nixonwidjaja"},"content":"     * @return boolean whether an event is happening on specified String date","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"nixonwidjaja"},"content":"     * @throws DukeException if invalid date","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"nixonwidjaja"},"content":"    public boolean isToday(String dateStr) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"nixonwidjaja"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"nixonwidjaja"},"content":"            LocalDate date \u003d LocalDate.parse(dateStr);","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"nixonwidjaja"},"content":"            return this.from.compareTo(date) \u003c\u003d 0 \u0026\u0026 date.compareTo(to) \u003c\u003d 0;","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"nixonwidjaja"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"nixonwidjaja"},"content":"            throw new DukeException(INVALID_DATE);","lastModifiedDate":"2023-09-17"},{"lineNumber":54,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"nixonwidjaja"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":58,"author":{"gitId":"nixonwidjaja"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":59,"author":{"gitId":"nixonwidjaja"},"content":"        return String.format(\"[E]%s (%s - %s)\", super.toString(),","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"nixonwidjaja"},"content":"            this.from.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")),","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"nixonwidjaja"},"content":"            this.to.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")));","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":63,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"nixonwidjaja"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"nixonwidjaja"},"content":"    public String exportToText() {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"nixonwidjaja"},"content":"        return String.format(\"event,\u003e%s,\u003e%s,\u003e%s\", super.exportToText(), this.from, this.to);","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"nixonwidjaja"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"nixonwidjaja":68}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nixonwidjaja"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"nixonwidjaja"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"nixonwidjaja"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"nixonwidjaja"},"content":" * Represents a task.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"nixonwidjaja"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nixonwidjaja"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"nixonwidjaja"},"content":"    private String name;","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"nixonwidjaja"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"nixonwidjaja"},"content":"     * Constructor for Task.","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"nixonwidjaja"},"content":"     * @param name","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"nixonwidjaja"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"nixonwidjaja"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"nixonwidjaja"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"nixonwidjaja"},"content":"     * Constructor for Task with specified isDone.","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"nixonwidjaja"},"content":"     * @param name","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"nixonwidjaja"},"content":"     * @param isDone","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"nixonwidjaja"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"nixonwidjaja"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"nixonwidjaja"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":32,"author":{"gitId":"nixonwidjaja"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-09-17"},{"lineNumber":33,"author":{"gitId":"nixonwidjaja"},"content":"     * @return boolean whether successfully marked as done","lastModifiedDate":"2023-09-17"},{"lineNumber":34,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":35,"author":{"gitId":"nixonwidjaja"},"content":"    public boolean markDone() {","lastModifiedDate":"2023-09-17"},{"lineNumber":36,"author":{"gitId":"nixonwidjaja"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-09-17"},{"lineNumber":37,"author":{"gitId":"nixonwidjaja"},"content":"            return false;","lastModifiedDate":"2023-09-17"},{"lineNumber":38,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":39,"author":{"gitId":"nixonwidjaja"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-19"},{"lineNumber":40,"author":{"gitId":"nixonwidjaja"},"content":"        return true;","lastModifiedDate":"2023-09-17"},{"lineNumber":41,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":42,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":43,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":44,"author":{"gitId":"nixonwidjaja"},"content":"     * Marks a task as not done.","lastModifiedDate":"2023-09-17"},{"lineNumber":45,"author":{"gitId":"nixonwidjaja"},"content":"     * @return boolean whether successfully marked as not done","lastModifiedDate":"2023-09-17"},{"lineNumber":46,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":47,"author":{"gitId":"nixonwidjaja"},"content":"    public boolean unmarkDone() {","lastModifiedDate":"2023-09-17"},{"lineNumber":48,"author":{"gitId":"nixonwidjaja"},"content":"        if (!this.isDone) {","lastModifiedDate":"2023-09-17"},{"lineNumber":49,"author":{"gitId":"nixonwidjaja"},"content":"            return false;","lastModifiedDate":"2023-09-17"},{"lineNumber":50,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":51,"author":{"gitId":"nixonwidjaja"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-19"},{"lineNumber":52,"author":{"gitId":"nixonwidjaja"},"content":"        return true;","lastModifiedDate":"2023-09-17"},{"lineNumber":53,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":54,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":55,"author":{"gitId":"nixonwidjaja"},"content":"    public boolean isToday(String dateStr) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"nixonwidjaja"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"nixonwidjaja"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"nixonwidjaja"},"content":"        return this.name.contains(keyword);","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"nixonwidjaja"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":64,"author":{"gitId":"nixonwidjaja"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":65,"author":{"gitId":"nixonwidjaja"},"content":"        return String.format(\"[%s] %s\", this.isDone ? \"X\" : \" \", this.name);","lastModifiedDate":"2023-08-19"},{"lineNumber":66,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":67,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"nixonwidjaja"},"content":"    public String exportToText() {","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"nixonwidjaja"},"content":"        return String.format(\"%s,\u003e%s\", this.name, this.isDone ? \"X\" : \"O\");","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"nixonwidjaja"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"nixonwidjaja":71}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nixonwidjaja"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"nixonwidjaja"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"nixonwidjaja"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"nixonwidjaja"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nixonwidjaja"},"content":" * Represents a list of Tasks inherits from ArrayList of Task to contain user tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nixonwidjaja"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nixonwidjaja"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"nixonwidjaja"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"nixonwidjaja"},"content":"        super();","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"nixonwidjaja"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"nixonwidjaja"},"content":"        super(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nixonwidjaja"},"content":"     * Marks task of specified index as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nixonwidjaja"},"content":"     * @param index Specified index","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"nixonwidjaja"},"content":"     * @return boolean whether successfully marked as done","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"nixonwidjaja"},"content":"     * @throws DukeException if invalid task index","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"nixonwidjaja"},"content":"    public boolean markDone(int index) throws DukeException {","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"nixonwidjaja"},"content":"        if (index \u003c 0 || index \u003e\u003d super.size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"nixonwidjaja"},"content":"            throw new DukeException(\"Invalid task index\");","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"nixonwidjaja"},"content":"        return super.get(index).markDone();","lastModifiedDate":"2023-09-17"},{"lineNumber":30,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"nixonwidjaja"},"content":"     * Marks task of specified index as undone.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"nixonwidjaja"},"content":"     * @param index Specified index","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"nixonwidjaja"},"content":"     * @return boolean whether successfully marked as undone","lastModifiedDate":"2023-09-17"},{"lineNumber":36,"author":{"gitId":"nixonwidjaja"},"content":"     * @throws DukeException if invalid task index","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"nixonwidjaja"},"content":"    public boolean unmarkDone(int index) throws DukeException {","lastModifiedDate":"2023-09-17"},{"lineNumber":39,"author":{"gitId":"nixonwidjaja"},"content":"        if (index \u003c 0 || index \u003e\u003d super.size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"nixonwidjaja"},"content":"            throw new DukeException(\"Invalid task index\");","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"nixonwidjaja"},"content":"        return super.get(index).unmarkDone();","lastModifiedDate":"2023-09-17"},{"lineNumber":43,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"nixonwidjaja"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"nixonwidjaja":44}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nixonwidjaja"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"nixonwidjaja"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"nixonwidjaja"},"content":" * Represents a ToDo inherits from a Task.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"nixonwidjaja"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"nixonwidjaja"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"nixonwidjaja"},"content":"    public ToDo(String name) {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"nixonwidjaja"},"content":"        super(name);","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"nixonwidjaja"},"content":"    public ToDo(String name, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"nixonwidjaja"},"content":"        super(name, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"nixonwidjaja"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"nixonwidjaja"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"nixonwidjaja"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"nixonwidjaja"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"nixonwidjaja"},"content":"    public String exportToText() {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"nixonwidjaja"},"content":"        return String.format(\"todo,\u003e%s\", super.exportToText());","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"nixonwidjaja"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"nixonwidjaja":24}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nixonwidjaja"},"content":"package duke.ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"nixonwidjaja"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"nixonwidjaja"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"nixonwidjaja"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"nixonwidjaja"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"nixonwidjaja"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nixonwidjaja"},"content":" * Represents the client facing UI to handle inputs and displays.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nixonwidjaja"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nixonwidjaja"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nixonwidjaja"},"content":"     * Adds task to TaskList and displays added task info to user.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nixonwidjaja"},"content":"     * @param tasks TaskList","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nixonwidjaja"},"content":"     * @param task Task to be added","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nixonwidjaja"},"content":"    public String addTask(TaskList tasks, Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"nixonwidjaja"},"content":"        String res \u003d \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"nixonwidjaja"},"content":"        res +\u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"nixonwidjaja"},"content":"        res +\u003d String.format(\"  %s\\n\", task.toString());","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"nixonwidjaja"},"content":"        res +\u003d String.format(\"Now you have %d tasks in the list.\", tasks.size());","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"nixonwidjaja"},"content":"        return res;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"nixonwidjaja"},"content":"     * Displays the list of all available commands.","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"nixonwidjaja"},"content":"    public String all() {","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"nixonwidjaja"},"content":"        String res \u003d \"Here are my command list and their alias:\\n\";","lastModifiedDate":"2023-09-17"},{"lineNumber":30,"author":{"gitId":"nixonwidjaja"},"content":"        res +\u003d \"1. list / l\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"nixonwidjaja"},"content":"        res +\u003d \"2. deadline / d\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"nixonwidjaja"},"content":"        res +\u003d \"3. event / e\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"nixonwidjaja"},"content":"        res +\u003d \"4. todo / t\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"nixonwidjaja"},"content":"        res +\u003d \"5. mark / m\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"nixonwidjaja"},"content":"        res +\u003d \"6. unmark / u\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"nixonwidjaja"},"content":"        res +\u003d \"7. find / f\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"nixonwidjaja"},"content":"        res +\u003d \"8. date / a\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"nixonwidjaja"},"content":"        res +\u003d \"9. delete / del\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"nixonwidjaja"},"content":"        res +\u003d \"10. bye / b\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"nixonwidjaja"},"content":"        return res;","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"nixonwidjaja"},"content":"     * Displays bye message.","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"nixonwidjaja"},"content":"    public String bye() {","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"nixonwidjaja"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"nixonwidjaja"},"content":"     * Displays all tasks from TaskList that exist on specified date.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"nixonwidjaja"},"content":"     * @param tasks TaskList","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"nixonwidjaja"},"content":"     * @param date Date given by user","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"nixonwidjaja"},"content":"     * @throws DukeException if invalid date","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"nixonwidjaja"},"content":"    public String date(TaskList tasks, String date) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"nixonwidjaja"},"content":"        String dmy \u003d Parser.convertToDmy(date);","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"nixonwidjaja"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"nixonwidjaja"},"content":"            return String.format(\"There is no task on %s.\\n\", dmy);","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"nixonwidjaja"},"content":"        String res \u003d \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"nixonwidjaja"},"content":"        res +\u003d String.format(\"Here are the tasks on %s:\\n\", dmy);","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"nixonwidjaja"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"nixonwidjaja"},"content":"            res +\u003d String.format(\"%d.%s\\n\", i + 1, tasks.get(i).toString());","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"nixonwidjaja"},"content":"        return res.substring(0, res.length() - 1);","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"nixonwidjaja"},"content":"     * Removes task from TaskList and displays removed task info to user.","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"nixonwidjaja"},"content":"     * @param tasks TaskList","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"nixonwidjaja"},"content":"     * @param task task to be removed","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"nixonwidjaja"},"content":"    public String deleteTask(TaskList tasks, Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"nixonwidjaja"},"content":"        String res \u003d \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"nixonwidjaja"},"content":"        res +\u003d \"Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"nixonwidjaja"},"content":"        res +\u003d String.format(\"  %s\\n\", task.toString());","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"nixonwidjaja"},"content":"        res +\u003d String.format(\"Now you have %d tasks in the list.\", tasks.size());","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"nixonwidjaja"},"content":"        return res;","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"nixonwidjaja"},"content":"     * Displays all tasks in TaskList that matches specified keyword.","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"nixonwidjaja"},"content":"     * @param tasks TaskList","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"nixonwidjaja"},"content":"     * @param keyword String of specified keyword","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"nixonwidjaja"},"content":"    public String find(TaskList tasks, String keyword) {","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"nixonwidjaja"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":89,"author":{"gitId":"nixonwidjaja"},"content":"            return \"There is no matching task with: \" + keyword + \"\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":91,"author":{"gitId":"nixonwidjaja"},"content":"        String res \u003d \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"nixonwidjaja"},"content":"        res +\u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"nixonwidjaja"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-04"},{"lineNumber":94,"author":{"gitId":"nixonwidjaja"},"content":"            res +\u003d String.format(\"%d.%s\\n\", i + 1, tasks.get(i).toString());","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"nixonwidjaja"},"content":"        return res.substring(0, res.length() - 1);","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"nixonwidjaja"},"content":"     * Displays hello message.","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"nixonwidjaja"},"content":"    public String hello() {","lastModifiedDate":"2023-09-07"},{"lineNumber":103,"author":{"gitId":"nixonwidjaja"},"content":"        return \"Hello! I\u0027m AdaBot.\\nWhat do you want to do today?\";","lastModifiedDate":"2023-09-07"},{"lineNumber":104,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"nixonwidjaja"},"content":"     * Displays all tasks in TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"nixonwidjaja"},"content":"     * @param tasks TaskList","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"nixonwidjaja"},"content":"    public String list(TaskList tasks) {","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"nixonwidjaja"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"nixonwidjaja"},"content":"            return \"There is no task in your list.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":113,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"nixonwidjaja"},"content":"        String res \u003d \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":115,"author":{"gitId":"nixonwidjaja"},"content":"        res +\u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":116,"author":{"gitId":"nixonwidjaja"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"nixonwidjaja"},"content":"            res +\u003d String.format(\"%d.%s\\n\", i + 1, tasks.get(i).toString());","lastModifiedDate":"2023-09-07"},{"lineNumber":118,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"nixonwidjaja"},"content":"        return res.substring(0, res.length() - 1);","lastModifiedDate":"2023-09-07"},{"lineNumber":120,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"nixonwidjaja"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-09-17"},{"lineNumber":124,"author":{"gitId":"nixonwidjaja"},"content":"     * @param task task to be marked","lastModifiedDate":"2023-09-04"},{"lineNumber":125,"author":{"gitId":"nixonwidjaja"},"content":"     * @param success whether task is successfully marked","lastModifiedDate":"2023-09-17"},{"lineNumber":126,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"nixonwidjaja"},"content":"    public String mark(Task task, boolean success) {","lastModifiedDate":"2023-09-17"},{"lineNumber":128,"author":{"gitId":"nixonwidjaja"},"content":"        String res \u003d \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":129,"author":{"gitId":"nixonwidjaja"},"content":"        if (success) {","lastModifiedDate":"2023-09-17"},{"lineNumber":130,"author":{"gitId":"nixonwidjaja"},"content":"            res +\u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":131,"author":{"gitId":"nixonwidjaja"},"content":"        } else {","lastModifiedDate":"2023-09-17"},{"lineNumber":132,"author":{"gitId":"nixonwidjaja"},"content":"            res +\u003d \"This task was already marked as done:\\n\";","lastModifiedDate":"2023-09-17"},{"lineNumber":133,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":134,"author":{"gitId":"nixonwidjaja"},"content":"        res +\u003d \"  \" + task.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":135,"author":{"gitId":"nixonwidjaja"},"content":"        return res;","lastModifiedDate":"2023-09-07"},{"lineNumber":136,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"nixonwidjaja"},"content":"    public void print(String s) {","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"nixonwidjaja"},"content":"        System.out.println(s);","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"nixonwidjaja"},"content":"    public void printError(String s) {","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"nixonwidjaja"},"content":"        System.out.println(\"OOPS!!! \" + s);","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"nixonwidjaja"},"content":"     * Marks a task as not done.","lastModifiedDate":"2023-09-17"},{"lineNumber":148,"author":{"gitId":"nixonwidjaja"},"content":"     * @param task task to be unmarked","lastModifiedDate":"2023-09-04"},{"lineNumber":149,"author":{"gitId":"nixonwidjaja"},"content":"     * @param success whether task is successfully unmarked","lastModifiedDate":"2023-09-17"},{"lineNumber":150,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"nixonwidjaja"},"content":"    public String unmark(Task task, boolean success) {","lastModifiedDate":"2023-09-17"},{"lineNumber":152,"author":{"gitId":"nixonwidjaja"},"content":"        String res \u003d \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":153,"author":{"gitId":"nixonwidjaja"},"content":"        if (success) {","lastModifiedDate":"2023-09-17"},{"lineNumber":154,"author":{"gitId":"nixonwidjaja"},"content":"            res +\u003d \"OK, I\u0027ve marked this task as not done yet:\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":155,"author":{"gitId":"nixonwidjaja"},"content":"        } else {","lastModifiedDate":"2023-09-17"},{"lineNumber":156,"author":{"gitId":"nixonwidjaja"},"content":"            res +\u003d \"This task was already marked as not done yet:\\n\";","lastModifiedDate":"2023-09-17"},{"lineNumber":157,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":158,"author":{"gitId":"nixonwidjaja"},"content":"        res +\u003d \"  \" + task.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":159,"author":{"gitId":"nixonwidjaja"},"content":"        return res;","lastModifiedDate":"2023-09-07"},{"lineNumber":160,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"nixonwidjaja"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"nixonwidjaja":161}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nixonwidjaja"},"content":"package gui;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"nixonwidjaja"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"nixonwidjaja"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"nixonwidjaja"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"nixonwidjaja"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"nixonwidjaja"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"nixonwidjaja"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"nixonwidjaja"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"nixonwidjaja"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"nixonwidjaja"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"nixonwidjaja"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"nixonwidjaja"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"nixonwidjaja"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"nixonwidjaja"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"nixonwidjaja"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"nixonwidjaja"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"nixonwidjaja"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"nixonwidjaja"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"nixonwidjaja"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"nixonwidjaja"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"nixonwidjaja"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"nixonwidjaja"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"nixonwidjaja"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"nixonwidjaja"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"nixonwidjaja"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"nixonwidjaja"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-17"},{"lineNumber":31,"author":{"gitId":"nixonwidjaja"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"nixonwidjaja"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"nixonwidjaja"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"nixonwidjaja"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"nixonwidjaja"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"nixonwidjaja"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"nixonwidjaja"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"nixonwidjaja"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"nixonwidjaja"},"content":"    private void flip() {","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"nixonwidjaja"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"nixonwidjaja"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"nixonwidjaja"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"nixonwidjaja"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"nixonwidjaja"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"nixonwidjaja"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"nixonwidjaja"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"nixonwidjaja"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"nixonwidjaja"},"content":"        db.flip();","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"nixonwidjaja"},"content":"        return db;","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"nixonwidjaja"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"nixonwidjaja":61}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nixonwidjaja"},"content":"package gui;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"nixonwidjaja"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"nixonwidjaja"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"nixonwidjaja"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"nixonwidjaja"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"nixonwidjaja"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"nixonwidjaja"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"nixonwidjaja"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"nixonwidjaja"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"nixonwidjaja"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"nixonwidjaja"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"nixonwidjaja"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"nixonwidjaja"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"nixonwidjaja"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"nixonwidjaja"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"nixonwidjaja"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"nixonwidjaja"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"nixonwidjaja"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"nixonwidjaja"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"nixonwidjaja"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"nixonwidjaja"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"nixonwidjaja"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"nixonwidjaja"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-17"},{"lineNumber":27,"author":{"gitId":"nixonwidjaja"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-17"},{"lineNumber":28,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"nixonwidjaja"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"nixonwidjaja"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"nixonwidjaja"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"nixonwidjaja"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"nixonwidjaja"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"nixonwidjaja"},"content":"        this.duke \u003d d;","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"nixonwidjaja"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"nixonwidjaja"},"content":"            DialogBox.getDukeDialog(duke.init(), dukeImage)","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"nixonwidjaja"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"nixonwidjaja"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"nixonwidjaja"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"nixonwidjaja"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"nixonwidjaja"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"nixonwidjaja"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"nixonwidjaja"},"content":"        String response \u003d getResponse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"nixonwidjaja"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"nixonwidjaja"},"content":"            DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"nixonwidjaja"},"content":"            DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"nixonwidjaja"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"nixonwidjaja"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"nixonwidjaja"},"content":"        if (duke.isTerminated()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"nixonwidjaja"},"content":"            userInput.setDisable(true);","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"nixonwidjaja"},"content":"            userInput.setPromptText(\"AdaBot is terminated. You may close this window.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"nixonwidjaja"},"content":"            sendButton.setDisable(true);","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"nixonwidjaja"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"nixonwidjaja"},"content":"     * Gets response from Duke.","lastModifiedDate":"2023-09-17"},{"lineNumber":66,"author":{"gitId":"nixonwidjaja"},"content":"     * @param input user input","lastModifiedDate":"2023-09-17"},{"lineNumber":67,"author":{"gitId":"nixonwidjaja"},"content":"     * @return Duke response","lastModifiedDate":"2023-09-17"},{"lineNumber":68,"author":{"gitId":"nixonwidjaja"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"nixonwidjaja"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"nixonwidjaja"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"nixonwidjaja"},"content":"            return duke.process(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"nixonwidjaja"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"nixonwidjaja"},"content":"            return \"OOPS! \" + e.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"nixonwidjaja"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"nixonwidjaja":76}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nixonwidjaja"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"nixonwidjaja"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"nixonwidjaja"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"nixonwidjaja"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"nixonwidjaja"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"nixonwidjaja"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"nixonwidjaja"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"nixonwidjaja"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-padding: 15; -fx-background-color: #ffffff; -fx-background-radius: 20;\"/\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"nixonwidjaja"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"nixonwidjaja"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"nixonwidjaja"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"nixonwidjaja"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"nixonwidjaja"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"nixonwidjaja"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"nixonwidjaja":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nixonwidjaja"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"nixonwidjaja"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"nixonwidjaja"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"nixonwidjaja"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"nixonwidjaja"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"nixonwidjaja"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"nixonwidjaja"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.MainWindow\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"nixonwidjaja"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"nixonwidjaja"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"nixonwidjaja"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"nixonwidjaja"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"nixonwidjaja"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"nixonwidjaja"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"nixonwidjaja"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"nixonwidjaja"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"nixonwidjaja"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"nixonwidjaja"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"nixonwidjaja":19}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nixonwidjaja"},"content":"package duke.parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nixonwidjaja"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"nixonwidjaja"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"nixonwidjaja"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nixonwidjaja"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"nixonwidjaja"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nixonwidjaja"},"content":"    private static final String INVALID_DATE \u003d \"Please provide a valid date with the following format: YYYY-MM-DD\";","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nixonwidjaja"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nixonwidjaja"},"content":"    public void convertToDmy_correctDate_success() {","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"nixonwidjaja"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nixonwidjaja"},"content":"            assertEquals(\"12 Dec 2023\", Parser.convertToDmy(\"2023-12-12\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"nixonwidjaja"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nixonwidjaja"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"nixonwidjaja"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"nixonwidjaja"},"content":"    public void convertToDmy_invalidDate_fail() {","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"nixonwidjaja"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"nixonwidjaja"},"content":"            Parser.convertToDmy(\"lol\");","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"nixonwidjaja"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"nixonwidjaja"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"nixonwidjaja"},"content":"            assertEquals(INVALID_DATE, e.toString());","lastModifiedDate":"2023-09-17"},{"lineNumber":29,"author":{"gitId":"nixonwidjaja"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"nixonwidjaja"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"nixonwidjaja":31}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nixonwidjaja"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"nixonwidjaja"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"nixonwidjaja"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"nixonwidjaja"},"content":"public class ToDoTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"nixonwidjaja"},"content":"    private ToDo task \u003d new ToDo(\"task\");","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"nixonwidjaja"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"nixonwidjaja"},"content":"    public void createToDo_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"nixonwidjaja"},"content":"        assertEquals(\"[T][ ] task\", task.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"nixonwidjaja"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"nixonwidjaja"},"content":"    public void markToDo_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"nixonwidjaja"},"content":"        task.markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"nixonwidjaja"},"content":"        assertEquals(\"[T][X] task\", task.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"nixonwidjaja"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"nixonwidjaja"},"content":"    @Test","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"nixonwidjaja"},"content":"    public void unmarkToDo_success() {","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"nixonwidjaja"},"content":"        task.unmarkDone();","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"nixonwidjaja"},"content":"        assertEquals(\"[T][ ] task\", task.toString());","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"nixonwidjaja"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"nixonwidjaja"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"nixonwidjaja":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nixonwidjaja"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"nixonwidjaja"},"content":"todo todo1 ","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"nixonwidjaja"},"content":"todo do cs2103","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"nixonwidjaja"},"content":"todo","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"nixonwidjaja"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"nixonwidjaja"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"nixonwidjaja"},"content":"deadline return book /by 2023-08-29","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"nixonwidjaja"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"nixonwidjaja"},"content":"deadline","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"nixonwidjaja"},"content":"mark 2","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"nixonwidjaja"},"content":"mark 4","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"nixonwidjaja"},"content":"mark 0","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"nixonwidjaja"},"content":"unmark 100","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"nixonwidjaja"},"content":"unmark 2","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"nixonwidjaja"},"content":"delete -1","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"nixonwidjaja"},"content":"delete 10","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"nixonwidjaja"},"content":"delete 3","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"nixonwidjaja"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"nixonwidjaja"},"content":"bye","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"nixonwidjaja":19}}]
