[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"CJ-Lee01"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"CJ-Lee01"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"CJ-Lee01":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"CJ-Lee01"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"CJ-Lee01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"CJ-Lee01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"CJ-Lee01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"CJ-Lee01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"CJ-Lee01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"CJ-Lee01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"CJ-Lee01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"CJ-Lee01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"CJ-Lee01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"CJ-Lee01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"CJ-Lee01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"CJ-Lee01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"CJ-Lee01"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"CJ-Lee01":16,"-":41}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"CJ-Lee01"},"content":"# User Guide for Duke","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"CJ-Lee01"},"content":"Add, update and delete your tasks with this application!","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"CJ-Lee01"},"content":"[Download here](https://github.com/CJ-Lee01/ip/releases/latest)","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"CJ-Lee01"},"content":"### Save and exit","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"CJ-Lee01"},"content":"Save and exit your program by entering the `bye` command. That\u0027s all.","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"CJ-Lee01"},"content":"### Todos","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"CJ-Lee01"},"content":"Add todos to your list with the `todo` command.","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"CJ-Lee01"},"content":"Format: `todo \u003cdescription of task\u003e`","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"CJ-Lee01"},"content":"e.g. To add that you need to do homework, just type `todo homework` and press enter or send.","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":17,"author":{"gitId":"CJ-Lee01"},"content":"### Deadlines","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"CJ-Lee01"},"content":"Add deadlines to your list of tasks with the `deadline` command.","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"CJ-Lee01"},"content":"Format: `deadline \u003cdescription\u003e /by \u003ctime\u003e`. The time is in `YYYY MM DD HHMM` format, although the `HHMM` is optional.","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"CJ-Lee01"},"content":"E.g. To add that you need to submit your assignment by 11 Oct 2023, 2359hrs, the command is:","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"CJ-Lee01"},"content":"`deadline assignment /by 2023 10 11 2359`","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"CJ-Lee01"},"content":"### Events","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"CJ-Lee01"},"content":"Add events to your list of tasks with the `event` command.","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"CJ-Lee01"},"content":"Format: `event \u003cdescription\u003e /from \u003ctime\u003e /to \u003ctime\u003e`. The time is in `YYYY MM DD HHMM` format, although the `HHMM` is optional.","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"CJ-Lee01"},"content":"E.g. To add an exam which happens on 11 Oct 2023 from 1000 to 1200hrs, the command is:","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"CJ-Lee01"},"content":"`event exam /from 2023 10 11 1000 /to 2023 10 11 1200`","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"CJ-Lee01"},"content":"### Listing your tasks","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"CJ-Lee01"},"content":"List your tasks with a simple `list` command. That\u0027s all.","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"CJ-Lee01"},"content":"## Find tasks","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"CJ-Lee01"},"content":"Find your tasks by description with the `find` command.","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"CJ-Lee01"},"content":"Format: `find \u003citem\u003e`.","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"CJ-Lee01"},"content":"Gives a list of items that contains the item in the description.","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"CJ-Lee01"},"content":"### Mark / Unmark tasks","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"CJ-Lee01"},"content":"Mark and unmark your tasks with the `mark` and `unmark` command.","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"CJ-Lee01"},"content":"Format: `mark \u003cindex in the list\u003e` or `unmark \u003cindex in the list\u003e`","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"CJ-Lee01"},"content":"E.g. you want to mark the 5th item in the list, use the command","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"CJ-Lee01"},"content":"`mark 5`","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"CJ-Lee01"},"content":"### Delete tasks","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"CJ-Lee01"},"content":"Delete your tasks with the `delete` command.","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"CJ-Lee01"},"content":"Format: `delete \u003cindex in the list\u003e`","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"CJ-Lee01"},"content":"E.g. you want to delete the 5th item in the list, use the command:","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"CJ-Lee01"},"content":"`delete 5`","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"CJ-Lee01"},"content":"### Update tasks","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"CJ-Lee01"},"content":"Update your tasks with the `update` command.","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"CJ-Lee01"},"content":"Format: `update \u003cindex in the list\u003e \u003cattribute\u003e \u003cupdated info\u003e`","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"CJ-Lee01"},"content":"#### List of attributes: ","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"CJ-Lee01"},"content":"all tasks: `description`: referring to the description of the task","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"CJ-Lee01"},"content":"deadline: `by`: referring to the deadline of the task","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"CJ-Lee01"},"content":"event: `start`: referring to the start time of the event, `end`: referring to the end time of the event","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"CJ-Lee01"},"content":"E.g. The 5th task is an assignment with the deadline of 11 Oct 2023 2359hrs created with the `deadline assignment /by 2023 10 11 2359`","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"CJ-Lee01"},"content":"To change the description of this task to a CS2103T assignment, use the command:","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"CJ-Lee01"},"content":"`update 5 description CS2103T assignment`.","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"CJ-Lee01"},"content":"To change the deadline of the assignment, use the command:","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"CJ-Lee01"},"content":"`update 5 by 2023 10 12 2359`. Note the time format is the same as when creating a task.","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"### `Keyword` - Describe action","lastModifiedDate":"2019-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"Describe the action and its outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"`keyword (optional arguments)`","lastModifiedDate":"2019-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2021-07-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"CJ-Lee01":62,"-":28}},{"path":"src/main/java/design/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJ-Lee01"},"content":"package design;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"CJ-Lee01"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"CJ-Lee01"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"CJ-Lee01"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"CJ-Lee01"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"CJ-Lee01"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"CJ-Lee01"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"CJ-Lee01"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"CJ-Lee01"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"CJ-Lee01"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"CJ-Lee01"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"CJ-Lee01"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"CJ-Lee01"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"CJ-Lee01"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"CJ-Lee01"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"CJ-Lee01"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"CJ-Lee01"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"CJ-Lee01"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"CJ-Lee01"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"CJ-Lee01"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"CJ-Lee01"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"CJ-Lee01"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"CJ-Lee01"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"CJ-Lee01"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"CJ-Lee01"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"CJ-Lee01"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"CJ-Lee01"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"CJ-Lee01"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"CJ-Lee01"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"CJ-Lee01"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"CJ-Lee01"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"CJ-Lee01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"CJ-Lee01"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"CJ-Lee01"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"CJ-Lee01"},"content":"        dialog.setStyle(\"-fx-text-fill: white;\");","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"CJ-Lee01"},"content":"        dialog.setPadding(new Insets(0, 5, 0, 5));","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"CJ-Lee01"},"content":"        dialog.setFont(new Font(11));","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"CJ-Lee01"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"CJ-Lee01"},"content":"        displayPicture.setFitWidth(70);","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"CJ-Lee01"},"content":"        displayPicture.setFitHeight(70);","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"CJ-Lee01"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"CJ-Lee01"},"content":"    private void flip() {","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"CJ-Lee01"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"CJ-Lee01"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"CJ-Lee01"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"CJ-Lee01"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"CJ-Lee01"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"CJ-Lee01"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"CJ-Lee01"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"CJ-Lee01"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"CJ-Lee01"},"content":"        db.flip();","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"CJ-Lee01"},"content":"        return db;","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"CJ-Lee01"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"CJ-Lee01":68}},{"path":"src/main/java/design/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJ-Lee01"},"content":"package design;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"CJ-Lee01"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"CJ-Lee01"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"CJ-Lee01"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"CJ-Lee01"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"CJ-Lee01"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"CJ-Lee01"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"CJ-Lee01"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"CJ-Lee01"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"CJ-Lee01"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"CJ-Lee01"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"CJ-Lee01"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"CJ-Lee01"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"CJ-Lee01"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"CJ-Lee01"},"content":"    private String initialDialog \u003d \"You know that I never let you down :)\";","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"CJ-Lee01"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"CJ-Lee01"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"CJ-Lee01"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"CJ-Lee01"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"CJ-Lee01"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"CJ-Lee01"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"CJ-Lee01"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"CJ-Lee01"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"CJ-Lee01"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"CJ-Lee01"},"content":"    private Image userImage;","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"CJ-Lee01"},"content":"    private Image dukeImage;","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"CJ-Lee01"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"CJ-Lee01"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"CJ-Lee01"},"content":"        userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"CJ-Lee01"},"content":"        dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"CJ-Lee01"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"CJ-Lee01"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"CJ-Lee01"},"content":"                DialogBox.getDukeDialog(initialDialog, dukeImage)","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"CJ-Lee01"},"content":"        );","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"CJ-Lee01"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"CJ-Lee01"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"CJ-Lee01"},"content":"        d.initialise();","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"CJ-Lee01"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"CJ-Lee01"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"CJ-Lee01"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"CJ-Lee01"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"CJ-Lee01"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"CJ-Lee01"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"CJ-Lee01"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"CJ-Lee01"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"CJ-Lee01"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"CJ-Lee01"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"CJ-Lee01"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"CJ-Lee01"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"CJ-Lee01":60}},{"path":"src/main/java/duke/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJ-Lee01"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"CJ-Lee01"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"CJ-Lee01"},"content":" * This represents the different commands that can be used in the Duke program.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"CJ-Lee01"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"CJ-Lee01"},"content":"public enum Commands {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"CJ-Lee01"},"content":"    //alr implemented enums.","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"CJ-Lee01"},"content":"    deadline,","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"CJ-Lee01"},"content":"    todo,","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"CJ-Lee01"},"content":"    event,","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"CJ-Lee01"},"content":"    bye,","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"CJ-Lee01"},"content":"    list,","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"CJ-Lee01"},"content":"    mark,","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"CJ-Lee01"},"content":"    unmark,","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"CJ-Lee01"},"content":"    delete,","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"CJ-Lee01"},"content":"    find,","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"CJ-Lee01"},"content":"    update,","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"CJ-Lee01"},"content":"    unknown;","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"CJ-Lee01"},"content":"     * Takes a string and returns the corresponding Commands enum value.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"CJ-Lee01"},"content":"     * If the string does not match any of the enum values, it returns the unknown value.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"CJ-Lee01"},"content":"     * @param cmd The string to be converted to a Commands enum value.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"CJ-Lee01"},"content":"     * @return The corresponding Commands enum value or unknown if no match is found.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"CJ-Lee01"},"content":"    public static Commands get(String cmd) {","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"CJ-Lee01"},"content":"        Commands c;","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"CJ-Lee01"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"CJ-Lee01"},"content":"            c \u003d Commands.valueOf(cmd);","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"CJ-Lee01"},"content":"        } catch (IllegalArgumentException | NullPointerException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"CJ-Lee01"},"content":"            c \u003d Commands.unknown;","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"CJ-Lee01"},"content":"        return c;","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"CJ-Lee01"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"CJ-Lee01":35}},{"path":"src/main/java/duke/DateTimeOptional.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJ-Lee01"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"CJ-Lee01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"CJ-Lee01"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"CJ-Lee01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"CJ-Lee01"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"CJ-Lee01"},"content":"import java.time.temporal.TemporalAccessor;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"CJ-Lee01"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"CJ-Lee01"},"content":" * This abstract class wraps around an optional date and time value.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"CJ-Lee01"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"CJ-Lee01"},"content":"public abstract class DateTimeOptional {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"CJ-Lee01"},"content":"    /** Accepted format for date and times. */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"CJ-Lee01"},"content":"    private static DateTimeFormatter standardDateTimeParser \u003d DateTimeFormatter","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"CJ-Lee01"},"content":"            .ofPattern(\"[yyyy MM dd[ HHmm]][yyyy-MM-dd[ HHmm]][yyyy/MM/dd[ HHmm]]\");","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"CJ-Lee01"},"content":"    /** Display format for datetime. */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"CJ-Lee01"},"content":"    private static DateTimeFormatter standardDateTimeDisplay \u003d DateTimeFormatter","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"CJ-Lee01"},"content":"            .ofPattern(\"dd-MM-yyyy [HH:mm]\");","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"CJ-Lee01"},"content":"     * Parses a string into a DateTimeOptional object.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"CJ-Lee01"},"content":"     * If the string cannot be parsed into either, it throws a DukeException.DukeDateTimeException.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"CJ-Lee01"},"content":"     * @param s The string to be parsed into a DateTimeOptional object.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"CJ-Lee01"},"content":"     * @return A DateTimeOptional object representing the parsed date and time.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"CJ-Lee01"},"content":"     * @throws DukeException.DukeDateTimeException If the string cannot be parsed.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"CJ-Lee01"},"content":"    public static DateTimeOptional parseDateTime(String s) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"CJ-Lee01"},"content":"        TemporalAccessor temp;","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"CJ-Lee01"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"CJ-Lee01"},"content":"            temp \u003d standardDateTimeParser.parse(s);","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"CJ-Lee01"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(s, standardDateTimeParser);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"CJ-Lee01"},"content":"            return new DateTimeOnly(dateTime);","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"CJ-Lee01"},"content":"        } catch (DateTimeParseException ignored) {","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"CJ-Lee01"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"CJ-Lee01"},"content":"            temp \u003d standardDateTimeParser.parse(s);","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"CJ-Lee01"},"content":"            LocalDate date \u003d LocalDate.parse(s, standardDateTimeParser);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"CJ-Lee01"},"content":"            return new DateOnly(date);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"CJ-Lee01"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"CJ-Lee01"},"content":"            throw new DukeException.DukeDateTimeException(s);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":43,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":44,"author":{"gitId":"CJ-Lee01"},"content":"     * Does not throw an error if datetime parsed is of invalid format. Returns null for invalid formats instead.","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"CJ-Lee01"},"content":"     * @param s the string to be parsed","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"CJ-Lee01"},"content":"     * @return DateTimeOptional if valid and null otherwise.","lastModifiedDate":"2023-09-14"},{"lineNumber":48,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"CJ-Lee01"},"content":"    public static DateTimeOptional parseDateTimeHandleInvalid(String s) {","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"CJ-Lee01"},"content":"        TemporalAccessor temp \u003d standardDateTimeParser.parse(s);","lastModifiedDate":"2023-09-14"},{"lineNumber":51,"author":{"gitId":"CJ-Lee01"},"content":"        try {","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"CJ-Lee01"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(s, standardDateTimeParser);","lastModifiedDate":"2023-09-14"},{"lineNumber":53,"author":{"gitId":"CJ-Lee01"},"content":"            return new DateTimeOnly(dateTime);","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"CJ-Lee01"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-14"},{"lineNumber":55,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":56,"author":{"gitId":"CJ-Lee01"},"content":"        try {","lastModifiedDate":"2023-09-14"},{"lineNumber":57,"author":{"gitId":"CJ-Lee01"},"content":"            LocalDate date \u003d LocalDate.parse(s, standardDateTimeParser);","lastModifiedDate":"2023-09-14"},{"lineNumber":58,"author":{"gitId":"CJ-Lee01"},"content":"            return new DateOnly(date);","lastModifiedDate":"2023-09-14"},{"lineNumber":59,"author":{"gitId":"CJ-Lee01"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"CJ-Lee01"},"content":"            return null;","lastModifiedDate":"2023-09-14"},{"lineNumber":61,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":62,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":63,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"CJ-Lee01"},"content":"     * Gives a string representation of the date and time value in display format.","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"CJ-Lee01"},"content":"     * @return A string representation of the date and time value in display format.","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"CJ-Lee01"},"content":"    public abstract String displayText();","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"CJ-Lee01"},"content":"    private static class DateOnly extends DateTimeOptional {","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"CJ-Lee01"},"content":"        final LocalDate date;","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"CJ-Lee01"},"content":"        DateOnly(LocalDate date) {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"CJ-Lee01"},"content":"            this.date \u003d date;","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"CJ-Lee01"},"content":"        @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"CJ-Lee01"},"content":"        public String toString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"CJ-Lee01"},"content":"            return this.date.format(standardDateTimeParser);","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"CJ-Lee01"},"content":"        @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"CJ-Lee01"},"content":"        public String displayText() {","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"CJ-Lee01"},"content":"            return this.date.format(standardDateTimeDisplay);","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"CJ-Lee01"},"content":"    private static class DateTimeOnly extends DateTimeOptional {","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"CJ-Lee01"},"content":"        final LocalDateTime date;","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"CJ-Lee01"},"content":"        DateTimeOnly(LocalDateTime date) {","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"CJ-Lee01"},"content":"            this.date \u003d date;","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"CJ-Lee01"},"content":"        @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"CJ-Lee01"},"content":"        public String toString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"CJ-Lee01"},"content":"            return this.date.format(standardDateTimeParser);","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"CJ-Lee01"},"content":"        @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"CJ-Lee01"},"content":"        public String displayText() {","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"CJ-Lee01"},"content":"            return this.date.format(standardDateTimeDisplay);","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"CJ-Lee01"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"CJ-Lee01":105}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJ-Lee01"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"CJ-Lee01"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"CJ-Lee01"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"CJ-Lee01"},"content":" * This represents a Deadline which extends Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"CJ-Lee01"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"CJ-Lee01"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"CJ-Lee01"},"content":"    /** The date to complete the task by. */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"CJ-Lee01"},"content":"    private DateTimeOptional deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"CJ-Lee01"},"content":"     * Parses a raw string containing description and date information into a deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"CJ-Lee01"},"content":"     * The raw string must be in the format \"description /by deadline\".","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"CJ-Lee01"},"content":"     * If the raw string is empty, it throws a DukeException.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"CJ-Lee01"},"content":"     * If the raw string does not contain a deadline, it throws a DukeException.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"CJ-Lee01"},"content":"     * If the deadline cannot be parsed into a DateTimeOptional object, it throws a DukeException.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"CJ-Lee01"},"content":"     * @param rawLine The raw string to be parsed into a Deadline object.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"CJ-Lee01"},"content":"     * @return A Deadline object representing the parsed task.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"CJ-Lee01"},"content":"     * @throws DukeException If the raw string is empty or does not contain a deadline or contains invalid deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"CJ-Lee01"},"content":"    public static Deadline create(String rawLine) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"CJ-Lee01"},"content":"        if (rawLine.length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"CJ-Lee01"},"content":"            throw new DukeException(\"Err: Empty Description\");","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"CJ-Lee01"},"content":"        String[] instructions \u003d rawLine.split(\" /by \");","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"CJ-Lee01"},"content":"        if (instructions.length !\u003d 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"CJ-Lee01"},"content":"            throw new DukeException(\"Err: No deadline given. Format - deadline \u003cdescription\u003e /by \u003cdeadline\u003e\");","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"CJ-Lee01"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"CJ-Lee01"},"content":"            DateTimeOptional deadline \u003d DateTimeOptional.parseDateTime(instructions[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"CJ-Lee01"},"content":"            return new Deadline(instructions[0], deadline);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"CJ-Lee01"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"CJ-Lee01"},"content":"            throw new DukeException.DukeDateTimeException(instructions[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"CJ-Lee01"},"content":"     * Constructs a deadline with the description and a DateTimeOptional object.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"CJ-Lee01"},"content":"     * @param item The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"CJ-Lee01"},"content":"     * @param deadline The deadline of the task as a DateTimeOptional object.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"CJ-Lee01"},"content":"    public Deadline(String item, DateTimeOptional deadline) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"CJ-Lee01"},"content":"        super(item);","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"CJ-Lee01"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"CJ-Lee01"},"content":"     * Gives a string representation of the task in file format.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"CJ-Lee01"},"content":"     * @return A string representation of the task in file format.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"CJ-Lee01"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"CJ-Lee01"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"CJ-Lee01"},"content":"        return String.format(","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"CJ-Lee01"},"content":"                \"deadline %d %s /by %s\",","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"CJ-Lee01"},"content":"                super.isDone ? 1 : 0,","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"CJ-Lee01"},"content":"                super.description,","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"CJ-Lee01"},"content":"                this.deadline","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"CJ-Lee01"},"content":"        );","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"CJ-Lee01"},"content":"     * Gives a string representation of the task in display format.","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"CJ-Lee01"},"content":"     * @return A string representation of the task in display format.","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"CJ-Lee01"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":66,"author":{"gitId":"CJ-Lee01"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":67,"author":{"gitId":"CJ-Lee01"},"content":"        return String.format(","lastModifiedDate":"2023-08-21"},{"lineNumber":68,"author":{"gitId":"CJ-Lee01"},"content":"                \"[D][%s] %s (by %s)\",","lastModifiedDate":"2023-08-21"},{"lineNumber":69,"author":{"gitId":"CJ-Lee01"},"content":"                super.getStatusIcon(),","lastModifiedDate":"2023-08-21"},{"lineNumber":70,"author":{"gitId":"CJ-Lee01"},"content":"                super.description,","lastModifiedDate":"2023-08-21"},{"lineNumber":71,"author":{"gitId":"CJ-Lee01"},"content":"                this.deadline.displayText()","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"CJ-Lee01"},"content":"        );","lastModifiedDate":"2023-08-21"},{"lineNumber":73,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":74,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":75,"author":{"gitId":"CJ-Lee01"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":76,"author":{"gitId":"CJ-Lee01"},"content":"    public String update(TaskAttribute attribute, String updatedInfo) throws DukeException {","lastModifiedDate":"2023-09-14"},{"lineNumber":77,"author":{"gitId":"CJ-Lee01"},"content":"        String initial \u003d \"\";","lastModifiedDate":"2023-09-14"},{"lineNumber":78,"author":{"gitId":"CJ-Lee01"},"content":"        if (attribute.equals(TaskAttribute.by)) {","lastModifiedDate":"2023-09-14"},{"lineNumber":79,"author":{"gitId":"CJ-Lee01"},"content":"            initial \u003d this.deadline.displayText();","lastModifiedDate":"2023-09-14"},{"lineNumber":80,"author":{"gitId":"CJ-Lee01"},"content":"            this.deadline \u003d DateTimeOptional.parseDateTime(updatedInfo);","lastModifiedDate":"2023-09-14"},{"lineNumber":81,"author":{"gitId":"CJ-Lee01"},"content":"            return this.formatUpdateResponse(attribute, initial, this.deadline.displayText());","lastModifiedDate":"2023-09-14"},{"lineNumber":82,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":83,"author":{"gitId":"CJ-Lee01"},"content":"        return super.update(attribute, updatedInfo);","lastModifiedDate":"2023-09-14"},{"lineNumber":84,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":85,"author":{"gitId":"CJ-Lee01"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"CJ-Lee01":85}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJ-Lee01"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"CJ-Lee01"},"content":"import design.DialogBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"CJ-Lee01"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"CJ-Lee01"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"CJ-Lee01"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"CJ-Lee01"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"CJ-Lee01"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"CJ-Lee01"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"CJ-Lee01"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"CJ-Lee01"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"CJ-Lee01"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"CJ-Lee01"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"CJ-Lee01"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"CJ-Lee01"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"CJ-Lee01"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"CJ-Lee01"},"content":" * This represents the main entry point of the Duke program.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"CJ-Lee01"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"CJ-Lee01"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"CJ-Lee01"},"content":"    /** The name of the bot. */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"CJ-Lee01"},"content":"    private static final String NAME \u003d \"Nino!\";","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"CJ-Lee01"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"CJ-Lee01"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"CJ-Lee01"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"CJ-Lee01"},"content":"    private VBox chatContainer;","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"CJ-Lee01"},"content":"    private TextField inputTextField;","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"CJ-Lee01"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"CJ-Lee01"},"content":"    private Scene scene;","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"CJ-Lee01"},"content":"    private static UserInterface userInterface;","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"CJ-Lee01"},"content":"     * runs the Duke program.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"CJ-Lee01"},"content":"     * @param args Command line arguments (not used).","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"CJ-Lee01"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"CJ-Lee01"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"CJ-Lee01"},"content":"            userInterface \u003d new UserInterface(new Storage(), new StoreList());","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"CJ-Lee01"},"content":"            System.out.println(\"Hello, my name is \" + Duke.NAME);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"CJ-Lee01"},"content":"            UserInterface.display(\"What can I do for you?\");","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"CJ-Lee01"},"content":"            userInterface.start();","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"CJ-Lee01"},"content":"            userInterface.readCommandLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"CJ-Lee01"},"content":"            userInterface.exit();","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"CJ-Lee01"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"CJ-Lee01"},"content":"            System.out.println(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"CJ-Lee01"},"content":"     * Starts the GUI.","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"CJ-Lee01"},"content":"     * @param primaryStage the primary stage for this application, onto which","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"CJ-Lee01"},"content":"     * the application scene can be set.","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"CJ-Lee01"},"content":"     * Applications may create other stages, if needed, but they will not be","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"CJ-Lee01"},"content":"     * primary stages.","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"CJ-Lee01"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"CJ-Lee01"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"CJ-Lee01"},"content":"        primaryStage.setTitle(\"Duke\");","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"CJ-Lee01"},"content":"        primaryStage.setResizable(false);","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"CJ-Lee01"},"content":"        primaryStage.setMinHeight(600.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"CJ-Lee01"},"content":"        primaryStage.setMinWidth(400.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"CJ-Lee01"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"CJ-Lee01"},"content":"        chatContainer \u003d new VBox();","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"CJ-Lee01"},"content":"        scrollPane.setContent(chatContainer);","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"CJ-Lee01"},"content":"        inputTextField \u003d new TextField();","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"CJ-Lee01"},"content":"        sendButton \u003d new Button(\"SEND\");","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"CJ-Lee01"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"CJ-Lee01"},"content":"        mainLayout.setPrefSize(385, 535);","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"CJ-Lee01"},"content":"        scrollPane.setPrefSize(385, 585);","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"CJ-Lee01"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"CJ-Lee01"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"CJ-Lee01"},"content":"        scrollPane.setVvalue(1);","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"CJ-Lee01"},"content":"        scrollPane.setFitToHeight(true);","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"CJ-Lee01"},"content":"        chatContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"CJ-Lee01"},"content":"        inputTextField.setPrefWidth(325);","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"CJ-Lee01"},"content":"        sendButton.setPrefWidth(55);","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"CJ-Lee01"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"CJ-Lee01"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"CJ-Lee01"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"CJ-Lee01"},"content":"        AnchorPane.setLeftAnchor(inputTextField, 1.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"CJ-Lee01"},"content":"        AnchorPane.setBottomAnchor(inputTextField, 1.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"CJ-Lee01"},"content":"        mainLayout.getChildren().addAll(scrollPane, inputTextField, sendButton);","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"CJ-Lee01"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"CJ-Lee01"},"content":"        sendButton.setOnMouseClicked((event -\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"CJ-Lee01"},"content":"            chatContainer.getChildren().add(getDialogLabel(inputTextField.getText()));","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"CJ-Lee01"},"content":"            inputTextField.clear();","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"CJ-Lee01"},"content":"        }));","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"CJ-Lee01"},"content":"        inputTextField.setOnAction(event -\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"CJ-Lee01"},"content":"            chatContainer.getChildren().add(getDialogLabel(inputTextField.getText()));","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"CJ-Lee01"},"content":"            inputTextField.clear();","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"CJ-Lee01"},"content":"        });","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"CJ-Lee01"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"CJ-Lee01"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-05"},{"lineNumber":114,"author":{"gitId":"CJ-Lee01"},"content":"        });","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":116,"author":{"gitId":"CJ-Lee01"},"content":"        inputTextField.setOnAction((event) -\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"CJ-Lee01"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"CJ-Lee01"},"content":"        });","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"CJ-Lee01"},"content":"        primaryStage.setScene(scene);","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"CJ-Lee01"},"content":"        primaryStage.show();","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":124,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":125,"author":{"gitId":"CJ-Lee01"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2023-09-05"},{"lineNumber":126,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":127,"author":{"gitId":"CJ-Lee01"},"content":"     * @param text String containing text to add","lastModifiedDate":"2023-09-05"},{"lineNumber":128,"author":{"gitId":"CJ-Lee01"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2023-09-05"},{"lineNumber":129,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":130,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":131,"author":{"gitId":"CJ-Lee01"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2023-09-05"},{"lineNumber":132,"author":{"gitId":"CJ-Lee01"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2023-09-05"},{"lineNumber":133,"author":{"gitId":"CJ-Lee01"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2023-09-05"},{"lineNumber":134,"author":{"gitId":"CJ-Lee01"},"content":"        return textToAdd;","lastModifiedDate":"2023-09-05"},{"lineNumber":135,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":136,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":137,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":138,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":139,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":140,"author":{"gitId":"CJ-Lee01"},"content":"     * Creates two dialog boxes, for user input and response.","lastModifiedDate":"2023-09-21"},{"lineNumber":141,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":143,"author":{"gitId":"CJ-Lee01"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-05"},{"lineNumber":144,"author":{"gitId":"CJ-Lee01"},"content":"        chatContainer.getChildren().addAll(","lastModifiedDate":"2023-09-05"},{"lineNumber":145,"author":{"gitId":"CJ-Lee01"},"content":"                DialogBox.getUserDialog(inputTextField.getText(), user),","lastModifiedDate":"2023-09-06"},{"lineNumber":146,"author":{"gitId":"CJ-Lee01"},"content":"                DialogBox.getDukeDialog(getResponse(inputTextField.getText()), duke)","lastModifiedDate":"2023-09-06"},{"lineNumber":147,"author":{"gitId":"CJ-Lee01"},"content":"        );","lastModifiedDate":"2023-09-05"},{"lineNumber":148,"author":{"gitId":"CJ-Lee01"},"content":"        inputTextField.clear();","lastModifiedDate":"2023-09-05"},{"lineNumber":149,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":150,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":151,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":152,"author":{"gitId":"CJ-Lee01"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-06"},{"lineNumber":153,"author":{"gitId":"CJ-Lee01"},"content":"        if (userInterface \u003d\u003d null) {","lastModifiedDate":"2023-09-05"},{"lineNumber":154,"author":{"gitId":"CJ-Lee01"},"content":"            try {","lastModifiedDate":"2023-09-05"},{"lineNumber":155,"author":{"gitId":"CJ-Lee01"},"content":"                userInterface \u003d new UserInterface(new Storage(), new StoreList());","lastModifiedDate":"2023-09-05"},{"lineNumber":156,"author":{"gitId":"CJ-Lee01"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":157,"author":{"gitId":"CJ-Lee01"},"content":"                return e.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":158,"author":{"gitId":"CJ-Lee01"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":159,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":160,"author":{"gitId":"CJ-Lee01"},"content":"        return userInterface.parseLine(input);","lastModifiedDate":"2023-09-05"},{"lineNumber":161,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":162,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":163,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":164,"author":{"gitId":"CJ-Lee01"},"content":"     * Initialises storage.","lastModifiedDate":"2023-09-21"},{"lineNumber":165,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":166,"author":{"gitId":"CJ-Lee01"},"content":"    public void initialise() {","lastModifiedDate":"2023-09-21"},{"lineNumber":167,"author":{"gitId":"CJ-Lee01"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":168,"author":{"gitId":"CJ-Lee01"},"content":"            userInterface \u003d new UserInterface(new Storage(), new StoreList());","lastModifiedDate":"2023-09-21"},{"lineNumber":169,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":170,"author":{"gitId":"CJ-Lee01"},"content":"            userInterface.start();","lastModifiedDate":"2023-09-21"},{"lineNumber":171,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":172,"author":{"gitId":"CJ-Lee01"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":173,"author":{"gitId":"CJ-Lee01"},"content":"            System.out.println(e);","lastModifiedDate":"2023-09-21"},{"lineNumber":174,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":175,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":176,"author":{"gitId":"CJ-Lee01"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"CJ-Lee01":176}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJ-Lee01"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"CJ-Lee01"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"CJ-Lee01"},"content":" * Custom exception for the Duke program.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"CJ-Lee01"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"CJ-Lee01"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"CJ-Lee01"},"content":"     * Custom exception for invalid date and time values.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"CJ-Lee01"},"content":"    public static class DukeDateTimeException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"CJ-Lee01"},"content":"        /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"CJ-Lee01"},"content":"         * Creates an exception with the invalid datetime string.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"CJ-Lee01"},"content":"         *","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"CJ-Lee01"},"content":"         * @param s The invalid date and time value.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"CJ-Lee01"},"content":"         */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"CJ-Lee01"},"content":"        public DukeDateTimeException(String s) {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"CJ-Lee01"},"content":"            super(\"Err: DateTime given does not fit the format. Expected: yyyy MM DD HHmm. Got \" + s);","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"CJ-Lee01"},"content":"     * Takes the string and creates an exception with the error message as string.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"CJ-Lee01"},"content":"     * @param s The error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"CJ-Lee01"},"content":"    public DukeException(String s) {","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"CJ-Lee01"},"content":"        super(s);","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"CJ-Lee01"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"CJ-Lee01":29}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJ-Lee01"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"CJ-Lee01"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"CJ-Lee01"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"CJ-Lee01"},"content":" * Event task with start and end time.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"CJ-Lee01"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"CJ-Lee01"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"CJ-Lee01"},"content":"    /** Start time. */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"CJ-Lee01"},"content":"    private DateTimeOptional startTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"CJ-Lee01"},"content":"    /** End time. */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"CJ-Lee01"},"content":"    private DateTimeOptional endTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"CJ-Lee01"},"content":"     * Takes a raw string and attempts to create an Event object from it.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"CJ-Lee01"},"content":"     * The raw string must be in the format \"description /from start_time /to end_time\".","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"CJ-Lee01"},"content":"     * If the raw string is empty, does not contain a start time or end time, it throws a DukeException.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"CJ-Lee01"},"content":"     * If the start time or end time cannot be parsed into a DateTimeOptional object, it throws a DukeException.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"CJ-Lee01"},"content":"     * @param rawLine The raw string to be parsed into an Event object.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"CJ-Lee01"},"content":"     * @return An Event object representing the parsed task.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"CJ-Lee01"},"content":"     * @throws DukeException If the raw string is empty or does not contain a start or end time.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"CJ-Lee01"},"content":"    public static Event create(String rawLine) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"CJ-Lee01"},"content":"        if (rawLine.length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"CJ-Lee01"},"content":"            throw new DukeException(\"Err: Empty Description\");","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"CJ-Lee01"},"content":"        String[] instructions \u003d rawLine.split(\" /from \", 2);","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"CJ-Lee01"},"content":"        if (instructions.length !\u003d 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"CJ-Lee01"},"content":"            throw new DukeException(\"Err: No start time given. Format is in event \u003cdesc\u003e /from \u003ctime\u003e /to \u003ctime\u003e\");","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"CJ-Lee01"},"content":"        String[] timeLine \u003d instructions[1].split(\" /to \", 2);","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"CJ-Lee01"},"content":"        if (timeLine.length !\u003d 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"CJ-Lee01"},"content":"            throw new DukeException(\"Err: No end time given. Format is in event \u003cdesc\u003e /from \u003ctime\u003e /to \u003ctime\u003e\");","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"CJ-Lee01"},"content":"        DateTimeOptional startDate, endDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"CJ-Lee01"},"content":"        startDate \u003d DateTimeOptional.parseDateTime(timeLine[0]);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"CJ-Lee01"},"content":"        endDate \u003d DateTimeOptional.parseDateTime(timeLine[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"CJ-Lee01"},"content":"        return new Event(instructions[0], startDate, endDate);","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"CJ-Lee01"},"content":"     * Constructs an Event object given the description, the start and the end.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"CJ-Lee01"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"CJ-Lee01"},"content":"     * @param startTime The start time of the task as a DateTimeOptional object.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"CJ-Lee01"},"content":"     * @param endTime The end time of the task as a DateTimeOptional object.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"CJ-Lee01"},"content":"    public Event(String description, DateTimeOptional startTime, DateTimeOptional endTime) {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"CJ-Lee01"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"CJ-Lee01"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"CJ-Lee01"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"CJ-Lee01"},"content":"     * Gives a string representation of the task in file format.","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"CJ-Lee01"},"content":"     * @return A string representation of the task in file format.","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"CJ-Lee01"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"CJ-Lee01"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"CJ-Lee01"},"content":"        return String.format(","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"CJ-Lee01"},"content":"                \"event %d %s /from %s /to %s\",","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"CJ-Lee01"},"content":"                super.isDone ? 1 : 0,","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"CJ-Lee01"},"content":"                super.description,","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"CJ-Lee01"},"content":"                this.startTime,","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"CJ-Lee01"},"content":"                this.endTime","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"CJ-Lee01"},"content":"        );","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"CJ-Lee01"},"content":"     * Gives a string representation of the task in display format.","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"CJ-Lee01"},"content":"     * @return A string representation of the task in display format.","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"CJ-Lee01"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":79,"author":{"gitId":"CJ-Lee01"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":80,"author":{"gitId":"CJ-Lee01"},"content":"        return String.format(","lastModifiedDate":"2023-08-21"},{"lineNumber":81,"author":{"gitId":"CJ-Lee01"},"content":"                \"[E][%s] %s (from: %s to: %s)\",","lastModifiedDate":"2023-08-21"},{"lineNumber":82,"author":{"gitId":"CJ-Lee01"},"content":"                super.getStatusIcon(),","lastModifiedDate":"2023-08-21"},{"lineNumber":83,"author":{"gitId":"CJ-Lee01"},"content":"                super.description,","lastModifiedDate":"2023-08-21"},{"lineNumber":84,"author":{"gitId":"CJ-Lee01"},"content":"                this.startTime.displayText(),","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"CJ-Lee01"},"content":"                this.endTime.displayText()","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"CJ-Lee01"},"content":"        );","lastModifiedDate":"2023-08-21"},{"lineNumber":87,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":88,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":89,"author":{"gitId":"CJ-Lee01"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":90,"author":{"gitId":"CJ-Lee01"},"content":"    public String update(TaskAttribute attribute, String updatedInfo) throws DukeException {","lastModifiedDate":"2023-09-14"},{"lineNumber":91,"author":{"gitId":"CJ-Lee01"},"content":"        String initial;","lastModifiedDate":"2023-09-14"},{"lineNumber":92,"author":{"gitId":"CJ-Lee01"},"content":"        String next;","lastModifiedDate":"2023-09-14"},{"lineNumber":93,"author":{"gitId":"CJ-Lee01"},"content":"        switch (attribute) {","lastModifiedDate":"2023-09-14"},{"lineNumber":94,"author":{"gitId":"CJ-Lee01"},"content":"        case start:","lastModifiedDate":"2023-09-14"},{"lineNumber":95,"author":{"gitId":"CJ-Lee01"},"content":"            initial \u003d this.startTime.displayText();","lastModifiedDate":"2023-09-14"},{"lineNumber":96,"author":{"gitId":"CJ-Lee01"},"content":"            this.startTime \u003d DateTimeOptional.parseDateTime(updatedInfo);","lastModifiedDate":"2023-09-14"},{"lineNumber":97,"author":{"gitId":"CJ-Lee01"},"content":"            next \u003d this.startTime.displayText();","lastModifiedDate":"2023-09-14"},{"lineNumber":98,"author":{"gitId":"CJ-Lee01"},"content":"            break;","lastModifiedDate":"2023-09-14"},{"lineNumber":99,"author":{"gitId":"CJ-Lee01"},"content":"        case end:","lastModifiedDate":"2023-09-14"},{"lineNumber":100,"author":{"gitId":"CJ-Lee01"},"content":"            initial \u003d this.endTime.displayText();","lastModifiedDate":"2023-09-14"},{"lineNumber":101,"author":{"gitId":"CJ-Lee01"},"content":"            this.endTime \u003d DateTimeOptional.parseDateTime(updatedInfo);","lastModifiedDate":"2023-09-14"},{"lineNumber":102,"author":{"gitId":"CJ-Lee01"},"content":"            next \u003d this.endTime.displayText();","lastModifiedDate":"2023-09-14"},{"lineNumber":103,"author":{"gitId":"CJ-Lee01"},"content":"            break;","lastModifiedDate":"2023-09-14"},{"lineNumber":104,"author":{"gitId":"CJ-Lee01"},"content":"        default:","lastModifiedDate":"2023-09-14"},{"lineNumber":105,"author":{"gitId":"CJ-Lee01"},"content":"            return super.update(attribute, updatedInfo);","lastModifiedDate":"2023-09-14"},{"lineNumber":106,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":107,"author":{"gitId":"CJ-Lee01"},"content":"        return this.formatUpdateResponse(attribute, initial, next);","lastModifiedDate":"2023-09-14"},{"lineNumber":108,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":109,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":110,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":111,"author":{"gitId":"CJ-Lee01"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"CJ-Lee01":111}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJ-Lee01"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"CJ-Lee01"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"CJ-Lee01"},"content":"import main.Main;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"CJ-Lee01"},"content":"public class Launcher {","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"CJ-Lee01"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"CJ-Lee01"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"CJ-Lee01"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"CJ-Lee01":11}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJ-Lee01"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"CJ-Lee01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"CJ-Lee01"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"CJ-Lee01"},"content":" * A parser for the Duke program.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"CJ-Lee01"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"CJ-Lee01"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"CJ-Lee01"},"content":"     * Takes a Storage object and attempts to parse the tasks stored in it into an array of Task objects.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"CJ-Lee01"},"content":"     * If a line in the storage file cannot be parsed into a Task object, it throws a DukeException.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"CJ-Lee01"},"content":"     * @param storage The Storage object to be parsed.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"CJ-Lee01"},"content":"     * @return An array of Task objects representing the tasks stored in the Storage object.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"CJ-Lee01"},"content":"     * @throws DukeException If a line in the storage file cannot be parsed into a Task object.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"CJ-Lee01"},"content":"    public static Task[] parseFile(Storage storage) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"CJ-Lee01"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"CJ-Lee01"},"content":"        String[] lines \u003d storage.readLines();","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"CJ-Lee01"},"content":"        for (String line : lines) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"CJ-Lee01"},"content":"            tasks.add(parseTaskFromFileLine(line));","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"CJ-Lee01"},"content":"        return tasks.toArray(new Task[]{});","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":28,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"CJ-Lee01"},"content":"     * Takes a string representing a line from the storage file and attempts to parse it into a Task object.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"CJ-Lee01"},"content":"     * If the string cannot be parsed into a Task object, it throws a DukeException.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"CJ-Lee01"},"content":"     * @param line The string to be parsed into a Task object.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"CJ-Lee01"},"content":"     * @return A Task object representing the parsed task.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"CJ-Lee01"},"content":"     * @throws DukeException If the string cannot be parsed into a Task object.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"CJ-Lee01"},"content":"    private static Task parseTaskFromFileLine(String line) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"CJ-Lee01"},"content":"        String[] tokens \u003d line.split(\" \", 3);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"CJ-Lee01"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"CJ-Lee01"},"content":"            Commands c \u003d Commands.valueOf(tokens[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"CJ-Lee01"},"content":"            boolean done \u003d !tokens[1].equals(\"0\");","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"CJ-Lee01"},"content":"            String desc \u003d tokens[2];","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"CJ-Lee01"},"content":"            Task task \u003d Task.create(c, desc);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"CJ-Lee01"},"content":"            if (done) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"CJ-Lee01"},"content":"                task.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"CJ-Lee01"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"CJ-Lee01"},"content":"                task.markAsNotDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"CJ-Lee01"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"CJ-Lee01"},"content":"            return task;","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"CJ-Lee01"},"content":"        } catch (IllegalArgumentException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"CJ-Lee01"},"content":"            throw new DukeException(\"Corrupted file. Delete all text in the duke.txt to use it again.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"CJ-Lee01"},"content":"     * Takes a string (from the command line) and attempts to parse it into a Task object.","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"CJ-Lee01"},"content":"     * If the string is empty, it throws a DukeException.","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"CJ-Lee01"},"content":"     * @param s The string to be parsed into a Task object.","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"CJ-Lee01"},"content":"     * @return A Task object representing the parsed task.","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"CJ-Lee01"},"content":"     * @throws DukeException If the string is empty or cannot be parsed into a Task object.","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"CJ-Lee01"},"content":"    public static Task parseTask(String s) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"CJ-Lee01"},"content":"        if (s.length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"CJ-Lee01"},"content":"            throw new DukeException(\"Empty line found\");","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"CJ-Lee01"},"content":"        String[] instructions \u003d s.split(\" \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"CJ-Lee01"},"content":"        Commands cmd \u003d Commands.get(instructions[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"CJ-Lee01"},"content":"        return Parser.parseTask(cmd, instructions);","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"CJ-Lee01"},"content":"     * Takes a Commands enum value and an array of strings and attempts to create a Task object from them.","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"CJ-Lee01"},"content":"     * If the array of strings does not contain enough information to create a Task object, it throws a DukeException.","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"CJ-Lee01"},"content":"     * @param cmd The Commands enum value representing the type of task to be created.","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"CJ-Lee01"},"content":"     * @param instructions The array of strings containing information about the task to be created.","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"CJ-Lee01"},"content":"     * @return A Task object representing the created task.","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"CJ-Lee01"},"content":"     * @throws DukeException If the array of strings does not contain enough information to create a Task object.","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"CJ-Lee01"},"content":"    public static Task parseTask(Commands cmd, String[] instructions) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"CJ-Lee01"},"content":"        if (instructions.length !\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"CJ-Lee01"},"content":"            throw new DukeException(\"No details given for command: \" + cmd);","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"CJ-Lee01"},"content":"        return Task.create(cmd, instructions[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":89,"author":{"gitId":"CJ-Lee01"},"content":"     * Parses task and adds task to list, and gives string response.","lastModifiedDate":"2023-09-14"},{"lineNumber":90,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":91,"author":{"gitId":"CJ-Lee01"},"content":"     * @param cmd the command task","lastModifiedDate":"2023-09-14"},{"lineNumber":92,"author":{"gitId":"CJ-Lee01"},"content":"     * @param instructions the list of instructions for the task","lastModifiedDate":"2023-09-14"},{"lineNumber":93,"author":{"gitId":"CJ-Lee01"},"content":"     * @param list the input list","lastModifiedDate":"2023-09-14"},{"lineNumber":94,"author":{"gitId":"CJ-Lee01"},"content":"     * @return the response of adding the task to the list.","lastModifiedDate":"2023-09-14"},{"lineNumber":95,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":96,"author":{"gitId":"CJ-Lee01"},"content":"    public static String parseTaskAndAddToList(Commands cmd, String[] instructions, StoreList list) {","lastModifiedDate":"2023-09-14"},{"lineNumber":97,"author":{"gitId":"CJ-Lee01"},"content":"        String response;","lastModifiedDate":"2023-09-14"},{"lineNumber":98,"author":{"gitId":"CJ-Lee01"},"content":"        try {","lastModifiedDate":"2023-09-14"},{"lineNumber":99,"author":{"gitId":"CJ-Lee01"},"content":"            Task task \u003d Parser.parseTask(cmd, instructions);","lastModifiedDate":"2023-09-14"},{"lineNumber":100,"author":{"gitId":"CJ-Lee01"},"content":"            response \u003d list.add(task);","lastModifiedDate":"2023-09-14"},{"lineNumber":101,"author":{"gitId":"CJ-Lee01"},"content":"            return response;","lastModifiedDate":"2023-09-14"},{"lineNumber":102,"author":{"gitId":"CJ-Lee01"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-14"},{"lineNumber":103,"author":{"gitId":"CJ-Lee01"},"content":"            return e.toString();","lastModifiedDate":"2023-09-14"},{"lineNumber":104,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":105,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":106,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":107,"author":{"gitId":"CJ-Lee01"},"content":"    public static String findAll(String[] instructions, StoreList src) {","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"CJ-Lee01"},"content":"        String listString;","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"CJ-Lee01"},"content":"        if (instructions.length \u003c\u003d 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"CJ-Lee01"},"content":"            listString \u003d src.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"CJ-Lee01"},"content":"            return String.format(\"Here are the tasks:\\n%s\", listString);","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"CJ-Lee01"},"content":"        String term \u003d instructions[1];","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"CJ-Lee01"},"content":"        StoreList list \u003d src.findAll(term);","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"CJ-Lee01"},"content":"        listString \u003d list.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"CJ-Lee01"},"content":"        return String.format(\"Here are the tasks with \u0027%s\u0027:\\n%s\", term, listString);","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":121,"author":{"gitId":"CJ-Lee01"},"content":"     * Gives response to updating a task in the list.","lastModifiedDate":"2023-09-14"},{"lineNumber":122,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":123,"author":{"gitId":"CJ-Lee01"},"content":"     * @param instructions the set of instructions for the update.","lastModifiedDate":"2023-09-14"},{"lineNumber":124,"author":{"gitId":"CJ-Lee01"},"content":"     * @return the response to updating the task in the list.","lastModifiedDate":"2023-09-14"},{"lineNumber":125,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":126,"author":{"gitId":"CJ-Lee01"},"content":"    public static String parseUpdate(String[] instructions, StoreList list) {","lastModifiedDate":"2023-09-14"},{"lineNumber":127,"author":{"gitId":"CJ-Lee01"},"content":"        String invalidCommand \u003d \"Invalid command. Format should be: update \u003cindex\u003e \u003cdescription|start|end|deadline\u003e \u003cupdatedInfo\u003e\";","lastModifiedDate":"2023-09-14"},{"lineNumber":128,"author":{"gitId":"CJ-Lee01"},"content":"        if (instructions.length !\u003d 2) {","lastModifiedDate":"2023-09-14"},{"lineNumber":129,"author":{"gitId":"CJ-Lee01"},"content":"            return invalidCommand;","lastModifiedDate":"2023-09-14"},{"lineNumber":130,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":131,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":132,"author":{"gitId":"CJ-Lee01"},"content":"        String[] indexWithUpdateInformation \u003d instructions[1].split(\" \", 2);","lastModifiedDate":"2023-09-14"},{"lineNumber":133,"author":{"gitId":"CJ-Lee01"},"content":"        if (indexWithUpdateInformation.length !\u003d 2) {","lastModifiedDate":"2023-09-14"},{"lineNumber":134,"author":{"gitId":"CJ-Lee01"},"content":"            return invalidCommand;","lastModifiedDate":"2023-09-14"},{"lineNumber":135,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":136,"author":{"gitId":"CJ-Lee01"},"content":"        int index;","lastModifiedDate":"2023-09-14"},{"lineNumber":137,"author":{"gitId":"CJ-Lee01"},"content":"        try {","lastModifiedDate":"2023-09-14"},{"lineNumber":138,"author":{"gitId":"CJ-Lee01"},"content":"            index \u003d Integer.parseInt(indexWithUpdateInformation[0]);","lastModifiedDate":"2023-09-14"},{"lineNumber":139,"author":{"gitId":"CJ-Lee01"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-14"},{"lineNumber":140,"author":{"gitId":"CJ-Lee01"},"content":"            return invalidCommand;","lastModifiedDate":"2023-09-14"},{"lineNumber":141,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":142,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":143,"author":{"gitId":"CJ-Lee01"},"content":"        String[] attributeWithUpdateInfo \u003d indexWithUpdateInformation[1].split(\" \", 2);","lastModifiedDate":"2023-09-14"},{"lineNumber":144,"author":{"gitId":"CJ-Lee01"},"content":"        if (attributeWithUpdateInfo.length !\u003d 2) {","lastModifiedDate":"2023-09-14"},{"lineNumber":145,"author":{"gitId":"CJ-Lee01"},"content":"            return invalidCommand;","lastModifiedDate":"2023-09-14"},{"lineNumber":146,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":147,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":148,"author":{"gitId":"CJ-Lee01"},"content":"        TaskAttribute attribute \u003d TaskAttribute.get(attributeWithUpdateInfo[0]);","lastModifiedDate":"2023-09-14"},{"lineNumber":149,"author":{"gitId":"CJ-Lee01"},"content":"        return list.updateTask(attribute, index, attributeWithUpdateInfo[1]);","lastModifiedDate":"2023-09-14"},{"lineNumber":150,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":151,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":152,"author":{"gitId":"CJ-Lee01"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"CJ-Lee01":152}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJ-Lee01"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"CJ-Lee01"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"CJ-Lee01"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"CJ-Lee01"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"CJ-Lee01"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"CJ-Lee01"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"CJ-Lee01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"CJ-Lee01"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"CJ-Lee01"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"CJ-Lee01"},"content":" * Storage system for Duke program.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"CJ-Lee01"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"CJ-Lee01"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"CJ-Lee01"},"content":"    private static final String FILE_NOT_INITIALIZED \u003d \"File not initialized\";","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"CJ-Lee01"},"content":"    /** Default file path. */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"CJ-Lee01"},"content":"    private static final String FILE_PATH \u003d \"../../duke.txt\";","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"CJ-Lee01"},"content":"    /** The file to parse */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"CJ-Lee01"},"content":"    private File file;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"CJ-Lee01"},"content":"     * Constructs a Storage object with a File object.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"CJ-Lee01"},"content":"     * @param file The File object representing the file to be used for storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"CJ-Lee01"},"content":"    public Storage(File file) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"CJ-Lee01"},"content":"        this.file \u003d file;","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"CJ-Lee01"},"content":"     * Constructs a Storage object with a string representing the path of the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"CJ-Lee01"},"content":"     * If the file does not exist, it attempts to create it.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"CJ-Lee01"},"content":"     * If the file cannot be created, it throws a DukeException.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"CJ-Lee01"},"content":"     * @param pathName The path of the file to be used for storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"CJ-Lee01"},"content":"     * @throws DukeException If the file cannot be created.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"CJ-Lee01"},"content":"    public Storage(String pathName) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"CJ-Lee01"},"content":"        this.file \u003d new File(pathName);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"CJ-Lee01"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"CJ-Lee01"},"content":"            file.createNewFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"CJ-Lee01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"CJ-Lee01"},"content":"            throw new DukeException(\"Unable to find or create file.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"CJ-Lee01"},"content":"     * Creates a Storage object using the default file path.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"CJ-Lee01"},"content":"     * If the file does not exist, it attempts to create it.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"CJ-Lee01"},"content":"     * If the file cannot be created, it throws a DukeException.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"CJ-Lee01"},"content":"     * @throws DukeException If the file cannot be created.","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"CJ-Lee01"},"content":"    public Storage() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"CJ-Lee01"},"content":"        this.file \u003d new File(FILE_PATH);","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"CJ-Lee01"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"CJ-Lee01"},"content":"            file.createNewFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"CJ-Lee01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"CJ-Lee01"},"content":"            throw new DukeException(\"Unable to find or create file.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"CJ-Lee01"},"content":"     * Reads the lines from the storage file and returns them as an array of strings.","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"CJ-Lee01"},"content":"     * If the storage file cannot be found, it throws a DukeException.","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"CJ-Lee01"},"content":"     * @return An array of strings representing the lines in the storage file.","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"CJ-Lee01"},"content":"     * @throws DukeException If the storage file cannot be found.","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"CJ-Lee01"},"content":"    public String[] readLines() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"CJ-Lee01"},"content":"        Scanner sc;","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"CJ-Lee01"},"content":"        assert this.file !\u003d null : FILE_NOT_INITIALIZED;","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"CJ-Lee01"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"CJ-Lee01"},"content":"            sc \u003d new Scanner(this.file);","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"CJ-Lee01"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"CJ-Lee01"},"content":"            throw new DukeException(\"File not found.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"CJ-Lee01"},"content":"        ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"CJ-Lee01"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"CJ-Lee01"},"content":"            lines.add(sc.nextLine());","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"CJ-Lee01"},"content":"        sc.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"CJ-Lee01"},"content":"        return lines.toArray(new String[]{});","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"CJ-Lee01"},"content":"     * Takes a string and writes it to the storage file.","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"CJ-Lee01"},"content":"     * @param s The string to be written to the storage file.","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"CJ-Lee01"},"content":"    public void write(String s) {","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"CJ-Lee01"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"CJ-Lee01"},"content":"            FileWriter fileWriter \u003d new FileWriter(file);","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"CJ-Lee01"},"content":"            PrintWriter pw \u003d new PrintWriter(fileWriter);","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"CJ-Lee01"},"content":"            pw.write(s);","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"CJ-Lee01"},"content":"            pw.flush();","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"CJ-Lee01"},"content":"            pw.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"CJ-Lee01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"CJ-Lee01"},"content":"            System.out.println(\"Unable to write to duke.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"CJ-Lee01"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"CJ-Lee01":105}},{"path":"src/main/java/duke/StoreList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJ-Lee01"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"CJ-Lee01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"CJ-Lee01"},"content":"import java.util.Collection;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"CJ-Lee01"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"CJ-Lee01"},"content":" * List of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"CJ-Lee01"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"CJ-Lee01"},"content":"public class StoreList {","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"CJ-Lee01"},"content":"    private static String INDEX_OUT_OF_BOUNDS_MSG \u003d \"Err: Index provided is out of position of the list\";","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"CJ-Lee01"},"content":"    /** The list of task. */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"CJ-Lee01"},"content":"    ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"CJ-Lee01"},"content":"    /** Creates a new list of tasks. */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"CJ-Lee01"},"content":"    public StoreList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"CJ-Lee01"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"CJ-Lee01"},"content":"     * Adds task corresponding to the Commands enum value and a string representing the description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"CJ-Lee01"},"content":"     * If a task cannot be created from the given information, it returns an error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"CJ-Lee01"},"content":"     * @param type The Commands enum value representing the type of task to be added.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"CJ-Lee01"},"content":"     * @param description The description of the task to be added.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"CJ-Lee01"},"content":"     * @return A string representing the result of adding the task to the list or an error if unsuccessful.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"CJ-Lee01"},"content":"    public String add(Commands type, String description) {","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"CJ-Lee01"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"CJ-Lee01"},"content":"            Task task \u003d Task.create(type, description);","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"CJ-Lee01"},"content":"            list.add(task);","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"CJ-Lee01"},"content":"            return String.format(","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"CJ-Lee01"},"content":"                    \"added: %s\\nYou have %d tasks.\",","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"CJ-Lee01"},"content":"                    task,","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"CJ-Lee01"},"content":"                    list.size()","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"CJ-Lee01"},"content":"            );","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"CJ-Lee01"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"CJ-Lee01"},"content":"            return e.toString();","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"CJ-Lee01"},"content":"     * This method takes a Task object and adds it to the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"CJ-Lee01"},"content":"     * @param task The Task object to be added to the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"CJ-Lee01"},"content":"     * @return A string representing the result of adding the task to the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"CJ-Lee01"},"content":"    public String add(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"CJ-Lee01"},"content":"        list.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"CJ-Lee01"},"content":"        return String.format(","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"CJ-Lee01"},"content":"                \"added: %s\\nYou have %d tasks.\",","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"CJ-Lee01"},"content":"                task,","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"CJ-Lee01"},"content":"                list.size()","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"CJ-Lee01"},"content":"        );","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"CJ-Lee01"},"content":"     * Takes collection of Task objects and adds them all to the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"CJ-Lee01"},"content":"     * @param tasks The collection of Task objects to be added to the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"CJ-Lee01"},"content":"    public void addTasks(Collection\u003c? extends Task\u003e tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"CJ-Lee01"},"content":"        list.addAll(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"CJ-Lee01"},"content":"     * Marks the task at the string representation of the position of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"CJ-Lee01"},"content":"     * If the position is not a valid integer, it returns an error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"CJ-Lee01"},"content":"     * If the position is out of bounds, it returns an error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"CJ-Lee01"},"content":"     * @param position The position of the task in the list as a string.","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"CJ-Lee01"},"content":"     * @return A string representing the result of marking the task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"CJ-Lee01"},"content":"    public String markDone(String position) {","lastModifiedDate":"2023-09-22"},{"lineNumber":77,"author":{"gitId":"CJ-Lee01"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"CJ-Lee01"},"content":"            int index \u003d Integer.parseInt(position) - 1;","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"CJ-Lee01"},"content":"            Task task \u003d list.get(index);","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"CJ-Lee01"},"content":"            task.markAsDone();","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"CJ-Lee01"},"content":"            return String.format(\"Nice! You have completed the task:\\n    %s\", task);","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"CJ-Lee01"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"CJ-Lee01"},"content":"            return \"Err: Index provided is not an integer\";","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"CJ-Lee01"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"CJ-Lee01"},"content":"            return INDEX_OUT_OF_BOUNDS_MSG;","lastModifiedDate":"2023-09-14"},{"lineNumber":86,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"CJ-Lee01"},"content":"     * Unmarks the task at the string representation of the position of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"CJ-Lee01"},"content":"     * If the position is not a valid integer, it returns an error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"CJ-Lee01"},"content":"     * If the position is out of bounds, it returns an error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"CJ-Lee01"},"content":"     * @param position The position of the task in the list as a string.","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"CJ-Lee01"},"content":"     * @return A string representing the result of marking the task as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"CJ-Lee01"},"content":"    public String markUndone(String position) {","lastModifiedDate":"2023-09-22"},{"lineNumber":98,"author":{"gitId":"CJ-Lee01"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":99,"author":{"gitId":"CJ-Lee01"},"content":"            int index \u003d Integer.parseInt(position) - 1;","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"CJ-Lee01"},"content":"            Task task \u003d list.get(index);","lastModifiedDate":"2023-08-28"},{"lineNumber":101,"author":{"gitId":"CJ-Lee01"},"content":"            task.markAsNotDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"CJ-Lee01"},"content":"            return String.format(\"Ok! duke.Task marked undone:\\n    %s\", task);","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"CJ-Lee01"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":104,"author":{"gitId":"CJ-Lee01"},"content":"            return \"Err: Index provided is not an integer\";","lastModifiedDate":"2023-08-28"},{"lineNumber":105,"author":{"gitId":"CJ-Lee01"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":106,"author":{"gitId":"CJ-Lee01"},"content":"            return INDEX_OUT_OF_BOUNDS_MSG;","lastModifiedDate":"2023-09-14"},{"lineNumber":107,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":108,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":109,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":110,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"CJ-Lee01"},"content":"     * Deletes task based on the position from parsing the string.","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"CJ-Lee01"},"content":"     * If the position is not a valid integer, it returns an error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"CJ-Lee01"},"content":"     * If the position is out of bounds, it returns an error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"CJ-Lee01"},"content":"     * @param position The position of the task in the list as a string.","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"CJ-Lee01"},"content":"     * @return A string representing the result of removing the task from the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"CJ-Lee01"},"content":"    public String delete(String position) {","lastModifiedDate":"2023-09-22"},{"lineNumber":119,"author":{"gitId":"CJ-Lee01"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":120,"author":{"gitId":"CJ-Lee01"},"content":"            int index \u003d Integer.parseInt(position) - 1;","lastModifiedDate":"2023-08-28"},{"lineNumber":121,"author":{"gitId":"CJ-Lee01"},"content":"            Task task \u003d list.remove(index);","lastModifiedDate":"2023-08-28"},{"lineNumber":122,"author":{"gitId":"CJ-Lee01"},"content":"            return String.format(","lastModifiedDate":"2023-08-28"},{"lineNumber":123,"author":{"gitId":"CJ-Lee01"},"content":"                    \"removed: %s\\nYou have %d tasks.\",","lastModifiedDate":"2023-08-28"},{"lineNumber":124,"author":{"gitId":"CJ-Lee01"},"content":"                    task,","lastModifiedDate":"2023-08-28"},{"lineNumber":125,"author":{"gitId":"CJ-Lee01"},"content":"                    list.size()","lastModifiedDate":"2023-08-28"},{"lineNumber":126,"author":{"gitId":"CJ-Lee01"},"content":"            );","lastModifiedDate":"2023-08-28"},{"lineNumber":127,"author":{"gitId":"CJ-Lee01"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":128,"author":{"gitId":"CJ-Lee01"},"content":"            return \"Err: Index provided is not an integer\";","lastModifiedDate":"2023-08-28"},{"lineNumber":129,"author":{"gitId":"CJ-Lee01"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":130,"author":{"gitId":"CJ-Lee01"},"content":"            return INDEX_OUT_OF_BOUNDS_MSG;","lastModifiedDate":"2023-09-14"},{"lineNumber":131,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":132,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":133,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"CJ-Lee01"},"content":"     * Gives a string representation of the list of tasks in display format.","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"CJ-Lee01"},"content":"     * @return A string representation of the list of tasks in display format.","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"CJ-Lee01"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":140,"author":{"gitId":"CJ-Lee01"},"content":"    public String toString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":141,"author":{"gitId":"CJ-Lee01"},"content":"        if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-28"},{"lineNumber":142,"author":{"gitId":"CJ-Lee01"},"content":"            return \"You have no tasks :).\";","lastModifiedDate":"2023-08-28"},{"lineNumber":143,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":144,"author":{"gitId":"CJ-Lee01"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-08-28"},{"lineNumber":145,"author":{"gitId":"CJ-Lee01"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":146,"author":{"gitId":"CJ-Lee01"},"content":"            result +\u003d String.format(\"    %d. %s\\n\", i + 1, list.get(i));","lastModifiedDate":"2023-08-28"},{"lineNumber":147,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":148,"author":{"gitId":"CJ-Lee01"},"content":"        return result;","lastModifiedDate":"2023-08-28"},{"lineNumber":149,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":150,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":151,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"CJ-Lee01"},"content":"     * Gives representation of the list of tasks in file format.","lastModifiedDate":"2023-09-01"},{"lineNumber":153,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"CJ-Lee01"},"content":"     * @return A string representation of the list of tasks in file format.","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"CJ-Lee01"},"content":"    public String showSaveText() {","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"CJ-Lee01"},"content":"        String saveText \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"CJ-Lee01"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"CJ-Lee01"},"content":"            saveText +\u003d list.get(i).toFileString() + (i + 1 \u003d\u003d list.size() ? \"\" : \"\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":160,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"CJ-Lee01"},"content":"        return saveText;","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":164,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":165,"author":{"gitId":"CJ-Lee01"},"content":"     * Finds all tasks that contains the term and returns it as a StoreList.","lastModifiedDate":"2023-09-01"},{"lineNumber":166,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":167,"author":{"gitId":"CJ-Lee01"},"content":"     * @param term","lastModifiedDate":"2023-09-01"},{"lineNumber":168,"author":{"gitId":"CJ-Lee01"},"content":"     * @return the StoreList","lastModifiedDate":"2023-09-01"},{"lineNumber":169,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":170,"author":{"gitId":"CJ-Lee01"},"content":"    public StoreList findAll(String term) {","lastModifiedDate":"2023-09-01"},{"lineNumber":171,"author":{"gitId":"CJ-Lee01"},"content":"        if (term.length() \u003d\u003d 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":172,"author":{"gitId":"CJ-Lee01"},"content":"            return this;","lastModifiedDate":"2023-09-01"},{"lineNumber":173,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":174,"author":{"gitId":"CJ-Lee01"},"content":"        StoreList result \u003d new StoreList();","lastModifiedDate":"2023-09-01"},{"lineNumber":175,"author":{"gitId":"CJ-Lee01"},"content":"        this.list.forEach((task) -\u003e {","lastModifiedDate":"2023-09-01"},{"lineNumber":176,"author":{"gitId":"CJ-Lee01"},"content":"            if (task.contains(term)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":177,"author":{"gitId":"CJ-Lee01"},"content":"                result.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":178,"author":{"gitId":"CJ-Lee01"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":179,"author":{"gitId":"CJ-Lee01"},"content":"        });","lastModifiedDate":"2023-09-01"},{"lineNumber":180,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":181,"author":{"gitId":"CJ-Lee01"},"content":"        return result;","lastModifiedDate":"2023-09-01"},{"lineNumber":182,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":183,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":184,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":185,"author":{"gitId":"CJ-Lee01"},"content":"     * Updates the task given the index and the attribute of the task to be updated.","lastModifiedDate":"2023-09-14"},{"lineNumber":186,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":187,"author":{"gitId":"CJ-Lee01"},"content":"     * @param attribute the attribute of the task to update.","lastModifiedDate":"2023-09-14"},{"lineNumber":188,"author":{"gitId":"CJ-Lee01"},"content":"     * @param index the index of the task in the list. This index starts from 1.","lastModifiedDate":"2023-09-14"},{"lineNumber":189,"author":{"gitId":"CJ-Lee01"},"content":"     * @param updatedInfo the new info to update with.","lastModifiedDate":"2023-09-14"},{"lineNumber":190,"author":{"gitId":"CJ-Lee01"},"content":"     * @return response: error msg if not successful.","lastModifiedDate":"2023-09-14"},{"lineNumber":191,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":192,"author":{"gitId":"CJ-Lee01"},"content":"    public String updateTask(TaskAttribute attribute, int index, String updatedInfo) {","lastModifiedDate":"2023-09-14"},{"lineNumber":193,"author":{"gitId":"CJ-Lee01"},"content":"        try {","lastModifiedDate":"2023-09-14"},{"lineNumber":194,"author":{"gitId":"CJ-Lee01"},"content":"            Task task \u003d this.list.get(index - 1);","lastModifiedDate":"2023-09-14"},{"lineNumber":195,"author":{"gitId":"CJ-Lee01"},"content":"            String response \u003d task.update(attribute, updatedInfo);","lastModifiedDate":"2023-09-14"},{"lineNumber":196,"author":{"gitId":"CJ-Lee01"},"content":"            return response;","lastModifiedDate":"2023-09-14"},{"lineNumber":197,"author":{"gitId":"CJ-Lee01"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-14"},{"lineNumber":198,"author":{"gitId":"CJ-Lee01"},"content":"            return e.toString();","lastModifiedDate":"2023-09-14"},{"lineNumber":199,"author":{"gitId":"CJ-Lee01"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-14"},{"lineNumber":200,"author":{"gitId":"CJ-Lee01"},"content":"            return INDEX_OUT_OF_BOUNDS_MSG;","lastModifiedDate":"2023-09-14"},{"lineNumber":201,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":202,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":203,"author":{"gitId":"CJ-Lee01"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"CJ-Lee01":203}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJ-Lee01"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"CJ-Lee01"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"CJ-Lee01"},"content":" * This abstract class represents a task in the Duke program.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"CJ-Lee01"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"CJ-Lee01"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"CJ-Lee01"},"content":"    private static String CMD_NOT_KNOWN \u003d \"Command not known\";","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"CJ-Lee01"},"content":"    /** Task description. */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"CJ-Lee01"},"content":"    protected String description;","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"CJ-Lee01"},"content":"    /** Task is done. */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"CJ-Lee01"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"CJ-Lee01"},"content":"     * Creates as task based on the Commands enum value and a string representing the description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"CJ-Lee01"},"content":"     * If a task cannot be created from the given information, it throws a DukeException.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"CJ-Lee01"},"content":"     * @param command The Commands enum value representing the type of task to be created.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"CJ-Lee01"},"content":"     * @param rawLine The description of the task to be created.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"CJ-Lee01"},"content":"     * @return A Task object representing the created task.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"CJ-Lee01"},"content":"     * @throws DukeException If a task cannot be created from the given information.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"CJ-Lee01"},"content":"    public static Task create(Commands command, String rawLine) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"CJ-Lee01"},"content":"        assert (!command.equals(Commands.unknown)) : CMD_NOT_KNOWN;","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"CJ-Lee01"},"content":"        switch (command) {","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"CJ-Lee01"},"content":"        case todo:","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"CJ-Lee01"},"content":"            return ToDo.create(rawLine);","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"CJ-Lee01"},"content":"        case deadline:","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"CJ-Lee01"},"content":"            return Deadline.create(rawLine);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"CJ-Lee01"},"content":"        case event:","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"CJ-Lee01"},"content":"            return Event.create(rawLine);","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"CJ-Lee01"},"content":"        default:","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"CJ-Lee01"},"content":"            throw new RuntimeException(\"Command not recognized\"); //literally should not run","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":38,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"CJ-Lee01"},"content":"     * Creates the task by takes a string representing the description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"CJ-Lee01"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"CJ-Lee01"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"CJ-Lee01"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"CJ-Lee01"},"content":"     * This method returns a string representing the done status of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"CJ-Lee01"},"content":"     * @return A string representing the done status of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"CJ-Lee01"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"CJ-Lee01"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"CJ-Lee01"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"CJ-Lee01"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"CJ-Lee01"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":61,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":62,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"CJ-Lee01"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"CJ-Lee01"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":66,"author":{"gitId":"CJ-Lee01"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":67,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":68,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":69,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"CJ-Lee01"},"content":"     * Gives a string representation of the task in file format.","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"CJ-Lee01"},"content":"     * @return A string representation of the task in file format.","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"CJ-Lee01"},"content":"    public abstract String toFileString();","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"CJ-Lee01"},"content":"     * Checks if the description contains the substring","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"CJ-Lee01"},"content":"     * @param s","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"CJ-Lee01"},"content":"     * @return true if found, false otherwise.","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"CJ-Lee01"},"content":"    public boolean contains(String s) {","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"CJ-Lee01"},"content":"        return this.description.contains(s);","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"CJ-Lee01"},"content":"     * Gives a string representation of the task in display format.","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"CJ-Lee01"},"content":"     * @return A string representation of the task in display format.","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"CJ-Lee01"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":92,"author":{"gitId":"CJ-Lee01"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":93,"author":{"gitId":"CJ-Lee01"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-08-21"},{"lineNumber":94,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":95,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":96,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":97,"author":{"gitId":"CJ-Lee01"},"content":"     * Updates the information about a specific task.","lastModifiedDate":"2023-09-14"},{"lineNumber":98,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":99,"author":{"gitId":"CJ-Lee01"},"content":"     * @param attribute the attribute to update. Attributes: description, deadline, start, end","lastModifiedDate":"2023-09-14"},{"lineNumber":100,"author":{"gitId":"CJ-Lee01"},"content":"     * @param updatedInfo the information to update the attribute with. If it is time related, it must be in the format.","lastModifiedDate":"2023-09-14"},{"lineNumber":101,"author":{"gitId":"CJ-Lee01"},"content":"     * @return The response of the update","lastModifiedDate":"2023-09-14"},{"lineNumber":102,"author":{"gitId":"CJ-Lee01"},"content":"     * @throws DukeException","lastModifiedDate":"2023-09-14"},{"lineNumber":103,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":104,"author":{"gitId":"CJ-Lee01"},"content":"    public String update(TaskAttribute attribute, String updatedInfo) throws DukeException {","lastModifiedDate":"2023-09-14"},{"lineNumber":105,"author":{"gitId":"CJ-Lee01"},"content":"        String initial \u003d \"\";","lastModifiedDate":"2023-09-14"},{"lineNumber":106,"author":{"gitId":"CJ-Lee01"},"content":"        if (attribute.equals(TaskAttribute.description)) {","lastModifiedDate":"2023-09-14"},{"lineNumber":107,"author":{"gitId":"CJ-Lee01"},"content":"            initial \u003d this.description;","lastModifiedDate":"2023-09-14"},{"lineNumber":108,"author":{"gitId":"CJ-Lee01"},"content":"            this.description \u003d updatedInfo;","lastModifiedDate":"2023-09-14"},{"lineNumber":109,"author":{"gitId":"CJ-Lee01"},"content":"            return formatUpdateResponse(attribute, initial, updatedInfo);","lastModifiedDate":"2023-09-14"},{"lineNumber":110,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":111,"author":{"gitId":"CJ-Lee01"},"content":"        throw new DukeException(String.format(\"Unknown attribute: %s for %s\", attribute, this));","lastModifiedDate":"2023-09-14"},{"lineNumber":112,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":113,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":114,"author":{"gitId":"CJ-Lee01"},"content":"    protected String formatUpdateResponse(TaskAttribute attribute, String initial, String next) {","lastModifiedDate":"2023-09-14"},{"lineNumber":115,"author":{"gitId":"CJ-Lee01"},"content":"        return String.format(\"Changed %s: %s -\u003e %s\\nFor %s\", attribute.name(), initial, next, this);","lastModifiedDate":"2023-09-14"},{"lineNumber":116,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":117,"author":{"gitId":"CJ-Lee01"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"CJ-Lee01":117}},{"path":"src/main/java/duke/TaskAttribute.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJ-Lee01"},"content":"package duke;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"CJ-Lee01"},"content":"public enum TaskAttribute {","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"CJ-Lee01"},"content":"    description,","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"CJ-Lee01"},"content":"    by,","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"CJ-Lee01"},"content":"    start,","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"CJ-Lee01"},"content":"    end,","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"CJ-Lee01"},"content":"    unknown;","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"CJ-Lee01"},"content":"    public static TaskAttribute get(String s) {","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"CJ-Lee01"},"content":"        if (s \u003d\u003d null) {","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"CJ-Lee01"},"content":"            return TaskAttribute.unknown;","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"CJ-Lee01"},"content":"        try {","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"CJ-Lee01"},"content":"            return TaskAttribute.valueOf(s);","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"CJ-Lee01"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"CJ-Lee01"},"content":"            return TaskAttribute.unknown;","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"CJ-Lee01"},"content":"}","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"CJ-Lee01":21}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJ-Lee01"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"CJ-Lee01"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"CJ-Lee01"},"content":" * Todo keep tracks of tasks without deadlines.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"CJ-Lee01"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"CJ-Lee01"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"CJ-Lee01"},"content":"     * Creates a todo from a string representing the description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"CJ-Lee01"},"content":"     * If the description is empty, it throws a DukeException.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"CJ-Lee01"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"CJ-Lee01"},"content":"     * @return A ToDo object representing the created task.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"CJ-Lee01"},"content":"     * @throws DukeException If the description is empty.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"CJ-Lee01"},"content":"    public static ToDo create(String description) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"CJ-Lee01"},"content":"        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"CJ-Lee01"},"content":"            throw new DukeException(\"Err: Empty Description\");","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"CJ-Lee01"},"content":"        return new ToDo(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"CJ-Lee01"},"content":"     * Constructs a todo with a string representing the description.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"CJ-Lee01"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"CJ-Lee01"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"CJ-Lee01"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"CJ-Lee01"},"content":"     * Gives a string representation of the task in file format.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"CJ-Lee01"},"content":"     * @return A string representation of the task in file format.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"CJ-Lee01"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"CJ-Lee01"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"CJ-Lee01"},"content":"        return String.format(","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"CJ-Lee01"},"content":"                \"todo %d %s\",","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"CJ-Lee01"},"content":"                super.isDone ? 1 : 0,","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"CJ-Lee01"},"content":"                super.description","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"CJ-Lee01"},"content":"        );","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"CJ-Lee01"},"content":"     * Gives a string representation of the task in display format.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"CJ-Lee01"},"content":"     * @return A string representation of the task in display format.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"CJ-Lee01"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"CJ-Lee01"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"CJ-Lee01"},"content":"        return String.format(","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"CJ-Lee01"},"content":"                \"[T][%s] %s\",","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"CJ-Lee01"},"content":"                super.getStatusIcon(),","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"CJ-Lee01"},"content":"                super.description","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"CJ-Lee01"},"content":"        );","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"CJ-Lee01"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"CJ-Lee01":60}},{"path":"src/main/java/duke/UserInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJ-Lee01"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"CJ-Lee01"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"CJ-Lee01"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"CJ-Lee01"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"CJ-Lee01"},"content":" * User Interface for the Duke program.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"CJ-Lee01"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"CJ-Lee01"},"content":"public class UserInterface {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"CJ-Lee01"},"content":"    private static String TERMINATE_READER_STRING \u003d \"\";","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"CJ-Lee01"},"content":"    /** Scanner to scan line input. */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"CJ-Lee01"},"content":"    private Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"CJ-Lee01"},"content":"    /** Storage to store the save file. */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"CJ-Lee01"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"CJ-Lee01"},"content":"    /** List to keep track of tasks while program is running. */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"CJ-Lee01"},"content":"    private StoreList list;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"CJ-Lee01"},"content":"     * Creates a user interface from a Storage object and a StoreList object.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"CJ-Lee01"},"content":"     * @param storage The Storage object to be used by the user interface.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"CJ-Lee01"},"content":"     * @param list The StoreList object to be used by the user interface.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"CJ-Lee01"},"content":"    public UserInterface(Storage storage, StoreList list) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"CJ-Lee01"},"content":"        this.list \u003d list;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"CJ-Lee01"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"CJ-Lee01"},"content":"     * Checks if there is another command to be read from the user, and returns true if there is and false otherwise.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"CJ-Lee01"},"content":"     * @return True if there is another command to be read from the user, and false otherwise.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"CJ-Lee01"},"content":"    public boolean hasNextCommand() {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"CJ-Lee01"},"content":"        return sc.hasNext();","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"CJ-Lee01"},"content":"     * Starts the user interface by reading the tasks from the storage file and adding them to the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"CJ-Lee01"},"content":"     * @throws DukeException If there is an error reading the tasks from the storage file.","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"CJ-Lee01"},"content":"    public void start() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"CJ-Lee01"},"content":"        Task[] tasks \u003d Parser.parseFile(this.storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"CJ-Lee01"},"content":"        this.list.addTasks(List.of(tasks));","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"CJ-Lee01"},"content":"     * Reads commands from the user and processes them until the user enters the \"bye\" command.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"CJ-Lee01"},"content":"    public void readCommandLine() {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"CJ-Lee01"},"content":"        Reading:","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"CJ-Lee01"},"content":"        while (true) {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"CJ-Lee01"},"content":"            String line \u003d sc.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"CJ-Lee01"},"content":"            String response \u003d parseLine(line);","lastModifiedDate":"2023-09-14"},{"lineNumber":58,"author":{"gitId":"CJ-Lee01"},"content":"            if (response.equals(TERMINATE_READER_STRING)) {","lastModifiedDate":"2023-09-14"},{"lineNumber":59,"author":{"gitId":"CJ-Lee01"},"content":"                display(\"Bye\");","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"CJ-Lee01"},"content":"                break;","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"CJ-Lee01"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"CJ-Lee01"},"content":"            display(response);","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":64,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"CJ-Lee01"},"content":"        sc.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"CJ-Lee01"},"content":"     * Saves the current state of the list of tasks to the storage file.","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"CJ-Lee01"},"content":"    public void save() {","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"CJ-Lee01"},"content":"        String saveText \u003d list.showSaveText();","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"CJ-Lee01"},"content":"        storage.write(saveText);","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"CJ-Lee01"},"content":"     * Exits the user interface by saving the current state of the list of tasks to the storage file and closing any resources used by the user interface.","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"CJ-Lee01"},"content":"    public void exit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"CJ-Lee01"},"content":"        this.save();","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"CJ-Lee01"},"content":"        sc.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"CJ-Lee01"},"content":"     * Displays a string to a user in a formatted manner.","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"CJ-Lee01"},"content":"     * @param s The string to be displayed to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"CJ-Lee01"},"content":"    public static void display(String s) {","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"CJ-Lee01"},"content":"        System.out.println(displayWrapper(s));","lastModifiedDate":"2023-09-22"},{"lineNumber":91,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"CJ-Lee01"},"content":"    private static String displayWrapper(String line) {","lastModifiedDate":"2023-09-22"},{"lineNumber":94,"author":{"gitId":"CJ-Lee01"},"content":"        String frame \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"CJ-Lee01"},"content":"        return String.format(\"%s\\n%s\", line, frame);","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"CJ-Lee01"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"CJ-Lee01"},"content":"     * Gives the response of parsing the line.","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"CJ-Lee01"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"CJ-Lee01"},"content":"     * @param line The line to be parsed","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"CJ-Lee01"},"content":"     * @return The response.","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"CJ-Lee01"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"CJ-Lee01"},"content":"    public String parseLine(String line) {","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"CJ-Lee01"},"content":"        if (line.length() \u003d\u003d 0) {","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"CJ-Lee01"},"content":"            return \"Err: No command input\";","lastModifiedDate":"2023-09-14"},{"lineNumber":107,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"CJ-Lee01"},"content":"        String[] instructions \u003d line.split(\" \", 2);","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"CJ-Lee01"},"content":"        Commands cmd \u003d Commands.get(instructions[0]);","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"CJ-Lee01"},"content":"        String response;","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"CJ-Lee01"},"content":"        switch (cmd) {","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"CJ-Lee01"},"content":"        case bye:","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"CJ-Lee01"},"content":"            this.save();","lastModifiedDate":"2023-09-05"},{"lineNumber":114,"author":{"gitId":"CJ-Lee01"},"content":"            System.exit(0);","lastModifiedDate":"2023-09-21"},{"lineNumber":115,"author":{"gitId":"CJ-Lee01"},"content":"            return TERMINATE_READER_STRING;","lastModifiedDate":"2023-09-14"},{"lineNumber":116,"author":{"gitId":"CJ-Lee01"},"content":"        case list:","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"CJ-Lee01"},"content":"            response \u003d list.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"CJ-Lee01"},"content":"            break;","lastModifiedDate":"2023-09-14"},{"lineNumber":119,"author":{"gitId":"CJ-Lee01"},"content":"        case deadline:","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"CJ-Lee01"},"content":"            // Fallthrough","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"CJ-Lee01"},"content":"        case todo:","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"CJ-Lee01"},"content":"            // Fallthrough","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"CJ-Lee01"},"content":"        case event:","lastModifiedDate":"2023-09-05"},{"lineNumber":124,"author":{"gitId":"CJ-Lee01"},"content":"            response \u003d Parser.parseTaskAndAddToList(cmd, instructions, list);","lastModifiedDate":"2023-09-14"},{"lineNumber":125,"author":{"gitId":"CJ-Lee01"},"content":"            break;","lastModifiedDate":"2023-09-14"},{"lineNumber":126,"author":{"gitId":"CJ-Lee01"},"content":"        case mark:","lastModifiedDate":"2023-09-05"},{"lineNumber":127,"author":{"gitId":"CJ-Lee01"},"content":"            response \u003d list.markDone(instructions[1]);","lastModifiedDate":"2023-09-05"},{"lineNumber":128,"author":{"gitId":"CJ-Lee01"},"content":"            break;","lastModifiedDate":"2023-09-14"},{"lineNumber":129,"author":{"gitId":"CJ-Lee01"},"content":"        case unmark:","lastModifiedDate":"2023-09-05"},{"lineNumber":130,"author":{"gitId":"CJ-Lee01"},"content":"            response \u003d list.markUndone(instructions[1]);","lastModifiedDate":"2023-09-05"},{"lineNumber":131,"author":{"gitId":"CJ-Lee01"},"content":"            break;","lastModifiedDate":"2023-09-14"},{"lineNumber":132,"author":{"gitId":"CJ-Lee01"},"content":"        case delete:","lastModifiedDate":"2023-09-05"},{"lineNumber":133,"author":{"gitId":"CJ-Lee01"},"content":"            response \u003d list.delete(instructions[1]);","lastModifiedDate":"2023-09-05"},{"lineNumber":134,"author":{"gitId":"CJ-Lee01"},"content":"            break;","lastModifiedDate":"2023-09-14"},{"lineNumber":135,"author":{"gitId":"CJ-Lee01"},"content":"        case find:","lastModifiedDate":"2023-09-05"},{"lineNumber":136,"author":{"gitId":"CJ-Lee01"},"content":"            response \u003d Parser.findAll(instructions, list);","lastModifiedDate":"2023-09-05"},{"lineNumber":137,"author":{"gitId":"CJ-Lee01"},"content":"            break;","lastModifiedDate":"2023-09-14"},{"lineNumber":138,"author":{"gitId":"CJ-Lee01"},"content":"        case update:","lastModifiedDate":"2023-09-14"},{"lineNumber":139,"author":{"gitId":"CJ-Lee01"},"content":"            response \u003d Parser.parseUpdate(instructions, list);","lastModifiedDate":"2023-09-14"},{"lineNumber":140,"author":{"gitId":"CJ-Lee01"},"content":"            break;","lastModifiedDate":"2023-09-14"},{"lineNumber":141,"author":{"gitId":"CJ-Lee01"},"content":"        default:","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"CJ-Lee01"},"content":"            response \u003d \"Err: Unknown command - \" + instructions[0];","lastModifiedDate":"2023-09-05"},{"lineNumber":143,"author":{"gitId":"CJ-Lee01"},"content":"            break;","lastModifiedDate":"2023-09-14"},{"lineNumber":144,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":145,"author":{"gitId":"CJ-Lee01"},"content":"        return response;","lastModifiedDate":"2023-09-14"},{"lineNumber":146,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":147,"author":{"gitId":"CJ-Lee01"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"CJ-Lee01":147}},{"path":"src/main/java/main/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJ-Lee01"},"content":"package main;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"CJ-Lee01"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"CJ-Lee01"},"content":"import design.MainWindow;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"CJ-Lee01"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"CJ-Lee01"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"CJ-Lee01"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"CJ-Lee01"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"CJ-Lee01"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"CJ-Lee01"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"CJ-Lee01"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"CJ-Lee01"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"CJ-Lee01"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"CJ-Lee01"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"CJ-Lee01"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"CJ-Lee01"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"CJ-Lee01"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"CJ-Lee01"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"CJ-Lee01"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"CJ-Lee01"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"CJ-Lee01"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"CJ-Lee01"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"CJ-Lee01"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"CJ-Lee01"},"content":"            stage.getIcons().add(new Image(\"images/logo.jpeg\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"CJ-Lee01"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"CJ-Lee01"},"content":"            stage.show();","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"CJ-Lee01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"CJ-Lee01"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"CJ-Lee01"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"CJ-Lee01"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"CJ-Lee01":35}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"CJ-Lee01"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"CJ-Lee01"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"CJ-Lee01"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"CJ-Lee01"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"CJ-Lee01"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"CJ-Lee01"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-text-fill: white; -fx-background-color: navy;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"CJ-Lee01"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"CJ-Lee01"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"CJ-Lee01"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"CJ-Lee01"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"CJ-Lee01"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"CJ-Lee01"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"CJ-Lee01"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"CJ-Lee01"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"CJ-Lee01":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"CJ-Lee01"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"CJ-Lee01"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"CJ-Lee01"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"CJ-Lee01"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"CJ-Lee01"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"CJ-Lee01"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"CJ-Lee01"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: navy;\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"design.MainWindow\"\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"CJ-Lee01"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"CJ-Lee01"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: black;\" styleClass\u003d\"round\" text\u003d\"Send\" textFill\u003d\"WHITE\" /\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"CJ-Lee01"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutY\u003d\"41.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: navy; -fx-text-fill: white;\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"CJ-Lee01"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"CJ-Lee01"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" cacheShape\u003d\"false\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: navy; -fx-text-fill: white;\" /\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"CJ-Lee01"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"CJ-Lee01"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"CJ-Lee01"},"content":"        \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" style\u003d\"-fx-background-color: navy; -fx-text-fill: white;\" AnchorPane.bottomAnchor\u003d\"558.4\" /\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"CJ-Lee01"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"CJ-Lee01"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"CJ-Lee01":19}},{"path":"src/test/java/duke/CommandsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJ-Lee01"},"content":"package duke;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"CJ-Lee01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"CJ-Lee01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"CJ-Lee01"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"CJ-Lee01"},"content":"public class CommandsTest {","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"CJ-Lee01"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"CJ-Lee01"},"content":"    public void get_listCmd_returnslist() {","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"CJ-Lee01"},"content":"        Commands cmd \u003d Commands.get(\"list\");","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"CJ-Lee01"},"content":"        assertEquals(cmd, Commands.list);","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"CJ-Lee01"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"CJ-Lee01"},"content":"    public void get_markCmd_returnsMark() {","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"CJ-Lee01"},"content":"        Commands cmd \u003d Commands.get(\"mark\");","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"CJ-Lee01"},"content":"        assertEquals(cmd, Commands.mark);","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"CJ-Lee01"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"CJ-Lee01"},"content":"    public void get_unmarkCmd_returnsUnmark() {","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"CJ-Lee01"},"content":"        Commands cmd \u003d Commands.get(\"unmark\");","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"CJ-Lee01"},"content":"        assertEquals(cmd, Commands.unmark);","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"CJ-Lee01"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"CJ-Lee01"},"content":"    public void get_byeCmd_returnsBye() {","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"CJ-Lee01"},"content":"        Commands cmd \u003d Commands.get(\"bye\");","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"CJ-Lee01"},"content":"        assertEquals(cmd, Commands.bye);","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"CJ-Lee01"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"CJ-Lee01"},"content":"    public void get_deleteCmd_returnsDelete() {","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"CJ-Lee01"},"content":"        Commands cmd \u003d Commands.get(\"delete\");","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"CJ-Lee01"},"content":"        assertEquals(cmd, Commands.delete);","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"CJ-Lee01"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"CJ-Lee01"},"content":"    public void get_unknownCmd_returnsUnknown() {","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"CJ-Lee01"},"content":"        Commands cmd \u003d Commands.get(\"\");","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"CJ-Lee01"},"content":"        assertEquals(cmd, Commands.unknown);","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"CJ-Lee01"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"CJ-Lee01":45}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJ-Lee01"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"CJ-Lee01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"CJ-Lee01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"CJ-Lee01"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"CJ-Lee01"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"CJ-Lee01"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"CJ-Lee01"},"content":"    public void create_withouthDateTime_throwsException() {","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"CJ-Lee01"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"CJ-Lee01"},"content":"            Deadline deadline \u003d Deadline.create(\"test\");","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"CJ-Lee01"},"content":"        });","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"CJ-Lee01"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"CJ-Lee01"},"content":"    public void create_emptyDeadline_throwsException() {","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"CJ-Lee01"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"CJ-Lee01"},"content":"            Deadline deadline \u003d Deadline.create(\"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"CJ-Lee01"},"content":"        });","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"CJ-Lee01"},"content":"}","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"CJ-Lee01":24}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJ-Lee01"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"CJ-Lee01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"CJ-Lee01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"CJ-Lee01"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"CJ-Lee01"},"content":"public class EventTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"CJ-Lee01"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"CJ-Lee01"},"content":"    public void create_withouthDateTime_throwsException() {","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"CJ-Lee01"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"CJ-Lee01"},"content":"            Event event \u003d Event.create(\"event\");","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"CJ-Lee01"},"content":"        });","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"CJ-Lee01"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"CJ-Lee01"},"content":"    public void create_emptyEvent_throwsException() {","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"CJ-Lee01"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"CJ-Lee01"},"content":"            Event event \u003d Event.create(\"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"CJ-Lee01"},"content":"        });","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"CJ-Lee01"},"content":"}","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"CJ-Lee01":24}},{"path":"src/test/java/duke/TaskAttributeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJ-Lee01"},"content":"package duke;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"CJ-Lee01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"CJ-Lee01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"CJ-Lee01"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"CJ-Lee01"},"content":"public class TaskAttributeTest {","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"CJ-Lee01"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"CJ-Lee01"},"content":"    public void get_descAttribute_returnsDesc() {","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"CJ-Lee01"},"content":"        TaskAttribute attribute \u003d TaskAttribute.get(\"description\");","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"CJ-Lee01"},"content":"        assertEquals(attribute, TaskAttribute.description);","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"CJ-Lee01"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"CJ-Lee01"},"content":"    public void get_unknownAttribute_returnsUnknown() {","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"CJ-Lee01"},"content":"        TaskAttribute attribute \u003d TaskAttribute.get(\"\");","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"CJ-Lee01"},"content":"        assertEquals(attribute, TaskAttribute.unknown);","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"CJ-Lee01"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"CJ-Lee01":20}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CJ-Lee01"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"CJ-Lee01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"CJ-Lee01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"CJ-Lee01"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"CJ-Lee01"},"content":"public class TodoTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"CJ-Lee01"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"CJ-Lee01"},"content":"    public void create_emptyTodo_throwsException() {","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"CJ-Lee01"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"CJ-Lee01"},"content":"            ToDo todo \u003d ToDo.create(\"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"CJ-Lee01"},"content":"        });","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"CJ-Lee01"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"CJ-Lee01"},"content":"}","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"CJ-Lee01"},"content":"","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"CJ-Lee01":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"CJ-Lee01"},"content":"todo borrow book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"CJ-Lee01"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"CJ-Lee01"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"CJ-Lee01"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"CJ-Lee01"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"CJ-Lee01"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"CJ-Lee01"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"CJ-Lee01"},"content":"unmark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"CJ-Lee01"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"CJ-Lee01"},"content":"delete 1","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"CJ-Lee01"},"content":"deadline","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"CJ-Lee01"},"content":"test","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"CJ-Lee01"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"CJ-Lee01":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"CJ-Lee01"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"CJ-Lee01":1,"-":20}}]
