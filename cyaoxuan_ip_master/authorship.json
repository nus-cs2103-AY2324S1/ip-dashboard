[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"cyaoxuan"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"cyaoxuan"},"content":"    archiveFileName \u003d \"duke.jar\"","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"cyaoxuan"},"content":"//    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"cyaoxuan"},"content":"//    archiveClassifier \u003d null","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"cyaoxuan"},"content":"//    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":38,"cyaoxuan":5}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cyaoxuan"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"cyaoxuan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"cyaoxuan"},"content":"    private String by;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"cyaoxuan"},"content":"    public Deadline(String name, String by) {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"cyaoxuan"},"content":"        super(name);","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"cyaoxuan"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"cyaoxuan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.by);","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"    public String toTaskListEntry() {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"cyaoxuan"},"content":"        return String.format(\"D | %d | %s | %s\", this.getIsDone() ? 1 : 0, this.getName(), this.by);","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"cyaoxuan":20}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cyaoxuan"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"cyaoxuan"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"cyaoxuan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"cyaoxuan"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cyaoxuan"},"content":" * Chatbot that manages a task list, which is saved into the hard disk.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cyaoxuan"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"cyaoxuan"},"content":"    private static TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"    private static File taskListFile \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"        // Greeting","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"        Ui.greet();","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"        // Initialise file","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"cyaoxuan"},"content":"        boolean isSuccessful \u003d Storage.initialiseTaskListFile(taskList) \u003d\u003d 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"        if (!isSuccessful) {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"            // No file found / created","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"cyaoxuan"},"content":"            return;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"cyaoxuan"},"content":"        // Get input and store it","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"cyaoxuan"},"content":"        Scanner in \u003d Ui.initialiseUi();","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"cyaoxuan"},"content":"        while (true) {","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"cyaoxuan"},"content":"            String input \u003d Ui.getInput(in);","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"cyaoxuan"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"cyaoxuan"},"content":"                boolean isParsed \u003d Parser.parseInput(input, taskList) \u003d\u003d 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"cyaoxuan"},"content":"                if (!isParsed) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"cyaoxuan"},"content":"                    break;","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"cyaoxuan"},"content":"                Storage.updateTaskListFile(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"cyaoxuan"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"cyaoxuan"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"cyaoxuan"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":4,"cyaoxuan":38}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cyaoxuan"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"cyaoxuan"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cyaoxuan"},"content":" * Custom exception class that handles malformed inputs unique to the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cyaoxuan"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cyaoxuan"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"cyaoxuan"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"cyaoxuan"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"cyaoxuan"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"        return \"⚠ Eek! \" + super.getMessage();","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"cyaoxuan":15}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cyaoxuan"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"cyaoxuan"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"cyaoxuan"},"content":"    private String from;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"cyaoxuan"},"content":"    private String to;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"cyaoxuan"},"content":"    public Event(String name, String from, String to) {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"cyaoxuan"},"content":"        super(name);","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"cyaoxuan"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"cyaoxuan"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), this.from, this.to);","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"    public String toTaskListEntry() {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"        return String.format(\"E | %d | %s | %s | %s\", this.getIsDone() ? 1 : 0, this.getName(), this.from, this.to);","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"cyaoxuan"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"cyaoxuan":22}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cyaoxuan"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"cyaoxuan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"cyaoxuan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"cyaoxuan"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cyaoxuan"},"content":" * Encapsulates all methods that processes the user\u0027s input to perform actions accordingly.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cyaoxuan"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"cyaoxuan"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"     * Parses the input gotten from the main menu.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"cyaoxuan"},"content":"     * @param input user input","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"     * @param taskList task list managed by the chatbot","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"     * @return process code, where 0 means the program should end and 1 otherwise","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"     * @throws DukeException if there are malformed inputs","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"    public static int parseInput(String input, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"cyaoxuan"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"            System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"            return 0;","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"cyaoxuan"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"cyaoxuan"},"content":"            taskList.printTasks();","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"cyaoxuan"},"content":"        } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"cyaoxuan"},"content":"            parseMark(input, taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"cyaoxuan"},"content":"        } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"cyaoxuan"},"content":"            parseUnmark(input, taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"cyaoxuan"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"cyaoxuan"},"content":"            parseToDo(input, taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"cyaoxuan"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"cyaoxuan"},"content":"            parseDeadline(input, taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"cyaoxuan"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"cyaoxuan"},"content":"            parseEvent(input, taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"cyaoxuan"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"            parseDelete(input, taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"cyaoxuan"},"content":"        } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"cyaoxuan"},"content":"            parseFind(input, taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"cyaoxuan"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"cyaoxuan"},"content":"            throw new DukeException(\"I do not understand :(((\");","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"cyaoxuan"},"content":"        return 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"cyaoxuan"},"content":"    private static void parseToDo(String s, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"cyaoxuan"},"content":"        String name \u003d s.substring(4).trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"cyaoxuan"},"content":"        if (name.length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"cyaoxuan"},"content":"            throw new DukeException(\"Description of todo cannot be empty!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"cyaoxuan"},"content":"        taskList.addTask(new ToDo(name), true);","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"cyaoxuan"},"content":"    private static void parseDeadline(String s, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"cyaoxuan"},"content":"        // Extract name and by","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"cyaoxuan"},"content":"        int byIndex \u003d s.indexOf(\"/by\");","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"cyaoxuan"},"content":"        if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"cyaoxuan"},"content":"            // \"/by\" not found","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"cyaoxuan"},"content":"            throw new DukeException(\"Please include when the deadline is! (`deadline name /by date`)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"cyaoxuan"},"content":"        String name \u003d s.substring(8, byIndex).trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"cyaoxuan"},"content":"        String by \u003d s.substring(byIndex + 3).trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"cyaoxuan"},"content":"        if (name.equals(\"\") || by.equals(\"\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"cyaoxuan"},"content":"            // No name or deadline","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"cyaoxuan"},"content":"            throw new DukeException(\"Please include name and deadline!\"","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"cyaoxuan"},"content":"                    + \"(`deadline name /by date (in yyyy-mm-dd)`)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"cyaoxuan"},"content":"        taskList.addTask(new Deadline(name, parseDate(by)), true);","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"cyaoxuan"},"content":"    private static void parseEvent(String s, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"cyaoxuan"},"content":"        // Extract name, from and to","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"cyaoxuan"},"content":"        int fromIndex \u003d s.indexOf(\"/from\");","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"cyaoxuan"},"content":"        int toIndex \u003d s.indexOf(\"/to\");","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"cyaoxuan"},"content":"        if (fromIndex \u003d\u003d -1 || toIndex \u003d\u003d -1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"cyaoxuan"},"content":"            // \"/from\" or \"/to\" not found","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"cyaoxuan"},"content":"            throw new DukeException(\"Please include when the event is from and to!\"","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"cyaoxuan"},"content":"                    + \" (`event name /from date /to date`)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"cyaoxuan"},"content":"        String name \u003d s.substring(5, fromIndex).trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"cyaoxuan"},"content":"        String from \u003d s.substring(fromIndex + 5, toIndex).trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"cyaoxuan"},"content":"        String to \u003d s.substring(toIndex + 3).trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"cyaoxuan"},"content":"        if (name.equals(\"\") || from.equals(\"\") || to.equals(\"\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"cyaoxuan"},"content":"            // No name, from or to","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"cyaoxuan"},"content":"            throw new DukeException(\"Please include the name of the event\"","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"cyaoxuan"},"content":"                    + \" and when the event is from and to! (`event name /from date /to date`)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"cyaoxuan"},"content":"        taskList.addTask(new Event(name, from, to), true);","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"cyaoxuan"},"content":"    private static void parseMark(String s, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"cyaoxuan"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"cyaoxuan"},"content":"            int index \u003d Integer.parseInt(s.substring(4).trim()) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"cyaoxuan"},"content":"            taskList.markTask(index, true);","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"cyaoxuan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"cyaoxuan"},"content":"            throw new DukeException(\"Please enter a valid number!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"cyaoxuan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"cyaoxuan"},"content":"            throw new DukeException(\"Please enter a number within the list index!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"cyaoxuan"},"content":"    private static void parseUnmark(String s, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"cyaoxuan"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"cyaoxuan"},"content":"            int index \u003d Integer.parseInt(s.substring(6).trim()) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"cyaoxuan"},"content":"            taskList.markTask(index, false);","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"cyaoxuan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"cyaoxuan"},"content":"            throw new DukeException(\"Please enter a valid number!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"cyaoxuan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"cyaoxuan"},"content":"            throw new DukeException(\"Please enter a number within the list index!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"cyaoxuan"},"content":"    private static void parseDelete(String s, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"cyaoxuan"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"cyaoxuan"},"content":"            int index \u003d Integer.parseInt(s.substring(6).trim()) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"cyaoxuan"},"content":"            taskList.deleteTask(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"cyaoxuan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"cyaoxuan"},"content":"            throw new DukeException(\"Please enter a valid number!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"cyaoxuan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"cyaoxuan"},"content":"            throw new DukeException(\"Please enter a number within the list index!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"cyaoxuan"},"content":"     * Parse user command to find tasks containing given string.","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"cyaoxuan"},"content":"     * @param s user input","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"cyaoxuan"},"content":"     * @param taskList task list to find tasks from","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"cyaoxuan"},"content":"     * @throws DukeException if input is missing the string to be found","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"cyaoxuan"},"content":"    private static void parseFind(String s, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"cyaoxuan"},"content":"        String toFind \u003d s.substring(4).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"cyaoxuan"},"content":"        if (toFind.length() \u003d\u003d 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"cyaoxuan"},"content":"            throw new DukeException(\"Please enter a string to find!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"cyaoxuan"},"content":"        taskList.findTasks(toFind);","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"cyaoxuan"},"content":"     * Parses text from the pre-existing task list file to the corresponding Task object.","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"cyaoxuan"},"content":"     * @param entry line from the task list file","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"cyaoxuan"},"content":"     * @return corresponding Task object to the entry","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"cyaoxuan"},"content":"    public static Task parseTaskListEntry(String entry) {","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"cyaoxuan"},"content":"        Task task;","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"cyaoxuan"},"content":"        String[] splitEntry \u003d entry.split(\"\\\\|\"); // Split by \"|\"","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"cyaoxuan"},"content":"        String type \u003d splitEntry[0].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"cyaoxuan"},"content":"        // Create task according to type","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"cyaoxuan"},"content":"        if (type.equals(\"T\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"cyaoxuan"},"content":"            task \u003d new ToDo(splitEntry[2].trim());","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"cyaoxuan"},"content":"        } else if (type.equals(\"D\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"cyaoxuan"},"content":"            task \u003d new Deadline(splitEntry[2].trim(), splitEntry[3].trim());","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"cyaoxuan"},"content":"        } else if (type.equals(\"E\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"cyaoxuan"},"content":"            task \u003d new Event(splitEntry[2].trim(), splitEntry[3].trim(), splitEntry[4].trim());","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"cyaoxuan"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"cyaoxuan"},"content":"            return null;","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"cyaoxuan"},"content":"        // Check if task is done","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"cyaoxuan"},"content":"        task.setIsDone(splitEntry[1].trim().equals(\"1\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"cyaoxuan"},"content":"        return task;","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"cyaoxuan"},"content":"    private static String parseDate(String date) {","lastModifiedDate":"2023-09-01"},{"lineNumber":173,"author":{"gitId":"cyaoxuan"},"content":"        LocalDate date1 \u003d LocalDate.parse(date);","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"cyaoxuan"},"content":"        return date1.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"cyaoxuan"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"cyaoxuan":176}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cyaoxuan"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"cyaoxuan"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"cyaoxuan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"cyaoxuan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"cyaoxuan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"cyaoxuan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"cyaoxuan"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"cyaoxuan"},"content":" * Encapsulates read and write methods that deal with the task list file.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"cyaoxuan"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"    public static final String FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":"     * Loads the existing task list file and creates one if it does not exist.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"     * @param taskList task list managed by the chatbot to populate","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"cyaoxuan"},"content":"     * @return process code, where 0 means no file was read / created and 1 otherwise","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"    public static int initialiseTaskListFile(TaskList taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"cyaoxuan"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"cyaoxuan"},"content":"            // Load existing file","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"cyaoxuan"},"content":"            System.out.println(\"Trying to load existing task list in \" + FILE_PATH);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"cyaoxuan"},"content":"            File f \u003d new File(FILE_PATH);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"cyaoxuan"},"content":"            // Load file contents into task list","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"cyaoxuan"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"cyaoxuan"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"cyaoxuan"},"content":"                Task task \u003d Parser.parseTaskListEntry(s.nextLine());","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"cyaoxuan"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"cyaoxuan"},"content":"                    taskList.addTask(task, false);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"cyaoxuan"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"cyaoxuan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"cyaoxuan"},"content":"            taskList.printTasks();","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"cyaoxuan"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"cyaoxuan"},"content":"            // No file, create new one","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"cyaoxuan"},"content":"            System.out.println(\"No existing task list found, creating a new file ./data/duke.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"cyaoxuan"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"cyaoxuan"},"content":"                // Make directory","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"cyaoxuan"},"content":"                File dataDir \u003d new File(\"./data\");","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"cyaoxuan"},"content":"                if (!dataDir.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"cyaoxuan"},"content":"                    dataDir.mkdir();","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"cyaoxuan"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"cyaoxuan"},"content":"                // Make file","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"cyaoxuan"},"content":"                File f \u003d new File(FILE_PATH);","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"cyaoxuan"},"content":"                f.createNewFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"cyaoxuan"},"content":"                System.out.println(\"File created.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"cyaoxuan"},"content":"            } catch (IOException e1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"cyaoxuan"},"content":"                System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"cyaoxuan"},"content":"                return 0;","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"cyaoxuan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"cyaoxuan"},"content":"        return 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"cyaoxuan"},"content":"     * Updates task list file based on user\u0027s action","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"cyaoxuan"},"content":"     * @param taskList most updated task list used to edit the task list file","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"cyaoxuan"},"content":"    public static void updateTaskListFile(TaskList taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"cyaoxuan"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"cyaoxuan"},"content":"            FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"cyaoxuan"},"content":"            StringBuilder tasksString \u003d new StringBuilder();","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"cyaoxuan"},"content":"            for (int i \u003d 0; i \u003c taskList.getCount(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"cyaoxuan"},"content":"                String task \u003d taskList.getTask(i).toTaskListEntry();","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"cyaoxuan"},"content":"                tasksString.append(task + \"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"cyaoxuan"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"cyaoxuan"},"content":"            fw.write(tasksString.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"cyaoxuan"},"content":"            fw.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"cyaoxuan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"cyaoxuan"},"content":"            System.out.println(\"Something went wrong while updating file: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"cyaoxuan"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"cyaoxuan":79}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cyaoxuan"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"cyaoxuan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"cyaoxuan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"cyaoxuan"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cyaoxuan"},"content":" * Encapsulates different types of tasks that have a name and whether it is done.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cyaoxuan"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"cyaoxuan"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"cyaoxuan"},"content":"    private String name;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"cyaoxuan"},"content":"    public String getName() {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"        return this.name;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"cyaoxuan"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"cyaoxuan"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"cyaoxuan"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"cyaoxuan"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"cyaoxuan"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"cyaoxuan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"cyaoxuan"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"cyaoxuan"},"content":"        System.out.println(this);","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"cyaoxuan"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"cyaoxuan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"cyaoxuan"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"cyaoxuan"},"content":"        System.out.println(this);","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"cyaoxuan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"cyaoxuan"},"content":"        return String.format(\"[%s] %s\", this.isDone ? \"X\" : \" \", this.name);","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"cyaoxuan"},"content":"     * Generates task list entry in specified format.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"cyaoxuan"},"content":"     * @return task list entry as a string","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"cyaoxuan"},"content":"    public abstract String toTaskListEntry();","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"cyaoxuan"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"cyaoxuan":52}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cyaoxuan"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"cyaoxuan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"cyaoxuan"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cyaoxuan"},"content":" * Encapsulates a list of tasks to manage the current tasks on hand.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cyaoxuan"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cyaoxuan"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"cyaoxuan"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"cyaoxuan"},"content":"    private int count \u003d 0;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"cyaoxuan"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":"    public int getCount() {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"        return count;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"cyaoxuan"},"content":"     * Adds a given task to the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"cyaoxuan"},"content":"     * @param t task to be added","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"cyaoxuan"},"content":"     * @param shouldPrint whether text should be printed, disabled when it is loaded from a file","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"cyaoxuan"},"content":"    public void addTask(Task t, boolean shouldPrint) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"cyaoxuan"},"content":"        tasks.add(t);","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"cyaoxuan"},"content":"        count++;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"cyaoxuan"},"content":"        if (shouldPrint) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"cyaoxuan"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"cyaoxuan"},"content":"            System.out.println(t);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"cyaoxuan"},"content":"            System.out.println(\"Now you have \" + count + \" task(s) in the list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"cyaoxuan"},"content":"     * Deletes a task of given index from the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"cyaoxuan"},"content":"     * @param index index of task to be deleted","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"cyaoxuan"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"cyaoxuan"},"content":"        Task t \u003d getTask(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"cyaoxuan"},"content":"        tasks.remove(t);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"cyaoxuan"},"content":"        count--;","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"cyaoxuan"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"cyaoxuan"},"content":"        System.out.println(t);","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"cyaoxuan"},"content":"        System.out.println(\"Now you have \" + count + \" task(s) in the list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"cyaoxuan"},"content":"     * Marks task of given index as done or undone.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"cyaoxuan"},"content":"     * @param index index of task to be marked as done or undone","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"cyaoxuan"},"content":"     * @param isDone indicates if task is done","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"cyaoxuan"},"content":"    public void markTask(int index, boolean isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"cyaoxuan"},"content":"        Task t \u003d getTask(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"cyaoxuan"},"content":"        if (isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"cyaoxuan"},"content":"            t.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"cyaoxuan"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"cyaoxuan"},"content":"            t.markAsUndone();","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"cyaoxuan"},"content":"     * Finds tasks in lists that contain the given string.","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"cyaoxuan"},"content":"     * @param toFind string to be searched for","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"cyaoxuan"},"content":"    public void findTasks(String toFind) {","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"cyaoxuan"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"cyaoxuan"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"cyaoxuan"},"content":"        for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"cyaoxuan"},"content":"            if (tasks.get(i).getName().contains(toFind)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"cyaoxuan"},"content":"                System.out.println(index + \".\" + tasks.get(i));","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"cyaoxuan"},"content":"                index++;","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"cyaoxuan"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"cyaoxuan"},"content":"        if (index \u003d\u003d 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"cyaoxuan"},"content":"            // None found","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"cyaoxuan"},"content":"            System.out.println(\"No matching tasks found.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"cyaoxuan"},"content":"     * Outputs all tasks in the list","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"cyaoxuan"},"content":"    public void printTasks() {","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"cyaoxuan"},"content":"        System.out.println(\"List of items:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"cyaoxuan"},"content":"        for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"cyaoxuan"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"cyaoxuan"},"content":"            System.out.println(index + \".\" + tasks.get(i));","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"cyaoxuan"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"cyaoxuan":94}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cyaoxuan"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"cyaoxuan"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"cyaoxuan"},"content":"    public ToDo(String name) {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"cyaoxuan"},"content":"        super(name);","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"cyaoxuan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"cyaoxuan"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"    public String toTaskListEntry() {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"        return String.format(\"T | %d | %s\", this.getIsDone() ? 1 : 0, this.getName());","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"cyaoxuan":17}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cyaoxuan"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"cyaoxuan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"cyaoxuan"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cyaoxuan"},"content":" * Encapsulates the UI the user uses to interact with the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cyaoxuan"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cyaoxuan"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"cyaoxuan"},"content":"    public static void greet() {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"cyaoxuan"},"content":"        System.out.println(\"Hello! I\u0027m Eepy 😸\");","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"     * Displays list of options that the chatbot can perform.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":"    public static void displayOptions() {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"        System.out.println(\"Options:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"cyaoxuan"},"content":"        System.out.println(\"Add todo - todo name\");","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"        System.out.println(\"Add deadline - deadline name /by date (in yyyy-mm-dd format)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"        System.out.println(\"Add event - event name /from date /to date\");","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"cyaoxuan"},"content":"        System.out.println(\"Mark task as done - mark index\");","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"cyaoxuan"},"content":"        System.out.println(\"Mark task as not done - unmark index\");","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"cyaoxuan"},"content":"        System.out.println(\"Delete task - delete index\");","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"cyaoxuan"},"content":"        System.out.println(\"List tasks - list\");","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"cyaoxuan"},"content":"        System.out.println(\"Exit program - bye\");","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"cyaoxuan"},"content":"     * Initialises the UI, displaying options to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"cyaoxuan"},"content":"     * @return scanner to get input from user","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"cyaoxuan"},"content":"    public static Scanner initialiseUi() {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"cyaoxuan"},"content":"        System.out.println(\"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"cyaoxuan"},"content":"        displayOptions();","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"cyaoxuan"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"cyaoxuan"},"content":"        return in;","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"cyaoxuan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"cyaoxuan"},"content":"     * Takes in user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"cyaoxuan"},"content":"     * @param in scanner to be used to get input","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"cyaoxuan"},"content":"     * @return user input as a string","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"cyaoxuan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"cyaoxuan"},"content":"    public static String getInput(Scanner in) {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"cyaoxuan"},"content":"        System.out.println(\"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"cyaoxuan"},"content":"        String input \u003d in.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"cyaoxuan"},"content":"        System.out.println(\"You entered: \" + input);","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"cyaoxuan"},"content":"        return input;","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"cyaoxuan"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"cyaoxuan":51}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cyaoxuan"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cyaoxuan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cyaoxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cyaoxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cyaoxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cyaoxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"cyaoxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"cyaoxuan"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"cyaoxuan"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"    public void parseInput_wrongCommand_exceptionThrown() {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"        DukeException thrown \u003d assertThrows(DukeException.class,","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":"                () -\u003e Parser.parseInput(\"lists\", new TaskList()));","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"cyaoxuan"},"content":"        assertEquals(\"⚠ Eek! I do not understand :(((\", thrown.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"cyaoxuan"},"content":"    public void parseInput_markInvalidNumber_exceptionThrown() {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"cyaoxuan"},"content":"        DukeException thrown \u003d assertThrows(DukeException.class,","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"cyaoxuan"},"content":"                () -\u003e Parser.parseInput(\"mark a\", new TaskList()));","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"cyaoxuan"},"content":"        assertEquals(\"⚠ Eek! Please enter a valid number!\", thrown.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"cyaoxuan"},"content":"    public void parseInput_markOutOfBounds_exceptionThrown() {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"cyaoxuan"},"content":"        DukeException thrown \u003d assertThrows(DukeException.class,","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"cyaoxuan"},"content":"                () -\u003e Parser.parseInput(\"mark 1\", new TaskList()));","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"        assertEquals(\"⚠ Eek! Please enter a number within the list index!\", thrown.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"cyaoxuan"},"content":"    public void parseInput_markNormalInput_successful() {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"cyaoxuan"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"cyaoxuan"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"cyaoxuan"},"content":"            taskList.addTask(new ToDo(\"test\"), false);","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"cyaoxuan"},"content":"            int result \u003d Parser.parseInput(\"mark 1\", taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"cyaoxuan"},"content":"            assertEquals(1, result);","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"cyaoxuan"},"content":"            assertTrue(taskList.getTask(0).getIsDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"cyaoxuan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"cyaoxuan"},"content":"            fail(\"Should not throw exception\");","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"cyaoxuan"},"content":"    public void parseInput_unmarkInvalidNumber_exceptionThrown() {","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"cyaoxuan"},"content":"        DukeException thrown \u003d assertThrows(DukeException.class,","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"cyaoxuan"},"content":"                () -\u003e Parser.parseInput(\"unmark a\", new TaskList()));","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"cyaoxuan"},"content":"        assertEquals(\"⚠ Eek! Please enter a valid number!\", thrown.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"cyaoxuan"},"content":"    public void parseInput_unmarkOutOfBounds_exceptionThrown() {","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"cyaoxuan"},"content":"        DukeException thrown \u003d assertThrows(DukeException.class,","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"cyaoxuan"},"content":"                () -\u003e Parser.parseInput(\"unmark 1\", new TaskList()));","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"cyaoxuan"},"content":"        assertEquals(\"⚠ Eek! Please enter a number within the list index!\", thrown.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"cyaoxuan"},"content":"    public void parseInput_unmarkNormalInput_successful() {","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"cyaoxuan"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"cyaoxuan"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"cyaoxuan"},"content":"            taskList.addTask(new ToDo(\"test\"), false);","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"cyaoxuan"},"content":"            taskList.markTask(0, true);","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"cyaoxuan"},"content":"            int result \u003d Parser.parseInput(\"unmark 1\", taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"cyaoxuan"},"content":"            assertEquals(1, result);","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"cyaoxuan"},"content":"            assertFalse(taskList.getTask(0).getIsDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"cyaoxuan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"cyaoxuan"},"content":"            fail(\"Should not throw exception\");","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"cyaoxuan"},"content":"    public void parseInput_deleteInvalidNumber_exceptionThrown() {","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"cyaoxuan"},"content":"        DukeException thrown \u003d assertThrows(DukeException.class,","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"cyaoxuan"},"content":"                () -\u003e Parser.parseInput(\"delete a\", new TaskList()));","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"cyaoxuan"},"content":"        assertEquals(\"⚠ Eek! Please enter a valid number!\", thrown.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"cyaoxuan"},"content":"    public void parseInput_deleteOutOfBounds_exceptionThrown() {","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"cyaoxuan"},"content":"        DukeException thrown \u003d assertThrows(DukeException.class,","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"cyaoxuan"},"content":"                () -\u003e Parser.parseInput(\"delete 1\", new TaskList()));","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"cyaoxuan"},"content":"        assertEquals(\"⚠ Eek! Please enter a number within the list index!\", thrown.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"cyaoxuan"},"content":"    public void parseInput_deleteNormalInput_successful() {","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"cyaoxuan"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"cyaoxuan"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"cyaoxuan"},"content":"            taskList.addTask(new ToDo(\"test\"), false);","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"cyaoxuan"},"content":"            int result \u003d Parser.parseInput(\"delete 1\", taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"cyaoxuan"},"content":"            assertEquals(1, result);","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"cyaoxuan"},"content":"            assertEquals(0, taskList.getCount());","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"cyaoxuan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"cyaoxuan"},"content":"            fail(\"Should not throw exception\");","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"cyaoxuan"},"content":"    public void parseInput_todoNoName_exceptionThrown() {","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"cyaoxuan"},"content":"        DukeException thrown \u003d assertThrows(DukeException.class,","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"cyaoxuan"},"content":"                () -\u003e Parser.parseInput(\"todo \", new TaskList()));","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"cyaoxuan"},"content":"        assertEquals(\"⚠ Eek! Description of todo cannot be empty!\", thrown.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"cyaoxuan"},"content":"    public void parseInput_todoNormalInput_successful() {","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"cyaoxuan"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"cyaoxuan"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"cyaoxuan"},"content":"            int result \u003d Parser.parseInput(\"todo read book\", taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"cyaoxuan"},"content":"            assertEquals(1, result);","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"cyaoxuan"},"content":"            assertEquals(1, taskList.getCount());","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"cyaoxuan"},"content":"            assertInstanceOf(ToDo.class, taskList.getTask(0));","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"cyaoxuan"},"content":"            assertEquals(\"read book\", taskList.getTask(0).getName());","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"cyaoxuan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"cyaoxuan"},"content":"            fail(\"Should not throw exception\");","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"cyaoxuan"},"content":"    public void parseInput_deadlineNoBy_exceptionThrown() {","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"cyaoxuan"},"content":"        DukeException thrown \u003d assertThrows(DukeException.class,","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"cyaoxuan"},"content":"                () -\u003e Parser.parseInput(\"deadline d1 \", new TaskList()));","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"cyaoxuan"},"content":"        assertEquals(\"⚠ Eek! Please include when the deadline is! (`deadline name /by date`)\",","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"cyaoxuan"},"content":"                thrown.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"cyaoxuan"},"content":"    public void parseInput_deadlineNoName_exceptionThrown() {","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"cyaoxuan"},"content":"        DukeException thrown \u003d assertThrows(DukeException.class,","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"cyaoxuan"},"content":"                () -\u003e Parser.parseInput(\"deadline /by \", new TaskList()));","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"cyaoxuan"},"content":"        assertEquals(\"⚠ Eek! Please include name and deadline!\"","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"cyaoxuan"},"content":"                + \"(`deadline name /by date (in yyyy-mm-dd)`)\", thrown.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":153,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"cyaoxuan"},"content":"    public void parseInput_deadlineNormalInput_successful() {","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"cyaoxuan"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"cyaoxuan"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"cyaoxuan"},"content":"            int result \u003d Parser.parseInput(\"deadline watch lecture /by 2023-08-31\", taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":158,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"cyaoxuan"},"content":"            assertEquals(1, result);","lastModifiedDate":"2023-09-01"},{"lineNumber":160,"author":{"gitId":"cyaoxuan"},"content":"            assertEquals(1, taskList.getCount());","lastModifiedDate":"2023-09-01"},{"lineNumber":161,"author":{"gitId":"cyaoxuan"},"content":"            assertInstanceOf(Deadline.class, taskList.getTask(0));","lastModifiedDate":"2023-09-01"},{"lineNumber":162,"author":{"gitId":"cyaoxuan"},"content":"            assertEquals(\"[D][ ] watch lecture (by: Aug 31 2023)\", taskList.getTask(0).toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":163,"author":{"gitId":"cyaoxuan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":164,"author":{"gitId":"cyaoxuan"},"content":"            fail(\"Should not throw exception\");","lastModifiedDate":"2023-09-01"},{"lineNumber":165,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":166,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":167,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":168,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":169,"author":{"gitId":"cyaoxuan"},"content":"    public void parseInput_eventNoFromTo_exceptionThrown() {","lastModifiedDate":"2023-09-01"},{"lineNumber":170,"author":{"gitId":"cyaoxuan"},"content":"        DukeException thrown \u003d assertThrows(DukeException.class,","lastModifiedDate":"2023-09-01"},{"lineNumber":171,"author":{"gitId":"cyaoxuan"},"content":"                () -\u003e Parser.parseInput(\"event \", new TaskList()));","lastModifiedDate":"2023-09-01"},{"lineNumber":172,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":173,"author":{"gitId":"cyaoxuan"},"content":"        assertEquals(\"⚠ Eek! Please include when the event is from and to! (`event name /from date /to date`)\",","lastModifiedDate":"2023-09-01"},{"lineNumber":174,"author":{"gitId":"cyaoxuan"},"content":"                thrown.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":175,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":176,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":177,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":178,"author":{"gitId":"cyaoxuan"},"content":"    public void parseInput_eventNoName_exceptionThrown() {","lastModifiedDate":"2023-09-01"},{"lineNumber":179,"author":{"gitId":"cyaoxuan"},"content":"        DukeException thrown \u003d assertThrows(DukeException.class,","lastModifiedDate":"2023-09-01"},{"lineNumber":180,"author":{"gitId":"cyaoxuan"},"content":"                () -\u003e Parser.parseInput(\"event /from /to \", new TaskList()));","lastModifiedDate":"2023-09-01"},{"lineNumber":181,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":182,"author":{"gitId":"cyaoxuan"},"content":"        assertEquals(\"⚠ Eek! Please include the name of the event\"","lastModifiedDate":"2023-09-01"},{"lineNumber":183,"author":{"gitId":"cyaoxuan"},"content":"                + \" and when the event is from and to! (`event name /from date /to date`)\", thrown.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":184,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":185,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":186,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":187,"author":{"gitId":"cyaoxuan"},"content":"    public void parseInput_eventNormalInput_successful() {","lastModifiedDate":"2023-09-01"},{"lineNumber":188,"author":{"gitId":"cyaoxuan"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":189,"author":{"gitId":"cyaoxuan"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":190,"author":{"gitId":"cyaoxuan"},"content":"            int result \u003d Parser.parseInput(\"event CCA /from 7pm /to 9pm\", taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":191,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":192,"author":{"gitId":"cyaoxuan"},"content":"            assertEquals(1, result);","lastModifiedDate":"2023-09-01"},{"lineNumber":193,"author":{"gitId":"cyaoxuan"},"content":"            assertEquals(1, taskList.getCount());","lastModifiedDate":"2023-09-01"},{"lineNumber":194,"author":{"gitId":"cyaoxuan"},"content":"            assertInstanceOf(Event.class, taskList.getTask(0));","lastModifiedDate":"2023-09-01"},{"lineNumber":195,"author":{"gitId":"cyaoxuan"},"content":"            assertEquals(\"[E][ ] CCA (from: 7pm to: 9pm)\", taskList.getTask(0).toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":196,"author":{"gitId":"cyaoxuan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":197,"author":{"gitId":"cyaoxuan"},"content":"            fail(\"Should not throw exception\");","lastModifiedDate":"2023-09-01"},{"lineNumber":198,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":199,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":200,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":201,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":202,"author":{"gitId":"cyaoxuan"},"content":"    public void parseInput_bye_successful() {","lastModifiedDate":"2023-09-01"},{"lineNumber":203,"author":{"gitId":"cyaoxuan"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":204,"author":{"gitId":"cyaoxuan"},"content":"            int result \u003d Parser.parseInput(\"bye\", new TaskList());","lastModifiedDate":"2023-09-01"},{"lineNumber":205,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":206,"author":{"gitId":"cyaoxuan"},"content":"            assertEquals(0, result);","lastModifiedDate":"2023-09-01"},{"lineNumber":207,"author":{"gitId":"cyaoxuan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":208,"author":{"gitId":"cyaoxuan"},"content":"            fail(\"Should not throw exception\");","lastModifiedDate":"2023-09-01"},{"lineNumber":209,"author":{"gitId":"cyaoxuan"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":210,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":211,"author":{"gitId":"cyaoxuan"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"cyaoxuan":211}},{"path":"src/test/java/duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cyaoxuan"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cyaoxuan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cyaoxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cyaoxuan"},"content":"public class TaskTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"cyaoxuan"},"content":"    public void toTaskListEntry_todoUndone_correctEntry() {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"cyaoxuan"},"content":"        Task t \u003d new ToDo(\"read book\");","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"        assertEquals(\"T | 0 | read book\", t.toTaskListEntry());","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"    public void toTaskListEntry_todoDone_correctEntry() {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":"        Task t \u003d new ToDo(\"go for a run\");","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"        t.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"cyaoxuan"},"content":"        assertEquals(\"T | 1 | go for a run\", t.toTaskListEntry());","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"cyaoxuan"},"content":"    public void toTaskListEntry_deadlineUndone_correctEntry() {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"cyaoxuan"},"content":"        Task t \u003d new Deadline(\"CS2100 lecture\", \"Aug 31 2023\");","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"cyaoxuan"},"content":"        assertEquals(\"D | 0 | CS2100 lecture | Aug 31 2023\", t.toTaskListEntry());","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"cyaoxuan"},"content":"    public void toTaskListEntry_deadlineDone_correctEntry() {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"cyaoxuan"},"content":"        Task t \u003d new Deadline(\"CS2100 lecture\", \"Aug 31 2023\");","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"cyaoxuan"},"content":"        t.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"cyaoxuan"},"content":"        assertEquals(\"D | 1 | CS2100 lecture | Aug 31 2023\", t.toTaskListEntry());","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"cyaoxuan"},"content":"    public void toTaskListEntry_eventUndone_correctEntry() {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"cyaoxuan"},"content":"        Task t \u003d new Event(\"dinner\", \"Aug 31 6pm\", \"Aug 31 8pm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"cyaoxuan"},"content":"        assertEquals(\"E | 0 | dinner | Aug 31 6pm | Aug 31 8pm\", t.toTaskListEntry());","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"cyaoxuan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"cyaoxuan"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"cyaoxuan"},"content":"    public void toTaskListEntry_eventDone_correctEntry() {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"cyaoxuan"},"content":"        Task t \u003d new Event(\"dinner\", \"Aug 31 6pm\", \"Aug 31 8pm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"cyaoxuan"},"content":"        t.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"cyaoxuan"},"content":"        assertEquals(\"E | 1 | dinner | Aug 31 6pm | Aug 31 8pm\", t.toTaskListEntry());","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"cyaoxuan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"cyaoxuan"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"cyaoxuan":46}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cyaoxuan"},"content":"todo td1","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"cyaoxuan"},"content":"todo td2","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"cyaoxuan"},"content":"event e1 /from 1 /to 2","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"cyaoxuan"},"content":"event e2 /from 123 abc /to 456 !!!@@@","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"cyaoxuan"},"content":"deadline ip /by 24 Aug 2359","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"cyaoxuan"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"cyaoxuan"},"content":"mark 0","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"cyaoxuan"},"content":"mark 100","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"cyaoxuan"},"content":"mark","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"cyaoxuan"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"cyaoxuan"},"content":"mark 4","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"cyaoxuan"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"cyaoxuan"},"content":"unmark 0","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"cyaoxuan"},"content":"unmark 100","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"cyaoxuan"},"content":"unmark","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"cyaoxuan"},"content":"unmark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"cyaoxuan"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"cyaoxuan"},"content":"mark 4","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"cyaoxuan"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"cyaoxuan"},"content":"delete 1","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"cyaoxuan"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"cyaoxuan"},"content":"delete 2","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"cyaoxuan"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"cyaoxuan"},"content":"delete","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"cyaoxuan"},"content":"delete 0","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"cyaoxuan"},"content":"delete 100","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"cyaoxuan"},"content":"todo ","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"cyaoxuan"},"content":"todo           \t","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"cyaoxuan"},"content":"event ","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"cyaoxuan"},"content":"event e3","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"cyaoxuan"},"content":"event e3 /from","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"cyaoxuan"},"content":"event e3 /to","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"cyaoxuan"},"content":"event e3 /from /to","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"cyaoxuan"},"content":"event /from 1 /to 2","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"cyaoxuan"},"content":"deadline","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"cyaoxuan"},"content":"deadline d1","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"cyaoxuan"},"content":"deadline d1 /by","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"cyaoxuan"},"content":"deadline /by 4q34","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"cyaoxuan"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"cyaoxuan"},"content":"eep","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"cyaoxuan"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"cyaoxuan":41}}]
