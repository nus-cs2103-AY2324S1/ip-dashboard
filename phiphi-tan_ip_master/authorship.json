[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"    String deadline;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":"    public Deadline(String msg, String deadline) {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":"        super(Type.D,false, msg);","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"phiphi-tan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":"        return super.toString() +","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":"                String.format(\" (by: %s)\", deadline);","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"phiphi-tan"},"content":"    public static Deadline newDeadline(String input) {","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"phiphi-tan"},"content":"        if (!input.startsWith(\"deadline \")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"phiphi-tan"},"content":"            throw new IllegalArgumentException(","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"                    String.format(\"Hey genius, did you mean \\\"deadline %s\\\"...\", input.substring(8)));","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"phiphi-tan"},"content":"        } else if (!input.contains(\"/by\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"phiphi-tan"},"content":"            throw new IllegalArgumentException(\"Look at which moron didn\u0027t add a deadline with the \\\"/by\\\" flag\");","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"phiphi-tan"},"content":"        int byFlag \u003d input.indexOf(\"/by\");","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"phiphi-tan"},"content":"        if (byFlag \u003d\u003d 9) {","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"phiphi-tan"},"content":"            throw new IllegalArgumentException(\"Come on you have to fill in something...\");","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"phiphi-tan"},"content":"        } else if (input.endsWith(\"/by\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"phiphi-tan"},"content":"            throw new IllegalArgumentException(\"Hey you have to give me a deadline!\");","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"phiphi-tan"},"content":"        return new Deadline(input.substring(9, byFlag - 1), input.substring(byFlag + 4));","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"phiphi-tan"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"phiphi-tan":30}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"    String start;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"    String end;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":"    public Event(String msg, String start, String end) {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"        super(Type.E, false, msg);","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"phiphi-tan"},"content":"        return super.toString() +","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"phiphi-tan"},"content":"                String.format(\" (from: %s to: %s)\", start, end);","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"phiphi-tan"},"content":"    public static Event newEvent(String input) {","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"        if (!input.startsWith(\"event \")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"phiphi-tan"},"content":"            throw new IllegalArgumentException(","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"phiphi-tan"},"content":"                    String.format(\"Hey genius, did you mean \\\"event %s\\\"...\", input.substring(5)));","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"phiphi-tan"},"content":"        } else if (!input.contains(\"/from\") \u0026\u0026 !input.contains(\"/to\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"phiphi-tan"},"content":"            throw new IllegalArgumentException(\"Congratulations you\u0027re the only idiot who would leave out both \" +","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"phiphi-tan"},"content":"                    \"\\\"/from\\\" and \\\"/to\\\" flags\");","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"phiphi-tan"},"content":"        } else if (!input.contains(\"/from\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"phiphi-tan"},"content":"            throw new IllegalArgumentException(\"You need to add a \\\"/from\\\" flag before the \\\"/to\\\" flag, halfwit\");","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"phiphi-tan"},"content":"        } else if (!input.contains(\"/to\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"phiphi-tan"},"content":"            throw new IllegalArgumentException(\"You need to add a \\\"/to\\\" flag after the \\\"/from\\\" flag, dimwit\");","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"phiphi-tan"},"content":"        int fromFlagStart \u003d input.indexOf(\"/from\");","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"phiphi-tan"},"content":"        int fromFlagEnd \u003d fromFlagStart + 6;","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"phiphi-tan"},"content":"        int toFlagStart \u003d input.indexOf(\"/to\");","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"phiphi-tan"},"content":"        int toFlagEnd \u003d toFlagStart + 4;","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"phiphi-tan"},"content":"        if (fromFlagStart \u003e toFlagStart) {","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"phiphi-tan"},"content":"            throw new IllegalArgumentException(\"Please put the \\\"/from\\\" flag before the \\\"/to\\\" flag, thanksss\");","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"phiphi-tan"},"content":"        } else if (fromFlagStart \u003d\u003d 6) {","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"phiphi-tan"},"content":"            throw new IllegalArgumentException(\"Come on you have to fill in something...\");","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"phiphi-tan"},"content":"        } else if (toFlagStart \u003d\u003d fromFlagEnd) {","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"phiphi-tan"},"content":"            throw new IllegalArgumentException(\"Your \\\"/from\\\" flag can\u0027t be empty! Leave a space if you want it blank.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"phiphi-tan"},"content":"        } else if (input.endsWith(\"/to\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"phiphi-tan"},"content":"            throw new IllegalArgumentException(\"Your \\\"/to\\\" flag can\u0027t be empty! Leave a space if you want it blank.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"phiphi-tan"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"phiphi-tan"},"content":"            return new Event(input.substring(6, fromFlagStart - 1), input.substring(fromFlagEnd, toFlagStart - 1),","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"phiphi-tan"},"content":"                    input.substring(toFlagEnd));","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"phiphi-tan"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"phiphi-tan":48}},{"path":"src/main/java/Phi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"public class Phi {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":"    // scanner object for user input","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":"    static Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"    // arrayList to store input text given","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"    static TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":"        greeting();","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"phiphi-tan"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"phiphi-tan"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"phiphi-tan"},"content":"            try {","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"phiphi-tan"},"content":"                if (input.startsWith(\"list\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"                    taskList.printList(input);","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"phiphi-tan"},"content":"                } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"phiphi-tan"},"content":"                    taskList.doTask(input);","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"phiphi-tan"},"content":"                } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"phiphi-tan"},"content":"                    taskList.undoTask(input);","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"phiphi-tan"},"content":"                } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"phiphi-tan"},"content":"                    taskList.addTask(ToDo.newToDo(input));","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"phiphi-tan"},"content":"                } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"phiphi-tan"},"content":"                    taskList.addTask(Deadline.newDeadline(input));","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"phiphi-tan"},"content":"                } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"phiphi-tan"},"content":"                    taskList.addTask(Event.newEvent(input));","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"phiphi-tan"},"content":"                } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"phiphi-tan"},"content":"                    taskList.deleteTask(input);","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"phiphi-tan"},"content":"                } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"phiphi-tan"},"content":"                    System.out.println(\"SIKE I can\u0027t process that! Try again or say \\\"bye\\\" to exit\");","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"phiphi-tan"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"phiphi-tan"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"phiphi-tan"},"content":"            catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"phiphi-tan"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"phiphi-tan"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"phiphi-tan"},"content":"            System.out.println();","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"phiphi-tan"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"phiphi-tan"},"content":"        goodbye();","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"phiphi-tan"},"content":"    public static void greeting() {","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"phiphi-tan"},"content":"        String logo \u003d \" ___ _  _ ___\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"phiphi-tan"},"content":"                      \"| _ \\\\ || |_ _|\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"phiphi-tan"},"content":"                      \"|  _/ __ || | \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"phiphi-tan"},"content":"                      \"|_| |_||_|___| \\n\";","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"phiphi-tan"},"content":"        String greetingMsg \u003d \"Hellos! I\u0027m PHI (Programmed Human Interaction)\\nWhat can I do for you?\";","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"phiphi-tan"},"content":"        System.out.println(logo + greetingMsg);","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"phiphi-tan"},"content":"    public static void goodbye() {","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"phiphi-tan"},"content":"        String exitMsg \u003d \"okk THANKS FOR COMING BYE!\";","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"phiphi-tan"},"content":"        System.out.println(exitMsg);","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"phiphi-tan"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"phiphi-tan":60}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"    enum Type {T, D, E}","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":"    Type taskType;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":"    boolean done;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"    String taskName;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":"    public Task(Type taskType, boolean done, String taskName) {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"phiphi-tan"},"content":"        this.done \u003d done;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"phiphi-tan"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"phiphi-tan"},"content":"        this.done \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"    public void markUndone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"phiphi-tan"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"phiphi-tan"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"phiphi-tan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"phiphi-tan"},"content":"        return done","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"phiphi-tan"},"content":"                ? String.format(\"[%s][X] %s\", taskType, taskName)","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"phiphi-tan"},"content":"                : String.format(\"[%s][ ] %s\", taskType, taskName);","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"phiphi-tan"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"phiphi-tan":28}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"public class TaskList {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":"    ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"phiphi-tan"},"content":"    private Task getTask(int i) {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":"        if (i \u003c\u003d 0 || i \u003e taskList.size()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":"            throw new IllegalArgumentException(\"this task does not exist, genius..\");","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"phiphi-tan"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"phiphi-tan"},"content":"            return taskList.get(i - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"    public void doTask(String input) {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"phiphi-tan"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"phiphi-tan"},"content":"            int number \u003d Integer.parseInt(input.substring(5));","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"phiphi-tan"},"content":"            Task t \u003d getTask(number);","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"phiphi-tan"},"content":"            System.out.println(\"ALRIGHT NICE I\u0027ll mark this as completed :)\");","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"phiphi-tan"},"content":"            t.markDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"phiphi-tan"},"content":"            System.out.println(t);","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"phiphi-tan"},"content":"        catch (NumberFormatException n) {","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"phiphi-tan"},"content":"            System.out.println(\"OI open ur eyes and give a proper input ITS \\\"mark\\\" AND A NUMBER\");","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"phiphi-tan"},"content":"        catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"phiphi-tan"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"phiphi-tan"},"content":"    public void undoTask(String input) {","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"phiphi-tan"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"phiphi-tan"},"content":"            int number \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"phiphi-tan"},"content":"            Task t \u003d getTask(number);","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"phiphi-tan"},"content":"            System.out.println(\"Oh nooo I will mark this undone then :(\");","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"phiphi-tan"},"content":"            t.markUndone();","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"phiphi-tan"},"content":"            System.out.println(t);","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"phiphi-tan"},"content":"        catch (NumberFormatException n) {","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"phiphi-tan"},"content":"            System.out.println(\"OI open ur eyes and give a proper input ITS \\\"unmark\\\" AND A NUMBER\");","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"phiphi-tan"},"content":"        catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"phiphi-tan"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"phiphi-tan"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"phiphi-tan"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"phiphi-tan"},"content":"        System.out.println(\"Added:\\n\" + task.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"phiphi-tan"},"content":"    public void deleteTask(String input) {","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"phiphi-tan"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"phiphi-tan"},"content":"            int number \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"phiphi-tan"},"content":"            Task t \u003d getTask(number);","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"phiphi-tan"},"content":"            System.out.println(String.format(\"Alright say bye bye to task %d!\", number));","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"phiphi-tan"},"content":"            System.out.println(t);","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"phiphi-tan"},"content":"            this.taskList.remove(t);","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"phiphi-tan"},"content":"            System.out.println(String.format(\"There\u0027s %d task(s) in the list now.\", taskList.size()));","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"phiphi-tan"},"content":"        catch (NumberFormatException n) {","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"phiphi-tan"},"content":"            System.out.println(\"Ugh to delete stuff, you have to input \\\"delete\\\" and the number...\");","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"phiphi-tan"},"content":"        catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"phiphi-tan"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"phiphi-tan"},"content":"    public void printList(String input) {","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"phiphi-tan"},"content":"        if (!input.equals(\"list\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"phiphi-tan"},"content":"            throw new IllegalArgumentException(\"Nice job did you mean \\\"list\\\" coz what you gave wasn\u0027t an accepted input\");","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"phiphi-tan"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"phiphi-tan"},"content":"            if (taskList.isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"phiphi-tan"},"content":"                System.out.println(\"You do know that to SHOW a list there has to be stuff INSIDE the (currently empty) list right?\");","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"phiphi-tan"},"content":"            } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"phiphi-tan"},"content":"                for (Task t : taskList) {","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"phiphi-tan"},"content":"                    System.out.printf(\"%d.%s%n\", taskList.indexOf(t) + 1, t.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"phiphi-tan"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"phiphi-tan"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"phiphi-tan"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"phiphi-tan":85}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"    public ToDo(String msg) {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":"        super(Type.T,false, msg);","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"    public static ToDo newToDo(String input) {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":"        if (!input.startsWith(\"todo \")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":"            throw new IllegalArgumentException(","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"phiphi-tan"},"content":"                    String.format(\"Hey genius, did you mean \\\"todo %s\\\"...\", input.substring(4)));","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":"        return new ToDo(input.substring(5));","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"phiphi-tan"},"content":"}","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"phiphi-tan":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"todo write better code","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"todogiveproperinput","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"deadline get better at coding /by ASAP","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":"deadline remember to give the flag","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":"deadline /by sometime","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"deadline don\u0027t give a deadline /by","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"event code /from now /to end of time","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":"event do something but I didn\u0027t add any flags","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":"event forget one flag /to tomorrow","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"phiphi-tan"},"content":"event /from here /to then","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":"listbutican\u0027tspell","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"phiphi-tan"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"phiphi-tan"},"content":"mark 4","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"phiphi-tan"},"content":"marker","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"phiphi-tan"},"content":"unacceptableinput","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"phiphi-tan"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"delete 2","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"phiphi-tan"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"phiphi-tan"},"content":"delete one","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"phiphi-tan"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"phiphi-tan":21}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"java -classpath ..\\bin Phi \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"phiphi-tan":1}}]
