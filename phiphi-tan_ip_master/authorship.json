[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"# PHI :dragon_face: :rowboat:","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"\u003e\"Coding is a mental construct, just think more computing thoughts\" - Me","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":"*PHI* frees your mind of having to remember things you need to do. It\u0027s","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"- text-based","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"- easy to figure out","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":"- encapsulates the very human touch of having somebody exasperated with your improper user inputs.","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"phiphi-tan"},"content":"All you need to do is:","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":"1. Download the latest release from [here](https://github.com/phiphi-tan/ip/releases)","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":"2. Run the .jar file","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"phiphi-tan"},"content":"3. Do your stuff and watch it manage your tasks for you","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"phiphi-tan"},"content":"Best part of all, it is completely **FREE** (~~unlike its creator\u0027s schedule~~)!","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"phiphi-tan"},"content":"Look at all the things it can do:","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"- [x] Managing to-do items","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"phiphi-tan"},"content":"- [x] Managing tasks with deadlines","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"phiphi-tan"},"content":"- [x] Managing events","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"phiphi-tan"},"content":"- [x] Search feature for keywords","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"phiphi-tan"},"content":"- [x] Mock you if you fail to give proper inputs","lastModifiedDate":"2023-09-23"},{"lineNumber":23,"author":{"gitId":"phiphi-tan"},"content":"- [ ] Reminders (that\u0027s a lie, I\u0027m not doing that)","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"phiphi-tan"},"content":"----","lastModifiedDate":"2023-09-14"},{"lineNumber":25,"author":{"gitId":"phiphi-tan"},"content":"Since you\u0027re still here, here\u0027s a chunk of code for you to test out your coding abilities:","lastModifiedDate":"2023-09-14"},{"lineNumber":26,"author":{"gitId":"phiphi-tan"},"content":"   ```java","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"phiphi-tan"},"content":"   /*","lastModifiedDate":"2023-09-14"},{"lineNumber":28,"author":{"gitId":"phiphi-tan"},"content":"   Welcome to","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"phiphi-tan"},"content":"    ___ _  _ ___","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"phiphi-tan"},"content":"   | _ \\ || |_ _|","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"phiphi-tan"},"content":"   |  _/ __ || | ","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"phiphi-tan"},"content":"   |_| |_||_|___|","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"phiphi-tan"},"content":"   PHI (Programmable Human Interface)","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"phiphi-tan"},"content":"   */","lastModifiedDate":"2023-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"phiphi-tan"},"content":"public class Main {","lastModifiedDate":"2023-09-14"},{"lineNumber":37,"author":{"gitId":"phiphi-tan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-14"},{"lineNumber":38,"author":{"gitId":"phiphi-tan"},"content":"        System.out.println(\"You are a nerd\");","lastModifiedDate":"2023-09-14"},{"lineNumber":39,"author":{"gitId":"phiphi-tan"},"content":"    }  ","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"phiphi-tan"},"content":"}","lastModifiedDate":"2023-09-14"},{"lineNumber":41,"author":{"gitId":"phiphi-tan"},"content":"```","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"phiphi-tan":36,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"}","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":"checkstyle {","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"phiphi-tan"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"phiphi-tan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"phiphi-tan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"phiphi-tan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"phiphi-tan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"phiphi-tan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"phiphi-tan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"phiphi-tan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"phiphi-tan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"phiphi-tan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"phiphi-tan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"phiphi-tan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"phiphi-tan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"phiphi-tan"},"content":"    mainClass.set(\"phi.Launcher\")","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"phiphi-tan"},"content":"    archiveBaseName \u003d \"phi\"","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"phiphi-tan":22}},{"path":"changelog.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"# CS2103T Individual Project (iP)","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"This is a project log for my individual project","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":"   ```","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":"   Welcome to","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"    ___ _  _ ___","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"   | _ \\ || |_ _|","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":"   |  _/ __ || | ","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":"   |_| |_||_|___|","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"phiphi-tan"},"content":"   PHI (Programmable Human Interface)","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":"   ```","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":"---","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"phiphi-tan"},"content":"## Main Increments","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"phiphi-tan"},"content":"### Level 0. Rename, Greet, Exit","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"phiphi-tan"},"content":"- Chatbot was created and given the name Phi","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"phiphi-tan"},"content":"- Greets the user and exits the program","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"phiphi-tan"},"content":"### Level 1. Echo","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"phiphi-tan"},"content":"- PHI now echoes commands entered by the user","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"phiphi-tan"},"content":"- Exits when the user types the command _bye_","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"phiphi-tan"},"content":"### Level 2. Add, List","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"phiphi-tan"},"content":"- Text entered by the user will be saved as a task","lastModifiedDate":"2023-09-14"},{"lineNumber":25,"author":{"gitId":"phiphi-tan"},"content":"- Tasks are displayed in a list upon command _list_","lastModifiedDate":"2023-09-14"},{"lineNumber":26,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"phiphi-tan"},"content":"### Level 3. Mark as Done","lastModifiedDate":"2023-09-14"},{"lineNumber":28,"author":{"gitId":"phiphi-tan"},"content":"- Tasks can now be marked as done (and undone)","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":30,"author":{"gitId":"phiphi-tan"},"content":"### Level 4. ToDos, Events, Deadlines","lastModifiedDate":"2023-09-14"},{"lineNumber":31,"author":{"gitId":"phiphi-tan"},"content":"- Tasks are now classified under one of three types:","lastModifiedDate":"2023-09-14"},{"lineNumber":32,"author":{"gitId":"phiphi-tan"},"content":"  - ToDos: Tasks without any date/time","lastModifiedDate":"2023-09-14"},{"lineNumber":33,"author":{"gitId":"phiphi-tan"},"content":"  - Deadlines: Tasks to be done before a specified deadline","lastModifiedDate":"2023-09-14"},{"lineNumber":34,"author":{"gitId":"phiphi-tan"},"content":"  - Events: Tasks that start and end at a specified time","lastModifiedDate":"2023-09-14"},{"lineNumber":35,"author":{"gitId":"phiphi-tan"},"content":"  ","lastModifiedDate":"2023-09-14"},{"lineNumber":36,"author":{"gitId":"phiphi-tan"},"content":"### Level 5. Handle Errors","lastModifiedDate":"2023-09-14"},{"lineNumber":37,"author":{"gitId":"phiphi-tan"},"content":"- PHI can deal with basic-level errors (incorrect inputs) entered by the user","lastModifiedDate":"2023-09-14"},{"lineNumber":38,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":39,"author":{"gitId":"phiphi-tan"},"content":"### Level 6. Delete","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"phiphi-tan"},"content":"- Tasks can now be deleted from the list","lastModifiedDate":"2023-09-14"},{"lineNumber":41,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":42,"author":{"gitId":"phiphi-tan"},"content":"### Level 7. Save","lastModifiedDate":"2023-09-14"},{"lineNumber":43,"author":{"gitId":"phiphi-tan"},"content":"- Tasks are saved in storage whenever any changes are made to the task list","lastModifiedDate":"2023-09-14"},{"lineNumber":44,"author":{"gitId":"phiphi-tan"},"content":"- Data from the tasklist is loaded from the storage when PHI starts (_./data/tasklist.txt_)","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"phiphi-tan"},"content":"### Level 8. Dates and Times","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"phiphi-tan"},"content":"- Deadline/Event dates can now be understood in yyyy-MM-dd format, and are displayed back as MMM dd yyyy","lastModifiedDate":"2023-09-14"},{"lineNumber":48,"author":{"gitId":"phiphi-tan"},"content":"  - Non-recognised formats will continue to be saved as a String","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"phiphi-tan"},"content":"### Level 9. Find","lastModifiedDate":"2023-09-14"},{"lineNumber":51,"author":{"gitId":"phiphi-tan"},"content":"- Users can now find tasks by searching for a keyword","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":53,"author":{"gitId":"phiphi-tan"},"content":"### Level 10. GUI","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"phiphi-tan"},"content":"- Added Graphical User Interface (GUI) to the chatbot using JavaFX technology","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"phiphi-tan"},"content":"## Other Increments","lastModifiedDate":"2023-09-14"},{"lineNumber":57,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":58,"author":{"gitId":"phiphi-tan"},"content":"### Automated Text UI Testing","lastModifiedDate":"2023-09-14"},{"lineNumber":59,"author":{"gitId":"phiphi-tan"},"content":"- Testing of PHI is semi-automated through I/O redirection (text-ui-test)","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":61,"author":{"gitId":"phiphi-tan"},"content":"### Enumerations","lastModifiedDate":"2023-09-14"},{"lineNumber":62,"author":{"gitId":"phiphi-tan"},"content":"- Enumerations used for the Tasks data-type","lastModifiedDate":"2023-09-14"},{"lineNumber":63,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":64,"author":{"gitId":"phiphi-tan"},"content":"### More OOP","lastModifiedDate":"2023-09-14"},{"lineNumber":65,"author":{"gitId":"phiphi-tan"},"content":"- Extraction of code as classes for more Object-Oriented-Programming (OOP)","lastModifiedDate":"2023-09-14"},{"lineNumber":66,"author":{"gitId":"phiphi-tan"},"content":"  - Creating/Refining the following classes (Ui, Storage, Parser, TaskList)","lastModifiedDate":"2023-09-14"},{"lineNumber":67,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":68,"author":{"gitId":"phiphi-tan"},"content":"### Packages","lastModifiedDate":"2023-09-14"},{"lineNumber":69,"author":{"gitId":"phiphi-tan"},"content":"- Classes in PHI are organised into suitable java packages","lastModifiedDate":"2023-09-14"},{"lineNumber":70,"author":{"gitId":"phiphi-tan"},"content":"  - Currently, all classes are in one package (_phi_)","lastModifiedDate":"2023-09-14"},{"lineNumber":71,"author":{"gitId":"phiphi-tan"},"content":"  ","lastModifiedDate":"2023-09-14"},{"lineNumber":72,"author":{"gitId":"phiphi-tan"},"content":"### Gradle","lastModifiedDate":"2023-09-14"},{"lineNumber":73,"author":{"gitId":"phiphi-tan"},"content":"- Support for Gradle added to PHI, allowing automation of some build/run tasks","lastModifiedDate":"2023-09-14"},{"lineNumber":74,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":75,"author":{"gitId":"phiphi-tan"},"content":"### JUnit Tests","lastModifiedDate":"2023-09-14"},{"lineNumber":76,"author":{"gitId":"phiphi-tan"},"content":"- JUnit tests created to test code behaviour","lastModifiedDate":"2023-09-14"},{"lineNumber":77,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":78,"author":{"gitId":"phiphi-tan"},"content":"### JAR File","lastModifiedDate":"2023-09-14"},{"lineNumber":79,"author":{"gitId":"phiphi-tan"},"content":"- **phi.jar v1.0.0** released","lastModifiedDate":"2023-09-14"},{"lineNumber":80,"author":{"gitId":"phiphi-tan"},"content":"  - PHI packaged into an executable JAR file (built using Gradle) for easier distribution","lastModifiedDate":"2023-09-14"},{"lineNumber":81,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":82,"author":{"gitId":"phiphi-tan"},"content":"### JavaDoc","lastModifiedDate":"2023-09-14"},{"lineNumber":83,"author":{"gitId":"phiphi-tan"},"content":"- JavaDoc header comments added to all classes and all non-trivial methods","lastModifiedDate":"2023-09-14"},{"lineNumber":84,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":85,"author":{"gitId":"phiphi-tan"},"content":"### Coding Standard","lastModifiedDate":"2023-09-14"},{"lineNumber":86,"author":{"gitId":"phiphi-tan"},"content":"- Code should now comply with the given coding standard for this project","lastModifiedDate":"2023-09-14"},{"lineNumber":87,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":88,"author":{"gitId":"phiphi-tan"},"content":"### Checkstyle","lastModifiedDate":"2023-09-14"},{"lineNumber":89,"author":{"gitId":"phiphi-tan"},"content":"- CheckStyle now incorporated to detect coding style violations. Configured to be used with Gradle","lastModifiedDate":"2023-09-14"},{"lineNumber":90,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":91,"author":{"gitId":"phiphi-tan"},"content":"### Help","lastModifiedDate":"2023-09-23"},{"lineNumber":92,"author":{"gitId":"phiphi-tan"},"content":"- PHI now provides an in-app help command","lastModifiedDate":"2023-09-23"},{"lineNumber":93,"author":{"gitId":"phiphi-tan"},"content":"- PHI also pre-loads the app with sample data during the first run of the application","lastModifiedDate":"2023-09-23"},{"lineNumber":94,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":95,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":96,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":97,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":98,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":99,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":100,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":101,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":102,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"phiphi-tan":102}},{"path":"data/tasklist.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"T|false|coding homework","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"D|true|get better at coding|ASAP","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"E|false|more coding|now|end of time","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":"T|false|code","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":"D|true|cry|Dec 25 2023","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"T|false|Complete iP Submission","lastModifiedDate":"2023-09-23"}],"authorContributionMap":{"phiphi-tan":6}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2023-09-23"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"   ```","lastModifiedDate":"2023-09-23"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"   /* Welcome to","lastModifiedDate":"2023-09-23"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":"    ___ _  _ ___","lastModifiedDate":"2023-09-23"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":"   | _ \\ || |_ _|","lastModifiedDate":"2023-09-23"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"   |  _/ __ || | ","lastModifiedDate":"2023-09-23"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"   |_| |_||_|___|","lastModifiedDate":"2023-09-23"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":"   PHI (Programmable Human Interface) */","lastModifiedDate":"2023-09-23"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":"```","lastModifiedDate":"2023-09-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":"PHI (short for Programmed Human Interaction is a **desktop to-do app**,","lastModifiedDate":"2023-09-23"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":"optimised for use via chatbot-like interface","lastModifiedDate":"2023-09-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":14,"author":{"gitId":"phiphi-tan"},"content":"- [Quick start](#quick-start)","lastModifiedDate":"2023-09-23"},{"lineNumber":15,"author":{"gitId":"phiphi-tan"},"content":"- [Features](#features)","lastModifiedDate":"2023-09-23"},{"lineNumber":16,"author":{"gitId":"phiphi-tan"},"content":"  - [Viewing task list: `list`](#viewing-task-list-list)","lastModifiedDate":"2023-09-23"},{"lineNumber":17,"author":{"gitId":"phiphi-tan"},"content":"  - [Viewing in-app user guide: `help`](#viewing-in-app-user-guide-help)","lastModifiedDate":"2023-09-23"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"  - [Creating a new task](#creating-a-new-task)","lastModifiedDate":"2023-09-23"},{"lineNumber":19,"author":{"gitId":"phiphi-tan"},"content":"    - [Adding a To-do task: `todo`](#adding-a-to-do-task-todo)","lastModifiedDate":"2023-09-23"},{"lineNumber":20,"author":{"gitId":"phiphi-tan"},"content":"    - [Adding a Deadline task: `deadline`](#adding-a-deadline-task-deadline)","lastModifiedDate":"2023-09-23"},{"lineNumber":21,"author":{"gitId":"phiphi-tan"},"content":"    - [Adding an Event task: `event`](#adding-an-event-task-event)","lastModifiedDate":"2023-09-23"},{"lineNumber":22,"author":{"gitId":"phiphi-tan"},"content":"  - [Mark / unmark tasks as complete: `mark` / `unmark`](#mark--unmark-tasks-as-complete-mark--unmark)","lastModifiedDate":"2023-09-23"},{"lineNumber":23,"author":{"gitId":"phiphi-tan"},"content":"  - [Delete tasks: `delete`](#delete-tasks-delete)","lastModifiedDate":"2023-09-23"},{"lineNumber":24,"author":{"gitId":"phiphi-tan"},"content":"  - [Search for tasks using keyword: `find`](#search-for-tasks-using-keyword-find)","lastModifiedDate":"2023-09-23"},{"lineNumber":25,"author":{"gitId":"phiphi-tan"},"content":"  - [Exit the program: `bye`](#exit-the-program-bye)","lastModifiedDate":"2023-09-23"},{"lineNumber":26,"author":{"gitId":"phiphi-tan"},"content":"- [Feature summary](#feature-summary)","lastModifiedDate":"2023-09-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":28,"author":{"gitId":"phiphi-tan"},"content":"## Quick Start","lastModifiedDate":"2023-09-23"},{"lineNumber":29,"author":{"gitId":"phiphi-tan"},"content":"1. Ensure you have Java 8 or above installed in your Computer","lastModifiedDate":"2023-09-23"},{"lineNumber":30,"author":{"gitId":"phiphi-tan"},"content":"   - To check, open your computer\u0027s terminal and enter `java-version`","lastModifiedDate":"2023-09-23"},{"lineNumber":31,"author":{"gitId":"phiphi-tan"},"content":"   - If installed, the version number will be displayed ","lastModifiedDate":"2023-09-23"},{"lineNumber":32,"author":{"gitId":"phiphi-tan"},"content":"2. Download the latest `phi.jar` from [here](https://github.com/phiphi-tan/ip/releases)","lastModifiedDate":"2023-09-23"},{"lineNumber":33,"author":{"gitId":"phiphi-tan"},"content":"3. Copy the file to the folder you want to use as the *home folder* for your tasklist","lastModifiedDate":"2023-09-23"},{"lineNumber":34,"author":{"gitId":"phiphi-tan"},"content":"4. Double-click on the .jar file to run it. A GUI similar to the below should appear in a few seconds.","lastModifiedDate":"2023-09-23"},{"lineNumber":35,"author":{"gitId":"phiphi-tan"},"content":"   - If this is your first time running the program, the app will come preloaded with sample data","lastModifiedDate":"2023-09-23"},{"lineNumber":36,"author":{"gitId":"phiphi-tan"},"content":"   - If not, the app will load previously the previously saved tasklist from the same directory  ","lastModifiedDate":"2023-09-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":38,"author":{"gitId":"phiphi-tan"},"content":"### Sample View  ","lastModifiedDate":"2023-09-23"},{"lineNumber":39,"author":{"gitId":"phiphi-tan"},"content":"   ","lastModifiedDate":"2023-09-23"},{"lineNumber":40,"author":{"gitId":"phiphi-tan"},"content":"![Screenshot of the app at startup](./images/startup.png)  ","lastModifiedDate":"2023-09-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":42,"author":{"gitId":"phiphi-tan"},"content":"5. Type the command in the command box and press Enter to execute it.  ","lastModifiedDate":"2023-09-23"},{"lineNumber":43,"author":{"gitId":"phiphi-tan"},"content":"    e.g. typing `list` and pressing Enter will display the list of all tasks  ","lastModifiedDate":"2023-09-23"},{"lineNumber":44,"author":{"gitId":"phiphi-tan"},"content":"    Some example commands you can try:","lastModifiedDate":"2023-09-23"},{"lineNumber":45,"author":{"gitId":"phiphi-tan"},"content":"   - `list`: lists all currently stored tasks","lastModifiedDate":"2023-09-23"},{"lineNumber":46,"author":{"gitId":"phiphi-tan"},"content":"   - `todo complete examples`: Adds a task titled `complete examples` to the task list","lastModifiedDate":"2023-09-23"},{"lineNumber":47,"author":{"gitId":"phiphi-tan"},"content":"   - `mark 3`: Marks the 3rd task in the list as complete","lastModifiedDate":"2023-09-23"},{"lineNumber":48,"author":{"gitId":"phiphi-tan"},"content":"   - `find coding`: Finds all tasks that have to keyword `coding` and displays them","lastModifiedDate":"2023-09-23"},{"lineNumber":49,"author":{"gitId":"phiphi-tan"},"content":"   - `bye`: Exits the app","lastModifiedDate":"2023-09-23"},{"lineNumber":50,"author":{"gitId":"phiphi-tan"},"content":"6. Refer to the Features list below for specific details/implementations of each command","lastModifiedDate":"2023-09-23"},{"lineNumber":51,"author":{"gitId":"phiphi-tan"},"content":"   ","lastModifiedDate":"2023-09-23"},{"lineNumber":52,"author":{"gitId":"phiphi-tan"},"content":"   ","lastModifiedDate":"2023-09-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"phiphi-tan"},"content":"\u003e ! ___Notes about the command format:___  ","lastModifiedDate":"2023-09-23"},{"lineNumber":57,"author":{"gitId":"phiphi-tan"},"content":"\u003e - Words in `UPPER_CASE` / `X` are the parameters to be supplied by the user  ","lastModifiedDate":"2023-09-23"},{"lineNumber":58,"author":{"gitId":"phiphi-tan"},"content":"\u003e  - e.g. in `todo TASK_NAME`, `TASKNAME` is a parameter to be given by the user","lastModifiedDate":"2023-09-23"},{"lineNumber":59,"author":{"gitId":"phiphi-tan"},"content":"\u003e  - e.g. in `mark X`, `X` is the item number of the task that the user wishes to mark complete","lastModifiedDate":"2023-09-23"},{"lineNumber":60,"author":{"gitId":"phiphi-tan"},"content":"\u003e ","lastModifiedDate":"2023-09-23"},{"lineNumber":61,"author":{"gitId":"phiphi-tan"},"content":"\u003e- Items in square brackets are dates in DD-MM-YYYY format","lastModifiedDate":"2023-09-23"},{"lineNumber":62,"author":{"gitId":"phiphi-tan"},"content":"\u003e  - e.g. in `deadline TASK_NAME /by [deadline]`, entering `01-01-2001` will be stored as 1 Jan 2001","lastModifiedDate":"2023-09-23"},{"lineNumber":63,"author":{"gitId":"phiphi-tan"},"content":"\u003e  - any other dates that do not fit this format (e.g. `tomorrow`) will be stored as a String","lastModifiedDate":"2023-09-23"},{"lineNumber":64,"author":{"gitId":"phiphi-tan"},"content":"\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":65,"author":{"gitId":"phiphi-tan"},"content":"\u003e - Parameters need to be in a fixed order","lastModifiedDate":"2023-09-23"},{"lineNumber":66,"author":{"gitId":"phiphi-tan"},"content":"\u003e  - e.g. in `event TASK_NAME /from [start-date] /to [end-date]`, note how the `/from` flag must be before the `/to` flag","lastModifiedDate":"2023-09-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2021-07-17"},{"lineNumber":69,"author":{"gitId":"phiphi-tan"},"content":"### Viewing task list: `list`","lastModifiedDate":"2023-09-23"},{"lineNumber":70,"author":{"gitId":"phiphi-tan"},"content":"Format: `list`","lastModifiedDate":"2023-09-23"},{"lineNumber":71,"author":{"gitId":"phiphi-tan"},"content":"- Shows the list of all current tasks in the tasklist","lastModifiedDate":"2023-09-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":73,"author":{"gitId":"phiphi-tan"},"content":"### Viewing in-app user guide: `help`","lastModifiedDate":"2023-09-23"},{"lineNumber":74,"author":{"gitId":"phiphi-tan"},"content":"Format: `help`","lastModifiedDate":"2023-09-23"},{"lineNumber":75,"author":{"gitId":"phiphi-tan"},"content":"- Shows a short in-app user guide to the available commands","lastModifiedDate":"2023-09-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":77,"author":{"gitId":"phiphi-tan"},"content":"### Creating a new task","lastModifiedDate":"2023-09-23"},{"lineNumber":78,"author":{"gitId":"phiphi-tan"},"content":"#### Adding a To-do task: `todo`  ","lastModifiedDate":"2023-09-23"},{"lineNumber":79,"author":{"gitId":"phiphi-tan"},"content":"Format: `todo TASK_NAME`","lastModifiedDate":"2023-09-23"},{"lineNumber":80,"author":{"gitId":"phiphi-tan"},"content":"- Creates a new task with `TASK_NAME` as its title","lastModifiedDate":"2023-09-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":82,"author":{"gitId":"phiphi-tan"},"content":"#### Adding a Deadline task: `deadline`","lastModifiedDate":"2023-09-23"},{"lineNumber":83,"author":{"gitId":"phiphi-tan"},"content":"Format: `deadline TASK_NAME /by [deadline]`","lastModifiedDate":"2023-09-23"},{"lineNumber":84,"author":{"gitId":"phiphi-tan"},"content":"- Creates a new deadline with `TASK_NAME` as its title and `[deadline]` as its due date","lastModifiedDate":"2023-09-23"},{"lineNumber":85,"author":{"gitId":"phiphi-tan"},"content":"\u003e *Reminder*: Dates can be stored as DD-MM-YYYY format or as plain text (String)  ","lastModifiedDate":"2023-09-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":87,"author":{"gitId":"phiphi-tan"},"content":"#### Adding an Event task: `event` ","lastModifiedDate":"2023-09-23"},{"lineNumber":88,"author":{"gitId":"phiphi-tan"},"content":"Format: `event TASK_NAME /from [start-date] /to [end-date]`","lastModifiedDate":"2023-09-23"},{"lineNumber":89,"author":{"gitId":"phiphi-tan"},"content":"- Creates a new event with `TASK_NAME` as its title, and","lastModifiedDate":"2023-09-23"},{"lineNumber":90,"author":{"gitId":"phiphi-tan"},"content":"`[start-date]` and `[end-date]` as its start and end date respectively","lastModifiedDate":"2023-09-23"},{"lineNumber":91,"author":{"gitId":"phiphi-tan"},"content":"\u003e *Reminder*: Dates can be stored as DD-MM-YYYY format or as plain text (String)","lastModifiedDate":"2023-09-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":94,"author":{"gitId":"phiphi-tan"},"content":"### Mark / unmark tasks as complete: `mark` / `unmark`","lastModifiedDate":"2023-09-23"},{"lineNumber":95,"author":{"gitId":"phiphi-tan"},"content":"Format: `mark X` / `unmark X`  ","lastModifiedDate":"2023-09-23"},{"lineNumber":96,"author":{"gitId":"phiphi-tan"},"content":"- Marks / unmarks the corresponding task `X` in the tasklist as complete","lastModifiedDate":"2023-09-23"},{"lineNumber":97,"author":{"gitId":"phiphi-tan"},"content":"- The index refers to the index number shown in the task list (`list` command)","lastModifiedDate":"2023-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":100,"author":{"gitId":"phiphi-tan"},"content":"### Delete tasks: `delete`","lastModifiedDate":"2023-09-23"},{"lineNumber":101,"author":{"gitId":"phiphi-tan"},"content":"Format: `delete X`  ","lastModifiedDate":"2023-09-23"},{"lineNumber":102,"author":{"gitId":"phiphi-tan"},"content":"- Deletes the corresponding task `X` in the tasklist","lastModifiedDate":"2023-09-23"},{"lineNumber":103,"author":{"gitId":"phiphi-tan"},"content":"- The index refers to the index number shown in the task list (`list` command)","lastModifiedDate":"2023-09-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":105,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":106,"author":{"gitId":"phiphi-tan"},"content":"### Search for tasks using keyword: `find`","lastModifiedDate":"2023-09-23"},{"lineNumber":107,"author":{"gitId":"phiphi-tan"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2023-09-23"},{"lineNumber":108,"author":{"gitId":"phiphi-tan"},"content":"- Finds all matching entries in the task list that contain `KEYWORD` in their name","lastModifiedDate":"2023-09-23"},{"lineNumber":109,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":110,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":111,"author":{"gitId":"phiphi-tan"},"content":"### Exit the program: `bye`","lastModifiedDate":"2023-09-23"},{"lineNumber":112,"author":{"gitId":"phiphi-tan"},"content":"Format: `bye`  ","lastModifiedDate":"2023-09-23"},{"lineNumber":113,"author":{"gitId":"phiphi-tan"},"content":"- Exits the program","lastModifiedDate":"2023-09-23"},{"lineNumber":114,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":115,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":116,"author":{"gitId":"phiphi-tan"},"content":"### Saving data","lastModifiedDate":"2023-09-23"},{"lineNumber":117,"author":{"gitId":"phiphi-tan"},"content":"- PHI automatically saves all tasklist items after every command, so there is no need to save manually  ","lastModifiedDate":"2023-09-23"},{"lineNumber":118,"author":{"gitId":"phiphi-tan"},"content":"Saved items (if found) will be loaded up upon loading the program","lastModifiedDate":"2023-09-23"},{"lineNumber":119,"author":{"gitId":"phiphi-tan"},"content":"\u003e **!!! Caution**: If your changes to the data file makes its format invalid,","lastModifiedDate":"2023-09-23"},{"lineNumber":120,"author":{"gitId":"phiphi-tan"},"content":"\u003e PHI will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2023-09-23"},{"lineNumber":121,"author":{"gitId":"phiphi-tan"},"content":"\u003e Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-09-23"},{"lineNumber":122,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":123,"author":{"gitId":"phiphi-tan"},"content":"## Feature Summary ","lastModifiedDate":"2023-09-23"},{"lineNumber":124,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":125,"author":{"gitId":"phiphi-tan"},"content":"| Action | Format |","lastModifiedDate":"2023-09-23"},{"lineNumber":126,"author":{"gitId":"phiphi-tan"},"content":"| Viewing task list: \u003ccode\u003elist\u003c/code\u003e | \u003ccode\u003elist\u003c/code\u003e |","lastModifiedDate":"2023-09-23"},{"lineNumber":127,"author":{"gitId":"phiphi-tan"},"content":"| Viewing in-app user guide: \u003ccode\u003ehelp\u003c/code\u003e | \u003ccode\u003ehelp\u003c/code\u003e |","lastModifiedDate":"2023-09-23"},{"lineNumber":128,"author":{"gitId":"phiphi-tan"},"content":"| Adding a To-do task: \u003ccode\u003etodo\u003c/code\u003e | \u003ccode\u003etodo TASK_NAME\u003c/code\u003e |","lastModifiedDate":"2023-09-23"},{"lineNumber":129,"author":{"gitId":"phiphi-tan"},"content":"| Adding a Deadline task: \u003ccode\u003edeadline\u003c/code\u003e | \u003ccode\u003edeadline TASK_NAME /by [deadline]\u003c/code\u003e |","lastModifiedDate":"2023-09-23"},{"lineNumber":130,"author":{"gitId":"phiphi-tan"},"content":"| Adding an Event task: \u003ccode\u003eevent\u003c/code\u003e | \u003ccode\u003eevent TASK_NAME /from [start-date] /to [end-date]\u003c/code\u003e |","lastModifiedDate":"2023-09-23"},{"lineNumber":131,"author":{"gitId":"phiphi-tan"},"content":"| Mark / unmark tasks as complete: \u003ccode\u003emark\u003c/code\u003e / \u003ccode\u003eunmark\u003c/code\u003e | \u003ccode\u003emark X\u003c/code\u003e / \u003ccode\u003eunmark X\u003c/code\u003e |","lastModifiedDate":"2023-09-23"},{"lineNumber":132,"author":{"gitId":"phiphi-tan"},"content":"| Delete tasks: \u003ccode\u003edelete\u003c/code\u003e | \u003ccode\u003edelete X\u003c/code\u003e |","lastModifiedDate":"2023-09-23"},{"lineNumber":133,"author":{"gitId":"phiphi-tan"},"content":"| Search for tasks using keyword: \u003ccode\u003efind\u003c/code\u003e | \u003ccode\u003efind KEYWORD\u003c/code\u003e |","lastModifiedDate":"2023-09-23"},{"lineNumber":134,"author":{"gitId":"phiphi-tan"},"content":"| Exit the program: \u003ccode\u003ebye\u003c/code\u003e | \u003ccode\u003ebye\u003c/code\u003e | ","lastModifiedDate":"2023-09-23"}],"authorContributionMap":{"-":20,"phiphi-tan":114}},{"path":"src/main/java/phi/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"package phi;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":"/**","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":" */","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":"public class Launcher {","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"phiphi-tan"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":"}","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"phiphi-tan":12}},{"path":"src/main/java/phi/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"package phi;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-23"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"phiphi-tan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":"import phi.ui.MainWindow;","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"phiphi-tan"},"content":"/**","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"phiphi-tan"},"content":" * A GUI for Phi using FXML.","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"phiphi-tan"},"content":" */","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"phiphi-tan"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"    private Phi phi \u003d new Phi();","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"phiphi-tan"},"content":"    @Override","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"phiphi-tan"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"phiphi-tan"},"content":"        try {","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"phiphi-tan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"phiphi-tan"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"phiphi-tan"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"phiphi-tan"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"phiphi-tan"},"content":"            stage.getIcons().add(new Image(\"/images/phi.jpeg\"));","lastModifiedDate":"2023-09-23"},{"lineNumber":28,"author":{"gitId":"phiphi-tan"},"content":"            stage.setTitle(\"PHI\");","lastModifiedDate":"2023-09-23"},{"lineNumber":29,"author":{"gitId":"phiphi-tan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setPhi(phi);","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"phiphi-tan"},"content":"            stage.show();","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"phiphi-tan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"phiphi-tan"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"phiphi-tan"},"content":"}","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"phiphi-tan":35}},{"path":"src/main/java/phi/Phi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"package phi;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":"import phi.util.Parser;","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":"import phi.util.Storage;","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"import phi.util.TaskList;","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"phiphi-tan"},"content":" * Represents the core of the PHI chatbot","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":" * @author phiphi-tan","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"phiphi-tan"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"phiphi-tan"},"content":"public class Phi  {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"phiphi-tan"},"content":"    private final Storage taskStorage;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"phiphi-tan"},"content":"    private final TaskList tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"phiphi-tan"},"content":"    private final Parser parser;","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"phiphi-tan"},"content":"     * Constructor for a new instance of Phi","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"phiphi-tan"},"content":"     * Storage is loaded with the hardcoded file path of the .txt file","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"phiphi-tan"},"content":"    public Phi() {","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"phiphi-tan"},"content":"        taskStorage \u003d new Storage(\"./data/tasklist.txt\");","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"phiphi-tan"},"content":"        tasks \u003d taskStorage.readFromFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"phiphi-tan"},"content":"        this.parser \u003d new Parser(tasks);","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"phiphi-tan"},"content":"  ","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"phiphi-tan"},"content":"    public String getStorageMsg() {","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"phiphi-tan"},"content":"        return this.taskStorage.getMsg();","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"phiphi-tan"},"content":"     * Generates response to user input, and writes data to file after","lastModifiedDate":"2023-09-16"},{"lineNumber":36,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"phiphi-tan"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":38,"author":{"gitId":"phiphi-tan"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-16"},{"lineNumber":39,"author":{"gitId":"phiphi-tan"},"content":"        String response \u003d this.parser.handle(input.trim());","lastModifiedDate":"2023-09-16"},{"lineNumber":40,"author":{"gitId":"phiphi-tan"},"content":"        taskStorage.writeToFile(tasks);","lastModifiedDate":"2023-09-16"},{"lineNumber":41,"author":{"gitId":"phiphi-tan"},"content":"        return response;","lastModifiedDate":"2023-09-16"},{"lineNumber":42,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":43,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":44,"author":{"gitId":"phiphi-tan"},"content":"}","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"phiphi-tan":45}},{"path":"src/main/java/phi/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"package phi.task;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":" * Represents the Deadline task type, and contains a String with a user-specified date as the deadline of a task","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"phiphi-tan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":"    private String deadlineString;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"phiphi-tan"},"content":"     * Constructor for a new Deadline instance","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"phiphi-tan"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"phiphi-tan"},"content":"     * @param msg       Task message to be displayed","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"phiphi-tan"},"content":"     * @param isDone    Boolean determining if task is completed","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"     * @param deadline  User-specified deadline of task","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"phiphi-tan"},"content":"    public Deadline(String msg, boolean isDone, String deadline) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"phiphi-tan"},"content":"        super(Type.D, isDone, msg);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"phiphi-tan"},"content":"        LocalDate deadlineDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"phiphi-tan"},"content":"        DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"phiphi-tan"},"content":"        DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"phiphi-tan"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"phiphi-tan"},"content":"            deadlineDate \u003d LocalDate.parse(deadline, inputFormat);","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"phiphi-tan"},"content":"            this.deadlineString \u003d deadlineDate.format(outputFormat);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"phiphi-tan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"phiphi-tan"},"content":"            //System.out.println(\"Can\u0027t find a proper date format, using deadline as a String\");","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"phiphi-tan"},"content":"            this.deadlineString \u003d deadline;","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"phiphi-tan"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"phiphi-tan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"phiphi-tan"},"content":"        return super.toString() + String.format(\" (by: %s)\", deadlineString);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"phiphi-tan"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"phiphi-tan"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"phiphi-tan"},"content":"    public String outputFormat() {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"phiphi-tan"},"content":"        return String.format(\"%s|%b|%s|%s\", taskType.toString(), done, taskName, deadlineString);","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"phiphi-tan"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"phiphi-tan":48}},{"path":"src/main/java/phi/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"package phi.task;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":" * Represents the Event task type, and contains two Strings with user-specified dates as the start and end of a task","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"phiphi-tan"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":"    private String start;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":"    private String end;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"phiphi-tan"},"content":"     * Constructor for a new Event instance","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"phiphi-tan"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"phiphi-tan"},"content":"     * @param msg       Message to be displayed","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"     * @param isDone    Boolean determining if task is completed","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"phiphi-tan"},"content":"     * @param start     User-specified start time of task","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"phiphi-tan"},"content":"     * @param end       User-specified end time of task","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"phiphi-tan"},"content":"    public Event(String msg, boolean isDone, String start, String end) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"phiphi-tan"},"content":"        super(Type.E, isDone, msg);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"phiphi-tan"},"content":"        DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"phiphi-tan"},"content":"        DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"phiphi-tan"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"phiphi-tan"},"content":"            LocalDate startDate \u003d LocalDate.parse(start, inputFormat);","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"phiphi-tan"},"content":"            this.start \u003d startDate.format(outputFormat);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"phiphi-tan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"phiphi-tan"},"content":"            // Stores input directly as string","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"phiphi-tan"},"content":"            this.start \u003d start;","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"phiphi-tan"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"phiphi-tan"},"content":"            LocalDate endDate \u003d LocalDate.parse(end, inputFormat);","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"phiphi-tan"},"content":"            this.end \u003d endDate.format(outputFormat);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"phiphi-tan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"phiphi-tan"},"content":"            // Stores input directly as string","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"phiphi-tan"},"content":"            this.end \u003d end;","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"phiphi-tan"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"phiphi-tan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"phiphi-tan"},"content":"        return super.toString() + String.format(\" (from: %s to: %s)\", start, end);","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"phiphi-tan"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"phiphi-tan"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"phiphi-tan"},"content":"    public String outputFormat() {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"phiphi-tan"},"content":"        return String.format(\"%s|%b|%s|%s|%s\", taskType.toString(), done, taskName, start, end);","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"phiphi-tan"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"phiphi-tan":58}},{"path":"src/main/java/phi/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"package phi.task;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":" * Abstract parent class of all task types. Cannot be instantiated.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"    protected enum Type { T, D, E }","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":"    protected Type taskType;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"phiphi-tan"},"content":"    protected boolean done;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":"    protected String taskName;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"phiphi-tan"},"content":"     * Constructor for a new Task","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"phiphi-tan"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"phiphi-tan"},"content":"     * @param taskType  Type of task (ToDo, Deadline, Event) in enumerated type","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"phiphi-tan"},"content":"     * @param done      Boolean determining if task is completed","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"     * @param taskName  Task message to be displayed","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"phiphi-tan"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"phiphi-tan"},"content":"    public Task(Type taskType, boolean done, String taskName) {","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"phiphi-tan"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"phiphi-tan"},"content":"        this.done \u003d done;","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"phiphi-tan"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"phiphi-tan"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"phiphi-tan"},"content":"        this.done \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"phiphi-tan"},"content":"    public void markUndone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"phiphi-tan"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"phiphi-tan"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"phiphi-tan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"phiphi-tan"},"content":"        return done","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"phiphi-tan"},"content":"                ? String.format(\"[%s][X] %s\", taskType, taskName)","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"phiphi-tan"},"content":"                : String.format(\"[%s][ ] %s\", taskType, taskName);","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"phiphi-tan"},"content":"     * Returns the task in a String, formatted in the style that will be written to storage","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"phiphi-tan"},"content":"     * @return String representation of the task in output format","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"phiphi-tan"},"content":"    public abstract String outputFormat();","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"phiphi-tan"},"content":"    public String getMsg() {","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"phiphi-tan"},"content":"        return this.taskName;","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"phiphi-tan"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"phiphi-tan":51}},{"path":"src/main/java/phi/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"package phi.task;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":" * Represents the ToDo task type","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":"     * Constructor for a new ToDo instance","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"phiphi-tan"},"content":"     * @param msg       Task message to be displayed","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":"     * @param isDone    Boolean determining if task is completed","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"phiphi-tan"},"content":"    public ToDo(String msg, boolean isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"phiphi-tan"},"content":"        super(Type.T, isDone, msg);","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"phiphi-tan"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"phiphi-tan"},"content":"    public String outputFormat() {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"phiphi-tan"},"content":"        return String.format(\"%s|%b|%s\", taskType.toString(), done, taskName);","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"phiphi-tan"},"content":"}","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"phiphi-tan":28}},{"path":"src/main/java/phi/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"package phi.ui;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":10,"author":{"gitId":"phiphi-tan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":13,"author":{"gitId":"phiphi-tan"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-09-23"},{"lineNumber":14,"author":{"gitId":"phiphi-tan"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":16,"author":{"gitId":"phiphi-tan"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"phiphi-tan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"phiphi-tan"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2023-09-23"},{"lineNumber":20,"author":{"gitId":"phiphi-tan"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2023-09-23"},{"lineNumber":21,"author":{"gitId":"phiphi-tan"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2023-09-23"},{"lineNumber":22,"author":{"gitId":"phiphi-tan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"phiphi-tan"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-09-23"},{"lineNumber":24,"author":{"gitId":"phiphi-tan"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-09-23"},{"lineNumber":25,"author":{"gitId":"phiphi-tan"},"content":"import javafx.scene.text.TextAlignment;","lastModifiedDate":"2023-09-23"},{"lineNumber":26,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"phiphi-tan"},"content":"/**","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"phiphi-tan"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"phiphi-tan"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"phiphi-tan"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"phiphi-tan"},"content":" */","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"phiphi-tan"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"phiphi-tan"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"phiphi-tan"},"content":"    private Text dialog;","lastModifiedDate":"2023-09-23"},{"lineNumber":35,"author":{"gitId":"phiphi-tan"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":36,"author":{"gitId":"phiphi-tan"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":38,"author":{"gitId":"phiphi-tan"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-16"},{"lineNumber":39,"author":{"gitId":"phiphi-tan"},"content":"        try {","lastModifiedDate":"2023-09-16"},{"lineNumber":40,"author":{"gitId":"phiphi-tan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-16"},{"lineNumber":41,"author":{"gitId":"phiphi-tan"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-16"},{"lineNumber":42,"author":{"gitId":"phiphi-tan"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-16"},{"lineNumber":43,"author":{"gitId":"phiphi-tan"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-16"},{"lineNumber":44,"author":{"gitId":"phiphi-tan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-16"},{"lineNumber":45,"author":{"gitId":"phiphi-tan"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-16"},{"lineNumber":46,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":47,"author":{"gitId":"phiphi-tan"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-16"},{"lineNumber":48,"author":{"gitId":"phiphi-tan"},"content":"        dialog.setTextAlignment(TextAlignment.RIGHT);","lastModifiedDate":"2023-09-23"},{"lineNumber":49,"author":{"gitId":"phiphi-tan"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-16"},{"lineNumber":50,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":51,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":52,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":53,"author":{"gitId":"phiphi-tan"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-16"},{"lineNumber":54,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":55,"author":{"gitId":"phiphi-tan"},"content":"    private void flip() {","lastModifiedDate":"2023-09-16"},{"lineNumber":56,"author":{"gitId":"phiphi-tan"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-16"},{"lineNumber":57,"author":{"gitId":"phiphi-tan"},"content":"        dialog.setTextAlignment(TextAlignment.LEFT);","lastModifiedDate":"2023-09-23"},{"lineNumber":58,"author":{"gitId":"phiphi-tan"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-16"},{"lineNumber":59,"author":{"gitId":"phiphi-tan"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-16"},{"lineNumber":60,"author":{"gitId":"phiphi-tan"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-16"},{"lineNumber":61,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":62,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    //@@author phiphi-tan-reused","lastModifiedDate":"2023-09-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    //Reused from https://github.com/sunzihan23/ip/blob/master/src/main/java/duke/ui/DialogBox.java","lastModifiedDate":"2023-09-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    //with minor modifications","lastModifiedDate":"2023-09-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        db.setBackground(new Background(","lastModifiedDate":"2023-09-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                new BackgroundFill(Color.color(0.85, 0.9, 1),","lastModifiedDate":"2023-09-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                        new CornerRadii(15),","lastModifiedDate":"2023-09-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                        new Insets(5, 15, 5, 15))));","lastModifiedDate":"2023-09-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return db;","lastModifiedDate":"2023-09-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static DialogBox getPhiDialog(String text, Image img) {","lastModifiedDate":"2023-09-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        db.flip();","lastModifiedDate":"2023-09-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        db.setBackground(new Background(","lastModifiedDate":"2023-09-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                new BackgroundFill(Color.color(1, 0.925, 0.925),","lastModifiedDate":"2023-09-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                        new CornerRadii(15),","lastModifiedDate":"2023-09-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                        new Insets(5, 15, 5, 15))));","lastModifiedDate":"2023-09-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return db;","lastModifiedDate":"2023-09-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2023-09-23"},{"lineNumber":85,"author":{"gitId":"phiphi-tan"},"content":"}","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"phiphi-tan":63,"-":22}},{"path":"src/main/java/phi/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"package phi.ui;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"phiphi-tan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":"import phi.Phi;","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"phiphi-tan"},"content":"/**","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"phiphi-tan"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"phiphi-tan"},"content":" */","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"phiphi-tan"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"phiphi-tan"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"phiphi-tan"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"phiphi-tan"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"phiphi-tan"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"phiphi-tan"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"phiphi-tan"},"content":"    private Phi phi;","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"phiphi-tan"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.jpeg\"));","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"phiphi-tan"},"content":"    private final Image phiImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/phi.jpeg\"));","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"phiphi-tan"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"phiphi-tan"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"phiphi-tan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"phiphi-tan"},"content":"        // add the greeting","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"phiphi-tan"},"content":"        dialogContainer.getChildren().add(DialogBox.getPhiDialog(Ui.greeting(), phiImage));","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":36,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"phiphi-tan"},"content":"    public void setPhi(Phi p) {","lastModifiedDate":"2023-09-16"},{"lineNumber":38,"author":{"gitId":"phiphi-tan"},"content":"        this.phi \u003d p;","lastModifiedDate":"2023-09-16"},{"lineNumber":39,"author":{"gitId":"phiphi-tan"},"content":"        // adds the storage loading text","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"phiphi-tan"},"content":"        dialogContainer.getChildren().add(DialogBox.getPhiDialog(phi.getStorageMsg(), phiImage));","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":42,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":43,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":44,"author":{"gitId":"phiphi-tan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing PHI\u0027s reply and then appends them to","lastModifiedDate":"2023-09-16"},{"lineNumber":45,"author":{"gitId":"phiphi-tan"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-16"},{"lineNumber":46,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":47,"author":{"gitId":"phiphi-tan"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":48,"author":{"gitId":"phiphi-tan"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-16"},{"lineNumber":49,"author":{"gitId":"phiphi-tan"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-16"},{"lineNumber":50,"author":{"gitId":"phiphi-tan"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-16"},{"lineNumber":51,"author":{"gitId":"phiphi-tan"},"content":"            PauseTransition pause \u003d new PauseTransition(Duration.seconds(1));","lastModifiedDate":"2023-09-23"},{"lineNumber":52,"author":{"gitId":"phiphi-tan"},"content":"            pause.setOnFinished(event -\u003e {","lastModifiedDate":"2023-09-16"},{"lineNumber":53,"author":{"gitId":"phiphi-tan"},"content":"                // Close the JavaFX application after the delay","lastModifiedDate":"2023-09-16"},{"lineNumber":54,"author":{"gitId":"phiphi-tan"},"content":"                Platform.exit();","lastModifiedDate":"2023-09-16"},{"lineNumber":55,"author":{"gitId":"phiphi-tan"},"content":"            });","lastModifiedDate":"2023-09-16"},{"lineNumber":56,"author":{"gitId":"phiphi-tan"},"content":"            pause.play();","lastModifiedDate":"2023-09-16"},{"lineNumber":57,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":58,"author":{"gitId":"phiphi-tan"},"content":"        String response \u003d phi.getResponse(input);","lastModifiedDate":"2023-09-16"},{"lineNumber":59,"author":{"gitId":"phiphi-tan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-16"},{"lineNumber":60,"author":{"gitId":"phiphi-tan"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-16"},{"lineNumber":61,"author":{"gitId":"phiphi-tan"},"content":"                DialogBox.getPhiDialog(response, phiImage)","lastModifiedDate":"2023-09-16"},{"lineNumber":62,"author":{"gitId":"phiphi-tan"},"content":"        );","lastModifiedDate":"2023-09-16"},{"lineNumber":63,"author":{"gitId":"phiphi-tan"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-16"},{"lineNumber":64,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":65,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":66,"author":{"gitId":"phiphi-tan"},"content":"}","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"phiphi-tan":66}},{"path":"src/main/java/phi/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"package phi.ui;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":" * Represents user interactions","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":"     * Greeting message procedure","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"phiphi-tan"},"content":"    public static String greeting() {","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":"        String logo \u003d \" ___ _  _ ___\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":"                + \"| _ \\\\ || |_ _|\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"phiphi-tan"},"content":"                + \"|  _/ __ || | \\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"phiphi-tan"},"content":"                + \"|_| |_||_|___| \\n\";","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"phiphi-tan"},"content":"        String greetingMsg \u003d \"Wassup nerd! I\u0027m PHI (Programmed Human Interaction)\\nWhat can I do for you?\\n\";","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"phiphi-tan"},"content":"        return logo + \"\\n\" + greetingMsg;","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"phiphi-tan"},"content":"     * Exit message procedure","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"phiphi-tan"},"content":"    public static String goodbye() {","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"phiphi-tan"},"content":"        return \"okay see ya later, nerd\";","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":28,"author":{"gitId":"phiphi-tan"},"content":"     * List of all accepted user commands","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":30,"author":{"gitId":"phiphi-tan"},"content":"    public static String helpMsg() {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"phiphi-tan"},"content":"        return \"Here\u0027s a list of stuff I can do:\\n\"","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"phiphi-tan"},"content":"                + \"1. list (prints out a list of all tasks)\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"phiphi-tan"},"content":"                + \"2. todo [TASK] (creates a task with body \\\"TASK\\\")\\n\"","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"phiphi-tan"},"content":"                + \"3. deadline [TASK] /by [yyyy-MM-dd]\\n\"","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"phiphi-tan"},"content":"                + \"(creates a task with corresponding deadline)\\n\"","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"phiphi-tan"},"content":"                + \"4. event [TASK] /from [yyyy-MM-dd] /to [yyyy-MM-dd]\\n\"","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"phiphi-tan"},"content":"                + \"(creates an event with start and end dates)\\n\"","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"phiphi-tan"},"content":"                + \"5. mark [X] (marks task X in the list)\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":39,"author":{"gitId":"phiphi-tan"},"content":"                + \"6. unmark [X] (unmarks task X in the list)\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"phiphi-tan"},"content":"                + \"7. delete [X] (removes task X from the list)\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":41,"author":{"gitId":"phiphi-tan"},"content":"                + \"8. find [KEYWORD] (searches for tasks that contain corresponding KEYWORD)\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":42,"author":{"gitId":"phiphi-tan"},"content":"                + \"9. bye (exits the program)\";","lastModifiedDate":"2023-09-14"},{"lineNumber":43,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"phiphi-tan"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"phiphi-tan":45}},{"path":"src/main/java/phi/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"package phi.util;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"import phi.task.Deadline;","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":"import phi.task.Event;","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":"import phi.task.ToDo;","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"import phi.ui.Ui;","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":" * Represents the handling of user-commands and making sense of them","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"phiphi-tan"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":"    private final TaskList tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"phiphi-tan"},"content":"    public Parser(TaskList tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"phiphi-tan"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"phiphi-tan"},"content":"     * Method that handles parsing user inputs into its respective commands. Helps to check for user-input errors.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"phiphi-tan"},"content":"     * String output will be handled by the function caller (PHI)","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"phiphi-tan"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"phiphi-tan"},"content":"     * @param input User-input given to PHI","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"phiphi-tan"},"content":"     * @return      Response of the parser to the input, to be printed by PHI","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"phiphi-tan"},"content":"    public String handle(String input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"phiphi-tan"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"phiphi-tan"},"content":"            // Handling of Bye","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"phiphi-tan"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"phiphi-tan"},"content":"                return Ui.goodbye();","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"phiphi-tan"},"content":"                // Handling of List","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"phiphi-tan"},"content":"            } else if (input.startsWith(\"list\")) {","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"phiphi-tan"},"content":"                return handleList(input);","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"phiphi-tan"},"content":"                // Handling of Mark","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"phiphi-tan"},"content":"            } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"phiphi-tan"},"content":"                return tasks.doTask(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"phiphi-tan"},"content":"                // Handling of Unmark","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"phiphi-tan"},"content":"            } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"phiphi-tan"},"content":"                return tasks.undoTask(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"phiphi-tan"},"content":"                // Handling of Todo","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"phiphi-tan"},"content":"            } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"phiphi-tan"},"content":"                return handleTodo(input);","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"phiphi-tan"},"content":"                // Handling of Deadline","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"phiphi-tan"},"content":"            } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"phiphi-tan"},"content":"                return handleDeadline(input);","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"phiphi-tan"},"content":"                // Handling of Event","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"phiphi-tan"},"content":"            } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"phiphi-tan"},"content":"                return handleEvent(input);","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"phiphi-tan"},"content":"                // Handling of Delete","lastModifiedDate":"2023-09-19"},{"lineNumber":49,"author":{"gitId":"phiphi-tan"},"content":"            } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"phiphi-tan"},"content":"                return tasks.deleteFromInput(input);","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"phiphi-tan"},"content":"                // Handling of Help","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"phiphi-tan"},"content":"            } else if (input.equals(\"help\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"phiphi-tan"},"content":"                return Ui.helpMsg();","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"phiphi-tan"},"content":"                // Handling of Find","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"phiphi-tan"},"content":"            } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"phiphi-tan"},"content":"                return handleFind(input);","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"phiphi-tan"},"content":"            }","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":59,"author":{"gitId":"phiphi-tan"},"content":"        } catch (PhiException p) {","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"phiphi-tan"},"content":"            return p.getMessage();","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"phiphi-tan"},"content":"        return (\"I have no idea what you mean... Say \\\"help\\\" to see a list of all available commands\");","lastModifiedDate":"2023-09-19"},{"lineNumber":63,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":65,"author":{"gitId":"phiphi-tan"},"content":"    private String handleList(String input) {","lastModifiedDate":"2023-09-19"},{"lineNumber":66,"author":{"gitId":"phiphi-tan"},"content":"        if (!input.equals(\"list\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"phiphi-tan"},"content":"            return (\"Nice job did you mean \\\"list\\\" coz what you gave wasn\u0027t an accepted input\");","lastModifiedDate":"2023-09-19"},{"lineNumber":68,"author":{"gitId":"phiphi-tan"},"content":"        } else {","lastModifiedDate":"2023-09-19"},{"lineNumber":69,"author":{"gitId":"phiphi-tan"},"content":"            return tasks.printList();","lastModifiedDate":"2023-09-19"},{"lineNumber":70,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":73,"author":{"gitId":"phiphi-tan"},"content":"    private String handleTodo(String input) {","lastModifiedDate":"2023-09-19"},{"lineNumber":74,"author":{"gitId":"phiphi-tan"},"content":"        assert input.startsWith(\"todo\"): \"Invalid input for todo\";","lastModifiedDate":"2023-09-19"},{"lineNumber":75,"author":{"gitId":"phiphi-tan"},"content":"        if (input.equals(\"todo\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"phiphi-tan"},"content":"            return \"You gotta put an actual message in...\";","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"phiphi-tan"},"content":"        } else if (!input.startsWith(\"todo \")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"phiphi-tan"},"content":"            return String.format(\"Hey nice job, did you mean \\\"todo %s\\\"...\", input.substring(4));","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"phiphi-tan"},"content":"        String taskMsg \u003d input.substring(5);","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"phiphi-tan"},"content":"        return tasks.addTask(new ToDo(taskMsg, false));","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":83,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"phiphi-tan"},"content":"    private String handleDeadline(String input) {","lastModifiedDate":"2023-09-19"},{"lineNumber":85,"author":{"gitId":"phiphi-tan"},"content":"        assert input.startsWith(\"deadline\"): \"Invalid input for deadline\";","lastModifiedDate":"2023-09-19"},{"lineNumber":86,"author":{"gitId":"phiphi-tan"},"content":"        if (input.equals(\"deadline\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"phiphi-tan"},"content":"            return \"You gotta put an actual message in...\";","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"phiphi-tan"},"content":"        } else if (!input.startsWith(\"deadline \")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"phiphi-tan"},"content":"            return String.format(\"Hey genius, did you mean \\\"deadline %s\\\"...\", input.substring(8));","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"phiphi-tan"},"content":"        } else if (!input.contains(\"/by\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"phiphi-tan"},"content":"            return \"Look at which moron didn\u0027t add a deadline with the \\\"/by\\\" flag\";","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"phiphi-tan"},"content":"        int byFlag \u003d input.indexOf(\"/by\");","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"phiphi-tan"},"content":"        if (byFlag \u003d\u003d 9) {","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"phiphi-tan"},"content":"            return \"Come on you have to fill in something...\";","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"phiphi-tan"},"content":"        } else if (input.endsWith(\"/by\") || input.endsWith(\"/by \")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"phiphi-tan"},"content":"            return \"Hey you have to give me a deadline!\";","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"phiphi-tan"},"content":"        String taskMsg \u003d input.substring(9, byFlag - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"phiphi-tan"},"content":"        String deadlineString \u003d input.substring(byFlag + 4);","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"phiphi-tan"},"content":"        return tasks.addTask(new Deadline(taskMsg, false, deadlineString));","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":103,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"phiphi-tan"},"content":"    private String handleEvent(String input) {","lastModifiedDate":"2023-09-19"},{"lineNumber":105,"author":{"gitId":"phiphi-tan"},"content":"        assert input.startsWith(\"event\"): \"Invalid input for event\";","lastModifiedDate":"2023-09-19"},{"lineNumber":106,"author":{"gitId":"phiphi-tan"},"content":"        if (input.equals(\"event\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"phiphi-tan"},"content":"            return \"You gotta put an actual message in...\";","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"phiphi-tan"},"content":"        } else if (!input.startsWith(\"event \")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"phiphi-tan"},"content":"            return String.format(\"Hey genius, did you mean \\\"event %s\\\"...\", input.substring(5));","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"phiphi-tan"},"content":"        } else if (!input.contains(\"/from\") \u0026\u0026 !input.contains(\"/to\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"phiphi-tan"},"content":"            return \"Congratulations you\u0027re the only idiot who would leave out both \\\"/from\\\" and \\\"/to\\\" flags\";","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"phiphi-tan"},"content":"        } else if (!input.contains(\"/from\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"phiphi-tan"},"content":"            return \"You\u0027re missing a \u0027 \\\"/from\\\" flag, halfwit\";","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"phiphi-tan"},"content":"        } else if (!input.contains(\"/to\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"phiphi-tan"},"content":"            return \"You\u0027re missing a \\\"/to\\\" flag, dimwit\";","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"phiphi-tan"},"content":"        int fromFlagStart \u003d input.indexOf(\"/from\");","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"phiphi-tan"},"content":"        int fromFlagEnd \u003d fromFlagStart + 6;","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"phiphi-tan"},"content":"        int toFlagStart \u003d input.indexOf(\"/to\");","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"phiphi-tan"},"content":"        int toFlagEnd \u003d toFlagStart + 4;","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"phiphi-tan"},"content":"        if (fromFlagStart \u003e toFlagStart) {","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"phiphi-tan"},"content":"            return \"Please put the \\\"/from\\\" flag before the \\\"/to\\\" flag, thanksss\";","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"phiphi-tan"},"content":"        } else if (fromFlagStart \u003d\u003d 6) {","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"phiphi-tan"},"content":"            return \"Come on you have to fill in something...\";","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"phiphi-tan"},"content":"        } else if (toFlagStart \u003d\u003d fromFlagEnd) {","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"phiphi-tan"},"content":"            return \"Your \\\"/from\\\" flag can\u0027t be empty! Leave a space if you want it blank.\";","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"phiphi-tan"},"content":"        } else if (input.endsWith(\"/to\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"phiphi-tan"},"content":"            return \"Your \\\"/to\\\" flag can\u0027t be empty! Leave a space if you want it blank.\";","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"phiphi-tan"},"content":"        String taskMsg \u003d input.substring(6, fromFlagStart - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"phiphi-tan"},"content":"        String fromStr \u003d input.substring(fromFlagEnd, toFlagStart - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"phiphi-tan"},"content":"        String toStr \u003d input.substring(toFlagEnd);","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"phiphi-tan"},"content":"        return tasks.addTask(new Event(taskMsg, false, fromStr, toStr));","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":135,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"phiphi-tan"},"content":"    private String handleFind(String input) {","lastModifiedDate":"2023-09-19"},{"lineNumber":137,"author":{"gitId":"phiphi-tan"},"content":"        assert input.startsWith(\"find\"): \"Invalid input for find\";","lastModifiedDate":"2023-09-19"},{"lineNumber":138,"author":{"gitId":"phiphi-tan"},"content":"        if (input.equals(\"find\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"phiphi-tan"},"content":"            return \"You gotta put something for me to find...\";","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"phiphi-tan"},"content":"        String keyword \u003d input.substring(5);","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"phiphi-tan"},"content":"        return tasks.findTasks(keyword);","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"phiphi-tan"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"phiphi-tan":144}},{"path":"src/main/java/phi/util/PhiException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"package phi.util;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"public class PhiException extends Exception {","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":"    public PhiException(String message) {","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":"        super(message);","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"phiphi-tan":8}},{"path":"src/main/java/phi/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"package phi.util;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"phiphi-tan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"phiphi-tan"},"content":" * Represents all storage-related methods (reading from file, checking file paths etc.)","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"phiphi-tan"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"phiphi-tan"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"phiphi-tan"},"content":"    private File txtFile;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"phiphi-tan"},"content":"    private Path filePath;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"    private String msg \u003d \"\";","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"phiphi-tan"},"content":"     * Constructor for a new Storage instance.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"phiphi-tan"},"content":"     * If file / file path does not exist, the .txt file and corresponding directories will be created.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"phiphi-tan"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"phiphi-tan"},"content":"     * @param pathString File path for the saved tasklist.txt file (to be read and written to)","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"phiphi-tan"},"content":"    public Storage(String pathString) {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"phiphi-tan"},"content":"        assert pathString.equals(\"./data/tasklist.txt\") : \"Wrong path for this project\";","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"phiphi-tan"},"content":"        this.txtFile \u003d new File(pathString);","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"phiphi-tan"},"content":"        this.filePath \u003d Paths.get(pathString);","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"phiphi-tan"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"phiphi-tan"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"phiphi-tan"},"content":"                Files.createDirectories(filePath.getParent());","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"phiphi-tan"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"phiphi-tan"},"content":"                msg \u003d \"No file found, new .txt file created with sample data!\";","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"phiphi-tan"},"content":"                loadSampleData();","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"phiphi-tan"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"phiphi-tan"},"content":"                msg \u003d e.getMessage();","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"phiphi-tan"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"phiphi-tan"},"content":"     * Reads the input of the stored tasklist .txt file and returns the saved information","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"phiphi-tan"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"phiphi-tan"},"content":"     * @return TaskList object containing the tasks stored in tasklist.txt","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"phiphi-tan"},"content":"    public TaskList readFromFile() {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"phiphi-tan"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"phiphi-tan"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"phiphi-tan"},"content":"            Scanner txtScanner \u003d new Scanner(txtFile);","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"phiphi-tan"},"content":"            while (txtScanner.hasNextLine()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"phiphi-tan"},"content":"                tasks.addFromTxt(txtScanner.nextLine());","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"phiphi-tan"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"phiphi-tan"},"content":"            txtScanner.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"phiphi-tan"},"content":"            msg \u003d msg + \"\\n\" + String.format(\"There\u0027s %d items in the list\\nSay \\\"list\\\" to see them\", tasks.getSize());","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"phiphi-tan"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"phiphi-tan"},"content":"            msg \u003d msg + \"\\n\" + \"Something went wrong... There\u0027s still no file to be found, creating a new one now\";","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"phiphi-tan"},"content":"            return new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"phiphi-tan"},"content":"        return tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"phiphi-tan"},"content":"     * Writes the output of PHI\u0027s current tasklist to the .txt file in storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"phiphi-tan"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"phiphi-tan"},"content":"     * @param taskInput PHI\u0027s current TaskList object","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"phiphi-tan"},"content":"    public void writeToFile(TaskList taskInput) {","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"phiphi-tan"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"phiphi-tan"},"content":"            FileWriter output \u003d new FileWriter(txtFile);","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"phiphi-tan"},"content":"            output.write(taskInput.outputList());","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"phiphi-tan"},"content":"            output.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"phiphi-tan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"phiphi-tan"},"content":"            e.getStackTrace();","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"phiphi-tan"},"content":"    public String getMsg() {","lastModifiedDate":"2023-09-21"},{"lineNumber":80,"author":{"gitId":"phiphi-tan"},"content":"        return this.msg;","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":82,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":83,"author":{"gitId":"phiphi-tan"},"content":"    private void loadSampleData() {","lastModifiedDate":"2023-09-21"},{"lineNumber":84,"author":{"gitId":"phiphi-tan"},"content":"        String sampleData \u003d \"T|false|coding homework\\n\"","lastModifiedDate":"2023-09-21"},{"lineNumber":85,"author":{"gitId":"phiphi-tan"},"content":"        + \"D|true|get better at coding|ASAP\\n\"","lastModifiedDate":"2023-09-21"},{"lineNumber":86,"author":{"gitId":"phiphi-tan"},"content":"        + \"E|false|more coding|now|end of time\\n\"","lastModifiedDate":"2023-09-21"},{"lineNumber":87,"author":{"gitId":"phiphi-tan"},"content":"        + \"T|false|code\\n\"","lastModifiedDate":"2023-09-21"},{"lineNumber":88,"author":{"gitId":"phiphi-tan"},"content":"        + \"D|true|cry|Dec 25 2023\";","lastModifiedDate":"2023-09-21"},{"lineNumber":89,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":90,"author":{"gitId":"phiphi-tan"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":91,"author":{"gitId":"phiphi-tan"},"content":"            FileWriter output \u003d new FileWriter(txtFile);","lastModifiedDate":"2023-09-21"},{"lineNumber":92,"author":{"gitId":"phiphi-tan"},"content":"            output.write(sampleData);","lastModifiedDate":"2023-09-21"},{"lineNumber":93,"author":{"gitId":"phiphi-tan"},"content":"            output.close();","lastModifiedDate":"2023-09-21"},{"lineNumber":94,"author":{"gitId":"phiphi-tan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":95,"author":{"gitId":"phiphi-tan"},"content":"            e.getStackTrace();","lastModifiedDate":"2023-09-21"},{"lineNumber":96,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":97,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":98,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":99,"author":{"gitId":"phiphi-tan"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"phiphi-tan":99}},{"path":"src/main/java/phi/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"package phi.util;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"import phi.task.Deadline;","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":"import phi.task.Event;","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":"import phi.task.Task;","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"import phi.task.ToDo;","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":" * Represents the task list of the chatbot","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"phiphi-tan"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"phiphi-tan"},"content":"public class TaskList {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"phiphi-tan"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"phiphi-tan"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"phiphi-tan"},"content":"    private Task getTask(int i) throws PhiException {","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"phiphi-tan"},"content":"        if (i \u003c\u003d 0 || i \u003e tasks.size()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"phiphi-tan"},"content":"            throw new PhiException(\"this task does not exist, genius..\");","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"phiphi-tan"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"phiphi-tan"},"content":"            return tasks.get(i - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"phiphi-tan"},"content":"     * Marks a task as done and returns the corresponding response message","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"phiphi-tan"},"content":"     * Contains error handling for incorrect user inputs","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"phiphi-tan"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"phiphi-tan"},"content":"     * @param input User-inputted string to be parsed","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"phiphi-tan"},"content":"     * @return      String response","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"phiphi-tan"},"content":"    public String doTask(String input) throws PhiException {","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"phiphi-tan"},"content":"        assert input.startsWith(\"mark\"): \"Invalid input for mark\";","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"phiphi-tan"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"phiphi-tan"},"content":"            int number \u003d Integer.parseInt(input.substring(5));","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"phiphi-tan"},"content":"            Task t \u003d getTask(number);","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"phiphi-tan"},"content":"            t.markDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"phiphi-tan"},"content":"            return \"ALRIGHT NICE I\u0027ll mark this as completed :)\\n\" + t;","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"phiphi-tan"},"content":"        } catch (NumberFormatException | StringIndexOutOfBoundsException n) {","lastModifiedDate":"2023-09-14"},{"lineNumber":44,"author":{"gitId":"phiphi-tan"},"content":"            return \"OI open ur eyes and give a proper input ITS \\\"mark\\\" AND A NUMBER\";","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"phiphi-tan"},"content":"     * Marks a task as undone and returns the corresponding response message","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"phiphi-tan"},"content":"     * Contains error handling for incorrect user inputs","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"phiphi-tan"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"phiphi-tan"},"content":"     * @param input User-inputted string to be parsed","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"phiphi-tan"},"content":"     * @return      String response","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"phiphi-tan"},"content":"    public String undoTask(String input) throws PhiException {","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"phiphi-tan"},"content":"        assert input.startsWith(\"unmark\"): \"Invalid input for unmark\";","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"phiphi-tan"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"phiphi-tan"},"content":"            int number \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"phiphi-tan"},"content":"            Task t \u003d getTask(number);","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"phiphi-tan"},"content":"            t.markUndone();","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"phiphi-tan"},"content":"            return \"Oh nooo I will mark this undone then :(\\n\" + t;","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"phiphi-tan"},"content":"        } catch (NumberFormatException n) {","lastModifiedDate":"2023-09-14"},{"lineNumber":63,"author":{"gitId":"phiphi-tan"},"content":"            return \"OI open ur eyes and give a proper input ITS \\\"unmark\\\" AND A NUMBER\";","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":68,"author":{"gitId":"phiphi-tan"},"content":"     * Adds a task to the TaskList","lastModifiedDate":"2023-09-14"},{"lineNumber":69,"author":{"gitId":"phiphi-tan"},"content":"     * @param task Task to be added","lastModifiedDate":"2023-09-14"},{"lineNumber":70,"author":{"gitId":"phiphi-tan"},"content":"     * @return     String with the tasklist information","lastModifiedDate":"2023-09-14"},{"lineNumber":71,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":72,"author":{"gitId":"phiphi-tan"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"phiphi-tan"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"phiphi-tan"},"content":"        return \"Added:\\n\" + task;","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"phiphi-tan"},"content":"     * Deletes a task from the list and returns the corresponding response message","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"phiphi-tan"},"content":"     * Contains error handling for incorrect user inputs","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"phiphi-tan"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"phiphi-tan"},"content":"     * @param input User-inputted string to be parsed","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"phiphi-tan"},"content":"     * @return      String response","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"phiphi-tan"},"content":"    public String deleteFromInput(String input) throws PhiException {","lastModifiedDate":"2023-09-21"},{"lineNumber":85,"author":{"gitId":"phiphi-tan"},"content":"        assert input.startsWith(\"delete\"): \"Invalid input for delete\";","lastModifiedDate":"2023-09-19"},{"lineNumber":86,"author":{"gitId":"phiphi-tan"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"phiphi-tan"},"content":"            int number \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2023-08-23"},{"lineNumber":88,"author":{"gitId":"phiphi-tan"},"content":"            return deleteTask(number);","lastModifiedDate":"2023-09-19"},{"lineNumber":89,"author":{"gitId":"phiphi-tan"},"content":"        } catch (NumberFormatException n) {","lastModifiedDate":"2023-09-14"},{"lineNumber":90,"author":{"gitId":"phiphi-tan"},"content":"            return \"Ugh to delete stuff, you have to input \\\"delete\\\" and the number...\";","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":92,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":93,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":94,"author":{"gitId":"phiphi-tan"},"content":"    private String deleteTask(int i) throws PhiException {","lastModifiedDate":"2023-09-21"},{"lineNumber":95,"author":{"gitId":"phiphi-tan"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-19"},{"lineNumber":96,"author":{"gitId":"phiphi-tan"},"content":"        Task t \u003d getTask(i);","lastModifiedDate":"2023-09-19"},{"lineNumber":97,"author":{"gitId":"phiphi-tan"},"content":"        output +\u003d String.format(\"Alright say bye bye to task %d!\\n%s\\n\", i, t.toString());","lastModifiedDate":"2023-09-19"},{"lineNumber":98,"author":{"gitId":"phiphi-tan"},"content":"        this.tasks.remove(t);","lastModifiedDate":"2023-09-19"},{"lineNumber":99,"author":{"gitId":"phiphi-tan"},"content":"        return output + String.format(\"There\u0027s %d task(s) in the list now.\\n\", tasks.size());","lastModifiedDate":"2023-09-19"},{"lineNumber":100,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":101,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":102,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":103,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"phiphi-tan"},"content":"     * Prints the current task list. If list is empty, returns a corresponding response message","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"phiphi-tan"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"phiphi-tan"},"content":"     * @return String representation of task list","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"phiphi-tan"},"content":"    public String printList() {","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"phiphi-tan"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"phiphi-tan"},"content":"            return \"You do know that to SHOW a list there has to be stuff INSIDE the (currently empty) list right?\";","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"phiphi-tan"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":112,"author":{"gitId":"phiphi-tan"},"content":"            StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"phiphi-tan"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"phiphi-tan"},"content":"                output.append(String.format(\"%d.%s\\n\", tasks.indexOf(t) + 1, t.toString()));","lastModifiedDate":"2023-09-19"},{"lineNumber":115,"author":{"gitId":"phiphi-tan"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":116,"author":{"gitId":"phiphi-tan"},"content":"            return output.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":118,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":119,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"phiphi-tan"},"content":"     * Adds a task into the list from input given by the stored tasklist.txt file","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"phiphi-tan"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"phiphi-tan"},"content":"     * @param input each individual line of input in the .txt file","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"phiphi-tan"},"content":"    public void addFromTxt(String input) {","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"phiphi-tan"},"content":"        Scanner sc \u003d new Scanner(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"phiphi-tan"},"content":"        sc.useDelimiter(\"\\\\|\");","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"phiphi-tan"},"content":"        // parameter handling","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"phiphi-tan"},"content":"        String taskType \u003d sc.next();","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"phiphi-tan"},"content":"        boolean isComplete \u003d Boolean.parseBoolean(sc.next());","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"phiphi-tan"},"content":"        String taskMsg \u003d sc.next();","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"phiphi-tan"},"content":"        switch (taskType) {","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"phiphi-tan"},"content":"        case \"T\":","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"phiphi-tan"},"content":"            this.tasks.add(new ToDo(taskMsg, isComplete));","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"phiphi-tan"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"phiphi-tan"},"content":"        // deadline task","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"phiphi-tan"},"content":"        case \"D\":","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"phiphi-tan"},"content":"            String deadline \u003d sc.next();","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"phiphi-tan"},"content":"            this.tasks.add(new Deadline(taskMsg, isComplete, deadline));","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"phiphi-tan"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"phiphi-tan"},"content":"        // event task","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"phiphi-tan"},"content":"        case \"E\":","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"phiphi-tan"},"content":"            String start \u003d sc.next();","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"phiphi-tan"},"content":"            String end \u003d sc.next();","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"phiphi-tan"},"content":"            this.tasks.add(new Event(taskMsg, isComplete, start, end));","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"phiphi-tan"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"phiphi-tan"},"content":"        default:","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"phiphi-tan"},"content":"            System.out.println(\"something went wrong...\");","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"phiphi-tan"},"content":"            break;","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":155,"author":{"gitId":"phiphi-tan"},"content":"     * Returns the entire tasklist in output format, to be written by a Storage object.","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"phiphi-tan"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":157,"author":{"gitId":"phiphi-tan"},"content":"     * @return A String containing the entire task list, formatted in output style.","lastModifiedDate":"2023-09-02"},{"lineNumber":158,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":159,"author":{"gitId":"phiphi-tan"},"content":"    public String outputList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"phiphi-tan"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"phiphi-tan"},"content":"        for (Task t : this.tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":162,"author":{"gitId":"phiphi-tan"},"content":"            output.append(t.outputFormat()).append(\"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"phiphi-tan"},"content":"        return output.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"phiphi-tan"},"content":"    public int getSize() {","lastModifiedDate":"2023-09-14"},{"lineNumber":168,"author":{"gitId":"phiphi-tan"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-09-02"},{"lineNumber":169,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":170,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":171,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":172,"author":{"gitId":"phiphi-tan"},"content":"     * Returns the list of all tasks that match the given String keyword","lastModifiedDate":"2023-09-14"},{"lineNumber":173,"author":{"gitId":"phiphi-tan"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":174,"author":{"gitId":"phiphi-tan"},"content":"     * @param searchString Keyword to be searched for","lastModifiedDate":"2023-09-14"},{"lineNumber":175,"author":{"gitId":"phiphi-tan"},"content":"     * @return             Concatenated String of all tasks containing argument keyword","lastModifiedDate":"2023-09-14"},{"lineNumber":176,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":177,"author":{"gitId":"phiphi-tan"},"content":"    public String findTasks(String searchString) {","lastModifiedDate":"2023-09-02"},{"lineNumber":178,"author":{"gitId":"phiphi-tan"},"content":"        StringBuilder output \u003d new StringBuilder(\"Here\u0027s all the tasks that match your keyword!\\n\");","lastModifiedDate":"2023-09-02"},{"lineNumber":179,"author":{"gitId":"phiphi-tan"},"content":"        for (Task t : this.tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":180,"author":{"gitId":"phiphi-tan"},"content":"            if (t.getMsg().contains(searchString)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":181,"author":{"gitId":"phiphi-tan"},"content":"                output.append(t).append(\"\\n\");","lastModifiedDate":"2023-09-02"},{"lineNumber":182,"author":{"gitId":"phiphi-tan"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":183,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":184,"author":{"gitId":"phiphi-tan"},"content":"        return output.toString();","lastModifiedDate":"2023-09-02"},{"lineNumber":185,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":186,"author":{"gitId":"phiphi-tan"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"phiphi-tan":186}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"phiphi-tan"},"content":"        \u003cText fx:id\u003d\"dialog\" lineSpacing\u003d\"3.0\" style\u003d\"-fx-font-family: monospaced;\" text\u003d\"Text\" wrappingWidth\u003d\"400\"\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":"                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":13,"author":{"gitId":"phiphi-tan"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":14,"author":{"gitId":"phiphi-tan"},"content":"        \u003c/Text\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":15,"author":{"gitId":"phiphi-tan"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"phiphi-tan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"phiphi-tan"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"phiphi-tan"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"phiphi-tan"},"content":"   \u003copaqueInsets\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":21,"author":{"gitId":"phiphi-tan"},"content":"      \u003cInsets /\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":22,"author":{"gitId":"phiphi-tan"},"content":"   \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":23,"author":{"gitId":"phiphi-tan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"phiphi-tan":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"phiphi-tan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"800.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"phi.ui.MainWindow\"\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"658.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"40.0\" prefWidth\u003d\"524.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":13,"author":{"gitId":"phiphi-tan"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"524.0\" layoutY\u003d\"758.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"40.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-font-family: monospace;\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":14,"author":{"gitId":"phiphi-tan"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"760.0\" prefWidth\u003d\"600.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":15,"author":{"gitId":"phiphi-tan"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"phiphi-tan"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"588.0\"\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":17,"author":{"gitId":"phiphi-tan"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"                  \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":19,"author":{"gitId":"phiphi-tan"},"content":"               \u003c/padding\u003e\u003c/VBox\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":20,"author":{"gitId":"phiphi-tan"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"phiphi-tan"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"phiphi-tan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"phiphi-tan"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"phiphi-tan":23}},{"path":"src/test/java/phi/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"package phi.util;","lastModifiedDate":"2023-09-23"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":"    public void handleInvalidInput() {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"phiphi-tan"},"content":"        String expected \u003d \"SIKE I can\u0027t process that!\"","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":"                + \" Try again or say \\\"help\\\" to see a list of all available commands\";","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":"        assertEquals(expected, new Parser(new TaskList()).handle(\"invalid\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"phiphi-tan"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"phiphi-tan"},"content":"    public void helpInput() {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"phiphi-tan"},"content":"        String expected \u003d \"Here\u0027s a list of commands:\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"                + \"1. list (prints out a list of all tasks)\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"phiphi-tan"},"content":"                + \"2. todo [TASK] (creates a to-do with body \\\"TASK\\\")\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"phiphi-tan"},"content":"                + \"3. deadline [TASK] /by [yyyy-MM-dd] (creates a corresponding deadline with body \\\"TASK\\\")\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"phiphi-tan"},"content":"                + \"4. event [TASK] /from [yyyy-MM-dd] /to [yyyy-MM-dd]\"","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"phiphi-tan"},"content":"                + \" (creates a corresponding event with body \\\"TASK\\\")\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"phiphi-tan"},"content":"                + \"5. mark [X] (marks task X in the list)\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"phiphi-tan"},"content":"                + \"6. unmark [X] (unmarks task X in the list)\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":25,"author":{"gitId":"phiphi-tan"},"content":"                + \"7. delete [X] (removes task X from the list)\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":26,"author":{"gitId":"phiphi-tan"},"content":"                + \"8. find [KEYWORD] (searches for tasks that contain corresponding KEYWORD)\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"phiphi-tan"},"content":"                + \"9. bye (exits the program)\";","lastModifiedDate":"2023-09-14"},{"lineNumber":28,"author":{"gitId":"phiphi-tan"},"content":"        assertEquals(expected, new Parser(new TaskList()).handle(\"help\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"phiphi-tan"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"phiphi-tan":30}},{"path":"src/test/java/phi/util/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"package phi.util;","lastModifiedDate":"2023-09-23"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"import phi.task.ToDo;","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"phiphi-tan"},"content":"    public void markValid() {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":"        TaskList test \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":"        test.addTask(new ToDo(\"coding\", false));","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"phiphi-tan"},"content":"        String expected \u003d \"ALRIGHT NICE I\u0027ll mark this as completed :)\\n[T][X] coding\";","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"phiphi-tan"},"content":"        String result;","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"phiphi-tan"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"phiphi-tan"},"content":"            result \u003d test.doTask(\"mark 1\");","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"        } catch (PhiException p) {","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"phiphi-tan"},"content":"            result \u003d p.getMessage();","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"phiphi-tan"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"phiphi-tan"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"phiphi-tan"},"content":"    public void markInvalid() {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"phiphi-tan"},"content":"        TaskList test \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"phiphi-tan"},"content":"        test.addTask(new ToDo(\"coding\", false));","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"phiphi-tan"},"content":"        String expected \u003d \"OI open ur eyes and give a proper input ITS \\\"mark\\\" AND A NUMBER\";","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"phiphi-tan"},"content":"        String result;","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"phiphi-tan"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"phiphi-tan"},"content":"            result \u003d test.doTask(\"mark\");","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"phiphi-tan"},"content":"        } catch (PhiException p) {","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"phiphi-tan"},"content":"            result \u003d p.getMessage();","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"phiphi-tan"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"phiphi-tan"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"phiphi-tan"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"phiphi-tan"},"content":"    public void todoValid() {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"phiphi-tan"},"content":"        String expected \u003d \"Added:\\n[T][ ] coding\";","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"phiphi-tan"},"content":"        assertEquals(expected, new TaskList().addTask(new ToDo(\"coding\", false)));","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"phiphi-tan"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"phiphi-tan":47}}]
