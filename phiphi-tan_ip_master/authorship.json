[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"# PHI :dragon_face: :rowboat:","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"\u003e\"Coding is a mental construct, just think more computing thoughts\" - Me","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":"*PHI* frees your mind of having to remember things you need to do. It\u0027s","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"- text-based","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"- easy to figure out","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":"- encapsulates the very human touch of having somebody exasperated with your improper user inputs.","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"phiphi-tan"},"content":"All you need to do is:","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":"1. Download it from [here](https://github.com/phiphi-tan/ip)","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":"2. Clone it (and stop complaining)","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"phiphi-tan"},"content":"3. Do your stuff and watch it manage your tasks for you","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"phiphi-tan"},"content":"Best part of all, it is completely **FREE** (~~unlike its creator~~)!","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"phiphi-tan"},"content":"Look at all the things it can do:","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"- [x] Managing to-do items","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"phiphi-tan"},"content":"- [x] Managing tasks with deadlines","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"phiphi-tan"},"content":"- [x] Managing events","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"phiphi-tan"},"content":"- [x] Search feature for keywords","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"phiphi-tan"},"content":"- [ ] Reminders (coming soon, or not)","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"phiphi-tan"},"content":"----","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"phiphi-tan"},"content":"Since you\u0027re still here, here\u0027s a chunk of code for you to test out your coding abilities:","lastModifiedDate":"2023-09-14"},{"lineNumber":25,"author":{"gitId":"phiphi-tan"},"content":"   ```java","lastModifiedDate":"2023-09-14"},{"lineNumber":26,"author":{"gitId":"phiphi-tan"},"content":"   /*","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"phiphi-tan"},"content":"   Welcome to","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"phiphi-tan"},"content":"    ___ _  _ ___","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"phiphi-tan"},"content":"   | _ \\ || |_ _|","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"phiphi-tan"},"content":"   |  _/ __ || | ","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"phiphi-tan"},"content":"   |_| |_||_|___|","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"phiphi-tan"},"content":"   PHI (Programmable Human Interface)","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"phiphi-tan"},"content":"   */","lastModifiedDate":"2023-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"phiphi-tan"},"content":"public class Main {","lastModifiedDate":"2023-09-14"},{"lineNumber":36,"author":{"gitId":"phiphi-tan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-14"},{"lineNumber":37,"author":{"gitId":"phiphi-tan"},"content":"        System.out.println(\"You are a nerd\");","lastModifiedDate":"2023-09-14"},{"lineNumber":38,"author":{"gitId":"phiphi-tan"},"content":"    }  ","lastModifiedDate":"2023-09-14"},{"lineNumber":39,"author":{"gitId":"phiphi-tan"},"content":"}","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"phiphi-tan"},"content":"```","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"phiphi-tan":35,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"}","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":"checkstyle {","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"phiphi-tan"},"content":"    mainClass.set(\"phi.Phi\")","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"phiphi-tan"},"content":"    archiveBaseName \u003d \"phi\"","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"phiphi-tan":7}},{"path":"changelog.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"# CS2103T Individual Project (iP)","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"This is a project log for my individual project","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":"   ```","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":"   Welcome to","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"    ___ _  _ ___","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"   | _ \\ || |_ _|","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":"   |  _/ __ || | ","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":"   |_| |_||_|___|","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"phiphi-tan"},"content":"   PHI (Programmable Human Interface)","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":"   ```","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":"---","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"phiphi-tan"},"content":"## Main Increments","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"phiphi-tan"},"content":"### Level 0. Rename, Greet, Exit","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"phiphi-tan"},"content":"- Chatbot was created and given the name Phi","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"phiphi-tan"},"content":"- Greets the user and exits the program","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"phiphi-tan"},"content":"### Level 1. Echo","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"phiphi-tan"},"content":"- PHI now echoes commands entered by the user","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"phiphi-tan"},"content":"- Exits when the user types the command _bye_","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"phiphi-tan"},"content":"### Level 2. Add, List","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"phiphi-tan"},"content":"- Text entered by the user will be saved as a task","lastModifiedDate":"2023-09-14"},{"lineNumber":25,"author":{"gitId":"phiphi-tan"},"content":"- Tasks are displayed in a list upon command _list_","lastModifiedDate":"2023-09-14"},{"lineNumber":26,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"phiphi-tan"},"content":"### Level 3. Mark as Done","lastModifiedDate":"2023-09-14"},{"lineNumber":28,"author":{"gitId":"phiphi-tan"},"content":"- Tasks can now be marked as done (and undone)","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":30,"author":{"gitId":"phiphi-tan"},"content":"### Level 4. ToDos, Events, Deadlines","lastModifiedDate":"2023-09-14"},{"lineNumber":31,"author":{"gitId":"phiphi-tan"},"content":"- Tasks are now classified under one of three types:","lastModifiedDate":"2023-09-14"},{"lineNumber":32,"author":{"gitId":"phiphi-tan"},"content":"  - ToDos: Tasks without any date/time","lastModifiedDate":"2023-09-14"},{"lineNumber":33,"author":{"gitId":"phiphi-tan"},"content":"  - Deadlines: Tasks to be done before a specified deadline","lastModifiedDate":"2023-09-14"},{"lineNumber":34,"author":{"gitId":"phiphi-tan"},"content":"  - Events: Tasks that start and end at a specified time","lastModifiedDate":"2023-09-14"},{"lineNumber":35,"author":{"gitId":"phiphi-tan"},"content":"  ","lastModifiedDate":"2023-09-14"},{"lineNumber":36,"author":{"gitId":"phiphi-tan"},"content":"### Level 5. Handle Errors","lastModifiedDate":"2023-09-14"},{"lineNumber":37,"author":{"gitId":"phiphi-tan"},"content":"- PHI can deal with basic-level errors (incorrect inputs) entered by the user","lastModifiedDate":"2023-09-14"},{"lineNumber":38,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":39,"author":{"gitId":"phiphi-tan"},"content":"### Level 6. Delete","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"phiphi-tan"},"content":"- Tasks can now be deleted from the list","lastModifiedDate":"2023-09-14"},{"lineNumber":41,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":42,"author":{"gitId":"phiphi-tan"},"content":"### Level 7. Save","lastModifiedDate":"2023-09-14"},{"lineNumber":43,"author":{"gitId":"phiphi-tan"},"content":"- Tasks are saved in storage whenever any changes are made to the task list","lastModifiedDate":"2023-09-14"},{"lineNumber":44,"author":{"gitId":"phiphi-tan"},"content":"- Data from the tasklist is loaded from the storage when PHI starts (_./data/tasklist.txt_)","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"phiphi-tan"},"content":"### Level 8. Dates and Times","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"phiphi-tan"},"content":"- Deadline/Event dates can now be understood in yyyy-MM-dd format, and are displayed back as MMM dd yyyy","lastModifiedDate":"2023-09-14"},{"lineNumber":48,"author":{"gitId":"phiphi-tan"},"content":"  - Non-recognised formats will continue to be saved as a String","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"phiphi-tan"},"content":"### Level 9. Find","lastModifiedDate":"2023-09-14"},{"lineNumber":51,"author":{"gitId":"phiphi-tan"},"content":"- Users can now find tasks by searching for a keyword","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":53,"author":{"gitId":"phiphi-tan"},"content":"## Other Increments","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":55,"author":{"gitId":"phiphi-tan"},"content":"### Automated Text UI Testing","lastModifiedDate":"2023-09-14"},{"lineNumber":56,"author":{"gitId":"phiphi-tan"},"content":"- Testing of PHI is semi-automated through I/O redirection (text-ui-test)","lastModifiedDate":"2023-09-14"},{"lineNumber":57,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":58,"author":{"gitId":"phiphi-tan"},"content":"### Enumerations","lastModifiedDate":"2023-09-14"},{"lineNumber":59,"author":{"gitId":"phiphi-tan"},"content":"- Enumerations used for the Tasks data-type","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":61,"author":{"gitId":"phiphi-tan"},"content":"### More OOP","lastModifiedDate":"2023-09-14"},{"lineNumber":62,"author":{"gitId":"phiphi-tan"},"content":"- Extraction of code as classes for more Object-Oriented-Programming (OOP)","lastModifiedDate":"2023-09-14"},{"lineNumber":63,"author":{"gitId":"phiphi-tan"},"content":"  - Creating/Refining the following classes (Ui, Storage, Parser, TaskList)","lastModifiedDate":"2023-09-14"},{"lineNumber":64,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":65,"author":{"gitId":"phiphi-tan"},"content":"### Packages","lastModifiedDate":"2023-09-14"},{"lineNumber":66,"author":{"gitId":"phiphi-tan"},"content":"- Classes in PHI are organised into suitable java packages","lastModifiedDate":"2023-09-14"},{"lineNumber":67,"author":{"gitId":"phiphi-tan"},"content":"  - Currently, all classes are in one package (_phi_)","lastModifiedDate":"2023-09-14"},{"lineNumber":68,"author":{"gitId":"phiphi-tan"},"content":"  ","lastModifiedDate":"2023-09-14"},{"lineNumber":69,"author":{"gitId":"phiphi-tan"},"content":"### Gradle","lastModifiedDate":"2023-09-14"},{"lineNumber":70,"author":{"gitId":"phiphi-tan"},"content":"- Support for Gradle added to PHI, allowing automation of some build/run tasks","lastModifiedDate":"2023-09-14"},{"lineNumber":71,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":72,"author":{"gitId":"phiphi-tan"},"content":"### JUnit Tests","lastModifiedDate":"2023-09-14"},{"lineNumber":73,"author":{"gitId":"phiphi-tan"},"content":"- JUnit tests created to test code behaviour","lastModifiedDate":"2023-09-14"},{"lineNumber":74,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":75,"author":{"gitId":"phiphi-tan"},"content":"### JAR File","lastModifiedDate":"2023-09-14"},{"lineNumber":76,"author":{"gitId":"phiphi-tan"},"content":"- **phi.jar v1.0.0** released","lastModifiedDate":"2023-09-14"},{"lineNumber":77,"author":{"gitId":"phiphi-tan"},"content":"  - PHI packaged into an executable JAR file (built using Gradle) for easier distribution","lastModifiedDate":"2023-09-14"},{"lineNumber":78,"author":{"gitId":"phiphi-tan"},"content":"  - ","lastModifiedDate":"2023-09-14"},{"lineNumber":79,"author":{"gitId":"phiphi-tan"},"content":"### JavaDoc","lastModifiedDate":"2023-09-14"},{"lineNumber":80,"author":{"gitId":"phiphi-tan"},"content":"- JavaDoc header comments added to all classes and all non-trivial methods","lastModifiedDate":"2023-09-14"},{"lineNumber":81,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":82,"author":{"gitId":"phiphi-tan"},"content":"### Coding Standard","lastModifiedDate":"2023-09-14"},{"lineNumber":83,"author":{"gitId":"phiphi-tan"},"content":"- Code should now comply with the given coding standard for this project","lastModifiedDate":"2023-09-14"},{"lineNumber":84,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":85,"author":{"gitId":"phiphi-tan"},"content":"### Checkstyle","lastModifiedDate":"2023-09-14"},{"lineNumber":86,"author":{"gitId":"phiphi-tan"},"content":"- CheckStyle now incorporated to detect coding style violations. Configured to be used with Gradle","lastModifiedDate":"2023-09-14"},{"lineNumber":87,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":88,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":89,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":90,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":91,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":92,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":93,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":94,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":95,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":96,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":97,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"phiphi-tan":97}},{"path":"data/tasklist.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"T|true|cry","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"T|false|coding homework","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"D|false|get better at coding|ASAP","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":"E|false|more coding|now|end of time","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":"D|true|something|Dec 03 2011","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"T|false|code","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"phiphi-tan":6}},{"path":"src/main/java/phi/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"package phi;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":" * Represents the Deadline task type, and contains a String with a user-specified date as the deadline of a task","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"phiphi-tan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":"    private String deadlineString;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"phiphi-tan"},"content":"     * Constructor for a new Deadline instance","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"phiphi-tan"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"phiphi-tan"},"content":"     * @param msg       Task message to be displayed","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"phiphi-tan"},"content":"     * @param isDone    Boolean determining if task is completed","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"     * @param deadline  User-specified deadline of task","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"phiphi-tan"},"content":"    public Deadline(String msg, boolean isDone, String deadline) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"phiphi-tan"},"content":"        super(Type.D, isDone, msg);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"phiphi-tan"},"content":"        this.deadlineString \u003d deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"phiphi-tan"},"content":"        LocalDate deadlineDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"phiphi-tan"},"content":"        DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"phiphi-tan"},"content":"        DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"phiphi-tan"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"phiphi-tan"},"content":"            deadlineDate \u003d LocalDate.parse(deadlineString, inputFormat);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"phiphi-tan"},"content":"            this.deadlineString \u003d deadlineDate.format(outputFormat);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"phiphi-tan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"phiphi-tan"},"content":"            //System.out.println(\"Can\u0027t find a proper date format, using deadline as a String\");","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"phiphi-tan"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"phiphi-tan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"phiphi-tan"},"content":"        return super.toString() + String.format(\" (by: %s)\", deadlineString);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"phiphi-tan"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"phiphi-tan"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"phiphi-tan"},"content":"    public String outputFormat() {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"phiphi-tan"},"content":"        return String.format(\"%s|%b|%s|%s\", taskType.toString(), done, taskName, deadlineString);","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"phiphi-tan"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"phiphi-tan":47}},{"path":"src/main/java/phi/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"package phi;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":" * Represents the Event task type, and contains two Strings with user-specified dates as the start and end of a task","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"phiphi-tan"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":"    private String start;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":"    private String end;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"phiphi-tan"},"content":"     * Constructor for a new Event instance","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"phiphi-tan"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"phiphi-tan"},"content":"     * @param msg       message to be displayed","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"     * @param isDone    Boolean determining if task is completed","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"phiphi-tan"},"content":"     * @param start     User-specified start time of task","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"phiphi-tan"},"content":"     * @param end       User-specified end time of task","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"phiphi-tan"},"content":"    public Event(String msg, boolean isDone, String start, String end) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"phiphi-tan"},"content":"        super(Type.E, isDone, msg);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"phiphi-tan"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"phiphi-tan"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"phiphi-tan"},"content":"        LocalDate startDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"phiphi-tan"},"content":"        LocalDate endDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"phiphi-tan"},"content":"        DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"phiphi-tan"},"content":"        DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"phiphi-tan"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"phiphi-tan"},"content":"            startDate \u003d LocalDate.parse(start, inputFormat);","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"phiphi-tan"},"content":"            this.start \u003d startDate.format(outputFormat);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"phiphi-tan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"phiphi-tan"},"content":"            //System.out.println(\"Can\u0027t find a proper date format, using /from input as a String\");","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"phiphi-tan"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"phiphi-tan"},"content":"            endDate \u003d LocalDate.parse(end, inputFormat);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"phiphi-tan"},"content":"            this.end \u003d endDate.format(outputFormat);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"phiphi-tan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"phiphi-tan"},"content":"            //System.out.println(\"Can\u0027t find a proper date format, using /to input as a String\");","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"phiphi-tan"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"phiphi-tan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"phiphi-tan"},"content":"        return super.toString() + String.format(\" (from: %s to: %s)\", start, end);","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"phiphi-tan"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"phiphi-tan"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"phiphi-tan"},"content":"    public String outputFormat() {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"phiphi-tan"},"content":"        return String.format(\"%s|%b|%s|%s|%s\", taskType.toString(), done, taskName, start, end);","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"phiphi-tan"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"phiphi-tan":59}},{"path":"src/main/java/phi/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"package phi;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":" * Represents the handling of user-commands and making sense of them","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"    private final TaskList tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":"    public Parser(TaskList tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"phiphi-tan"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"phiphi-tan"},"content":"     * Method that handles parsing user inputs into its respective commands. Helps to check for user-input errors.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"phiphi-tan"},"content":"     * String output will be handled by the function caller (PHI)","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"phiphi-tan"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"phiphi-tan"},"content":"     * @param input User-input given to PHI","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"     * @return      Response of the parser to the input, to be printed by PHI","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"phiphi-tan"},"content":"    public String handle(String input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"phiphi-tan"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"phiphi-tan"},"content":"            if (input.startsWith(\"list\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"phiphi-tan"},"content":"                if (!input.equals(\"list\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"phiphi-tan"},"content":"                    return (\"Nice job did you mean \\\"list\\\" coz what you gave wasn\u0027t an accepted input\");","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"phiphi-tan"},"content":"                } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"phiphi-tan"},"content":"                    return tasks.printList();","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"phiphi-tan"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"phiphi-tan"},"content":"            } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"phiphi-tan"},"content":"                return tasks.doTask(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"phiphi-tan"},"content":"            } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"phiphi-tan"},"content":"                return tasks.undoTask(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"phiphi-tan"},"content":"            // Handling of Todo","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"phiphi-tan"},"content":"            } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"phiphi-tan"},"content":"                if (input.equals(\"todo\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"phiphi-tan"},"content":"                    return \"You gotta put an actual message in...\";","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"phiphi-tan"},"content":"                } else if (!input.startsWith(\"todo \")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"phiphi-tan"},"content":"                    return String.format(\"Hey nice job, did you mean \\\"todo %s\\\"...\", input.substring(4));","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"phiphi-tan"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"phiphi-tan"},"content":"                String taskMsg \u003d input.substring(5);","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"phiphi-tan"},"content":"                return tasks.addTask(new ToDo(taskMsg, false));","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"phiphi-tan"},"content":"            // Handling of Deadline","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"phiphi-tan"},"content":"            } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"phiphi-tan"},"content":"                if (input.equals(\"deadline\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"phiphi-tan"},"content":"                    return \"You gotta put an actual message in...\";","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"phiphi-tan"},"content":"                } else if (!input.startsWith(\"deadline \")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"phiphi-tan"},"content":"                    return String.format(\"Hey genius, did you mean \\\"deadline %s\\\"...\", input.substring(8));","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"phiphi-tan"},"content":"                } else if (!input.contains(\"/by\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"phiphi-tan"},"content":"                    return \"Look at which moron didn\u0027t add a deadline with the \\\"/by\\\" flag\";","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"phiphi-tan"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"phiphi-tan"},"content":"                int byFlag \u003d input.indexOf(\"/by\");","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"phiphi-tan"},"content":"                if (byFlag \u003d\u003d 9) {","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"phiphi-tan"},"content":"                    return \"Come on you have to fill in something...\";","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"phiphi-tan"},"content":"                } else if (input.endsWith(\"/by\") || input.endsWith(\"/by \")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"phiphi-tan"},"content":"                    return \"Hey you have to give me a deadline!\";","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"phiphi-tan"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"phiphi-tan"},"content":"                String taskMsg \u003d input.substring(9, byFlag - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"phiphi-tan"},"content":"                String deadlineString \u003d input.substring(byFlag + 4);","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"phiphi-tan"},"content":"                return tasks.addTask(new Deadline(taskMsg, false, deadlineString));","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"phiphi-tan"},"content":"            // Handling of Event","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"phiphi-tan"},"content":"            } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"phiphi-tan"},"content":"                if (input.equals(\"event\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"phiphi-tan"},"content":"                    return \"You gotta put an actual message in...\";","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"phiphi-tan"},"content":"                } else if (!input.startsWith(\"event \")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"phiphi-tan"},"content":"                    return String.format(\"Hey genius, did you mean \\\"event %s\\\"...\", input.substring(5));","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"phiphi-tan"},"content":"                } else if (!input.contains(\"/from\") \u0026\u0026 !input.contains(\"/to\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"phiphi-tan"},"content":"                    return \"Congratulations you\u0027re the only idiot who would leave out both \\\"/from\\\" and \\\"/to\\\" flags\";","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"phiphi-tan"},"content":"                } else if (!input.contains(\"/from\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"phiphi-tan"},"content":"                    return \"You\u0027re missing a \u0027 \\\"/from\\\" flag, halfwit\";","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"phiphi-tan"},"content":"                } else if (!input.contains(\"/to\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"phiphi-tan"},"content":"                    return \"You\u0027re missing a \\\"/to\\\" flag, dimwit\";","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"phiphi-tan"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"phiphi-tan"},"content":"                int fromFlagStart \u003d input.indexOf(\"/from\");","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"phiphi-tan"},"content":"                int fromFlagEnd \u003d fromFlagStart + 6;","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"phiphi-tan"},"content":"                int toFlagStart \u003d input.indexOf(\"/to\");","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"phiphi-tan"},"content":"                int toFlagEnd \u003d toFlagStart + 4;","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"phiphi-tan"},"content":"                if (fromFlagStart \u003e toFlagStart) {","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"phiphi-tan"},"content":"                    return \"Please put the \\\"/from\\\" flag before the \\\"/to\\\" flag, thanksss\";","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"phiphi-tan"},"content":"                } else if (fromFlagStart \u003d\u003d 6) {","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"phiphi-tan"},"content":"                    return \"Come on you have to fill in something...\";","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"phiphi-tan"},"content":"                } else if (toFlagStart \u003d\u003d fromFlagEnd) {","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"phiphi-tan"},"content":"                    return \"Your \\\"/from\\\" flag can\u0027t be empty! Leave a space if you want it blank.\";","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"phiphi-tan"},"content":"                } else if (input.endsWith(\"/to\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"phiphi-tan"},"content":"                    return \"Your \\\"/to\\\" flag can\u0027t be empty! Leave a space if you want it blank.\";","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"phiphi-tan"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"phiphi-tan"},"content":"                String taskMsg \u003d input.substring(6, fromFlagStart - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"phiphi-tan"},"content":"                String fromStr \u003d input.substring(fromFlagEnd, toFlagStart - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"phiphi-tan"},"content":"                String toStr \u003d input.substring(toFlagEnd);","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"phiphi-tan"},"content":"                return tasks.addTask(new Event(taskMsg, false, fromStr, toStr));","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"phiphi-tan"},"content":"            } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"phiphi-tan"},"content":"                return tasks.deleteTask(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"phiphi-tan"},"content":"            } else if (input.equals(\"help\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"phiphi-tan"},"content":"                return Ui.helpMsg();","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"phiphi-tan"},"content":"            // Handling of Find","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"phiphi-tan"},"content":"            } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"phiphi-tan"},"content":"                if (input.equals(\"find\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"phiphi-tan"},"content":"                    return \"You gotta put something for me to find...\";","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"phiphi-tan"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"phiphi-tan"},"content":"                String keyword \u003d input.substring(5);","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"phiphi-tan"},"content":"                return tasks.findTasks(keyword);","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"phiphi-tan"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"phiphi-tan"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-09-14"},{"lineNumber":110,"author":{"gitId":"phiphi-tan"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"phiphi-tan"},"content":"        return (\"SIKE I can\u0027t process that! Try again or say \\\"help\\\" to see a list of all available commands\");","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"phiphi-tan"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"phiphi-tan":114}},{"path":"src/main/java/phi/Phi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"package phi;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":" * Represents the core of the PHI chatbot. The root of the program will run from here.","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":" * @author phiphi-tan","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":" * @version 1.0.0","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"phiphi-tan"},"content":"public class Phi {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":"    private final Ui phiUi;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":"    private final Storage taskStorage;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"phiphi-tan"},"content":"    private final TaskList tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"phiphi-tan"},"content":"    private final Parser phiParser;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"phiphi-tan"},"content":"     * Constructor for a new instance of Phi","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"phiphi-tan"},"content":"     * @param filePath the file path of the .txt file to be loaded from storage","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"phiphi-tan"},"content":"    public Phi(String filePath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"phiphi-tan"},"content":"        phiUi \u003d new Ui();","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"phiphi-tan"},"content":"        taskStorage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"phiphi-tan"},"content":"        tasks \u003d taskStorage.readFromFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"phiphi-tan"},"content":"        phiParser \u003d new Parser(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"phiphi-tan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"phiphi-tan"},"content":"        new Phi(\"./data/tasklist.txt\").run();","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"phiphi-tan"},"content":"    private void run() {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"phiphi-tan"},"content":"        phiUi.greeting();","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"phiphi-tan"},"content":"        takeInput();","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"phiphi-tan"},"content":"        phiUi.goodbye();","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"phiphi-tan"},"content":"     * Abstraction for the user-input handling process, which will continue running until the input \"bye\" is received","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"phiphi-tan"},"content":"    private void takeInput() {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"phiphi-tan"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"phiphi-tan"},"content":"        String input \u003d sc.nextLine().trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"phiphi-tan"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"phiphi-tan"},"content":"            System.out.println(phiParser.handle(input));","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"phiphi-tan"},"content":"            taskStorage.writeToFile(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"phiphi-tan"},"content":"            System.out.println();","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"phiphi-tan"},"content":"            input \u003d sc.nextLine().trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"phiphi-tan"},"content":"        sc.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"phiphi-tan"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"phiphi-tan":52}},{"path":"src/main/java/phi/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"package phi;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"phiphi-tan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"phiphi-tan"},"content":" * Represents all storage-related methods (reading from file, checking file paths etc.)","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"phiphi-tan"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"phiphi-tan"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"phiphi-tan"},"content":"    private File txtFile;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"phiphi-tan"},"content":"    private Path filePath;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"phiphi-tan"},"content":"     * Constructor for a new Storage instance.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"phiphi-tan"},"content":"     * If file / file path does not exist, the .txt file and corresponding directories will be created.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"phiphi-tan"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"phiphi-tan"},"content":"     * @param pathString File path for the saved tasklist.txt file (to be read and written to)","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"phiphi-tan"},"content":"    public Storage(String pathString) {","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"phiphi-tan"},"content":"        this.txtFile \u003d new File(pathString);","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"phiphi-tan"},"content":"        this.filePath \u003d Paths.get(pathString);","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"phiphi-tan"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"phiphi-tan"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"phiphi-tan"},"content":"                Files.createDirectories(filePath.getParent());","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"phiphi-tan"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"phiphi-tan"},"content":"                System.out.println(\"No file found, new .txt file created!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"phiphi-tan"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"phiphi-tan"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"phiphi-tan"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"phiphi-tan"},"content":"     * Reads the input of the stored tasklist .txt file and returns the saved information","lastModifiedDate":"2023-09-14"},{"lineNumber":42,"author":{"gitId":"phiphi-tan"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"phiphi-tan"},"content":"     * @return TaskList object containing the tasks stored in tasklist.txt","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"phiphi-tan"},"content":"    public TaskList readFromFile() {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"phiphi-tan"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"phiphi-tan"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"phiphi-tan"},"content":"            Scanner txtScanner \u003d new Scanner(txtFile);","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"phiphi-tan"},"content":"            while (txtScanner.hasNextLine()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"phiphi-tan"},"content":"                tasks.addFromTxt(txtScanner.nextLine());","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"phiphi-tan"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"phiphi-tan"},"content":"            txtScanner.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"phiphi-tan"},"content":"            System.out.println(\"Text file has been scanned!\\n\" + tasks.getSize() + \" items in the list\");","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"phiphi-tan"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"phiphi-tan"},"content":"            System.out.println(\"Something went wrong... There\u0027s still no file to be found\");","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"phiphi-tan"},"content":"            return new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"phiphi-tan"},"content":"        return tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"phiphi-tan"},"content":"     * Writes the output of PHI\u0027s current tasklist to the .txt file in storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"phiphi-tan"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"phiphi-tan"},"content":"     * @param taskInput PHI\u0027s current TaskList object","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"phiphi-tan"},"content":"    public void writeToFile(TaskList taskInput) {","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"phiphi-tan"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"phiphi-tan"},"content":"            FileWriter output \u003d new FileWriter(txtFile);","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"phiphi-tan"},"content":"            output.write(taskInput.outputList());","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"phiphi-tan"},"content":"            output.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"phiphi-tan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"phiphi-tan"},"content":"            e.getStackTrace();","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"phiphi-tan"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"phiphi-tan":76}},{"path":"src/main/java/phi/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"package phi;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":" * Abstract parent class of all task types. Cannot be instantiated.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"    protected enum Type { T, D, E }","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":"    protected Type taskType;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"phiphi-tan"},"content":"    protected boolean done;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":"    protected String taskName;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"phiphi-tan"},"content":"     * Constructor for a new Task","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"phiphi-tan"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"phiphi-tan"},"content":"     * @param taskType  Type of task (ToDo, Deadline, Event) in enumerated type","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"phiphi-tan"},"content":"     * @param done      Boolean determining if task is completed","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"     * @param taskName  Task message to be displayed","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"phiphi-tan"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"phiphi-tan"},"content":"    public Task(Type taskType, boolean done, String taskName) {","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"phiphi-tan"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"phiphi-tan"},"content":"        this.done \u003d done;","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"phiphi-tan"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"phiphi-tan"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"phiphi-tan"},"content":"        this.done \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"phiphi-tan"},"content":"    public void markUndone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"phiphi-tan"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"phiphi-tan"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"phiphi-tan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"phiphi-tan"},"content":"        return done","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"phiphi-tan"},"content":"                ? String.format(\"[%s][X] %s\", taskType, taskName)","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"phiphi-tan"},"content":"                : String.format(\"[%s][ ] %s\", taskType, taskName);","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"phiphi-tan"},"content":"     * Returns the task in a String, formatted in the style that will be written to storage","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"phiphi-tan"},"content":"     * @return String representation of the task in output format","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"phiphi-tan"},"content":"    public abstract String outputFormat();","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"phiphi-tan"},"content":"    public String getMsg() {","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"phiphi-tan"},"content":"        return this.taskName;","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"phiphi-tan"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"phiphi-tan":51}},{"path":"src/main/java/phi/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"package phi;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":" * Represents the task list of the chatbot","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":"public class TaskList {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"phiphi-tan"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"phiphi-tan"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"phiphi-tan"},"content":"    private Task getTask(int i) {","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"phiphi-tan"},"content":"        if (i \u003c\u003d 0 || i \u003e tasks.size()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"            throw new IllegalArgumentException(\"this task does not exist, genius..\");","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"phiphi-tan"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"phiphi-tan"},"content":"            return tasks.get(i - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"phiphi-tan"},"content":"     * Marks a task as done and returns the corresponding response message","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"phiphi-tan"},"content":"     * Contains error handling for incorrect user inputs","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"phiphi-tan"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"phiphi-tan"},"content":"     * @param input User-inputted string to be parsed","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"phiphi-tan"},"content":"     * @return      String response","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"phiphi-tan"},"content":"    public String doTask(String input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"phiphi-tan"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"phiphi-tan"},"content":"            int number \u003d Integer.parseInt(input.substring(5));","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"phiphi-tan"},"content":"            Task t \u003d getTask(number);","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"phiphi-tan"},"content":"            t.markDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"phiphi-tan"},"content":"            return \"ALRIGHT NICE I\u0027ll mark this as completed :)\\n\" + t;","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"phiphi-tan"},"content":"        } catch (NumberFormatException | StringIndexOutOfBoundsException n) {","lastModifiedDate":"2023-09-14"},{"lineNumber":38,"author":{"gitId":"phiphi-tan"},"content":"            return \"OI open ur eyes and give a proper input ITS \\\"mark\\\" AND A NUMBER\";","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"phiphi-tan"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"phiphi-tan"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"phiphi-tan"},"content":"     * Marks a task as undone and returns the corresponding response message","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"phiphi-tan"},"content":"     * Contains error handling for incorrect user inputs","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"phiphi-tan"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"phiphi-tan"},"content":"     * @param input User-inputted string to be parsed","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"phiphi-tan"},"content":"     * @return      String response","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"phiphi-tan"},"content":"    public String undoTask(String input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"phiphi-tan"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"phiphi-tan"},"content":"            int number \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"phiphi-tan"},"content":"            Task t \u003d getTask(number);","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"phiphi-tan"},"content":"            t.markUndone();","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"phiphi-tan"},"content":"            return \"Oh nooo I will mark this undone then :(\\n\" + t;","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"phiphi-tan"},"content":"        } catch (NumberFormatException n) {","lastModifiedDate":"2023-09-14"},{"lineNumber":58,"author":{"gitId":"phiphi-tan"},"content":"            return \"OI open ur eyes and give a proper input ITS \\\"unmark\\\" AND A NUMBER\";","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"phiphi-tan"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"phiphi-tan"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":65,"author":{"gitId":"phiphi-tan"},"content":"     * Adds a task to the TaskList","lastModifiedDate":"2023-09-14"},{"lineNumber":66,"author":{"gitId":"phiphi-tan"},"content":"     * @param task Task to be added","lastModifiedDate":"2023-09-14"},{"lineNumber":67,"author":{"gitId":"phiphi-tan"},"content":"     * @return     String with the tasklist information","lastModifiedDate":"2023-09-14"},{"lineNumber":68,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":69,"author":{"gitId":"phiphi-tan"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"phiphi-tan"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"phiphi-tan"},"content":"        return \"Added:\\n\" + task;","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"phiphi-tan"},"content":"     * Deletes a task from the list and returns the corresponding response message","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"phiphi-tan"},"content":"     * Contains error handling for incorrect user inputs","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"phiphi-tan"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"phiphi-tan"},"content":"     * @param input User-inputted string to be parsed","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"phiphi-tan"},"content":"     * @return      String response","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"phiphi-tan"},"content":"    public String deleteTask(String input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"phiphi-tan"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"phiphi-tan"},"content":"            int number \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"phiphi-tan"},"content":"            Task t \u003d getTask(number);","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"phiphi-tan"},"content":"            System.out.printf(\"Alright say bye bye to task %d!%n\", number);","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"phiphi-tan"},"content":"            System.out.println(t);","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"phiphi-tan"},"content":"            this.tasks.remove(t);","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"phiphi-tan"},"content":"            return String.format(\"There\u0027s %d task(s) in the list now.%n\", tasks.size());","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"phiphi-tan"},"content":"        } catch (NumberFormatException n) {","lastModifiedDate":"2023-09-14"},{"lineNumber":90,"author":{"gitId":"phiphi-tan"},"content":"            return \"Ugh to delete stuff, you have to input \\\"delete\\\" and the number...\";","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"phiphi-tan"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-09-14"},{"lineNumber":92,"author":{"gitId":"phiphi-tan"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":94,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":95,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":96,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"phiphi-tan"},"content":"     * Prints the current task list. If list is empty, returns a corresponding response message","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"phiphi-tan"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"phiphi-tan"},"content":"     * @return String representation of task list","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"phiphi-tan"},"content":"    public String printList() {","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"phiphi-tan"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"phiphi-tan"},"content":"            return \"You do know that to SHOW a list there has to be stuff INSIDE the (currently empty) list right?\";","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"phiphi-tan"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":105,"author":{"gitId":"phiphi-tan"},"content":"            StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"phiphi-tan"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"phiphi-tan"},"content":"                output.append(String.format(\"%d.%s%n\", tasks.indexOf(t) + 1, t.toString()));","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"phiphi-tan"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":109,"author":{"gitId":"phiphi-tan"},"content":"            return output.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":111,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":112,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"phiphi-tan"},"content":"     * Adds a task into the list from input given by the stored tasklist.txt file","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"phiphi-tan"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"phiphi-tan"},"content":"     * @param input each individual line of input in the .txt file","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"phiphi-tan"},"content":"    public void addFromTxt(String input) {","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"phiphi-tan"},"content":"        Scanner sc \u003d new Scanner(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"phiphi-tan"},"content":"        sc.useDelimiter(\"\\\\|\");","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"phiphi-tan"},"content":"        // parameter handling","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"phiphi-tan"},"content":"        String taskType \u003d sc.next();","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"phiphi-tan"},"content":"        boolean isComplete \u003d Boolean.parseBoolean(sc.next());","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"phiphi-tan"},"content":"        String taskMsg \u003d sc.next();","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"phiphi-tan"},"content":"        switch (taskType) {","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"phiphi-tan"},"content":"        case \"T\":","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"phiphi-tan"},"content":"            this.tasks.add(new ToDo(taskMsg, isComplete));","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"phiphi-tan"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"phiphi-tan"},"content":"        // deadline task","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"phiphi-tan"},"content":"        case \"D\":","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"phiphi-tan"},"content":"            String deadline \u003d sc.next();","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"phiphi-tan"},"content":"            this.tasks.add(new Deadline(taskMsg, isComplete, deadline));","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"phiphi-tan"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"phiphi-tan"},"content":"        // event task","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"phiphi-tan"},"content":"        case \"E\":","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"phiphi-tan"},"content":"            String start \u003d sc.next();","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"phiphi-tan"},"content":"            String end \u003d sc.next();","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"phiphi-tan"},"content":"            this.tasks.add(new Event(taskMsg, isComplete, start, end));","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"phiphi-tan"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"phiphi-tan"},"content":"        default:","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"phiphi-tan"},"content":"            System.out.println(\"something went wrong...\");","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"phiphi-tan"},"content":"            break;","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"phiphi-tan"},"content":"     * Returns the entire tasklist in output format, to be written by a Storage object.","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"phiphi-tan"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"phiphi-tan"},"content":"     * @return A String containing the entire task list, formatted in output style.","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"phiphi-tan"},"content":"    public String outputList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"phiphi-tan"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"phiphi-tan"},"content":"        for (Task t : this.tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":155,"author":{"gitId":"phiphi-tan"},"content":"            output.append(t.outputFormat()).append(\"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"phiphi-tan"},"content":"        return output.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"phiphi-tan"},"content":"    public int getSize() {","lastModifiedDate":"2023-09-14"},{"lineNumber":161,"author":{"gitId":"phiphi-tan"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-09-02"},{"lineNumber":162,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":163,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":164,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":165,"author":{"gitId":"phiphi-tan"},"content":"     * Returns the list of all tasks that match the given String keyword","lastModifiedDate":"2023-09-14"},{"lineNumber":166,"author":{"gitId":"phiphi-tan"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":167,"author":{"gitId":"phiphi-tan"},"content":"     * @param searchString Keyword to be searched for","lastModifiedDate":"2023-09-14"},{"lineNumber":168,"author":{"gitId":"phiphi-tan"},"content":"     * @return             Concatenated String of all tasks containing argument keyword","lastModifiedDate":"2023-09-14"},{"lineNumber":169,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":170,"author":{"gitId":"phiphi-tan"},"content":"    public String findTasks(String searchString) {","lastModifiedDate":"2023-09-02"},{"lineNumber":171,"author":{"gitId":"phiphi-tan"},"content":"        StringBuilder output \u003d new StringBuilder(\"Here\u0027s all the tasks that match your keyword!\\n\");","lastModifiedDate":"2023-09-02"},{"lineNumber":172,"author":{"gitId":"phiphi-tan"},"content":"        for (Task t : this.tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":173,"author":{"gitId":"phiphi-tan"},"content":"            if (t.getMsg().contains(searchString)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":174,"author":{"gitId":"phiphi-tan"},"content":"                output.append(t).append(\"\\n\");","lastModifiedDate":"2023-09-02"},{"lineNumber":175,"author":{"gitId":"phiphi-tan"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":176,"author":{"gitId":"phiphi-tan"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":177,"author":{"gitId":"phiphi-tan"},"content":"        return output.toString();","lastModifiedDate":"2023-09-02"},{"lineNumber":178,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":179,"author":{"gitId":"phiphi-tan"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"phiphi-tan":179}},{"path":"src/main/java/phi/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"package phi;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":" * Represents the ToDo task type","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":"     * Constructor for a new ToDo instance","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"phiphi-tan"},"content":"     * @param msg       Task message to be displayed","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":"     * @param isDone    Boolean determining if task is completed","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"phiphi-tan"},"content":"    public ToDo(String msg, boolean isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"phiphi-tan"},"content":"        super(Type.T, isDone, msg);","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"phiphi-tan"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"phiphi-tan"},"content":"    public String outputFormat() {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"phiphi-tan"},"content":"        return String.format(\"%s|%b|%s\", taskType.toString(), done, taskName);","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"phiphi-tan"},"content":"}","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"phiphi-tan":28}},{"path":"src/main/java/phi/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"package phi;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":" * Represents user interactions","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":"     * Greeting message procedure","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"phiphi-tan"},"content":"    public void greeting() {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":"        String logo \u003d \" ___ _  _ ___\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":"                + \"| _ \\\\ || |_ _|\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"phiphi-tan"},"content":"                + \"|  _/ __ || | \\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"phiphi-tan"},"content":"                + \"|_| |_||_|___| \\n\";","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"phiphi-tan"},"content":"        String greetingMsg \u003d \"Hellos! I\u0027m PHI (Programmed Human Interaction)\\nWhat can I do for you?\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"phiphi-tan"},"content":"        System.out.println(logo + greetingMsg);","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"phiphi-tan"},"content":"     * Exit message procedure","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"phiphi-tan"},"content":"    public void goodbye() {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"phiphi-tan"},"content":"        String exitMsg \u003d \"okk THANKS FOR COMING BYE!\";","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"phiphi-tan"},"content":"        System.out.println(exitMsg);","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"phiphi-tan"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"phiphi-tan"},"content":"     * List of all accepted user commands","lastModifiedDate":"2023-09-14"},{"lineNumber":30,"author":{"gitId":"phiphi-tan"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":31,"author":{"gitId":"phiphi-tan"},"content":"    public static String helpMsg() {","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"phiphi-tan"},"content":"        return \"Here\u0027s a list of commands:\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"phiphi-tan"},"content":"                + \"1. list (prints out a list of all tasks)\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"phiphi-tan"},"content":"                + \"2. todo [TASK] (creates a to-do with body \\\"TASK\\\")\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":35,"author":{"gitId":"phiphi-tan"},"content":"                + \"3. deadline [TASK] /by [yyyy-MM-dd] (creates a corresponding deadline with body \\\"TASK\\\")\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":36,"author":{"gitId":"phiphi-tan"},"content":"                + \"4. event [TASK] /from [yyyy-MM-dd] /to [yyyy-MM-dd]\"","lastModifiedDate":"2023-09-14"},{"lineNumber":37,"author":{"gitId":"phiphi-tan"},"content":"                + \" (creates a corresponding event with body \\\"TASK\\\")\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"phiphi-tan"},"content":"                + \"5. mark [X] (marks task X in the list)\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":39,"author":{"gitId":"phiphi-tan"},"content":"                + \"6. unmark [X] (unmarks task X in the list)\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"phiphi-tan"},"content":"                + \"7. delete [X] (removes task X from the list)\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":41,"author":{"gitId":"phiphi-tan"},"content":"                + \"8. find [KEYWORD] (searches for tasks that contain corresponding KEYWORD)\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":42,"author":{"gitId":"phiphi-tan"},"content":"                + \"9. bye (exits the program)\";","lastModifiedDate":"2023-09-14"},{"lineNumber":43,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"phiphi-tan"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"phiphi-tan":44}},{"path":"src/test/java/phi/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"package phi;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":"    public void handleInvalidInput() {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"phiphi-tan"},"content":"        String expected \u003d \"SIKE I can\u0027t process that!\"","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":"                + \" Try again or say \\\"help\\\" to see a list of all available commands\";","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":"        assertEquals(expected, new Parser(new TaskList()).handle(\"invalid\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"phiphi-tan"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"phiphi-tan"},"content":"    public void helpInput() {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"phiphi-tan"},"content":"        String expected \u003d \"Here\u0027s a list of commands:\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"                + \"1. list (prints out a list of all tasks)\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"phiphi-tan"},"content":"                + \"2. todo [TASK] (creates a to-do with body \\\"TASK\\\")\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"phiphi-tan"},"content":"                + \"3. deadline [TASK] /by [yyyy-MM-dd] (creates a corresponding deadline with body \\\"TASK\\\")\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"phiphi-tan"},"content":"                + \"4. event [TASK] /from [yyyy-MM-dd] /to [yyyy-MM-dd]\"","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"phiphi-tan"},"content":"                + \" (creates a corresponding event with body \\\"TASK\\\")\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"phiphi-tan"},"content":"                + \"5. mark [X] (marks task X in the list)\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"phiphi-tan"},"content":"                + \"6. unmark [X] (unmarks task X in the list)\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":25,"author":{"gitId":"phiphi-tan"},"content":"                + \"7. delete [X] (removes task X from the list)\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":26,"author":{"gitId":"phiphi-tan"},"content":"                + \"8. find [KEYWORD] (searches for tasks that contain corresponding KEYWORD)\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"phiphi-tan"},"content":"                + \"9. bye (exits the program)\";","lastModifiedDate":"2023-09-14"},{"lineNumber":28,"author":{"gitId":"phiphi-tan"},"content":"        assertEquals(expected, new Parser(new TaskList()).handle(\"help\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"phiphi-tan"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"phiphi-tan":30}},{"path":"src/test/java/phi/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"package phi;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":"    public void markValid() {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"phiphi-tan"},"content":"        TaskList test \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":"        test.addTask(new ToDo(\"coding\", false));","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":"        String expected \u003d \"ALRIGHT NICE I\u0027ll mark this as completed :)\\n[T][X] coding\";","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"phiphi-tan"},"content":"        assertEquals(expected, test.doTask(\"mark 1\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"phiphi-tan"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"phiphi-tan"},"content":"    public void markInvalid() {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"        TaskList test \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"phiphi-tan"},"content":"        test.addTask(new ToDo(\"coding\", false));","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"phiphi-tan"},"content":"        String expected \u003d \"OI open ur eyes and give a proper input ITS \\\"mark\\\" AND A NUMBER\";","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"phiphi-tan"},"content":"        assertEquals(expected, test.doTask(\"mark\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"phiphi-tan"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"phiphi-tan"},"content":"    public void todoValid() {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"phiphi-tan"},"content":"        String expected \u003d \"Added:\\n[T][ ] coding\";","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"phiphi-tan"},"content":"        assertEquals(expected, new TaskList().addTask(new ToDo(\"coding\", false)));","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"phiphi-tan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"phiphi-tan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"phiphi-tan"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"phiphi-tan":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"phiphi-tan"},"content":"todo write better code","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"phiphi-tan"},"content":"todogiveproperinput","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"phiphi-tan"},"content":"deadline get better at coding /by ASAP","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"phiphi-tan"},"content":"deadline remember to give the flag","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"phiphi-tan"},"content":"deadline /by sometime","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"phiphi-tan"},"content":"deadline don\u0027t give a deadline /by","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"phiphi-tan"},"content":"event code /from now /to end of time","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"phiphi-tan"},"content":"event do something but I didn\u0027t add any flags","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"phiphi-tan"},"content":"event forget one flag /to tomorrow","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"phiphi-tan"},"content":"event /from here /to then","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"phiphi-tan"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"phiphi-tan"},"content":"listbutican\u0027tspell","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"phiphi-tan"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"phiphi-tan"},"content":"mark 4","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"phiphi-tan"},"content":"marker","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"phiphi-tan"},"content":"unacceptableinput","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"phiphi-tan"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"delete 2","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"phiphi-tan"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"phiphi-tan"},"content":"delete one","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"phiphi-tan"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"phiphi-tan":21}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"phiphi-tan"},"content":"java -classpath ..\\bin Phi \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"phiphi-tan":1}}]
