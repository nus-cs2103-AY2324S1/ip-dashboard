[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zannloo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"zannloo"},"content":"    private String byDate;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"zannloo"},"content":"    public Deadline(String description, String byDate) {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"zannloo"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"zannloo"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"zannloo"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"zannloo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"zannloo"},"content":"        return \"[D]\" + super.getStatusIcon() + \" \" + this.description + \"(by:\" + byDate + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"zannloo"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"zannloo":12}},{"path":"src/main/java/EmptyDeadlineDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zannloo"},"content":"public class EmptyDeadlineDescriptionException extends TehOException {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"zannloo"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"zannloo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"zannloo"},"content":"        return \"☹ OOPS!!! The description of a deadline cannot be empty.\";","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"zannloo"},"content":"}","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"zannloo":7}},{"path":"src/main/java/EmptyEventDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zannloo"},"content":"public class EmptyEventDescriptionException extends TehOException {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"zannloo"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"zannloo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"zannloo"},"content":"        return \"☹ OOPS!!! The description of a event cannot be empty.\";","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"zannloo"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"zannloo":6}},{"path":"src/main/java/EmptyToDoDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zannloo"},"content":"public class EmptyToDoDescriptionException extends TehOException {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"zannloo"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"zannloo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"zannloo"},"content":"        return \"☹ OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"zannloo"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"zannloo":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zannloo"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"zannloo"},"content":"    private String fromDate;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"zannloo"},"content":"    private String toDate;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"zannloo"},"content":"    public Event(String description, String fromDate, String toDate) {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"zannloo"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"zannloo"},"content":"        this.fromDate \u003d fromDate;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"zannloo"},"content":"        this.toDate \u003d toDate;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"zannloo"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"zannloo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"zannloo"},"content":"        return \"[E]\" + super.getStatusIcon() + \" \" + this.description","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"zannloo"},"content":"                + \"(from:\" + fromDate +\" to:\" + toDate + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"zannloo"},"content":"}","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"zannloo":16}},{"path":"src/main/java/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zannloo"},"content":"public class InvalidCommandException extends TehOException {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"zannloo"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"zannloo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"zannloo"},"content":"        return \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"zannloo"},"content":"}","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"zannloo":7}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zannloo"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"zannloo"},"content":"    protected String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"zannloo"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"zannloo"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"zannloo"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"zannloo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"zannloo"},"content":"    public String getStatusIcon() { //change to seperate it with the description","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"zannloo"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"]\"; // mark done task with X","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"zannloo"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"zannloo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"zannloo"},"content":"        return this.getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"zannloo"},"content":"    public void markAsDone(int task) {","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"zannloo"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"zannloo"},"content":"    public void markAsNotDone(int task) {","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"zannloo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"zannloo"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"zannloo":26}},{"path":"src/main/java/TehO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zannloo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"zannloo"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"zannloo"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"zannloo"},"content":"public class TehO {","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"zannloo"},"content":"    static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"zannloo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"zannloo"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"zannloo"},"content":"        System.out.println(\"Hello! I\u0027m TehO \\nWhat can I do for you?\");","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"zannloo"},"content":"        while (true) {","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"zannloo"},"content":"            String userCommand \u003d sc.nextLine();","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"zannloo"},"content":"            if (userCommand.equals(\"bye\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"zannloo"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"zannloo"},"content":"                break;","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"zannloo"},"content":"            } else if (userCommand.equals(\"list\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"zannloo"},"content":"                listTask(taskList);","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"zannloo"},"content":"            } else if (userCommand.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"zannloo"},"content":"                markTask(userCommand);","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"zannloo"},"content":"            } else if (userCommand.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"zannloo"},"content":"                unmarkTask(userCommand);","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"zannloo"},"content":"            } else if (userCommand.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"zannloo"},"content":"                addToDo(userCommand);","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"zannloo"},"content":"            } else if (userCommand.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"zannloo"},"content":"                addDeadline(userCommand);","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"zannloo"},"content":"            } else if (userCommand.startsWith(\"event\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"zannloo"},"content":"                addEvent(userCommand);","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"zannloo"},"content":"            } else if (userCommand.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"zannloo"},"content":"                delete(userCommand);","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"zannloo"},"content":"            } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"zannloo"},"content":"                try {","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"zannloo"},"content":"                    throw new InvalidCommandException();","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"zannloo"},"content":"                } catch (InvalidCommandException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"zannloo"},"content":"                    System.out.println(e.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"zannloo"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"zannloo"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"zannloo"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"zannloo"},"content":"        sc.close();","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"zannloo"},"content":"    public static void markTask(String userCommand) {","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"zannloo"},"content":"        //note that split returns a String[]","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"zannloo"},"content":"        //parseInt returns the integer value which is represented by the argument","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"zannloo"},"content":"        int taskNumber \u003d parseInt(userCommand.split(\" \")[1]) - 1; //counting from 0","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"zannloo"},"content":"        Task task \u003d taskList.get(taskNumber);","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"zannloo"},"content":"        task.markAsDone(taskNumber);","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"zannloo"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"zannloo"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"zannloo"},"content":"    public static void unmarkTask(String userCommand) {","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"zannloo"},"content":"        int taskNumber \u003d parseInt(userCommand.split(\" \")[1]) - 1; //counting from 0","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"zannloo"},"content":"        Task task \u003d taskList.get(taskNumber);","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"zannloo"},"content":"        task.markAsNotDone(taskNumber);","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"zannloo"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"zannloo"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"zannloo"},"content":"    public static void addToDo(String userCommand) {","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"zannloo"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"zannloo"},"content":"            if (userCommand.length() \u003c 5) {","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"zannloo"},"content":"                throw new EmptyToDoDescriptionException();","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"zannloo"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"zannloo"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"zannloo"},"content":"            String command \u003d userCommand.substring(5); //\"todo \" 5 index","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"zannloo"},"content":"            Task task \u003d new ToDo(command);","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"zannloo"},"content":"            taskList.add(task);","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"zannloo"},"content":"            System.out.println(task.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"zannloo"},"content":"            System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"zannloo"},"content":"        } catch (EmptyToDoDescriptionException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"zannloo"},"content":"            System.out.println(e.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"zannloo"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"zannloo"},"content":"    public static void addDeadline(String userCommand) {","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"zannloo"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"zannloo"},"content":"            if (userCommand.length() \u003c 9) {","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"zannloo"},"content":"                throw new EmptyDeadlineDescriptionException();","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"zannloo"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"zannloo"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":82,"author":{"gitId":"zannloo"},"content":"            String commandWithDate \u003d userCommand.substring(9); //\"todo \" 9 index","lastModifiedDate":"2023-08-22"},{"lineNumber":83,"author":{"gitId":"zannloo"},"content":"            String cDeadline \u003d commandWithDate.split(\"/by\")[0]; //just description","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"zannloo"},"content":"            String byDate \u003d commandWithDate.split(\"/by\")[1]; //just byDate","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"zannloo"},"content":"            Task task \u003d new Deadline(cDeadline, byDate);","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"zannloo"},"content":"            taskList.add(task);","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"zannloo"},"content":"            System.out.println(task.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":88,"author":{"gitId":"zannloo"},"content":"            System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":89,"author":{"gitId":"zannloo"},"content":"        } catch (EmptyDeadlineDescriptionException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"zannloo"},"content":"            System.out.println(e.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":91,"author":{"gitId":"zannloo"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":92,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":93,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":94,"author":{"gitId":"zannloo"},"content":"    public static void addEvent(String userCommand) {","lastModifiedDate":"2023-08-23"},{"lineNumber":95,"author":{"gitId":"zannloo"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":96,"author":{"gitId":"zannloo"},"content":"            if (userCommand.length() \u003c 6) {","lastModifiedDate":"2023-08-23"},{"lineNumber":97,"author":{"gitId":"zannloo"},"content":"                throw new EmptyEventDescriptionException();","lastModifiedDate":"2023-08-23"},{"lineNumber":98,"author":{"gitId":"zannloo"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":99,"author":{"gitId":"zannloo"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":100,"author":{"gitId":"zannloo"},"content":"            String commandWithDate \u003d userCommand.substring(6); //\"todo \" 6 index","lastModifiedDate":"2023-08-22"},{"lineNumber":101,"author":{"gitId":"zannloo"},"content":"            String cEvent \u003d commandWithDate.split(\"/from\")[0]; //just description","lastModifiedDate":"2023-08-23"},{"lineNumber":102,"author":{"gitId":"zannloo"},"content":"            String dates \u003d commandWithDate.split(\"/from\")[1]; //bothDates","lastModifiedDate":"2023-08-23"},{"lineNumber":103,"author":{"gitId":"zannloo"},"content":"            String fromDate \u003d dates.split(\"/to\")[0]; //just fromDate","lastModifiedDate":"2023-08-23"},{"lineNumber":104,"author":{"gitId":"zannloo"},"content":"            String toDate \u003d dates.split(\"/to\")[1]; //just toDate","lastModifiedDate":"2023-08-23"},{"lineNumber":105,"author":{"gitId":"zannloo"},"content":"            Task task \u003d new Event(cEvent, fromDate, toDate);","lastModifiedDate":"2023-08-23"},{"lineNumber":106,"author":{"gitId":"zannloo"},"content":"            taskList.add(task);","lastModifiedDate":"2023-08-23"},{"lineNumber":107,"author":{"gitId":"zannloo"},"content":"            System.out.println(task.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":108,"author":{"gitId":"zannloo"},"content":"            System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":109,"author":{"gitId":"zannloo"},"content":"        } catch (EmptyEventDescriptionException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":110,"author":{"gitId":"zannloo"},"content":"            System.out.println(e.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":111,"author":{"gitId":"zannloo"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":112,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":113,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":114,"author":{"gitId":"zannloo"},"content":"    public static void listTask(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-08-23"},{"lineNumber":115,"author":{"gitId":"zannloo"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":116,"author":{"gitId":"zannloo"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-23"},{"lineNumber":117,"author":{"gitId":"zannloo"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2023-08-23"},{"lineNumber":118,"author":{"gitId":"zannloo"},"content":"            System.out.println((i + 1) + \". \" + task.toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":119,"author":{"gitId":"zannloo"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":120,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":121,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":122,"author":{"gitId":"zannloo"},"content":"    public static void delete(String userCommand) {","lastModifiedDate":"2023-08-23"},{"lineNumber":123,"author":{"gitId":"zannloo"},"content":"        int taskNumber \u003d parseInt(userCommand.split(\" \")[1]) - 1; //counting from 0","lastModifiedDate":"2023-08-23"},{"lineNumber":124,"author":{"gitId":"zannloo"},"content":"        Task task \u003d taskList.get(taskNumber);","lastModifiedDate":"2023-08-23"},{"lineNumber":125,"author":{"gitId":"zannloo"},"content":"        taskList.remove(taskNumber);","lastModifiedDate":"2023-08-23"},{"lineNumber":126,"author":{"gitId":"zannloo"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":127,"author":{"gitId":"zannloo"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":128,"author":{"gitId":"zannloo"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":129,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":130,"author":{"gitId":"zannloo"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"zannloo":130}},{"path":"src/main/java/TehOException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zannloo"},"content":"public class TehOException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"zannloo"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"zannloo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"zannloo"},"content":"        return \"☹ OOPS!!! Something is wrong with TehO!\";","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"zannloo"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"zannloo":6}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zannloo"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"zannloo"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"zannloo"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"zannloo"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"zannloo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"zannloo"},"content":"        return \"[T]\" + super.getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"zannloo"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"zannloo":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zannloo"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"zannloo"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"zannloo":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"zannloo"},"content":"java -classpath ..\\bin TehO \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zannloo":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"zannloo"},"content":"java -classpath ../bin TehO \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"zannloo"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zannloo":2,"-":32}}]
