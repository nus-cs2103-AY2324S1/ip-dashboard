[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"zannloo"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"zannloo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"zannloo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"zannloo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"zannloo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"zannloo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"zannloo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"zannloo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"zannloo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"zannloo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"zannloo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"zannloo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"zannloo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"zannloo"},"content":"    //mainClass.set(\"seedu.duke.Duke\") //check if need change","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"zannloo"},"content":"    mainClass.set(\"teho.main.TehO\") //new","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"zannloo"},"content":"//    archiveBaseName \u003d \"duke\"//old","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"zannloo"},"content":"    archiveBaseName \u003d \"teho\"//new","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zannloo":18,"-":40}},{"path":"src/main/java/teho/exceptions/EmptyDeadlineDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zannloo"},"content":"package teho.exceptions;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"zannloo"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"zannloo"},"content":" * Represents an exception that is thrown when description of a deadline task is empty.","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"zannloo"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"zannloo"},"content":"public class EmptyDeadlineDescriptionException extends TehOException {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"zannloo"},"content":"     * Returns an exception message.","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"zannloo"},"content":"     * @return Exception message.","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"zannloo"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"zannloo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"zannloo"},"content":"        return \"OOPS!!! The description of a deadline cannot be empty.\";","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"zannloo"},"content":"}","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"zannloo":17}},{"path":"src/main/java/teho/exceptions/EmptyEventDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zannloo"},"content":"package teho.exceptions;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"zannloo"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"zannloo"},"content":" * Represents an exception that is thrown when description of an event task is empty.","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"zannloo"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"zannloo"},"content":"public class EmptyEventDescriptionException extends TehOException {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"zannloo"},"content":"     * Returns an exception message.","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"zannloo"},"content":"     * @return Exception message.","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"zannloo"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"zannloo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"zannloo"},"content":"        return \"OOPS!!! The description of a event cannot be empty.\";","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"zannloo"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"zannloo":16}},{"path":"src/main/java/teho/exceptions/EmptyFindDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zannloo"},"content":"package teho.exceptions;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"zannloo"},"content":"public class EmptyFindDescriptionException extends TehOException {","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"zannloo"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"zannloo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"zannloo"},"content":"        return \"☹ OOPS!!! You have not listed what you want to find.\";","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"zannloo"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"zannloo":8}},{"path":"src/main/java/teho/exceptions/EmptyToDoDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zannloo"},"content":"package teho.exceptions;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"zannloo"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"zannloo"},"content":" * Represents an exception that is thrown when description of todo task is empty.","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"zannloo"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"zannloo"},"content":"public class EmptyToDoDescriptionException extends TehOException {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"zannloo"},"content":"     * Returns an exception message.","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"zannloo"},"content":"     * @return Exception message.","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"zannloo"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"zannloo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"zannloo"},"content":"        return \"OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"zannloo"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"zannloo":16}},{"path":"src/main/java/teho/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zannloo"},"content":"package teho.exceptions;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"zannloo"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"zannloo"},"content":" * Represents an exception that is thrown when user\u0027s command is invalid.","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"zannloo"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"zannloo"},"content":"public class InvalidCommandException extends TehOException {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"zannloo"},"content":"     * Returns an exception message.","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"zannloo"},"content":"     * @return Exception message.","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"zannloo"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"zannloo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"zannloo"},"content":"        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"zannloo"},"content":"}","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"zannloo":17}},{"path":"src/main/java/teho/exceptions/TehOException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zannloo"},"content":"package teho.exceptions;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"zannloo"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"zannloo"},"content":" * Represents exceptions specific to TehO.","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"zannloo"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"zannloo"},"content":"public class TehOException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"zannloo"},"content":"     * Returns an exception message.","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"zannloo"},"content":"     * @return Exception message.","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"zannloo"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"zannloo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"zannloo"},"content":"        return \"OOPS!!! Something is wrong with TehO!\";","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"zannloo"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"zannloo":16}},{"path":"src/main/java/teho/main/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zannloo"},"content":"package teho.main;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"zannloo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"zannloo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"zannloo"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"zannloo"},"content":" * Represents a task with a specific deadline.","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"zannloo"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"zannloo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"zannloo"},"content":"    private LocalDate byDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"zannloo"},"content":"     * Constructs new Deadline task with description and deadline.","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"zannloo"},"content":"     * @param description Description of task with a specific deadline.","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"zannloo"},"content":"     * @param byDate Due date of the task with a specific deadline.","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"zannloo"},"content":"    public Deadline(String description, LocalDate byDate) {","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"zannloo"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"zannloo"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"zannloo"},"content":"     * Returns a string representation of the Deadline task details.","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"zannloo"},"content":"     * @return String representation of the Deadline task.","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"zannloo"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"zannloo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"zannloo"},"content":"        return \"[D]\" + super.getStatusIcon() + \" \" + this.description","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"zannloo"},"content":"                + \" (by: \" + byDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"zannloo"},"content":"     * Returns a string representation of the Deadline task details for saving task in file.","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"zannloo"},"content":"     * @return String representation of the Deadline task.","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"zannloo"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"zannloo"},"content":"    public String fileString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"zannloo"},"content":"        String digitStatus \u003d this.isDone? \"1\": \"0\";","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"zannloo"},"content":"        return \"D|\" + digitStatus + \"|\" + this.description + \"|\" + byDate;","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"zannloo"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"zannloo":44}},{"path":"src/main/java/teho/main/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zannloo"},"content":"package teho.main;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"zannloo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"zannloo"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"zannloo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"zannloo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"zannloo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"zannloo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"zannloo"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"zannloo"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"zannloo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"zannloo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"zannloo"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"zannloo"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"zannloo"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"zannloo"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"zannloo"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"zannloo"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"zannloo"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"zannloo"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"zannloo"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"zannloo"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"zannloo"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"zannloo"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"zannloo"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"zannloo"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"zannloo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"zannloo"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"zannloo"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"zannloo"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"zannloo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"zannloo"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"zannloo"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"zannloo"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"zannloo"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"zannloo"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"zannloo"},"content":"    private void flip() {","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"zannloo"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"zannloo"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"zannloo"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"zannloo"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"zannloo"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"zannloo"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"zannloo"},"content":"    public static DialogBox getTehODialog(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"zannloo"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"zannloo"},"content":"        db.flip();","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"zannloo"},"content":"        return db;","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"zannloo"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"zannloo":60}},{"path":"src/main/java/teho/main/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zannloo"},"content":"package teho.main;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"zannloo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"zannloo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"zannloo"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"zannloo"},"content":" * Represents a task with a specific time frame.","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"zannloo"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"zannloo"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"zannloo"},"content":"    private LocalDate fromDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"zannloo"},"content":"    private LocalDate toDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"zannloo"},"content":"     * Constructs new Event task with description, beginning date of event and","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"zannloo"},"content":"     * end date of event.","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"zannloo"},"content":"     * @param description Description of task with a specific time frame.","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"zannloo"},"content":"     * @param fromDate Beginning date of the task with a specific time frame.","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"zannloo"},"content":"     *  @param toDate End date of the task with a specific time frame.","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"zannloo"},"content":"    public Event(String description, LocalDate fromDate, LocalDate toDate) {","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"zannloo"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"zannloo"},"content":"        this.fromDate \u003d fromDate;","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"zannloo"},"content":"        this.toDate \u003d toDate;","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"zannloo"},"content":"     * Returns a string representation of the Event task details.","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"zannloo"},"content":"     * @return String representation of the Event task.","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"zannloo"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"zannloo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"zannloo"},"content":"        return \"[E]\" + super.getStatusIcon() + \" \" + this.description","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"zannloo"},"content":"                + \" (from: \"","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"zannloo"},"content":"                + fromDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" to: \"","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"zannloo"},"content":"                + toDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"zannloo"},"content":"     * Returns a string representation of the Event task details for saving task in file.","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"zannloo"},"content":"     * @return String representation of the Event task.","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"zannloo"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"zannloo"},"content":"    public String fileString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"zannloo"},"content":"        String digitStatus \u003d this.isDone? \"1\": \"0\";","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"zannloo"},"content":"        return \"E|\" + digitStatus + \"|\" + this.description + \"|\"","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"zannloo"},"content":"                + fromDate + \"|\" + toDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"zannloo"},"content":"}","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"zannloo":52}},{"path":"src/main/java/teho/main/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zannloo"},"content":"package teho.main;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"zannloo"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"zannloo"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"zannloo"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"zannloo"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"zannloo"},"content":"public class Launcher {","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"zannloo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"zannloo"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"zannloo"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"zannloo":11}},{"path":"src/main/java/teho/main/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zannloo"},"content":"package teho.main;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"zannloo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"zannloo"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"zannloo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"zannloo"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"zannloo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"zannloo"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"zannloo"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"zannloo"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"zannloo"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"zannloo"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"zannloo"},"content":"    private TehO tehO \u003d new TehO(\"/Users/loomeilinzann/ip/text-ui-test/data/teho.txt\");","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"zannloo"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"zannloo"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"zannloo"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"zannloo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"zannloo"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"zannloo"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"zannloo"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"zannloo"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setTehO(tehO);","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"zannloo"},"content":"            stage.show();","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"zannloo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"zannloo"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"zannloo"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"zannloo"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"zannloo":32}},{"path":"src/main/java/teho/main/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zannloo"},"content":"package teho.main;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"zannloo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"zannloo"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"zannloo"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"zannloo"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"zannloo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"zannloo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"zannloo"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"zannloo"},"content":"import teho.exceptions.InvalidCommandException;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"zannloo"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"zannloo"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"zannloo"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"zannloo"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"zannloo"},"content":"    //@FXML annotation marks a private or protected member and","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"zannloo"},"content":"    // makes it accessible to FXMLdespite its modifier.","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"zannloo"},"content":"    // Without the annotation, we will have to make everything","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"zannloo"},"content":"    // public and expose our UI to unwanted changes.","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"zannloo"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"zannloo"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"zannloo"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"zannloo"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"zannloo"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"zannloo"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"zannloo"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"zannloo"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"zannloo"},"content":"    private TehO tehO;","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"zannloo"},"content":"    private Image userImage \u003d new Image(this.getClass()","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"zannloo"},"content":"            .getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"zannloo"},"content":"    private Image tehOImage \u003d new Image(this.getClass()","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"zannloo"},"content":"            .getResourceAsStream(\"/images/tehO.png\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"zannloo"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"zannloo"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"zannloo"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"zannloo"},"content":"        String helloMessage \u003d \"Hello! I\u0027m TehO \\nWhat could I do for you today?\";","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"zannloo"},"content":"        dialogContainer.getChildren().add(DialogBox.getTehODialog(helloMessage, tehOImage));","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"zannloo"},"content":"    public void setTehO(TehO t) {","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"zannloo"},"content":"        tehO \u003d t;","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"zannloo"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"zannloo"},"content":"     * Duke\u0027s reply and then appends them to the dialog container.","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"zannloo"},"content":"     * Clears the user input after processing.","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"zannloo"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"zannloo"},"content":"    private void handleUserInput() throws InvalidCommandException {","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"zannloo"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"zannloo"},"content":"        String response \u003d tehO.getResponse(input);","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"zannloo"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"zannloo"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"zannloo"},"content":"                DialogBox.getTehODialog(response, tehOImage)","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"zannloo"},"content":"        );","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"zannloo"},"content":"        //clear input field","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"zannloo"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"zannloo"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"zannloo"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"zannloo"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"zannloo":65}},{"path":"src/main/java/teho/main/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zannloo"},"content":"package teho.main;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"zannloo"},"content":"import teho.main.Deadline;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"zannloo"},"content":"import teho.main.Event;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"zannloo"},"content":"import teho.main.Task;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"zannloo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"zannloo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"zannloo"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"zannloo"},"content":" * Makes sense of the user command that was loaded in file.","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"zannloo"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"zannloo"},"content":"public class Parser {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"zannloo"},"content":"     * Parses input and adds task to taskList.","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"zannloo"},"content":"     * @param nextLine Line to be parsed.","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"zannloo"},"content":"     * @param taskList List to add the parsed task into.","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"zannloo"},"content":"    public static void readLine(String nextLine, ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"zannloo"},"content":"        Task taskToAddFirst;","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"zannloo"},"content":"        //use (\\\\|) to treat \\ as a legit character or else it will get split by any spaces","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"zannloo"},"content":"        String[] sections \u003d nextLine.split(\"\\\\|\");","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"zannloo"},"content":"        int taskNumber \u003d taskList.size(); //counting from 0","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"zannloo"},"content":"        if (sections[0].equals(\"T\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"zannloo"},"content":"            taskToAddFirst \u003d new ToDo(sections[2]);","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"zannloo"},"content":"            taskList.add(taskToAddFirst);","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"zannloo"},"content":"            if (sections[1].equals(\"1\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"zannloo"},"content":"                taskToAddFirst.markAsDone(taskNumber);","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"zannloo"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"zannloo"},"content":"        } else if (sections[0].equals(\"D\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"zannloo"},"content":"            taskToAddFirst \u003d new Deadline(sections[2], LocalDate.parse(sections[3]));","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"zannloo"},"content":"            taskList.add(taskToAddFirst);","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"zannloo"},"content":"            if (sections[1].equals(\"1\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"zannloo"},"content":"                taskToAddFirst.markAsDone(taskNumber);","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"zannloo"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"zannloo"},"content":"        } else if (sections[0].equals(\"E\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"zannloo"},"content":"            taskToAddFirst \u003d new Event(sections[2], LocalDate.parse(sections[3]), LocalDate.parse(sections[4]));","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"zannloo"},"content":"            taskList.add(taskToAddFirst);","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"zannloo"},"content":"            if (sections[1].equals(\"1\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"zannloo"},"content":"                taskToAddFirst.markAsDone(taskNumber);","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"zannloo"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"zannloo"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"zannloo"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"zannloo":44}},{"path":"src/main/java/teho/main/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zannloo"},"content":"package teho.main;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"zannloo"},"content":"import teho.main.Parser;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"zannloo"},"content":"import teho.main.Task;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"zannloo"},"content":"import teho.main.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"zannloo"},"content":"import java.io.*;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"zannloo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"zannloo"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"zannloo"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"zannloo"},"content":" * Saves and loads tasks into and from a file.","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"zannloo"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"zannloo"},"content":"public class Storage {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"zannloo"},"content":"    /** File path for saving and loadings tasks into and from a file */","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"zannloo"},"content":"    public static String filePath;","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"zannloo"},"content":"     * Constructs new Storage instance with file path.","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"zannloo"},"content":"     * @param filePath String representation of the file path of the file","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"zannloo"},"content":"     *                 to save and load task into and from.","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"zannloo"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"zannloo"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"zannloo"},"content":"     * Saves tasks from taskList into file.","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"zannloo"},"content":"     * @param taskList List of tasks to save the tasks from into the file.","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"zannloo"},"content":"    public static void saveTasks(TaskList taskList) {","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"zannloo"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"zannloo"},"content":"            //Solution below inspired by https://www.geeksforgeeks.org/io-bufferedwriter-class-methods-java/","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"zannloo"},"content":"            //changing according to notes","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"zannloo"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"zannloo"},"content":"            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"zannloo"},"content":"                Task task \u003d taskList.getTask(i);","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"zannloo"},"content":"                fw.write(task.fileString() + \"\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"zannloo"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"zannloo"},"content":"            fw.close();","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"zannloo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"zannloo"},"content":"            System.out.println(\"☹ OOPS!!! Error when saving task(s).\");","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"zannloo"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"zannloo"},"content":"     * Loads tasks from file into a taskList.","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"zannloo"},"content":"     * @return ArrayList containing the loaded tasks.","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"zannloo"},"content":"    public static ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"zannloo"},"content":"        ArrayList\u003cTask\u003e taskList \u003d  new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"zannloo"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"zannloo"},"content":"            File loadedFile \u003d new File(filePath);","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"zannloo"},"content":"            Scanner sc \u003d new Scanner(loadedFile);","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"zannloo"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"zannloo"},"content":"                String nextLine \u003d sc.nextLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"zannloo"},"content":"                Parser.readLine(nextLine, taskList);","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"zannloo"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"zannloo"},"content":"            sc.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"zannloo"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"zannloo"},"content":"            System.out.println(\"☹ OOPS!!! Error when loading task(s).\");","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"zannloo"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"zannloo"},"content":"        return taskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"zannloo"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"zannloo":68}},{"path":"src/main/java/teho/main/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zannloo"},"content":"package teho.main;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"zannloo"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"zannloo"},"content":" * Represents a task with only a description and status.","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"zannloo"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"zannloo"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"zannloo"},"content":"     * Description of task.","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"zannloo"},"content":"    protected String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"zannloo"},"content":"     * Status of task.","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"zannloo"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"zannloo"},"content":"     * Constructs new Task with description.","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"zannloo"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"zannloo"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"zannloo"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"zannloo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"zannloo"},"content":"     * Returns status icon of the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"zannloo"},"content":"     * If status icon is \"X\", task is done.","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"zannloo"},"content":"     * If status icon is \" \", task is undone.","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"zannloo"},"content":"     * @return Status icon of task (\"X\" if task is done, \" \" if task is undone).","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"zannloo"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"zannloo"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"]\";","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"zannloo"},"content":"     * Returns string representation of a task, including the status icon and description of task.","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"zannloo"},"content":"     * @return String representation of the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"zannloo"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"zannloo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"zannloo"},"content":"        return this.getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"zannloo"},"content":"     * Marks task as done","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"zannloo"},"content":"     * @param task Index of task to be marked as done.","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"zannloo"},"content":"    public void markAsDone(int task) {","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"zannloo"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"zannloo"},"content":"     * Marks task as undone","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"zannloo"},"content":"     * @param task Index of task to be marked as undone.","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"zannloo"},"content":"    public void markAsNotDone(int task) {","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"zannloo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"zannloo"},"content":"    public abstract String fileString();","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"zannloo"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"zannloo":66}},{"path":"src/main/java/teho/main/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zannloo"},"content":"package teho.main;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"zannloo"},"content":"import teho.main.Task;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"zannloo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"zannloo"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"zannloo"},"content":" * Represents list of tasks.","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"zannloo"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"zannloo"},"content":"public class TaskList {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"zannloo"},"content":"    /** List of tasks. */","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"zannloo"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"zannloo"},"content":"     * Constructs a TaskList instance with the given list of tasks.","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"zannloo"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"zannloo"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"zannloo"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"zannloo"},"content":"   }","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"zannloo"},"content":"     * Returns number of tasks in list.","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"zannloo"},"content":"     * @return Number of tasks in list.","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"zannloo"},"content":"    public int getSize() {","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"zannloo"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"zannloo"},"content":"     * Returns the task with the corresponding index number.","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"zannloo"},"content":"     * @param taskNumber Index number of the task to be returned.","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"zannloo"},"content":"     * @return Task with the corresponding index number.","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"zannloo"},"content":"    public Task getTask(int taskNumber) {","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"zannloo"},"content":"        return this.taskList.get(taskNumber);","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"zannloo"},"content":"     * Adds task into list.","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"zannloo"},"content":"     * @param task Task to be added into list.","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"zannloo"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"zannloo"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"zannloo"},"content":"     * Removes task from the list.","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"zannloo"},"content":"     * @param taskNumber Index number of the corresponding task to be removed from list.","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"zannloo"},"content":"    public void remove(int taskNumber) {","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"zannloo"},"content":"        this.taskList.remove(taskNumber);","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"zannloo"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"zannloo":59}},{"path":"src/main/java/teho/main/TehO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zannloo"},"content":"package teho.main;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"zannloo"},"content":"import teho.exceptions.*;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"zannloo"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"zannloo"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"zannloo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"zannloo"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"zannloo"},"content":" * Main class that represents a Personal Assistant Chatbot","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"zannloo"},"content":" * that helps a person to keep track of various things.","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"zannloo"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"zannloo"},"content":"public class TehO  {","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"zannloo"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"zannloo"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"zannloo"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"zannloo"},"content":"     * Constructs a TehO instance with string representation of a file path","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"zannloo"},"content":"     * to save and load tasks into and from.","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"zannloo"},"content":"     * @param filePath Path of file to save and load tasks into and from.","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"zannloo"},"content":"    public TehO(String filePath) {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"zannloo"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"zannloo"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"zannloo"},"content":"        taskList \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"zannloo"},"content":"    public String getResponse(String userCommand) {","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"zannloo"},"content":"        String returnMessage \u003d null;","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"zannloo"},"content":"            if (userCommand.equals(\"bye\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"zannloo"},"content":"                storage.saveTasks(taskList);","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"zannloo"},"content":"                returnMessage \u003d ui.generateGoodbyeMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"zannloo"},"content":"            } else if (userCommand.equals(\"list\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"zannloo"},"content":"                returnMessage \u003d ui.generateList(taskList);","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"zannloo"},"content":"            } else if (userCommand.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"zannloo"},"content":"                markTask(userCommand);","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"zannloo"},"content":"                returnMessage \u003d ui.generateUnmarkTaskMessage(taskList.getTask(parseInt(userCommand.split(\" \")[1]) - 1));;","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"zannloo"},"content":"            } else if (userCommand.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"zannloo"},"content":"                unmarkTask(userCommand);","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"zannloo"},"content":"                returnMessage \u003d ui.generateMarkTaskMessage(taskList.getTask(parseInt(userCommand.split(\" \")[1]) - 1));","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"zannloo"},"content":"            } else if (userCommand.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"zannloo"},"content":"                returnMessage \u003d addToDo(userCommand);","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"zannloo"},"content":"            } else if (userCommand.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"zannloo"},"content":"                returnMessage \u003d  addDeadline(userCommand);","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"zannloo"},"content":"            } else if (userCommand.startsWith(\"event\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"zannloo"},"content":"                returnMessage \u003d addEvent(userCommand);","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"zannloo"},"content":"            } else if (userCommand.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"zannloo"},"content":"                returnMessage \u003d delete(userCommand);","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"zannloo"},"content":"            } else if (userCommand.startsWith(\"find\")){","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"zannloo"},"content":"                returnMessage \u003d find(userCommand);","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"zannloo"},"content":"            } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"zannloo"},"content":"                try {","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"zannloo"},"content":"                    throw new InvalidCommandException();","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"zannloo"},"content":"                } catch (InvalidCommandException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"zannloo"},"content":"                    return e.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"zannloo"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"zannloo"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"zannloo"},"content":"            return returnMessage;","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"zannloo"},"content":"    public void run() {","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"zannloo"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"zannloo"},"content":"        ui.generateHelloMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"zannloo"},"content":"        storage.loadTasks();","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"zannloo"},"content":"        while (true) {","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"zannloo"},"content":"            String userCommand \u003d sc.nextLine();","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"zannloo"},"content":"            String response \u003d getResponse(userCommand);","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"zannloo"},"content":"            System.out.println(response);","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"zannloo"},"content":"            if (userCommand.equals(\"bye\")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"zannloo"},"content":"                break;","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"zannloo"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"zannloo"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"zannloo"},"content":"        sc.close();","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"zannloo"},"content":"     * Represents the main method to start TehO.","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"zannloo"},"content":"     * @param args Stores Java command-line arguments and is an array of type java.lang.String class.","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"zannloo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"zannloo"},"content":"        new TehO(\"/Users/loomeilinzann/ip/text-ui-test/data/teho.txt\").run();","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"zannloo"},"content":"     * Represents the marking of task according to user\u0027s command.","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"zannloo"},"content":"     * @param userCommand User\u0027s command containing the task to be marked.","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":93,"author":{"gitId":"zannloo"},"content":"    public void markTask(String userCommand) {","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"zannloo"},"content":"        //note that split returns a String[]","lastModifiedDate":"2023-08-22"},{"lineNumber":95,"author":{"gitId":"zannloo"},"content":"        //parseInt returns the integer value which is represented by the argument","lastModifiedDate":"2023-08-22"},{"lineNumber":96,"author":{"gitId":"zannloo"},"content":"        int taskNumber \u003d parseInt(userCommand.split(\" \")[1]) - 1; //counting from 0","lastModifiedDate":"2023-08-22"},{"lineNumber":97,"author":{"gitId":"zannloo"},"content":"        Task task \u003d this.taskList.getTask(taskNumber);","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"zannloo"},"content":"        task.markAsDone(taskNumber);","lastModifiedDate":"2023-08-22"},{"lineNumber":99,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":101,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":102,"author":{"gitId":"zannloo"},"content":"     * Represents the unmarking of task according to user\u0027s command.","lastModifiedDate":"2023-08-28"},{"lineNumber":103,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":104,"author":{"gitId":"zannloo"},"content":"     * @param userCommand User\u0027s command containing the task to be unmarked.","lastModifiedDate":"2023-08-28"},{"lineNumber":105,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":106,"author":{"gitId":"zannloo"},"content":"    public void unmarkTask(String userCommand) {","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"zannloo"},"content":"        int taskNumber \u003d parseInt(userCommand.split(\" \")[1]) - 1; //counting from 0","lastModifiedDate":"2023-08-22"},{"lineNumber":108,"author":{"gitId":"zannloo"},"content":"        Task task \u003d this.taskList.getTask(taskNumber);","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"zannloo"},"content":"        task.markAsNotDone(taskNumber);","lastModifiedDate":"2023-08-22"},{"lineNumber":110,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":111,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":112,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":113,"author":{"gitId":"zannloo"},"content":"     * Represents the adding of new ToDo task into taskList according to user\u0027s command.","lastModifiedDate":"2023-08-28"},{"lineNumber":114,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":115,"author":{"gitId":"zannloo"},"content":"     * @param userCommand User\u0027s command containing the new ToDo task to be added into taskList.","lastModifiedDate":"2023-08-28"},{"lineNumber":116,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":117,"author":{"gitId":"zannloo"},"content":"    public String addToDo(String userCommand) {","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"zannloo"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":119,"author":{"gitId":"zannloo"},"content":"            if (userCommand.length() \u003c 5) {","lastModifiedDate":"2023-08-23"},{"lineNumber":120,"author":{"gitId":"zannloo"},"content":"                throw new EmptyToDoDescriptionException();","lastModifiedDate":"2023-08-23"},{"lineNumber":121,"author":{"gitId":"zannloo"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":122,"author":{"gitId":"zannloo"},"content":"            String command \u003d userCommand.substring(5); //\"todo \" 5 index","lastModifiedDate":"2023-08-22"},{"lineNumber":123,"author":{"gitId":"zannloo"},"content":"            Task task \u003d new ToDo(command);","lastModifiedDate":"2023-08-22"},{"lineNumber":124,"author":{"gitId":"zannloo"},"content":"            this.taskList.add(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":125,"author":{"gitId":"zannloo"},"content":"            return ui.generateAddToDoMessage(task, taskList);","lastModifiedDate":"2023-09-05"},{"lineNumber":126,"author":{"gitId":"zannloo"},"content":"        } catch (EmptyToDoDescriptionException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":127,"author":{"gitId":"zannloo"},"content":"            return e.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":128,"author":{"gitId":"zannloo"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":129,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":130,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":131,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":132,"author":{"gitId":"zannloo"},"content":"     * Represents the adding of new Deadline task into taskList according to user\u0027s command.","lastModifiedDate":"2023-08-28"},{"lineNumber":133,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":134,"author":{"gitId":"zannloo"},"content":"     * @param userCommand User\u0027s command containing the new Deadline task to be added into taskList.","lastModifiedDate":"2023-08-28"},{"lineNumber":135,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":136,"author":{"gitId":"zannloo"},"content":"    public  String addDeadline(String userCommand) {","lastModifiedDate":"2023-09-05"},{"lineNumber":137,"author":{"gitId":"zannloo"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":138,"author":{"gitId":"zannloo"},"content":"            if (userCommand.length() \u003c 9) {","lastModifiedDate":"2023-08-23"},{"lineNumber":139,"author":{"gitId":"zannloo"},"content":"                throw new EmptyDeadlineDescriptionException();","lastModifiedDate":"2023-08-23"},{"lineNumber":140,"author":{"gitId":"zannloo"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":141,"author":{"gitId":"zannloo"},"content":"            String commandWithDate \u003d userCommand.substring(9); //\"deadline \" 9 index","lastModifiedDate":"2023-08-27"},{"lineNumber":142,"author":{"gitId":"zannloo"},"content":"            String cDeadline \u003d commandWithDate.split(\" /by \")[0]; //just description","lastModifiedDate":"2023-08-23"},{"lineNumber":143,"author":{"gitId":"zannloo"},"content":"            LocalDate byDate \u003d LocalDate.parse(commandWithDate.split(\" /by \")[1]); //just byDate","lastModifiedDate":"2023-08-27"},{"lineNumber":144,"author":{"gitId":"zannloo"},"content":"            Task task \u003d new Deadline(cDeadline, byDate);","lastModifiedDate":"2023-08-23"},{"lineNumber":145,"author":{"gitId":"zannloo"},"content":"            this.taskList.add(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":146,"author":{"gitId":"zannloo"},"content":"            return ui.generateAddDeadlineMessage(task, taskList);","lastModifiedDate":"2023-09-05"},{"lineNumber":147,"author":{"gitId":"zannloo"},"content":"        } catch (EmptyDeadlineDescriptionException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":148,"author":{"gitId":"zannloo"},"content":"            return e.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":149,"author":{"gitId":"zannloo"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":150,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":151,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":152,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":153,"author":{"gitId":"zannloo"},"content":"     * Represents the addition of new Event task into taskList according to user\u0027s command.","lastModifiedDate":"2023-08-28"},{"lineNumber":154,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":155,"author":{"gitId":"zannloo"},"content":"     * @param userCommand User\u0027s command containing the new Event task to be added into taskList.","lastModifiedDate":"2023-08-28"},{"lineNumber":156,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":157,"author":{"gitId":"zannloo"},"content":"    public String addEvent(String userCommand) {","lastModifiedDate":"2023-09-05"},{"lineNumber":158,"author":{"gitId":"zannloo"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":159,"author":{"gitId":"zannloo"},"content":"            if (userCommand.length() \u003c 6) {","lastModifiedDate":"2023-08-23"},{"lineNumber":160,"author":{"gitId":"zannloo"},"content":"                throw new EmptyEventDescriptionException();","lastModifiedDate":"2023-08-23"},{"lineNumber":161,"author":{"gitId":"zannloo"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":162,"author":{"gitId":"zannloo"},"content":"            String commandWithDate \u003d userCommand.substring(6); //\"todo \" 6 index","lastModifiedDate":"2023-08-22"},{"lineNumber":163,"author":{"gitId":"zannloo"},"content":"            String cEvent \u003d commandWithDate.split(\" /from \")[0]; //just description","lastModifiedDate":"2023-08-23"},{"lineNumber":164,"author":{"gitId":"zannloo"},"content":"            String dates \u003d commandWithDate.split(\" /from \")[1]; //bothDates","lastModifiedDate":"2023-08-23"},{"lineNumber":165,"author":{"gitId":"zannloo"},"content":"            LocalDate fromDate \u003d LocalDate.parse(dates.split(\" /to \")[0]); //just fromDate","lastModifiedDate":"2023-08-27"},{"lineNumber":166,"author":{"gitId":"zannloo"},"content":"            LocalDate toDate \u003d LocalDate.parse(dates.split(\" /to \")[1]); //just toDate","lastModifiedDate":"2023-08-27"},{"lineNumber":167,"author":{"gitId":"zannloo"},"content":"            Task task \u003d new Event(cEvent, fromDate, toDate);","lastModifiedDate":"2023-08-23"},{"lineNumber":168,"author":{"gitId":"zannloo"},"content":"            this.taskList.add(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":169,"author":{"gitId":"zannloo"},"content":"            return ui.generateAddEventMessage(task, taskList);","lastModifiedDate":"2023-09-05"},{"lineNumber":170,"author":{"gitId":"zannloo"},"content":"        } catch (EmptyEventDescriptionException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":171,"author":{"gitId":"zannloo"},"content":"            return e.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":172,"author":{"gitId":"zannloo"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":173,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":174,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":175,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":176,"author":{"gitId":"zannloo"},"content":"     * Represents the deletion of task from taskList according to user\u0027s command.","lastModifiedDate":"2023-08-28"},{"lineNumber":177,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":178,"author":{"gitId":"zannloo"},"content":"     * @param userCommand User\u0027s command containing the task to be deleted from taskList.","lastModifiedDate":"2023-08-28"},{"lineNumber":179,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":180,"author":{"gitId":"zannloo"},"content":"    public String delete(String userCommand) {","lastModifiedDate":"2023-09-05"},{"lineNumber":181,"author":{"gitId":"zannloo"},"content":"        int taskNumber \u003d parseInt(userCommand.split(\" \")[1]) - 1; //counting from 0","lastModifiedDate":"2023-08-23"},{"lineNumber":182,"author":{"gitId":"zannloo"},"content":"        Task task \u003d this.taskList.getTask(taskNumber);","lastModifiedDate":"2023-08-27"},{"lineNumber":183,"author":{"gitId":"zannloo"},"content":"        this.taskList.remove(taskNumber);","lastModifiedDate":"2023-08-27"},{"lineNumber":184,"author":{"gitId":"zannloo"},"content":"        return ui.generateDeleteMessage(task, taskList);","lastModifiedDate":"2023-09-05"},{"lineNumber":185,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":186,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":187,"author":{"gitId":"zannloo"},"content":"    public String find(String userCommand) {","lastModifiedDate":"2023-09-05"},{"lineNumber":188,"author":{"gitId":"zannloo"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":189,"author":{"gitId":"zannloo"},"content":"            if (userCommand.length() \u003c 5) {","lastModifiedDate":"2023-08-28"},{"lineNumber":190,"author":{"gitId":"zannloo"},"content":"                throw new EmptyFindDescriptionException();","lastModifiedDate":"2023-08-28"},{"lineNumber":191,"author":{"gitId":"zannloo"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":192,"author":{"gitId":"zannloo"},"content":"            String toMatch \u003d userCommand.substring(5); //\"deadline \" 9 index","lastModifiedDate":"2023-08-28"},{"lineNumber":193,"author":{"gitId":"zannloo"},"content":"            return ui.generateFindMessage(toMatch, taskList);","lastModifiedDate":"2023-09-05"},{"lineNumber":194,"author":{"gitId":"zannloo"},"content":"        } catch (EmptyFindDescriptionException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":195,"author":{"gitId":"zannloo"},"content":"            return e.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":196,"author":{"gitId":"zannloo"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":197,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":198,"author":{"gitId":"zannloo"},"content":"}","lastModifiedDate":"2023-08-20"},{"lineNumber":199,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"zannloo":199}},{"path":"src/main/java/teho/main/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zannloo"},"content":"package teho.main;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"zannloo"},"content":"import teho.main.Task;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"zannloo"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"zannloo"},"content":" * Represents a task with only a description.","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"zannloo"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"zannloo"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"zannloo"},"content":"     * Constructs new ToDo task with description.","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"zannloo"},"content":"     * @param description Description of task to be done.","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"zannloo"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"zannloo"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"zannloo"},"content":"     * Returns a string representation of the task details.","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"zannloo"},"content":"     * @return String representation of the ToDo task.","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"zannloo"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"zannloo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"zannloo"},"content":"        return \"[T]\" + super.getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"zannloo"},"content":"     * Returns a string representation of the task details for saving task in file.","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"zannloo"},"content":"     * @return String representation of the ToDo task.","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"zannloo"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"zannloo"},"content":"    public String fileString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"zannloo"},"content":"        String digitStatus \u003d this.isDone? \"1\": \"0\";","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"zannloo"},"content":"        return \"T|\" + digitStatus + \"|\" + this.description;","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"zannloo"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"zannloo":38}},{"path":"src/main/java/teho/main/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zannloo"},"content":"package teho.main;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"zannloo"},"content":"import java.lang.StringBuilder;","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"zannloo"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"zannloo"},"content":" * Deals with interactions with the user through generating messages.","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"zannloo"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"zannloo"},"content":"public class Ui {","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"zannloo"},"content":"     * Generates hello message when TehO chatbot starts.","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"zannloo"},"content":"     * @return String representation of hello message","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"zannloo"},"content":"    public static String generateHelloMessage() {","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"zannloo"},"content":"        return \"Hello! I\u0027m TehO \\nWhat can I do for you?\";","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"zannloo"},"content":"     * Generates goodbye message when user types bye and TehO chatbot exits.","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"zannloo"},"content":"     * @return String representation of bye message.","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"zannloo"},"content":"    public static String generateGoodbyeMessage() {","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"zannloo"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"zannloo"},"content":"     * Generates message containing list of tasks.","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"zannloo"},"content":"     * @param taskList List of tasks to be generated.","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"zannloo"},"content":"     * @return String representation of list of tasks generated.","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"zannloo"},"content":"    public static String generateList(TaskList taskList) {","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"zannloo"},"content":"        String str \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"zannloo"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"zannloo"},"content":"            Task task \u003d taskList.getTask(i);","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"zannloo"},"content":"            str +\u003d (i + 1) + \". \" + task.toString() + \"\\n\";;","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"zannloo"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"zannloo"},"content":"        return str;","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"zannloo"},"content":"     * Generates message to show that task is marked as done.","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"zannloo"},"content":"     * @param task Task marked as done.","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"zannloo"},"content":"     * @return String representation of marked task message.","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"zannloo"},"content":"    public static String generateMarkTaskMessage(Task task) {","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"zannloo"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + task.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"zannloo"},"content":"     * Generates message to show that task is marked as undone.","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"zannloo"},"content":"     * @param task Task marked as undone.","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"zannloo"},"content":"     * @return String representation of unmarked task message.","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"zannloo"},"content":"    public String generateUnmarkTaskMessage(Task task) {","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"zannloo"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + task.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"zannloo"},"content":"     * Generates message to show that ToDo task is added to list.","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"zannloo"},"content":"     * @param task Task added to list.","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"zannloo"},"content":"     * @param taskList List of tasks that added task.","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"zannloo"},"content":"     * @return String representation of add ToDo task message.","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"zannloo"},"content":"    public String generateAddToDoMessage(Task task, TaskList taskList) {","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"zannloo"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"zannloo"},"content":"                + task.toString() + \"\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"zannloo"},"content":"                + \"Now you have \" + taskList.getSize() + \" task(s) in the list.\";","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"zannloo"},"content":"     * Generates message to show that Deadline task is added to list.","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"zannloo"},"content":"     * @param task Task added to list.","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"zannloo"},"content":"     * @param taskList List of tasks that added task.","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"zannloo"},"content":"     * @return String representation of add Deadline task message.","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"zannloo"},"content":"    public String generateAddDeadlineMessage(Task task, TaskList taskList) {","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"zannloo"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"zannloo"},"content":"                + task.toString() + \"\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"zannloo"},"content":"                + \"Now you have \" + taskList.getSize() + \" task(s) in the list.\";","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"zannloo"},"content":"     * Generates message to show that Event task is added to list.","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"zannloo"},"content":"     * @param task Task added to list.","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"zannloo"},"content":"     * @param taskList List of tasks that added task.","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"zannloo"},"content":"     * @return String representation of add Event task message.","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":94,"author":{"gitId":"zannloo"},"content":"    public String generateAddEventMessage(Task task, TaskList taskList) {","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"zannloo"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"zannloo"},"content":"                + task.toString() + \"\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"zannloo"},"content":"                + \"Now you have \" + taskList.getSize() + \" task(s) in the list.\";","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":101,"author":{"gitId":"zannloo"},"content":"     * Generates message to show that task is deleted from list.","lastModifiedDate":"2023-08-28"},{"lineNumber":102,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":103,"author":{"gitId":"zannloo"},"content":"     * @param task Task deleted from list.","lastModifiedDate":"2023-08-28"},{"lineNumber":104,"author":{"gitId":"zannloo"},"content":"     * @param taskList List of tasks to delete task from.","lastModifiedDate":"2023-08-28"},{"lineNumber":105,"author":{"gitId":"zannloo"},"content":"     * @return String representation of delete task message.","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":107,"author":{"gitId":"zannloo"},"content":"    public String generateDeleteMessage(Task task, TaskList taskList) {","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"zannloo"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"zannloo"},"content":"                + task.toString() + \"\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"zannloo"},"content":"                + \"Now you have \" + taskList.getSize() + \" task(s) in the list.\";","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":114,"author":{"gitId":"zannloo"},"content":"     * Generates message to show that there is a loading error.","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":116,"author":{"gitId":"zannloo"},"content":"     * @return String representation of loading error message.","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"zannloo"},"content":"    public String showLoadingError() {","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"zannloo"},"content":"        return \"OHNO! Loading error!\";","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":121,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":122,"author":{"gitId":"zannloo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"zannloo"},"content":"     * Generates message containing list of tasks that matches the user\u0027s command.","lastModifiedDate":"2023-09-05"},{"lineNumber":124,"author":{"gitId":"zannloo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":125,"author":{"gitId":"zannloo"},"content":"     * @param toMatch User\u0027s command to be matched with tasks in list.","lastModifiedDate":"2023-09-05"},{"lineNumber":126,"author":{"gitId":"zannloo"},"content":"     * @param taskList List of tasks to be matched from.","lastModifiedDate":"2023-09-05"},{"lineNumber":127,"author":{"gitId":"zannloo"},"content":"     * @return String representation of list of tasks that matches user\u0027s command.","lastModifiedDate":"2023-09-05"},{"lineNumber":128,"author":{"gitId":"zannloo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":129,"author":{"gitId":"zannloo"},"content":"    public String generateFindMessage(String toMatch, TaskList taskList) {","lastModifiedDate":"2023-09-05"},{"lineNumber":130,"author":{"gitId":"zannloo"},"content":"        String str \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":131,"author":{"gitId":"zannloo"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-08-28"},{"lineNumber":132,"author":{"gitId":"zannloo"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":133,"author":{"gitId":"zannloo"},"content":"            Task task \u003d taskList.getTask(i);","lastModifiedDate":"2023-08-28"},{"lineNumber":134,"author":{"gitId":"zannloo"},"content":"            String stringTask \u003d  task.toString();","lastModifiedDate":"2023-08-28"},{"lineNumber":135,"author":{"gitId":"zannloo"},"content":"            if (stringTask.contains(toMatch)) {","lastModifiedDate":"2023-08-28"},{"lineNumber":136,"author":{"gitId":"zannloo"},"content":"                count++;","lastModifiedDate":"2023-08-28"},{"lineNumber":137,"author":{"gitId":"zannloo"},"content":"                str +\u003d count + \". \" + stringTask + \"\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":138,"author":{"gitId":"zannloo"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":139,"author":{"gitId":"zannloo"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":140,"author":{"gitId":"zannloo"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2023-08-28"},{"lineNumber":141,"author":{"gitId":"zannloo"},"content":"            str +\u003d \"There is no matching task:(\";","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"zannloo"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":143,"author":{"gitId":"zannloo"},"content":"        return str;","lastModifiedDate":"2023-09-05"},{"lineNumber":144,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":145,"author":{"gitId":"zannloo"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"zannloo":145}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"zannloo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"zannloo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"zannloo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"zannloo"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"zannloo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"zannloo"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"zannloo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"zannloo"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"zannloo"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"zannloo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"zannloo"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"zannloo"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"zannloo"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"zannloo"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"zannloo":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"zannloo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"zannloo"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"zannloo"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"zannloo"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"zannloo"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"zannloo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"zannloo"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"teho.main.MainWindow\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"zannloo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"zannloo"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"zannloo"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"zannloo"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"zannloo"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"zannloo"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"zannloo"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"zannloo"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"zannloo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"zannloo"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"zannloo":19}},{"path":"src/test/java/teho/main/DeadLineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zannloo"},"content":"package teho.main; //same package as the class being tested","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"zannloo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"zannloo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"zannloo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"zannloo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"zannloo"},"content":"public class DeadLineTest {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"zannloo"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"zannloo"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"zannloo"},"content":"        LocalDate byDate \u003d LocalDate.parse(\"2019-10-15\");","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"zannloo"},"content":"        String command \u003d \"Do homework\";","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"zannloo"},"content":"        Task task \u003d new Deadline(command, byDate);","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"zannloo"},"content":"        assertEquals(\"[D][ ] Do homework (by: Oct 15 2019)\", task.toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"zannloo"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"zannloo"},"content":"    public void fileStringTest() {","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"zannloo"},"content":"        LocalDate byDate \u003d LocalDate.parse(\"2019-10-15\");","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"zannloo"},"content":"        String command \u003d \"Do assignment\";","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"zannloo"},"content":"        Task task \u003d new Deadline(command, byDate);","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"zannloo"},"content":"        assertEquals(\"D|0|Do assignment|2019-10-15\", task.fileString());","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"zannloo"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"zannloo":27}},{"path":"src/test/java/teho/main/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zannloo"},"content":"package teho.main; //same package as the class being tested","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"zannloo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"zannloo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"zannloo"},"content":"public class ToDoTest {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"zannloo"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"zannloo"},"content":"    public void toStringTest(){","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"zannloo"},"content":"        String command \u003d \"Eat dinner\";","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"zannloo"},"content":"        Task task \u003d new ToDo(command);","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"zannloo"},"content":"        assertEquals(\"[T][ ] Eat dinner\", task.toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"zannloo"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"zannloo"},"content":"    public void fileStringTest() {","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"zannloo"},"content":"        String command \u003d \"Dance\";","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"zannloo"},"content":"        Task task \u003d new ToDo(command);","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"zannloo"},"content":"        assertEquals(\"T|0|Dance\", task.fileString());","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"zannloo"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"zannloo"},"content":"}","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"zannloo"},"content":"","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"zannloo":22}},{"path":"text-ui-test/data/teho.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zannloo"},"content":"D|1|return book|2023-12-14","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"zannloo"},"content":"E|0|project meeting|2023-12-13|2023-12-15","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"zannloo"},"content":"T|1|sleep","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"zannloo":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zannloo"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"zannloo"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"zannloo":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"zannloo"},"content":"java -classpath ..\\bin TehO \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zannloo":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"zannloo"},"content":"java -classpath ../bin TehO \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"zannloo"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zannloo":2,"-":32}}]
