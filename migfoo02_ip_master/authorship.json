[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"migfoo02"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"migfoo02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"migfoo02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"migfoo02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"migfoo02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"migfoo02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"migfoo02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"migfoo02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"migfoo02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"migfoo02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"migfoo02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"migfoo02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"migfoo02"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"migfoo02"},"content":"    mainClass.set(\"iris.Iris\")","lastModifiedDate":"2023-09-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"migfoo02"},"content":"    archiveBaseName \u003d \"iris\"","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"migfoo02":17}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"migfoo02"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"migfoo02"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"migfoo02"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"migfoo02"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"migfoo02"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"migfoo02"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"migfoo02"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"migfoo02"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"migfoo02"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"migfoo02"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"migfoo02"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"migfoo02"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"migfoo02"},"content":"/**","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"migfoo02"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"migfoo02"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"migfoo02"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"migfoo02"},"content":" */","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"migfoo02"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"migfoo02"},"content":"    @FXML","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"migfoo02"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"migfoo02"},"content":"    @FXML","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"migfoo02"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"migfoo02"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"migfoo02"},"content":"        try {","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"migfoo02"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"migfoo02"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"migfoo02"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"migfoo02"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"migfoo02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"migfoo02"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":35,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"migfoo02"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-11"},{"lineNumber":37,"author":{"gitId":"migfoo02"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":39,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":40,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"migfoo02"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":43,"author":{"gitId":"migfoo02"},"content":"    private void flip() {","lastModifiedDate":"2023-09-11"},{"lineNumber":44,"author":{"gitId":"migfoo02"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-11"},{"lineNumber":45,"author":{"gitId":"migfoo02"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-11"},{"lineNumber":46,"author":{"gitId":"migfoo02"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-11"},{"lineNumber":47,"author":{"gitId":"migfoo02"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-11"},{"lineNumber":48,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":49,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":50,"author":{"gitId":"migfoo02"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-11"},{"lineNumber":51,"author":{"gitId":"migfoo02"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-11"},{"lineNumber":52,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":53,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":54,"author":{"gitId":"migfoo02"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-11"},{"lineNumber":55,"author":{"gitId":"migfoo02"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-11"},{"lineNumber":56,"author":{"gitId":"migfoo02"},"content":"        db.flip();","lastModifiedDate":"2023-09-11"},{"lineNumber":57,"author":{"gitId":"migfoo02"},"content":"        return db;","lastModifiedDate":"2023-09-11"},{"lineNumber":58,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":59,"author":{"gitId":"migfoo02"},"content":"}","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"migfoo02":59}},{"path":"src/main/java/Iris/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"migfoo02"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"migfoo02"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"migfoo02"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"migfoo02"},"content":"package iris;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"migfoo02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"migfoo02"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"migfoo02"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"migfoo02"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"migfoo02"},"content":"    private String deadlineString;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"migfoo02"},"content":"    private LocalDate deadlineDate;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"migfoo02"},"content":"     * Constructor for the Deadline class.","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"migfoo02"},"content":"     * @param name          The name of the deadline task.","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"migfoo02"},"content":"     * @param deadlineString The string representation of the deadline date.","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"migfoo02"},"content":"    public Deadline(String name, String deadlineString) {","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"migfoo02"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"migfoo02"},"content":"        this.deadlineString \u003d deadlineString;","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"migfoo02"},"content":"        this.deadlineDate \u003d parseDateTime(deadlineString);","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"migfoo02"},"content":"     * Get the deadline string of the task.","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"migfoo02"},"content":"     * @return The deadline string.","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"migfoo02"},"content":"    public String getDeadlineString() {","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"migfoo02"},"content":"        return this.deadlineString;","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"migfoo02"},"content":"     * Generate a string representation of the task for writing to a file.","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"migfoo02"},"content":"     * @return The formatted string for file output.","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"migfoo02"},"content":"    public String writeTaskToFile() {","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"migfoo02"},"content":"        return String.format(\"%s | %s | %s | %s\", \"D\",","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"migfoo02"},"content":"                this.isDone() ? 1 : 0,","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"migfoo02"},"content":"                this.getDescription(),","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"migfoo02"},"content":"                this.getDeadlineString());","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"migfoo02"},"content":"     * Create a Deadline task object from an array of strings read from a file.","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"migfoo02"},"content":"     * @param args The array of strings containing task information.","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"migfoo02"},"content":"     * @return The Deadline task object.","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"migfoo02"},"content":"    public static Deadline readTaskFromFile(String[] args) {","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"migfoo02"},"content":"        Deadline newDeadlineTask \u003d new Deadline(args[2], args[3]);","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"migfoo02"},"content":"        if (args[1].equals(\"1\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"migfoo02"},"content":"            newDeadlineTask.markAsDone();","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"migfoo02"},"content":"        return newDeadlineTask;","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"migfoo02"},"content":"     * Parse the deadline string and convert it to a LocalDate object.","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"migfoo02"},"content":"     * @param deadlineString The string representation of the deadline date.","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"migfoo02"},"content":"     * @return The LocalDate object representing the deadline date.","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"migfoo02"},"content":"    private LocalDate parseDateTime(String deadlineString) {","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"migfoo02"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"migfoo02"},"content":"            return LocalDate.parse(deadlineString);","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"migfoo02"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"migfoo02"},"content":"            return null;","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":76,"author":{"gitId":"migfoo02"},"content":"     * Override the toString method to provide a custom string representation of the Deadline task.","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"migfoo02"},"content":"     * @return The formatted string representing the Deadline task.","lastModifiedDate":"2023-09-08"},{"lineNumber":79,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":80,"author":{"gitId":"migfoo02"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"migfoo02"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"migfoo02"},"content":"        String deadline;","lastModifiedDate":"2023-09-04"},{"lineNumber":83,"author":{"gitId":"migfoo02"},"content":"        if (deadlineDate !\u003d null) {","lastModifiedDate":"2023-09-04"},{"lineNumber":84,"author":{"gitId":"migfoo02"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-09-04"},{"lineNumber":85,"author":{"gitId":"migfoo02"},"content":"            deadline \u003d deadlineDate.format(formatter);","lastModifiedDate":"2023-09-04"},{"lineNumber":86,"author":{"gitId":"migfoo02"},"content":"        } else {","lastModifiedDate":"2023-09-08"},{"lineNumber":87,"author":{"gitId":"migfoo02"},"content":"            deadline \u003d deadlineString;","lastModifiedDate":"2023-09-04"},{"lineNumber":88,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":89,"author":{"gitId":"migfoo02"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), deadline);","lastModifiedDate":"2023-09-04"},{"lineNumber":90,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"migfoo02"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"migfoo02":91}},{"path":"src/main/java/Iris/EmptyTaskDescriptorsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"migfoo02"},"content":"package iris;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"migfoo02"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"migfoo02"},"content":" * An exception class representing a situation where the description of a todo task is empty.","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"migfoo02"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"migfoo02"},"content":"public class EmptyTaskDescriptorsException extends IrisException {","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"migfoo02"},"content":"     * Returns a string representation of the exception message.","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"migfoo02"},"content":"     * @return A string describing the exception.","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"migfoo02"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"migfoo02"},"content":"    public String toString() {","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"migfoo02"},"content":"        return \"The description of a todo cannot be empty.\";","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"migfoo02"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"migfoo02":17}},{"path":"src/main/java/Iris/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"migfoo02"},"content":"package iris;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"migfoo02"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"migfoo02"},"content":" * Represents an event task with a start and end time.","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"migfoo02"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"migfoo02"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"migfoo02"},"content":"    private String startTime;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"migfoo02"},"content":"    private String endTime;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"migfoo02"},"content":"     * Constructor for the Event class.","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"migfoo02"},"content":"     * @param name      The name of the event task.","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"migfoo02"},"content":"     * @param startTime The start time of the event.","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"migfoo02"},"content":"     * @param endTime   The end time of the event.","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"migfoo02"},"content":"    public Event(String name, String startTime, String endTime) {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"migfoo02"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"migfoo02"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"migfoo02"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"migfoo02"},"content":"     * Get the start time of the event.","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"migfoo02"},"content":"     * @return The start time.","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"migfoo02"},"content":"    public String getStartTime() {","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"migfoo02"},"content":"        return this.startTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"migfoo02"},"content":"     * Get the end time of the event.","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"migfoo02"},"content":"     * @return The end time.","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"migfoo02"},"content":"    public String getEndTime() {","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"migfoo02"},"content":"        return this.endTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"migfoo02"},"content":"     * Generate a string representation of the event task for writing to a file.","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"migfoo02"},"content":"     * @return The formatted string for file output.","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"migfoo02"},"content":"    public String writeTaskToFile() {","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"migfoo02"},"content":"        return String.format(\"%s | %s | %s | %s-%s\", \"E\",","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"migfoo02"},"content":"                this.isDone() ? 1 : 0,","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"migfoo02"},"content":"                this.getDescription(),","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"migfoo02"},"content":"                this.getStartTime(),","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"migfoo02"},"content":"                this.getEndTime());","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"migfoo02"},"content":"     * Create an Event task object from an array of strings read from a file.","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"migfoo02"},"content":"     * @param args The array of strings containing task information.","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"migfoo02"},"content":"     * @return The Event task object.","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"migfoo02"},"content":"    public static Event readTaskFromFile(String[] args) {","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"migfoo02"},"content":"        String[] eventTime \u003d args[3].split(\"-\");","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"migfoo02"},"content":"        Event newEventTask \u003d new Event(args[2], eventTime[0], eventTime[1]);","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"migfoo02"},"content":"        if (args[1].equals(\"1\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"migfoo02"},"content":"            newEventTask.markAsDone();","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"migfoo02"},"content":"        return newEventTask;","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"migfoo02"},"content":"     * Override the toString method to provide a custom string representation of the Event task.","lastModifiedDate":"2023-09-08"},{"lineNumber":70,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"migfoo02"},"content":"     * @return The formatted string representing the Event task.","lastModifiedDate":"2023-09-08"},{"lineNumber":72,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":73,"author":{"gitId":"migfoo02"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"migfoo02"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"migfoo02"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(),","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"migfoo02"},"content":"                this.startTime, this.endTime);","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"migfoo02"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"migfoo02":79}},{"path":"src/main/java/Iris/Iris.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"migfoo02"},"content":"package iris;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"migfoo02"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"migfoo02"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"migfoo02"},"content":" * The main class for the Iris task management application.","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"migfoo02"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"migfoo02"},"content":"public class Iris {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"migfoo02"},"content":"    private final Storage taskStorage;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"migfoo02"},"content":"    private final Parser commandParser;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"migfoo02"},"content":"    private ToDoList toDoList;","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"migfoo02"},"content":"     * Constructor for the Iris class.","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"migfoo02"},"content":"     * @param filePath The file path for storing task data.","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"migfoo02"},"content":"    public Iris(String filePath) {","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"migfoo02"},"content":"        commandParser \u003d new Parser();","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"migfoo02"},"content":"        taskStorage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"migfoo02"},"content":"        toDoList \u003d new ToDoList(taskStorage.loadTask());","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"migfoo02"},"content":"    public Iris() {","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"migfoo02"},"content":"        this(\"iris.txt\");","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"migfoo02"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"migfoo02"},"content":"        return \"Iris heard: \" + input;","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"migfoo02"},"content":"     * The main method to start and run the Iris application.","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"migfoo02"},"content":"     * @param args Command-line arguments (not used in this implementation).","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"migfoo02"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"migfoo02"},"content":"        new Iris(\"iris.txt\").run();","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"migfoo02"},"content":"     * Runs the Iris application.","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"migfoo02"},"content":"    public void run() {","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"migfoo02"},"content":"        Ui.welcomeMsg();","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"migfoo02"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"migfoo02"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"migfoo02"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"migfoo02"},"content":"                String input \u003d scanner.nextLine();","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"migfoo02"},"content":"                commandParser.parseCommand(taskStorage, toDoList, input);","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"migfoo02"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"migfoo02"},"content":"                System.out.println(\"Argument Error: \" + e.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"migfoo02"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"migfoo02"},"content":"                System.out.println(\"Out of Bounds Error: \" + e.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"migfoo02"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"migfoo02":58}},{"path":"src/main/java/Iris/IrisException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"migfoo02"},"content":"package iris;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"migfoo02"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"migfoo02"},"content":" * An exception class that serves as a base class for custom exceptions in the Iris application.","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"migfoo02"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"migfoo02"},"content":"public class IrisException extends Exception {","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"migfoo02"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"migfoo02":7}},{"path":"src/main/java/Iris/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"migfoo02"},"content":"package iris;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"migfoo02"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"migfoo02"},"content":" * The class responsible for parsing user commands in the Iris application.","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"migfoo02"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"migfoo02"},"content":"public class Parser {","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"migfoo02"},"content":"     * Parses and executes user commands.","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"migfoo02"},"content":"     * @param taskStorage The storage object for tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"migfoo02"},"content":"     * @param toDoList    The to-do list containing tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"migfoo02"},"content":"     * @param input       The user input command to be parsed.","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"migfoo02"},"content":"    public void parseCommand(Storage taskStorage, ToDoList toDoList, String input) {","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"migfoo02"},"content":"        String[] sections \u003d input.split(\" \", 2);","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"migfoo02"},"content":"        String command \u003d sections[0];","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"migfoo02"},"content":"        String rest \u003d sections.length \u003e 1 ? sections[1] : \"\";","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"migfoo02"},"content":"        switch (command) {","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"migfoo02"},"content":"            case \"bye\": {","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"migfoo02"},"content":"                Ui.exitMsg();","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"migfoo02"},"content":"                System.exit(0);","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"migfoo02"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"migfoo02"},"content":"            case \"list\": {","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"migfoo02"},"content":"                Ui.printTasks(toDoList);","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"migfoo02"},"content":"                break;","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"migfoo02"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"migfoo02"},"content":"            case \"todo\":","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"migfoo02"},"content":"            case \"deadline\":","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"migfoo02"},"content":"            case \"event\":","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"migfoo02"},"content":"                try {","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"migfoo02"},"content":"                    ToDoList.addTask(toDoList, command, rest);","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"migfoo02"},"content":"                } catch (EmptyTaskDescriptorsException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"migfoo02"},"content":"                    System.out.println(e.toString());","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"migfoo02"},"content":"                }","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"migfoo02"},"content":"                break;","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"migfoo02"},"content":"            case \"mark\": {","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"migfoo02"},"content":"                if (rest.isEmpty()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"migfoo02"},"content":"                    throw new IllegalArgumentException(\"Index is missing.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"migfoo02"},"content":"                }","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"migfoo02"},"content":"                int index \u003d Integer.parseInt(rest);","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"migfoo02"},"content":"                toDoList.markTask(index);","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"migfoo02"},"content":"                Task task \u003d toDoList.get(index);","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"migfoo02"},"content":"                Ui.markTaskMsg(task);","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"migfoo02"},"content":"                break;","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"migfoo02"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"migfoo02"},"content":"            case \"unmark\": {","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"migfoo02"},"content":"                if (rest.isEmpty()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"migfoo02"},"content":"                    throw new IllegalArgumentException(\"Index is missing.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"migfoo02"},"content":"                }","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"migfoo02"},"content":"                int index \u003d Integer.parseInt(rest);","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"migfoo02"},"content":"                toDoList.unmarkTask(index);","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"migfoo02"},"content":"                Task task \u003d toDoList.get(index);","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"migfoo02"},"content":"                Ui.unmarkTaskMsg(task);","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"migfoo02"},"content":"                break;","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"migfoo02"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"migfoo02"},"content":"            case \"delete\": {","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"migfoo02"},"content":"                if (rest.isEmpty()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"migfoo02"},"content":"                    throw new IllegalArgumentException(\"Index is missing.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"migfoo02"},"content":"                }","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"migfoo02"},"content":"                int index \u003d Integer.parseInt(rest);","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"migfoo02"},"content":"                ToDoList.deleteTask(toDoList, index);","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"migfoo02"},"content":"                break;","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"migfoo02"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"migfoo02"},"content":"            case \"find\": {","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"migfoo02"},"content":"                ToDoList keywordToDoList \u003d toDoList.getTasksWithKeyword(rest);","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"migfoo02"},"content":"                if (keywordToDoList.size() \u003e\u003d 1) {","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"migfoo02"},"content":"                    Ui.printKeywordTasksMsg(keywordToDoList);","lastModifiedDate":"2023-09-08"},{"lineNumber":70,"author":{"gitId":"migfoo02"},"content":"                } else {","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"migfoo02"},"content":"                    Ui.printNoKeywordTasksFound();","lastModifiedDate":"2023-09-08"},{"lineNumber":72,"author":{"gitId":"migfoo02"},"content":"                }","lastModifiedDate":"2023-09-08"},{"lineNumber":73,"author":{"gitId":"migfoo02"},"content":"                break;","lastModifiedDate":"2023-09-08"},{"lineNumber":74,"author":{"gitId":"migfoo02"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"migfoo02"},"content":"            default: {","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"migfoo02"},"content":"                throw new IllegalArgumentException(\"Unknown command.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"migfoo02"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"migfoo02"},"content":"        taskStorage.writeTask(toDoList);","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"migfoo02"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"migfoo02":81}},{"path":"src/main/java/Iris/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"migfoo02"},"content":"package iris;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"migfoo02"},"content":"import java.io.*;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"migfoo02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"migfoo02"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"migfoo02"},"content":" * The class responsible for loading and saving tasks to a file.","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"migfoo02"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"migfoo02"},"content":"public class Storage {","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"migfoo02"},"content":"    private final String filePath;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"migfoo02"},"content":"     * Constructor for the Storage class.","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"migfoo02"},"content":"     * @param filePath The file path where tasks are stored.","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"migfoo02"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"migfoo02"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"migfoo02"},"content":"     * Loads tasks from a file.","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"migfoo02"},"content":"     * @return An ArrayList of Task objects loaded from the file.","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"migfoo02"},"content":"    public ArrayList\u003cTask\u003e loadTask() {","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"migfoo02"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"migfoo02"},"content":"        ArrayList\u003cTask\u003e toDoList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"migfoo02"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"migfoo02"},"content":"            if (file.exists()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"migfoo02"},"content":"                try (BufferedReader fileReader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"migfoo02"},"content":"                    String line \u003d fileReader.readLine();","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"migfoo02"},"content":"                    while (line !\u003d null) {","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"migfoo02"},"content":"                        Task task \u003d Task.readTaskFromFile(line);","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"migfoo02"},"content":"                        toDoList.add(task);","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"migfoo02"},"content":"                        line \u003d fileReader.readLine();","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"migfoo02"},"content":"                    }","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"migfoo02"},"content":"                }","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"migfoo02"},"content":"            } else {","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"migfoo02"},"content":"                System.out.println(\"Looks like this is your first time here!\");","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"migfoo02"},"content":"                System.out.println(\"Iris will save your files in \" + filePath);","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"migfoo02"},"content":"                boolean fileCreated \u003d file.createNewFile();","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"migfoo02"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"migfoo02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"migfoo02"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"migfoo02"},"content":"        return toDoList;","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"migfoo02"},"content":"     * Writes tasks to a file.","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"migfoo02"},"content":"     * @param toDoList The ToDoList containing tasks to be saved to the file.","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"migfoo02"},"content":"    public void writeTask(ToDoList toDoList) {","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"migfoo02"},"content":"        try (FileWriter fileWriter \u003d new FileWriter(filePath)) {","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"migfoo02"},"content":"            for (int i \u003d 1; i \u003c\u003d toDoList.size(); i++) {","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"migfoo02"},"content":"                Task task \u003d toDoList.get(i);","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"migfoo02"},"content":"                fileWriter.write(task.writeTaskToFile() + \"\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"migfoo02"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"migfoo02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"migfoo02"},"content":"            System.out.println(\"An error has occurred whilst writing to file. Error: \" + e.getMessage());","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"migfoo02"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"migfoo02":67}},{"path":"src/main/java/Iris/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"migfoo02"},"content":"package iris;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"migfoo02"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"migfoo02"},"content":" * An abstract class representing a task in the Iris application.","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"migfoo02"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"migfoo02"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"migfoo02"},"content":"    private String description;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"migfoo02"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"migfoo02"},"content":"     * Constructor for the Task class.","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"migfoo02"},"content":"     * @param description The name of the task.","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"migfoo02"},"content":"    public Task(String description) {","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"migfoo02"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"migfoo02"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"migfoo02"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"migfoo02"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"migfoo02"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"migfoo02"},"content":"     * Marks the task as undone.","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"migfoo02"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"migfoo02"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"migfoo02"},"content":"     * Checks if the task is done.","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"migfoo02"},"content":"     * @return true if the task is done, false otherwise.","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"migfoo02"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"migfoo02"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"migfoo02"},"content":"     * Gets the name of the task.","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"migfoo02"},"content":"     * @return The name of the task.","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"migfoo02"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"migfoo02"},"content":"        return this.description;","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"migfoo02"},"content":"     * Abstract method to write the task to a file.","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"migfoo02"},"content":"     * @return A string representation of the task for file output.","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"migfoo02"},"content":"    public abstract String writeTaskToFile();","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"migfoo02"},"content":"     * Static method to create a Task object from a string representation read from a file.","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"migfoo02"},"content":"     * @param input The string representation of the task read from the file.","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"migfoo02"},"content":"     * @return A Task object created from the input string.","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"migfoo02"},"content":"    public static Task readTaskFromFile(String input) {","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"migfoo02"},"content":"        String[] args \u003d input.split(\" \\\\| \");","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"migfoo02"},"content":"        Task task;","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"migfoo02"},"content":"        switch (args[0]) {","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"migfoo02"},"content":"            case \"T\":","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"migfoo02"},"content":"                task \u003d Todo.readTaskFromFile(args);","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"migfoo02"},"content":"                break;","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"migfoo02"},"content":"            case \"D\":","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"migfoo02"},"content":"                task \u003d Deadline.readTaskFromFile(args);","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"migfoo02"},"content":"                break;","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"migfoo02"},"content":"            case \"E\":","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"migfoo02"},"content":"                task \u003d Event.readTaskFromFile(args);","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"migfoo02"},"content":"                break;","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"migfoo02"},"content":"            default:","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"migfoo02"},"content":"                task \u003d null;","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"migfoo02"},"content":"                break;","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"migfoo02"},"content":"        return task;","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"migfoo02"},"content":"    public boolean ifDescriptionContains(String keyword) {","lastModifiedDate":"2023-09-08"},{"lineNumber":86,"author":{"gitId":"migfoo02"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2023-09-08"},{"lineNumber":87,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":88,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":89,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":90,"author":{"gitId":"migfoo02"},"content":"     * Overrides the default toString method to provide a custom string representation of the task.","lastModifiedDate":"2023-09-08"},{"lineNumber":91,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":92,"author":{"gitId":"migfoo02"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2023-09-08"},{"lineNumber":93,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":94,"author":{"gitId":"migfoo02"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"migfoo02"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"migfoo02"},"content":"        String status \u003d this.isDone ? \"X\" : \" \";","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"migfoo02"},"content":"        return \"[\" + status + \"] \" + this.description;","lastModifiedDate":"2023-09-08"},{"lineNumber":98,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"migfoo02"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"migfoo02":99}},{"path":"src/main/java/Iris/ToDoList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"migfoo02"},"content":"package iris;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"migfoo02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"migfoo02"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"migfoo02"},"content":" * Represents a list of tasks in the Iris application.","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"migfoo02"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"migfoo02"},"content":"public class ToDoList {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"migfoo02"},"content":"    private final ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"migfoo02"},"content":"     * Constructor for the ToDoList class.","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"migfoo02"},"content":"     * @param list The initial list of tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"migfoo02"},"content":"    public ToDoList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"migfoo02"},"content":"        this.list \u003d list;","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"migfoo02"},"content":"     * Adds a task to the list.","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"migfoo02"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"migfoo02"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"migfoo02"},"content":"        list.add(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"migfoo02"},"content":"     * Removes a task from the list by index.","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"migfoo02"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"migfoo02"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range.","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"migfoo02"},"content":"    public void remove(int index) {","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"migfoo02"},"content":"        if (index \u003c 1 || index \u003e list.size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"migfoo02"},"content":"            throw new IndexOutOfBoundsException(\"Task index is out of range.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"migfoo02"},"content":"        list.remove(index - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"migfoo02"},"content":"     * Gets a task from the list by index.","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"migfoo02"},"content":"     * @param index The index of the task to be retrieved.","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"migfoo02"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"migfoo02"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range.","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"migfoo02"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"migfoo02"},"content":"        if (index \u003c 1 || index \u003e list.size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"migfoo02"},"content":"            throw new IndexOutOfBoundsException(\"Task index is out of range.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"migfoo02"},"content":"        return list.get(index - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"migfoo02"},"content":"     * Marks a task as done by index.","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"migfoo02"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"migfoo02"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range.","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"migfoo02"},"content":"    public void markTask(int index) {","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"migfoo02"},"content":"        if (index \u003c 1 || index \u003e list.size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"migfoo02"},"content":"            throw new IndexOutOfBoundsException(\"Task index is out of range.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"migfoo02"},"content":"        list.get(index - 1).markAsDone();","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":70,"author":{"gitId":"migfoo02"},"content":"     * Marks a task as undone by index.","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":72,"author":{"gitId":"migfoo02"},"content":"     * @param index The index of the task to be marked as undone.","lastModifiedDate":"2023-09-08"},{"lineNumber":73,"author":{"gitId":"migfoo02"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range.","lastModifiedDate":"2023-09-08"},{"lineNumber":74,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"migfoo02"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2023-09-08"},{"lineNumber":76,"author":{"gitId":"migfoo02"},"content":"        if (index \u003c 1 || index \u003e list.size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"migfoo02"},"content":"            throw new IndexOutOfBoundsException(\"Task index is out of range.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"migfoo02"},"content":"        list.get(index - 1).markAsUndone();","lastModifiedDate":"2023-09-08"},{"lineNumber":80,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":83,"author":{"gitId":"migfoo02"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2023-09-08"},{"lineNumber":84,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":85,"author":{"gitId":"migfoo02"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2023-09-08"},{"lineNumber":86,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":87,"author":{"gitId":"migfoo02"},"content":"    public int size() {","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"migfoo02"},"content":"        return list.size();","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":92,"author":{"gitId":"migfoo02"},"content":"     * Adds a task to the ToDoList based on the command and description provided.","lastModifiedDate":"2023-09-08"},{"lineNumber":93,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":94,"author":{"gitId":"migfoo02"},"content":"     * @param toDoList     The ToDoList to which the task will be added.","lastModifiedDate":"2023-09-08"},{"lineNumber":95,"author":{"gitId":"migfoo02"},"content":"     * @param command      The command indicating the type of task (e.g., \"todo\").","lastModifiedDate":"2023-09-08"},{"lineNumber":96,"author":{"gitId":"migfoo02"},"content":"     * @param description  The description of the task.","lastModifiedDate":"2023-09-08"},{"lineNumber":97,"author":{"gitId":"migfoo02"},"content":"     * @throws EmptyTaskDescriptorsException If the task description is empty.","lastModifiedDate":"2023-09-08"},{"lineNumber":98,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":99,"author":{"gitId":"migfoo02"},"content":"    public static void addTask(ToDoList toDoList, String command, String description)","lastModifiedDate":"2023-09-08"},{"lineNumber":100,"author":{"gitId":"migfoo02"},"content":"            throws EmptyTaskDescriptorsException {","lastModifiedDate":"2023-09-08"},{"lineNumber":101,"author":{"gitId":"migfoo02"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"migfoo02"},"content":"            throw new EmptyTaskDescriptorsException();","lastModifiedDate":"2023-09-08"},{"lineNumber":103,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"migfoo02"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"migfoo02"},"content":"        if (command.equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"migfoo02"},"content":"            task \u003d new Todo(description);","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"migfoo02"},"content":"        } else if (command.equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"migfoo02"},"content":"            String[] deadlineSections \u003d description.split(\" /by \", 2);","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"migfoo02"},"content":"            String name \u003d deadlineSections[0];","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"migfoo02"},"content":"            String deadlineString \u003d deadlineSections[1];","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"migfoo02"},"content":"            task \u003d new Deadline(name, deadlineString);","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"migfoo02"},"content":"        } else if (command.equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"migfoo02"},"content":"            String[] eventSections \u003d description.split(\" /from \", 2);","lastModifiedDate":"2023-09-05"},{"lineNumber":114,"author":{"gitId":"migfoo02"},"content":"            String name \u003d eventSections[0];","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"migfoo02"},"content":"            String startAndEnd \u003d eventSections[1];","lastModifiedDate":"2023-09-05"},{"lineNumber":116,"author":{"gitId":"migfoo02"},"content":"            String[] startAndEndSections \u003d startAndEnd.split(\" /to \", 2);","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"migfoo02"},"content":"            String startTime \u003d startAndEndSections[0];","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"migfoo02"},"content":"            String endTime \u003d startAndEndSections[1];","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"migfoo02"},"content":"            task \u003d new Event(name, startTime, endTime);","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"migfoo02"},"content":"        toDoList.add(task);","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"migfoo02"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"migfoo02"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2023-09-05"},{"lineNumber":124,"author":{"gitId":"migfoo02"},"content":"        Ui.printLength(toDoList);","lastModifiedDate":"2023-09-05"},{"lineNumber":125,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":126,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":127,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":128,"author":{"gitId":"migfoo02"},"content":"     * Deletes a task from the ToDoList by index.","lastModifiedDate":"2023-09-08"},{"lineNumber":129,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":130,"author":{"gitId":"migfoo02"},"content":"     * @param toDoList The ToDoList from which the task will be deleted.","lastModifiedDate":"2023-09-08"},{"lineNumber":131,"author":{"gitId":"migfoo02"},"content":"     * @param index    The index of the task to be deleted.","lastModifiedDate":"2023-09-08"},{"lineNumber":132,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":133,"author":{"gitId":"migfoo02"},"content":"    public static void deleteTask(ToDoList toDoList, int index) {","lastModifiedDate":"2023-09-05"},{"lineNumber":134,"author":{"gitId":"migfoo02"},"content":"        Task task \u003d toDoList.get(index);","lastModifiedDate":"2023-09-05"},{"lineNumber":135,"author":{"gitId":"migfoo02"},"content":"        toDoList.remove(index);","lastModifiedDate":"2023-09-05"},{"lineNumber":136,"author":{"gitId":"migfoo02"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-09-05"},{"lineNumber":137,"author":{"gitId":"migfoo02"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2023-09-05"},{"lineNumber":138,"author":{"gitId":"migfoo02"},"content":"        Ui.printLength(toDoList);","lastModifiedDate":"2023-09-05"},{"lineNumber":139,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":140,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":141,"author":{"gitId":"migfoo02"},"content":"    public ToDoList getTasksWithKeyword(String keyword) {","lastModifiedDate":"2023-09-08"},{"lineNumber":142,"author":{"gitId":"migfoo02"},"content":"        ArrayList\u003cTask\u003e keywordTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-09-08"},{"lineNumber":143,"author":{"gitId":"migfoo02"},"content":"        for (Task task : list) {","lastModifiedDate":"2023-09-08"},{"lineNumber":144,"author":{"gitId":"migfoo02"},"content":"            if (task.ifDescriptionContains(keyword)) {","lastModifiedDate":"2023-09-08"},{"lineNumber":145,"author":{"gitId":"migfoo02"},"content":"                keywordTasks.add(task);","lastModifiedDate":"2023-09-08"},{"lineNumber":146,"author":{"gitId":"migfoo02"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":147,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":148,"author":{"gitId":"migfoo02"},"content":"        return new ToDoList(keywordTasks);","lastModifiedDate":"2023-09-08"},{"lineNumber":149,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":150,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":151,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":152,"author":{"gitId":"migfoo02"},"content":"     * Overrides the default toString method to provide a custom string representation of the ToDoList.","lastModifiedDate":"2023-09-08"},{"lineNumber":153,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":154,"author":{"gitId":"migfoo02"},"content":"     * @return A formatted string representing the list of tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":155,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":156,"author":{"gitId":"migfoo02"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":157,"author":{"gitId":"migfoo02"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":158,"author":{"gitId":"migfoo02"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-08-24"},{"lineNumber":159,"author":{"gitId":"migfoo02"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-24"},{"lineNumber":160,"author":{"gitId":"migfoo02"},"content":"            result.append((i + 1) + \". \" + list.get(i));","lastModifiedDate":"2023-08-24"},{"lineNumber":161,"author":{"gitId":"migfoo02"},"content":"            if (i + 1 \u003c list.size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":162,"author":{"gitId":"migfoo02"},"content":"                result.append(\"\\n\");","lastModifiedDate":"2023-08-24"},{"lineNumber":163,"author":{"gitId":"migfoo02"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":164,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":165,"author":{"gitId":"migfoo02"},"content":"        return result.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":166,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":167,"author":{"gitId":"migfoo02"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"migfoo02":167}},{"path":"src/main/java/Iris/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"migfoo02"},"content":"package iris;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"migfoo02"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"migfoo02"},"content":" * Represents a todo task in the Iris application.","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"migfoo02"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"migfoo02"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"migfoo02"},"content":"     * Constructor for the Todo class.","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"migfoo02"},"content":"     * @param name The name of the todo task.","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"migfoo02"},"content":"    public Todo(String name) {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"migfoo02"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"migfoo02"},"content":"     * Generate a string representation of the todo task for writing to a file.","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"migfoo02"},"content":"     * @return The formatted string for file output.","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"migfoo02"},"content":"    public String writeTaskToFile() {","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"migfoo02"},"content":"        return String.format(\"%s | %s | %s\", \"T\",","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"migfoo02"},"content":"                this.isDone() ? 1 : 0,","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"migfoo02"},"content":"                this.getDescription());","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"migfoo02"},"content":"     * Create a Todo task object from an array of strings read from a file.","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"migfoo02"},"content":"     * @param args The array of strings containing task information.","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"migfoo02"},"content":"     * @return The Todo task object.","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"migfoo02"},"content":"    public static Todo readTaskFromFile(String[] args) {","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"migfoo02"},"content":"        Todo newTodoTask \u003d new Todo(args[2]);","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"migfoo02"},"content":"        if (args[1].equals(\"1\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"migfoo02"},"content":"            newTodoTask.markAsDone();","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"migfoo02"},"content":"        return newTodoTask;","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"migfoo02"},"content":"     * Override the toString method to provide a custom string representation of the Todo task.","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"migfoo02"},"content":"     * @return The formatted string representing the Todo task.","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"migfoo02"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"migfoo02"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"migfoo02"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"migfoo02"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"migfoo02":50}},{"path":"src/main/java/Iris/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"migfoo02"},"content":"package iris;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"migfoo02"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"migfoo02"},"content":" * The class responsible for user interface interactions in the Iris application.","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"migfoo02"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"migfoo02"},"content":"public class Ui {","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"migfoo02"},"content":"    private static final String HORIZONTAL_LINE \u003d \"      \" +","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"migfoo02"},"content":"            \"_______________________________________________________________________________\";","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"migfoo02"},"content":"     * Displays the welcome message when the application starts.","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"migfoo02"},"content":"    public static void welcomeMsg() {","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"migfoo02"},"content":"        String greetings \u003d \"Hello! I\u0027m Iris! \\n What can I do for you?\";","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"migfoo02"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"migfoo02"},"content":"        System.out.println(greetings);","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"migfoo02"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"migfoo02"},"content":"     * Displays the exit message when the user exits the application.","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"migfoo02"},"content":"    public static void exitMsg() {","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"migfoo02"},"content":"        String byeMsg \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"migfoo02"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"migfoo02"},"content":"        System.out.println(byeMsg);","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"migfoo02"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"migfoo02"},"content":"     * Displays a general response message to the user.","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"migfoo02"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"migfoo02"},"content":"    public static void generalRespond(String message) {","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"migfoo02"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"migfoo02"},"content":"        System.out.println(message);","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"migfoo02"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"migfoo02"},"content":"     * Displays a message when a task is marked as done.","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"migfoo02"},"content":"     * @param task The task that has been marked as done.","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"migfoo02"},"content":"    public static void markTaskMsg(Task task) {","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"migfoo02"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"migfoo02"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\" + task);","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"migfoo02"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"migfoo02"},"content":"     * Displays a message when a task is marked as not done.","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"migfoo02"},"content":"     * @param task The task that has been marked as not done.","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"migfoo02"},"content":"    public static void unmarkTaskMsg(Task task) {","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"migfoo02"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"migfoo02"},"content":"        System.out.println(\"Okay, I\u0027ve marked this task as not done yet: \\n\" + task);","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"migfoo02"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"migfoo02"},"content":"     * Displays the list of tasks to the user.","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"migfoo02"},"content":"     * @param toDoList The ToDoList containing the tasks to be displayed.","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"migfoo02"},"content":"    public static void printTasks(ToDoList toDoList) {","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"migfoo02"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"migfoo02"},"content":"        System.out.println(toDoList);","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"migfoo02"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"migfoo02"},"content":"    public static void printKeywordTasksMsg(ToDoList keywordToDoList) {","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"migfoo02"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-09-08"},{"lineNumber":76,"author":{"gitId":"migfoo02"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"migfoo02"},"content":"        System.out.println(keywordToDoList);","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"migfoo02"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-09-08"},{"lineNumber":79,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":80,"author":{"gitId":"migfoo02"},"content":"    public static void printNoKeywordTasksFound() {","lastModifiedDate":"2023-09-08"},{"lineNumber":81,"author":{"gitId":"migfoo02"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-09-08"},{"lineNumber":82,"author":{"gitId":"migfoo02"},"content":"        System.out.println(\"No matching tasks found.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":83,"author":{"gitId":"migfoo02"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-09-08"},{"lineNumber":84,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":85,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":86,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":87,"author":{"gitId":"migfoo02"},"content":"     * Displays the number of tasks in the list.","lastModifiedDate":"2023-09-08"},{"lineNumber":88,"author":{"gitId":"migfoo02"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":89,"author":{"gitId":"migfoo02"},"content":"     * @param toDoList The ToDoList for which the number of tasks will be displayed.","lastModifiedDate":"2023-09-08"},{"lineNumber":90,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":91,"author":{"gitId":"migfoo02"},"content":"    public static void printLength(ToDoList toDoList) {","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"migfoo02"},"content":"        int listSize \u003d toDoList.size();","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"migfoo02"},"content":"        System.out.println(\"Now you have \" + listSize + \" tasks in the list.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"migfoo02"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"migfoo02":95}},{"path":"src/main/java/Iris/iris.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"migfoo02"},"content":"T | 0 | read book","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"migfoo02"},"content":"T | 0 | write textbook","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"migfoo02":2}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"migfoo02"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"migfoo02"},"content":"/**","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"migfoo02"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"migfoo02"},"content":" */","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"migfoo02"},"content":"public class Launcher {","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"migfoo02"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"migfoo02"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"migfoo02"},"content":"}","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"migfoo02":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"migfoo02"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"migfoo02"},"content":"import iris.Iris;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"migfoo02"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"migfoo02"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"migfoo02"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"migfoo02"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"migfoo02"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"migfoo02"},"content":"/**","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"migfoo02"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"migfoo02"},"content":" */","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"migfoo02"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"migfoo02"},"content":"    private Iris iris \u003d new Iris();","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"migfoo02"},"content":"    @Override","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"migfoo02"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"migfoo02"},"content":"        try {","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"migfoo02"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"migfoo02"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"migfoo02"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"migfoo02"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"migfoo02"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setIris(iris);","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"migfoo02"},"content":"            stage.show();","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"migfoo02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"migfoo02"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"migfoo02"},"content":"}","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"migfoo02":30}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"migfoo02"},"content":"import iris.Iris;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"migfoo02"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"migfoo02"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"migfoo02"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"migfoo02"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"migfoo02"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"migfoo02"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"migfoo02"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"migfoo02"},"content":"/**","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"migfoo02"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"migfoo02"},"content":" */","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"migfoo02"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"migfoo02"},"content":"    @FXML","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"migfoo02"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"migfoo02"},"content":"    @FXML","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"migfoo02"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"migfoo02"},"content":"    @FXML","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"migfoo02"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"migfoo02"},"content":"    @FXML","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"migfoo02"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"migfoo02"},"content":"    private Iris iris;","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"migfoo02"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"migfoo02"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"migfoo02"},"content":"    @FXML","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"migfoo02"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"migfoo02"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"migfoo02"},"content":"    public void setIris(Iris i) {","lastModifiedDate":"2023-09-11"},{"lineNumber":35,"author":{"gitId":"migfoo02"},"content":"        iris \u003d i;","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":37,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"migfoo02"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":39,"author":{"gitId":"migfoo02"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-11"},{"lineNumber":40,"author":{"gitId":"migfoo02"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"migfoo02"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"migfoo02"},"content":"    @FXML","lastModifiedDate":"2023-09-11"},{"lineNumber":43,"author":{"gitId":"migfoo02"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-11"},{"lineNumber":44,"author":{"gitId":"migfoo02"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-11"},{"lineNumber":45,"author":{"gitId":"migfoo02"},"content":"        String response \u003d iris.getResponse(input);","lastModifiedDate":"2023-09-11"},{"lineNumber":46,"author":{"gitId":"migfoo02"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-11"},{"lineNumber":47,"author":{"gitId":"migfoo02"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-11"},{"lineNumber":48,"author":{"gitId":"migfoo02"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-11"},{"lineNumber":49,"author":{"gitId":"migfoo02"},"content":"        );","lastModifiedDate":"2023-09-11"},{"lineNumber":50,"author":{"gitId":"migfoo02"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-11"},{"lineNumber":51,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":52,"author":{"gitId":"migfoo02"},"content":"}","lastModifiedDate":"2023-09-11"},{"lineNumber":53,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"migfoo02":53}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"migfoo02"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"migfoo02"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"migfoo02"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"migfoo02"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"migfoo02"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"migfoo02"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"migfoo02"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"migfoo02"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"migfoo02"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"migfoo02"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"migfoo02"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"migfoo02"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"migfoo02"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"migfoo02"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"migfoo02":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"migfoo02"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"migfoo02"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"migfoo02"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"migfoo02"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"migfoo02"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"migfoo02"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"migfoo02"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"migfoo02"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"migfoo02"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"migfoo02"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"migfoo02"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"migfoo02"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"migfoo02"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"migfoo02"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"migfoo02"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"migfoo02"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"migfoo02"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"migfoo02":19}},{"path":"src/test/java/Iris/ToDoListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"migfoo02"},"content":"package iris;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"migfoo02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"migfoo02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"migfoo02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"migfoo02"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"migfoo02"},"content":"public class ToDoListTest {","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"migfoo02"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"migfoo02"},"content":"    public void addTask_emptyDescription_exceptionThrown() {","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"migfoo02"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"migfoo02"},"content":"            ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"migfoo02"},"content":"            ToDoList taskListTester \u003d new ToDoList(taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"migfoo02"},"content":"            ToDoList.addTask(taskListTester, \"deadline\", \"\");","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"migfoo02"},"content":"            fail(\"Expected exception was not thrown.\");","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"migfoo02"},"content":"        } catch (EmptyTaskDescriptorsException ex) {","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"migfoo02"},"content":"            assertEquals(\"The description of a todo cannot be empty.\", ex.toString());","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"migfoo02"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"migfoo02"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"migfoo02":22}},{"path":"src/test/java/Iris/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"migfoo02"},"content":"package iris;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"migfoo02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"migfoo02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"migfoo02"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"migfoo02"},"content":"public class ToDoTest {","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"migfoo02"},"content":"    @Test","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"migfoo02"},"content":"    public void todo_correctInitialisation_toStringCorrect() {","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"migfoo02"},"content":"        Todo todo \u003d new Todo(\"test task\");","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"migfoo02"},"content":"        assertEquals(\"[T][ ] test task\", todo.toString());","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"migfoo02"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"migfoo02"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"migfoo02":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"migfoo02"},"content":"todo first","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"migfoo02"},"content":"second","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"migfoo02"},"content":"deadline","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"migfoo02"},"content":"event third /from 4pm /to 6pm","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"migfoo02"},"content":"list","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"migfoo02"},"content":"mark 2","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"migfoo02"},"content":"list","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"migfoo02"},"content":"unmark 2","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"migfoo02"},"content":"deadline fourth /by 7pm","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"migfoo02"},"content":"mark 3","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"migfoo02"},"content":"list","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"migfoo02"},"content":"delete 1","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"migfoo02"},"content":"delete 1","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"migfoo02"},"content":"list","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"migfoo02"},"content":"bye","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"migfoo02":15}}]
