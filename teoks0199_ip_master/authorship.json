[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"teoks0199"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"teoks0199"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"teoks0199"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"teoks0199"},"content":"checkstyle {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"teoks0199"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"teoks0199"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"teoks0199":7,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"teoks0199"},"content":"T | N | Homework","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"teoks0199"},"content":"D | Y | Project | 2023-11-11","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"teoks0199"},"content":"E | N | Midterms | 2023-10-11 | 2023-10-12","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":"E | N | Finals | 2023-11-11 | 2023-11-12","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"teoks0199"},"content":"T | N | read book","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":"T | N | return book","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":"D | N | write book | 2022-11-11","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"E | N | book fair | 2000-11-11 | 2000-11-11","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"teoks0199":8}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teoks0199"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"teoks0199"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"teoks0199"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"teoks0199"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"teoks0199"},"content":" * Program to run a task manager that can add, delete and mark tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"teoks0199"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"teoks0199"},"content":" * @author Teo Kai Sheng","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"teoks0199"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"teoks0199"},"content":"    private static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"teoks0199"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"teoks0199"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"teoks0199"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"teoks0199"},"content":"     * Constructor to start the program.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"teoks0199"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"teoks0199"},"content":"     * @param filePath The file path of the saved task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"teoks0199"},"content":"    public Duke(Path filePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"teoks0199"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"teoks0199"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"teoks0199"},"content":"        tasks \u003d new TaskList(storage.loadTaskList());","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"teoks0199"},"content":"     * Runs the program.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"teoks0199"},"content":"    public void run() {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"teoks0199"},"content":"        ui.greet();","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"teoks0199"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"teoks0199"},"content":"        String input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"teoks0199"},"content":"        Parser parser \u003d new Parser(ui, tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"teoks0199"},"content":"        parser.parse(input);","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"teoks0199"},"content":"        while (!parser.isDone()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"teoks0199"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"teoks0199"},"content":"            parser.parse(input);","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"teoks0199"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"teoks0199"},"content":"        storage.updateTaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"teoks0199"},"content":"     * Main function that starts the program loading in the saved task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"teoks0199"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"teoks0199"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"teoks0199"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"teoks0199"},"content":"        new Duke(Paths.get(\".\", \"data\", \"duke.txt\")).run(); // ./data/duke.txt","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"teoks0199":53,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teoks0199"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"teoks0199"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":" * Used to handle exceptions specific to Duke.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"teoks0199"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":" * @author Teo Kai Sheng","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"teoks0199"},"content":"     * Constructor for creating a DukeException.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"teoks0199"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"teoks0199"},"content":"     * @param e Error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"teoks0199"},"content":"    public DukeException(String e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"teoks0199"},"content":"        super(e);","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"teoks0199"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"teoks0199":17}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teoks0199"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"teoks0199"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":" * Used to parse user input into appropriate commands.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"teoks0199"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":" * @author Teo Kai Sheng","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"public class Parser {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"teoks0199"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"teoks0199"},"content":"    private boolean finish;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"teoks0199"},"content":"     * Constructor to create a Parser.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"teoks0199"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"teoks0199"},"content":"     * @param ui Instance to handle the printing of user interface.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"teoks0199"},"content":"     * @param tasks Instance of TaskList to handle commands.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"teoks0199"},"content":"    public Parser(Ui ui, TaskList tasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"teoks0199"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"teoks0199"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"teoks0199"},"content":"        this.finish \u003d false;","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"teoks0199"},"content":"     * Parses the user input and calls the appropriate task command.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"teoks0199"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"teoks0199"},"content":"     * @param s User input picked up by the scanner.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"teoks0199"},"content":"    public void parse(String s) {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"teoks0199"},"content":"        String[] input \u003d s.split(\" \", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"teoks0199"},"content":"        String command \u003d input[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"teoks0199"},"content":"        ui.horizontalLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"teoks0199"},"content":"        if (command.equals(\"list\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"teoks0199"},"content":"            tasks.showList(input);","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"teoks0199"},"content":"        } else if (command.equals(\"mark\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"teoks0199"},"content":"            tasks.markTask(input);","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"teoks0199"},"content":"        } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"teoks0199"},"content":"            tasks.unmarkTask(input);","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"teoks0199"},"content":"        } else if (command.equals(\"delete\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"teoks0199"},"content":"            tasks.deleteTask(input);","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"teoks0199"},"content":"        } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"teoks0199"},"content":"            tasks.addDeadline(input);","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"teoks0199"},"content":"        } else if (command.equals(\"event\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"teoks0199"},"content":"            tasks.addEvent(input);","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"teoks0199"},"content":"        } else if (command.equals(\"todo\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"teoks0199"},"content":"            tasks.addToDo(input);","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"teoks0199"},"content":"        } else if (command.equals(\"find\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"teoks0199"},"content":"            tasks.find(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"teoks0199"},"content":"        } else if (command.equals(\"bye\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"teoks0199"},"content":"            this.finish \u003d true;","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"teoks0199"},"content":"            ui.bye();","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"teoks0199"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"teoks0199"},"content":"            ui.oops();","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"teoks0199"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"teoks0199"},"content":"        ui.horizontalLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"teoks0199"},"content":"     * Indicates if parsing should stop.","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"teoks0199"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"teoks0199"},"content":"     * @return A boolean value to indicate when to stop asking for user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"teoks0199"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"teoks0199"},"content":"        return finish;","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"teoks0199"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"teoks0199":67}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teoks0199"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"teoks0199"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"teoks0199"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"teoks0199"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"teoks0199"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"teoks0199"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"teoks0199"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"teoks0199"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"teoks0199"},"content":" * Used to handle loading and saving of task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"teoks0199"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"teoks0199"},"content":" * @author Teo Kai Sheng","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"teoks0199"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"teoks0199"},"content":"public class Storage {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"teoks0199"},"content":"    private Path filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"teoks0199"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"teoks0199"},"content":"     * Constructor to create a Storage object.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"teoks0199"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"teoks0199"},"content":"     * @param filePath The file path of the saved task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"teoks0199"},"content":"    public Storage(Path filePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"teoks0199"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"teoks0199"},"content":"        list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"teoks0199"},"content":"     * Loads a saved task list if it exists.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"teoks0199"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"teoks0199"},"content":"     * @return An ArrayList that was saved.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"teoks0199"},"content":"    public ArrayList\u003cTask\u003e loadTaskList() {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"teoks0199"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"teoks0199"},"content":"            // Create the directory if it doesn\u0027t exist","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"teoks0199"},"content":"            Path parentDirectory \u003d filePath.getParent();","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"teoks0199"},"content":"            if (!Files.exists(parentDirectory)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"teoks0199"},"content":"                Files.createDirectories(parentDirectory);","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"teoks0199"},"content":"                System.out.println(\"    Parent directories created: \" + parentDirectory.toAbsolutePath());","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"teoks0199"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"teoks0199"},"content":"            // Create the file if it doesn\u0027t exist","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"teoks0199"},"content":"            if (!Files.exists(filePath)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"teoks0199"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"teoks0199"},"content":"                System.out.println(\"    File created: \" + filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"teoks0199"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"teoks0199"},"content":"            // Read the existing content from the file","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"teoks0199"},"content":"            BufferedReader reader \u003d Files.newBufferedReader(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"teoks0199"},"content":"            String nextLine;","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"teoks0199"},"content":"            while ((nextLine \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"teoks0199"},"content":"                Task toAdd \u003d stringToTask(nextLine);","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"teoks0199"},"content":"                if (!toAdd.equals(null)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"teoks0199"},"content":"                    list.add(toAdd);","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"teoks0199"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"teoks0199"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"teoks0199"},"content":"            reader.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"teoks0199"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"teoks0199"},"content":"            System.out.println(\"    Data file corrupted.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"teoks0199"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"teoks0199"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"teoks0199"},"content":"        } finally {","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"teoks0199"},"content":"            return list;","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"teoks0199"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"teoks0199"},"content":"     * Updates the hard drive with the current task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"teoks0199"},"content":"    public void updateTaskList() {","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"teoks0199"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"teoks0199"},"content":"            // Create the directory if it doesn\u0027t exist","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"teoks0199"},"content":"            Path parentDirectory \u003d filePath.getParent();","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"teoks0199"},"content":"            if (!Files.exists(parentDirectory)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"teoks0199"},"content":"                Files.createDirectories(parentDirectory);","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"teoks0199"},"content":"                System.out.println(\"    Parent directories created: \" + parentDirectory.toAbsolutePath());","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"teoks0199"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"teoks0199"},"content":"            // Create the file if it doesn\u0027t exist","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"teoks0199"},"content":"            if (!Files.exists(filePath)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"teoks0199"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"teoks0199"},"content":"                System.out.println(\"    File created: \" + filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"teoks0199"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"teoks0199"},"content":"            // Write new content to the file","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"teoks0199"},"content":"            StringBuilder toWrite \u003d new StringBuilder();","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"teoks0199"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"teoks0199"},"content":"                toWrite.append(list.get(i).taskToString());","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"teoks0199"},"content":"                toWrite.append(\"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"teoks0199"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"teoks0199"},"content":"            BufferedWriter writer \u003d Files.newBufferedWriter(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"teoks0199"},"content":"            writer.write(toWrite.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"teoks0199"},"content":"            writer.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"teoks0199"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"teoks0199"},"content":"            System.out.println(\"    An error occurred: \" + e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"teoks0199"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"teoks0199"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"teoks0199"},"content":"     * Converts a string representation of a task to a Task object.","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"teoks0199"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"teoks0199"},"content":"     * @param s String representation of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"teoks0199"},"content":"     * @return The task object.","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"teoks0199"},"content":"     * @throws DukeException Throws DukeException if data file is corrupted.","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"teoks0199"},"content":"    public Task stringToTask(String s) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"teoks0199"},"content":"        String[] details \u003d s.split(\"[|]\", 0);","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"teoks0199"},"content":"        String type \u003d details[0].strip();","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"teoks0199"},"content":"        Task t;","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"teoks0199"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"teoks0199"},"content":"            if (type.equals(\"T\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"teoks0199"},"content":"                t \u003d new ToDo(details[2].strip());","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"teoks0199"},"content":"            } else if (type.equals(\"D\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"teoks0199"},"content":"                t \u003d new Deadline(details[2].strip(), LocalDate.parse(details[3].strip()));","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"teoks0199"},"content":"            } else if (type.equals(\"E\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"teoks0199"},"content":"                t \u003d new Event(details[2].strip(),","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"teoks0199"},"content":"                        LocalDate.parse(details[3].strip()), LocalDate.parse(details[4].strip()));","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"teoks0199"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"teoks0199"},"content":"                throw new DukeException(\"    Data file corrupted.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"teoks0199"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"teoks0199"},"content":"            if (details[1].strip().equals(\"Y\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"teoks0199"},"content":"                t.markAsDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"teoks0199"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"teoks0199"},"content":"            return t;","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"teoks0199"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"teoks0199"},"content":"            throw new DukeException(\"    Data file corrupted.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"teoks0199"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"teoks0199"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"teoks0199":135}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teoks0199"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"teoks0199"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"teoks0199"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"teoks0199"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"teoks0199"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"teoks0199"},"content":" * Used to add, delete, mark, show and find tasks in the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"teoks0199"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"teoks0199"},"content":" * @author Teo Kai Sheng","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"teoks0199"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"teoks0199"},"content":"public class TaskList {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"teoks0199"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"teoks0199"},"content":"     * Constructor to create a TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"teoks0199"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"teoks0199"},"content":"     * @param taskList The previously saved task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"teoks0199"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"teoks0199"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"teoks0199"},"content":"     * Displays the current list to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"teoks0199"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"teoks0199"},"content":"     * @param input User input.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"teoks0199"},"content":"    public void showList(String[] input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"teoks0199"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"teoks0199"},"content":"            if (!(input.length \u003d\u003d 1 || input[1].strip().equals(\"\"))) {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"teoks0199"},"content":"                throw new DukeException(\"    Did you mean list?\");","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"teoks0199"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"teoks0199"},"content":"            System.out.println(\"    Here are the tasks in your list:\");","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"teoks0199"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"teoks0199"},"content":"                System.out.println(String.format(\"    %d.%s\",","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"teoks0199"},"content":"                        i + 1, taskList.get(i).toString()));","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"teoks0199"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"teoks0199"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"teoks0199"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"teoks0199"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"teoks0199"},"content":"     * Marks the indicated task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"teoks0199"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"teoks0199"},"content":"     * @param input User input.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"teoks0199"},"content":"    public void markTask(String[] input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"teoks0199"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"teoks0199"},"content":"            int toMark \u003d Integer.parseInt(input[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"teoks0199"},"content":"            Task task \u003d taskList.get(toMark - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"teoks0199"},"content":"            task.markAsDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"teoks0199"},"content":"            System.out.println(\"    Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"teoks0199"},"content":"            System.out.println(String.format(\"      %s\", task.toString()));","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"teoks0199"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"teoks0199"},"content":"            System.out.println(\"    Task does not exist.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"teoks0199"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"teoks0199"},"content":"            System.out.println(\"    Please enter a number e.g., mark 1\");","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"teoks0199"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"teoks0199"},"content":"     * Marks the indicated task as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"teoks0199"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"teoks0199"},"content":"     * @param input User input.","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"teoks0199"},"content":"    public void unmarkTask(String[] input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"teoks0199"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"teoks0199"},"content":"            int toMark \u003d Integer.parseInt(input[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"teoks0199"},"content":"            Task task \u003d taskList.get(toMark - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"teoks0199"},"content":"            task.markAsUndone();","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"teoks0199"},"content":"            System.out.println(\"    OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"teoks0199"},"content":"            System.out.println(String.format(\"      %s\", task.toString()));","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"teoks0199"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"teoks0199"},"content":"            System.out.println(\"    Task does not exist.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"teoks0199"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"teoks0199"},"content":"            System.out.println(\"    Please enter a number e.g., unmark 1\");","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"teoks0199"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"teoks0199"},"content":"     * Deletes the indicated task.","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"teoks0199"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"teoks0199"},"content":"     * @param input User input.","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"teoks0199"},"content":"    public void deleteTask(String[] input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"teoks0199"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"teoks0199"},"content":"            int toDelete \u003d Integer.parseInt(input[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"teoks0199"},"content":"            Task task \u003d taskList.get(toDelete - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"teoks0199"},"content":"            System.out.println(\"    Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"teoks0199"},"content":"            System.out.println(String.format(\"      %s\", task.toString()));","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"teoks0199"},"content":"            taskList.remove(toDelete - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"teoks0199"},"content":"            System.out.println(\"    Number of tasks: \" + taskList.size());","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"teoks0199"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"teoks0199"},"content":"            System.out.println(\"    Task does not exist.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"teoks0199"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"teoks0199"},"content":"            System.out.println(\"    Please enter a number e.g., delete 1\");","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"teoks0199"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"teoks0199"},"content":"     * Adds an Event to the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"teoks0199"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"teoks0199"},"content":"     * @param input User input.","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"teoks0199"},"content":"    public void addEvent(String[] input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"teoks0199"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"teoks0199"},"content":"            String[] s1 \u003d input[1].split(\"/from\", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"teoks0199"},"content":"            String[] s2 \u003d s1[1].split(\"/to\", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"teoks0199"},"content":"            String desc \u003d s1[0].strip();","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"teoks0199"},"content":"            String from \u003d s2[0].strip();","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"teoks0199"},"content":"            String to \u003d s2[1].strip();","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"teoks0199"},"content":"            if (desc.equals(\"\") || from.equals(\"\") || to.equals(\"\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"teoks0199"},"content":"                throw new DukeException(\"    Format: event description /from yyyy-mm-dd /to yyyy-mm-dd\");","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"teoks0199"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"teoks0199"},"content":"            Event e \u003d new Event(desc, LocalDate.parse(from), LocalDate.parse(to));","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"teoks0199"},"content":"            taskList.add(e);","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"teoks0199"},"content":"            System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"teoks0199"},"content":"            System.out.println(\"      \" + e.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"teoks0199"},"content":"            System.out.println(\"    Number of tasks: \" + taskList.size());","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"teoks0199"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"teoks0199"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"teoks0199"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"teoks0199"},"content":"            System.out.println(\"    Format: event description /from yyyy-mm-dd /to yyyy-mm-dd\");","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"teoks0199"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"teoks0199"},"content":"            System.out.println(\"    Enter valid date yyyy-mm-dd\");","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"teoks0199"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"teoks0199"},"content":"     * Adds a Deadline to the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"teoks0199"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"teoks0199"},"content":"     * @param input User input.","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"teoks0199"},"content":"    public void addDeadline(String[] input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"teoks0199"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"teoks0199"},"content":"            String[] s \u003d input[1].split(\"/by\", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"teoks0199"},"content":"            String desc \u003d s[0].strip();","lastModifiedDate":"2023-08-29"},{"lineNumber":148,"author":{"gitId":"teoks0199"},"content":"            String deadline \u003d s[1].strip();","lastModifiedDate":"2023-08-29"},{"lineNumber":149,"author":{"gitId":"teoks0199"},"content":"            if (desc.equals(\"\") || deadline.equals(\"\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"teoks0199"},"content":"                throw new DukeException(\"    Format: deadline description /by yyyy-mm-dd\");","lastModifiedDate":"2023-08-29"},{"lineNumber":151,"author":{"gitId":"teoks0199"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":152,"author":{"gitId":"teoks0199"},"content":"            Deadline d \u003d new Deadline(desc, LocalDate.parse(deadline));","lastModifiedDate":"2023-08-29"},{"lineNumber":153,"author":{"gitId":"teoks0199"},"content":"            taskList.add(d);","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"teoks0199"},"content":"            System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"teoks0199"},"content":"            System.out.println(\"      \" + d.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"teoks0199"},"content":"            System.out.println(\"    Number of tasks: \" + taskList.size());","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"teoks0199"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":158,"author":{"gitId":"teoks0199"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":159,"author":{"gitId":"teoks0199"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"teoks0199"},"content":"            System.out.println(\"    Format: deadline description /by yyyy-mm-dd\");","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"teoks0199"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":162,"author":{"gitId":"teoks0199"},"content":"            System.out.println(\"    Enter valid date yyyy-mm-dd\");","lastModifiedDate":"2023-08-29"},{"lineNumber":163,"author":{"gitId":"teoks0199"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":164,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":165,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":166,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":167,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":168,"author":{"gitId":"teoks0199"},"content":"     * Adds a ToDo to the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":169,"author":{"gitId":"teoks0199"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":170,"author":{"gitId":"teoks0199"},"content":"     * @param input User input.","lastModifiedDate":"2023-09-01"},{"lineNumber":171,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":172,"author":{"gitId":"teoks0199"},"content":"    public void addToDo(String[] input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":173,"author":{"gitId":"teoks0199"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":174,"author":{"gitId":"teoks0199"},"content":"            String desc \u003d input[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":175,"author":{"gitId":"teoks0199"},"content":"            if (desc.strip().equals(\"\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":176,"author":{"gitId":"teoks0199"},"content":"                throw new DukeException(\"    ☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":177,"author":{"gitId":"teoks0199"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":178,"author":{"gitId":"teoks0199"},"content":"            ToDo t \u003d new ToDo(desc);","lastModifiedDate":"2023-08-29"},{"lineNumber":179,"author":{"gitId":"teoks0199"},"content":"            taskList.add(t);","lastModifiedDate":"2023-08-29"},{"lineNumber":180,"author":{"gitId":"teoks0199"},"content":"            System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-29"},{"lineNumber":181,"author":{"gitId":"teoks0199"},"content":"            System.out.println(\"      \" + t.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":182,"author":{"gitId":"teoks0199"},"content":"            System.out.println(\"    Number of tasks: \" + taskList.size());","lastModifiedDate":"2023-08-29"},{"lineNumber":183,"author":{"gitId":"teoks0199"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":184,"author":{"gitId":"teoks0199"},"content":"            System.out.println(\"    ☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":185,"author":{"gitId":"teoks0199"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":186,"author":{"gitId":"teoks0199"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":187,"author":{"gitId":"teoks0199"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":188,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":189,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":190,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":191,"author":{"gitId":"teoks0199"},"content":"     * Displays all tasks in the list containing the keyword.","lastModifiedDate":"2023-09-01"},{"lineNumber":192,"author":{"gitId":"teoks0199"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":193,"author":{"gitId":"teoks0199"},"content":"     * @param input User input.","lastModifiedDate":"2023-09-01"},{"lineNumber":194,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":195,"author":{"gitId":"teoks0199"},"content":"    public void find(String[] input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":196,"author":{"gitId":"teoks0199"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":197,"author":{"gitId":"teoks0199"},"content":"            String keyword \u003d input[1];","lastModifiedDate":"2023-09-01"},{"lineNumber":198,"author":{"gitId":"teoks0199"},"content":"            if (keyword.strip().equals(\"\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":199,"author":{"gitId":"teoks0199"},"content":"                throw new DukeException(\"    What do you want me to find?\");","lastModifiedDate":"2023-09-01"},{"lineNumber":200,"author":{"gitId":"teoks0199"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":201,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":202,"author":{"gitId":"teoks0199"},"content":"            System.out.println(\"    Here are the matching tasks in your list:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":203,"author":{"gitId":"teoks0199"},"content":"            int counter \u003d 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":204,"author":{"gitId":"teoks0199"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":205,"author":{"gitId":"teoks0199"},"content":"                String s \u003d taskList.get(i).toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":206,"author":{"gitId":"teoks0199"},"content":"                if (s.contains(keyword)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":207,"author":{"gitId":"teoks0199"},"content":"                    System.out.println(String.format(\"    %d.%s\", counter, s));","lastModifiedDate":"2023-09-01"},{"lineNumber":208,"author":{"gitId":"teoks0199"},"content":"                    counter++;","lastModifiedDate":"2023-09-01"},{"lineNumber":209,"author":{"gitId":"teoks0199"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":210,"author":{"gitId":"teoks0199"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":211,"author":{"gitId":"teoks0199"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":212,"author":{"gitId":"teoks0199"},"content":"            System.out.println(\"    What do you want me to find?\");","lastModifiedDate":"2023-09-01"},{"lineNumber":213,"author":{"gitId":"teoks0199"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":214,"author":{"gitId":"teoks0199"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":215,"author":{"gitId":"teoks0199"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":216,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":217,"author":{"gitId":"teoks0199"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"teoks0199":217}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teoks0199"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"teoks0199"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":" * Used to handle user interface output.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"teoks0199"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":" * @author Teo Kai Sheng","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"public class Ui {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"    private String line \u003d \"    ______________________________________________\";","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"teoks0199"},"content":"     * Displays a greeting message to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"teoks0199"},"content":"    public void greet() {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"teoks0199"},"content":"        System.out.println(line + \"\\n    Hello, I\u0027m your task manager :)\\n    What can I do for you?\\n\" + line);","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"teoks0199"},"content":"     * Displays a goodbye message to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"teoks0199"},"content":"    public void bye() {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"teoks0199"},"content":"        System.out.println(\"    Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"teoks0199"},"content":"     * Displays a horizontal line.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"teoks0199"},"content":"    public void horizontalLine() {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"teoks0199"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"teoks0199"},"content":"     * Displays an error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"teoks0199"},"content":"    public void oops() {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"teoks0199"},"content":"        System.out.println(\"    ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"teoks0199"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"teoks0199":38}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teoks0199"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"teoks0199"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":" * Encapsulates a Deadline task that can be added to the task manager.","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":" * @author Teo Kai Sheng","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"teoks0199"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"teoks0199"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"teoks0199"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d-MMM-yyyy\");","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"teoks0199"},"content":"     * Deadline of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"teoks0199"},"content":"    private LocalDate by;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"teoks0199"},"content":"     * Constructor to create a Deadline.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"teoks0199"},"content":"     * @param description Description of the deadline.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"teoks0199"},"content":"     * @param by Deadline of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"teoks0199"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"teoks0199"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"teoks0199"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"teoks0199"},"content":"     * Returns the String representation of the deadline.","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"teoks0199"},"content":"     * @return A String representing the deadline.","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"teoks0199"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"teoks0199"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"teoks0199"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formatter.format(by) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"teoks0199"},"content":"     * Returns the String representation of the deadline to be saved in the hard disk.","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"teoks0199"},"content":"     * @return A String representing the deadline.","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"teoks0199"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"teoks0199"},"content":"    public String taskToString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"teoks0199"},"content":"        return \"D | \" + super.taskToString() + \" | \" + by;","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"teoks0199"},"content":"     * Compares this to another object to check if they are the same task.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"teoks0199"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"teoks0199"},"content":"     * @param o Object to compare with.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"teoks0199"},"content":"     * @return True if they are the same task and false if not.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"teoks0199"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"teoks0199"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"teoks0199"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"teoks0199"},"content":"            return true;","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"teoks0199"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"teoks0199"},"content":"        if (!(o instanceof Deadline)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"teoks0199"},"content":"            return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"teoks0199"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"teoks0199"},"content":"        Deadline c \u003d (Deadline) o;","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"teoks0199"},"content":"        return this.toString().equals(c.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"teoks0199"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"teoks0199":65}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teoks0199"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"teoks0199"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":" * Encapsulates an Event task that can be added to the task manager.","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":" * @author Teo Kai Sheng","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"teoks0199"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"teoks0199"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"teoks0199"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d-MMM-yyyy\");","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"teoks0199"},"content":"     * Starting date of the event.","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"teoks0199"},"content":"    private LocalDate from;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"teoks0199"},"content":"     * Ending date of the event.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"teoks0199"},"content":"    private LocalDate to;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"teoks0199"},"content":"     * Constructor to create an Event.","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"teoks0199"},"content":"     * @param description Description of the event.","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"teoks0199"},"content":"     * @param from Starting date of the event.","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"teoks0199"},"content":"     * @param to Ending date of the event.","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"teoks0199"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"teoks0199"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"teoks0199"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"teoks0199"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"teoks0199"},"content":"     * Returns the String representation of the event.","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"teoks0199"},"content":"     * @return A String representing the event.","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"teoks0199"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"teoks0199"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"teoks0199"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + formatter.format(from) + \" to: \" + formatter.format(to) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"teoks0199"},"content":"     * Returns the String representation of the event to be saved in the hard disk.","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"teoks0199"},"content":"     * @return A String representing the event.","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"teoks0199"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"teoks0199"},"content":"    public String taskToString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"teoks0199"},"content":"        return \"E | \" + super.taskToString() + \" | \" + from + \" | \" + to;","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"teoks0199"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"teoks0199":55}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teoks0199"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"teoks0199"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":" * Encapsulates a task that can be added to the task manager.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"teoks0199"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":" * @author Teo Kai Sheng","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"teoks0199"},"content":"     * Description of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"teoks0199"},"content":"    protected String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"teoks0199"},"content":"     * Completion status of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"teoks0199"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"teoks0199"},"content":"     * Constructor to create a task.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"teoks0199"},"content":"     * @param description The desciption of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"teoks0199"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"teoks0199"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"teoks0199"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"teoks0199"},"content":"     * Returns the String representation of the status icon of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"teoks0199"},"content":"     * @return The status icon.","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"teoks0199"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"teoks0199"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"teoks0199"},"content":"     * Changes the completion status of the task to true.","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"teoks0199"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"teoks0199"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"teoks0199"},"content":"     * Changes the completion status of the task to false.","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"teoks0199"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"teoks0199"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"teoks0199"},"content":"     * Returns the String representation of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"teoks0199"},"content":"     * @return A String representing the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"teoks0199"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"teoks0199"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"teoks0199"},"content":"        return String.format(\"[%s] \" + this.description, this.getStatusIcon());","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"teoks0199"},"content":"     * Returns the String representation of the task to be saved in the hard disk.","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"teoks0199"},"content":"     * @return A String representing the task to be saved in the hard disk.","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"teoks0199"},"content":"    public String taskToString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"teoks0199"},"content":"        return String.format(\"%s | \" + this.description, (isDone ? \"Y\" : \"N\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"teoks0199"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"teoks0199":66}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teoks0199"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"teoks0199"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":" * Encapsulates a ToDo task that can be added to the task manager.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"teoks0199"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":" * @author Teo Kai Sheng","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"teoks0199"},"content":"     * Constructor to create a ToDo.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"teoks0199"},"content":"     * @param description The description of the ToDo.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"teoks0199"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"teoks0199"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"teoks0199"},"content":"     * Returns the String representation of the ToDo.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"teoks0199"},"content":"     * @return A String representing the ToDo.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"teoks0199"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"teoks0199"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"teoks0199"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"teoks0199"},"content":"     * Returns the String representation of the ToDo to be saved in the hard disk.","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"teoks0199"},"content":"     * @return A String representing the ToDo.","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"teoks0199"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"teoks0199"},"content":"    public String taskToString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"teoks0199"},"content":"        return \"T | \" + super.taskToString();","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"teoks0199"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"teoks0199":35}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teoks0199"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"teoks0199"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"teoks0199"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"teoks0199"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"teoks0199"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"teoks0199"},"content":"public class StorageTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"teoks0199"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"teoks0199"},"content":"    public void loadTaskList_savedFile_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"teoks0199"},"content":"        // saved list is loaded","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"teoks0199"},"content":"        assertEquals(\"T | N | Homework\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"teoks0199"},"content":"                        + \"D | Y | Project | 2023-11-11\\n\",","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"teoks0199"},"content":"                listToString(new Storage(Paths.get(\".\", \"testdata\", \"testlist.txt\")).loadTaskList()));","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"teoks0199"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"teoks0199"},"content":"    public void loadTaskList_wrongPath_emptyList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"teoks0199"},"content":"        // return empty list if path is wrong","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"teoks0199"},"content":"        assertEquals(\"\", listToString(new Storage(null).loadTaskList()));","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"teoks0199"},"content":"    public String listToString(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"teoks0199"},"content":"        StringBuilder toWrite \u003d new StringBuilder();","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"teoks0199"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"teoks0199"},"content":"            toWrite.append(list.get(i).taskToString());","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"teoks0199"},"content":"            toWrite.append(\"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"teoks0199"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"teoks0199"},"content":"        return toWrite.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"teoks0199"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"teoks0199"},"content":"    public void stringToTask_multipleWhitespaceEntry_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"teoks0199"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"teoks0199"},"content":"            // accept tasks with descriptions of multiple words","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"teoks0199"},"content":"            assertEquals(new Deadline(\"Finish coding this assignment\", LocalDate.parse(\"2023-10-10\")),","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"teoks0199"},"content":"                    new Storage(Paths.get(\".\", \"testdata\", \"testlist.txt\"))","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"teoks0199"},"content":"                            .stringToTask(\"D | N | Finish coding this assignment | 2023-10-10\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"teoks0199"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"teoks0199"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"teoks0199"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"teoks0199"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"teoks0199"},"content":"    public void stringToTask_markedEntry_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"teoks0199"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"teoks0199"},"content":"            Deadline d \u003d new Deadline(\"Finish coding this assignment\", LocalDate.parse(\"2023-10-10\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"teoks0199"},"content":"            d.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"teoks0199"},"content":"            // tasks should be correctly displayed as marked","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"teoks0199"},"content":"            assertEquals(d, new Storage(Paths.get(\".\", \"testdata\", \"testlist.txt\"))","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"teoks0199"},"content":"                    .stringToTask(\"D | Y | Finish coding this assignment | 2023-10-10\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"teoks0199"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"teoks0199"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"teoks0199"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"teoks0199"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"teoks0199"},"content":"    public void stringToTask_corruptedEntry_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"teoks0199"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"teoks0199"},"content":"            assertEquals(new Deadline(\"Finish coding this assignment\", LocalDate.parse(\"2023-10-10\")),","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"teoks0199"},"content":"                    new Storage(Paths.get(\".\", \"data\", \"duke.txt\"))","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"teoks0199"},"content":"                            .stringToTask(\"D | N\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"teoks0199"},"content":"            fail(); // test should not reach this line","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"teoks0199"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"teoks0199"},"content":"            // saved entry is of incorrect format","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"teoks0199"},"content":"            assertEquals(\"    Data file corrupted.\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"teoks0199"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"teoks0199"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"teoks0199"},"content":"    public void stringToTask_invalidTaskType_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"teoks0199"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"teoks0199"},"content":"            assertEquals(new Deadline(\"Finish coding this assignment\", LocalDate.parse(\"2023-10-10\")),","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"teoks0199"},"content":"                    new Storage(Paths.get(\".\", \"data\", \"duke.txt\"))","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"teoks0199"},"content":"                            .stringToTask(\"XXX | N | Finish coding this assignment | 2023-10-10\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"teoks0199"},"content":"            fail(); // test should not reach this line","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"teoks0199"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"teoks0199"},"content":"            // saved entry has unknown symbol","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"teoks0199"},"content":"            assertEquals(\"    Data file corrupted.\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"teoks0199"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"teoks0199"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"teoks0199":89}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teoks0199"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"teoks0199"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"teoks0199"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"teoks0199"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"teoks0199"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"teoks0199"},"content":"    public void addToDo_multipleEntries_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"teoks0199"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"teoks0199"},"content":"        TaskList tasks \u003d new TaskList(list);","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"teoks0199"},"content":"        tasks.addToDo(\"todo Midterms\".split(\" \", 2));","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"teoks0199"},"content":"        tasks.addToDo(\"todo Finals\".split(\" \", 2));","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"teoks0199"},"content":"        // add 2 ToDos to the list","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"teoks0199"},"content":"        assertEquals(\"T | N | Midterms\\n\" + \"T | N | Finals\\n\", listToString(list));","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"teoks0199"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"teoks0199"},"content":"    public void addToDo_emptyEntry_notAdded() {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"teoks0199"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"teoks0199"},"content":"        TaskList tasks \u003d new TaskList(list);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"teoks0199"},"content":"        // todo should be followed by description","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"teoks0199"},"content":"        tasks.addToDo(\"todo\".split(\" \", 2));","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"teoks0199"},"content":"        // todo description cannot be empty","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"teoks0199"},"content":"        tasks.addToDo(\"todo     \".split(\" \", 2));","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"teoks0199"},"content":"        assertEquals(\"\", listToString(list));","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"teoks0199"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"teoks0199"},"content":"    public void addDeadline_multipleEntries_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"teoks0199"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"teoks0199"},"content":"        TaskList tasks \u003d new TaskList(list);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"teoks0199"},"content":"        tasks.addDeadline(\"deadline Midterms /by 2023-10-11\".split(\" \", 2));","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"teoks0199"},"content":"        tasks.addDeadline(\"deadline Finals /by 2023-11-11\".split(\" \", 2));","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"teoks0199"},"content":"        // add 2 Deadlines to the list","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"teoks0199"},"content":"        assertEquals(\"D | N | Midterms | 2023-10-11\\n\" + \"D | N | Finals | 2023-11-11\\n\",","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"teoks0199"},"content":"               listToString(list));","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"teoks0199"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"teoks0199"},"content":"    public void addDeadline_wrongFormat_notAdded() {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"teoks0199"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"teoks0199"},"content":"        TaskList tasks \u003d new TaskList(list);","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"teoks0199"},"content":"        // /by should be used","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"teoks0199"},"content":"        tasks.addDeadline(\"deadline Midterms by 2023-10-11\".split(\" \", 2));","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"teoks0199"},"content":"        // description cannot be empty","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"teoks0199"},"content":"        tasks.addDeadline(\"deadline /by 2023-11-11\".split(\" \", 2));","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"teoks0199"},"content":"        // wrong date format","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"teoks0199"},"content":"        tasks.addDeadline(\"deadline Finals /by 11 Oct 2023\".split(\" \", 2));","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"teoks0199"},"content":"        // wrong date format","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"teoks0199"},"content":"        tasks.addDeadline(\"deadline Finals /by 10-10-2023\".split(\" \", 2));","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"teoks0199"},"content":"        assertEquals(\"\", listToString(list));","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"teoks0199"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"teoks0199"},"content":"    public void addDeadline_invalidDate_notAdded() {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"teoks0199"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"teoks0199"},"content":"        TaskList tasks \u003d new TaskList(list);","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"teoks0199"},"content":"        // day cannot exceed 31","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"teoks0199"},"content":"        tasks.addDeadline(\"deadline Finals /by 2023-10-40\".split(\" \", 2));","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"teoks0199"},"content":"        // month cannot exceed 12","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"teoks0199"},"content":"        tasks.addDeadline(\"deadline Finals /by 2023-13-10\".split(\" \", 2));","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"teoks0199"},"content":"        // february 30 is invalid","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"teoks0199"},"content":"        tasks.addDeadline(\"deadline Finals /by 2023-02-30\".split(\" \", 2));","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"teoks0199"},"content":"        // april 31 is invalid","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"teoks0199"},"content":"        tasks.addDeadline(\"deadline Finals /by 2023-04-31\".split(\" \", 2));","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"teoks0199"},"content":"        // month expects 2 digits","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"teoks0199"},"content":"        tasks.addDeadline(\"deadline Finals /by 2023-5-31\".split(\" \", 2));","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"teoks0199"},"content":"        assertEquals(\"\", listToString(list));","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"teoks0199"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"teoks0199"},"content":"    public void addEvent_multipleEntries_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"teoks0199"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"teoks0199"},"content":"        TaskList tasks \u003d new TaskList(list);","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"teoks0199"},"content":"        tasks.addEvent(\"event Midterms /from 2023-10-11 /to 2023-10-12\".split(\" \", 2));","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"teoks0199"},"content":"        tasks.addEvent(\"event Finals /from 2023-11-11 /to 2023-11-12\".split(\" \", 2));","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"teoks0199"},"content":"        // add 2 Events to the list","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"teoks0199"},"content":"        assertEquals(\"E | N | Midterms | 2023-10-11 | 2023-10-12\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"teoks0199"},"content":"                        + \"E | N | Finals | 2023-11-11 | 2023-11-12\\n\",","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"teoks0199"},"content":"                listToString(list));","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"teoks0199"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"teoks0199"},"content":"    public void addEvent_wrongFormat_notAdded() {","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"teoks0199"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"teoks0199"},"content":"        TaskList tasks \u003d new TaskList(list);","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"teoks0199"},"content":"        // /from should be used","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"teoks0199"},"content":"        tasks.addEvent(\"event Midterms from 2023-10-11 /to 2023-10-12\".split(\" \", 2));","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"teoks0199"},"content":"        // /to should be used","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"teoks0199"},"content":"        tasks.addEvent(\"event Midterms /from 2023-10-11 to 2023-10-12\".split(\" \", 2));","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"teoks0199"},"content":"        // description cannot be empty","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"teoks0199"},"content":"        tasks.addEvent(\"event /from 2023-10-11 /to 2023-10-12\".split(\" \", 2));","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"teoks0199"},"content":"        // wrong date format","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"teoks0199"},"content":"        tasks.addEvent(\"event Finals /from Today /to 2023-11-12\".split(\" \", 2));","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"teoks0199"},"content":"        // wrong date format","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"teoks0199"},"content":"        tasks.addEvent(\"event Midterms /from 10 Oct 2023 /to 2023-10-11\".split(\" \", 2));","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"teoks0199"},"content":"        // wrong date format","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"teoks0199"},"content":"        tasks.addDeadline(\"event Finals /from 10-10-2023 /to 11-10-2023\".split(\" \", 2));","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"teoks0199"},"content":"        assertEquals(\"\", listToString(list));","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"teoks0199"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"teoks0199"},"content":"    public void addEvent_invalidDate_notAdded() {","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"teoks0199"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"teoks0199"},"content":"        TaskList tasks \u003d new TaskList(list);","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"teoks0199"},"content":"        // month cannot exceed 12","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"teoks0199"},"content":"        tasks.addEvent(\"event Midterms /from 2023-13-11 /to 2023-10-12\".split(\" \", 2));","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"teoks0199"},"content":"        // day cannot exceed 31","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"teoks0199"},"content":"        tasks.addEvent(\"event Finals /from 2023-11-40 /to 2023-11-12\".split(\" \", 2));","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"teoks0199"},"content":"        // february 30 is invalid","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"teoks0199"},"content":"        tasks.addEvent(\"event Midterms /from 2023-02-30 /to 2023-10-12\".split(\" \", 2));;","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"teoks0199"},"content":"        // april 31 is invalid","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"teoks0199"},"content":"        tasks.addEvent(\"event Midterms /from 2023-04-31 /to 2023-10-12\".split(\" \", 2));","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"teoks0199"},"content":"        // month expects 2 digits","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"teoks0199"},"content":"        tasks.addEvent(\"event Midterms /from 2023-1-11 /to 2023-10-12\".split(\" \", 2));","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"teoks0199"},"content":"        assertEquals(\"\", listToString(list));","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"teoks0199"},"content":"    public String listToString(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"teoks0199"},"content":"        StringBuilder toWrite \u003d new StringBuilder();","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"teoks0199"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"teoks0199"},"content":"            toWrite.append(list.get(i).taskToString());","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"teoks0199"},"content":"            toWrite.append(\"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"teoks0199"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"teoks0199"},"content":"        return toWrite.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"teoks0199"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"teoks0199":156}},{"path":"src/test/testlist.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"teoks0199"},"content":"T | N | Homework","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"teoks0199"},"content":"D | Y | Project | 2023-11-11","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"teoks0199":2}},{"path":"testdata/testlist.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"teoks0199"},"content":"T | N | Homework","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"teoks0199"},"content":"D | Y | Project | 2023-11-11","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"teoks0199":2}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"teoks0199"},"content":"todo borrow book","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"teoks0199"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"teoks0199"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":"deadline return book /by 2023-08-11","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"teoks0199"},"content":"event project meeting /from 2023-08-11 /to 2023-08-19","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":"unmark 2","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":"mark 2","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"teoks0199"},"content":"unmark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"teoks0199"},"content":"todo eat","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"teoks0199"},"content":"delete 1","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"teoks0199"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"teoks0199"},"content":"delete 1","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"teoks0199"},"content":"delete 1","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"teoks0199"},"content":"delete 1","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"teoks0199"},"content":"mark 1","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"teoks0199"},"content":"delete 1","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"teoks0199"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"teoks0199":19}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"teoks0199"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"teoks0199":2,"-":20}}]
