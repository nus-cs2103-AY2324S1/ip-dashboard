[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teoks0199"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"teoks0199"},"content":"    protected String by;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"teoks0199"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"teoks0199"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"teoks0199"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"teoks0199"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"teoks0199"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"teoks0199":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teoks0199"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"teoks0199"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"        String line \u003d \"    ______________________________________________\";","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"        System.out.println(line + \"\\n    Hello, I\u0027m your task manager :)\\n    What can I do for you?\\n\" + line);","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"teoks0199"},"content":"        String[] input \u003d scanner.nextLine().split(\" \", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"teoks0199"},"content":"        while (!input[0].equals(\"bye\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"teoks0199"},"content":"            String command \u003d input[0];","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"teoks0199"},"content":"            System.out.println(line);","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"teoks0199"},"content":"            if (command.equals(\"list\") ) {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"teoks0199"},"content":"                try {","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"teoks0199"},"content":"                    if (!(input.length \u003d\u003d 1 || input[1].trim().equals(\"\"))) {","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"teoks0199"},"content":"                        throw new DukeException();","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"teoks0199"},"content":"                    }","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"teoks0199"},"content":"                    System.out.println(\"    Here are the tasks in your list:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"teoks0199"},"content":"                    for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"teoks0199"},"content":"                        System.out.println(String.format(\"    %d.%s\",","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"teoks0199"},"content":"                                i+1, list.get(i).toString()));","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"teoks0199"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"teoks0199"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"teoks0199"},"content":"                    System.out.println(\"    Did you mean list?\");","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"teoks0199"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"teoks0199"},"content":"            } else if (command.equals(\"mark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"teoks0199"},"content":"                try {","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"teoks0199"},"content":"                    int toMark \u003d Integer.parseInt(input[1]);","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"teoks0199"},"content":"                    Task task \u003d list.get(toMark - 1);","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"teoks0199"},"content":"                    task.markAsDone();","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"teoks0199"},"content":"                    System.out.println(\"    Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"teoks0199"},"content":"                    System.out.println(String.format(\"      %s\", task.toString()));","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"teoks0199"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"teoks0199"},"content":"                    System.out.println(\"    Task does not exist.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"teoks0199"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"teoks0199"},"content":"                    System.out.println(\"    Please enter a number e.g., mark 1\");","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"teoks0199"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"teoks0199"},"content":"            } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"teoks0199"},"content":"                try {","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"teoks0199"},"content":"                    int toMark \u003d Integer.parseInt(input[1]);","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"teoks0199"},"content":"                    Task task \u003d list.get(toMark - 1);","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"teoks0199"},"content":"                    task.markAsUndone();","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"teoks0199"},"content":"                    System.out.println(\"    OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"teoks0199"},"content":"                    System.out.println(String.format(\"      %s\", task.toString()));","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"teoks0199"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"teoks0199"},"content":"                    System.out.println(\"    Task does not exist.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"teoks0199"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"teoks0199"},"content":"                    System.out.println(\"    Please enter a number e.g., unmark 1\");","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"teoks0199"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"teoks0199"},"content":"            } else if (command.equals(\"delete\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"teoks0199"},"content":"                try {","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"teoks0199"},"content":"                    int toDelete \u003d Integer.parseInt(input[1]);","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"teoks0199"},"content":"                    Task task \u003d list.get(toDelete - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"teoks0199"},"content":"                    System.out.println(\"    Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"teoks0199"},"content":"                    System.out.println(String.format(\"      %s\", task.toString()));","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"teoks0199"},"content":"                    list.remove(toDelete - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"teoks0199"},"content":"                    System.out.println(\"    Number of tasks: \" + list.size());","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"teoks0199"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"teoks0199"},"content":"                    System.out.println(\"    Task does not exist.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"teoks0199"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"teoks0199"},"content":"                    System.out.println(\"    Please enter a number e.g., delete 1\");","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"teoks0199"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"teoks0199"},"content":"            } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"teoks0199"},"content":"                try {","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"teoks0199"},"content":"                    String[] s \u003d input[1].split(\"/by\", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"teoks0199"},"content":"                    String desc \u003d s[0].trim();","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"teoks0199"},"content":"                    String deadline \u003d s[1].trim();","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"teoks0199"},"content":"                    if (desc.equals(\"\") || deadline.equals(\"\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"teoks0199"},"content":"                        throw new DukeException();","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"teoks0199"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"teoks0199"},"content":"                    Deadline d \u003d new Deadline(desc, deadline);","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"teoks0199"},"content":"                    list.add(d);","lastModifiedDate":"2023-08-22"},{"lineNumber":74,"author":{"gitId":"teoks0199"},"content":"                    System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":75,"author":{"gitId":"teoks0199"},"content":"                    System.out.println(\"      \" + d.toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"teoks0199"},"content":"                    System.out.println(\"    Number of tasks: \" + list.size());","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"teoks0199"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"teoks0199"},"content":"                    System.out.println(\"    Format: deadline description /by time\");","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"teoks0199"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"teoks0199"},"content":"                    System.out.println(\"    Format: deadline description /by time\");","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"teoks0199"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"teoks0199"},"content":"            } else if (command.equals(\"event\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"teoks0199"},"content":"                try {","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"teoks0199"},"content":"                    String[] s1 \u003d input[1].split(\"/from\", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"teoks0199"},"content":"                    String[] s2 \u003d s1[1].split(\"/to\", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"teoks0199"},"content":"                    String desc \u003d s1[0].trim();","lastModifiedDate":"2023-08-23"},{"lineNumber":88,"author":{"gitId":"teoks0199"},"content":"                    String from \u003d s2[0].trim();","lastModifiedDate":"2023-08-23"},{"lineNumber":89,"author":{"gitId":"teoks0199"},"content":"                    String to \u003d s2[1].trim();","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"teoks0199"},"content":"                    if (desc.equals(\"\") || from.equals(\"\") || to.equals(\"\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":91,"author":{"gitId":"teoks0199"},"content":"                        throw new DukeException();","lastModifiedDate":"2023-08-23"},{"lineNumber":92,"author":{"gitId":"teoks0199"},"content":"                    }","lastModifiedDate":"2023-08-23"},{"lineNumber":93,"author":{"gitId":"teoks0199"},"content":"                    Event e \u003d new Event(desc, from, to);","lastModifiedDate":"2023-08-22"},{"lineNumber":94,"author":{"gitId":"teoks0199"},"content":"                    list.add(e);","lastModifiedDate":"2023-08-22"},{"lineNumber":95,"author":{"gitId":"teoks0199"},"content":"                    System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":96,"author":{"gitId":"teoks0199"},"content":"                    System.out.println(\"      \" + e.toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":97,"author":{"gitId":"teoks0199"},"content":"                    System.out.println(\"    Number of tasks: \" + list.size());","lastModifiedDate":"2023-08-22"},{"lineNumber":98,"author":{"gitId":"teoks0199"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":99,"author":{"gitId":"teoks0199"},"content":"                    System.out.println(\"    Format: event description /from time /to time\");","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"teoks0199"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":101,"author":{"gitId":"teoks0199"},"content":"                    System.out.println(\"    Format: event description /from time /to time\");","lastModifiedDate":"2023-08-23"},{"lineNumber":102,"author":{"gitId":"teoks0199"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":103,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":104,"author":{"gitId":"teoks0199"},"content":"            } else if (command.equals(\"todo\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":105,"author":{"gitId":"teoks0199"},"content":"                try {","lastModifiedDate":"2023-08-23"},{"lineNumber":106,"author":{"gitId":"teoks0199"},"content":"                    String desc \u003d input[1];","lastModifiedDate":"2023-08-23"},{"lineNumber":107,"author":{"gitId":"teoks0199"},"content":"                    if (desc.trim().equals(\"\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":108,"author":{"gitId":"teoks0199"},"content":"                        throw new DukeException();","lastModifiedDate":"2023-08-23"},{"lineNumber":109,"author":{"gitId":"teoks0199"},"content":"                    }","lastModifiedDate":"2023-08-23"},{"lineNumber":110,"author":{"gitId":"teoks0199"},"content":"                    ToDo t \u003d new ToDo(desc);","lastModifiedDate":"2023-08-22"},{"lineNumber":111,"author":{"gitId":"teoks0199"},"content":"                    list.add(t);","lastModifiedDate":"2023-08-22"},{"lineNumber":112,"author":{"gitId":"teoks0199"},"content":"                    System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":113,"author":{"gitId":"teoks0199"},"content":"                    System.out.println(\"      \" + t.toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":114,"author":{"gitId":"teoks0199"},"content":"                    System.out.println(\"    Number of tasks: \" + list.size());","lastModifiedDate":"2023-08-22"},{"lineNumber":115,"author":{"gitId":"teoks0199"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":116,"author":{"gitId":"teoks0199"},"content":"                    System.out.println(\"    ☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":117,"author":{"gitId":"teoks0199"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":118,"author":{"gitId":"teoks0199"},"content":"                    System.out.println(\"    ☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":119,"author":{"gitId":"teoks0199"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":120,"author":{"gitId":"teoks0199"},"content":"            } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":121,"author":{"gitId":"teoks0199"},"content":"                System.out.println(\"    ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-23"},{"lineNumber":122,"author":{"gitId":"teoks0199"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":123,"author":{"gitId":"teoks0199"},"content":"            System.out.println(line);","lastModifiedDate":"2023-08-22"},{"lineNumber":124,"author":{"gitId":"teoks0199"},"content":"            input \u003d scanner.nextLine().split(\" \", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":125,"author":{"gitId":"teoks0199"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":126,"author":{"gitId":"teoks0199"},"content":"        System.out.println(line + \"\\n    Bye. Hope to see you again soon!\\n\" + line);","lastModifiedDate":"2023-08-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"teoks0199":124,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teoks0199"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"teoks0199"},"content":"    public DukeException() {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"teoks0199":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teoks0199"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"teoks0199"},"content":"    protected String from;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":"    protected String to;","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"teoks0199"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"teoks0199"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"teoks0199"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"teoks0199"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to:\" + to + \")\";","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"teoks0199"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"teoks0199":17}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teoks0199"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"teoks0199"},"content":"    protected String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"teoks0199"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"teoks0199"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"teoks0199"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"teoks0199"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"teoks0199"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"teoks0199"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"teoks0199"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"teoks0199"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"teoks0199"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"teoks0199"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"teoks0199"},"content":"        return String.format(\"[%s] \" + this.description, this.getStatusIcon());","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"teoks0199"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"teoks0199":26}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teoks0199"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"teoks0199"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"teoks0199"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"teoks0199":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"teoks0199"},"content":"todo borrow book","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"teoks0199"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"teoks0199"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"teoks0199"},"content":"mark 2","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"unmark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"todo eat","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"teoks0199"},"content":"delete 1","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"teoks0199"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"teoks0199"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"teoks0199":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"teoks0199":1,"-":21}}]
