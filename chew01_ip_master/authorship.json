[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"chew01"},"content":"    mainClass.set(\"ducky.Ducky\")","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"chew01"},"content":"    archiveBaseName \u003d \"Ducky\"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chew01":2,"-":40}},{"path":"src/main/java/ducky/Ducky.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chew01"},"content":"package ducky;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"chew01"},"content":"import ducky.command.Command;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"chew01"},"content":"import ducky.util.Parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"chew01"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"chew01"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"chew01"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"chew01"},"content":" * Represents a Ducky chatbot instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"chew01"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"chew01"},"content":"public class Ducky {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"chew01"},"content":"    private final Storage storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"chew01"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"chew01"},"content":"    private final UserInterface ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"chew01"},"content":"     * Constructs a Ducky chatbot instance with the specified file path for persistent data.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"chew01"},"content":"     * @param filePath File path for persistent data to be saved in.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"chew01"},"content":"    public Ducky(String filePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"chew01"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"chew01"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"chew01"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"chew01"},"content":"        this.ui \u003d new UserInterface(sc);","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"chew01"},"content":"     * Loads persistent cache (if available) and starts the chatbot task queue.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"chew01"},"content":"    public void run() {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"chew01"},"content":"        this.storage.load(this.taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"chew01"},"content":"        this.ui.showWelcome();","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"chew01"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"chew01"},"content":"        while (!isExit) {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"chew01"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"chew01"},"content":"                String userInput \u003d this.ui.readCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"chew01"},"content":"                this.ui.showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"chew01"},"content":"                Command c \u003d Parser.parse(userInput);","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"chew01"},"content":"                c.execute(this.taskList, this.ui, this.storage);","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"chew01"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"chew01"},"content":"            } catch (DuckyException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"chew01"},"content":"                this.ui.showError(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"chew01"},"content":"            } finally {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"chew01"},"content":"                this.ui.showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"chew01"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"chew01"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"chew01"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"chew01"},"content":"        new Ducky(\"tasks.txt\").run();","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"chew01"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"chew01":54}},{"path":"src/main/java/ducky/DuckyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chew01"},"content":"package ducky;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"chew01"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"chew01"},"content":" * An exception thrown by Ducky.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"chew01"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"chew01"},"content":"public class DuckyException extends Exception {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"chew01"},"content":"     * Constructs a new exception with the specified message.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"chew01"},"content":"     * @param message Message to be included in exception.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"chew01"},"content":"    public DuckyException(String message) {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"chew01"},"content":"        super(message);","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"chew01"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"chew01":15}},{"path":"src/main/java/ducky/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chew01"},"content":"package ducky;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"chew01"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"chew01"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"chew01"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"chew01"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"chew01"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"chew01"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"chew01"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"chew01"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"chew01"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"chew01"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"chew01"},"content":"    private final Ducky ducky \u003d new Ducky(\"tasks.txt\");","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"chew01"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"chew01"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"chew01"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"chew01"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"chew01"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"chew01"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"chew01"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"chew01"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDucky(ducky);","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"chew01"},"content":"            stage.show();","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"chew01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"chew01"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"chew01"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"chew01"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"chew01":31}},{"path":"src/main/java/ducky/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chew01"},"content":"package ducky;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"chew01"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"chew01"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"chew01"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"chew01"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"chew01"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"chew01"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"chew01"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"chew01"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"chew01"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"chew01"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"chew01"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"chew01"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"chew01"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"chew01"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"chew01"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"chew01"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"chew01"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"chew01"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"chew01"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"chew01"},"content":"    private Ducky ducky;","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"chew01"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"chew01"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"chew01"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"chew01"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"chew01"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"chew01"},"content":"    public void setDucky(Ducky d) {","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"chew01"},"content":"        ducky \u003d d;","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"chew01"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"chew01"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"chew01"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"chew01"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"chew01"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"chew01"},"content":"        String response \u003d ducky.getResponse(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"chew01"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"chew01"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"chew01"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"chew01"},"content":"        );","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"chew01"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"chew01"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"chew01":51}},{"path":"src/main/java/ducky/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chew01"},"content":"package ducky;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"chew01"},"content":"import ducky.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"chew01"},"content":"import ducky.util.DuckyFileParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"chew01"},"content":"import ducky.util.Parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"chew01"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"chew01"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"chew01"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"chew01"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"chew01"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"chew01"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"chew01"},"content":" * Storage module that handles file I/O for Ducky chatbot.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"chew01"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"chew01"},"content":"public class Storage {","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"chew01"},"content":"    private final String filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"chew01"},"content":"     * Constructs a Storage instance that saves and loads the specified file path.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"chew01"},"content":"     * @param filePath File path to load persistent data from.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"chew01"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"chew01"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"chew01"},"content":"     * Saves data in the specified TaskList to previously specified file path.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"chew01"},"content":"     * @param taskList TaskList with data to be stored.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"chew01"},"content":"    public void save(TaskList taskList) {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"chew01"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"chew01"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"chew01"},"content":"            fw.write(taskList.getSaveableList());","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"chew01"},"content":"            fw.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"chew01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"chew01"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"chew01"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"chew01"},"content":"     * Loads data (if any) in previously specified file path into specified TaskList.","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"chew01"},"content":"     * @param taskList TaskList for persistent data to be loaded into.","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"chew01"},"content":"    public void load(TaskList taskList) {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"chew01"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"chew01"},"content":"            File f \u003d new File(this.filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"chew01"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"chew01"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"chew01"},"content":"                Task parsedTask \u003d Parser.parseSavedTask(s.nextLine());","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"chew01"},"content":"                taskList.addTask(parsedTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"chew01"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"chew01"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"chew01"},"content":"            System.out.println(\"No task file found. No tasks were loaded.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"chew01"},"content":"        } catch (DuckyFileParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"chew01"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"chew01"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"chew01"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"chew01":60}},{"path":"src/main/java/ducky/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chew01"},"content":"package ducky;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"chew01"},"content":"import ducky.command.DuckyInvalidTaskIndexException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"chew01"},"content":"import ducky.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"chew01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"chew01"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"chew01"},"content":" * Represents a list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"chew01"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"chew01"},"content":"public class TaskList {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"chew01"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"chew01"},"content":"     * Constructs a TaskList.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"chew01"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"chew01"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"chew01"},"content":"     * Adds the specified task into the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"chew01"},"content":"     * @param t Task to be added into the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"chew01"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"chew01"},"content":"        this.tasks.add(t);","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"chew01"},"content":"     * Marks the task in the list with the specified index as complete.","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"chew01"},"content":"     * @param index Index of completed task in the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"chew01"},"content":"     * @return Task to be marked as complete.","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"chew01"},"content":"     * @throws DuckyInvalidTaskIndexException If specified index does not exist.","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"chew01"},"content":"    public Task markTaskAsComplete(int index) throws DuckyInvalidTaskIndexException {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"chew01"},"content":"        if (index \u003c 0 || index \u003e\u003d this.tasks.size()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"chew01"},"content":"            throw new DuckyInvalidTaskIndexException(index + 1, this.tasks.size());","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"chew01"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"chew01"},"content":"        Task toMark \u003d this.tasks.get(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"chew01"},"content":"        toMark.setComplete();","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"chew01"},"content":"        return toMark;","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"chew01"},"content":"     * Marks the task in the list with the specified index as incomplete.","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"chew01"},"content":"     * @param index Index of incomplete task in the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"chew01"},"content":"     * @return Task to be marked as incomplete.","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"chew01"},"content":"     * @throws DuckyInvalidTaskIndexException If specified index does not exist.","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"chew01"},"content":"    public Task markTaskAsIncomplete(int index) throws DuckyInvalidTaskIndexException {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"chew01"},"content":"        if (index \u003c 0 || index \u003e\u003d this.tasks.size()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"chew01"},"content":"            throw new DuckyInvalidTaskIndexException(index + 1, this.tasks.size());","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"chew01"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"chew01"},"content":"        Task toUnmark \u003d this.tasks.get(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"chew01"},"content":"        toUnmark.setIncomplete();","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"chew01"},"content":"        return toUnmark;","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"chew01"},"content":"     * Deletes the task in the list with the specified index.","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"chew01"},"content":"     * @param index Index of task to be deleted.","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"chew01"},"content":"     * @return Task to be deleted.","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"chew01"},"content":"     * @throws DuckyInvalidTaskIndexException If specified index does not exist.","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"chew01"},"content":"    public Task deleteTask(int index) throws DuckyInvalidTaskIndexException {","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"chew01"},"content":"        if (index \u003c 0 || index \u003e\u003d this.tasks.size()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"chew01"},"content":"            throw new DuckyInvalidTaskIndexException(index + 1, this.tasks.size());","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"chew01"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"chew01"},"content":"        Task toDelete \u003d this.tasks.get(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"chew01"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"chew01"},"content":"        return toDelete;","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"chew01"},"content":"     * Returns a string representation of tasks in the task list","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"chew01"},"content":"     * that contain the specified query string.","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"chew01"},"content":"     * @param query Substring to find in the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"chew01"},"content":"     * @return String representation of tasks that match the query.","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"chew01"},"content":"    public String getTaskQueryResult(String query) {","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"chew01"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"chew01"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"chew01"},"content":"            Task t \u003d tasks.get(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"chew01"},"content":"            if (t.containsString(query)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"chew01"},"content":"                result.append(String.format(\"%d.%s\\n\", i + 1, t));","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"chew01"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"chew01"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"chew01"},"content":"        return result.toString().isEmpty()","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"chew01"},"content":"                ? String.format(\"Sorry, I couldn\u0027t find any tasks that contain \\\"%s\\\".\", query)","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"chew01"},"content":"                : String.format(\"Here are the task(s) that contain \\\"%s\\\":\\n%s\", query, result);","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"chew01"},"content":"     * Returns a string representation of the list for printing to user interface.","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"chew01"},"content":"     * @return Representation of the list meant for printing.","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"chew01"},"content":"    public String getPrintableList() {","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"chew01"},"content":"        if (this.tasks.isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"chew01"},"content":"            return \"There are no tasks in your list.\";","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"chew01"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"chew01"},"content":"        StringBuilder builder \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"chew01"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"chew01"},"content":"            if (i \u003d\u003d tasks.size() - 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"chew01"},"content":"                builder.append(String.format(\"%d.%s\", i + 1, this.tasks.get(i)));","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"chew01"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"chew01"},"content":"                builder.append(String.format(\"%d.%s\\n\", i + 1, this.tasks.get(i)));","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"chew01"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"chew01"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"chew01"},"content":"        return builder.toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"chew01"},"content":"     * Returns a string representation of the list for saving to file system.","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"chew01"},"content":"     * @return Representation of the file meant for saving.","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"chew01"},"content":"    public String getSaveableList() {","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"chew01"},"content":"        StringBuilder text \u003d new StringBuilder();","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"chew01"},"content":"        for (Task t : this.tasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"chew01"},"content":"            text.append(String.format(\"%s\\n\", t.getSaveFormat()));","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"chew01"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"chew01"},"content":"        return text.toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"chew01"},"content":"     * Returns a string representation of the number of tasks in the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"chew01"},"content":"     * @return Representation of task count.","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"chew01"},"content":"    public String getListLengthStatus() {","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"chew01"},"content":"        if (this.tasks.isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"chew01"},"content":"            return \"There are no tasks in your list.\";","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"chew01"},"content":"        } else if (this.tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"chew01"},"content":"            return \"There is now 1 task in your list.\";","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"chew01"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"chew01"},"content":"            return String.format(\"There are now %d tasks in your list.\", this.tasks.size());","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"chew01"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"chew01"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"chew01":139}},{"path":"src/main/java/ducky/UserInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chew01"},"content":"package ducky;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"chew01"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"chew01"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"chew01"},"content":" * Represents the user interface of a Ducky chatbot instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"chew01"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"chew01"},"content":"public class UserInterface {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"chew01"},"content":"    private final Scanner sc;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"chew01"},"content":"     * Constructs a UserInterface with the specified Scanner instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"chew01"},"content":"     * @param sc Scanner to read input from.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"chew01"},"content":"    public UserInterface(Scanner sc) {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"chew01"},"content":"        this.sc \u003d sc;","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"chew01"},"content":"     * Reads and returns input from scanner.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"chew01"},"content":"     * @return Input from scanner.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"chew01"},"content":"    public String readCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"chew01"},"content":"        return this.sc.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"chew01"},"content":"     * Prints a welcome message.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"chew01"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"chew01"},"content":"        System.out.println(\"Hello! I\u0027m Ducky and I\u0027m here to help!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"chew01"},"content":"     * Prints a farewell message.","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"chew01"},"content":"    public void showFarewell() {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"chew01"},"content":"        System.out.println(\"Bye! See you again!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"chew01"},"content":"     * Prints specified error message.","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"chew01"},"content":"     * @param message Error message to be printed.","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"chew01"},"content":"    public void showError(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"chew01"},"content":"        System.out.println(\"Error!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"chew01"},"content":"        System.out.println(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"chew01"},"content":"     * Prints a horizontal line divider.","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"chew01"},"content":"    public void showLine() {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"chew01"},"content":"        System.out.println(\"____________\");","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"chew01"},"content":"     * Prints specified arguments line by line.","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"chew01"},"content":"     * @param args Arguments to be printed.","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"chew01"},"content":"    public void showMessagePerLine(String... args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"chew01"},"content":"        for (String a : args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"chew01"},"content":"            System.out.println(a);","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"chew01"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"chew01"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"chew01":66}},{"path":"src/main/java/ducky/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chew01"},"content":"package ducky.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"chew01"},"content":"import ducky.DuckyException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"chew01"},"content":"import ducky.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"chew01"},"content":"import ducky.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"chew01"},"content":"import ducky.UserInterface;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"chew01"},"content":"import ducky.task.DeadlineTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"chew01"},"content":"import ducky.task.EventTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"chew01"},"content":"import ducky.task.TaskType;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"chew01"},"content":"import ducky.task.TodoTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"chew01"},"content":"import ducky.util.Parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"chew01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"chew01"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"chew01"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"chew01"},"content":" * Represents a command that adds a task to Ducky\u0027s task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"chew01"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"chew01"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"chew01"},"content":"    private final TaskType type;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"chew01"},"content":"    private final String[] args;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"chew01"},"content":"     * Constructs a command that adds the specified type of task with additional arguments.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"chew01"},"content":"     * @param type Type of task.","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"chew01"},"content":"     * @param args Arguments specific to the given type of task.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"chew01"},"content":"    public AddTaskCommand(TaskType type, String... args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"chew01"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"chew01"},"content":"        this.args \u003d args;","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"chew01"},"content":"     * Adds the task to Ducky\u0027s task list, saves the state to file system,","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"chew01"},"content":"     * then reflects changes to user interface.","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"chew01"},"content":"     * @param taskList TaskList of Ducky chatbot instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"chew01"},"content":"     * @param ui UserInterface of Ducky chatbot instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"chew01"},"content":"     * @param storage Storage module of Ducky chatbot instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"chew01"},"content":"     * @throws DuckyException If exceptions specific to Ducky are raised.","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"chew01"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"chew01"},"content":"    public void execute(TaskList taskList, UserInterface ui, Storage storage) throws DuckyException {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"chew01"},"content":"        switch (this.type) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"chew01"},"content":"        case TODO:","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"chew01"},"content":"            TodoTask newTodo \u003d new TodoTask(this.args[0]);","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"chew01"},"content":"            taskList.addTask(newTodo);","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"chew01"},"content":"            storage.save(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"chew01"},"content":"            ui.showMessagePerLine(","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"chew01"},"content":"                    \"Okay! I\u0027ve added this task:\",","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"chew01"},"content":"                    newTodo.toString(),","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"chew01"},"content":"                    taskList.getListLengthStatus()","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"chew01"},"content":"                    );","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"chew01"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"chew01"},"content":"        case DEADLINE:","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"chew01"},"content":"            LocalDate deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"chew01"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"chew01"},"content":"                deadline \u003d Parser.parseDate(this.args[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"chew01"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"chew01"},"content":"                throw new DuckyInvalidCommandFormatException(","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"chew01"},"content":"                        \"Your deadline should be in yyyy-mm-dd format.\"","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"chew01"},"content":"                );","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"chew01"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"chew01"},"content":"            DeadlineTask newDeadline \u003d new DeadlineTask(this.args[0], deadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"chew01"},"content":"            taskList.addTask(newDeadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"chew01"},"content":"            storage.save(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"chew01"},"content":"            ui.showMessagePerLine(","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"chew01"},"content":"                    \"Okay! I\u0027ve added this task:\",","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"chew01"},"content":"                    newDeadline.toString(),","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"chew01"},"content":"                    taskList.getListLengthStatus()","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"chew01"},"content":"            );","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"chew01"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"chew01"},"content":"        case EVENT:","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"chew01"},"content":"            EventTask newEvent \u003d new EventTask(this.args[0], this.args[1], this.args[2]);","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"chew01"},"content":"            taskList.addTask(newEvent);","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"chew01"},"content":"            storage.save(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"chew01"},"content":"            ui.showMessagePerLine(","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"chew01"},"content":"                    \"Okay! I\u0027ve added this task:\",","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"chew01"},"content":"                    newEvent.toString(),","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"chew01"},"content":"                    taskList.getListLengthStatus()","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"chew01"},"content":"            );","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"chew01"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"chew01"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"chew01"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"chew01":85}},{"path":"src/main/java/ducky/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chew01"},"content":"package ducky.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"chew01"},"content":"import ducky.DuckyException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"chew01"},"content":"import ducky.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"chew01"},"content":"import ducky.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"chew01"},"content":"import ducky.UserInterface;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"chew01"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"chew01"},"content":" * Represents a command to Ducky chatbot.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"chew01"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"chew01"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"chew01"},"content":"     * Returns whether command is an exit command.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"chew01"},"content":"     * @return True if command is an exit command.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"chew01"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"chew01"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"chew01"},"content":"     * Executes the current command.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"chew01"},"content":"     * @param taskList TaskList of Ducky chatbot instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"chew01"},"content":"     * @param ui UserInterface of Ducky chatbot instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"chew01"},"content":"     * @param storage Storage module of Ducky chatbot instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"chew01"},"content":"     * @throws DuckyException If exceptions specific to Ducky are raised.","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"chew01"},"content":"    public abstract void execute(TaskList taskList, UserInterface ui, Storage storage) throws DuckyException;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"chew01"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"chew01":29}},{"path":"src/main/java/ducky/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chew01"},"content":"package ducky.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"chew01"},"content":"import ducky.DuckyException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"chew01"},"content":"import ducky.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"chew01"},"content":"import ducky.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"chew01"},"content":"import ducky.UserInterface;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"chew01"},"content":"import ducky.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"chew01"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"chew01"},"content":" * Represents a command that deletes a task from Ducky\u0027s task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"chew01"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"chew01"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"chew01"},"content":"    private final int inputIndex;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"chew01"},"content":"     * Constructs a command that deletes task with the specified index from Ducky\u0027s task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"chew01"},"content":"     * @param inputIndex Index of task in task list to be deleted.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"chew01"},"content":"    public DeleteCommand(int inputIndex) {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"chew01"},"content":"        this.inputIndex \u003d inputIndex;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"chew01"},"content":"     * Deletes the task with the given index from task list, saves state to file system,","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"chew01"},"content":"     * then reflects changes to user interface.","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"chew01"},"content":"     * @param taskList TaskList of Ducky chatbot instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"chew01"},"content":"     * @param ui UserInterface of Ducky chatbot instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"chew01"},"content":"     * @param storage Storage module of Ducky chatbot instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"chew01"},"content":"     * @throws DuckyException If exceptions specific to Ducky are raised.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"chew01"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"chew01"},"content":"    public void execute(TaskList taskList, UserInterface ui, Storage storage) throws DuckyException {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"chew01"},"content":"        int deleteIndex \u003d this.inputIndex - 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"chew01"},"content":"        Task deletedTask \u003d taskList.deleteTask(deleteIndex);","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"chew01"},"content":"        storage.save(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"chew01"},"content":"        ui.showMessagePerLine(","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"chew01"},"content":"                \"Okay! I\u0027ve removed this task:\",","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"chew01"},"content":"                deletedTask.toString(),","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"chew01"},"content":"                taskList.getListLengthStatus()","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"chew01"},"content":"        );","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"chew01"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"chew01":43}},{"path":"src/main/java/ducky/command/DuckyInvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chew01"},"content":"package ducky.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"chew01"},"content":"import ducky.DuckyException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"chew01"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"chew01"},"content":" * An exception thrown when input that cannot be recognised as a command is given.","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"chew01"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"chew01"},"content":"public class DuckyInvalidCommandException extends DuckyException {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"chew01"},"content":"     * Constructs a new invalid command exception with a preset message.","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"chew01"},"content":"    public DuckyInvalidCommandException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"chew01"},"content":"        super(\"Um... Sorry, I don\u0027t know what that means.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"chew01"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"chew01":16}},{"path":"src/main/java/ducky/command/DuckyInvalidCommandFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chew01"},"content":"package ducky.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"chew01"},"content":"import ducky.DuckyException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"chew01"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"chew01"},"content":" * An exception thrown when a command is not in the correct format.","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"chew01"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"chew01"},"content":"public class DuckyInvalidCommandFormatException extends DuckyException {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"chew01"},"content":"     * Constructs an invalid format exception that contains a preset message","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"chew01"},"content":"     * and appends a specified custom message.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"chew01"},"content":"     * @param message Custom error information to be appended to the error message.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"chew01"},"content":"    public DuckyInvalidCommandFormatException(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"chew01"},"content":"        super(String.format(\"Um... there\u0027s something wrong with your command :(\\n%s\", message));","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"chew01"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"chew01":18}},{"path":"src/main/java/ducky/command/DuckyInvalidTaskIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chew01"},"content":"package ducky.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"chew01"},"content":"import ducky.DuckyException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"chew01"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"chew01"},"content":" * An exception thrown when the user specifies an index that is negative,","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"chew01"},"content":" * or greater than Ducky\u0027s task list size.","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"chew01"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"chew01"},"content":"public class DuckyInvalidTaskIndexException extends DuckyException {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"chew01"},"content":"     * Constructs an invalid index exception with an error message detailing","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"chew01"},"content":"     * the invalid index given and the number of tasks currently in the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"chew01"},"content":"     * @param index Invalid index given by user.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"chew01"},"content":"     * @param size Size of the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"chew01"},"content":"    public DuckyInvalidTaskIndexException(int index, int size) {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"chew01"},"content":"        super(String.format(\"Could not update task %d! There are %d tasks available.\", index, size));","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"chew01"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"chew01":20}},{"path":"src/main/java/ducky/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chew01"},"content":"package ducky.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"chew01"},"content":"import ducky.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"chew01"},"content":"import ducky.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"chew01"},"content":"import ducky.UserInterface;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"chew01"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"chew01"},"content":" * Represents a command that exits Ducky.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"chew01"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"chew01"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"chew01"},"content":"     * Construct a command that exits Ducky.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"chew01"},"content":"    public ExitCommand() {}","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"chew01"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"chew01"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"chew01"},"content":"        return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"chew01"},"content":"     * Prints farewell message from user interface.","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"chew01"},"content":"     * @param taskList TaskList of Ducky chatbot instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"chew01"},"content":"     * @param ui UserInterface of Ducky chatbot instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"chew01"},"content":"     * @param storage Storage module of Ducky chatbot instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"chew01"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"chew01"},"content":"    public void execute(TaskList taskList, UserInterface ui, Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"chew01"},"content":"        ui.showFarewell();","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"chew01"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"chew01":32}},{"path":"src/main/java/ducky/command/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chew01"},"content":"package ducky.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"chew01"},"content":"import ducky.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"chew01"},"content":"import ducky.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"chew01"},"content":"import ducky.UserInterface;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"chew01"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"chew01"},"content":" * Represents a command that finds tasks containing a given query.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"chew01"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"chew01"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"chew01"},"content":"    private final String queryString;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"chew01"},"content":"     * Constructs a command to find tasks containing the specified query.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"chew01"},"content":"     * @param queryString Query to find tasks in task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"chew01"},"content":"    public FindTaskCommand(String queryString) {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"chew01"},"content":"        this.queryString \u003d queryString;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"chew01"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"chew01"},"content":"    public void execute(TaskList taskList, UserInterface ui, Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"chew01"},"content":"        String result \u003d taskList.getTaskQueryResult(this.queryString);","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"chew01"},"content":"        ui.showMessagePerLine(result);","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"chew01"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"chew01":27}},{"path":"src/main/java/ducky/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chew01"},"content":"package ducky.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"chew01"},"content":"import ducky.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"chew01"},"content":"import ducky.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"chew01"},"content":"import ducky.UserInterface;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"chew01"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"chew01"},"content":" * Represents a command that lists all tasks in Ducky\u0027s task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"chew01"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"chew01"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"chew01"},"content":"     * Constructs a command that lists all tasks in Ducky\u0027s task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"chew01"},"content":"    public ListCommand() {}","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"chew01"},"content":"     * Prints each task on each line as their printable form on the user interface.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"chew01"},"content":"     * @param taskList TaskList of Ducky chatbot instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"chew01"},"content":"     * @param ui UserInterface of Ducky chatbot instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"chew01"},"content":"     * @param storage Storage module of Ducky chatbot instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"chew01"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"chew01"},"content":"    public void execute(TaskList taskList, UserInterface ui, Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"chew01"},"content":"        ui.showMessagePerLine(taskList.getPrintableList());","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"chew01"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"chew01":27}},{"path":"src/main/java/ducky/command/UpdateTaskCompletionCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chew01"},"content":"package ducky.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"chew01"},"content":"import ducky.DuckyException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"chew01"},"content":"import ducky.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"chew01"},"content":"import ducky.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"chew01"},"content":"import ducky.UserInterface;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"chew01"},"content":"import ducky.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"chew01"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"chew01"},"content":" * Represents a command that changes completion status of a task in Ducky\u0027s task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"chew01"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"chew01"},"content":"public class UpdateTaskCompletionCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"chew01"},"content":"    private final int inputIndex;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"chew01"},"content":"    private final boolean isCompleted;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"chew01"},"content":"     * Constructs a command that changes completion status of the task with specified index.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"chew01"},"content":"     * @param inputIndex Index of task in task list to be changed.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"chew01"},"content":"     * @param isCompleted Whether the specified task is completed.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"chew01"},"content":"    public UpdateTaskCompletionCommand(int inputIndex, boolean isCompleted) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"chew01"},"content":"        this.inputIndex \u003d inputIndex;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"chew01"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"chew01"},"content":"     * Updates the completion status of the task, saves the state to file system,","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"chew01"},"content":"     * then reflects changes to user interface.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"chew01"},"content":"     * @param taskList TaskList of Ducky chatbot instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"chew01"},"content":"     * @param ui UserInterface of Ducky chatbot instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"chew01"},"content":"     * @param storage Storage module of Ducky chatbot instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"chew01"},"content":"     * @throws DuckyException If exceptions specific to Ducky are raised.","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"chew01"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"chew01"},"content":"    public void execute(TaskList taskList, UserInterface ui, Storage storage) throws DuckyException {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"chew01"},"content":"        int updateIndex \u003d this.inputIndex - 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"chew01"},"content":"        if (this.isCompleted) {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"chew01"},"content":"            Task changedTask \u003d taskList.markTaskAsComplete(updateIndex);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"chew01"},"content":"            storage.save(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"chew01"},"content":"            ui.showMessagePerLine(","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"chew01"},"content":"                    \"Okay! I\u0027ve marked this task as complete:\",","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"chew01"},"content":"                    changedTask.toString()","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"chew01"},"content":"            );","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"chew01"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"chew01"},"content":"            Task changedTask \u003d taskList.markTaskAsIncomplete(updateIndex);","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"chew01"},"content":"            storage.save(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"chew01"},"content":"            ui.showMessagePerLine(","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"chew01"},"content":"                    \"Okay! I\u0027ve marked this task as incomplete:\",","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"chew01"},"content":"                    changedTask.toString()","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"chew01"},"content":"            );","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"chew01"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"chew01"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"chew01":54}},{"path":"src/main/java/ducky/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chew01"},"content":"package ducky.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"chew01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"chew01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"chew01"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"chew01"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"chew01"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"chew01"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"chew01"},"content":"    private final LocalDate deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"chew01"},"content":"     * Constructs a task with a deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"chew01"},"content":"     * @param desc Description of task.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"chew01"},"content":"     * @param deadline Deadline of task in LocalDate format.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"chew01"},"content":"    public DeadlineTask(String desc, LocalDate deadline) {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"chew01"},"content":"        super(desc);","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"chew01"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"chew01"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"chew01"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"chew01"},"content":"        return String.format(","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"chew01"},"content":"                \"[D]%s (by: %s)\",","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"chew01"},"content":"                super.toString(),","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"chew01"},"content":"                this.deadline.format(","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"chew01"},"content":"                        DateTimeFormatter.ofPattern(\"MMM dd yyyy\")","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"chew01"},"content":"                ));","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"chew01"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"chew01"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"chew01"},"content":"        return String.format(","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"chew01"},"content":"                \"D | %s | %s\",","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"chew01"},"content":"                super.getSaveFormat(),","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"chew01"},"content":"                this.deadline","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"chew01"},"content":"        );","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"chew01"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"chew01":41}},{"path":"src/main/java/ducky/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chew01"},"content":"package ducky.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"chew01"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"chew01"},"content":" * Represents a task with a start time and end time.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"chew01"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"chew01"},"content":"public class EventTask extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"chew01"},"content":"    private final String startTime;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"chew01"},"content":"    private final String endTime;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"chew01"},"content":"     * Constructs a task with the specified start time and end time.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"chew01"},"content":"     * @param desc Description of task.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"chew01"},"content":"     * @param startTime Start time of task.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"chew01"},"content":"     * @param endTime End time of task.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"chew01"},"content":"    public EventTask(String desc, String startTime, String endTime) {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"chew01"},"content":"        super(desc);","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"chew01"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"chew01"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"chew01"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"chew01"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"chew01"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), this.startTime, this.endTime);","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"chew01"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"chew01"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"chew01"},"content":"        return String.format(","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"chew01"},"content":"                \"E | %s | %s | %s\",","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"chew01"},"content":"                super.getSaveFormat(),","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"chew01"},"content":"                startTime,","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"chew01"},"content":"                endTime","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"chew01"},"content":"        );","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"chew01"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"chew01":37}},{"path":"src/main/java/ducky/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chew01"},"content":"package ducky.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"chew01"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"chew01"},"content":" * Represents a task stored in Ducky chatbot memory.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"chew01"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"chew01"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"chew01"},"content":"    private final String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"chew01"},"content":"    private boolean completed;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"chew01"},"content":"     * Constructs a task with specified description and incomplete by default.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"chew01"},"content":"     * @param desc Description of task.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"chew01"},"content":"    public Task(String desc) {","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"chew01"},"content":"        this.description \u003d desc;","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"chew01"},"content":"        this.completed \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"chew01"},"content":"     * Sets the task status to complete.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"chew01"},"content":"    public void setComplete() {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"chew01"},"content":"        this.completed \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"chew01"},"content":"     * Sets the task status to incomplete.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"chew01"},"content":"    public void setIncomplete() {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"chew01"},"content":"        this.completed \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"chew01"},"content":"     * Returns whether task description contains the given string as a substring.","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"chew01"},"content":"     * @param s String to check in description.","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"chew01"},"content":"     * @return True if description contains specified string.","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"chew01"},"content":"    public boolean containsString(String s) {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"chew01"},"content":"        return this.description.contains(s);","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"chew01"},"content":"     * Returns a representation of the task for printing to user interface.","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"chew01"},"content":"     * @return Representation of the task meant for printing.","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"chew01"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"chew01"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"chew01"},"content":"        if (this.completed) {","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"chew01"},"content":"            return String.format(\"[X] %s\", this.description);","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"chew01"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"chew01"},"content":"        return String.format(\"[ ] %s\", this.description);","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"chew01"},"content":"     * Returns a representation of the task for saving to file system.","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"chew01"},"content":"     * @return Representation of the task meant for saving.","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"chew01"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"chew01"},"content":"        return String.format(","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"chew01"},"content":"                \"%d | %s\",","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"chew01"},"content":"                this.completed ? 1 : 0,","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"chew01"},"content":"                this.description","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"chew01"},"content":"        );","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"chew01"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"chew01":66}},{"path":"src/main/java/ducky/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chew01"},"content":"package ducky.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"chew01"},"content":"public enum TaskType {","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"chew01"},"content":"    TODO,","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"chew01"},"content":"    DEADLINE,","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"chew01"},"content":"    EVENT,","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"chew01"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"chew01":7}},{"path":"src/main/java/ducky/task/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chew01"},"content":"package ducky.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"chew01"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"chew01"},"content":" * Represents a task with only a description.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"chew01"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"chew01"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"chew01"},"content":"     * Constructs a task with the specified description.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"chew01"},"content":"     * @param desc Description of task.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"chew01"},"content":"    public TodoTask(String desc) {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"chew01"},"content":"        super(desc);","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"chew01"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"chew01"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"chew01"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"chew01"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"chew01"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"chew01"},"content":"        return String.format(\"T | %s\", super.getSaveFormat());","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"chew01"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"chew01":25}},{"path":"src/main/java/ducky/util/DuckyFileParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chew01"},"content":"package ducky.util;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"chew01"},"content":"import ducky.DuckyException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"chew01"},"content":"public class DuckyFileParseException extends DuckyException {","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"chew01"},"content":"    public DuckyFileParseException() {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"chew01"},"content":"        super(\"Oh no! There was a problem reading your file. It might be corrupted.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"chew01"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"chew01":10}},{"path":"src/main/java/ducky/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chew01"},"content":"package ducky.util;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"chew01"},"content":"import ducky.command.AddTaskCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"chew01"},"content":"import ducky.command.Command;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"chew01"},"content":"import ducky.command.DeleteCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"chew01"},"content":"import ducky.command.DuckyInvalidCommandException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"chew01"},"content":"import ducky.command.DuckyInvalidCommandFormatException;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"chew01"},"content":"import ducky.command.ExitCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"chew01"},"content":"import ducky.command.FindTaskCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"chew01"},"content":"import ducky.command.ListCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"chew01"},"content":"import ducky.command.UpdateTaskCompletionCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"chew01"},"content":"import ducky.task.DeadlineTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"chew01"},"content":"import ducky.task.EventTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"chew01"},"content":"import ducky.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"chew01"},"content":"import ducky.task.TaskType;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"chew01"},"content":"import ducky.task.TodoTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"chew01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"chew01"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"chew01"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"chew01"},"content":" * Represents a Parser used for parsing commands and dates.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"chew01"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"chew01"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"chew01"},"content":"     * Constructs a Parser instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"chew01"},"content":"    public Parser() {}","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"chew01"},"content":"     * Parses the specified input and returns its Command representation, if applicable.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"chew01"},"content":"     * @param cmd Command to be parsed.","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"chew01"},"content":"     * @return Command representation of specified input.","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"chew01"},"content":"     * @throws DuckyInvalidCommandException If the command does not exist.","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"chew01"},"content":"     * @throws DuckyInvalidCommandFormatException If the command is not in the right format.","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"chew01"},"content":"    public static Command parse(String cmd) throws DuckyInvalidCommandException, DuckyInvalidCommandFormatException {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"chew01"},"content":"        String[] parts \u003d cmd.split(\" \", 2);","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"chew01"},"content":"        String commandType \u003d parts[0].toLowerCase();","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"chew01"},"content":"        String argumentString \u003d (parts.length \u003e 1) ? parts[1].trim() : \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"chew01"},"content":"        switch (commandType) {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"chew01"},"content":"        case \"bye\":","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"chew01"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"chew01"},"content":"        case \"list\":","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"chew01"},"content":"            return new ListCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"chew01"},"content":"        case \"find\":","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"chew01"},"content":"            return new FindTaskCommand(argumentString);","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"chew01"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"chew01"},"content":"            int markInputIndex;","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"chew01"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"chew01"},"content":"                markInputIndex \u003d Integer.parseInt(argumentString);","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"chew01"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"chew01"},"content":"                throw new DuckyInvalidCommandFormatException(\"Did you enter a valid number?\");","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"chew01"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"chew01"},"content":"            return new UpdateTaskCompletionCommand(markInputIndex, true);","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"chew01"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"chew01"},"content":"            int unmarkInputIndex;","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"chew01"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"chew01"},"content":"                unmarkInputIndex \u003d Integer.parseInt(argumentString);","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"chew01"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"chew01"},"content":"                throw new DuckyInvalidCommandFormatException(\"Did you enter a valid number?\");","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"chew01"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"chew01"},"content":"            return new UpdateTaskCompletionCommand(unmarkInputIndex, false);","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"chew01"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"chew01"},"content":"            return new DeleteCommand(Integer.parseInt(argumentString));","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"chew01"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"chew01"},"content":"            // If description argument is empty, throw exception","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"chew01"},"content":"            if (argumentString.isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"chew01"},"content":"                throw new DuckyInvalidCommandFormatException(","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"chew01"},"content":"                        \"A description is required for creating a to-do.\"","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"chew01"},"content":"                );","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"chew01"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"chew01"},"content":"            return new AddTaskCommand(TaskType.TODO, argumentString);","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"chew01"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"chew01"},"content":"            String[] deadlineParts \u003d argumentString.split(\"/by\", 2);","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"chew01"},"content":"            // Check if there are 2 arguments","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"chew01"},"content":"            if (deadlineParts.length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"chew01"},"content":"                throw new DuckyInvalidCommandFormatException(","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"chew01"},"content":"                        \"A description and deadline (in yyyy-mm-dd format) \" +","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"chew01"},"content":"                                \"is required for creating a deadline.\"","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"chew01"},"content":"                );","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"chew01"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"chew01"},"content":"            // Check both arguments are not empty","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"chew01"},"content":"            for (int i \u003d 0; i \u003c deadlineParts.length; i++) {","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"chew01"},"content":"                deadlineParts[i] \u003d deadlineParts[i].trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"chew01"},"content":"                if (deadlineParts[i].isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"chew01"},"content":"                    throw new DuckyInvalidCommandFormatException(","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"chew01"},"content":"                            \"A description and deadline (in yyyy-mm-dd format) \" +","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"chew01"},"content":"                                    \"is required for creating a deadline.\"","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"chew01"},"content":"                    );","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"chew01"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"chew01"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"chew01"},"content":"            return new AddTaskCommand(TaskType.DEADLINE, deadlineParts[0], deadlineParts[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"chew01"},"content":"        case \"event\":","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"chew01"},"content":"            String[] eventParts \u003d argumentString.split(\"/from|/to\", 3);","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"chew01"},"content":"            // Check if there are 3 arguments","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"chew01"},"content":"            if (eventParts.length \u003c 3) {","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"chew01"},"content":"                throw new DuckyInvalidCommandFormatException(","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"chew01"},"content":"                        \"A description, start time and end time is required for creating an event.\"","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"chew01"},"content":"                );","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"chew01"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"chew01"},"content":"            // Check all 3 arguments are not empty","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"chew01"},"content":"            for (int i \u003d 0; i \u003c eventParts.length; i++) {","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"chew01"},"content":"                eventParts[i] \u003d eventParts[i].trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"chew01"},"content":"                if (eventParts[i].isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"chew01"},"content":"                    throw new DuckyInvalidCommandFormatException(","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"chew01"},"content":"                            \"A description, start time and end time is required for creating an event.\"","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"chew01"},"content":"                    );","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"chew01"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"chew01"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"chew01"},"content":"            return new AddTaskCommand(","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"chew01"},"content":"                    TaskType.EVENT,","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"chew01"},"content":"                    eventParts[0],","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"chew01"},"content":"                    eventParts[1],","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"chew01"},"content":"                    eventParts[2]","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"chew01"},"content":"            );","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"chew01"},"content":"        default:","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"chew01"},"content":"            throw new DuckyInvalidCommandException();","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"chew01"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":125,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":126,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":127,"author":{"gitId":"chew01"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"chew01"},"content":"     * Parses the specified date given as a string (yyyy-mm-dd format)","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"chew01"},"content":"     * and returns it as LocalDate.","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"chew01"},"content":"     * @param date String representation of date to be parsed.","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"chew01"},"content":"     * @return LocalDate representation of specified date.","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"chew01"},"content":"     * @throws DateTimeParseException If the input date format is not valid.","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"chew01"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"chew01"},"content":"    public static LocalDate parseDate(String date) throws DateTimeParseException {","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"chew01"},"content":"        return LocalDate.parse(date);","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":137,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"chew01"},"content":"    public static Task parseSavedTask(String line) throws DateTimeParseException, DuckyFileParseException {","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"chew01"},"content":"        String[] lineParts \u003d line.trim().split(\" \\\\| \");","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"chew01"},"content":"        if (lineParts.length \u003c 3) {","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"chew01"},"content":"            throw new DuckyFileParseException();","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"chew01"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"chew01"},"content":"        boolean taskIsDone \u003d lineParts[1].equals(\"1\");","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"chew01"},"content":"        Task parsedTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"chew01"},"content":"        switch (lineParts[0]) {","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"chew01"},"content":"        case \"T\":","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"chew01"},"content":"            parsedTask \u003d new TodoTask(lineParts[2]);","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"chew01"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"chew01"},"content":"        case \"D\":","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"chew01"},"content":"            LocalDate deadline \u003d Parser.parseDate(lineParts[3]);","lastModifiedDate":"2023-08-30"},{"lineNumber":153,"author":{"gitId":"chew01"},"content":"            parsedTask \u003d new DeadlineTask(lineParts[2], deadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":154,"author":{"gitId":"chew01"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"chew01"},"content":"        case \"E\":","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"chew01"},"content":"            parsedTask \u003d new EventTask(lineParts[2], lineParts[3], lineParts[4]);","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"chew01"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"chew01"},"content":"        default:","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"chew01"},"content":"            throw new DuckyFileParseException();","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"chew01"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"chew01"},"content":"        if (taskIsDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"chew01"},"content":"            parsedTask.setComplete();","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"chew01"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"chew01"},"content":"        return parsedTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":168,"author":{"gitId":"chew01"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"chew01":168}},{"path":"src/test/java/ducky/task/DeadlineTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chew01"},"content":"package ducky.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"chew01"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"chew01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"chew01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"chew01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"chew01"},"content":"public class DeadlineTaskTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"chew01"},"content":"    DeadlineTask deadlineTask1 \u003d new DeadlineTask(","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"chew01"},"content":"            \"test1\",","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"chew01"},"content":"            LocalDate.parse(\"2019-01-01\")","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"chew01"},"content":"    );","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"chew01"},"content":"    DeadlineTask deadlineTask2 \u003d new DeadlineTask(","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"chew01"},"content":"            \"test2\",","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"chew01"},"content":"            LocalDate.parse(\"2023-08-30\")","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"chew01"},"content":"    );","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"chew01"},"content":"    @BeforeEach","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"chew01"},"content":"    public void setDeadlineTask2ToCompleted() {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"chew01"},"content":"        deadlineTask2.setComplete();","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"chew01"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"chew01"},"content":"    public void deadlineTask_toString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"chew01"},"content":"        assertEquals(","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"chew01"},"content":"                deadlineTask1.toString(),","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"chew01"},"content":"                \"[D][ ] test1 (by: Jan 01 2019)\"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"chew01"},"content":"                );","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"chew01"},"content":"        assertEquals(","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"chew01"},"content":"                deadlineTask2.toString(),","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"chew01"},"content":"                \"[D][X] test2 (by: Aug 30 2023)\"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"chew01"},"content":"        );","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"chew01"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"chew01"},"content":"    public void deadlineTask_getSaveFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"chew01"},"content":"        assertEquals(","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"chew01"},"content":"                deadlineTask1.getSaveFormat(),","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"chew01"},"content":"                \"D | 0 | test1 | 2019-01-01\"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"chew01"},"content":"        );","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"chew01"},"content":"        assertEquals(","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"chew01"},"content":"                deadlineTask2.getSaveFormat(),","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"chew01"},"content":"                \"D | 1 | test2 | 2023-08-30\"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"chew01"},"content":"        );","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"chew01"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"chew01":49}},{"path":"src/test/java/ducky/task/EventTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chew01"},"content":"package ducky.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"chew01"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"chew01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"chew01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"chew01"},"content":"public class EventTaskTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"chew01"},"content":"    EventTask eventTask1 \u003d new EventTask(\"test1\", \"now\", \"later\");","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"chew01"},"content":"    EventTask eventTask2 \u003d new EventTask(\"test2\", \"tomorrow\", \"never\");","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"chew01"},"content":"    @BeforeEach","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"chew01"},"content":"    public void setEventTask2ToCompleted() {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"chew01"},"content":"        eventTask2.setComplete();","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"chew01"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"chew01"},"content":"    public void eventTask_toString_correctResultReturned() {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"chew01"},"content":"        assertEquals(","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"chew01"},"content":"                eventTask1.toString(),","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"chew01"},"content":"                \"[E][ ] test1 (from: now to: later)\"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"chew01"},"content":"        );","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"chew01"},"content":"        assertEquals(","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"chew01"},"content":"                eventTask2.toString(),","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"chew01"},"content":"                \"[E][X] test2 (from: tomorrow to: never)\"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"chew01"},"content":"        );","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"chew01"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"chew01"},"content":"    public void eventTask_getSaveFormat_correctResultReturned() {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"chew01"},"content":"        assertEquals(","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"chew01"},"content":"                eventTask1.getSaveFormat(),","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"chew01"},"content":"                \"E | 0 | test1 | now | later\"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"chew01"},"content":"        );","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"chew01"},"content":"        assertEquals(","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"chew01"},"content":"                eventTask2.getSaveFormat(),","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"chew01"},"content":"                \"E | 1 | test2 | tomorrow | never\"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"chew01"},"content":"        );","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"chew01"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"chew01":42}},{"path":"src/test/java/ducky/task/TodoTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chew01"},"content":"package ducky.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"chew01"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"chew01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"chew01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"chew01"},"content":"public class TodoTaskTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"chew01"},"content":"    TodoTask todoTask1 \u003d new TodoTask(\"test1\");","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"chew01"},"content":"    TodoTask todoTask2 \u003d new TodoTask(\"test2\");","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"chew01"},"content":"    @BeforeEach","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"chew01"},"content":"    public void setTodoTask2ToCompleted() {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"chew01"},"content":"        todoTask2.setComplete();","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"chew01"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"chew01"},"content":"    public void todoTask_toString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"chew01"},"content":"        assertEquals(","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"chew01"},"content":"                todoTask1.toString(),","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"chew01"},"content":"                \"[T][ ] test1\"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"chew01"},"content":"        );","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"chew01"},"content":"        assertEquals(","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"chew01"},"content":"                todoTask2.toString(),","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"chew01"},"content":"                \"[T][X] test2\"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"chew01"},"content":"        );","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"chew01"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"chew01"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"chew01"},"content":"    public void todoTask_getSaveFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"chew01"},"content":"        assertEquals(","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"chew01"},"content":"                todoTask1.getSaveFormat(),","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"chew01"},"content":"                \"T | 0 | test1\"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"chew01"},"content":"        );","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"chew01"},"content":"        assertEquals(","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"chew01"},"content":"                todoTask2.getSaveFormat(),","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"chew01"},"content":"                \"T | 1 | test2\"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"chew01"},"content":"        );","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"chew01"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"chew01"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"chew01":40}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chew01"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"chew01"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"chew01"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"chew01"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"chew01"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"chew01"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"chew01"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"chew01"},"content":"unmark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"chew01"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"chew01"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"chew01":10}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"chew01"},"content":"java -classpath ../bin Ducky \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chew01":1,"-":37}}]
