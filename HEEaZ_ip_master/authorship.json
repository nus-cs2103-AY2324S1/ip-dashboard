[{"path":"data/savedTasksDefaults.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HEEaZ"},"content":"T | Not Done | task1","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"D | Done | task2 | 2019-12-12","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"E | Not Done | task3 | time1 | time2","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"HEEaZ":3}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HEEaZ"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"HEEaZ"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"    private static Pattern createCommand \u003d","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"            Pattern.compile(\"^deadline ?(?\u003ctaskName\u003e.*?)? ?(/by (?\u003cfinishByTime\u003e.*))?$\");","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"    private LocalDate finishByTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"    Deadline(String name, LocalDate finishByTime) {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"        this.finishByTime \u003d finishByTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"    Deadline(boolean isDone, String name, LocalDate finishByTime) {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"        super(name, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"        this.finishByTime \u003d finishByTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"    public static Deadline createDeadline(String command) throws LukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"        Matcher matcher \u003d createCommand.matcher(command);","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"        matcher.find();","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"        String taskName \u003d matcher.group(\"taskName\");","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"        if (taskName \u003d\u003d null || taskName.isBlank()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"HEEaZ"},"content":"        String finishByTime \u003d matcher.group(\"finishByTime\");","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"        if (finishByTime \u003d\u003d null || finishByTime.isBlank()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(\"The due date (/by ...) of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"HEEaZ"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"HEEaZ"},"content":"            return new Deadline(taskName, LocalDate.parse(finishByTime));","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"HEEaZ"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(\"Invalid date format\");","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"HEEaZ"},"content":"    public static Deadline createDeadline(String[] args, boolean isDone) throws LukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"HEEaZ"},"content":"        if (args.length !\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(\"Error creating Deadline: Incorrect number of arguments\");","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"HEEaZ"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"HEEaZ"},"content":"            return new Deadline(isDone, args[0], LocalDate.parse(args[1]));","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"HEEaZ"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(\"Error creating Deadline: Invalid date format\");","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"HEEaZ"},"content":"    public String toSaveStr() {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"HEEaZ"},"content":"        return \"D\"","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"HEEaZ"},"content":"                + \" | \" + super.toSaveStr()","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"HEEaZ"},"content":"                + \" | \" + finishByTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"HEEaZ"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"HEEaZ"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"HEEaZ"},"content":"                + \" (by: \" + finishByTime.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG)) + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"HEEaZ":65}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HEEaZ"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"    private static final String SAVED_TASKS_FILEPATH \u003d \"./data/savedTasks.txt\";","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"HEEaZ"},"content":"        greet();","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"            Task.readSavedTasks(SAVED_TASKS_FILEPATH);","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"        } catch (LukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"            Util.displayMessage(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"                processCommand(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"            } catch (LukeException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"                Util.displayMessage(e.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"            Task.saveTasksToFile(SAVED_TASKS_FILEPATH);","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"        } catch (LukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"            Util.displayMessage(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"        bye();","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"HEEaZ"},"content":"    private static void processCommand(String command) throws LukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"HEEaZ"},"content":"        Task task;","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"HEEaZ"},"content":"        switch(command.split(\" \")[0]) {","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"HEEaZ"},"content":"            case \"list\":","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"HEEaZ"},"content":"                Task.listTasks(command);","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"HEEaZ"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"HEEaZ"},"content":"            case \"mark\":","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"HEEaZ"},"content":"                task \u003d Task.markUnmarkTask(command);","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"HEEaZ"},"content":"                Util.displayMessage(\"Nice! I\u0027ve marked this task as done: \\n\" + task);","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"HEEaZ"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"HEEaZ"},"content":"            case \"unmark\":","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"HEEaZ"},"content":"                task \u003d Task.markUnmarkTask(command);","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"HEEaZ"},"content":"                Util.displayMessage(\"OK, I\u0027ve marked this task as not done yet: \\n\" + task);","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"HEEaZ"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"HEEaZ"},"content":"            case \"delete\":","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"HEEaZ"},"content":"                task \u003d Task.deleteTask(command);","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"HEEaZ"},"content":"                Util.displayMessage(\"Noted. I\u0027ve removed this task: \\n\" + task);","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"HEEaZ"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"HEEaZ"},"content":"            case \"todo\":","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"HEEaZ"},"content":"                // Fallthrough","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"HEEaZ"},"content":"            case \"deadline\":","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"HEEaZ"},"content":"                // Fallthrough","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"HEEaZ"},"content":"            case \"event\":","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"HEEaZ"},"content":"                task \u003d Task.addTask(command);","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"HEEaZ"},"content":"                Util.displayMessage(\"added : \" + task);","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"HEEaZ"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"HEEaZ"},"content":"            default:","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"HEEaZ"},"content":"                throw new LukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"HEEaZ"},"content":"    private static void bye() {","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"HEEaZ"},"content":"        Util.displayMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"HEEaZ"},"content":"    private static void greet() {","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"HEEaZ"},"content":"        String logo \u003d \" _           _        \\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"HEEaZ"},"content":"                    + \"| |    _   _| | _____ \\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"HEEaZ"},"content":"                    + \"| |   | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"HEEaZ"},"content":"                    + \"| |__ | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"HEEaZ"},"content":"                    + \"|____| \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"HEEaZ"},"content":"        String greetingMsg \u003d \"Hello! I\u0027m Luke \\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"HEEaZ"},"content":"                        + \"What can I do for you?\\n\";","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":79,"author":{"gitId":"HEEaZ"},"content":"        Util.displayMessage(greetingMsg);","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":81,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"HEEaZ":77,"-":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HEEaZ"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"public class Event extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"    private static Pattern createCommand \u003d","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"            Pattern.compile(\"^event ?(?\u003ctaskName\u003e.*?)? ?(/from (?\u003cstartTime\u003e.*?))? ?(/to (?\u003cendTime\u003e.*))?$\");","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"    private String startTime;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"HEEaZ"},"content":"    private String endTime;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"    Event(String name, String startTime, String endTime) {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"        this.startTime \u003d startTime.trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"        this.endTime \u003d endTime.trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"    Event(boolean isDone, String name, String startTime, String endTime) {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"        super(name, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"        this.startTime \u003d startTime.trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"        this.endTime \u003d endTime.trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"    public static Event createEvent(String command) throws LukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"        Matcher matcher \u003d createCommand.matcher(command);","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"        matcher.find();","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"        String taskName \u003d matcher.group(\"taskName\");","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"        if (taskName \u003d\u003d null || taskName.isBlank()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"HEEaZ"},"content":"        String startTime \u003d matcher.group(\"startTime\");","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"HEEaZ"},"content":"        if (startTime \u003d\u003d null || startTime.isBlank()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(\"The start time (/from ...) of an event cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"HEEaZ"},"content":"        String endTime \u003d matcher.group(\"endTime\");","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"HEEaZ"},"content":"        if (endTime \u003d\u003d null || endTime.isBlank()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(\"The end time (/end ...) of an event cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"HEEaZ"},"content":"        return new Event(taskName, startTime, endTime);","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"HEEaZ"},"content":"    public static Event createEvent(String[] args, boolean isDone) throws LukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"HEEaZ"},"content":"        if (args.length !\u003d 3) {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(\"Error creating Event: Incorrect number of arguments\");","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"HEEaZ"},"content":"        return new Event(isDone, args[0], args[1], args[2]);","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"HEEaZ"},"content":"    public String toSaveStr() {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"HEEaZ"},"content":"        return \"E\"","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"HEEaZ"},"content":"                + \" | \" + super.toSaveStr()","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"HEEaZ"},"content":"                + \" | \" + startTime","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"HEEaZ"},"content":"                + \" | \" + endTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"HEEaZ"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"HEEaZ"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + startTime + \" to: \" + endTime + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"HEEaZ":65}},{"path":"src/main/java/LukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HEEaZ"},"content":"public class LukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"    LukeException(String errorMessage) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"        super(\"☹ OOPS!!! \" + errorMessage);","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"HEEaZ":5}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HEEaZ"},"content":"import javafx.css.Match;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"import java.io.*;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"HEEaZ"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"    private static Pattern markUnmarkCommand \u003d Pattern.compile(\"^(mark|unmark) (?\u003ctaskNumber\u003e\\\\d*)$\");","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"    private static Pattern deleteCommand \u003d Pattern.compile(\"^delete (?\u003ctaskNumber\u003e\\\\d*)$\");","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"    private static ArrayList\u003cTask\u003e allTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"    private String name;","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"    Task(String name) {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"        this.name \u003d name.trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"        allTasks.add(this);","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"    Task(String name, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"        this.name \u003d name.trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"HEEaZ"},"content":"    public static void saveTasksToFile(String filepath) throws LukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"HEEaZ"},"content":"            FileWriter fw \u003d new FileWriter(filepath);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"HEEaZ"},"content":"            String inputTxt \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"HEEaZ"},"content":"            for (Task task : allTasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"HEEaZ"},"content":"                inputTxt +\u003d task.toSaveStr() + \"\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"HEEaZ"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"HEEaZ"},"content":"            fw.write(inputTxt.trim());","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"HEEaZ"},"content":"            fw.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"HEEaZ"},"content":"            Util.displayMessage(\"Tasks successfully saved into \u0027\" + filepath + \"\u0027\");","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"HEEaZ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(\"Error writing saved tasks into \u0027\" + filepath","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"HEEaZ"},"content":"                    + \"\u0027\\n\\n Save aborted\");","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"HEEaZ"},"content":"    public static void readSavedTasks(String filepath) throws LukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"HEEaZ"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"HEEaZ"},"content":"            File f \u003d new File(filepath);","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"HEEaZ"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"HEEaZ"},"content":"            while(s.hasNext()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"HEEaZ"},"content":"                String savedData \u003d s.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"HEEaZ"},"content":"                String[] taskDetails \u003d Arrays.stream(savedData.split(\"\\\\|\")).map(String::trim).toArray(String[]::new);","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"HEEaZ"},"content":"                if (taskDetails.length \u003c 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"HEEaZ"},"content":"                    throw new LukeException(\"Unknown data \u0027\" + savedData + \"\u0027\");","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"HEEaZ"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"HEEaZ"},"content":"                boolean isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"HEEaZ"},"content":"                switch (taskDetails[1]) {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"HEEaZ"},"content":"                    case \"Done\":","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"HEEaZ"},"content":"                        isDone \u003d true;","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"HEEaZ"},"content":"                        break;","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"HEEaZ"},"content":"                    case \"Not Done\":","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"HEEaZ"},"content":"                        isDone \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"HEEaZ"},"content":"                        break;","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"HEEaZ"},"content":"                    default:","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"HEEaZ"},"content":"                        throw new LukeException(\"Task neither \u0027Done\u0027 nor \u0027Not Done\u0027\");","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"HEEaZ"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"HEEaZ"},"content":"                Task createdTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"HEEaZ"},"content":"                switch (taskDetails[0]) {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"HEEaZ"},"content":"                    case \"T\":","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"HEEaZ"},"content":"                        createdTask \u003d Todo.createTodo(Arrays.copyOfRange(taskDetails, 2, taskDetails.length), isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"HEEaZ"},"content":"                        break;","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"HEEaZ"},"content":"                    case \"D\":","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"HEEaZ"},"content":"                        createdTask \u003d Deadline.createDeadline(Arrays.copyOfRange(taskDetails, 2, taskDetails.length), isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"HEEaZ"},"content":"                        break;","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"HEEaZ"},"content":"                    case \"E\":","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"HEEaZ"},"content":"                        createdTask \u003d Event.createEvent(Arrays.copyOfRange(taskDetails, 2, taskDetails.length), isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"HEEaZ"},"content":"                        break;","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"HEEaZ"},"content":"                    default:","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"HEEaZ"},"content":"                        throw new LukeException(\"Unknown Task Type \u0027\" + taskDetails[0] +\"\u0027\");","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"HEEaZ"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"HEEaZ"},"content":"                allTasks.add(createdTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"HEEaZ"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"HEEaZ"},"content":"            Util.displayMessage(\"Saved file successfully loaded from \u0027\" + filepath + \"\u0027\");","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"HEEaZ"},"content":"        } catch (LukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"HEEaZ"},"content":"            // Drop all tasks if exception encountered","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"HEEaZ"},"content":"            allTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"HEEaZ"},"content":"                    \"Error reading saved tasks from \u0027\" + filepath + \"\u0027: \\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"HEEaZ"},"content":"                            + e.getMessage() + \"\\n\\n No tasks loaded\"","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"HEEaZ"},"content":"            );","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"HEEaZ"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"HEEaZ"},"content":"                    \"Could not find file \u0027\" + filepath + \"\u0027\\n\\n No tasks loaded\"","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"HEEaZ"},"content":"            );","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"HEEaZ"},"content":"    public static Task deleteTask(String command) throws LukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"HEEaZ"},"content":"        Matcher matcher \u003d deleteCommand.matcher(command);","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"HEEaZ"},"content":"        if (!matcher.find()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(\"Invalid format. Usage: delete {task_number}\");","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"HEEaZ"},"content":"        String taskNumber \u003d matcher.group(\"taskNumber\");","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"HEEaZ"},"content":"        if (taskNumber \u003d\u003d null || taskNumber.isBlank()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(\"Task number cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"HEEaZ"},"content":"        int taskIndex \u003d Integer.parseInt(taskNumber) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"HEEaZ"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d allTasks.size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(\"Invalid task number: no such task\");","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"HEEaZ"},"content":"        Task task \u003d allTasks.get(taskIndex);","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"HEEaZ"},"content":"        allTasks.remove(taskIndex);","lastModifiedDate":"2023-08-24"},{"lineNumber":121,"author":{"gitId":"HEEaZ"},"content":"        return task;","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":123,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":124,"author":{"gitId":"HEEaZ"},"content":"    public static Task markUnmarkTask(String command) throws LukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":125,"author":{"gitId":"HEEaZ"},"content":"        Matcher matcher \u003d markUnmarkCommand.matcher(command);","lastModifiedDate":"2023-08-24"},{"lineNumber":126,"author":{"gitId":"HEEaZ"},"content":"        if (!matcher.find()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":127,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(\"Invalid format. Usage: mark {task_number}\");","lastModifiedDate":"2023-08-24"},{"lineNumber":128,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":129,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":130,"author":{"gitId":"HEEaZ"},"content":"        String taskNumber \u003d matcher.group(\"taskNumber\");","lastModifiedDate":"2023-08-24"},{"lineNumber":131,"author":{"gitId":"HEEaZ"},"content":"        if (taskNumber \u003d\u003d null || taskNumber.isBlank()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":132,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(\"Task number cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":133,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":134,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":135,"author":{"gitId":"HEEaZ"},"content":"        int taskIndex \u003d Integer.parseInt(taskNumber) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":136,"author":{"gitId":"HEEaZ"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d allTasks.size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":137,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(\"Invalid task number: no such task\");","lastModifiedDate":"2023-08-24"},{"lineNumber":138,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":139,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":140,"author":{"gitId":"HEEaZ"},"content":"        return setTaskIsDone(taskIndex, command.split(\" \")[0].equals(\"mark\"));","lastModifiedDate":"2023-08-24"},{"lineNumber":141,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":142,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":143,"author":{"gitId":"HEEaZ"},"content":"    public static void listTasks(String command) {","lastModifiedDate":"2023-08-24"},{"lineNumber":144,"author":{"gitId":"HEEaZ"},"content":"        String list \u003d \"\";","lastModifiedDate":"2023-08-24"},{"lineNumber":145,"author":{"gitId":"HEEaZ"},"content":"        for (int i \u003d 1; i \u003c\u003d allTasks.size(); i++) {","lastModifiedDate":"2023-08-24"},{"lineNumber":146,"author":{"gitId":"HEEaZ"},"content":"            list +\u003d i + \". \" + allTasks.get(i - 1).toString() + \"\\n\";","lastModifiedDate":"2023-08-24"},{"lineNumber":147,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":148,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":149,"author":{"gitId":"HEEaZ"},"content":"        if (list.isBlank()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":150,"author":{"gitId":"HEEaZ"},"content":"            Util.displayMessage(\"Congrats! You have no tasks!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":151,"author":{"gitId":"HEEaZ"},"content":"            return;","lastModifiedDate":"2023-08-24"},{"lineNumber":152,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":153,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":154,"author":{"gitId":"HEEaZ"},"content":"        Util.displayMessage(list.trim());","lastModifiedDate":"2023-08-24"},{"lineNumber":155,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":156,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":157,"author":{"gitId":"HEEaZ"},"content":"    public static Task addTask(String input) throws LukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":158,"author":{"gitId":"HEEaZ"},"content":"        Task task;","lastModifiedDate":"2023-08-24"},{"lineNumber":159,"author":{"gitId":"HEEaZ"},"content":"        switch (input.split(\" \")[0]) {","lastModifiedDate":"2023-08-24"},{"lineNumber":160,"author":{"gitId":"HEEaZ"},"content":"            case \"todo\":","lastModifiedDate":"2023-08-24"},{"lineNumber":161,"author":{"gitId":"HEEaZ"},"content":"                task \u003d Todo.createTodo(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":162,"author":{"gitId":"HEEaZ"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":163,"author":{"gitId":"HEEaZ"},"content":"            case \"deadline\":","lastModifiedDate":"2023-08-24"},{"lineNumber":164,"author":{"gitId":"HEEaZ"},"content":"                task \u003d Deadline.createDeadline(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":165,"author":{"gitId":"HEEaZ"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":166,"author":{"gitId":"HEEaZ"},"content":"            case \"event\":","lastModifiedDate":"2023-08-24"},{"lineNumber":167,"author":{"gitId":"HEEaZ"},"content":"                task \u003d Event.createEvent(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":168,"author":{"gitId":"HEEaZ"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":169,"author":{"gitId":"HEEaZ"},"content":"            default:","lastModifiedDate":"2023-08-24"},{"lineNumber":170,"author":{"gitId":"HEEaZ"},"content":"                throw new LukeException(\"Error processing command in addTask: \u0027\" + input + \"\u0027\");","lastModifiedDate":"2023-08-24"},{"lineNumber":171,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":172,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":173,"author":{"gitId":"HEEaZ"},"content":"        return task;","lastModifiedDate":"2023-08-24"},{"lineNumber":174,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":175,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":176,"author":{"gitId":"HEEaZ"},"content":"    public static Task setTaskIsDone(int taskNumber, boolean isDone) throws LukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":177,"author":{"gitId":"HEEaZ"},"content":"        Task task \u003d allTasks.get(taskNumber);","lastModifiedDate":"2023-08-24"},{"lineNumber":178,"author":{"gitId":"HEEaZ"},"content":"        if (task.isDone \u003d\u003d isDone) {","lastModifiedDate":"2023-08-24"},{"lineNumber":179,"author":{"gitId":"HEEaZ"},"content":"            String status \u003d isDone ? \"marked as done\" : \"marked as unfinished\";","lastModifiedDate":"2023-08-24"},{"lineNumber":180,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(\"Task: \u0027\" + task + \"\u0027 is already \" + status);","lastModifiedDate":"2023-08-24"},{"lineNumber":181,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":182,"author":{"gitId":"HEEaZ"},"content":"        task.isDone \u003d isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":183,"author":{"gitId":"HEEaZ"},"content":"        return task;","lastModifiedDate":"2023-08-24"},{"lineNumber":184,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":185,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":186,"author":{"gitId":"HEEaZ"},"content":"    public String toSaveStr() {","lastModifiedDate":"2023-08-30"},{"lineNumber":187,"author":{"gitId":"HEEaZ"},"content":"        return (isDone ? \"Done\" : \"Not Done\")","lastModifiedDate":"2023-08-30"},{"lineNumber":188,"author":{"gitId":"HEEaZ"},"content":"                + \" | \" + name;","lastModifiedDate":"2023-08-30"},{"lineNumber":189,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":190,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":191,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":192,"author":{"gitId":"HEEaZ"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":193,"author":{"gitId":"HEEaZ"},"content":"        String doneIndicator \u003d isDone ? \"x\" : \" \";","lastModifiedDate":"2023-08-23"},{"lineNumber":194,"author":{"gitId":"HEEaZ"},"content":"        return \"[\" + doneIndicator + \"] \" + name;","lastModifiedDate":"2023-08-23"},{"lineNumber":195,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":196,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"HEEaZ":196}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HEEaZ"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"    private static Pattern createCommand \u003d Pattern.compile(\"^todo( (?\u003ctaskName\u003e.*))?\");","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"    Todo(String name) {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"    Todo(boolean isDone, String name) {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"        super(name, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"    public static Todo createTodo(String command) throws LukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"        Matcher matcher \u003d createCommand.matcher(command);","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"        matcher.find();","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"        String taskName \u003d matcher.group(\"taskName\");","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"        if (taskName \u003d\u003d null || taskName.isBlank()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"        return new Todo(taskName);","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"    public static Todo createTodo(String[] args, boolean isDone) throws LukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"        if (args.length !\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"            throw new LukeException(\"Error creating Todo: Incorrect number of arguments\");","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"HEEaZ"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"HEEaZ"},"content":"        return new Todo(isDone, args[0]);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"HEEaZ"},"content":"    public String toSaveStr() {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"HEEaZ"},"content":"        return \"T\" + \" | \" + super.toSaveStr();","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"HEEaZ"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"HEEaZ"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"HEEaZ"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"HEEaZ":44}},{"path":"src/main/java/Util.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HEEaZ"},"content":"public class Util {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"    private static final String LINEBREAK \u003d \"    ＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿\";","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"     * Displays the given message between horizontal lines","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"     * @param msg String to output","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"HEEaZ"},"content":"    public static void displayMessage(String msg) {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"        System.out.println(LINEBREAK);","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"        System.out.println(indent(msg));","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"        System.out.println(LINEBREAK);","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"    private static String indent(String msg) {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"        return msg.replaceAll(\"(?m)^\", \"\\t\");","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"HEEaZ":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HEEaZ"},"content":"list","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"HEEaZ"},"content":"todo newly added task","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"HEEaZ"},"content":"deadline new deadline /by 2011-09-11","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"event yet another new event /from time1 /to time2","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"HEEaZ"},"content":"don\u0027t add this","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"deadline dont add this too","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"HEEaZ"},"content":"deadline bad date deadline /by some time","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"HEEaZ"},"content":"event dont add this too","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"HEEaZ"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"HEEaZ"},"content":"mark 4","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"HEEaZ"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"HEEaZ"},"content":"unmark 1","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"HEEaZ":16}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"HEEaZ"},"content":"if [ ! -d \"./bin\" ]","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"HEEaZ"},"content":"    mkdir ./bin","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"HEEaZ"},"content":"if [ -e \"./text-ui-test/ACTUAL.TXT\" ]","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"HEEaZ"},"content":"    rm ./text-ui-test/ACTUAL.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"HEEaZ"},"content":"# Rename saveTasks data","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"HEEaZ"},"content":"if [ -e \"./data/savedTasks.txt\" ]","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"HEEaZ"},"content":"then","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"HEEaZ"},"content":"  mv ./data/savedTasks.txt ./data/savedTasksTmp.txt","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"HEEaZ"},"content":"fi","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"HEEaZ"},"content":"# Ensure existence of defaults saved tasks to use","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"HEEaZ"},"content":"if ! [ -e \"./data/savedTasksDefaults.txt\" ]","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"HEEaZ"},"content":"then","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"HEEaZ"},"content":"  echo \"************ BUILD FAILURE: Cannot load default savedTasks ************\"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"HEEaZ"},"content":"fi","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"HEEaZ"},"content":"# Create copy of defaults to be used for the test","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"HEEaZ"},"content":"cp ./data/savedTasksDefaults.txt ./data/savedTasks.txt","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"HEEaZ"},"content":"if ! javac -cp ./src/main/java -Xlint:none -d ./bin ./src/main/java/*.java","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"HEEaZ"},"content":"java -classpath ./bin Duke \u003c ./text-ui-test/input.txt \u003e ./text-ui-test/ACTUAL.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"HEEaZ"},"content":"# Relocate and rename savedTasks","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"HEEaZ"},"content":"mv ./data/savedTasks.txt ./text-ui-test/ACTUAL-SAVED.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"HEEaZ"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"HEEaZ"},"content":"# Restore previous savedTask (if any)","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"HEEaZ"},"content":"if [ -e \"./data/savedTasksTmp.txt\" ]","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"HEEaZ"},"content":"then","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"HEEaZ"},"content":"  mv ./data/savedTasksTmp.txt ./data/savedTasks.txt","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"HEEaZ"},"content":"fi","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"HEEaZ"},"content":"cp ./text-ui-test/EXPECTED.TXT ./text-ui-test/EXPECTED-UNIX.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"HEEaZ"},"content":"dos2unix ./text-ui-test/ACTUAL.TXT ./text-ui-test/EXPECTED-UNIX.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"HEEaZ"},"content":"diff ./text-ui-test/ACTUAL.TXT ./text-ui-test/EXPECTED-UNIX.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"HEEaZ":32,"-":30}}]
